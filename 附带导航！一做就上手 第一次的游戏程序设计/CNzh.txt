Ending.msbt
000	那么，让我再次向你介绍\n编程中不可或缺的小节点们！
001-00	请指教！
001-01	转呀转——
002-00	哎呀！\n你的表情变得这么自信了。
003-00	{[0201]}制作的游戏，\n真令我迫不及待！
004-00	唔……\n我看好你哦。
005-00	从此启程，\n　探究未知，\n　　开拓世界。
006-00	从今往后～～♪
006-01	请继续多多关照，耶！
007-00	啊……\n{[0201]}好厉害啊……
008-00	今后也请多关照哦！
009-00	……你好，\n以后也请多照应了。
010-00	接下来轮到你独立制作游戏了，\n尽情描绘你理想的画面吧……
010-01	哎呀～～！可喜可贺啊！\n{[0201]}！
011-01	哦～\n{[0201]}也终于\n可以自由发挥了啊。
012-00	噫……！\n请不要吓我……
013-00	来！\n一边编程一边做深蹲吧！
014-00	哎哟～\n{[0201]}！\n你是我一辈子的朋友对吧～～！？
015-00	{[0201]}！\n你已经是个大明星啦！
016-00	……有两下子啊。
017-00	你终于……\n铸就了伟业。
Inter00	接下来介绍\n未在课堂中登场的小节点们。
018-00	嘿呀～～～！
019-00	嗨！{[0201]}！\n有事尽管分派！
020-00	请不要忘记我们！
021-00	快乐的时光总有一天会结束……
022-00	呵呵……\n我们也同样活跃在第一线哦！
023-00	呼呼……\n尽情领略感应器的无穷奥妙吧。
024-00	{[0201]}，\n请将你的爱～多多地分给游戏。
025-00	我们是！
025-01	照相机小队！
026-00	真是头疼。
End00	今后也请……
End01	使用小节点们\n尽享游戏编程的乐趣吧！
GameDefaultName.msbt
01	二人对战！捉迷藏大战
02	滚滚球
03	ALIEN SHOOTING
04	GO！GO！运动竞技
05	解谜房间
06	刺激赛车
07	{[0201]}的游戏
GuidebookName.msbt
Basic	小节点车库的基本
StickAndHuman	用摇杆移动人的原理
Compare	用比较小节点判定条件！
GameCamera	游戏画面小节点的工作
Attribute	物体状态的基本
BreakAndRetry	物体损坏时\n自动让游戏重来的原理
Shot	大闹一场！发射物体小节点
ViewChange	切换视角与游戏空间的方向
AxisAngle	转来转去的倾斜小节点
MoveRigid	跑吧！移动物体小节点
Calculation	高性能？计算小节点
Count	计算损坏物体数量的原理
Warp	幻觉！？传送物体
Ufo	不明飞行小节点：UFO小节点
Scroll	让游戏画面滚动的原理
AdvancedBreakProperties	能破坏、能损坏的详细设置
Not	爱唱反调的NOT小节点
And	没问题没问题！AND小节点
MoveFancyRigid	时尚物体小节点教教你！\n最新的穿搭技术
ConnectGameCamera	让游戏画面跟上来的原理
FallAndBreak	掉落后就会损坏的原理
HingeRotate	来跳舞吧！铰链连接小节点
HingeSlide	偏移吧！滑动连接小节点
OnOffFlag	开启？关闭？旗标小节点
PunchAndBreak	用拳击破坏物体的原理
FreeSlide	自由自在的家伙\n自由滑动连接小节点
BreakCounter	拳击3次就会损坏的原理
ThirdPersonCamera	照相机小节点的神技
CarNode	滴滴叭叭呜！汽车小节点
DifferentCollision	将物体分别处理的原理
JudgeWinOrLose	胜负判定程序的原理
AutoPilot	自动驾驶程序的原理
PrintDebug	用带数字物体小节点调试！？
CountDown	倒数程序的原理
Connection	连接的基本
RotateRigid	转圈圈吧♪\n旋转物体小节点
Guidebook_AdvancedBreakProperties.msbt
000	你好，\n{[0201]}。
001	画面中有人、球体和立方体……
001-01	这三者的“{color[0400]}{[0001|1b00]}能破坏{[0001|ffff]}{color[ffff]}”和“{color[0400]}{[0001|1b00]}能损坏{[0001|ffff]}{color[ffff]}”\n都处于{color[0400]}{[0001|1b00]}开启{[0001|ffff]}{color[ffff]}状态。
001-02	你可以用{color[0400]}{[0001|1b00]}摇杆{[0001|ffff]}{color[ffff]}和{color[0400]}{[0001|1b00]}键{[0001|ffff]}{color[ffff]}来控制人，\n让人去撞击球体和立方体看看吧。
001-03	现在，不管哪个和哪个发生碰撞，\n都只有两者同时损坏这一种结果……
002	我希望改成{color[0400]}{[0001|1b00]}人能滚动球体{[0001|ffff]}{color[ffff]}……
002-01	并且人滚动的{color[0400]}{[0001|1b00]}球体能破坏立方体{[0001|ffff]}{color[ffff]}。
010	我们去程序画面试试看吧。
011	嗨！\n{[0201]}！
011-01	……唔。\n想让人能滚动球体是吧。
011-02	这好办，改一下{[0001|1b00]}{color[0400]}状态{color[ffff]}{[0001|ffff]}就行。
011-03	……
011-04	这么基础的操作，\n你应该早就会了吧？
011-05	被这样小看可不能忍气吞声，\n是吧，{[0201]}？
011-06	来，选中{[0001|1b00]}球体{[0001|ffff]}物体小节点……
011-07	打开设置，\n更改{[0001|1b00]}状态{[0001|ffff]}给他看。
011-08	首先，为了让球体不会损坏……
011-09	需要把“{color[0400]}{[0001|1b00]}能损坏{[0001|ffff]}{color[ffff]}”设置为{color[0400]}{[0001|1b00]}关闭{[0001|ffff]}{color[ffff]}。
011-10	然后，为了让球体不会把人破坏……
011-11	需要把“{color[0400]}{[0001|1b00]}能破坏{[0001|ffff]}{color[ffff]}”设置为{color[0400]}{[0001|1b00]}关闭{[0001|ffff]}{color[ffff]}。
011-12	这样一来，\n人应该就能滚动球体了。
011-13	关闭设置画面……
057	去游戏画面确认一下吧。
058	让人去接触球体，\n看看能不能让球体滚动。
059	人成功滚动了球体。
060	但是……\n球体撞击立方体后，\n并没有破坏立方体……
060-00	我们希望球体接触立方体后\n能破坏立方体。
060-01	但要是把球体的“{color[0400]}{[0001|1b00]}能破坏{[0001|ffff]}{color[ffff]}”\n设置为{color[0400]}{[0001|1b00]}开启{[0001|ffff]}{color[ffff]}……\n那{color[0400]}{[0001|1b00]}人{[0001|ffff]}{color[ffff]}接触了球体也会{color[0400]}{[0001|1b00]}损坏{[0001|ffff]}{color[ffff]}。
060-02	虽然只要更改人的{[0001|1b00]}状态{[0001|ffff]}\n就能让人不会损坏……
061	但这次我要教你的是\n{color[0400]}{[0001|1b00]}不更改人的状态也能解决问题的方法{[0001|ffff]}{color[ffff]}。
062	那么，请前往程序画面。
078	……唔。\n想让球体不破坏人，\n{color[0400]}{[0001|1b00]}只破坏立方体{[0001|ffff]}{color[ffff]}是吗？
078-01	如果是这样的话，\n倒是有个好方法。
078-02	……
078-03	搞定了吗？
078-04	……麻烦你要说就好好说。
078-05	来，{[0201]}，\n请选中{[0001|1b00]}球体{[0001|ffff]}物体小节点……
078-06	打开设置画面。
078-07	请看“{color[0400]}{[0001|1b00]}能破坏{[0001|ffff]}{color[ffff]}”旁边的小{color[0400]}{[0001|1b00]}按键{[0001|ffff]}{color[ffff]}。
088	这个按键可以打开\n“{color[0400]}{[0001|1b00]}能破坏{[0001|ffff]}{color[ffff]}”{color[0400]}{[0001|1b00]}的详细设置{[0001|ffff]}{color[ffff]}。
089	按下这个按键，\n打开“{color[0400]}{[0001|1b00]}能破坏{[0001|ffff]}{color[ffff]}”{color[0400]}{[0001|1b00]}的详细设置{[0001|ffff]}{color[ffff]}看看吧。
090	在详细设置中，\n可以一一指定{color[0400]}{[0001|1b00]}想要破坏的目标{[0001|ffff]}{color[ffff]}。
091	要是只想破坏立方体的话……\n就把{color[0400]}{[0001|1b00]}立方体{[0001|ffff]}{color[ffff]}设置为{color[0400]}{[0001|1b00]}开启{[0001|ffff]}{color[ffff]}。
091-01	这样球体应该就\n{color[0400]}{[0001|1b00]}只会破坏立方体{[0001|ffff]}{color[ffff]}了。
092	关闭详细设置。
093	再关闭设置。
095	去游戏画面确认一下吧。
096	让人滚动球体……\n用球体去撞击立方体。
097	即使接触到球体\n{color[0400]}{[0001|1b00]}人也不会损坏{[0001|ffff]}{color[ffff]}……
098	但当球体撞击立方体时，\n{color[0400]}{[0001|1b00]}立方体损坏了{[0001|ffff]}{color[ffff]}。
099	球体现在{color[0400]}{[0001|1b00]}只会破坏立方体{[0001|ffff]}{color[ffff]}。
103	很好，那我们再进一步……
104	在球体撞击立方体时……\n让{color[0400]}{[0001|1b00]}球体{[0001|ffff]}{color[ffff]}本身也{color[0400]}{[0001|1b00]}会损坏{[0001|ffff]}{color[ffff]}吧。
104-01	如果只是单纯把球体的“{color[0400]}{[0001|1b00]}能损坏{[0001|ffff]}{color[ffff]}”\n设置为{color[0400]}{[0001|1b00]}开启{[0001|ffff]}{color[ffff]}，那么当人接触到\n球体时，球体也会损坏……
104-02	所以，我们需要把球体设置为\n{color[0400]}{[0001|1b00]}只有在接触立方体时{[0001|ffff]}{color[ffff]}才会损坏。
105	请前往程序画面。
109	……唔。\n想让球体只有在接触立方体时\n才会损坏？
110-01	……
110-02	不用我说，\n你差不多也明白该怎么做了吧？
110-03	来吧，{[0201]}。\n虽然你可能已经知道了，\n但还是跟着我做一遍吧。
111	请选中{[0001|1b00]}球体{[0001|ffff]}物体小节点。
112	打开设置。
112-01	请看“{[0001|1b00]}能损坏{[0001|ffff]}”旁边的小按键。
113	这个按键可以打开\n“{color[0400]}{[0001|1b00]}能损坏{[0001|ffff]}{color[ffff]}”{color[0400]}{[0001|1b00]}的详细设置{[0001|ffff]}{color[ffff]}。
114	打开“能损坏”的详细设置。
114-01	在“{color[0400]}{[0001|1b00]}能损坏{[0001|ffff]}{color[ffff]}”{color[0400]}{[0001|1b00]}的详细设置{[0001|ffff]}{color[ffff]}中，\n可以一一指定{color[0400]}{[0001|1b00]}接触到什么目标时\n会发生损坏{[0001|ffff]}{color[ffff]}。
115	要是只想在接触到立方体时\n发生损坏……
116	就把{color[0400]}{[0001|1b00]}立方体{[0001|ffff]}{color[ffff]}设置为{color[0400]}{[0001|1b00]}开启{[0001|ffff]}{color[ffff]}。
117	关闭详细设置。
118	再关闭设置。
119	去游戏画面确认一下吧。
120	让人滚动球体……\n用球体去撞击立方体看看。
121	……球体和立方体都损坏了。
122	而人撞击到球体时，\n人和球体都不会损坏。
125	这样一来，\n人滚动球体去破坏立方体的\n目标就达成了。
126	请返回程序画面。
127	像这样，\n利用{color[0400]}{[0001|1b00]}状态的详细设置{[0001|ffff]}{color[ffff]}……
128	就能构建更复杂的\n“能破坏”和“能损坏”的程序。
129	……没错。\n用好这些技巧，\n是成为超级程序员的必要条件哦。
Guidebook_And.msbt
000	……你好。
002	请尝试{color[0400]}{[0001|1b00]}同时{[0001|ffff]}{color[ffff]}按下{[0001|1b00]}{color[0400]}键{color[ffff]}{[0001|ffff]}和{[0001|1b00]}{color[0400]}键{color[ffff]}{[0001|ffff]}。
003	{[0001|1b00]}{color[0400]}烟花{color[ffff]}{[0001|ffff]}盛开。
004	{[0001|1b00]}{color[0400]}只按下键{color[ffff]}{[0001|ffff]}或{[0001|1b00]}{color[0400]}只按下键{color[ffff]}{[0001|ffff]}，\n都不会出现烟花。
005	只有在{[0001|1b00]}{color[0400]}同时按下两个按键时{color[ffff]}{[0001|ffff]}，\n烟花才会盛开……
006	本次要讲解就是这一现象的原理。
007	那么，请前往程序画面。
008	{[0201]}！\n你好你好～！
010	想了解{[0001|1b00]}{color[0400]}同时按下键{color[ffff]}{[0001|ffff]}和{[0001|1b00]}{color[0400]}键{color[ffff]}{[0001|ffff]}时\n{[0001|1b00]}{color[0400]}烟花盛开{color[ffff]}{[0001|ffff]}的原理，对不对？
011	这种小事～\n放心交给我们就好啦！
012	绝对认认真真！仔仔细细！\n教得你一知半解！
013	……什么！\n只能教到一知半解的程度吗～！\n这也太坑了吧～～～～～！！
014	……\n……
015	{[0001|1b00]}{color[0400]}什么时候2个按键被同时按下{color[ffff]}{[0001|ffff]}……\n{[0001|1b00]}{color[0400]}AND小节点{color[ffff]}{[0001|ffff]}会告诉我。
016	右边没问题！左边没问题！\n很好！
017	你好，\n{[0201]}。\n我是{[0001|1b00]}{color[0400]}AND小节点{color[ffff]}{[0001|ffff]}。
018	没问题没问题！\n我的作用是{[0001|1b00]}{color[0400]}仅在两边都没问题时\n{color[ffff]}{[0001|ffff]}输出信号！
019	{[0001|1b00]}{color[0400]}AND{color[ffff]}{[0001|ffff]}就是“{[0001|1b00]}{color[0400]}并且{color[ffff]}{[0001|ffff]}”的意思。
020	我拥有{color[0400]}{[0001|1b00]}2个输入端口{[0001|ffff]}{color[ffff]}……
021	只有在{color[0400]}{[0001|1b00]}上方端口{[0001|ffff]}{color[ffff]}存在{color[0400]}{[0001|1b00]}输入{[0001|ffff]}{color[ffff]}，\n并且{color[0400]}{[0001|1b00]}下方端口也{[0001|ffff]}{color[ffff]}存在{color[0400]}{[0001|1b00]}输入{[0001|ffff]}{color[ffff]}时……
022	我才会{color[0400]}{[0001|1b00]}输出信号{[0001|ffff]}{color[ffff]}！
025	请指教！\n我会在{[0001|1b00]}{color[0400]}键被按下时{color[ffff]}{[0001|ffff]}发送信号！
026	嚯嚯！\n{[0001|1b00]}{color[0400]}键被按下{color[ffff]}{[0001|ffff]}……\n是第一个条件。
028	请指教！\n我是{[0001|1b00]}{color[0400]}键{color[ffff]}{[0001|ffff]}！
029	嚯嚯！\n第二个条件就是\n{[0001|1b00]}{color[0400]}键被按下{color[ffff]}{[0001|ffff]}。
030	输入端口1，没问题！\n输入端口2，没问题！\n很好！
031	{[0001|1b00]}{color[0400]}特效小节点{color[ffff]}{[0001|ffff]}，\n我要发送{[0001|1b00]}{color[0400]}信号{color[ffff]}{[0001|ffff]}了哟！
032	收到！等信号到达我这里后，\n我就会“嘭～”地燃放{[0001|1b00]}{color[0400]}烟花{color[ffff]}{[0001|ffff]}！
033	这就是\n{[0001|1b00]}{color[0400]}同时按下键和键时\n能看到烟花盛开{color[ffff]}{[0001|ffff]}的原理！
034	那么，{[0201]}，\n你想不想换别的{[0001|1b00]}{color[0400]}按键{color[ffff]}{[0001|ffff]}试试？
035	再叫一个{[0001|1b00]}{color[0400]}按键小节点{color[ffff]}{[0001|ffff]}出来吧。
036	请指教！\n你想知道{[0001|1b00]}{color[0400]}键{color[ffff]}{[0001|ffff]}有没有\n被按下是吧！
037	我们来更改一下{[0001|1b00]}{color[0400]}AND小节点{color[ffff]}{[0001|ffff]}的输入。
038	删除与{[0001|1b00]}{color[0400]}键连接{color[ffff]}{[0001|ffff]}的{[0001|1b00]}{color[0400]}线{color[ffff]}{[0001|ffff]}。
039	改为与{[0001|1b00]}{color[0400]}键{color[ffff]}{[0001|ffff]}的按键小节点连接。
040	嚯嚯！第二个条件变为\n{[0001|1b00]}{color[0400]}键被按下{color[ffff]}{[0001|ffff]}……是吗？
041	当{color[0400]}{[0001|1b00]}键和键{[0001|ffff]}{color[ffff]}两者都没问题时，\n我就会输出信号！
043	去游戏画面确认一下吧。
044	请{[0001|1b00]}{color[0400]}同时{color[ffff]}{[0001|ffff]}按下{[0001|1b00]}{color[0400]}键{color[ffff]}{[0001|ffff]}和{[0001|1b00]}{color[0400]}键{color[ffff]}{[0001|ffff]}。
045	烟花盛开。
047	说明当键和键被{[0001|1b00]}{color[0400]}同时按下{color[ffff]}{[0001|ffff]}时，\n{color[0400]}{[0001|1b00]}AND小节点{[0001|ffff]}{color[ffff]}输出了信号。
048	请返回程序画面。
049	欢迎回来。
051	再教你一招～\n如果用上2个{[0001|1b00]}{color[0400]}AND小节点{color[ffff]}{[0001|ffff]}……
052	还可以把{[0001|1b00]}{color[0400]}信号{color[ffff]}{[0001|ffff]}的输出条件\n{[0001|1b00]}{color[0400]}增加到3个{color[ffff]}{[0001|ffff]}哟～！
056	那就再请一个{[0001|1b00]}{color[0400]}AND小节点{color[ffff]}{[0001|ffff]}登场吧。
057	没问题没问题！\n想设置成什么条件呢？
057-01	首先删除连接在{color[0400]}{[0001|1b00]}AND小节点{[0001|ffff]}{color[ffff]}\n和{color[0400]}{[0001|1b00]}特效小节点{[0001|ffff]}{color[ffff]}之间的线。
058	然后把{[0001|1b00]}{color[0400]}AND小节点{color[ffff]}{[0001|ffff]}连接到\n新登场的{[0001|1b00]}{color[0400]}AND小节点{color[ffff]}{[0001|ffff]}的{[0001|1b00]}输入1端口{[0001|ffff]}。
059	再把{[0001|1b00]}{color[0400]}键{color[ffff]}{[0001|ffff]}的按键小节点\n也连接过来。
060	嚯嚯！\n把条件设置为{[0001|1b00]}{color[0400]}AND小节点输出信号{color[ffff]}{[0001|ffff]}，\n并且{[0001|1b00]}{color[0400]}键被按下{color[ffff]}{[0001|ffff]}对吗？没问题。
061	输出，没问题！
062	我会一如既往，\n{[0001|1b00]}{color[0400]}在键和键被同时按下时{color[ffff]}{[0001|ffff]}\n发送信号。
086	最后把新登场的{[0001|1b00]}{color[0400]}AND小节点{color[ffff]}{[0001|ffff]}\n和{[0001|1b00]}{color[0400]}特效小节点{color[ffff]}{[0001|ffff]}连接起来。
064	这样一来，\n在同时按住{[0001|1b00]}{color[0400]}键{color[ffff]}{[0001|ffff]}和{[0001|1b00]}{color[0400]}键{color[ffff]}{[0001|ffff]}的情况下，\n再按下{[0001|1b00]}{color[0400]}键{color[ffff]}{[0001|ffff]}……
065	也就是说{color[0400]}{[0001|1b00]}同时按下\n键、键和键这3个按键{[0001|ffff]}{color[ffff]}时，\n烟花才会盛开。
071	请前往游戏画面。
072	来吧，\n同时按下{[0001|1b00]}{color[0400]}、、{color[ffff]}{[0001|ffff]}这3个按键。
073	烟花盛开。
074	只{[0001|1b00]}{color[0400]}按下2个按键{color[ffff]}{[0001|ffff]}时，\n{color[0400]}{[0001|1b00]}烟花不会出现{[0001|ffff]}{color[ffff]}。
076	通过组合多个{[0001|1b00]}{color[0400]}AND小节点{color[ffff]}{[0001|ffff]}，\n就能增加{[0001|1b00]}{color[0400]}信号{color[ffff]}{[0001|ffff]}的输出条件。
077	请返回程序画面。
078	输入端口1，没问题！
079	输入端口2，没问题！
080	烟花，没问题！
081	{[0201]}，\n希望你能多多使用{[0001|1b00]}{color[0400]}AND小节点{color[ffff]}{[0001|ffff]}，\n创造出大家都称赞“没问题！”的优秀程序～
082	那就下回再见啦！
Guidebook_Attribute.msbt
000	……你好。
001	现在我们在游戏画面中，\n可以看到一个{[0001|1b00]}{color[0400]}蓝色立方体{color[ffff]}{[0001|ffff]}……
002	掉到了{[0001|1b00]}{color[0400]}平面{color[ffff]}{[0001|ffff]}上。
003	想再看一次的话，\n请按{[0001|1b00]}{color[0400]}重来键{color[ffff]}{[0001|ffff]}。
004	现在来尝试让这个{[0001|1b00]}{color[0400]}物体{color[ffff]}{[0001|ffff]}\n{[0001|1b00]}{color[0400]}不要掉下来{color[ffff]}{[0001|ffff]}吧。
005	好了，去{[0001|1b00]}{color[0400]}程序画面{color[ffff]}{[0001|ffff]}吧。
006	……哦。
007	{[0201]}，\n你好。
008	找我有什么事吗？
009	……我明白了，你想知道\n{[0001|1b00]}{color[0400]}不让物体掉落下来{color[ffff]}{[0001|ffff]}的方法啊。
010	这种情况可以使用{[0001|1b00]}{color[0400]}状态{color[ffff]}{[0001|ffff]}来解决问题。
011	……
012	问题解决了吗？
013	……你这么讲解，\n别人是听不懂的啦。
014	……哦。\n对不起。\n我不是很会说话。
015	打开设置，在{[0001|1b00]}{color[0400]}状态{color[ffff]}{[0001|ffff]}中\n把“{color[0400]}{[0001|1b00]}能移动{[0001|ffff]}{color[ffff]}”设为{[0001|1b00]}{color[0400]}关闭{color[ffff]}{[0001|ffff]}就可以了。
016	谢谢。
017	那么接下来，\n我们就来更改{color[0400]}{[0001|1b00]}状态{[0001|ffff]}{color[ffff]}吧。
018	按下{[0001|1b00]}{color[0400]}设置键{color[ffff]}{[0001|ffff]}。
019	这里就是{[0001|1b00]}{color[0400]}状态{color[ffff]}{[0001|ffff]}。
020	顾名思义，\n可以在这里设置\n{[0001|1b00]}{color[0400]}所需的物体状态{color[ffff]}{[0001|ffff]}。
021	总之……\n你先试试把物体小节点所说的\n“{[0001|1b00]}{color[0400]}能移动{color[ffff]}{[0001|ffff]}”{[0001|1b00]}{color[0400]}关闭{color[ffff]}{[0001|ffff]}。
022	然后关闭设置画面……
023	去游戏画面进行确认。
024	物体{[0001|1b00]}{color[0400]}不再掉下来了{color[ffff]}{[0001|ffff]}。
025	刚才，我们在物体小节点的设置画面中，\n把{color[0400]}{[0001|1b00]}状态{[0001|ffff]}{color[ffff]}里的“{color[0400]}{[0001|1b00]}能移动{[0001|ffff]}{color[ffff]}”设为了{[0001|1b00]}{color[0400]}关闭{color[ffff]}{[0001|ffff]}……
026	{[0001|1b00]}{color[0400]}关闭{color[ffff]}{[0001|ffff]}了“{color[0400]}{[0001|1b00]}能移动{[0001|ffff]}{color[ffff]}”后，\n物体将不再移动……\n所以{[0001|1b00]}{color[0400]}不会再掉下来了{color[ffff]}{[0001|ffff]}。
027	那么，我们再次打开程序画面，\n把“{color[0400]}{[0001|1b00]}能移动{[0001|ffff]}{color[ffff]}”设为{[0001|1b00]}{color[0400]}开启{color[ffff]}{[0001|ffff]}，\n看看会发生什么变化吧。
028	打开物体小节点的设置画面。
029	把刚才关闭掉的“{color[0400]}{[0001|1b00]}能移动{[0001|ffff]}{color[ffff]}”\n重新设为{[0001|1b00]}{color[0400]}开启{color[ffff]}{[0001|ffff]}。
030	关闭设置画面。
031	让我们再来看一看。
032	当把“{color[0400]}{[0001|1b00]}能移动{[0001|ffff]}{color[ffff]}”设为{[0001|1b00]}{color[0400]}开启{color[ffff]}{[0001|ffff]}之后，\n物体就又可以移动了……
033	所以又会{[0001|1b00]}{color[0400]}掉下来了{color[ffff]}{[0001|ffff]}。
034	要想让物体不掉下来，\n只需要更改{color[0400]}{[0001|1b00]}状态{[0001|ffff]}{color[ffff]}就能做到，明白了吗？
035	好了，让我们返回程序画面吧。
036	……欢迎回来。
037	更改了{[0001|1b00]}{color[0400]}状态{color[ffff]}{[0001|ffff]}后，\n物体就不再掉下来了呢。
039	除此之外，还有许多种{color[0400]}{[0001|1b00]}状态{[0001|ffff]}{color[ffff]}哦。
040	……
041	你要不要尝试一下\n更改其他的{color[0400]}{[0001|1b00]}状态{[0001|ffff]}{color[ffff]}？
042	……要是想让人帮你更改状态，\n只要直说不就好了嘛。
043	{[0201]}，\n去看看其他的{color[0400]}{[0001|1b00]}状态{[0001|ffff]}{color[ffff]}吧。
044	打开设置画面。
045	这一次把“{[0001|1b00]}{color[0400]}能接触{color[ffff]}{[0001|ffff]}”{[0001|1b00]}{color[0400]}关闭{color[ffff]}{[0001|ffff]}。
046	关闭设置画面。
047	尝试想象一下，会出现怎样的结果吧。
048	物体{[0001|1b00]}{color[0400]}穿过了平面{color[ffff]}{[0001|ffff]}继续往下掉。
100	当把“{color[0400]}{[0001|1b00]}能接触{[0001|ffff]}{color[ffff]}”设为{[0001|1b00]}{color[0400]}关闭{color[ffff]}{[0001|ffff]}后，\n物体将不再{[0001|1b00]}{color[0400]}和任何事物发生接触{color[ffff]}{[0001|ffff]}。
051	让我们来更深入地尝试一下吧。
052	现在有请……
053	另一位{[0001|1b00]}{color[0400]}物体小节点{color[ffff]}{[0001|ffff]}\n隆重登场。
112	……大家好，\n我现在是一个{[0001|1b00]}{color[0400]}球体{color[ffff]}{[0001|ffff]}。
118	现在，平面上有一个球体……
119	接下来，\n{[0001|1b00]}{color[0400]}立方体{color[ffff]}{[0001|ffff]}会从上方向着球体掉落下来。
114	让我们看看结果会是什么样吧。
115	立方体{[0001|1b00]}{color[0400]}也穿过了球体{color[ffff]}{[0001|ffff]}，\n继续往下掉。
116	这说明，把“{[0001|1b00]}{color[0400]}能接触{color[ffff]}{[0001|ffff]}”设为{[0001|1b00]}{color[0400]}关闭{color[ffff]}{[0001|ffff]}后，\n就可以{[0001|1b00]}{color[0400]}穿过一切物体{color[ffff]}{[0001|ffff]}了。
117	现在前往{[0001|1b00]}{color[0400]}程序画面{color[ffff]}{[0001|ffff]}。
056	接下来……\n就让我们来看看{[0001|1b00]}{color[0400]}物体间相互接触时{color[ffff]}{[0001|ffff]}的情况吧。
057	打开设置画面。
058	把“{[0001|1b00]}{color[0400]}能接触{color[ffff]}{[0001|ffff]}”改回{[0001|1b00]}{color[0400]}开启{color[ffff]}{[0001|ffff]}。
059	按下关闭键。
060	这一次，{[0001|1b00]}{color[0400]}立方体{color[ffff]}{[0001|ffff]}和{[0001|1b00]}{color[0400]}球体{color[ffff]}{[0001|ffff]}会发生什么呢？
061	由于我们把“{[0001|1b00]}{color[0400]}能接触{color[ffff]}{[0001|ffff]}”设为了{[0001|1b00]}{color[0400]}开启{color[ffff]}{[0001|ffff]}……
062	立方体没有穿过球体，\n而是和球体{[0001|1b00]}{color[0400]}碰撞后损坏了{color[ffff]}{[0001|ffff]}。
063	物体在碰撞时会{[0001|1b00]}{color[0400]}损坏{color[ffff]}{[0001|ffff]}……\n这其实也是{color[0400]}{[0001|1b00]}状态{[0001|ffff]}{color[ffff]}的一种。
064	让我们去{[0001|1b00]}{color[0400]}程序画面{color[ffff]}{[0001|ffff]}看看吧。
065	打开{[0001|1b00]}{color[0400]}设置画面{color[ffff]}{[0001|ffff]}。
066	尝试把“{color[0400]}{[0001|1b00]}能损坏{[0001|ffff]}{color[ffff]}”设为{[0001|1b00]}{color[0400]}关闭{color[ffff]}{[0001|ffff]}看看。
067	关闭设置。
068	现在掉落下来的{[0001|1b00]}{color[0400]}立方体{color[ffff]}{[0001|ffff]}的\n“{color[0400]}{[0001|1b00]}能损坏{[0001|ffff]}{color[ffff]}”变成了{[0001|1b00]}{color[0400]}关闭{color[ffff]}{[0001|ffff]}状态。
069	情况又会变成怎样呢？
070	{[0001|1b00]}{color[0400]}立方体{color[ffff]}{[0001|ffff]}掉下来和{[0001|1b00]}{color[0400]}球体{color[ffff]}{[0001|ffff]}发生碰撞后……
071	立方体{[0001|1b00]}{color[0400]}没有损坏{color[ffff]}{[0001|ffff]}，\n损坏了的只有球体。
071-01	把“{color[0400]}{[0001|1b00]}能损坏{[0001|ffff]}{color[ffff]}”设为{[0001|1b00]}{color[0400]}关闭{color[ffff]}{[0001|ffff]}后，\n物体就{[0001|1b00]}{color[0400]}变得不能损坏{color[ffff]}{[0001|ffff]}了。
072	那么接下来，\n我们来改变立方体的{[0001|1b00]}状态{[0001|ffff]}，\n让立方体{[0001|1b00]}{color[0400]}不能破坏{color[ffff]}{[0001|ffff]}球体吧。
073	要怎么做呢？\n让我们一边思考一边返回吧。
074	再次来到{[0001|1b00]}{color[0400]}设置画面{color[ffff]}{[0001|ffff]}。
075	把“{[0001|1b00]}{color[0400]}能破坏{color[ffff]}{[0001|ffff]}”设为{[0001|1b00]}{color[0400]}关闭{color[ffff]}{[0001|ffff]}。
076	关闭设置画面。
077	让我们来确认一下吧。
078	现在球体也{[0001|1b00]}{color[0400]}变得不会损坏{color[ffff]}{[0001|ffff]}了。
079	就是说，当我们把立方体的“{[0001|1b00]}{color[0400]}能破坏{color[ffff]}{[0001|ffff]}”设为{[0001|1b00]}{color[0400]}关闭{color[ffff]}{[0001|ffff]}后，\n就算撞到，立方体也{[0001|1b00]}{color[0400]}不会破坏{color[ffff]}{[0001|ffff]}球体了。
080	接下来是最后一项。
081	让我们打开熟悉的设置画面。
082	把“{color[0400]}{[0001|1b00]}能看见{[0001|ffff]}{color[ffff]}”设为{[0001|1b00]}{color[0400]}关闭{color[ffff]}{[0001|ffff]}看看。
083	关闭设置。
084	来，让我们去{[0001|1b00]}{color[0400]}游戏画面{color[ffff]}{[0001|ffff]}看看吧。
085	{[0001|1b00]}{color[0400]}立方体{color[ffff]}{[0001|ffff]}不见了……
086	立方体并不是真的不存在了……\n只是因为我们把{[0001|1b00]}{color[0400]}状态{color[ffff]}{[0001|ffff]}中的“{color[0400]}{[0001|1b00]}能看见{[0001|ffff]}{color[ffff]}”\n设为了{[0001|1b00]}{color[0400]}关闭{color[ffff]}{[0001|ffff]}，所以物体{[0001|1b00]}{color[0400]}变得看不见{color[ffff]}{[0001|ffff]}了而已。
087	为了确认真假，\n让我们去{[0001|1b00]}{color[0400]}程序画面{color[ffff]}{[0001|ffff]}看看吧。
088	打开设置……
089	把“{[0001|1b00]}{color[0400]}能破坏{color[ffff]}{[0001|ffff]}”设为{[0001|1b00]}{color[0400]}开启{color[ffff]}{[0001|ffff]}。
090	关闭设置。
091	密切关注一下接下来会发生什么吧。
092	哎呀～\n{[0001|1b00]}{color[0400]}球体损坏了{color[ffff]}{[0001|ffff]}。
093	{[0001|1b00]}{color[0400]}看不见的立方体和球体碰撞后{color[ffff]}{[0001|ffff]}，\n把球体破坏了。
094	这就说明，虽然我们看不见立方体，\n但它依然{[0001|1b00]}{color[0400]}存在于游戏画面内{color[ffff]}{[0001|ffff]}。
095	关于{[0001|1b00]}{color[0400]}状态{color[ffff]}{[0001|ffff]}我们就讲解到这里。
096	现在返回{[0001|1b00]}{color[0400]}程序画面{color[ffff]}{[0001|ffff]}。
097	……欢迎回来。
098	只要更改{[0001|1b00]}{color[0400]}状态{color[ffff]}{[0001|ffff]}的设置，\n{[0001|1b00]}{color[0400]}物体的动作{color[ffff]}{[0001|ffff]}也会随之变化。
099	……这功能可真方便，连我自己都得意起来了。\n请一定要扎扎实实地学会哦。
Guidebook_AutoPilot.msbt
00.00.Alice	……你好，{[0201]}。
00.01.Alice	这次我们会循序渐进地解说\n车辆的自动驾驶程序。
00.02.Alice	现在在游戏画面中，\n我们可以看到停着一辆车吧？
00.03.Alice	按下{[0001|1b00]}{color[0400]}键{color[ffff]}{[0001|ffff]}可以让汽车前进，\n现在就来开一下看看吧。
00.04.Alice	快撞到墙壁的时候，\n车子自动右转了。
00.05.Alice	你觉得让汽车如此行动的，\n会是什么程序呢？
00.06.Alice	让我们去程序画面\n确认一下吧。
01.00.Car	滴滴叭叭呜！\n我是汽车小节点！
01.01.Camera	……你好。
01.02.Camera	今天的工作是\n跟拍汽车小节点吗……\n……包在我身上！
01.03.Button	请指教！\n又见面了，{[0201]}。\n这次我会传递键的动作情况！
01.04.RigidWall	……你好。\n我是物体小节点，\n正在扮演棕色墙壁。
01.05.RigidWall	我们像这样排在一起，\n就组成了赛道。
01.06.SensorL	你好，{[0201]}。\n请问有什么事吗？
01.07.SensorL	什么！？\n你说想了解关于\n车辆{[0001|1b00]}{color[0400]}自动驾驶程序{color[ffff]}{[0001|ffff]}的知识吗！？
01.08.SensorL	我明白了！\n那么就让我们来\n为你说明一下吧。
01.09.SensorL	首先，我正{[0001|1b00]}{color[0400]}连接在\n汽车小节点的正面{color[ffff]}{[0001|ffff]}。
01.10.Car	就粘在我的正前方哦！
01.11.Button	按下键后汽车小节点会移动，\n是因为我在向他的\n{color[0400]}{[0001|1b00]}加速端口{[0001|ffff]}{color[ffff]}传递信号哦！
01.12.RigidWall	接着，当汽车\n向我驶来……
01.13.SensorL	由于我和汽车小节点的\n正面连接着……
01.14.Car	{[0001|1b00]}{color[0400]}接触感应器就会和墙壁碰撞{color[ffff]}{[0001|ffff]}哦！
01.15.SensorL	因为我在以{[0001|1b00]}{color[0400]}立方体{color[ffff]}{[0001|ffff]}为对象进行检查，\n所以当{[0001|1b00]}{color[0400]}接触到{color[ffff]}{[0001|ffff]}立方体……也就是{[0001|1b00]}{color[0400]}墙壁{color[ffff]}{[0001|ffff]}时，\n我就会{[0001|1b00]}{color[0400]}输出数值1.00这一信号{color[ffff]}{[0001|ffff]}。
01.16.Car	等我的{color[0400]}{[0001|1b00]}方向盘端口{[0001|ffff]}{color[ffff]}\n接收到信号{[0001|1b00]}{color[0400]}1.00{color[ffff]}{[0001|ffff]}后，\n汽车就会{color[0400]}{[0001|1b00]}向右转弯{[0001|ffff]}{color[ffff]}啦！
01.18.Car	接着当汽车右转后～
01.19.SensorL	接触感应器{[0001|1b00]}{color[0400]}与墙壁分离{color[ffff]}{[0001|ffff]}，\n信号就会停止输出。
01.20.Button	就是说如果汽车{[0001|1b00]}{color[0400]}正面没有墙壁{color[ffff]}{[0001|ffff]}，\n就会{[0001|1b00]}{color[0400]}笔直往前开{color[ffff]}{[0001|ffff]}了是吧！
01.21.Alice	百闻不如一见……\n让我们把接触感应器小节点\n设为“{[0001|1b00]}{color[0400]}能看见{color[ffff]}{[0001|ffff]}”，来确认一下吧。
01.22.Alice	首先选中接触感应器小节点……
01.23.Alice	打开设置画面。
01.24.Alice	把{[0001|1b00]}状态{[0001|ffff]}中的“{[0001|1b00]}{color[0400]}能看见{color[ffff]}{[0001|ffff]}”设为{[0001|1b00]}{color[0400]}开启{color[ffff]}{[0001|ffff]}。
01.25.Alice	顺便也来确认一下\n“{color[0400]}{[0001|1b00]}要检查什么？{[0001|ffff]}{color[ffff]}”的部分吧。
01.26.Alice	显示的是{[0001|1b00]}{color[0400]}立方体{color[ffff]}{[0001|ffff]}……\n也就是说，{[0001|1b00]}{color[0400]}检查对象设置成了墙壁{color[ffff]}{[0001|ffff]}。
01.28.Alice	然后关闭设置画面。
01.29.Alice	去游戏画面确认一下吧。
02.00.Alice	汽车正面的圆柱体网格，\n就是{[0001|1b00]}{color[0400]}接触感应器{color[ffff]}{[0001|ffff]}。
02.01.Alice	当这个圆柱体接触到墙壁后，\n汽车就会右转。
02.02.Alice	现在按下{[0001|1b00]}{color[0400]}键{color[ffff]}{[0001|ffff]}开动汽车，\n看看转弯时的情况吧。
02.03.Alice	圆柱体接触到墙壁后，\n汽车就右转了吧？
02.04.Alice	顺便说一下，\n如果想从起点开始从头来过的话，\n只要按下“重来”就可以了。
02.05.Alice	充分确认过后，\n让我们返回程序画面。
03.00.Car	怎么样？\n看到我刚才那个漂亮的\n甩尾避墙技巧了吗！？
03.01.Button	我怎么看你对着里头那面墙\n撞得欢啊！
03.02.Car	呜……\n这不是我{[0001|1b00]}{color[0400]}现在只能右转{color[ffff]}{[0001|ffff]}嘛。
03.03.SensorL	噫……说得也是。\n你也很希望不仅能右转也能左转吧。
03.04.SensorL	可是……\n我只能判断\n是否接触到墙壁……
03.04-01.SensorL	无法传递\n左转或右转的信号……
03.05.Alice	那么问题来了，\n要怎么确定汽车是{[0001|1b00]}{color[0400]}左转还是右转{color[ffff]}{[0001|ffff]}呢？
03.06.Alice	既然接触感应器小节点\n只能判断自己{[0001|1b00]}{color[0400]}\n是否接触到{color[ffff]}{[0001|ffff]}墙壁……
03.09.Alice	那么把{[0001|1b00]}{color[0400]}2个{color[ffff]}{[0001|ffff]}接触感应器\n{[0001|1b00]}{color[0400]}一左一右分别粘在{color[ffff]}{[0001|ffff]}\n汽车正面的话……
03.10.Alice	{[0001|1b00]}{color[0400]}不同朝向的墙壁会接触到不同的感应器{color[ffff]}{[0001|ffff]}，\n这样就可以根据发生接触的感应器，\n确定究竟是要左转还是右转了。
03.11.Alice	那么首先，\n我们来编写一下\n接触感应器小节点的程序吧。
03.12.Alice	先把接触感应器小节点\n往左移动。
03.13.Alice	接着使用复制功能，\n再叫1个具有同样设置的\n接触感应器小节点出来吧。
03.14.SensorR	哇啊啊啊……！\n不要突然把我叫出来啊～
03.15.Alice	把第2个往右移动。
03.16.Alice	很好。接下来我想把他们\n{[0001|1b00]}{color[0400]}一左一右{color[ffff]}{[0001|ffff]}分别粘在汽车正面……
03.17.Alice	你觉得要怎样做才能把他们\n粘在汽车的斜前方呢？
03.18.Alice	这次我们就请物体小节点\n在中间协助，来进行连接吧。
03.19.RigidBall	……你好，\n我是{[0001|1b00]}{color[0400]}球体{color[ffff]}{[0001|ffff]}物体小节点。
03.21.RigidBall	那我就去和\n汽车小节点的{color[0400]}{[0001|1b00]}正面{[0001|ffff]}{color[ffff]}\n连接了哦。
03.21-01.Alice	在这个物体小节点的\n{color[0400]}{[0001|1b00]}左右{[0001|ffff]}{color[ffff]}分别连接上\n接触感应器小节点的话……
03.21-02.Alice	就等于把接触感应器小节点\n{[0001|1b00]}{color[0400]}粘在{color[ffff]}{[0001|ffff]}汽车的{[0001|1b00]}{color[0400]}斜前方{color[ffff]}{[0001|ffff]}了。
03.22.Alice	现在，选中连接在\n左侧的接触感应器小节点\n和汽车小节点之间的线……
03.23.Alice	删除。
03.24.Alice	重新和球体物体小节点连接起来。
03.25.Alice	选中左侧的\n接触感应器小节点……
03.26.Alice	打开设置画面。
03.29.Alice	更改设置，把他连接在\n球体物体小节点的{[0001|1a00]}{color[0400]}左侧{color[ffff]}{[0001|ffff]}。
03.31.Alice	把“{[0001|1b00]}{color[0400]}自己的连接面{color[ffff]}{[0001|ffff]}”设置为{[0001|1b00]}{color[0400]}X+{color[ffff]}{[0001|ffff]}。
03.32.Alice	把“{[0001|1b00]}{color[0400]}连接对象的连接面{color[ffff]}{[0001|ffff]}”设置为{[0001|1b00]}{color[0400]}X-{color[ffff]}{[0001|ffff]}。
03.33.Alice	好，关闭当前画面。
03.34.Alice	关闭设置画面。
03.35.SensorR	接下来该做我的连接设置了。
03.36.Alice	选中右侧的\n接触感应器小节点……
03.37.Alice	打开设置画面。
03.38.Alice	把这边的{[0001|1b00]}连接面{[0001|ffff]}也设置一下吧。
03.39.Alice	因为我们想把这个\n接触感应器小节点连接在\n球体物体小节点的{[0001|1a00]}{color[0400]}右侧{color[ffff]}{[0001|ffff]}……
03.40.Alice	所以要把“{[0001|1b00]}{color[0400]}自己的连接面{color[ffff]}{[0001|ffff]}”设置为{[0001|1b00]}{color[0400]}X-{color[ffff]}{[0001|ffff]}。
03.41.Alice	把“{[0001|1b00]}{color[0400]}连接对象的连接面{color[ffff]}{[0001|ffff]}”设置为{[0001|1b00]}{color[0400]}X+{color[ffff]}{[0001|ffff]}。
03.42.Alice	好，关闭当前画面。
03.43.Alice	关闭设置画面。
03.44.Alice	好了，现在就让我们先去\n确认一下接触感应器\n和汽车的连接情况如何吧。
03.45.Alice	那么，前往游戏画面。
04.00.Alice	汽车的{[0001|1b00]}{color[0400]}正面粘着球体{color[ffff]}{[0001|ffff]}，\n球体的{color[0400]}{[0001|1b00]}左右两侧粘着接触感应器{[0001|ffff]}{color[ffff]}。
04.02.Alice	让我们在按下{[0001|1b00]}{color[0400]}键{color[ffff]}{[0001|ffff]}开动汽车的同时，\n仔细观察2个接触感应器\n是如何接触墙壁的吧。
04.03.Alice	左侧的接触感应器\n接触到墙壁了吧。
04.04.Alice	因为汽车在右转，\n右侧的感应器没有接触到墙壁，\n就这么开了过去。
04.05.Alice	让我们{[0001|1b00]}{color[0400]}重来{color[ffff]}{[0001|ffff]}一次，\n重点观察转弯后\n汽车靠近下一面墙壁时候的情况。
04.06.Alice	看到了吗？\n右侧的接触感应器接触到墙壁的样子。
04.07.Alice	接下来，我们就来编写\n在右侧的接触感应器接触到墙壁后，\n汽车左转的程序吧。
04.08.Alice	返回程序画面。
05.00.SensorR	怎么样，\n我们的配置，你都确认好了吗？
05.03.Button	虽然接触感应器小节点已经\n做好了准备的样子……\n但是汽车依然会猛撞右侧的墙壁！
05.04.Alice	那么现在，就让我们针对发生反应的感应器，\n编写程序让{[0001|1b00]}{color[0400]}汽车可以左右转弯{color[ffff]}{[0001|ffff]}吧。
05.06.Car	只要{[0001|1b00]}{color[0400]}向{color[ffff]}{[0001|ffff]}我的{[0001|1b00]}{color[0400]}方向盘端口传递负数{color[ffff]}{[0001|ffff]}，\n{[0001|1b00]}{color[0400]}我就能左转{color[ffff]}{[0001|ffff]}了哦！
05.08.SensorL	噫……也就是说，\n在我发生反应的时候，\n要向{[0001|1b00]}方向盘端口{color[0400]}传递正数{color[ffff]}{[0001|ffff]}……
05.09.SensorR	噫……在我发生反应的时候，\n要向{[0001|1b00]}方向盘端口{color[0400]}传递负数{color[ffff]}{[0001|ffff]}是吧。
05.10.Alice	那么现在，你觉得要怎么做才好呢？
05.11.Alice	这次让我们使用{[0001|1b00]}{color[0400]}减法{color[ffff]}{[0001|ffff]}\n来进行编程吧。
05.12.Alice	首先选中从左侧接触感应器小节点\n连接至汽车小节点{color[0400]}{[0001|1b00]}方向盘端口{[0001|ffff]}{color[ffff]}的线……
05.13.Alice	删除这条线。
05.14.Alice	然后叫出{[0001|1b00]}{color[0400]}计算小节点{color[ffff]}{[0001|ffff]}。
05.15.Calculator	我是大家熟悉的\n高性能计算器。
05.16.Calculator	要做减法是吗？\n小事一桩。
05.17.Alice	把线连接起来，\n让左侧接触感应器小节点的输出值\n{color[0400]}{[0001|1b00]}减去{[0001|ffff]}{color[ffff]}右侧接触感应器小节点的输出值……
05.18.Alice	然后把计算结果传递给\n汽车小节点的方向盘端口。
05.19.SensorL	这样一来，\n在只有左侧的接触感应器\n接触到墙壁时……
05.20.Calculator	1.00-0.00等于{[0001|1b00]}{color[0400]}1.00{color[ffff]}{[0001|ffff]}！
05.21.SensorR	相反的，\n在只有右侧的接触感应器\n接触到墙壁时……
05.22.Calculator	0.00-1.00等于{[0001|1b00]}{color[0400]}-1.00{color[ffff]}{[0001|ffff]}！
05.23.RigidBall	……有时候也会出现两侧的\n接触感应器小节点都不接触墙壁的情况。
05.24.Calculator	这时计算的是0.00-0.00，结果等于{[0001|1b00]}{color[0400]}0.00{color[ffff]}{[0001|ffff]}！
05.25.Camera	原来如此……\n那如果两侧的接触感应器小节点\n都接触到墙壁又会怎样呢？
05.26.Calculator	那就是1.00-1.00等于{[0001|1b00]}{color[0400]}0.00{color[ffff]}{[0001|ffff]}！
05.27.Alice	{[0001|1b00]}{color[0400]}只有左侧感应器{color[ffff]}{[0001|ffff]}接触时，输出值是{[0001|1b00]}{color[0400]}1.00{color[ffff]}{[0001|ffff]}；\n{[0001|1b00]}{color[0400]}只有右侧感应器{color[ffff]}{[0001|ffff]}接触时，输出值是{[0001|1b00]}{color[0400]}-1.00{color[ffff]}{[0001|ffff]}；\n{[0001|1b00]}{color[0400]}两侧都没有接触的话就是0.00{color[ffff]}{[0001|ffff]}。
05.27-01.Alice	换言之，\n左侧的感应器接触到墙壁时，汽车就往右转；\n右侧的感应器接触到墙壁时，汽车就往左转。
05.28.Alice	让我们去游戏画面实际确认一下吧。
06.01.Alice	按{[0001|1b00]}{color[0400]}键{color[ffff]}{[0001|ffff]}开动汽车，\n同时注意观察\n接触感应器和汽车的动向。
06.02.Alice	现在当汽车靠近墙壁时，\n就会朝{[0001|1b00]}{color[0400]}远离墙壁的方向{color[ffff]}{[0001|ffff]}转弯了吧。
06.03.Alice	就这样行驶一段时间，\n仔细观察汽车的动向。
06.04.Alice	那么现在，\n让我们返回程序画面吧。
07.00.Car	怎么样，\n我打方向盘的技术\n相当不错吧！
07.01.SensorL	噫……！现在可以顺利地\n避开左右墙壁行驶了呢……
07.02.SensorR	噫……但是，要说这是自动驾驶，\n我总觉得还缺少了一些什么……
07.03.Camera	……毕竟{[0001|1b00]}{color[0400]}油门还得自己踩{color[ffff]}{[0001|ffff]}嘛。
07.04.Button	不过，按键\n可不能自动往下按哦！
07.05.Car	只要我给{color[0400]}{[0001|1b00]}加速端口{[0001|ffff]}{color[ffff]}传递{color[0400]}{[0001|1a00]}正数{[0001|ffff]}{color[ffff]}，\n汽车随时都可以向前行驶哦！
07.06.Alice	那么，按键小节点的工作\n就交给{[0001|1b00]}{color[0400]}常数小节点{color[ffff]}{[0001|ffff]}来完成吧。
07.07.Constant	我是常数小节点。\n{color[0400]}{[0001|1b00]}1.00{[0001|ffff]}{color[ffff]}是吧，遵命。
07.08.Button	好，那后面可就交给你喽！\n{[0201]}，回头见！
07.09.Constant	现在由我来代替按键小节点\n{[0001|1b00]}{color[0400]}向加速端口持续传递1.00{color[ffff]}{[0001|ffff]}。
07.10.Alice	这样油门也实现了自动化。
07.11.Alice	让我们去游戏画面确认一下吧。
08.00.Alice	……
08.01.Alice	现在无需任何操作，\n汽车也能避开墙壁自动行驶了。
08.02.Alice	自动驾驶程序\n到此就全部编写完成了。
08.03.Alice	如果觉得满意的话，\n就返回程序画面吧。
09.00.Car	万岁！\n这可是全自动啊～
09.01.Calculator	真是太厉害了，\n这样的高性能完全不在我之下！
09.02.Alice	……好了，这次可能有点难度吧，\n汽车自动驾驶程序的原理……\n你学会了吗？
09.06.SensorR	噫……就是，\n当接触感应器接触墙壁时，\n会向{color[0400]}{[0001|1b00]}方向盘端口{[0001|ffff]}{color[ffff]}发送信号……
09.07.Car	于是汽车就会转弯！
09.08.SensorL	只要有两个我们这样的\n接触感应器小节点在……
09.09.SensorR	就能根据是哪一边接触到墙壁，\n确定汽车究竟{[0001|1b00]}{color[0400]}是往左转\n还是往右转{color[ffff]}{[0001|ffff]}了！
09.10.Calculator	而我可以通过{color[0400]}{[0001|1b00]}减法{[0001|ffff]}{color[ffff]}计算出\n需要向方向盘输出的恰当数值。
09.11.Constant	我，常数小节点，\n可以持续输出固定数值，\n因此最适合被用在{color[0400]}{[0001|1b00]}油门自动化{[0001|ffff]}{color[ffff]}上。
09.13.Alice	这个自动化技巧还可以运用在\n让敌方角色自动行动上，\n所以要好好记住哦。
09.14.Alice	好了，那么今天就到此为止吧。
09.15.Car	滴滴叭叭呜！\n那么，我们下次再见啦。
09.16.Camera	自动化……这也是时代的趋势啊……
Guidebook_AxisAngle.msbt
000	你好，{[0201]}。
001	画面中有个人。
002_a	经过编程，这个人会随着Nintendo Switch的\n{[0001|1b00]}{color[0400]}左右倾斜{color[ffff]}{[0001|ffff]}发生相应移动。
003_a	水平握持Nintendo Switch，\n然后{[0001|1b00]}{color[0400]}左右倾斜{color[ffff]}{[0001|ffff]}看看。
002_b	经过编程，这个人会随着Joy-Con的\n{[0001|1b00]}{color[0400]}左右倾斜{color[ffff]}{[0001|ffff]}发生相应移动。
003_b	水平握持Joy-Con，\n然后{[0001|1b00]}{color[0400]}左右倾斜{color[ffff]}{[0001|ffff]}看看。
004	……倾斜时，人发生了移动。
005	是的，\n这次要讲解的主题就是，\n{[0001|1b00]}{color[0400]}利用倾斜让人移动的程序{color[ffff]}{[0001|ffff]}。
006	那么，请前往程序画面。
007	倾斜了设备的人就是你吗？
008	你好～我是{[0001|1b00]}{color[0400]}倾斜小节点{color[ffff]}{[0001|ffff]}。
009	Nintendo Switch和Joy-Con的倾斜情况，\n尽在我的掌握。
010	比起端端正正地用力握持……
011	自然地倾斜会更好哦。
012	我的职责是把倾斜情况\n传递给其他小节点。
013	刚才把左右倾斜情况传递\n给人小节点的正是我。
014	请多指教……
015	嗨！我是人小节点。
016	我接收倾斜小节点\n输出的信号后……
017	就会让人相应地左右移动哦！
018	使用倾斜小节点……
019	就能用{[0001|1b00]}{color[0400]}倾斜{color[ffff]}{[0001|ffff]}……\n代替摇杆和按键来实现{[0001|1b00]}{color[0400]}输入{color[ffff]}{[0001|ffff]}。
020	……是不是想问我是怎么知道倾斜情况的？
022	那是因为Nintendo Switch里面有\n{[0001|1b00]}{color[0400]}能感应动作的感应器{color[ffff]}{[0001|ffff]}……
023	所以我才能知道倾斜的情况。
024	你可以在我的设置中确认\n我会在朝哪个方向\n倾斜了多少度时发送信号。
025	请选中倾斜小节点。
026	打开设置。
027	倾斜小节点拥有{[0001|1b00]}{color[0400]}倾斜{color[ffff]}{[0001|ffff]}和{[0001|1b00]}{color[0400]}转动角度\n{color[ffff]}{[0001|ffff]}两种{[0001|1b00]}{color[0400]}模式{color[ffff]}{[0001|ffff]}。
028	在{[0001|1b00]}{color[0400]}倾斜{color[ffff]}{[0001|ffff]}模式中，倾斜幅度\n会被转换成{[0001|1b00]}{color[0400]}0.00～1.00的信号{color[ffff]}{[0001|ffff]}输出。
029	在{[0001|1b00]}{color[0400]}转动角度{color[ffff]}{[0001|ffff]}模式中，\n倾斜幅度会直接以{[0001|1b00]}{color[0400]}角度{color[ffff]}{[0001|ffff]}的形式输出。
030	想用倾斜代替摇杆或按键时……
031	可以把{[0001|1b00]}模式{[0001|ffff]}设置为{color[0400]}{[0001|1b00]}倾斜{[0001|ffff]}{color[ffff]}。
032	在{[0001|1b00]}倾斜{[0001|ffff]}模式中，\n你可以通过调节这个{[0001|1b00]}{color[0400]}范围{color[ffff]}{[0001|ffff]}来设置\n{[0001|1b00]}{color[0400]}倾斜幅度{color[ffff]}{[0001|ffff]}与输出{[0001|1b00]}{color[0400]}信号的大小关系{color[ffff]}{[0001|ffff]}。
033	{[0001|1b00]}范围{[0001|ffff]}的上限值{[0001|1b00]}{color[0400]}越大{color[ffff]}{[0001|ffff]}就越不灵敏。\n必须大幅度倾斜，\n才能输出大数值的信号……
034	{[0001|1b00]}范围{[0001|ffff]}的上限值{[0001|1b00]}{color[0400]}越小{color[ffff]}{[0001|ffff]}就越灵敏。\n只要稍微倾斜一点，\n就能输出大数值的信号。
035	把{[0001|1b00]}范围{[0001|ffff]}的上限值{[0001|1b00]}{color[0400]}调低{color[ffff]}{[0001|ffff]}……\n设置为{[0001|1b00]}{color[0400]}0.10{color[ffff]}{[0001|ffff]}看看吧。
036	关闭设置。
037	对倾斜产生反应的上限值变成了{[0001|1b00]}0.10{[0001|ffff]}，\n换句话说……
038	……感应倾斜的灵敏度提高到了10倍。
039	现在只要小幅度倾斜，\n就能输出较大的数值。
040	提高感应倾斜的灵敏度后，\n人的移动会发生怎样的变化呢？
041	去游戏画面确认一下吧。
042	请尝试左右倾斜让人移动看看。
043	如果找不到人了，\n按“重来”即可。
044	现在小幅度倾斜就能让人移动起来。
044-01	可以像这样通过设置{color[0400]}{[0001|1b00]}范围{[0001|ffff]}{color[ffff]}来调节\n{color[0400]}{[0001|1b00]}输出的数值大小与倾斜幅度的对应关系{[0001|ffff]}{color[ffff]}。
045	请返回程序画面。
046	现在只要稍微倾斜一点，\n我就能快速移动啦！
047	下面我们来更改{[0001|1b00]}{color[0400]}倾斜方向{color[ffff]}{[0001|ffff]}试试。
048	请选中倾斜小节点。
049	打开设置。
050	倾斜方向……
051	可以在{[0001|1b00]}{color[0400]}转动轴{color[ffff]}{[0001|ffff]}中设置。
052	转动轴有3根，分别是{[0001|1b00]}{color[0400]}X、Y、Z{color[ffff]}{[0001|ffff]}。
053	倾斜动作的中心称为轴，\n以不同{[0001|1b00]}{color[0400]}轴为中心转动的动作{color[ffff]}{[0001|ffff]}\n就是倾斜方向。
054	当前{[0001|1b00]}转动轴{[0001|ffff]}为{[0001|1b00]}{color[0400]}Z{color[ffff]}{[0001|ffff]}，\n代表{[0001|1b00]}{color[0400]}左右{color[ffff]}{[0001|ffff]}倾斜。
055	如果把{[0001|1b00]}转动轴{[0001|ffff]}设置为{[0001|1b00]}{color[0400]}X{color[ffff]}{[0001|ffff]}，\n就能用{[0001|1b00]}{color[0400]}前后方向{color[ffff]}{[0001|ffff]}的倾斜进行操作。
056	把{[0001|1b00]}{color[0400]}转动轴{color[ffff]}{[0001|ffff]}改为{[0001|1b00]}{color[0400]}X{color[ffff]}{[0001|ffff]}看看。
057	你可以把X轴想象成一根单杠……
058	向前翻滚的动作就是X轴旋转。
059	关闭设置。
060	现在倾斜方向是以X轴为中心……\n也就是前后倾斜……
061	为了配合倾斜方向，\n把人的移动方向也设置为前后移动吧。
062	请选中线。
063	删除。
064	重新连接到人小节点的\n{color[0400]}{[0001|1b00]}前后端口{[0001|ffff]}{color[ffff]}。
065	我要开始传递前后倾斜情况啦……
066	张开双手……\n摆出X轴的姿势！
067	紧张期待……！
068	前后倾斜是否真能让人移动呢……
069	去游戏画面确认一下吧。
121	因为当前转动轴为{[0001|1b00]}{color[0400]}X轴{color[ffff]}{[0001|ffff]}……\n所以{[0001|1b00]}{color[0400]}前后倾斜{color[ffff]}{[0001|ffff]}时人就会移动。
070	请尝试前后倾斜让人移动看看。
071	如果找不到人了，\n按“重来”即可。
072	可以看到，\n人会在前后倾斜时前后移动了。
073	请返回程序画面。
074	真的能用前后倾斜让人移动了！
075	没错，我们现在能利用倾斜\n控制人前后左右移动了。
076	倾斜的学问还深奥着呢……
077	除了能代替摇杆让人移动……
078	还可以把倾斜当作按键使用，\n让人使出拳击动作。
079	看招，{[0001|1b00]}{color[0400]}陀螺拳{color[ffff]}{[0001|ffff]}！
080	陀螺拳……！
118	那就来编写陀螺拳的程序吧。
119	请选中倾斜小节点。
081	打开设置。
082	把{[0001|1b00]}转动轴{[0001|ffff]}改为{[0001|1b00]}{color[0400]}Y{color[ffff]}{[0001|ffff]}。
083	Y轴旋转是类似于\n打汽车方向盘那样的动作。
085	把{[0001|1b00]}{color[0400]}输出{color[ffff]}{[0001|ffff]}改为{[0001|1b00]}{color[0400]}数字{color[ffff]}{[0001|ffff]}吧。
086	当{[0001|1b00]}输出{[0001|ffff]}为{[0001|1b00]}数字{[0001|ffff]}时，\n只会输出{[0001|1b00]}{color[0400]}0或1的信号{color[ffff]}{[0001|ffff]}。
087	这样一来，\n就能像切换按键的{color[0400]}{[0001|1b00]}开启与关闭{[0001|ffff]}{color[ffff]}\n那样输出信号了。
088	把{[0001|1b00]}范围{[0001|ffff]}设置为{[0001|1b00]}{color[0400]}0.05{color[ffff]}{[0001|ffff]}到{[0001|1b00]}{color[0400]}1.00{color[ffff]}{[0001|ffff]}。
089	这样只要倾斜到{[0001|1b00]}0.05{[0001|ffff]}以上，\n就会输出信号。
090	关闭设置。
091	虽说这样倾斜的设置就完成了……
092	但转着转着，\n有时就找不到基准位置在哪了。
093	长时间倾斜Nintendo Switch，\n有可能会让{[0001|1b00]}{color[0400]}基准位置{color[ffff]}{[0001|ffff]}逐渐{[0001|1b00]}{color[0400]}偏移{color[ffff]}{[0001|ffff]}。
094	长时间倾斜Joy-Con，\n有可能会让{[0001|1b00]}{color[0400]}基准位置{color[ffff]}{[0001|ffff]}逐渐{[0001|1b00]}{color[0400]}偏移{color[ffff]}{[0001|ffff]}。
095	为了应对这种情况，\n我们需要设计一个可以用\n键{[0001|1b00]}{color[0400]}重置{color[ffff]}{[0001|ffff]}倾斜基准的程序。
096	选择“{[0001|1b00]}{color[0400]}输入{color[ffff]}{[0001|ffff]}”。
097	选择“{[0001|1b00]}{color[0400]}按下按键{color[ffff]}{[0001|ffff]}”。
098	选择“{[0001|1b00]}{color[0400]}键{color[ffff]}{[0001|ffff]}”。
099	请指教！
101	把按键小节点连接到\n倾斜小节点的{[0001|1b00]}{color[0400]}Y重置端口{color[ffff]}{[0001|ffff]}上。
102	这样就能用键来重置倾斜情况了。
103	选中这条线。
104	删除。
105	把倾斜小节点连接到\n人小节点的{color[0400]}{[0001|1b00]}动作端口{[0001|ffff]}{color[ffff]}上。
106	这样一来，\n陀螺拳的编程就大功告成了。
107	去游戏画面确认一下吧。
108_a	首先请{[0001|1b00]}{color[0400]}水平握持{color[ffff]}{[0001|ffff]}Nintendo Switch……\n然后按下键重置倾斜。
108_b	首先请{[0001|1b00]}{color[0400]}水平握持{color[ffff]}{[0001|ffff]}Joy-Con……\n然后按下键重置倾斜。
109	像操作汽车方向盘那样，\n左右转动即可使出拳击。
110	左右转起来，\n一、二！
111	成功使出了拳击。
112	请返回程序画面。
113	利用倾斜……\n可以让人移动、使出拳击……
114	就算{[0001|1b00]}{color[0400]}不用按键操作{color[ffff]}{[0001|ffff]}，也能让游戏动起来。
115	这就是倾斜的程序。
116	而倾斜的奥秘就在于{[0001|1b00]}{color[0400]}能感应动作的感应器{color[ffff]}{[0001|ffff]}。
117	倾斜的扭曲世界……\n期待你的光临……
Guidebook_Basic.msbt
000	接下来我会讲解\n{[0001|1b00]}{color[0400]}小节点车库的基本{color[ffff]}{[0001|ffff]}。
001	这个画面叫{[0001|1b00]}{color[0400]}游戏画面{color[ffff]}{[0001|ffff]}……
002	顾名思义，\n我们制作的{[0001|1b00]}{color[0400]}游戏{color[ffff]}{[0001|ffff]}就在这里运行。
003	现在这里有一个{[0001|1b00]}{color[0400]}人{color[ffff]}{[0001|ffff]}。
004	按下{[0001|1b00]}{color[0400]}键{color[ffff]}{[0001|ffff]}试试。
005	人跳起来了。
006	这个人为什么会跳起来呢……
007	我将通过说明其原理\n来具体讲解\n{[0001|1b00]}{color[0400]}小节点车库的基本{color[ffff]}{[0001|ffff]}。
008	那么，让我们进入游戏幕后……\n即{[0001|1b00]}{color[0400]}程序画面{color[ffff]}{[0001|ffff]}当中吧。
009	啊，你是刚刚那位程序员～
010	请指教！\n我记得你叫\n{[0201]}，对吧？
011	多照应啦！
012	这里是{[0001|1b00]}{color[0400]}程序画面{color[ffff]}{[0001|ffff]}。
013	我们就是在这儿使用小节点们\n进行游戏{[0001|1b00]}{color[0400]}编程{color[ffff]}{[0001|ffff]}。
014	为了做好游戏，\n我们会竭尽所能的！
015	小节点们\n各有各的{color[0400]}{[0001|1b00]}职责{[0001|ffff]}{color[ffff]}。
016	我{[0001|1b00]}{color[0400]}按键小节点{color[ffff]}{[0001|ffff]}\n负责监测手柄{[0001|1b00]}{color[0400]}按键{color[ffff]}{[0001|ffff]}！
017	我{[0001|1b00]}{color[0400]}人小节点{color[ffff]}{[0001|ffff]}\n负责让{[0001|1b00]}{color[0400]}人{color[ffff]}{[0001|ffff]}出现在游戏画面中。
018	就是{[0001|1b00]}{color[0400]}人小节点{color[ffff]}{[0001|ffff]}让刚才那个人\n出现在了游戏画面中。
019	哼哼哼哼，\n多表扬表扬我吧！
020	可以通过在程序画面\n改变人小节点的{color[0400]}{[0001|1b00]}位置{[0001|ffff]}{color[ffff]}……
021	来改变{[0001|1b00]}{color[0400]}游戏画面中人出现的位置{color[ffff]}{[0001|ffff]}。
022	比如说，如果将我移动到\n这个画面的右侧……
023	则人也会出现在\n游戏画面的右侧！
024	试试看吧。
025	如果抓住这个人小节点，\n移动至{[0001|1b00]}{color[0400]}蓝框{color[ffff]}{[0001|ffff]}处……
026	游戏画面会发生什么变化呢？
027	让我们前往游戏画面吧。
028	你看，人跑到更靠{color[0400]}{[0001|1b00]}右侧{[0001|ffff]}{color[ffff]}的位置去了。
029	就是说，程序画面也是一个\n用来{[0001|1b00]}{color[0400]}配置{color[ffff]}{[0001|ffff]}物体及角色\n在游戏画面中登场位置的{[0001|1b00]}{color[0400]}工作台{color[ffff]}{[0001|ffff]}。
030	好了，让我们前往程序画面\n继续进行讲解。
031	此外，程序画面还可以{[0001|1b00]}{color[0400]}滚动{color[ffff]}{[0001|ffff]}。
032	此前为了不影响讲解，\n停用了滚动功能……
033_t	现已将其临时恢复，\n请用{[0001|1b00]}{color[0400]}两根手指在点触画面的同时{color[ffff]}{[0001|ffff]}，\n尝试上下左右移动。
033_s	现已将其临时恢复，\n请操作摇杆\n{[0001|1b00]}{color[0400]}尝试将指针移至画面之外{color[ffff]}{[0001|ffff]}。
033_jr	现已将其临时恢复，\n请尝试上下左右操作{color[0400]}{[0001|1b00]}摇杆{[0001|ffff]}{color[ffff]}。
033_jl	现已将其临时恢复，\n请尝试上下左右操作{color[0400]}{[0001|1b00]}摇杆{[0001|ffff]}{color[ffff]}。
033_m	现已将其临时恢复，\n请尝试{[0001|1b00]}{color[0400]}在点击状态下{color[ffff]}{[0001|ffff]}\n上下左右移动鼠标。
034	你看，\n画面向下滚动了。
035_t	接下来请用两根手指在点触画面的同时，\n尝试{[0001|1b00]}{color[0400]}开合手指{color[ffff]}{[0001|ffff]}。
035_s	接下来请{[0001|1b00]}{color[0400]}在按住键或键的同时{color[ffff]}{[0001|ffff]}，\n尝试{[0001|1b00]}{color[0400]}上下操作摇杆{color[ffff]}{[0001|ffff]}。
035_jr	接下来请{[0001|1b00]}{color[0400]}在按住键的同时{color[ffff]}{[0001|ffff]}，\n尝试{[0001|1b00]}{color[0400]}上下操作摇杆{color[ffff]}{[0001|ffff]}。
035_jl	接下来请{[0001|1b00]}{color[0400]}在按住键的同时{color[ffff]}{[0001|ffff]}，\n尝试{[0001|1b00]}{color[0400]}上下操作摇杆{color[ffff]}{[0001|ffff]}。
072	接下来请尝试{color[0400]}{[0001|1b00]}上下滑动鼠标滚轮{[0001|ffff]}{color[ffff]}\n或点击程序画面下方的{color[0400]}{[0001|1b00]}－{[0001|ffff]}{color[ffff]}和{color[0400]}{[0001|1b00]}＋{[0001|ffff]}{color[ffff]}。
036	通过这样的操作，\n也可以实现画面的缩放。
037	在小节点指南中，\n画面移动会影响讲解，\n因此我们将再次停用滚动功能……
038	但在你自己编程时，\n不要忘记这项实用功能哦。
039	好了，我们让画面回到之前的位置。
040	久等了。
041	言归正传，\n下面开始讲解{[0001|1b00]}{color[0400]}人跳跃的原理{color[ffff]}{[0001|ffff]}。
042	在游戏画面中\n{[0001|1b00]}{color[0400]}一按下键人就会跳跃{color[ffff]}{[0001|ffff]}……
043	那是因为我！
044	还有我！我们通过{[0001|1b00]}{color[0400]}线{color[ffff]}{[0001|ffff]}连接在一起！
045	{[0001|1b00]}{color[0400]}线{color[ffff]}{[0001|ffff]}指的就是这个。
046	刚才{[0201]} \n你也亲手连接过线对吧？
047	我现在正在监测手柄的\n{[0001|1b00]}{color[0400]}键是否已被按下{color[ffff]}{[0001|ffff]}……
048	而在键被按下的瞬间！\n我将立刻{[0001|1b00]}{color[0400]}通过线{color[ffff]}{[0001|ffff]}\n向人小节点发送{[0001|1b00]}{color[0400]}信号{color[ffff]}{[0001|ffff]}！
049	好的，我会接收你的信号。
050	要说什么是{[0001|1b00]}{color[0400]}信号{color[ffff]}{[0001|ffff]}……\n你可以先简单理解为\n{[0001|1b00]}{color[0400]}通过线传输的讯息{color[ffff]}{[0001|ffff]}。
051	请仔细观察\n我被线所连接的位置。
052	是不是写着{[0001|1b00]}{color[0400]}跳跃{color[ffff]}{[0001|ffff]}二字？
053	当{[0001|1b00]}{color[0400]}信号{color[ffff]}{[0001|ffff]}传入这个{color[0400]}{[0001|1b00]}跳跃端口{[0001|ffff]}{color[ffff]}时，\n我就会让游戏画面中的人{[0001|1b00]}{color[0400]}跳跃{color[ffff]}{[0001|ffff]}。
054	就像这样！\n通过我们的协作，\n按下键后人就会跳起来！
055	不妨复习一下。
056	{[0001|1b00]}{color[0400]}按键小节点{color[ffff]}{[0001|ffff]}负责监测\n手柄的{[0001|1b00]}{color[0400]}键{color[ffff]}{[0001|ffff]}是否被按下。
057	一旦键被按下，\n按键小节点就会通过{[0001|1b00]}{color[0400]}线{color[ffff]}{[0001|ffff]}发送{[0001|1b00]}{color[0400]}信号{color[ffff]}{[0001|ffff]}。
058	当人小节点的{color[0400]}{[0001|1b00]}跳跃端口{[0001|ffff]}{color[ffff]}\n接收到信号时，\n就会让人进行跳跃……
059	听明白之后是不是觉得其实很简单？
059-00	那让我们看看\n如果{[0001|1b00]}{color[0400]}删除线{color[ffff]}{[0001|ffff]}会发生什么。
059-01	请选中线……
059-02	按下这个按键删除线。
059-03	来，去游戏画面确认一下\n发生了什么变化。
059-04	按{[0001|1b00]}{color[0400]}键{color[ffff]}{[0001|ffff]}试试。
059-05	……\n纹丝不动。
059-06	一旦删除了线，\n即使按下键，人也不会跳跃。
059-07	前往程序画面。
059-08	怎么回事！\n断线了还让我怎么\n给人小节点发送信号！
059-09	不错，如果线没有连接起来，\n即使按下键，按键小节点\n也无法向人小节点{[0001|1b00]}{color[0400]}传递信号{color[ffff]}{[0001|ffff]}。
059-10	因此虽然刚才按下了键，\n但角色并没有跳跃。
059-11	那让我们重新连接\n{color[0400]}{[0001|1b00]}按键小节点{[0001|ffff]}{color[ffff]}至{color[0400]}{[0001|1b00]}人小节点的\n跳跃端口{[0001|ffff]}{color[ffff]}的线。
059-12	太好啦！\n这下就又能接收到\n按键小节点发送的信号了！
060	我们就是像这样在小节点车库中\n对{[0001|1b00]}{color[0400]}小节点们进行连接{color[ffff]}{[0001|ffff]}\n来完成游戏制作的。
061	这是基本所在，\n请牢记在心。
062	让我们再去游戏画面确认一下。
063	按下{[0001|1b00]}{color[0400]}键{color[ffff]}{[0001|ffff]}让人跳跃起来。
064	现在，小节点们正在幕后工作……\n所以程序得以运行。
065	……一旦明白了原理，\n看待事物的方式也会略有不同。
065-01	……这正是编程的乐趣所在……
066	……那么，\n让我们前往程序画面。
067	{[0201]}！\n怎么样？\n多少对我们有点了解了吗？
068	只要你进行游戏编程，\n就会经常用到我们……
069	今后也请多关照哦！
070	今后也请多关照啦！
Guidebook_BreakAndRetry.msbt
000	……你好。
001	我们可以看到游戏画面中\n有一个{[0001|1b00]}{color[0400]}人{color[ffff]}{[0001|ffff]}和一个{[0001|1b00]}{color[0400]}立方体{color[ffff]}{[0001|ffff]}。
002	{[0001|1b00]}{color[0400]}摇杆{color[ffff]}{[0001|ffff]}能控制人的移动，\n试着让人用撞击破坏{[0001|1b00]}{color[0400]}立方体{color[ffff]}{[0001|ffff]}吧。
004	{[0001|1b00]}{color[0400]}立方体{color[ffff]}{[0001|ffff]}损坏后……\n稍等片刻游戏就会自动{[0001|1b00]}{color[0400]}重来{color[ffff]}{[0001|ffff]}。
005	{[0001|1b00]}{color[0400]}破坏立方体{color[ffff]}{[0001|ffff]}后，\n游戏{[0001|1b00]}{color[0400]}重来{color[ffff]}{[0001|ffff]}……
008	这就是本次要讲解的程序。
009	请前往{[0001|1b00]}{color[0400]}程序画面{color[ffff]}{[0001|ffff]}。
010	哎呀哎呀——！\n这不是{[0201]}吗——！
011	怎么，找我们有事？
012	原来如此！\n你想了解{[0001|1b00]}{color[0400]}立方体损坏后\n游戏重来{color[ffff]}{[0001|ffff]}的程序是吗！
013	这个程序难度可高了……\n讲了你大概也听不懂……
014	喂喂！别乱说！\n像{[0201]}这么聪明的人，\n一定能听懂！
015	……你说得对，\n如果是{[0201]}，\n应该没问题……
016	很抱歉说了冒犯的话……\n唉……\n好想收回刚才的发言啊……
017	那好，\n就由我来手把手教教你吧。
018	……看来他们同意教你了。
019	那么，\n我先来介绍一下这个程序的全貌！
020	首先是我！\n{[0001|1b00]}{color[0400]}物体损坏时小节点{color[ffff]}{[0001|ffff]}！
021	我呢！\n会在{[0001|1b00]}{color[0400]}立方体损坏时{color[ffff]}{[0001|ffff]}输出{[0001|1b00]}{color[0400]}信号{color[ffff]}{[0001|ffff]}。
022	如你所见，我是{[0001|1b00]}{color[0400]}计时小节点{color[ffff]}{[0001|ffff]}。
023	我会在接收到{[0001|1b00]}{color[0400]}信号{color[ffff]}{[0001|ffff]}后{[0001|1b00]}{color[0400]}等待1秒{color[ffff]}{[0001|ffff]}，\n然后再把{[0001|1b00]}{color[0400]}信号{color[ffff]}{[0001|ffff]}传递给\n排在后面的重来小节点。
024	……我是{[0001|1b00]}{color[0400]}重来小节点{color[ffff]}{[0001|ffff]}。
025	我会在接收到{[0001|1b00]}{color[0400]}信号{color[ffff]}{[0001|ffff]}后，\n{[0001|1b00]}{color[0400]}让游戏重来{color[ffff]}{[0001|ffff]}……
026	{[0001|1b00]}{color[0400]}物体损坏时小节点{color[ffff]}{[0001|ffff]}、\n{[0001|1b00]}{color[0400]}计时小节点{color[ffff]}{[0001|ffff]}和\n{[0001|1b00]}{color[0400]}重来小节点{color[ffff]}{[0001|ffff]}……
027	{[0001|1b00]}{color[0400]}3个小节点{color[ffff]}{[0001|ffff]}各司其职，\n依次发挥作用。
028	怎么样？\n还挺简单明了的吧！
029	那么，\n接下来我们将更详细地\n介绍各自的工作内容！
030	首先是我！\n{[0001|1b00]}{color[0400]}物体损坏时小节点{color[ffff]}{[0001|ffff]}……
031	如果游戏画面中{[0001|1b00]}{color[0400]}有物体损坏{color[ffff]}{[0001|ffff]}，\n我就会向其他小节点发送{[0001|1b00]}{color[0400]}信号{color[ffff]}{[0001|ffff]}，\n通知他们！
033	{[0001|1b00]}{color[0400]}信号{color[ffff]}{[0001|ffff]}会通过这条{[0001|1b00]}{color[0400]}线\n{color[ffff]}{[0001|ffff]}发送给其他小节点。
034	需要注意的是……\n如果{[0001|1b00]}{color[0400]}我检查的物体{color[ffff]}{[0001|ffff]}没有损坏，\n我是不会输出信号的哦！
035	至于要检查的对象……\n可以在我的{[0001|1b00]}{color[0400]}设置画面{color[ffff]}{[0001|ffff]}中选择！
036	请选中{[0001|1b00]}{color[0400]}物体损坏时小节点{color[ffff]}{[0001|ffff]}。
037	打开设置画面……
038	选择“{[0001|1b00]}{color[0400]}要检查什么？{color[ffff]}{[0001|ffff]}”……
039	在这里可以指定要检查的对象……\n也就是选择在{[0001|1b00]}{color[0400]}什么物体损坏时\n{color[ffff]}{[0001|ffff]}输出信号。
040	现在选择的是{[0001|1b00]}{color[0400]}立方体{color[ffff]}{[0001|ffff]}。
041	暂且把{[0001|1b00]}{color[0400]}立方体{color[ffff]}{[0001|ffff]}设置为{[0001|1b00]}{color[0400]}关闭{color[ffff]}{[0001|ffff]}。
042	现在变成了\n{[0001|1b00]}{color[0400]}不检查任何物体{color[ffff]}{[0001|ffff]}的状态。
043	关闭当前画面。
044	再关闭设置画面。
045	那么，\n去{[0001|1b00]}{color[0400]}游戏画面{color[ffff]}{[0001|ffff]}确认一下吧。
046	请再次用{[0001|1b00]}{color[0400]}摇杆{color[ffff]}{[0001|ffff]}移动人\n去破坏{[0001|1b00]}{color[0400]}立方体{color[ffff]}{[0001|ffff]}。
047	……这次游戏没有{[0001|1b00]}{color[0400]}重来{color[ffff]}{[0001|ffff]}。
051	请返回{[0001|1b00]}{color[0400]}程序画面{color[ffff]}{[0001|ffff]}。
052	怎么样？\n刚刚这次没有重来吧？
053	这也是理所当然。\n因为我根本{[0001|1b00]}{color[0400]}没在检查\n任何物体的损坏情况{color[ffff]}{[0001|ffff]}～
123	就算立方体损坏了，\n我也不会输出{[0001|1b00]}{color[0400]}信号{color[ffff]}{[0001|ffff]}……
122	{[0001|1b00]}{color[0400]}重来小节点{color[ffff]}{[0001|ffff]}没有接收到信号，\n游戏自然就不会重来啦！
054	好空虚啊……\n我呀，最喜欢{[0001|1b00]}{color[0400]}物体损坏的瞬间{color[ffff]}{[0001|ffff]}了……
055	{[0201]}，\n能拜托你再帮我改一次设置吗？
056	那么，再次选中他。
057	打开设置画面。
058	打开“{[0001|1b00]}{color[0400]}要检查什么？{color[ffff]}{[0001|ffff]}”的画面。
059	这次把{[0001|1b00]}{color[0400]}球体{color[ffff]}{[0001|ffff]}设置为{[0001|1b00]}{color[0400]}开启{color[ffff]}{[0001|ffff]}。
060	关闭当前画面。
061	按下关闭键。
115	这样就能检查{[0001|1b00]}{color[0400]}球体{color[ffff]}{[0001|ffff]}有没有损坏了……\n……不过现在这里没有{[0001|1b00]}{color[0400]}球体{color[ffff]}{[0001|ffff]}。
116	有请{[0001|1b00]}{color[0400]}球体的物体小节点{color[ffff]}{[0001|ffff]}登场。
119	……你好。\n我是{[0001|1b00]}{color[0400]}球体{color[ffff]}{[0001|ffff]}。
062	去{[0001|1b00]}{color[0400]}游戏画面{color[ffff]}{[0001|ffff]}看看吧。
063	请用{[0001|1b00]}{color[0400]}摇杆{color[ffff]}{[0001|ffff]}移动人\n去破坏{[0001|1b00]}{color[0400]}球体{color[ffff]}{[0001|ffff]}。
065	因为现在在检查\n{[0001|1b00]}{color[0400]}球体损坏情况{color[ffff]}{[0001|ffff]}……
066	所以{[0001|1b00]}{color[0400]}球体损坏时{color[ffff]}{[0001|ffff]}，\n游戏就会重来。
068	而{[0001|1b00]}{color[0400]}右边的立方体不是检查对象{color[ffff]}{[0001|ffff]}，\n所以即使破坏它，游戏也{[0001|1b00]}{color[0400]}不会重来{color[ffff]}{[0001|ffff]}。
069	有兴趣的话可以试试看。
070	那么，请返回{[0001|1b00]}{color[0400]}程序画面{color[ffff]}{[0001|ffff]}。
071	欢迎回来！\n游戏{[0001|1b00]}{color[0400]}重来{color[ffff]}{[0001|ffff]}的样子，\n都确认清楚了吧！
072	能看到{[0001|1b00]}{color[0400]}球体{color[ffff]}{[0001|ffff]}损坏的瞬间，\n我也很满足呢！
073	如果你想把{[0001|1b00]}{color[0400]}某个物体的损坏{color[ffff]}{[0001|ffff]}\n{[0001|1b00]}{color[0400]}作为某件事的发生条件{color[ffff]}{[0001|ffff]}，\n这种情况就是我的用武之地。
074	……咳咳。
075	还没轮到我吗？\n似乎已经超过了\n设置好的时间啊……
076	好了好了，不好意思啦。\n这就交棒给你。
121	唔。\n那我长话短说。
077	我的名字是{[0001|1b00]}{color[0400]}计时小节点{color[ffff]}{[0001|ffff]}。
078	我的工作是\n{[0001|1b00]}{color[0400]}等待设置好的时间过去{color[ffff]}{[0001|ffff]}。
079	就这样。
080	……喂喂！\n难得有机会介绍自己，\n你就不能说得再详细些吗！？
081	我觉得……\n你还是重新讲一遍比较好……
082	唔……没办法……\n那我就破例给你仔细讲一讲吧。
083	我的职责是{[0001|1b00]}{color[0400]}在接收到信号后{color[ffff]}{[0001|ffff]}，\n{[0001|1b00]}{color[0400]}再把信号传递给其他小节点{color[ffff]}{[0001|ffff]}。
084	不过，\n我会{[0001|1b00]}{color[0400]}等待设置好的时间过去{color[ffff]}{[0001|ffff]}，\n然后才发送信号。
085	{[0201]}，\n来看看{[0001|1b00]}{color[0400]}设置时间{color[ffff]}{[0001|ffff]}的地方吧。
086	请选中{[0001|1b00]}{color[0400]}计时小节点{color[ffff]}{[0001|ffff]}。
087	打开设置画面。
088	这里有个“{[0001|1b00]}{color[0400]}在几秒后输出{color[ffff]}{[0001|ffff]}”，\n可以设置在等待几秒后\n再输出信号。
089	当前设置为{[0001|1b00]}1.00{[0001|ffff]}。
090	改成{[0001|1b00]}{color[0400]}5.00{color[ffff]}{[0001|ffff]}试试。
091	关闭设置画面。
092	唔，\n设置成{[0001|1b00]}5.00{[0001|ffff]}了啊……
093	好吧，值得一试。\n去确认看看吧。
094	……去{[0001|1b00]}{color[0400]}游戏画面{color[ffff]}{[0001|ffff]}确认一下吧。
095	请破坏左边的{[0001|1b00]}{color[0400]}球体{color[ffff]}{[0001|ffff]}看看。
096	……
097	……呼——
098	由于计时的设置被延长至{[0001|1b00]}5.00{[0001|ffff]}秒，\n在重来之前多等了不少时间呢……
099	这下计时小节点的职责，\n你应该都明白了吧？
100	那么，\n请返回{[0001|1b00]}{color[0400]}程序画面{color[ffff]}{[0001|ffff]}。
101	我的工作内容你已经很清楚了吧？
102	当你需要{[0001|1b00]}{color[0400]}隔一段时间再做某件事{color[ffff]}{[0001|ffff]}时，\n找我就好了。
103	那么……\n最后是我……{[0001|1b00]}{color[0400]}重来小节点{color[ffff]}{[0001|ffff]}。
104	我的工作是在接收到{[0001|1b00]}{color[0400]}信号{color[ffff]}{[0001|ffff]}后，\n{[0001|1b00]}{color[0400]}让游戏重来{color[ffff]}{[0001|ffff]}。
105	……就这样。
106	唉……为什么我的工作这么单调。\n真羡慕那些引人注目的小节点，\n我好想重新投胎从头来过啊……
107	喂喂！\n你可是很有用的好不好！\n给我振作起来！
108	要是没了{[0001|1b00]}{color[0400]}你{color[ffff]}{[0001|ffff]}，\n游戏就不能{[0001|1b00]}{color[0400]}重复游玩{color[ffff]}{[0001|ffff]}了啊！
109	希望你能好好理解自己的重要性。
110	……嗯。\n谢谢你们。
111	讲了这么多，{[0201]}，\n我们3人齐心协力实现的这个……
112	{[0001|1b00]}{color[0400]}物体损坏后游戏重来的程序{color[ffff]}{[0001|ffff]}，\n你都明白了吗？
113	许多其他程序想必也会需要我们吧。
114	……记得多多用上我们哦。
Guidebook_BreakCounter.msbt
00.00.Alice	……你好，\n{[0201]}。
00.01.Alice	我们可以看到游戏画面中有一个{[0001|1b00]}{color[0400]}人{color[ffff]}{[0001|ffff]}，\n右边有一个{[0001|1b00]}{color[0400]}带数字物体{color[ffff]}{[0001|ffff]}。
00.13.Alice	请尝试{color[0400]}{[0001|1b00]}左右操作摇杆{[0001|ffff]}{color[ffff]}让人移动，\n并用{color[0400]}{[0001|1b00]}键拳击{[0001|ffff]}{color[ffff]}带数字物体。
00.14.Alice	……使出拳击时，\n数字从0变成了1。
00.15.Alice	这是什么原理呢？\n我们去程序画面看看吧。
01.00.Number	你好，\n{[0201]}。
01.00-01.Number	你想知道为什么\n人对带数字物体{color[0400]}{[0001|1b00]}使出拳击{[0001|ffff]}{color[ffff]}时\n{color[0400]}{[0001|1b00]}数字会从0变成1{[0001|ffff]}{color[ffff]}是吗？
01.01.Number	带数字物体上显示的数字\n来自{[0001|1b00]}{color[0400]}AND小节点{color[ffff]}{[0001|ffff]}的输出。
01.02.And	哎呀哎呀！\n这不是{[0201]}吗！
01.03.And	我只会在两边输入都没问题时\n输出1.00！
01.03-01.And	而现在在向我发送信号的\n小节点是……
01.04.Button	请指教！\n先从我开始讲起吧！
01.05.Button	我会在{color[0400]}{[0001|1b00]}键{[0001|ffff]}{color[ffff]}被按下时，\n向AND小节点发送信号！
01.08.Button	不仅如此！\n我同时也在向人小节点\n发送信号！
01.09.Human	没错！\n他的信号也会发送到\n我的{color[0400]}{[0001|1b00]}动作端口{[0001|ffff]}{color[ffff]}！
01.10.Human	我一旦接收到信号，\n就会做出{color[0400]}{[0001|1b00]}拳击{[0001|ffff]}{color[ffff]}动作。
01.12.Human	嘿！看招！！
01.13.Sensor	噫……！
01.15.Sensor	我说你啊……\n不要吓我好不好～
01.16.Sensor	啊……我是在向AND小节点\n发送信号的另一个小节点。
01.17.Sensor	我{color[0400]}{[0001|1b00]}连接{[0001|ffff]}{color[ffff]}着人小节点……\n我现在粘在{color[0400]}{[0001|1b00]}人的正面{[0001|ffff]}{color[ffff]}，\n并检查{color[0400]}{[0001|1b00]}有没有接触到立方体{[0001|ffff]}{color[ffff]}。
01.17-01.Sensor	在游戏画面中能看到人身前粘着\n一个白色的网格对吧？那就是我。
01.17-02.Sensor	当网格{[0001|1b00]}{color[0400]}接触到立方体{color[ffff]}{[0001|ffff]}时，\n我就会输出信号。
01.18.Number	因为我的{[0001|1b00]}物体的形状{[0001|ffff]}是{[0001|1b00]}{color[0400]}立方体{color[ffff]}{[0001|ffff]}……
01.21.Sensor	{[0001|1b00]}{color[0400]}接触到带数字物体时{color[ffff]}{[0001|ffff]}，\n我就会向AND小节点发送信号。
01.22.And	于是，\n上方的输入……就没问题了！
01.26.Button	而我会在{color[0400]}{[0001|1b00]}键{[0001|ffff]}{color[ffff]}被按下时发送信号！
01.27.Sensor	换句话说，\n当我{[0001|1b00]}{color[0400]}接触到带数字物体{color[ffff]}{[0001|ffff]}，\n同时{color[0400]}{[0001|1b00]}键{[0001|ffff]}{color[ffff]}也被按下时……
01.28.And	上面没问题！下面没问题！\n我要输出1.00啦！
01.28-01.Number	于是，我接收到1.00，\n我显示的数字就从0变成了1。
01.29.Human	与此同时……\n人也正好在做{[0001|1b00]}{color[0400]}拳击动作{color[ffff]}{[0001|ffff]}……
01.30.Number	所以我们看到的情况是，\n人对带数字物体使出拳击后，\n数字{[0001|1b00]}{color[0400]}从0变成了1{color[ffff]}{[0001|ffff]}。
01.31.Number	我是不是讲得很清楚了？
01.33.Button	但是，\n拳击击中物体时只能改变数字……\n总觉得这样不够过瘾！
01.34.Human	毕竟我都使出了拳击，\n要是能把物体给破坏掉就好了！
01.35.Number	那样的话，只要让带数字物体\n在{[0001|1b00]}{color[0400]}被拳击击中时损坏{color[ffff]}{[0001|ffff]}，应该就能\n做出用拳击破坏物体的效果。
01.37.And	嗯嗯！\n看来我们需要请{[0001|1b00]}{color[0400]}有能力破坏物体{color[ffff]}{[0001|ffff]}的\n小节点来帮忙啦！
01.38.Alice	那么，有请{[0001|1b00]}{color[0400]}破坏物体小节点{color[ffff]}{[0001|ffff]}登场。
01.39.Destroy	呵呵呵……\n听说你想……破坏{[0001|1b00]}{color[0400]}立方体{color[ffff]}{[0001|ffff]}？
01.40.Destroy	那就如你所愿……\n我将破坏所有{color[0400]}{[0001|1b00]}我接触到的立方体{[0001|ffff]}{color[ffff]}……\n呵呵呵……
01.41.Sensor	噫……\n破坏物体小节点，\n你{[0001|1b00]}{color[0400]}只能在人使出拳击时{color[ffff]}{[0001|ffff]}破坏物体哦！
01.43.Destroy	呵呵呵……真拿你没办法……\n那就请把那个条件传递给我吧……
01.44.Destroy	不然再磨蹭下去……\n说不定我就忍不住要破坏了哦……\n呵呵呵……
01.45.Alice	那我们赶紧开始设计\n{[0001|1b00]}{color[0400]}破坏物体小节点的启动条件{color[ffff]}{[0001|ffff]}吧。
01.46.Alice	请用线把{color[0400]}{[0001|1b00]}AND小节点的输出端口{[0001|ffff]}{color[ffff]}和\n{color[0400]}{[0001|1b00]}破坏物体小节点的破坏端口{[0001|ffff]}{color[ffff]}连接起来。
01.47.Alice	这样一来，\n{color[0400]}{[0001|1b00]}当拳击击中立方体时{[0001|ffff]}{color[ffff]}，\n带数字物体就会损坏了。
01.48.Alice	去游戏画面确认一下吧。
02.02.Alice	请尝试{color[0400]}{[0001|1b00]}左右操作摇杆{[0001|ffff]}{color[ffff]}让人移动，\n并用{color[0400]}{[0001|1b00]}键拳击{[0001|ffff]}{color[ffff]}带数字物体。
02.03.Alice	物体损坏了。
02.04.Alice	虽然真正破坏物体的是\n破坏物体小节点……
02.05.Alice	但看起来就像是人用拳击破坏了\n带数字物体一样……是吧？
02.06.Alice	请按“{color[0400]}{[0001|1b00]}重来{[0001|ffff]}{color[ffff]}”，再试一次。
02.07.00.Alice	当拳击击中时，\n带数字物体会损坏。
02.07.01.Alice	返回程序画面吧。
03.00.Destroy	呵呵呵……\n损坏得一干二净呢……
03.03.Button	不过……\n才使出1次拳击，物体就损坏了，\n感觉不太尽兴啊！
03.04.Sensor	破坏物体小节点，\n有什么办法能让物体\n多被拳击几次再损坏吗？
03.05.Destroy	……\n你的意思是……想让我……\n……手下留情？
03.05-01.Sensor	噫——！
03.06.Destroy	是破坏……还是不破坏……\n只能二选一哦……呵呵。
03.07.Number	那我们换个思路，\n想办法在{color[0400]}{[0001|1b00]}拳击击中多次后{[0001|ffff]}{color[ffff]}才发送信号\n给破坏物体小节点，这不就好了吗。
03.08.And	嚯嚯！\n要是能计算我{[0001|1b00]}{color[0400]}输出信号的次数{color[ffff]}{[0001|ffff]}，\n问题就可以解决了！
03.09.Alice	那我们就来设计一个\n{[0001|1b00]}{color[0400]}让物体在拳击3次后损坏{color[ffff]}{[0001|ffff]}的程序吧。
03.10.Alice	首先，请选中连接在AND小节点\n和破坏物体小节点之间的线。
03.11.Alice	删除这条线。
03.12.Alice	还有连接带数字物体小节点的\n这条线……
03.13.Alice	也要删除。
03.14.Alice	提到计算次数……\n就要有请{[0001|1b00]}{color[0400]}计数小节点{color[ffff]}{[0001|ffff]}了。
03.15.Counter	需要计数吗？\n放心交给我吧。
03.15-01.Counter	到目前为止，\n破坏物体小节点一共说了17次“呵”。
03.15-02.Destroy	……呵呵。\n你是不是……\n……想当下一个目标？
03.15-03.Sensor	噫——！
03.16.Counter	是要计算AND小节点\n{color[0400]}{[0001|1b00]}输出1.00的次数{[0001|ffff]}{color[ffff]}吗？\n明白！
03.16-01.Alice	也就是说……\n他能帮我们计算\n{[0001|1b00]}{color[0400]}带数字物体被拳击的次数{color[ffff]}{[0001|ffff]}。
03.17.Number	让我来显示计数小节点的数值吧。
03.22.Alice	下一步，\n我们需要编写一个程序来\n{color[0400]}{[0001|1b00]}把计数小节点的输出和3作比较{[0001|ffff]}{color[ffff]}。
03.23.Alice	有请{[0001|1b00]}{color[0400]}常数小节点{color[ffff]}{[0001|ffff]}和\n{[0001|1b00]}{color[0400]}比较小节点{color[ffff]}{[0001|ffff]}登场……
03.24.Constant	我是常数小节点，\n我负责输出3.00，\n守常不变地输出3.00。
03.25.Compare	嗨，{[0201]}。\n我是比较小节点！
03.26.Compare	常数小节点的输出……
03.27.Compare	和计数小节点的输出……
03.28.Compare	这两个数值是否{color[0400]}{[0001|1b00]}相同{[0001|ffff]}{color[ffff]}……\n你一定很好奇对不对！？
03.28-01.Compare	如果{color[0400]}{[0001|1b00]}相同{[0001|ffff]}{color[ffff]}，\n我就会输出信号！
03.28-01.Alice	也就是说{[0001|1b00]}{color[0400]}带数字物体被拳击3次后{color[ffff]}{[0001|ffff]}，\n比较小节点就会输出信号。
03.29.Alice	最后，用线连接{color[0400]}{[0001|1b00]}比较小节点的输出端口{[0001|ffff]}{color[ffff]}\n和{color[0400]}{[0001|1b00]}破坏物体小节点的破坏端口{[0001|ffff]}{color[ffff]}……
03.30.Alice	这样一来，\n{[0001|1b00]}{color[0400]}让物体在拳击3次后损坏的程序{color[ffff]}{[0001|ffff]}\n就大功告成啦！
03.31.Alice	去游戏画面确认一下吧。
04.00.Alice	现在带数字物体上显示的数字是\n{[0001|1b00]}{color[0400]}拳击击中物体的次数{color[ffff]}{[0001|ffff]}。
04.01.Alice	请尝试{color[0400]}{[0001|1b00]}左右操作摇杆{[0001|ffff]}{color[ffff]}让人移动，\n并用{color[0400]}{[0001|1b00]}键拳击{[0001|ffff]}{color[ffff]}带数字物体{color[0400]}{[0001|1b00]}3次{[0001|ffff]}{color[ffff]}。
04.02.Alice	第3次拳击时物体损坏了。
04.03.Alice	让我们在脑海中想象\n刚才编写程序时用到的\n每个小节点运作的情景……
04.04.Alice	请按“{color[0400]}{[0001|1b00]}重来{[0001|ffff]}{color[ffff]}”，再试一次。
04.05.00.Alice	当拳击第3次击中时，\n带数字物体会损坏。
04.05.01.Alice	返回程序画面吧。
05.00.Number	怎么样？\n有没有觉得……\n我比先前坚固了一点？
05.02.Alice	……好。\n虽然这次的讲解有些复杂……
05.03.Alice	但让物体在拳击3次后损坏的原理\n……你应该明白了吧？
05.04.Sensor	把接触感应器连接到\n人小节点的正面……
05.07.And	当用来使出拳击的输入和\n接触感应器小节点的反应\n两者都没问题时，我就会输出信号……
05.08.Counter	然后我会计算AND小节点\n输出信号的次数……
05.09.Constant	当这个次数等于3.00时！
05.10.Number	就意味着拳击击中了3次，\n于是破坏物体小节点会破坏物体。
05.12.Alice	只要灵活组合各种小节点，\n就能实现像这样复杂的程序。
05.13.Alice	那今天就到这里吧。
05.14.Human	拜拜啦。
05.15.Destroy	呵呵……\n呵呵呵呵……\n……呵呵呵呵呵呵。
05.16.Counter	加上刚才这些，\n你一共说了31次“呵”。
Guidebook_Calculation.msbt
002	……\n画面上有个向右移动的箱子……
003	这个箱子经过编程，\n以{color[0400]}{[0001|1b00]}每秒1.00m的速度{[0001|ffff]}{color[ffff]}移动着。
004	这次我们要学习的就是，\n运用{color[0400]}{[0001|1b00]}计算{[0001|ffff]}{color[ffff]}来改变箱子的移动速度。
005	那么，请前往程序画面。
006	你好！\n{[0201]}！\n你是来运动的吗！？
009	我是{[0001|1b00]}{color[0400]}常数小节点{color[ffff]}{[0001|ffff]}，\n我负责输出{color[0400]}{[0001|1b00]}1.00{[0001|ffff]}{color[ffff]}。
009-001	我正在守常不变地\n向{[0001|1b00]}{color[0400]}移动物体小节点{color[ffff]}{[0001|ffff]}发送着1.00。
010	因为移动物体小节点\n接收到的数值是{[0001|1b00]}{color[0400]}1.00{color[ffff]}{[0001|ffff]}……\n所以箱子以{[0001|1b00]}{color[0400]}每秒1.00m的速度{color[ffff]}{[0001|ffff]}移动着。
011	难得来运动，\n{[0201]}，\n你也觉得这速度不过瘾吧！？
011-01	必须加速！\n让速度快起来！！
011-02	虽然直接把常数小节点的数值\n调高就能加快速度……
011-03	但我们这次还是试试用{[0001|1b00]}{color[0400]}计算小节点{color[ffff]}{[0001|ffff]}\n来改变输入到移动物体小节点的\n数值吧。
011-0301	首先，请选中连接在常数小节点\n和移动物体小节点之间的线……
011-0302	删除。
011-04	然后，\n有请{[0001|1b00]}{color[0400]}计算小节点{color[ffff]}{[0001|ffff]}登场。
020	大家好，\n我是{color[0400]}{[0001|1b00]}计算小节点{[0001|ffff]}{color[ffff]}。
021	是一台搭载了四则运算装置的\n高性能计算器。
022	四则运算……\n就是指{[0001|1b00]}{color[0400]}＋－×÷{color[ffff]}{[0001|ffff]}。
023	我拥有{color[0400]}{[0001|1b00]}2个{[0001|ffff]}{color[ffff]}输入端口……
024	当有数值输入我的端口时……
025	我就会用这2个数值进行计算。
026	计算结果将从这里输出。
028	计算过程只需要一瞬间就能完成。
029	因为我是一台高性能计算器。
030	也就是说，你能够\n{color[0400]}{[0001|1b00]}使用2个数值进行计算{[0001|ffff]}{color[ffff]}对吗？
031	没错。
032	我现在的计算方法设置为……\n{color[0400]}{[0001|1b00]}加法{[0001|ffff]}{color[ffff]}。
033	那我们就给计算小节点\n输入2个常数，\n做一下{[0001|1b00]}{color[0400]}加法{color[ffff]}{[0001|ffff]}看看。
033-03	再找1个常数小节点来帮忙吧。
033-04	没问题，我来帮忙。\n我能守常不变地输出4.00。
034	把上方的常数小节点连接到\n计算小节点{[0001|1b00]}{color[0400]}上方的输入端口{color[ffff]}{[0001|ffff]}。
035	我在输出1.00，\n始终输出1.00。
036	然后把下方的常数小节点连接到\n计算小节点{[0001|1b00]}{color[0400]}下方的输入端口{color[ffff]}{[0001|ffff]}。
037	我在输出4.00，\n始终输出4.00。
038	检测到2个数值的输入，\n现在开始计算。
039	1.00+4.00={color[0400]}{[0001|1b00]}5.00{[0001|ffff]}{color[ffff]}……
040	把计算小节点的输出连接到\n移动物体小节点的{[0001|1b00]}{color[0400]}X端口{color[ffff]}{[0001|ffff]}。
042	这样一来，\n{color[0400]}{[0001|1b00]}2个数值相加后的计算结果{[0001|ffff]}{color[ffff]}\n就会{color[0400]}{[0001|1b00]}成为物体的移动速度{[0001|ffff]}{color[ffff]}。
043	现在物体会怎样移动呢……\n去游戏画面确认一下吧。
044	……速度比刚才快了。
045	如果想再看一遍，\n按“{[0001|1b00]}{color[0400]}重来{color[ffff]}{[0001|ffff]}”即可。
046	1.00+4.00=5.00……\n所以箱子现在\n在以{color[0400]}{[0001|1b00]}每秒5.00m的速度{[0001|ffff]}{color[ffff]}移动着。
047	我们再去试试其他计算方法吧。
048	哇哦～！\n果然尽情奔跑的感觉就是爽！！
048-01	{[0201]}，\n你也来和我一起跑步吧！！
049	试过了加法……\n下面来试试{[0001|1b00]}{color[0400]}减法{color[ffff]}{[0001|ffff]}吧。
050	你可以在我的设置中\n更改{color[0400]}{[0001|1b00]}计算方法{[0001|ffff]}{color[ffff]}。
051	请选中计算小节点。
052	打开设置。
053	{[0001|1b00]}计算方法{[0001|ffff]}共有{color[0400]}4种{color[ffff]}，\n分别为{[0001|1b00]}{color[0400]}＋－×÷{color[ffff]}{[0001|ffff]}。
054	把{[0001|1b00]}计算方法{[0001|ffff]}改为{[0001|1b00]}{color[0400]}－{color[ffff]}{[0001|ffff]}试试。
055	关闭设置。
056	计算方法设置为{[0001|1b00]}{color[0400]}减法{color[ffff]}{[0001|ffff]}。
057	1.00-4.00 ={[0001|1b00]}{color[0400]}-3.00{color[ffff]}{[0001|ffff]}……
058	也就是说，移动物体小节点将会\n接收到的计算结果为{[0001|1b00]}{color[0400]}-3.00{color[ffff]}{[0001|ffff]}。
059	输入{[0001|1b00]}{color[0400]}负数{color[ffff]}{[0001|ffff]}时箱子会怎样移动呢？\n去游戏画面确认一下吧。
060	……箱子往左移动。
061	现在计算的是……\n1.00-4.00={[0001|1b00]}{color[0400]}-3.00{color[ffff]}{[0001|ffff]}。
062	所以箱子变成以{color[0400]}{[0001|1b00]}每秒-3.00m的速度{[0001|ffff]}{color[ffff]}移动。
063	当速度为{[0001|1b00]}{color[0400]}负数{color[ffff]}{[0001|ffff]}时，\n物体会朝{[0001|1b00]}{color[0400]}反方向{color[ffff]}{[0001|ffff]}移动。
064	请返回程序画面。
064-01	哇哦～！\n往反方向跑的感觉可真新鲜～！
065	目前为止，我们在计算中\n用到的都是常数小节点……
066	下面我们将学习通过计算\n{color[0400]}{[0001|1b00]}摇杆的输入{[0001|ffff]}{color[ffff]}来移动物体。
067	请常数小节点退场……
068	然后有请{color[0400]}{[0001|1b00]}摇杆小节点{[0001|ffff]}{color[ffff]}登场。
069	你好——
070	摇杆的动作竟然也能计算！？
071	正如常数小节点能以{color[0400]}{[0001|1b00]}信号{[0001|ffff]}{color[ffff]}的形式\n传递{color[0400]}{[0001|1b00]}数值{[0001|ffff]}{color[ffff]}……
072	摇杆小节点也能以{[0001|1b00]}{color[0400]}数值{color[ffff]}{[0001|ffff]}的形式\n传递{[0001|1b00]}{color[0400]}摇杆的动作{color[ffff]}{[0001|ffff]}。
073	没有推动摇杆时输出的数值为0.00……
074	稍微推动一点会变成0.20……
075	再推动一点会变成0.50……
076	推到底时就变成1.00啦——
077	像这样以{[0001|1b00]}{color[0400]}数值的大小{color[ffff]}{[0001|ffff]}表示\n推动摇杆的幅度。
078	也就是说，连接线中传递的{[0001|1b00]}{color[0400]}信号{color[ffff]}{[0001|ffff]}，\n其{[0001|1b00]}{color[0400]}本质{color[ffff]}{[0001|ffff]}就是{[0001|1b00]}{color[0400]}数值{color[ffff]}{[0001|ffff]}。
080	把摇杆小节点的输出端口连接到\n计算小节点{color[0400]}{[0001|1b00]}上方的输入端口{[0001|ffff]}{color[ffff]}。
081	已接收到摇杆小节点的动作信号。
082	信号即数值……
083	只要是数值，\n我就能计算。
083-01	因为我是一台高性能计算器。
084	那这次就用摇杆的输入\n来做{[0001|1b00]}{color[0400]}乘法{color[ffff]}{[0001|ffff]}看看吧。
084-01	首先，把常数小节点\n输出的数值设置为{[0001|1b00]}{color[0400]}1.00{color[ffff]}{[0001|ffff]}。
085	请选中常数小节点。
086	打开设置。
087	把常数设为{color[0400]}{[0001|1b00]}1.00{[0001|ffff]}{color[ffff]}。
088	关闭设置。
138	然后，\n把{[0001|1b00]}计算方法{[0001|ffff]}更改为{color[0400]}{[0001|1b00]}×{[0001|ffff]}{color[ffff]}。
089	请选中计算小节点。
090	打开设置。
091	把{[0001|1b00]}计算方法{[0001|ffff]}改为{[0001|1b00]}{color[0400]}×{color[ffff]}{[0001|ffff]}。
092	关闭设置。
093	开始计算\n{color[0400]}{[0001|1b00]}摇杆推动幅度×1.00{[0001|ffff]}{color[ffff]}。
094	任何数值乘以{[0001|1b00]}{color[0400]}1.00{color[ffff]}{[0001|ffff]}后，\n计算结果都是{[0001|1b00]}{color[0400]}原来的数值{color[ffff]}{[0001|ffff]}。
096	换句话说，现在物体做出的动作，\n应该跟摇杆小节点直接连接\n移动物体小节点时的动作相同。
097	去游戏画面确认一下吧。
098	请用摇杆让箱子左右移动。
099	把摇杆推到底时，\n移动速度为{[0001|1b00]}{color[0400]}每秒1.00ｍ{color[ffff]}{[0001|ffff]}。
100	请记住现在的速度。
101	然后返回程序画面。
137	那么，如果想利用计算来\n提高摇杆移动箱子的速度……
102	你觉得该怎么做呢？
103	输入到移动物体小节点的数值越大，\n物体的移动速度就越快……
103-01	那就把摇杆小节点输出的数值……\n变成{[0001|1b00]}{color[0400]}3倍{color[ffff]}{[0001|ffff]}看看吧。
104	请选中常数小节点……
105	打开设置。
106	改为{color[0400]}{[0001|1b00]}3.00{[0001|ffff]}{color[ffff]}。
107	关闭设置。
108	{color[0400]}{[0001|1b00]}摇杆推动幅度×3.00{[0001|ffff]}{color[ffff]}……\n换言之，我计算出的结果\n是摇杆推动幅度的3倍。
109	那么，\n去游戏画面确认一下变化吧。
110	请用摇杆让箱子移动看看。
111	好快。
112	因为摇杆小节点\n输出的数值变成了3倍，\n所以箱子以{[0001|1b00]}{color[0400]}3倍的速度{color[ffff]}{[0001|ffff]}移动。
113	请返回程序画面。
114	最后……\n我们再试试{[0001|1b00]}{color[0400]}除法{color[ffff]}{[0001|ffff]}计算。
115	请选中计算小节点。
116	打开设置。
117	把{[0001|1b00]}计算方法{[0001|ffff]}改为{[0001|1b00]}{color[0400]}÷{color[ffff]}{[0001|ffff]}。
118	关闭设置。
119	开始计算\n{color[0400]}{[0001|1b00]}摇杆推动幅度÷3.00{[0001|ffff]}{color[ffff]}。
120	你觉得把信号除以3.00后，\n物体的{[0001|1b00]}{color[0400]}速度{color[ffff]}{[0001|ffff]}会如何变化呢？
121	去游戏画面确认一下吧。
122	用摇杆让箱子移动看看……
123	……动作变得好～慢～呀～
124	由于现在摇杆小节点\n输出的数值被除以{[0001|1b00]}{color[0400]}3.00{color[ffff]}{[0001|ffff]}……
125	导致速度降低到\n通常的{[0001|1b00]}{color[0400]}3分之1{color[ffff]}{[0001|ffff]}……
126	像这样，只要用好计算小节点，\n我们就能自由调节摇杆小节点的\n输出大小……
126-01	从而加快或减慢箱子的移动速度。
127	请返回程序画面。
128	{[0001|1b00]}{color[0400]}信号{color[ffff]}{[0001|ffff]}的本质就是{[0001|1b00]}{color[0400]}数值{color[ffff]}{[0001|ffff]}……
129	数值可以加减乘除……\n进行各种计算。
130	摇杆小节点输出的也是{[0001|1b00]}{color[0400]}数值{color[ffff]}{[0001|ffff]}……
131	所以也可以通过计算\n变大或变小。
132	无论什么信号，\n我都能加减乘除……\n自由计算！
133	因为我是一台高性能计算器！！
134	那我问你——\n你能计算出我现在在想什么吗——？
135	这种事情……\n即便高性能如我，\n也是无法计算的……
Guidebook_CarNode.msbt
00.00.Alice	……你好，{[0201]}。
00.01.Alice	现在我们可以看到\n游戏画面中停着一辆{[0001|1b00]}{color[0400]}汽车{color[ffff]}{[0001|ffff]}。
00.02.Alice	按{[0001|1b00]}{color[0400]}键{color[ffff]}{[0001|ffff]}可以让汽车行驶起来，\n试试看吧。
00.03.Alice	按下键时，\n汽车就会向前行驶。
00.04.Alice	我们这次要学习的内容，\n就是像这样用手柄控制汽车的程序。
00.05.Alice	那么，请前往程序画面。
01.00.Button	请指教！\n又见面了，{[0201]}。
01.01.StickL	你好——
01.02.Camera	……请多关照。
01.03.Car	滴滴叭叭呜！\n{[0201]}，\n今天来是有什么事吗？
01.04.Car	咦，你想了解为什么操作手柄\n能让{[0001|1b00]}{color[0400]}汽车{color[ffff]}{[0001|ffff]}“呜～”地跑起来是吗？
01.05.Camera	这次似乎跟照相机没什么关系，\n我就安静地专心拍摄{[0001|1b00]}{color[0400]}汽车小节点{color[ffff]}{[0001|ffff]}好了。
01.06.Button	那我们就开始讲解喽！
01.07.Button	首先，我的职责是把{[0001|1b00]}{color[0400]}键{color[ffff]}{[0001|ffff]}的情况\n通过线传递给{[0001|1b00]}{color[0400]}汽车小节点{color[ffff]}{[0001|ffff]}。
01.08.Car	是的，你的信号正滴水不漏地\n向我的{[0001|1b00]}{color[0400]}加速端口{color[ffff]}{[0001|ffff]}传来！
01.09.Car	当键被按下时，\n加速端口就会接收到{[0001|1b00]}{color[0400]}1.0{color[ffff]}{[0001|ffff]}……
01.10.Car	于是汽车就“轰～”地开始加速啦！
01.11.Button	那如果一直按着键不放，\n汽车会不会越跑越快呢？
01.12.Car	汽车的最大速度可以由我设置中的\n{[0001|1b00]}{color[0400]}移动速度{color[ffff]}{[0001|ffff]}决定。
01.13.Alice	那么，请选中{[0001|1b00]}{color[0400]}汽车小节点{color[ffff]}{[0001|ffff]}。
01.14.Alice	打开设置画面。
01.15.Alice	你可以在这里设置{[0001|1b00]}{color[0400]}移动速度{color[ffff]}{[0001|ffff]}……
01.16.Alice	设置为上限值{[0001|1b00]}{color[0400]}2.00{color[ffff]}{[0001|ffff]}看看。
01.17.Alice	关闭设置画面。
01.18.Alice	去游戏画面确认一下变化吧。
02.00.Alice	请按下{[0001|1b00]}{color[0400]}键{color[ffff]}{[0001|ffff]}加速看看。
02.01.Alice	速度比刚才更快了。
02.02.Alice	像这样，我们可以在设置中\n{[0001|1b00]}{color[0400]}调整汽车的行驶速度{color[ffff]}{[0001|ffff]}。
02.03.Alice	顺带一提，如果汽车从地面边缘掉下去了，\n按下“重来”即可从头来过。
02.04.Alice	那么，请返回程序画面。
03.00.Car	滴滴叭叭呜！\n看到我潇洒奔驰的身姿了吗？
03.01.StickL	不过汽车好像一旦开始行驶，\n就不能{[0001|1b00]}{color[0400]}迅速地停下来{color[ffff]}{[0001|ffff]}了——
03.02.Car	请仔细观察我的{[0001|1b00]}加速{[0001|ffff]}端口。
03.03.Car	有个{[0001|1b00]}{color[0400]}{color[ffff]}{[0001|ffff]}的图标对吧？
03.04.Car	如果有{[0001|1b00]}{color[0400]}负数{color[ffff]}{[0001|ffff]}传递到加速端口，\n我也能{[0001|1b00]}{color[0400]}倒退行驶{color[ffff]}{[0001|ffff]}哦。
03.05.Button	但我只能输出{[0001|1b00]}{color[0400]}0或1{color[ffff]}{[0001|ffff]}怎么办！
03.06.StickL	我能输出{[0001|1b00]}{color[0400]}-1.0到1.0{color[ffff]}{[0001|ffff]}的数值哦——
03.07.Alice	那就再请1个摇杆小节点\n来帮忙吧。
03.08.StickR	转呀转——\n{[0201]}，我来帮忙啦——\n我能传递{[0001|1b00]}{color[0400]}摇杆上下{color[ffff]}{[0001|ffff]}操作的情况哦——
03.09.Alice	请选中连接在按键小节点\n和汽车小节点之间的线。
03.10.Alice	删除。
03.11.Alice	把新登场的摇杆小节点的{[0001|1b00]}{color[0400]}输出端口{color[ffff]}{[0001|ffff]}\n连接到汽车小节点的{[0001|1b00]}{color[0400]}加速端口{color[ffff]}{[0001|ffff]}。
03.12.Alice	好了，去游戏画面\n确认一下变化吧。
04.00.Alice	请{[0001|1b00]}{color[0400]}上下操作摇杆{color[ffff]}{[0001|ffff]}让汽车行驶起来。
04.01.Alice	现在只要改变推动{[0001|1b00]}{color[0400]}摇杆{color[ffff]}{[0001|ffff]}的方向，\n就能让汽车反向行驶。
04.02.Alice	虽然没有刹车专用的端口……
04.03.Alice	但只要用好反向加速，\n同样能{[0001|1b00]}{color[0400]}起到刹车的作用{color[ffff]}{[0001|ffff]}。
04.04.Alice	话说你有没有发现，\n{[0001|1b00]}{color[0400]}左右操作摇杆{color[ffff]}{[0001|ffff]}\n可以控制方向盘？
04.05.Alice	{[0001|1b00]}{color[0400]}上下操作摇杆{color[ffff]}{[0001|ffff]}控制加速，\n{[0001|1b00]}{color[0400]}左右操作摇杆{color[ffff]}{[0001|ffff]}控制方向盘，\n试试看吧。
04.06.Alice	看，{[0001|1b00]}{color[0400]}左右操作摇杆{color[ffff]}{[0001|ffff]}可以转弯。
04.07.Alice	那么，我们返回程序画面，\n去看看方向盘的原理吧。
05.00.Car	怎么样？\n无论前进还是倒车，{[0001|1b00]}{color[0400]}右转{color[ffff]}{[0001|ffff]}还是{[0001|1b00]}{color[0400]}左转{color[ffff]}{[0001|ffff]}，\n全都可以随心所欲地操作对吧！
05.01.StickL	方向盘的操作是这样的——
05.02.StickL	首先我会把{[0001|1b00]}{color[0400]}摇杆左右{color[ffff]}{[0001|ffff]}操作的情况\n传递给汽车小节点——
05.03.Car	我用{[0001|1b00]}{color[0400]}方向盘端口{color[ffff]}{[0001|ffff]}接收到信号后，\n汽车就会转弯了。
05.04.Car	看到{[0001|1b00]}方向盘{[0001|ffff]}端口那里的{[0001|1b00]}{color[0400]}{color[ffff]}{[0001|ffff]}图标了吗？
05.05.Car	意思是说我会在\n接收到{[0001|1b00]}{color[0400]}正数{color[ffff]}{[0001|ffff]}时向{[0001|1b00]}{color[0400]}右{color[ffff]}{[0001|ffff]}打方向盘，\n接收到{[0001|1b00]}{color[0400]}负数{color[ffff]}{[0001|ffff]}时向{[0001|1b00]}{color[0400]}左{color[ffff]}{[0001|ffff]}打方向盘。
05.06.StickL	控制好推动摇杆的力度，\n还能调整转弯的幅度哦——
05.07.Camera	……无论左转右转，我都奉陪到底。
05.08.StickR	但当汽车停在原地不动时，\n好像不管怎么打方向盘，\n都不能改变汽车的方向——
05.09.Car	呜……
05.10.Car	就算操作方向盘改变轮胎方向，\n在{[0001|1b00]}{color[0400]}汽车没在行驶{color[ffff]}{[0001|ffff]}的时候，\n也是{[0001|1b00]}{color[0400]}转不了弯{color[ffff]}{[0001|ffff]}的。
05.11.Button	原来如此，因为改变的只是轮胎的方向，\n所以倒车时的转弯方向和前进时是相反的！
05.12.Button	我插一句，就没什么我能干的活儿吗！？
05.13.Button	我简直闲得发慌！\n做几个深蹲好了！\n呼！呼！
05.14.Car	请看我最下面的输入端口！\n深蹲算什么，我还能{[0001|1b00]}{color[0400]}跳跃{color[ffff]}{[0001|ffff]}呢！
05.15.Button	你是说深蹲跳！？\n提升训练强度这种事我最欢迎了！\n让我来帮你！呼！呼！
05.16.Alice	那么，就用按键小节点\n让汽车小节点做深蹲……
05.17.Alice	……不对，是让汽车小节点跳跃起来吧。
05.18.Alice	用线把按键小节点的{[0001|1b00]}{color[0400]}输出端口{color[ffff]}{[0001|ffff]}\n连接到汽车小节点的{[0001|1b00]}{color[0400]}跳跃端口{color[ffff]}{[0001|ffff]}。
05.19.Alice	因为键和摇杆不方便同时操作，\n所以把按键小节点改成{[0001|1b00]}{color[0400]}键{color[ffff]}{[0001|ffff]}吧。
05.20.Alice	打开按键小节点的设置。
05.21.Alice	把{[0001|1b00]}{color[0400]}键{color[ffff]}{[0001|ffff]}设置为{[0001|1b00]}{color[0400]}关闭{color[ffff]}{[0001|ffff]}。
05.22.Alice	把{[0001|1b00]}{color[0400]}键{color[ffff]}{[0001|ffff]}设置为{[0001|1b00]}{color[0400]}开启{color[ffff]}{[0001|ffff]}。
05.23.Alice	关闭设置画面。
05.24.Alice	好，去游戏画面确认一下吧。
06.00.Alice	{[0001|1b00]}{color[0400]}上下操作摇杆{color[ffff]}{[0001|ffff]}让汽车行驶起来，\n同时按下{[0001|1b00]}{color[0400]}键{color[ffff]}{[0001|ffff]}试试。
06.01.Alice	看，汽车能{[0001|1b00]}{color[0400]}跳跃{color[ffff]}{[0001|ffff]}了。
06.02.Alice	那么，请返回程序画面。
07.00.Car	蹦跳～蹦跳～\n看到我潇洒帅气的{[0001|1b00]}{color[0400]}跳跃{color[ffff]}{[0001|ffff]}了吗？
07.01.Button	你跳得不太高啊。\n这说明你缺乏锻炼！呼！呼！
07.02.Car	我的设置中有个叫{[0001|1b00]}{color[0400]}跳跃力{color[ffff]}{[0001|ffff]}的项目，\n可以在那里更改我跳跃的高度哦。
07.03.Alice	那么，请选中汽车小节点……
07.04.Alice	打开设置画面。
07.05.Alice	{[0001|1b00]}{color[0400]}跳跃力{color[ffff]}{[0001|ffff]}的设置在这里。
07.06.Alice	设置为上限值{[0001|1b00]}{color[0400]}2.00{color[ffff]}{[0001|ffff]}看看。
07.07.Alice	关闭设置画面。
07.08.Alice	去游戏画面确认一下变化吧。
08.00.Alice	{[0001|1b00]}{color[0400]}上下操作摇杆{color[ffff]}{[0001|ffff]}让汽车行驶起来，\n同时按下{[0001|1b00]}{color[0400]}键{color[ffff]}{[0001|ffff]}跳跃看看。
08.01.Alice	比刚才跳得更高了。
08.02.Alice	像这样，我们在设置中\n{[0001|1b00]}{color[0400]}可以调整{color[ffff]}{[0001|ffff]}汽车的{[0001|1b00]}{color[0400]}跳跃力{color[ffff]}{[0001|ffff]}。
08.03.Alice	那么，请前往程序画面。
09.00.Car	蹦蹦跳～蹦蹦跳～\n我的全力一跃是不是很厉害！
09.01.StickR	原来你能跳那么高啊——
09.02.Camera	……无论你跳得有多高，我都奉陪到底。
09.03.Button	还挺厉害的嘛！\n不过在你以为已经到达极限时，\n真正锻炼的才刚刚开始！呼！呼！
09.05.StickL	话说回来——\n跳跃后停留在空中期间，\n似乎没法控制汽车呢——
09.06.Car	呜呜……
09.07.Car	在轮胎没碰到地面的时候，\n汽车是{[0001|1b00]}{color[0400]}转不了弯{color[ffff]}{[0001|ffff]}的。
09.08.Car	如果在全速行驶时\n得意忘形地跳起来，有可能会\n冲出平面的边缘掉下去哦……
09.10.Alice	就算在程序中也要牢记，\n道路千万条，{[0001|1b00]}{color[0400]}安全第一条{color[ffff]}{[0001|ffff]}。
09.11.Camera	……哪怕是地底深渊，我都奉陪到底。
09.13.Alice	好，讲解了那么多，\n对汽车小节点你应该有所了解了吧？
09.14.Car	加速端口接收到正数，\n汽车就会向前行驶。
09.15.StickR	接收到负数，\n汽车就会后退——
09.16.Car	方向盘端口能改变轮胎的方向，\n让汽车左转或右转。
09.17.StickL	正数向右转，\n负数向左转——
09.18.Car	还有跳跃端口，\n它能让汽车蹦蹦跳哦。
09.19.Button	跳跃力和移动速度\n都可以在设置画面中调整！
09.20.Alice	另外不要忘记，\n汽车轮胎离开地面后，\n你将无法控制汽车。
09.21.Alice	那么，今天就到这里吧。
09.22.Car	我能不能帅气地奔驰都靠你啦！
09.23.Camera	……那就下回再见了。
09.24.Camera	……今天也拍出了完美的作品呢。
Guidebook_Compare.msbt
000-000	你好，{[0201]}。
000	这次是想了解{[0001|1b00]}{color[0400]}比较小节点{color[ffff]}{[0001|ffff]}吗？
001	那就去程序画面\n直接向比较小节点尽情提问吧。
002	嗨，{[0201]}。
003	想深入了解我吗！？
004	想知道我和其他小节点的\n不同之处吗！？
005	我的作用呢～是能够比较{[0001|1b00]}{color[0400]}输入端口\n{color[ffff]}{[0001|ffff]}接收到的{[0001|1b00]}{color[0400]}2个数值{color[ffff]}{[0001|ffff]}……
006	并在{[0001|1b00]}{color[0400]}满足条件{color[ffff]}{[0001|ffff]}时{[0001|1b00]}{color[0400]}输出信号{color[ffff]}{[0001|ffff]}！
006-001	现在的条件是\n{[0001|1b00]}{color[0400]}2个数值相同{color[ffff]}{[0001|ffff]}！
006-002	去我的设置画面确认一下\n现在的条件吧！
006-003	“{[0001|1b00]}如何比较？{[0001|ffff]}”当前设置为{[0001|1b00]}{color[0400]}＝{color[ffff]}{[0001|ffff]}。
006-004	这意味着，\n当{[0001|1b00]}{color[0400]}上方输入端口的数值＝下方输入端口的数值{color[ffff]}{[0001|ffff]}时，\n比较小节点就会输出信号。
006-005	确认完条件后，\n请关闭设置画面。
006-006	如何！？\n条件变成了＝，对吧？
006-007	那接下来你一定很好奇……\n我实际连接其他小节点后……\n会发生什么吧！？
014	请常数小节点和特效小节点\n来帮忙测试一下吧！
015	到！\n我是常数小节点，\n我有一颗始终不变的专一之心！
016	你好～\n我是特效小节点，\n我有一颗冷场也不气馁的坚强之心。
017	我的努力方向就是\n尽量不要唉声叹气。\n还请多多关照啦～
018	唔——\n我会{[0001|1b00]}{color[0400]}比较2个输入端口的数值{color[ffff]}{[0001|ffff]}……
019	只要满足条件，\n我就会向{[0001|1b00]}{color[0400]}特效小节点输出信号{color[ffff]}{[0001|ffff]}。
020	换句话说！\n{[0001|1b00]}{color[0400]}一旦满足了条件{color[ffff]}{[0001|ffff]}，\n我就会轰轰烈烈地{[0001|1b00]}{color[0400]}拉响拉炮{color[ffff]}{[0001|ffff]}！
021	现在上方的常数小节点是{[0001|1b00]}{color[0400]}3.00{color[ffff]}{[0001|ffff]}……
022	下方的常数小节点也是{[0001|1b00]}{color[0400]}3.00{color[ffff]}{[0001|ffff]}……
023	你认为这种情况下\n拉炮会响吗？
024	去游戏画面验证一下\n与你心中的答案是否一致吧。
025	正确答案是\n{[0001|1b00]}{color[0400]}拉炮会响{color[ffff]}{[0001|ffff]}。
026	两个常数小节点\n都是{[0001|1b00]}{color[0400]}相同的数值{color[ffff]}{[0001|ffff]}，\n所以满足了条件。
027	那么，请前往程序画面。
028	如何？\n你猜对了吗？
029	接下来我们尝试\n{[0001|1b00]}{color[0400]}更改下方的常数小节点的数值{color[ffff]}{[0001|ffff]}！
030	请选中常数小节点。
031	打开设置画面。
032	设置为{[0001|1b00]}{color[0400]}5.00{color[ffff]}{[0001|ffff]}。
033	关闭设置画面。
034	现在这种情况下，\n拉炮还会响吗？
035	去游戏画面验证一下\n与你心中的答案是否一致吧。
036	正确答案是\n{[0001|1b00]}{color[0400]}拉炮不会响{color[ffff]}{[0001|ffff]}。
037	因为2个常数小节点的数值分别为\n3.00和5.00，两者{[0001|1b00]}{color[0400]}是不同的数值{color[ffff]}{[0001|ffff]}，\n所以没有满足条件。
038	那么，请前往程序画面。
039	问题来了！
040	在{[0001|1b00]}{color[0400]}不改变{color[ffff]}{[0001|ffff]}2个常数小节点\n数值的前提下……
041	你认为{[0001|1b00]}{color[0400]}如何更改{color[ffff]}{[0001|ffff]}我的设置，\n才能让{[0001|1b00]}{color[0400]}拉炮响起{color[ffff]}{[0001|ffff]}呢？
042	请尝试思考一下吧。
043	那么，请选中比较小节点。
044	打开设置画面。
045	正确答案是……
046	设置为{[0001|1b00]}{color[0400]}＜{color[ffff]}{[0001|ffff]}就可以啦～
046-001	或者设置为{[0001|1b00]}≦{[0001|ffff]}其实也可以，\n不过这次还是先用{[0001|1b00]}＜{[0001|ffff]}吧。
047	这样一来，条件就变成了\n{[0001|1b00]}{color[0400]}上方输入端口的数值＜下方输入端口的数值{color[ffff]}{[0001|ffff]}……
048	也就是\n{[0001|1b00]}{color[0400]}下方输入端口的数值要比{color[ffff]}{[0001|ffff]}\n{[0001|1b00]}{color[0400]}上方输入端口的数值更大{color[ffff]}{[0001|ffff]}。
049	关闭设置画面。
049-001	上方的常数小节点是{[0001|1b00]}3.00{[0001|ffff]}，\n下方的常数小节点是{[0001|1b00]}5.00{[0001|ffff]}……
049-002	3.00＜5.00，\n应该能满足条件。
050	好，去游戏画面\n确认一下吧。
051	和预测一致，拉炮响了。
052	那么，请前往程序画面。
053	像这样，\n我会比较2个数值……
054	{[0001|1b00]}{color[0400]}判断{color[ffff]}{[0001|ffff]}两者是否满足{[0001|1b00]}{color[0400]}条件{color[ffff]}{[0001|ffff]}！
055	如果能用好比较小节点，\n就可以设计出更加丰富多彩的程序。
056	举个例子吧……\n让我们暂时告别下方的常数小节点。
057	然后……
058	叫来{[0001|1b00]}{color[0400]}计数小节点{color[ffff]}{[0001|ffff]}他们几个。
058-001	请指教！{[0201]}！
058-002	我的职责是\n计算键被按下的次数。
058-003	我能把键被按下的次数\n直观地显示在游戏画面上。
061	像这样，\n如果让比较小节点去{[0001|1b00]}{color[0400]}比较常数3.00\n{color[ffff]}{[0001|ffff]}和{[0001|1b00]}{color[0400]}键被按下的次数{color[ffff]}{[0001|ffff]}……
062	会得到一个怎样的程序呢？
063	去游戏画面确认一下吧。
064	请多按几次{[0001|1b00]}{color[0400]}键{color[ffff]}{[0001|ffff]}看看。
065	按下4次键后，\n拉炮响了。
066	也就是说……我们运用比较小节点，\n做出了按下{[0001|1b00]}{color[0400]}4次键{color[ffff]}{[0001|ffff]}就能让{[0001|1b00]}{color[0400]}拉炮响起{color[ffff]}{[0001|ffff]}的程序。
067	请前往程序画面。
068	如何？
071	除了计数小节点和常数小节点，\n还有各种数不胜数的组合可以用来比较！
072	如果你想成为一名懂行的程序员，\n就多多尝试运用我\n来设计条件进行判断吧！
Guidebook_ConnectGameCamera.msbt
000	……你好。
001	游戏画面中央站着一个{[0001|1b00]}{color[0400]}人{color[ffff]}{[0001|ffff]}。
002	请操作{[0001|1b00]}{color[0400]}摇杆{color[ffff]}{[0001|ffff]}让{[0001|1b00]}{color[0400]}人{color[ffff]}{[0001|ffff]}左右移动。
003	当{[0001|1b00]}{color[0400]}人{color[ffff]}{[0001|ffff]}跑动起来时，\n{[0001|1b00]}{color[0400]}游戏画面{color[ffff]}{[0001|ffff]}也随之同步移动。
006	这就是这次要讲解的主题——\n让{[0001|1b00]}{color[0400]}游戏画面跟人一起移动{color[ffff]}{[0001|ffff]}的程序。
007	请前往程序画面。
008	哇哦～～？\n这不是{[0201]}吗～！\n辛苦辛苦～～～～
009	{[0201]}，\n你好！
010	嗯嗯，你想了解为什么{[0001|1b00]}{color[0400]}人{color[ffff]}{[0001|ffff]}往哪里跑，\n{[0001|1b00]}{color[0400]}游戏画面{color[ffff]}{[0001|ffff]}也会跟着往哪里跑是吧！
011	游戏画面之所以会\n跟着{[0001|1b00]}{color[0400]}人{color[ffff]}{[0001|ffff]}一起移动～
012	是因为{[0001|1b00]}{color[0400]}游戏画面小节点{color[ffff]}{[0001|ffff]}\n{[0001|1b00]}{color[0400]}连接{color[ffff]}{[0001|ffff]}着我——{[0001|1b00]}{color[0400]}人小节点{color[ffff]}{[0001|ffff]}！
013	没错～～\n我正时刻关注着{[0001|1b00]}{color[0400]}人小节点{color[ffff]}{[0001|ffff]}。
014	为了把恣意闯荡游戏世界的{color[0400]}{[0001|1b00]}人小节点{[0001|ffff]}{color[ffff]}\n完美地！永远地！锁定在画面中央……
015	我{[0001|1b00]}{color[0400]}游戏画面小节点{color[ffff]}{[0001|ffff]}始终与他紧密{color[0400]}{[0001|1b00]}连接{[0001|ffff]}{color[ffff]}～～\n对他进行贴身拍摄！
016	如果解除这个{[0001|1b00]}{color[0400]}连接{color[ffff]}{[0001|ffff]}，\n游戏画面就不会移动了，\n试试看吧！
017	请选中{[0001|1b00]}{color[0400]}连接线{color[ffff]}{[0001|ffff]}。
018	解除{color[0400]}{[0001|1b00]}连接{[0001|ffff]}{color[ffff]}。
018-01	那么～\n对人小节点的贴身拍摄告一段落～
019	去看看游戏画面的变化吧。
020	请让{[0001|1b00]}{color[0400]}人{color[ffff]}{[0001|ffff]}移动看看。
021	现在就算人再怎么跑，\n游戏画面也不会跟他一起移动了。
022	可见，当游戏画面小节点和\n人小节点{color[0400]}{[0001|1b00]}没有连接{[0001|ffff]}{color[ffff]}在一起时，\n游戏画面就不会跟着人移动。
023	确认后请返回程序画面。
024	欢迎回来！\n是不是发现游戏画面不会动了？
025	别担心，只要再重新{[0001|1b00]}{color[0400]}连接{color[ffff]}{[0001|ffff]}回去，\n游戏画面就又能像先前那样跟着人动了哦！
026	请重新把{[0001|1b00]}{color[0400]}游戏画面小节点{color[ffff]}{[0001|ffff]}\n{[0001|1b00]}{color[0400]}连接{color[ffff]}{[0001|ffff]}到{[0001|1b00]}{color[0400]}人小节点{color[ffff]}{[0001|ffff]}上。
027	很～好！对人小节点的\n贴身拍摄又要开始喽～～！
028	{[0201]}！\n为了最大限度地展示出人小节点的魅力，\n我可是把压箱底的技巧都拿出来了哟……
030	请仔细观察{[0001|1b00]}{color[0400]}人{color[ffff]}{[0001|ffff]}移动时，\n{[0001|1b00]}{color[0400]}游戏画面的移动方式{color[ffff]}{[0001|ffff]}～～！
031	那就去观察一下吧。
032	请操作{[0001|1b00]}{color[0400]}摇杆{color[ffff]}{[0001|ffff]}让{[0001|1b00]}{color[0400]}人{color[ffff]}{[0001|ffff]}跑动起来，\n同时仔细观察游戏画面的移动方式。
033	让人时不时跑跑停停，\n这样会看得更明白些。
034	发现了吗？{[0001|1b00]}{color[0400]}游戏画面{color[ffff]}{[0001|ffff]}的移动\n比{[0001|1b00]}{color[0400]}人{color[ffff]}{[0001|ffff]}的移动要{[0001|1b00]}{color[0400]}延迟一小会儿{color[ffff]}{[0001|ffff]}……
035	就像是{[0001|1b00]}{color[0400]}看到人跑起来后\n再追上去{color[ffff]}{[0001|ffff]}似的。
036	{[0001|1b00]}{color[0400]}人{color[ffff]}{[0001|ffff]}停下来后也是，\n画面会{[0001|1b00]}{color[0400]}再动一小会儿{color[ffff]}{[0001|ffff]}才停下。
037	为了能更清楚地看出区别，\n我们去更改追踪方式的设置吧。
041	{[0001|1b00]}{color[0400]}追踪方式{color[ffff]}{[0001|ffff]}可以在我的\n设置里更改哟～！
042	有个叫{[0001|1b00]}{color[0400]}追踪率{color[ffff]}{[0001|ffff]}的项目，把它调得{[0001|1b00]}{color[0400]}越小{color[ffff]}{[0001|ffff]}，\n{[0001|1b00]}{color[0400]}动作延迟就会越大{color[ffff]}{[0001|ffff]}。就拜托你啦！
043	请选中{[0001|1b00]}{color[0400]}游戏画面小节点{color[ffff]}{[0001|ffff]}。
044	打开设置。
045	更改这个{[0001|1b00]}{color[0400]}水平追踪率{color[ffff]}{[0001|ffff]}，\n可以设置左右方向的追踪方式。
046	数值越大，延迟时间越短。\n数值越小，延迟时间越长。
047	我们设置一个特别小的数值看看……\n就{[0001|1b00]}{color[0400]}0.05{color[ffff]}{[0001|ffff]}吧。
048	关闭设置画面。
049	去游戏画面确认一下吧。
049-01	在仔细观察游戏画面动作的同时，\n尝试操作{[0001|1b00]}{color[0400]}摇杆{color[ffff]}{[0001|ffff]}让{[0001|1b00]}{color[0400]}人{color[ffff]}{[0001|ffff]}移动。
104	感受到游戏画面\n{[0001|1b00]}{color[0400]}追踪人时的延迟了吗{color[ffff]}{[0001|ffff]}？
105	调低{[0001|1b00]}{color[0400]}水平追踪率{color[ffff]}{[0001|ffff]}，\n可以使追踪时的延迟大大增加。
106	下面我们反过来，\n试试看{[0001|1b00]}{color[0400]}无延迟追踪{color[ffff]}{[0001|ffff]}吧。
107	打开{[0001|1b00]}{color[0400]}游戏画面小节点{color[ffff]}{[0001|ffff]}的设置。
108	把{[0001|1b00]}{color[0400]}水平追踪率{color[ffff]}{[0001|ffff]}设置为{[0001|1b00]}{color[0400]}1.00{color[ffff]}{[0001|ffff]}。
109	关闭设置。
110	前往游戏画面。
050	请操作{[0001|1b00]}{color[0400]}摇杆{color[ffff]}{[0001|ffff]}让{[0001|1b00]}{color[0400]}人{color[ffff]}{[0001|ffff]}移动看看。
051	调高{[0001|1b00]}{color[0400]}水平追踪率{color[ffff]}{[0001|ffff]}后，\n{[0001|1b00]}{color[0400]}游戏画面{color[ffff]}{[0001|ffff]}追踪{[0001|1b00]}{color[0400]}人{color[ffff]}{[0001|ffff]}时\n就不会产生{[0001|1b00]}{color[0400]}延迟{color[ffff]}{[0001|ffff]}了……
052	现在{[0001|1b00]}{color[0400]}人{color[ffff]}{[0001|ffff]}一停下来，\n{[0001|1b00]}{color[0400]}游戏画面{color[ffff]}{[0001|ffff]}也会立刻停下。
053	像这样，通过更改{[0001|1b00]}{color[0400]}追踪率{color[ffff]}{[0001|ffff]}，\n就可以改变{[0001|1b00]}{color[0400]}追踪方式{color[ffff]}{[0001|ffff]}。
054	请返回程序画面。
055	欢迎回来～～！
056	{[0001|1b00]}{color[0400]}追踪方式{color[ffff]}{[0001|ffff]}的变化，\n你都搞清楚了吗？？
057	话说回来……
058	我又有了新的灵感～！\n运用这种表现手法的话……\n一定能更好地展现{[0001|1b00]}{color[0400]}人小节点{color[ffff]}{[0001|ffff]}的超凡魅力！
059	我真是个天才导演！！！
060	那就趁热打铁……\n快快有请{[0001|1b00]}{color[0400]}宝箱{color[ffff]}{[0001|ffff]}登场——！！
111	看我酷炫的高空亮相♥
066	这场景真棒～！\n接下来只要更改我的{[0001|1b00]}{color[0400]}连接对象{color[ffff]}{[0001|ffff]}，\n就万事俱备了！
067	我也{[0001|1b00]}{color[0400]}能和物体小节点连接{color[ffff]}{[0001|ffff]}，\n这次就给物体小节点来个贴身拍摄吧～！
068	请选中与{[0001|1b00]}{color[0400]}人小节点{color[ffff]}{[0001|ffff]}之间的连接。
069	解除连接。
070	再连接到刚刚登场的\n{[0001|1b00]}{color[0400]}时尚物体小节点{color[ffff]}{[0001|ffff]}身上。
071	华丽的{[0001|1b00]}{color[0400]}宝箱{color[ffff]}{[0001|ffff]}从天而降……\n掉落在拥有坚定目光之人面前……
072	这是{[0001|1b00]}{color[0400]}人{color[ffff]}{[0001|ffff]}与{[0001|1b00]}{color[0400]}宝箱{color[ffff]}{[0001|ffff]}命中注定的邂逅！\n冒险的序幕即将拉开！！\n这部作品收视率一定超高～～～！
073	……去游戏画面看看吧。
074	现在游戏画面的追踪对象\n变成了掉下来的{[0001|1b00]}{color[0400]}宝箱{color[ffff]}{[0001|ffff]}。
075	就算用摇杆让{[0001|1b00]}{color[0400]}人{color[ffff]}{[0001|ffff]}跑来跑去，\n游戏画面也不会跟着移动……
076	只有在{[0001|1b00]}{color[0400]}人{color[ffff]}{[0001|ffff]}推动{[0001|1b00]}{color[0400]}宝箱{color[ffff]}{[0001|ffff]}时，\n游戏画面才会随{[0001|1b00]}{color[0400]}宝箱{color[ffff]}{[0001|ffff]}一起移动。
078	请返回程序画面。
079	唔……总觉得有哪里不对劲……\n不行不行！！这种表现手法\n根本就不像命中注定的邂逅嘛！
080	……有了！
081	{[0201]}！\n劳烦改一下我的{color[0400]}{[0001|1b00]}垂直追踪率{[0001|ffff]}{color[ffff]}！！
086	那就改一改吧。
087	更改{[0001|1b00]}{color[0400]}垂直追踪率{color[ffff]}{[0001|ffff]}，\n可以设置上下方向的追踪方式。
088	设置为{[0001|1b00]}{color[0400]}0.05{color[ffff]}{[0001|ffff]}看看。
089	关闭。
090	先前调低{[0001|1b00]}{color[0400]}水平追踪率{color[ffff]}{[0001|ffff]}时，\n{color[0400]}{[0001|1b00]}左右方向移动{[0001|ffff]}{color[ffff]}的延迟增加了。
091	那么……让我们想象一下，\n{[0001|1b00]}{color[0400]}调低垂直追踪率{color[ffff]}{[0001|ffff]}后，\n游戏画面会发生什么变化呢……
092	现在游戏画面能{[0001|1b00]}{color[0400]}缓慢地追踪{color[ffff]}{[0001|ffff]}\n掉落的{[0001|1b00]}{color[0400]}宝箱{color[ffff]}{[0001|ffff]}了。
094	因为调低了{[0001|1b00]}{color[0400]}垂直追踪率{color[ffff]}{[0001|ffff]}，\n所以{[0001|1b00]}{color[0400]}上下移动{color[ffff]}{[0001|ffff]}的延迟增加了。
095	……真是出色的表现手法。
096	……那我们返回程序画面吧。
097	惊才绝艳！我可真是天生的大导演～！\n像我这样的奇才简直百年难遇啊～～！？
100	{[0201]}，\n你可要好好运用我的{[0001|1b00]}{color[0400]}连接{color[ffff]}{[0001|ffff]}和{[0001|1b00]}{color[0400]}追踪率{color[ffff]}{[0001|ffff]}……
101	拍出震撼人心的精彩作品哟——！
102	那就下回再见啦——
Guidebook_Connection.msbt
000	……你好，\n{[0201]}。
001	UFO和鲔鱼……\n好奇怪的组合。
002	你已经可以用摇杆控制UFO了，\n快试试看让他动起来吧。
003	……成功地操纵了UFO。
004	……机会难得，\n要不要把UFO和鲔鱼……\n……粘到一起试试？
005	没错，这次要讲解的主题就是，\n{color[0400]}{[0001|1b00]}把物体和物体粘到一起的方法{[0001|ffff]}{color[ffff]}。
006	那么，请前往程序画面。
007	你觉不觉得鲔鱼～和UFO～～\n有很多相似之处～～
008	徜徉大海的鲔鱼和\n遨游宇宙的UFO……\n确实很般配呢……！
010	能注意到这点的你真是……\n♥高端！大气！上档次！♥
011	好。\n事不宜迟，我这就开始讲解\n把物体和物体粘到一起的方法。
012	请看UFO小节点的这个地方。
013	这个是{color[0400]}{[0001|1b00]}连接端口{[0001|ffff]}{color[ffff]}。
014	通过这个{color[0400]}{[0001|1b00]}连接端口{[0001|ffff]}{color[ffff]}\n把小节点们{color[0400]}{[0001|1b00]}连接{[0001|ffff]}{color[ffff]}起来后……
015	就能把一个物体粘到另一个物体上。
018	当想要{color[0400]}{[0001|1b00]}连接{[0001|ffff]}{color[ffff]}两个物体时，\n只要把物体{[0001|1b00]}{color[0400]}下方的连接端口{color[ffff]}{[0001|ffff]}……
019	连接到目标物体的小节点\n{color[0400]}{[0001|1b00]}上方的连接端口{[0001|ffff]}{color[ffff]}即可。
021	趁热打铁，这就来试试\n把时尚物体小节点{color[0400]}{[0001|1b00]}连接{[0001|ffff]}{color[ffff]}到\nUFO小节点身上吧。
022	等你的连接哦～～～
023	{[0201]}，\n准备好了吗？
024	请把时尚物体小节点{color[0400]}{[0001|1b00]}\n下方的连接端口{[0001|ffff]}{color[ffff]}连接到\nUFO小节点的{color[0400]}{[0001|1b00]}连接端口{[0001|ffff]}{color[ffff]}。
025	连接！\n鲔鱼UFO！！！
027	现在变成什么样了呢？\n去游戏画面确认一下吧。
028	鲔鱼粘到UFO上面去了。
029	用摇杆让UFO移动看看。
030	……因为他们牢牢地粘在一起，\n所以UFO再怎么移动，鲔鱼也不会掉下来。
032	把物体和物体粘到一起……\n这就是{color[0400]}{[0001|1b00]}连接{[0001|ffff]}{color[ffff]}。
033	请前往程序画面。
034	在空中游泳的鲔鱼……！\n让我的审美更上一层楼了呢～～♥
037	不过，单纯把鲔鱼放在UFO上面，\n未免有些过于单调了……
038	我想来点更前卫的！
039	那么～～\n拿鲔鱼的头狠狠地～\n给UFO来一下……怎么样～～？
040	你是希望鲔鱼的头\n扎在UFO的头上吗……
040-01	惊人的创意！！\n简直是～\n♥高端！大气！上档次！♥的代名词！！！
041	那就来更改设置吧。\n这次要把鲔鱼的头部和UFO的头部粘到一起。
042	请选中鲔鱼的时尚物体小节点。
043	打开设置。
045	打开{color[0400]}{[0001|1b00]}连接面{[0001|ffff]}{color[ffff]}。
045-01	无论你希望把当前物体的{color[0400]}{[0001|1b00]}哪一面{[0001|ffff]}{color[ffff]}\n和目标物体的{color[0400]}{[0001|1b00]}哪一面粘到一起{[0001|ffff]}{color[ffff]}，\n都可以在这里设置。
046	如果设置为{color[0400]}{[0001|1b00]}自动{[0001|ffff]}{color[ffff]}的话，\n物体间{color[0400]}{[0001|1b00]}最接近的两个面{[0001|ffff]}{color[ffff]}\n会自动粘连。
047	如果想自己决定物体的连接面，\n那就选择{color[0400]}{[0001|1b00]}详细{[0001|ffff]}{color[ffff]}。
048	你可以在“{color[0400]}{[0001|1b00]}自己的连接面{[0001|ffff]}{color[ffff]}”当中……\n选择{color[0400]}{[0001|1b00]}当前物体{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1b00]}某一面进行粘连{[0001|ffff]}{color[ffff]}。
048-01	这里是鲔鱼的时尚物体小节点的设置画面，\n所以我们可以在这里设置让{color[0400]}{[0001|1b00]}鲔鱼的哪一面\n{[0001|ffff]}{color[ffff]}粘到UFO身上。
049	鲔鱼的头部在{color[0400]}{[0001|1b00]}Z-面{[0001|ffff]}{color[ffff]}……
049-01	把“{[0001|1b00]}自己的连接面{[0001|ffff]}”\n设置为{color[0400]}{[0001|1b00]}Z-{[0001|ffff]}{color[ffff]}。
050	顺带一提，这里所说的“面”，\n是指{color[0400]}{[0001|1b00]}以物体本身为基准的面{[0001|ffff]}{color[ffff]}。
052	换句话说，\n即便鲔鱼改变了自己的朝向……
053	鲔鱼的头部也永远都是{color[0400]}{[0001|1b00]}Z-面{[0001|ffff]}{color[ffff]}。
055	以鲔鱼为例，\n头部是Z-，尾部是Z+……\n不要忘记哦。
059-01	下面来看“{color[0400]}{[0001|1b00]}连接对象的连接面{[0001|ffff]}{color[ffff]}”。
059-02	在这里，\n你可以选择{color[0400]}{[0001|1b00]}连接对象的连接面{[0001|ffff]}{color[ffff]}。
059-03	当前设置为{[0001|1b00]}{color[0400]}Y+{color[ffff]}{[0001|ffff]}……
059-04	所以现在UFO的Y+面……\n也就是UFO的{color[0400]}{[0001|1b00]}上面{[0001|ffff]}{color[ffff]}是连接面。
059-05	如此一来，把鲔鱼头部和\nUFO头部粘连的设置就完成了。
060	不亲眼去看一下，\n很难想象会是个怎样的画面呢。
061	关闭{[0001|1b00]}连接面{[0001|ffff]}的设置。
062	再关闭设置画面。
063	去游戏画面看看\n他们是怎样粘在一起的吧。
064	……这画面厉害了。
065	用摇杆让UFO移动看看。
066	看来鲔鱼的头部和UFO的头部\n粘得很牢固呢。
067	确认好连接的稳定性后，\n请前往程序画面。
068	UFO头上……\n扎着鲔鱼……
068-01	真是个有故事的画面呢～～♥
069	唔……\n总觉得哪里不对～
070	我想要的是～\n鲔鱼在我背后用力推我～
071	类似这样的感觉～～
071-01	你的意思是……希望鲔鱼的头部\n扎在UFO的臀部上吗……？
071-02	啊啊～！\n我仿佛看到了新故事的开端……♥
072	好，那就把鲔鱼粘到\nUFO的后面去吧。
073	请选中时尚物体小节点。
074	打开设置。
075	打开{color[0400]}{[0001|1b00]}连接面{[0001|ffff]}{color[ffff]}的设置。
076	把鲔鱼粘到UFO的哪一面，\n可以在“{color[0400]}{[0001|1b00]}连接对象的连接面{[0001|ffff]}{color[ffff]}”\n进行设置。
077	UFO的正面是{color[0400]}{[0001|1b00]}Z-{[0001|ffff]}{color[ffff]}，\n有天线那面是{color[0400]}{[0001|1b00]}Y+{[0001|ffff]}{color[ffff]}。
078	如果要把{color[0400]}{[0001|1b00]}鲔鱼粘到UFO后面{[0001|ffff]}{color[ffff]}的话……\n你认为应该选哪一面呢？
079	……答案是{color[0400]}{[0001|1b00]}Z+{[0001|ffff]}{color[ffff]}。\nUFO的正面是Z-，背面自然就是Z+。
080	把“连接对象的连接面”\n设置为{color[0400]}Z+{color[ffff]}。
082-01	好，这下鲔鱼的Z-面和\nUFO的Z+面就粘到一起了。
083	那么，\n关闭{[0001|1b00]}连接面{[0001|ffff]}的设置。
084	再关闭设置画面。
086	去看看他们是怎样粘在一起的吧。
087	用摇杆让UFO移动看看。
088	……鲔鱼咬住UFO的臀部不松口……
089	……像这样，\n我们可以在{color[0400]}{[0001|1b00]}连接面{[0001|ffff]}{color[ffff]}的设置中，\n更改物体间的粘连方式。
090	那么，请返回程序画面。
091	这就是我要的感觉～\n不觉得很有趣吗～～～？
092	感谢你让我大饱眼福……♥
096	通过{color[0400]}{[0001|1b00]}连接{[0001|ffff]}{color[ffff]}把物体组合起来，\n我们可以创造出各种\n不同形状的物体。
096-01	我再重复一遍连接的方法……
096-02	把当前物体{color[0400]}{[0001|1b00]}下方的连接端口{[0001|ffff]}{color[ffff]}……
096-03	和连接对象{color[0400]}{[0001|1b00]}上方的连接端口{[0001|ffff]}{color[ffff]}……\n连接起来。
097	这是非常重要的技巧，\n一定要牢牢记住哦。
Guidebook_Count.msbt
002	……你好，\n{[0201]}。
003	现在在画面中能看到\n{[0001|1b00]}{color[0400]}蓝色圆柱体{color[ffff]}{[0001|ffff]}和{[0001|1b00]}{color[0400]}红色立方体{color[ffff]}{[0001|ffff]}……
004	以及浮在空中、\n写有{color[0400]}{[0001|1b00]}数字{[0001|ffff]}{color[ffff]}的{[0001|1b00]}{color[0400]}白色立方体{color[ffff]}{[0001|ffff]}……
005	请一边{[0001|1b00]}{color[0400]}观察{color[ffff]}{[0001|ffff]}这个{[0001|1b00]}{color[0400]}数字{color[ffff]}{[0001|ffff]}，\n一边用{[0001|1b00]}{color[0400]}摇杆{color[ffff]}{[0001|ffff]}移动人……\n破坏所有物体。
006	每破坏一个物体，{[0001|1b00]}{color[0400]}数字便相应增长{color[ffff]}{[0001|ffff]}。
006-01	可见这个白色立方体的作用是\n{[0001|1b00]}{color[0400]}显示物体损坏数量{color[ffff]}{[0001|ffff]}。
007	这次我们要学习的内容\n就是{color[0400]}{[0001|1b00]}计算并显示\n物体损坏数量的原理{[0001|ffff]}{color[ffff]}。
008	那么，请前往程序画面。
009	嗨！我是{color[0400]}{[0001|1b00]}人小节点{[0001|ffff]}{color[ffff]}！\n破坏物体是我的拿手好戏！
014	……你好。\n我们是{color[0400]}{[0001|1b00]}物体小节点{[0001|ffff]}{color[ffff]}。
016	右边5个是{[0001|1b00]}{color[0400]}红色立方体{color[ffff]}{[0001|ffff]}。
017	左边5个是{[0001|1b00]}{color[0400]}蓝色圆柱体{color[ffff]}{[0001|ffff]}。
022	然后……\n负责计算并显示\n物体损坏数量的……
023	就是这3个小节点。
024	哎哎！你听说了吗？\n人好像把物体全都破坏了！
026	被破坏的物体一共有10个。
027	没错，请大家给破坏了\n那么多物体的人小节点\n送上掌声～
120	嘻嘻～
027-01	……言归正传，这次来是想了解\n{[0001|1b00]}{color[0400]}计算并显示物体损坏数量的原理{color[ffff]}{[0001|ffff]}是吧！
028	人破坏物体的数量……\n这是我们3个小节点\n齐心协力计算出来的！
029	接下来会分别介绍我们各自的职责……
030	要认真听讲，\n好好学习哦！
031	那么请各位……\n从左边开始依次自我介绍！
032	嗨！{[0201]}！\n我是{color[0400]}{[0001|1b00]}物体损坏时小节点{[0001|ffff]}{color[ffff]}。
033	如你所知，\n当我{[0001|1b00]}{color[0400]}检查的物体损坏时{color[ffff]}{[0001|ffff]}，\n我就会输出信号！
034	现在我的检查对象是\n立方体和圆柱体……！
037	我是{color[0400]}{[0001|1b00]}计数小节点{[0001|ffff]}{color[ffff]}，\n什么都能数。
037-01	我昨天一共打了12个喷嚏。
122	……每当我的{color[0400]}{[0001|1b00]}增加端口{[0001|ffff]}{color[ffff]}接收到信号时，\n我就会{[0001|1b00]}{color[0400]}增加数值{color[ffff]}{[0001|ffff]}并{[0001|1b00]}{color[0400]}输出这个数值{color[ffff]}{[0001|ffff]}。
038	以这次为例……\n我输出的就是{[0001|1b00]}{color[0400]}物体损坏时小节点\n向我传递信号的次数{color[ffff]}{[0001|ffff]}。
119	最后是我，{color[0400]}{[0001|1b00]}带数字物体小节点{[0001|ffff]}{color[ffff]}。
039	我的作用……\n是把计数小节点计数的\n{[0001|1b00]}{color[0400]}数值{color[ffff]}{[0001|ffff]}给{[0001|1b00]}{color[0400]}显示{color[ffff]}{[0001|ffff]}出来。
041	你知道吗？\n通过线传递的{[0001|1b00]}{color[0400]}信号{color[ffff]}{[0001|ffff]}，其{[0001|1b00]}{color[0400]}本质{color[ffff]}{[0001|ffff]}就是{[0001|1b00]}{color[0400]}数值{color[ffff]}{[0001|ffff]}。
042	当{color[0400]}{[0001|1b00]}信号输入{[0001|ffff]}{color[ffff]}到我的端口时……
043	我会把这个{[0001|1b00]}{color[0400]}信号的数值{color[ffff]}{[0001|ffff]}\n显示到游戏画面上！
046-01	我来总结一下……
046	当立方体和圆柱体损坏时，\n{color[0400]}{[0001|1b00]}物体损坏时小节点{[0001|ffff]}{color[ffff]}输出信号……
047	接着信号到达{[0001|1b00]}{color[0400]}计数小节点{color[ffff]}{[0001|ffff]}这里，\n计数小节点会计算收到信号的次数，\n并把次数转换为信号输出。
048	最后{[0001|1b00]}{color[0400]}带数字物体小节点{color[ffff]}{[0001|ffff]}接收到\n这个信号时，就会把信号\n代表的数字显示到画面上。
049	完全正确！这就是我们\n{color[0400]}{[0001|1b00]}计算并显示物体损坏数量的原理{[0001|ffff]}{color[ffff]}！
049-01	不仅如此，你知道吗？\n只要更改我设置中的“{[0001|1b00]}{color[0400]}要检查什么？{color[ffff]}{[0001|ffff]}”……
049-02	还能指定要检查的物体种类……\n比如说只想知道{[0001|1b00]}{color[0400]}立方体的损坏数量{color[ffff]}{[0001|ffff]}，\n也是可以办到的！
050	那就试试看吧。
053	请选中物体损坏时小节点……
054	打开设置。
123	当前的检查对象为\n{[0001|1b00]}{color[0400]}立方体{color[ffff]}{[0001|ffff]}和{[0001|1b00]}{color[0400]}圆柱体{color[ffff]}{[0001|ffff]}。
055	打开“{color[0400]}{[0001|1b00]}要检查什么？{[0001|ffff]}{color[ffff]}”……
056	我们希望只检查立方体……\n所以把{color[0400]}{[0001|1b00]}圆柱体{[0001|ffff]}{color[ffff]}设置为{[0001|1b00]}{color[0400]}关闭{color[ffff]}{[0001|ffff]}。
057	关闭当前画面。
058	再关闭设置。
059	嗯嗯，好的。\n{[0001|1b00]}{color[0400]}只检查立方体{color[ffff]}{[0001|ffff]}就行了对吧！
060	去游戏画面确认一下吧。
061	请一边观察{color[0400]}{[0001|1b00]}数字{[0001|ffff]}{color[ffff]}，\n一边破坏所有物体。
062	破坏{color[0400]}{[0001|1b00]}立方体{[0001|ffff]}{color[ffff]}时{[0001|1b00]}{color[0400]}数字增加{color[ffff]}{[0001|ffff]}……\n而破坏{color[0400]}{[0001|1b00]}圆柱体{[0001|ffff]}{color[ffff]}时{[0001|1b00]}{color[0400]}则没有变化{color[ffff]}{[0001|ffff]}。
064	如你所见，\n只计算立方体的损坏数量，\n也是可以实现的。
065	请返回程序画面。
065-01	怎么样！？\n变成只计算立方体了吧？
065-02	只要像这样更改我们的设置，\n就能改变计数的方式。
065-03	再举个例子……\n如果我们更改计数小节点的{[0001|1b00]}{color[0400]}模式{color[ffff]}{[0001|ffff]}，\n还能实现一些特殊的计数方式哦。
065-04	不过在此之前……\n请先把物体损坏时小节点的\n设置恢复原状。
067	选中他。
068	打开设置。
069	选择“{[0001|1b00]}要检查什么？{[0001|ffff]}”……
070	把{color[0400]}{[0001|1b00]}圆柱体{[0001|ffff]}{color[ffff]}设置为{[0001|1b00]}{color[0400]}开启{color[ffff]}{[0001|ffff]}。
071	关闭当前画面。
072	再关闭设置。
126	嗯嗯。\n圆柱体也重返检查对象当中了。\n还是这样比较好！
072-01	那么接下来！\n我们就可以更改\n计数小节点的{[0001|1b00]}{color[0400]}模式{color[ffff]}{[0001|ffff]}啦！
072-02	{[0001|1b00]}{color[0400]}模式{color[ffff]}{[0001|ffff]}就是指计数的方式。
072-03	我一共有{[0001|1b00]}{color[0400]}4种{color[ffff]}{[0001|ffff]}模式！
079	我们来看看\n计数小节点的设置吧。
080	选中他。
081	打开设置。
128	这就是{color[0400]}{[0001|1b00]}模式{[0001|ffff]}{color[ffff]}。
081-01	当前设置为{color[0400]}{[0001|1b00]}无限制{[0001|ffff]}{color[ffff]}。
081-02	顾名思义，\n是能够{[0001|1b00]}{color[0400]}无限制{color[ffff]}{[0001|ffff]}计数的模式。
082	那么，\n把{[0001|1b00]}模式{[0001|ffff]}改为{color[0400]}{[0001|1b00]}范围限制{[0001|ffff]}{color[ffff]}看看。
129	选择这个模式时，\n我们可以设置计数的{color[0400]}{[0001|1b00]}范围{[0001|ffff]}{color[ffff]}。\n
082-01	{color[0400]}{[0001|1b00]}范围{[0001|ffff]}{color[ffff]}的具体区间，\n可以在{color[0400]}{[0001|1b00]}计数范围{[0001|ffff]}{color[ffff]}这里进行设置。
083	把{[0001|1b00]}计数范围{[0001|ffff]}的上限设置为{[0001|1b00]}{color[0400]}7{color[ffff]}{[0001|ffff]}。
084	关闭设置。
085	现在我的计数范围\n被限制在了{[0001|1b00]}{color[0400]}0到7{color[ffff]}{[0001|ffff]}之间。
086	计数方式变成什么样了呢？\n去游戏画面确认一下吧。
087	请尝试破坏所有物体。
088	……数字增加到{color[0400]}{[0001|1b00]}7{[0001|ffff]}{color[ffff]}就{color[0400]}{[0001|1b00]}停止{[0001|ffff]}{color[ffff]}了。
089	也就是说，一旦选择了{[0001|1b00]}范围限制{[0001|ffff]}模式，\n计数小节点就{[0001|1b00]}{color[0400]}只能在{color[ffff]}{[0001|ffff]}设置好的{[0001|1b00]}{color[0400]}范围内{color[ffff]}{[0001|ffff]}计数。
090	请返回程序画面。
091	再试试其他{[0001|1b00]}模式{[0001|ffff]}。
092	选中他。
093	打开设置。
094	这次把{[0001|1b00]}模式{[0001|ffff]}……\n改为{color[0400]}{[0001|1b00]}循环{[0001|ffff]}{color[ffff]}试试。
130	{[0001|1b00]}计数范围{[0001|ffff]}的上限还是\n保持{[0001|1b00]}{color[0400]}7{color[ffff]}{[0001|ffff]}不变。
095	关闭设置。
096	计数模式是……{[0001|1b00]}{color[0400]}循环{color[ffff]}{[0001|ffff]}。\n计数范围仍然是{[0001|1b00]}{color[0400]}0到7{color[ffff]}{[0001|ffff]}。
097	计数方式变成什么样了呢？\n去游戏画面确认一下吧。
098	当破坏第{[0001|1b00]}{color[0400]}7{color[ffff]}{[0001|ffff]}个物体后……
099	就会从{[0001|1b00]}{color[0400]}0{color[ffff]}{[0001|ffff]}开始重新计数。
100	所以，循环模式是一种能在\n设置好的范围内{[0001|1b00]}{color[0400]}重复{color[ffff]}{[0001|ffff]}计数的模式。
101	一旦数值到达了上限，\n就会{color[0400]}{[0001|1b00]}返回初始数值{[0001|ffff]}{color[ffff]}从头算起。
102	请返回程序画面。
132	接下来是第4种……也是最后1种模式。
104	选中他。
105	打开设置。
106	把{[0001|1b00]}模式{[0001|ffff]}改为{color[0400]}{[0001|1b00]}来回{[0001|ffff]}{color[ffff]}。
107	然后把{[0001|1b00]}计数范围{[0001|ffff]}的上限设置为{[0001|1b00]}{color[0400]}5{color[ffff]}{[0001|ffff]}。
108	关闭设置。
133	计数模式是……{[0001|1b00]}{color[0400]}来回{color[ffff]}{[0001|ffff]}。\n计数范围设置为{[0001|1b00]}{color[0400]}0到5{color[ffff]}{[0001|ffff]}。
109	去游戏画面确认一下吧。
110	当人破坏的物体超过5个以后……
111	每继续破坏一个物体，数字会相应减少。
112	所以，来回模式是一种能在\n设置好的范围内来回{[0001|1b00]}{color[0400]}往返{color[ffff]}{[0001|ffff]}的计数模式。
113	请返回程序画面。
113-01	我的4种模式，\n你都理解了吗？
113-02	计数方式的花样还挺多的呢！
113-03	讲到这里，\n我们再来复习一下\n计数的原理吧！
114	当我检查的物体损坏时……\n我就会输出信号！
115	我会计算接收到信号的次数，\n然后把它输出。
116	我会把输入到我这里的数字显示出来。
117	这就是我们\n{color[0400]}{[0001|1b00]}计算物体损坏数量的原理{[0001|ffff]}{color[ffff]}。
118	{color[0400]}{[0001|1b00]}信号{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1b00]}本质{[0001|ffff]}{color[ffff]}就是{color[0400]}{[0001|1b00]}数值{[0001|ffff]}{color[ffff]}……
136	所以能够被计算并显示出来。\n这就是本次的要点。
134	原理的教学就到这里啦！\n回去要记得好好复习哦！
Guidebook_CountDown.msbt
00.00.Alice	……你好，{[0201]}。
00.01.Alice	突如其来的倒数，\n有没有吓你一跳……？
00.02.Alice	这次要讲解的内容，\n就是运用了这种倒数3秒特效的\n{color[0400]}{[0001|1b00]}游戏开始序列{[0001|ffff]}{color[ffff]}。
00.03.Alice	让我们按下“{color[0400]}{[0001|1b00]}重来{[0001|ffff]}{color[ffff]}”，\n恢复到初始状态再看一次。
00.04.Alice	倒数结束后，\n汽车开始向前行驶。
00.06.Alice	这很好理解，\n如果倒数还没结束\n就开始行驶，那就是抢跑了。
00.07.Alice	那么……{[0201]}，\n你知道要怎样做才能让汽车\n不会在倒数期间抢跑吗？
00.08.Alice	一起去程序画面了解\n其中的原理吧。
01.00.Start	力争第一！\n我是开始时小节点！\n耶——！
01.01.Timer	……俗话说，欲速则不达。\n制定完善的计划，\n按部就班地执行才是正途。
01.02.Flag	哈欠……\n……我是……旗标小节点……
01.03.Effect	你好，{[0201]}。\n今天也要嗨起来哟～\n3、2、1，走～！！
01.04.Flag	呼……\n早上好。
01.05.Flag	{[0201]}，\n你来啦。
01.06.Flag	原来如此，你想了解\n{color[0400]}{[0001|1b00]}游戏开始序列{[0001|ffff]}{color[ffff]}是吗……？
01.07.Flag	明白了，\n下面由我们来为你讲解。
01.07-01.Effect	首先，给出{[0001|1b00]}{color[0400]}倒数{color[ffff]}{[0001|ffff]}特效的\n当然就是我啦！！
01.07-02.Effect	我一接收到{[0001|1b00]}{color[0400]}开始时小节点{color[ffff]}{[0001|ffff]}输出的信号，\n就会开始倒数！
01.08.Start	……我……\n能在{color[0400]}{[0001|1b00]}游戏开始的瞬间\n输出信号{[0001|ffff]}{color[ffff]}……哦。
01.09.Effect	{[0001|1b00]}{color[0400]}游戏一开始{color[ffff]}{[0001|ffff]}，\n开始时小节点就会{[0001|1b00]}{color[0400]}立刻{color[ffff]}{[0001|ffff]}向我输出信号。
01.10.Effect	紧接着，\n反应神速的我会立刻开始倒数！
01.10-01.Timer	但你只是负责显示特效，\n并没有不让汽车移动，不是吗？
01.10-02.Effect	没错！\n我的特效不会干扰\n其他小节点的工作。
01.10-03.Car	那为什么在倒数结束前，\n汽车不会动呢？
01.10-04.Flag	那是因为在游戏刚开始时，\n我处于{[0001|1b00]}{color[0400]}关闭{color[ffff]}{[0001|ffff]}状态。
01.10-05.Flag	处于{[0001|1b00]}{color[0400]}关闭{color[ffff]}{[0001|ffff]}状态的我\n{[0001|1b00]}{color[0400]}不会输出{color[ffff]}{[0001|ffff]}信号……
01.10-06.Car	所以我这边没有接收到信号……\n汽车当然不会行驶起来！
01.10-07.Car	那倒数结束后，\n汽车开始行驶又是为什么呢？
01.10-08.Flag	当我变成{[0001|1b00]}{color[0400]}开启{color[ffff]}{[0001|ffff]}状态后，\n我会{[0001|1b00]}{color[0400]}输出{color[ffff]}{[0001|ffff]}信号，\n所以汽车就开始行驶了。
01.10-10.Timer	咳咳……\n然后，让旗标小节点\n变成开启状态的……是我。
01.11.Timer	只要游戏一开始，\n我就会收到{[0001|1b00]}{color[0400]}开始时小节点{color[ffff]}{[0001|ffff]}\n传递过来的信号。
01.12.Timer	当信号输入到我这里时，\n我会在不多不少{color[0400]}{[0001|1b00]}计时3秒后\n输出信号{[0001|ffff]}{color[ffff]}。
01.13.Flag	说到3秒……
01.14.Effect	跟我的{[0001|1b00]}{color[0400]}倒数时间{color[ffff]}{[0001|ffff]}正好一样～
01.15.Timer	你很会抓重点嘛。
01.15-01.Timer	从开始时小节点输出的信号\n会同时到达特效小节点和我这里。
01.16.Effect	也就是说我{[0001|1b00]}{color[0400]}开始倒数{color[ffff]}{[0001|ffff]}的时间点，\n和计时小节点{[0001|1b00]}{color[0400]}开始计时{color[ffff]}{[0001|ffff]}的时间点\n是一致的……
01.16-01.Effect	我{[0001|1b00]}{color[0400]}到倒数结束为止所需的时间{color[ffff]}{[0001|ffff]}和\n{[0001|1b00]}{color[0400]}计时小节点计时的时间{color[ffff]}{[0001|ffff]}也是一致的……
01.18.Timer	这样一来，在倒数结束的同时，\n我也将结束计时并输出信号。
01.19.Flag	所以在倒数结束时，\n我刚好会变成{[0001|1b00]}{color[0400]}开启{color[ffff]}{[0001|ffff]}状态……
01.20.Car	于是信号传递到我这里，\n汽车就能开始行驶了！
01.28.Effect	明明我没有直接给你信号，\n我们的时机却配合得一丝不差～
01.29.Alice	这个程序妙就妙在这里。
01.30.Alice	为了让{[0001|1b00]}{color[0400]}倒数结束{color[ffff]}{[0001|ffff]}的时间点\n和{[0001|1b00]}{color[0400]}旗标小节点开启{color[ffff]}{[0001|ffff]}的时间点\n完美匹配……
01.33.Timer	需要由我来调整\n向旗标小节点发送信号的时机。
01.33-01.Timer	感谢的话就不必说了，\n这对我来说轻而易举。
01.34.Alice	那么，请一边回忆\n刚才学习的这个程序……
01.35.Alice	一边再去游戏画面看看吧。
02.00.Alice	在游戏开始的同时，\n倒数3秒特效启动……
02.01.Alice	3秒后，在倒数结束的同时，\n旗标小节点开启，汽车开始行驶。
02.03.Alice	掌握原理后再来看游戏，\n各个小节点是如何运作的，\n是不是就一清二楚了？
02.04.Alice	如果想从头再看一次，\n按“重来”即可。
02.05.Alice	那么请返回程序画面。
03.00.Car	滴滴叭叭呜！\n我的起跑姿势是不是帅呆了！？
03.01.Effect	经历了倒数整整3秒的等待，\n现场的气氛更热烈啦～
03.02.Effect	果然做任何事都要忍耐个3秒才行。\n俗话说，{[0001|1b00]}{color[0400]}台上1分钟，台下3秒功{color[ffff]}{[0001|ffff]}！
03.03.Timer	……你是想说\n台上一分钟，台下十年功吧。
03.04.Timer	意思是说\n舞台上短短一分钟的精彩表演，\n需要付出十年的艰辛努力……
03.05.Timer	用来比喻\n很多看起来轻而易举的成果，\n背后往往隐藏着多年的不懈努力。
03.06.Timer	到你嘴里怎么就成3秒了，\n连排练的时间都不够吧。
03.06-01.Timer	就算是口误这也错得太离谱了。\n你应该多出去见见世面，\n吸收正确的知识。
03.07.Effect	用不着这么一本正经地吐槽我吧……
03.09.Alice	好了，讲解到这里……\n你应该明白这个倒数3秒的\n游戏开始序列的原理了吧？
03.10.Start	……我……\n能在游戏开始的瞬间\n输出信号哦……
03.11.Timer	我能在接收这个信号后，\n延迟一段时间再输出信号。
03.12.Effect	倒数3秒的特效，\n会在正好3秒后结束，\n所以……
03.13.Timer	只要我也不多不少计时3秒，\n就能在倒数结束的同时输出信号。
03.14.Flag	然后，我旗标小节点\n变为开启状态……
03.15.Car	同时，信号传递到我这里，\n汽车就能行驶起来啦！
03.16.Alice	这次只是以\n旗标小节点开启时汽车开始行驶\n这个程序作为例子。
03.17.Alice	根据不同游戏的需求，\n旗标小节点也可以和\n其他小节点连接。
03.18.Alice	这个技巧可以用于\n各种游戏开始序列，\n要好好记住哦。
03.19.Alice	那么，今天就到这里吧。
03.20.Car	滴滴叭叭呜！\n下回再见啦！
Guidebook_DifferentCollision.msbt
00.00.Alice	……你好，{[0201]}。
00.01.Alice	现在游戏画面中有2个人。
00.03.Alice	首先，\n{[0001|1b00]}{color[0400]}左右推动摇杆{color[ffff]}{[0001|ffff]}能控制小蓝人移动，\n请让他站到右边近处的红色地面上看看。
00.04.Alice	人站上红色地面后，\n什么都没有发生。
00.05.Alice	然后继续{[0001|1b00]}{color[0400]}左右推动摇杆{color[ffff]}{[0001|ffff]}，\n让小蓝人移动到右边的蓝色地面上。
00.06.Alice	人站上蓝色地面后，\n拉炮声响起。
00.08.Alice	接下来试一下小红人，\n{[0001|1b00]}{color[0400]}左右推动摇杆{color[ffff]}{[0001|ffff]}能控制小红人移动，\n请让他站到左边近处的蓝色地面上看看。
00.09.Alice	明明小蓝人站上去有反应，\n小红人站上去却什么都没有发生。
00.10.Alice	然后继续{[0001|1b00]}{color[0400]}左右推动摇杆{color[ffff]}{[0001|ffff]}，\n让小红人移动到左边的红色地面上。
00.11.Alice	人站上红色地面后，\n这次出现了损伤特效。
00.12.Alice	发现了吗？\n{color[0400]}{[0001|1b00]}蓝色地面{[0001|ffff]}{color[ffff]}只会在{color[0400]}{[0001|1b00]}小蓝人{[0001|ffff]}{color[ffff]}站上去时给出反应，\n{color[0400]}{[0001|1b00]}红色地面{[0001|ffff]}{color[ffff]}则只会在{color[0400]}{[0001|1b00]}小红人{[0001|ffff]}{color[ffff]}站上去时给出反应。
00.13.Alice	……明明两边同样是人，\n却时而有反应，时而没反应……\n不觉得很神奇吗？
00.14.Alice	像这样，\n{[0001|1b00]}{color[0400]}对同类物体给出不同反应的方法{color[ffff]}{[0001|ffff]}，\n就是这次要讲解的主题。
00.15.Alice	那么，请前往程序画面。
01.00.HumanL	你好！\n我是人小节点！
01.01.HumanR	嗨！\n我也是人小节点！\n我是红色那个！
01.02.RigidL	……你好。\n我是物体小节点。\n现在是红色地面。
01.03.RigidR	……你好。\n我是蓝色地面。
01.04.EffectL	你好，{[0201]}。
01.05.EffectR	今天就看我哥俩让气氛嗨起来！\n多关照啦～\n叭啦～叭叭叭！！！
01.06.SensorAll	哇……！
01.07.SensorL	不要突然在人家耳边大声说话啦！\n吓一跳～
01.08.SensorR	啊，是{[0201]}来了啊，\n今天来是有什么事吗？
01.10.SensorL	咦，你想知道我们是{[0001|1b00]}{color[0400]}如何区分\n小蓝人和小红人{color[ffff]}{[0001|ffff]}的是吗！？
01.11.SensorR	明白了！\n那我们就给你好好讲讲！
01.12.SensorL	你在游戏画面中看到的情形，\n似乎是我们对{[0001|1b00]}{color[0400]}人{color[ffff]}{[0001|ffff]}做出了反应……
01.13.SensorR	但实际上我们{[0001|1b00]}{color[0400]}并没有在检查人{color[ffff]}{[0001|ffff]}！
01.14.HumanL	如果接触感应器的\n检查对象是人……
01.15.HumanR	哪怕我们颜色不同……
01.16.HumanL	但只要是人，无论蓝色还是红色，\n接触感应器都应该给出反应才对！
01.17.SensorR	没错，所以我没在检查人，\n而是在检查{[0001|1b00]}{color[0400]}时尚物体Joy-Con(L){color[ffff]}{[0001|ffff]}！
01.18.FancyL	哎呀，找我？\n你真有眼光♥
01.19.FancyL	我最近迷上了{[0001|1b00]}{color[0400]}Joy-Con(L){color[ffff]}{[0001|ffff]}♥
01.20.Alice	你可以在设置画面中，\n设置接触感应器的检查对象……
01.21.Alice	请选中右边的{[0001|1b00]}{color[0400]}接触感应器小节点{color[ffff]}{[0001|ffff]}……
01.22.Alice	打开设置画面。
01.23.Alice	这里是设置“{[0001|1b00]}要检查什么？{[0001|ffff]}”的地方。
01.24.Alice	可以看到，\n当前设置为{[0001|1b00]}{color[0400]}Joy-Con(L){color[ffff]}{[0001|ffff]}。
01.25.Alice	确认过后请关闭设置画面。
01.26.SensorL	还有我，我也没在检查人，\n而是在检查{[0001|1b00]}{color[0400]}时尚物体Joy-Con(R){color[ffff]}{[0001|ffff]}！
01.27.FancyR	Joy-Con(L)的确品位独特，\n不过真正走在时尚最前沿的，\n果然还是{[0001|1b00]}{color[0400]}Joy-Con(R){color[ffff]}{[0001|ffff]}才对！
01.28.FancyR	看看这扇小黑窗，\n内藏动作感应IR感应器！\n是不是超可爱♥
01.29.Alice	再来确认一下这边这个\n接触感应器小节点的设置画面吧。
01.30.Alice	请选中左边的{[0001|1b00]}{color[0400]}接触感应器小节点{color[ffff]}{[0001|ffff]}……
01.31.Alice	打开设置画面。
01.32.Alice	看，的确是{[0001|1b00]}{color[0400]}Joy-Con(R){color[ffff]}{[0001|ffff]}。
01.33.Alice	两个接触感应器小节点的检查对象\n{[0001|1b00]}{color[0400]}都是时尚物体而非人{color[ffff]}{[0001|ffff]}……\n这就是程序的关键所在。
01.34.Alice	那么，关闭设置画面。
01.35.FancyL	这形状让人不禁联想到鱼糕，\n谁看了都会食指大动！\n♥高端！大气！上档次！♥
01.36.FancyR	可惜了我这时尚的姿态……\n你竟然{[0001|1b00]}{color[0400]}看不见{color[ffff]}{[0001|ffff]}……
01.37.FancyAll	简直岂有此理！
01.38.Alice	……那好吧。我们暂时\n把时尚物体的“{[0001|1b00]}{color[0400]}能看见{color[ffff]}{[0001|ffff]}”开启，\n然后确认一下究竟发生了什么。
01.39.Alice	请选中{[0001|1b00]}Joy-Con(L){[0001|ffff]}的\n时尚物体小节点……
01.40.Alice	打开设置画面。
01.41.Alice	把{[0001|1b00]}状态{[0001|ffff]}中的“{[0001|1b00]}{color[0400]}能看见{color[ffff]}{[0001|ffff]}”设置为{[0001|1b00]}{color[0400]}开启{color[ffff]}{[0001|ffff]}。
01.42.Alice	关闭设置画面。
01.43.Alice	接着选中{[0001|1b00]}Joy-Con(R){[0001|ffff]}的\n时尚物体小节点……
01.44.Alice	打开设置画面。
01.45.Alice	把“{[0001|1b00]}{color[0400]}能看见{color[ffff]}{[0001|ffff]}”设置为{[0001|1b00]}{color[0400]}开启{color[ffff]}{[0001|ffff]}。
01.46.Alice	关闭设置。
01.47.Alice	好了，\n去游戏画面确认一下变化吧。
02.00.Alice	小蓝人和Joy-Con(L)，\n小红人和Joy-Con(R)，\n这两组分别粘在一起。
02.01.Alice	就像这样，\n时尚物体粘在了人的身上。
02.02.Alice	{[0001|1b00]}{color[0400]}蓝色地面{color[ffff]}{[0001|ffff]}上的接触感应器只会对\n淡蓝色的{[0001|1b00]}{color[0400]}Joy-Con(L){color[ffff]}{[0001|ffff]}给出反应。
02.03.Alice	而{[0001|1b00]}{color[0400]}红色地面{color[ffff]}{[0001|ffff]}上的接触感应器则只会对\n红色的{[0001|1b00]}{color[0400]}Joy-Con(R){color[ffff]}{[0001|ffff]}给出反应。
02.04.Alice	请{[0001|1b00]}{color[0400]}左右推动摇杆{color[ffff]}{[0001|ffff]}移动小蓝人，\n{[0001|1b00]}{color[0400]}左右推动摇杆{color[ffff]}{[0001|ffff]}移动小红人，\n去确认两边感应器的反应是否如刚才所言。
02.05.Alice	当人站上地面时……\n接触感应器与{[0001|1b00]}{color[0400]}Joy-Con{color[ffff]}{[0001|ffff]}接触……
02.06.Alice	于是接触感应器就对\n时尚物体Joy-Con给出了反应……\n明白了吗？
02.07.Alice	充分确认过后，\n请返回程序画面。
03.00.FancyR	我们时尚的外表，\n让你大饱眼福了吗？
03.02.SensorL	把时尚物体小节点们可视化以后，\n整个运作流程就看得很清楚了吧？
03.05.SensorR	我只会在时尚物体Joy-Con(L)\n进入到我的范围时……
03.06.SensorL	向特效小节点发送信号……
03.07.EffectR	当信号从接触感应器传递到\n我的输入端口时……
03.08.EffectR	我就会……叭啦～叭叭叭！
03.09.SensorAll	哇哇！
03.10.SensorL	不要吓我啦！
03.11.RigidC	有时……
03.12.SensorAll	哇哇哇！
03.13.SensorR	不要突然跟我讲话好不好～～
03.14.RigidC	不好意思。
03.15.RigidC	我是平面正中央的黄绿色地面。\n虽然我的颜色很显眼……
03.16.RigidC	但我似乎没有起到什么\n与显眼的外表相称的作用。
03.17.FancyL	哎呀，\n正中央可是最适合\n表现自我的好地方♥
03.18.Alice	那我们就来帮他发挥出\n正中央应有的精彩表现吧。
03.19.Alice	请把2个接触感应器小节点\n都放到黄绿色地面上。
03.20.Alice	把他变成\n无论站上来的是小红人还是小蓝人\n都会给出反应的地面。
03.21.RigidC	……责任重大。
03.23.Alice	首先把左边的接触感应器小节点\n移动到正中央。
03.25.Alice	然后把右边的接触感应器小节点\n也移动到正中央。
03.26.RigidC	正正好好同一个位置。\n……感觉自己好像开始紧张了。
03.29.RigidL	接触感应器小节点从我们上面离开了。\n也就是说……
03.30.RigidR	我们有点碍事呢，\n还是先告辞吧。
03.31.RigidC	……有点不安。
03.32.Alice	好了，\n去游戏画面确认一下变化吧。
04.00.Alice	代表接触感应器检查范围的网格，\n现在跑到了正中间的黄绿色地面上。
04.01.Alice	虽然看上去只有1个网格，\n但实际上存在着2个接触感应器。
04.02.Alice	请{[0001|1b00]}{color[0400]}左右推动摇杆{color[ffff]}{[0001|ffff]}和{[0001|1b00]}{color[0400]}摇杆{color[ffff]}{[0001|ffff]}\n让人移动起来，依次站到\n黄绿色地面上看看。
04.03.Alice	小蓝人站上去时拉炮响起，\n而小红人站上去时出现损伤特效。
04.04.Alice	因为出现的特效不同……\n由此可知，2个接触感应器\n都分别给出了应有的反应。
04.05.Alice	充分确认2个人被正确区分后，\n请返回程序画面。
05.00.SensorL	怎么样？
05.01.SensorR	虽然看上去好像只有\n1个接触感应器……
05.02.SensorL	但实际上……
05.03.SensorAll	我们俩都在认真工作！
05.05.FancyR	要是想展现时尚的魅力，\n果然还是站在正中央最合适♥
05.06.Alice	现在是为了便于讲解，\n才暂时把时尚物体和接触感应器\n设置为“能看见”……
05.07.Alice	等到正式设计程序时，\n还是把他们的“能看见”关闭比较好，\n这样画面看上去会更加干净简洁。
05.09.FancyL	怎么这样！\n我难得有机会在舞台中央\n一展风采……！
05.10.RigidC	不过，{[0001|1b00]}{color[0400]}即使看不见{color[ffff]}{[0001|ffff]}，\n{[0001|1b00]}{color[0400]}你们的外观也切实发挥着作用{color[ffff]}{[0001|ffff]}，\n总觉得很厉害呢！
05.11.EffectL	同感～\n俗话说“真人不外露”嘛～\n
05.12.EffectR	不对不对，\n那句话应该是“真人不露指”才对！
05.13.EffectL	瞎说什么呢！明明是“真人不露相”！\n手指有什么好藏起来的！\n是美甲做失败了不成！
05.13-01.EffectL	哇哈哈哈哈哈！
05.13-02.EffectR	哇哈哈哈哈哈！
05.14.Alice	……好，到现在为止讲解了这么多，\n对同类小节点给出不同反应的方法，\n你都明白了吗？
05.15.SensorL	我们接触感应器小节点，\n可以有区分地检查\n{color[0400]}{[0001|1b00]}不同外观的时尚物体{[0001|ffff]}{color[ffff]}。
05.18.HumanL	所以只要把{color[0400]}{[0001|1b00]}外观设置不同的\n时尚物体小节点{[0001|ffff]}{color[ffff]}连接到我们身上……
05.19.HumanR	接触感应器小节点就{color[0400]}{[0001|1b00]}能区分{[0001|ffff]}{color[ffff]}我们啦。
05.23.Alice	虽然这次举的例子是人小节点，\n但除了人小节点……
05.24.Alice	只要是能连接时尚物体小节点的\n小节点，就都能使用这个技巧。\n要好好记住哦。
05.25.Alice	那么，今天就到这里吧。
05.26.HumanL	拜拜啦。
05.27.FancyR	……虽然这次我无怨无悔地\n做了幕后工作，但总有一天，\n我一定会站在舞台的中央……！
Guidebook_FallAndBreak.msbt
000	……你好。
001	现在棕色场地上站着一个{[0001|1b00]}{color[0400]}人{color[ffff]}{[0001|ffff]}。
002	{[0001|1b00]}{color[0400]}摇杆{color[ffff]}{[0001|ffff]}可以让他移动，\n{[0001|1b00]}{color[0400]}键{color[ffff]}{[0001|ffff]}可以让他跳跃……
003	请尝试移动{[0001|1b00]}{color[0400]}人{color[ffff]}{[0001|ffff]}，\n让他从场地上{[0001|1b00]}{color[0400]}掉落{color[ffff]}{[0001|ffff]}。
004	从场地上掉落后，{[0001|1b00]}{color[0400]}人就损坏了{color[ffff]}{[0001|ffff]}。
005	这次我们要学习的就是这种\n{[0001|1b00]}{color[0400]}人从场地上掉落后就会损坏{color[ffff]}{[0001|ffff]}的程序。
006	请前往程序画面。
007	啊——\n{[0201]}来了——！
008	你好啊！\n来得正好呢！
009	呵呵呵……欢迎……
010	嗯嗯——你是想了解\n{[0001|1b00]}{color[0400]}人从场地上掉落后损坏{color[ffff]}{[0001|ffff]}的原理是吗！？
011	我明白了！\n那就先从{[0001|1b00]}{color[0400]}人为什么会损坏{color[ffff]}{[0001|ffff]}\n开始讲起吧！
012	人会损坏是因为\n我向{[0001|1b00]}{color[0400]}破坏物体小节点{color[ffff]}{[0001|ffff]}\n发送了信号！
013	我是{[0001|1b00]}{color[0400]}破坏物体小节点{color[ffff]}{[0001|ffff]}……
014	你有{[0001|1b00]}{color[0400]}想要破坏的物体{color[ffff]}{[0001|ffff]}吧……？\n呵呵呵……\n看眼神就知道了。
015	那就如你所愿，开始破坏吧……
016	我只要接收到{[0001|1b00]}{color[0400]}信号{color[ffff]}{[0001|ffff]}……\n就会破坏和我{[0001|1b00]}{color[0400]}接触的小节点{color[ffff]}{[0001|ffff]}……
017	能看到吗？\n我和{[0001|1b00]}{color[0400]}人小节点{color[ffff]}{[0001|ffff]}是{[0001|1b00]}{color[0400]}连接{color[ffff]}{[0001|ffff]}在一起的……
018	{[0001|1b00]}{color[0400]}我连接{color[ffff]}{[0001|ffff]}着{[0001|1b00]}{color[0400]}人小节点{color[ffff]}{[0001|ffff]}，\n始终和{[0001|1b00]}{color[0400]}人{color[ffff]}{[0001|ffff]}保持着接触……
019	所以一接收到{[0001|1b00]}{color[0400]}比较小节点\n{color[ffff]}{[0001|ffff]}传递过来的信号，\n我就会立刻将人破坏……
020	没错，{[0001|1b00]}{color[0400]}收到信号后破坏物体{color[ffff]}{[0001|ffff]}……\n这就是我。
021	一旦得知{[0001|1b00]}{color[0400]}人从场地上掉落{color[ffff]}{[0001|ffff]}，\n我就会立刻传递信号！
123	你是不是想问，\n我怎么知道人掉下场地了？
124	问得好！你一定很好奇\n我是怎么做到的吧？
022	其实很简单！\n只要比较{[0001|1b00]}{color[0400]}人所在位置的高度{color[ffff]}{[0001|ffff]}和\n{[0001|1b00]}{color[0400]}场地所在位置的高度{color[ffff]}{[0001|ffff]}就好啦！
023	为此，我特别邀请了\n{[0001|1b00]}{color[0400]}位置感应器小节点{color[ffff]}{[0001|ffff]}和\n{[0001|1b00]}{color[0400]}常数小节点{color[ffff]}{[0001|ffff]}来帮忙！
024	我是{[0001|1b00]}{color[0400]}位置感应器小节点{color[ffff]}{[0001|ffff]}！
025	想知道物体的{color[0400]}{[0001|1b00]}位置{[0001|ffff]}{color[ffff]}？\n问我就对了！
026	为了掌握{color[0400]}{[0001|1b00]}人所在的位置{[0001|ffff]}{color[ffff]}……\n我现在{[0001|1b00]}{color[0400]}连接{color[ffff]}{[0001|ffff]}着{[0001|1b00]}{color[0400]}人小节点{color[ffff]}{[0001|ffff]}！
028	看到了吗？我有3个{[0001|1b00]}{color[0400]}输出端口{color[ffff]}{[0001|ffff]}。
125	最上面的是{color[0400]}{[0001|1b00]}X{[0001|ffff]}{color[ffff]}端口！\n能输出{color[0400]}{[0001|1b00]}人{[0001|ffff]}{color[ffff]}所在的{color[0400]}{[0001|1b00]}横向位置{[0001|ffff]}{color[ffff]}……
126	正中间的是{[0001|1b00]}{color[0400]}Y{color[ffff]}{[0001|ffff]}端口！\n能输出{color[0400]}{[0001|1b00]}高度{[0001|ffff]}{color[ffff]}！
127	最下面的是{color[0400]}{[0001|1b00]}Z{[0001|ffff]}{color[ffff]}端口！\n能输出人所在的{[0001|1b00]}{color[0400]}纵深位置{color[ffff]}{[0001|ffff]}！
030	现在，{[0001|1b00]}{color[0400]}比较小节点{color[ffff]}{[0001|ffff]}想知道的是\n{[0001|1b00]}{color[0400]}人所在位置的高度{color[ffff]}{[0001|ffff]}……
031	所以正中间的{[0001|1b00]}{color[0400]}Y{color[ffff]}{[0001|ffff]}输出端口和\n{[0001|1b00]}{color[0400]}比较小节点{color[ffff]}{[0001|ffff]}连接在一起。
032	我是{[0001|1b00]}{color[0400]}常数小节点{color[ffff]}{[0001|ffff]}，\n我接到的任务是输出{[0001|1b00]}{color[0400]}0.00{color[ffff]}{[0001|ffff]}，\n守常不变地输出{[0001|1b00]}{color[0400]}0.00{color[ffff]}{[0001|ffff]}。
033	这个{[0001|1b00]}{color[0400]}0.00{color[ffff]}{[0001|ffff]}\n就是{[0001|1b00]}{color[0400]}场地所在位置的高度{color[ffff]}{[0001|ffff]}！
034	{[0001|1b00]}{color[0400]}位置感应器小节点{color[ffff]}{[0001|ffff]}、{[0001|1b00]}{color[0400]}常数小节点{color[ffff]}{[0001|ffff]}，\n谢谢你们——！
035	你明白了吗？借助这两位的力量，\n我就能比较{[0001|1b00]}{color[0400]}人{color[ffff]}{[0001|ffff]}和{[0001|1b00]}{color[0400]}场地{color[ffff]}{[0001|ffff]}的{[0001|1b00]}{color[0400]}位置高度{color[ffff]}{[0001|ffff]}！
036	现在，\n我的比较条件为{[0001|1b00]}{color[0400]}＞{color[ffff]}{[0001|ffff]}……
037	所以当满足\n{[0001|1b00]}{color[0400]}场地所在位置的高度＞人所在位置的高度\n{color[ffff]}{[0001|ffff]}这个条件时……
038	也就是当{[0001|1b00]}{color[0400]}人所在位置比场地低时{color[ffff]}{[0001|ffff]}，\n我就会向破坏物体小节点发送信号！
039	这就是\n{[0001|1b00]}{color[0400]}人从场地上掉落后会损坏的原理{color[ffff]}{[0001|ffff]}！
040	谢谢各位。
041	这个程序还挺复杂的……
042	我们再去游戏画面\n确认一下动作情况吧。
043	请让人离开场地掉下去。
044	当{[0001|1b00]}{color[0400]}人的位置{color[ffff]}{[0001|ffff]}低于\n{[0001|1b00]}{color[0400]}场地的位置{color[ffff]}{[0001|ffff]}时……
045	人就会损坏。
046	如果觉得没看清，\n按“{[0001|1b00]}{color[0400]}重来{color[ffff]}{[0001|ffff]}”即可反复确认。
047	请返回程序画面。
048	人从场地上掉落后就会损坏的原理，\n应该都搞清楚了吧——？
049	此外！\n如果更改{[0001|1b00]}{color[0400]}常数小节点{color[ffff]}{[0001|ffff]}的数值，\n我们还能改变人{[0001|1b00]}{color[0400]}损坏的地点{color[ffff]}{[0001|ffff]}哦！
122	试试看吧——
050	请选中{[0001|1b00]}{color[0400]}常数小节点{color[ffff]}{[0001|ffff]}。
051	打开设置。
052	设为{[0001|1b00]}{color[0400]}-2.00{color[ffff]}{[0001|ffff]}看看。
053	关闭设置。
054	{[0001|1b00]}{color[0400]}0.00{color[ffff]}{[0001|ffff]}是场地的位置高度……
129	所以{[0001|1b00]}{color[0400]}-2.00{color[ffff]}{[0001|ffff]}就是{[0001|1b00]}{color[0400]}\n比场地的位置更低的地方{color[ffff]}{[0001|ffff]}。
055	去{[0001|1b00]}{color[0400]}游戏画面{color[ffff]}{[0001|ffff]}确认一下有什么变化吧。
056	请让人离开{[0001|1b00]}{color[0400]}场地{color[ffff]}{[0001|ffff]}掉下去。
057	这次人掉到\n{[0001|1b00]}{color[0400]}比刚才更低的地方{color[ffff]}{[0001|ffff]}后才损坏。
058	当人所在位置的高度低于{[0001|1b00]}{color[0400]}-2.00{color[ffff]}{[0001|ffff]}时……
059	满足了{[0001|1b00]}{color[0400]}比较小节点{color[ffff]}{[0001|ffff]}的条件，\n于是比较小节点输出信号……\n{[0001|1b00]}{color[0400]}人就损坏了{color[ffff]}{[0001|ffff]}。
060	请返回{[0001|1b00]}{color[0400]}程序画面{color[ffff]}{[0001|ffff]}。
061	那么，这次我们来更改一下\n比较条件的设置吧！
062	把我的比较条件\n从{[0001|1b00]}{color[0400]}＞{color[ffff]}{[0001|ffff]}改成{[0001|1b00]}{color[0400]}＜{color[ffff]}{[0001|ffff]}看看！
063	请打开比较小节点的设置。
064	将条件更改为{[0001|1b00]}{color[0400]}＜{color[ffff]}{[0001|ffff]}。
065	关闭设置画面。
131	去游戏画面确认一下吧。
132	比较条件变成{[0001|1b00]}{color[0400]}＜{color[ffff]}{[0001|ffff]}后……\n人瞬间就损坏了……
134	为什么会这样呢？\n去程序画面听我讲解吧。
135	现在，常数小节点的数值为{[0001|1b00]}{color[0400]}-2.00{color[ffff]}{[0001|ffff]}。
136	而刚才我们把比较条件改成了{[0001|1b00]}{color[0400]}＜{color[ffff]}{[0001|ffff]}，\n这就意味着比较小节点会在\n{[0001|1b00]}{color[0400]}-2.00＜人所在位置的高度{color[ffff]}{[0001|ffff]}时输出信号。
137	换句话说，\n当{[0001|1b00]}{color[0400]}人所在的位置高于-2.00{color[ffff]}{[0001|ffff]}时，\n人就会损坏。
138	{[0001|1b00]}{color[0400]}-2.00{color[ffff]}{[0001|ffff]}是{[0001|1b00]}{color[0400]}比场地的位置更低的地方{color[ffff]}{[0001|ffff]}。
139	站在场地上的人\n从一开始就满足了\n高于{[0001|1b00]}{color[0400]}-2.00{color[ffff]}{[0001|ffff]}这个条件。
140	所以打开游戏画面的瞬间，\n{[0001|1b00]}{color[0400]}比较小节点{color[ffff]}{[0001|ffff]}立刻输出{[0001|1b00]}{color[0400]}信号{color[ffff]}{[0001|ffff]}，\n于是人就损坏了。
066	那么我们继续尝试更改常数，\n改变损坏的条件吧。
067	请打开{[0001|1b00]}{color[0400]}常数小节点{color[ffff]}{[0001|ffff]}的设置。
068	这次改为{[0001|1b00]}{color[0400]}2.00{color[ffff]}{[0001|ffff]}。
069	关闭设置。
070	这样一来，\n{[0001|1b00]}{color[0400]}当人所在位置高于2.00时{color[ffff]}{[0001|ffff]}，\n人就会损坏了。
071	{[0001|1b00]}{color[0400]}2.00{color[ffff]}{[0001|ffff]}是比场地更高的地方。
072	要怎么做才能让人损坏呢？
073	去{[0001|1b00]}{color[0400]}游戏画面{color[ffff]}{[0001|ffff]}试试吧。
074	有没有什么办法能让{[0001|1b00]}{color[0400]}人{color[ffff]}{[0001|ffff]}移动到\n比场地更高的位置？
075	在场地上按下{[0001|1b00]}{color[0400]}键{color[ffff]}{[0001|ffff]}\n跳跃起来你就能知道了。
076	{[0001|1b00]}{color[0400]}人{color[ffff]}{[0001|ffff]}一跳跃就损坏了。
128	{[0001|1b00]}{color[0400]}人{color[ffff]}{[0001|ffff]}一跳跃，\n所在位置就会高于{[0001|1b00]}{color[0400]}2.00{color[ffff]}{[0001|ffff]}，\n于是人就损坏了。
077	……现在的设置是人跳跃起来后，\n人自身发生损坏……
078	但如果你想设计\n人跳跃后{[0001|1b00]}{color[0400]}其他物体损坏{color[ffff]}{[0001|ffff]}的程序……\n应该也可以做到哦。
080	试试看吧。
081	那……我们来设计\n人一跳跃，{[0001|1b00]}{color[0400]}苹果{color[ffff]}{[0001|ffff]}就会损坏的程序吧。
082	有请{[0001|1b00]}{color[0400]}时尚物体小节点{color[ffff]}{[0001|ffff]}——\n{[0001|1b00]}{color[0400]}苹果{color[ffff]}{[0001|ffff]}登场。
141	又到我大显身手的时刻了♥
086	接下来把{[0001|1b00]}{color[0400]}破坏物体小节点{color[ffff]}{[0001|ffff]}的\n破坏对象改为{[0001|1b00]}{color[0400]}苹果{color[ffff]}{[0001|ffff]}。
087	请选中{[0001|1b00]}{color[0400]}破坏物体小节点{color[ffff]}{[0001|ffff]}和\n{[0001|1b00]}{color[0400]}人小节点{color[ffff]}{[0001|ffff]}之间的{[0001|1b00]}{color[0400]}连接{color[ffff]}{[0001|ffff]}。
088	解除连接。
089	然后连接到{[0001|1b00]}{color[0400]}苹果{color[ffff]}{[0001|ffff]}的{[0001|1b00]}{color[0400]}时尚物体小节点{color[ffff]}{[0001|ffff]}。
090	最后更改\n{[0001|1b00]}{color[0400]}破坏物体小节点{color[ffff]}{[0001|ffff]}的设置。
091	选择“{[0001|1b00]}{color[0400]}要破坏什么？{color[ffff]}{[0001|ffff]}”……
130	把{[0001|1b00]}{color[0400]}人{color[ffff]}{[0001|ffff]}的选项{[0001|1b00]}{color[0400]}关闭{color[ffff]}{[0001|ffff]}。
092	然后把{[0001|1b00]}{color[0400]}苹果{color[ffff]}{[0001|ffff]}的选项{[0001|1b00]}{color[0400]}开启{color[ffff]}{[0001|ffff]}。
093	关闭当前画面。
094	再关闭设置画面。
095	这样一来……\n{[0001|1b00]}{color[0400]}人一跳跃苹果就会损坏{color[ffff]}{[0001|ffff]}的程序就完成了。
096	呵呵呵……下个要破坏的目标是{[0001|1b00]}{color[0400]}苹果{color[ffff]}{[0001|ffff]}吗……
097	只要你需要……我会无数次地为你破坏……
098	……去{[0001|1b00]}{color[0400]}游戏画面{color[ffff]}{[0001|ffff]}看看吧。
112	请一边注意观察{color[0400]}{[0001|1b00]}苹果{[0001|ffff]}{color[ffff]}，\n一边按{[0001|1b00]}{color[0400]}键{color[ffff]}{[0001|ffff]}跳跃。
113	人一跳跃，{[0001|1b00]}{color[0400]}苹果{color[ffff]}{[0001|ffff]}就损坏了。
114	像这样，只要更改\n{[0001|1b00]}{color[0400]}破坏物体小节点的破坏对象{color[ffff]}{[0001|ffff]}……
115	就能设计出类似这种\n{[0001|1b00]}{color[0400]}利用跳跃动作破坏苹果{color[ffff]}{[0001|ffff]}的程序。
116	请前往{[0001|1b00]}{color[0400]}程序画面{color[ffff]}{[0001|ffff]}。
117	欢迎回来！
118	总结一下，调整{[0001|1b00]}{color[0400]}常数小节点{color[ffff]}{[0001|ffff]}的数值\n就可以改变物体{[0001|1b00]}{color[0400]}损坏的位置{color[ffff]}{[0001|ffff]}……
119	并且{[0001|1b00]}{color[0400]}破坏物体小节点{color[ffff]}{[0001|ffff]}要破坏的物体\n也是可以更改的……
120	记住这些知识对设计游戏一定大有帮助！
121	期待与你再次相见……\n无论何时，无论对象是谁，无论多少次……\n我都愿为你破坏……
Guidebook_FreeSlide.msbt
00.00.Alice	……你好，\n{[0201]}。
00.01.Alice	我们在游戏画面中可以看到\n圆柱体上面放着一个立方体。
00.02.Alice	不是，是右边的摇杆……\n用{color[0400]}{[0001|1b00]}摇杆{[0001|ffff]}{color[ffff]}和{color[0400]}{[0001|1b00]}键{[0001|ffff]}{color[ffff]}来移动蓝色立方体。
00.03.Alice	在不改变原朝向的前提下，\n发生了前后左右及向上的移动。
00.04.Alice	接下来要讲解的就是，\n能做出这种复杂动作的\n{[0001|1b00]}{color[0400]}自由滑动连接小节点{color[ffff]}{[0001|ffff]}。
00.05.Alice	那么，请前往程序画面。
01.00.Free	……唔，有事？
01.02.Button	请指教！{[0201]}！\n今日有何要事！？
01.04.Button	原来如此，你想详细了解\n{[0001|1b00]}{color[0400]}自由滑动连接小节点{color[ffff]}{[0001|ffff]}吗！
01.05.Button	喂！有人找你！\n自由滑动连接小节点！
01.06.Free	……让我静静。\n我现在不想讲话。
01.07.Button	……
01.08.Button	没办法！\n那我们几个先开始介绍吧！
01.09.Sylinder	……我是物体小节点，\n现在在扮演{color[0400]}{[0001|1b00]}圆柱体{[0001|ffff]}{color[ffff]}，\n我{[0001|1b00]}{color[0400]}不能移动{color[ffff]}{[0001|ffff]}。
01.10.Cube	……我是{[0001|1b00]}{color[0400]}蓝色立方体{color[ffff]}{[0001|ffff]}，\n我{[0001|1b00]}{color[0400]}能移动{color[ffff]}{[0001|ffff]}。
01.12.Cube	我们以{color[0400]}{[0001|1b00]}上下连接{[0001|ffff]}{color[ffff]}的形式连在一起。\n所以在游戏画面中看起来，\n一个放在另一个正上方。
01.13.Sylinder	但我们并不是直接相连的。
01.14.Sylinder	我被自由滑动连接小节点连接着……
01.15.Cube	而我连接着自由滑动连接小节点。
01.16.Button	简单来说就是，\n你们{[0001|1b00]}{color[0400]}隔着自由滑动连接小节点{color[ffff]}{[0001|ffff]}\n连接在一起对吧！
01.18.Free	抱歉，久等。\n我现在有干劲了。
01.18-01.Free	好吧，机会难得，\n我就介绍一下我自己吧。
01.19.Free	只要跟物体{color[0400]}{[0001|1b00]}隔着我连接起来{[0001|ffff]}{color[ffff]}，\n就可以让该物体进行{[0001|1b00]}{color[0400]}滑动{color[ffff]}{[0001|ffff]}。
01.20.Free	你知道滑动连接小节点吗？\n……就跟那家伙差不多。
01.21.Free	不过呢～\n我有{color[0400]}{[0001|1b00]}X、Y、Z{[0001|ffff]}{color[ffff]}三个{color[0400]}{[0001|1b00]}输入端口{[0001|ffff]}{color[ffff]}……
01.22.Free	可以分别输入\n在X轴、Y轴、Z轴三个方向上\n{color[0400]}{[0001|1b00]}滑动距离{[0001|ffff]}{color[ffff]}的数值。
01.23.Free	比如在{color[0400]}{[0001|1b00]}X端口{[0001|ffff]}{color[ffff]}中输入{color[0400]}{[0001|1b00]}1.00{[0001|ffff]}{color[ffff]}，\n就能{color[0400]}{[0001|1b00]}向右滑动1.00m{[0001|ffff]}{color[ffff]}……
01.24.Free	同样，在{color[0400]}{[0001|1b00]}Y端口{[0001|ffff]}{color[ffff]}中输入{color[0400]}{[0001|1b00]}1.00{[0001|ffff]}{color[ffff]}，\n就能{color[0400]}{[0001|1b00]}向上滑动1.00m{[0001|ffff]}{color[ffff]}。
01.25.Button	那如果同时输入的话，\n还能斜向滑动对吧！
01.29.Free	啊，顺带一提，\n可以输入的数值范围并没有死板地\n限制在-1.00到1.00之间……
01.30.Free	10m也好，100m也好，\n从输入端口传递过来的数值是多少，\n滑动距离就有多长。
01.34.Free	对了，顺便再告诉你一件事，\n我还能{color[0400]}{[0001|1b00]}无视{[0001|ffff]}{color[ffff]}输入端口的数值。
01.35.Free	虽然有点对不起你的辛苦输入，\n但是偶尔想把指挥抛到脑后，\n放慢脚步轻松一下也是正常的吧？
01.36.Free	唉……虽然才介绍到一半，\n但我已经累了。\n接下来你就凭感觉自己试试吧。
01.36-01.Free	再见。
01.37.StickH	真是个做事半吊子的家伙。
01.38.Alice	没办法……\n那我们就来实际尝试一下\n{color[0400]}{[0001|1b00]}无视输入{[0001|ffff]}{color[ffff]}的设置方法吧。
01.40.Alice	请选中自由滑动连接小节点……
01.41.Alice	打开设置画面。
01.42.Alice	在这里可以开启或关闭\n{color[0400]}{[0001|1b00]}滑动的移动输入{[0001|ffff]}{color[ffff]}。
01.43.Alice	现在{color[0400]}{[0001|1b00]}X、Y、Z全部开启{[0001|ffff]}{color[ffff]}，\n意味着所有轴方向上的滑动\n都{color[0400]}{[0001|1b00]}听从输入的指挥{[0001|ffff]}{color[ffff]}。
01.44.Alice	首先，请尝试{color[0400]}{[0001|1b00]}关闭Y{[0001|ffff]}{color[ffff]}。
01.45.Alice	好了，然后关闭设置画面。
01.46.Alice	发生了怎样的变化呢？\n去游戏画面确认一下吧。
02.00.Alice	蓝色立方体掉在了平面上。
02.01.Alice	这是由于{[0001|1b00]}{color[0400]}Y端口{color[ffff]}{[0001|ffff]}的输入被{[0001|1b00]}{color[0400]}无视{color[ffff]}{[0001|ffff]}，\n蓝色立方体{[0001|1b00]}{color[0400]}受重力影响掉了下来{color[ffff]}{[0001|ffff]}。
02.02.Alice	尝试按一下原本对{[0001|1b00]}Y端口{[0001|ffff]}\n提供输入的{color[0400]}{[0001|1b00]}键{[0001|ffff]}{color[ffff]}。
02.03.Alice	什么都没有发生呢。
02.05.Alice	输入到{[0001|1b00]}Y端口{[0001|ffff]}的数值被完全无视了。
02.06.Alice	接下来请尝试{color[0400]}{[0001|1b00]}上下左右推动摇杆{[0001|ffff]}{color[ffff]}。
02.07.Alice	能看到前后左右的移动\n仍然听从输入的指挥。
02.08.Alice	因为在{color[0400]}{[0001|1b00]}滑动的移动输入{[0001|ffff]}{color[ffff]}设置中，\n{color[0400]}{[0001|1b00]}X和Z{[0001|ffff]}{color[ffff]}仍处于{color[0400]}{[0001|1b00]}开启{[0001|ffff]}{color[ffff]}状态，\n所以仍然{color[0400]}{[0001|1b00]}听从输入的指挥{[0001|ffff]}{color[ffff]}在移动。
02.09.Alice	确认过移动情况后，\n让我们返回程序画面。
03.00.Button	我明明告诉了他键的状态！\n这家伙！竟敢无视我！
03.03.Alice	接下来尝试更改一下{color[0400]}{[0001|1b00]}Z轴{[0001|ffff]}{color[ffff]}的设置吧。
03.04.Alice	请选中自由滑动连接小节点……
03.05.Alice	打开设置画面。
03.06.Alice	这次我们尝试{color[0400]}{[0001|1b00]}关闭Z{[0001|ffff]}{color[ffff]}。
03.07.Alice	然后关闭设置画面。
03.10.Alice	这次我们通过让人推动物体的方式\n来确认移动情况。
03.11.Human	你好！\n果然还是需要我的帮助吧！
03.12.Free	嗯，你就放心大胆地干吧。
03.13.Alice	去游戏画面确认一下吧。
04.00.Alice	现在听从输入指挥的\n应该只剩下X轴方向了。
04.01.Alice	首先尝试用{color[0400]}{[0001|1b00]}摇杆上下左右{[0001|ffff]}{color[ffff]}和{color[0400]}{[0001|1b00]}键\n{[0001|ffff]}{color[ffff]}来移动蓝色立方体。
04.02.Alice	可以看到只能左右移动。
04.03.Alice	然后尝试用{color[0400]}{[0001|1b00]}摇杆上下左右{[0001|ffff]}{color[ffff]}来移动人，\n让人去推动蓝色立方体。
04.04.Alice	立方体被人推动，\n发生了前后移动。
04.05.Alice	也就是说Z轴方向无视了输入，\n{color[0400]}{[0001|1b00]}发生了移动{[0001|ffff]}{color[ffff]}。
04.06.Alice	而X轴方向因为仍然听从输入的指挥，\n所以就算被人推也没有发生左右移动。
04.07.Alice	顺带一提，\n如果找不到立方体和人在哪里，\n按下“重来”即可重新来过。
04.08.Alice	充分确认过后，\n让我们返回程序画面。
05.01.StickV	我拼命地转呀转！\n却还是被无视了！
05.02.Alice	那么最后，让我们尝试\n把X轴方向的输入也无视掉吧。
05.03.Alice	选中自由滑动连接小节点……
05.04.Alice	打开设置画面。
05.05.Alice	{[0001|1b00]}{color[0400]}关闭X{color[ffff]}{[0001|ffff]}。
05.06.Alice	关闭设置画面。
05.07.Alice	这下所有的输入数值全都被无视了。
05.08.Alice	去游戏画面确认一下吧。
06.00.Alice	尝试用{color[0400]}{[0001|1b00]}摇杆上下左右{[0001|ffff]}{color[ffff]}和{color[0400]}{[0001|1b00]}键{[0001|ffff]}{color[ffff]}\n来确认能否移动蓝色立方体。
06.01.Alice	动不了吧。
06.02.Alice	然后尝试用{color[0400]}{[0001|1b00]}摇杆上下左右{[0001|ffff]}{color[ffff]}来移动人，\n让人去推动蓝色立方体。
06.03.Alice	人一推，立方体就动了。
06.04.Alice	现在人的推动，\n能使立方体前后左右移动。
06.07.Alice	充分确认过后，\n让我们返回程序画面。
07.01.Free	好嘞，我休息好了。
07.02.Free	啊，已经结束了？\n那有请总结发言。
07.09.Alice	……以上就是对自由滑动连接小节点的介绍。\n你明白他的作用了吗？
07.10.Free	不就是让连接起来的物体能够滑动吗？\n多简单。
07.11.Button	具体滑动多远的距离\n可以通过三个{color[0400]}{[0001|1b00]}输入端口{[0001|ffff]}{color[ffff]}精确设置！
07.13.Free	没错，不过也可以\n通过更改设置把输入给无视掉。
07.14.Cube	当某个方向的输入被无视时，\n物体可在该方向上自由移动。
07.16.Alice	自由滑动连接小节点能帮你\n设计许多复杂的动作……\n要好好利用哦。
07.17.Alice	那么本次教学就到这里吧。
07.18.Human	拜拜啦。
07.19.Free	……{[0201]}，\n你想不想更自由地制作游戏呢？
07.20.Free	虽然人们也常说，\n自由才是最难的……
07.21.Free	……但是，我相信在不久的将来，\n{[0201]}你一定能自由地\n制作出你自己的游戏！
Guidebook_GameCamera.msbt
000	……你好。
001	现在我们在游戏画面中\n可以看到有2个{[0001|1b00]}{color[0400]}箱子{color[ffff]}{[0001|ffff]}。
002	分别是左边的蓝箱子和右边的红箱子……
003	……咦？
004	红箱子有一部分\n{[0001|1b00]}{color[0400]}超出了{color[ffff]}{[0001|ffff]}游戏画面的{[0001|1b00]}{color[0400]}显示范围{color[ffff]}{[0001|ffff]}……
005	为什么会发生这种情况呢……\n去{[0001|1b00]}{color[0400]}程序画面{color[ffff]}{[0001|ffff]}查看一下吧。
006	瞧瞧谁来了！这不是{[0201]}吗～～～！
007	你好你好～～～辛苦辛苦～～～～
008	……你好。
009	有什么事吗？
010	我知道我知道～
011	一定是因为想认识我\n{[0001|1b00]}{color[0400]}游戏画面小节点{color[ffff]}{[0001|ffff]}\n才来的吧～？
012	放心放心，我会手把手教你的，\n要认真听讲哦～～
013	我的职责是\n{[0001|1b00]}{color[0400]}把其他小节点圈起来～{color[ffff]}{[0001|ffff]}
014	为什么要把他们圈起来呢～
015	当然是因为只有被我圈起来的小节点\n才能{[0001|1b00]}{color[0400]}显示在游戏画面中{color[ffff]}{[0001|ffff]}啦～
016	{[0201]}，\n你刚才看到的{[0001|1b00]}{color[0400]}游戏画面{color[ffff]}{[0001|ffff]}就是\n{[0001|1b00]}{color[0400]}被我圈起来的地方{color[ffff]}{[0001|ffff]}哦～
017	显示得很完美吧～～？
018	然而有一个物体小节点\n{[0001|1b00]}{color[0400]}超出了{color[ffff]}{[0001|ffff]}游戏画面的{[0001|1b00]}{color[0400]}显示范围{color[ffff]}{[0001|ffff]}。
019	你说什么！？在哪里在哪里～？
020	……是我，我这里。
021	还真有～～！？
022	待在这里……就是我的职责。
023	不行，不行～\n我的职责是把每一个小节点都\n{[0001|1b00]}{color[0400]}完美显示出来{color[ffff]}{[0001|ffff]}～！
024	{[0201]}！\n快把那个超出显示范围的{[0001|1b00]}{color[0400]}物体小节点{color[ffff]}{[0001|ffff]}\n移到{[0001|1b00]}{color[0400]}我的框框里面{color[ffff]}{[0001|ffff]}来～！
063	把物体小节点移动到\n{[0001|1b00]}{color[0400]}游戏画面小节点的范围内{color[ffff]}{[0001|ffff]}吧。
025	……我进来了。
026	那么赶紧去确认一下吧～\n走起！
064	请前往游戏画面。
028	由于我们在{[0001|1b00]}{color[0400]}程序画面{color[ffff]}{[0001|ffff]}中\n把{[0001|1b00]}{color[0400]}物体小节点{color[ffff]}{[0001|ffff]}移动到了\n{[0001|1b00]}{color[0400]}游戏画面小节点{color[ffff]}{[0001|ffff]}的范围内……
029	现在可以看到红箱子\n{[0001|1b00]}{color[0400]}完全进入了游戏画面{color[ffff]}{[0001|ffff]}中呢。
030	那么，请回到程序画面。
032	这下红箱子也完美显示了吧～～！
033	明白了吗～～？\n只要是{[0001|1b00]}{color[0400]}拍摄游戏画面{color[ffff]}{[0001|ffff]}的任务就尽管交给我！
034	还有还有～
035	并不是只有{[0001|1b00]}{color[0400]}物体小节点{color[ffff]}{[0001|ffff]}才能移动～\n我本人！{[0001|1b00]}{color[0400]}游戏画面也是可以移动{color[ffff]}{[0001|ffff]}的哦！
036	红箱子的物体小节点！
037	……我在。
038	你那如火般激情四射的身姿……\n不站中间实在是太可惜了～！
040	{[0201]}，\n帮忙移动一下我的位置，\n让红箱子小节点{[0001|1b00]}{color[0400]}站到画面正中央{color[ffff]}{[0001|ffff]}！
067	请向右移动\n游戏画面小节点。
041	还有尺寸也要调整一下，别忘了哦～
066	请根据蓝框调整尺寸。
042	完美！
043	去游戏画面确认一下吧。
044	红箱子来到了画面正中央，\n并且获得了{[0001|1b00]}{color[0400]}大特写{color[ffff]}{[0001|ffff]}呢。
045	只要更改{[0001|1b00]}{color[0400]}游戏画面小节点{color[ffff]}{[0001|ffff]}的\n{[0001|1b00]}{color[0400]}位置{color[ffff]}{[0001|ffff]}和{[0001|1b00]}{color[0400]}尺寸{color[ffff]}{[0001|ffff]}，
046	就{[0001|1b00]}{color[0400]}能够改变{color[ffff]}{[0001|ffff]}游戏画面的\n{[0001|1b00]}{color[0400]}显示方式{color[ffff]}{[0001|ffff]}。
047	但是……\n这次蓝箱子又不见了。
048	请再次打开程序画面。
049	欢迎回来～！
050	怎么样，{[0001|1b00]}{color[0400]}站在舞台正中央可帅气了{color[ffff]}{[0001|ffff]}吧～～？
051	是挺帅气的，\n不过蓝箱子又不见了。
052	因为{[0001|1b00]}{color[0400]}超出游戏画面小节点范围{color[ffff]}{[0001|ffff]}的小节点\n{[0001|1b00]}{color[0400]}无法被显示{color[ffff]}{[0001|ffff]}，所以我们现在看不到蓝箱子。
053	看不到可不行啊，不行不行～
054	让所有小节点都完美显示在\n游戏画面中是我的职责所在～
055	{[0201]}，\n把外面那个物体小节点\n也完完整整地移到我的框框里面来～
068	移动到里面去。
056	完美！\n我有预感这将会是一幅世界名画！
057	去游戏画面确认一下吧。
058	有2个{[0001|1b00]}{color[0400]}物体小节点{color[ffff]}{[0001|ffff]}\n进到了{[0001|1b00]}{color[0400]}游戏画面小节点{color[ffff]}{[0001|ffff]}范围内……
059	2个{[0001|1b00]}{color[0400]}箱子{color[ffff]}{[0001|ffff]}都获得了大特写。
060	只要更改游戏画面小节点\n圈起来的位置，\n就能{[0001|1b00]}{color[0400]}改变游戏的显示方式{color[ffff]}{[0001|ffff]}。
061	请前往{[0001|1b00]}{color[0400]}程序画面{color[ffff]}{[0001|ffff]}。
069	辛苦辛苦～
070	{[0201]}，\n欢迎你多多利用我灵活调整显示方式～
071	挑战制作最富有视觉冲击力的游戏画面吧！
072	……下回再见。
Guidebook_HingeRotate.msbt
000	……你好。
001	看，右边有个奇怪的东西，\n似乎是球体和立方体粘在了一起……
002	这次我们来学习让{color[0400]}{[0001|1b00]}立方体\n以球体为中心骨碌骨碌转圈圈{[0001|ffff]}{color[ffff]}的方法吧。
003	现在物体被{[0001|1b00]}{color[0400]}固定在空中{color[ffff]}{[0001|ffff]}……\n没有旋转。
004	用{[0001|1b00]}{color[0400]}摇杆{color[ffff]}{[0001|ffff]}控制{[0001|1b00]}{color[0400]}UFO{color[ffff]}{[0001|ffff]}去撞击立方体，\n看看会不会动。
006	果然不会动对吧？\n现在请打开程序画面。
007	哈啰！{[0201]}！
008	美好的一天又开始了！！\n今天也是个跳舞的好日子呢～！
009	想让物体{[0001|1b00]}{color[0400]}骨碌骨碌转起来～{color[ffff]}{[0001|ffff]}对吧～！\n小菜一碟！
010	太棒了！来，跟上节奏！\n和我一起骨碌骨碌转起来～！
011	我是{[0001|1b00]}{color[0400]}铰链连接小节点{color[ffff]}{[0001|ffff]}！
012	在我左右两侧的是我的好朋友，\n{[0001|1b00]}{color[0400]}物体小节点{color[ffff]}{[0001|ffff]}～！
013	……我是{[0001|1b00]}{color[0400]}球体{color[ffff]}{[0001|ffff]}。
014	……我是{[0001|1b00]}{color[0400]}立方体{color[ffff]}{[0001|ffff]}。
014-01	我现在{[0001|1b00]}{color[0400]}连接{color[ffff]}{[0001|ffff]}着球体物体小节点。
015	没错～！接下来我们试着让\n{[0001|1b00]}{color[0400]}立方体骨碌骨碌转起来～{color[ffff]}{[0001|ffff]}！
016	第一步！\n取消{[0001|1b00]}{color[0400]}立方体和球体的连接{color[ffff]}{[0001|ffff]}！\n是的，把连接拿掉～！
017	请选中物体小节点之间的{[0001|1b00]}{color[0400]}连接{color[ffff]}{[0001|ffff]}……
018	然后{[0001|1b00]}{color[0400]}解除连接{color[ffff]}{[0001|ffff]}。
019	第二步！\n像做三明治一样把我夹住！\n{color[0400]}{[0001|1b00]}让我在中间把两边连接{[0001|ffff]}{color[ffff]}起来～！
020	首先……\n把{color[0400]}{[0001|1b00]}立方体物体小节点{[0001|ffff]}{color[ffff]}\n连接到铰链连接小节点上。
021	然后，\n把铰链连接小节点\n连接到{color[0400]}{[0001|1b00]}球体物体小节点{[0001|ffff]}{color[ffff]}上。
022	没错，就是这样！\n这下和球体粘在一起的立方体\n就能{[0001|1b00]}{color[0400]}骨碌骨碌转起来{color[ffff]}{[0001|ffff]}了哟～
026	和物体小节点一起舞动起来！
027	去游戏画面确认一下吧。
028	控制UFO去撞击立方体看看。
029	看，立方体{[0001|1b00]}{color[0400]}转起来{color[ffff]}{[0001|ffff]}了。
030	把{[0001|1b00]}{color[0400]}铰链连接小节点{color[ffff]}{[0001|ffff]}\n夹在中间连接起来后……
031	{[0001|1b00]}{color[0400]}连接起来的物体{color[ffff]}{[0001|ffff]}就能像这样{[0001|1b00]}{color[0400]}旋转{color[ffff]}{[0001|ffff]}。
119	因为球体现在被设置为不会移动……\n所以{color[0400]}{[0001|1b00]}立方体会以球体为中心骨碌骨碌旋转{[0001|ffff]}{color[ffff]}。
032	转够了我们就回程序画面吧。
033	嘿！{[0201]}！\n立方体骨碌骨碌转起来了对吧～！
035	物体小节点！\n跳舞是不是很开心呀？
036	开心。
037	骨碌骨碌。
038	以为这就完了？\n不！除了能骨碌骨碌旋转以外……
039	旋转的{[0001|1b00]}{color[0400]}区间{color[ffff]}{[0001|ffff]}也是能调整的！\n也就是说我们能随意设置{[0001|1b00]}{color[0400]}旋转范围{color[ffff]}{[0001|ffff]}～！
040	{[0201]}～\n打开我的设置，\n更改{[0001|1b00]}{color[0400]}范围{color[ffff]}{[0001|ffff]}看看吧～！
041	请打开铰链连接小节点的设置。
042	如果设置这样的{color[0400]}{[0001|1a00]}范围{[0001|ffff]}{color[ffff]}，物体会如何旋转呢……\n在这里可以更改{[0001|1b00]}{color[0400]}旋转角度的范围{color[ffff]}{[0001|ffff]}。
044	请尝试把左滑块设置为{[0001|1b00]}{color[0400]}-45.00{color[ffff]}{[0001|ffff]}，\n右滑块设置为{[0001|1b00]}{color[0400]}45.00{color[ffff]}{[0001|ffff]}。
046	这样设置以后，\n可旋转{[0001|1b00]}{color[0400]}范围{color[ffff]}{[0001|ffff]}就缩小了……
047	只能在{[0001|1b00]}{color[0400]}-45°至45°\n之间的范围内旋转{color[ffff]}{[0001|ffff]}。
048	关闭设置画面。
049	你很棒哦！\n那就让我们再次起舞吧！
050	去游戏画面确认一下吧。
051	请尝试撞击立方体。
052	因为我们在{[0001|1b00]}{color[0400]}铰链连接小节点{color[ffff]}{[0001|ffff]}的设置中\n缩小了旋转角度的{[0001|1b00]}{color[0400]}范围{color[ffff]}{[0001|ffff]}……
053	所以立方体{color[0400]}{[0001|1b00]}旋转到\n一定程度就停止了{[0001|ffff]}{color[ffff]}。
054	请返回程序画面。
055	看到没！？中途刹车！\n转到一半就{color[0400]}{[0001|1b00]}停下了{[0001|ffff]}{color[ffff]}对吧～！
056	还没完哦～！
057	如果我们把{[0001|1b00]}{color[0400]}范围{color[ffff]}{[0001|ffff]}缩小到极限～
058	就能让物体{[0001|1b00]}{color[0400]}保持倾斜状态粘在一起{color[ffff]}{[0001|ffff]}～
059	尝试修改设置看看吧。
060	请把范围的{[0001|1b00]}{color[0400]}左滑块{color[ffff]}{[0001|ffff]}也设置成{[0001|1b00]}{color[0400]}45.00{color[ffff]}{[0001|ffff]}，\n与右滑块保持一致。
061	如此一来，可旋转{[0001|1b00]}{color[0400]}范围{color[ffff]}{[0001|ffff]}就变成了\n{[0001|1b00]}{color[0400]}45°到45°{color[ffff]}{[0001|ffff]}……
062	也就是只能{[0001|1b00]}{color[0400]}正正好好保持在45°{color[ffff]}{[0001|ffff]}。
063	关闭设置画面。
064	去游戏画面看看有没有发生变化吧。
065	立方体{color[0400]}{[0001|1b00]}倾斜着{[0001|ffff]}{color[ffff]}和球体粘在一起。
066	就算用UFO去撞击也纹丝不动呢。
067	之所以动不了，\n就是因为{[0001|1b00]}{color[0400]}角度被固定{color[ffff]}{[0001|ffff]}住了。
068	那么请前往程序画面。
069	{color[0400]}{[0001|1b00]}彻底动不了了{[0001|ffff]}{color[ffff]}吧～！
069-01	是不是很想高呼一声“好神奇”呢！
070	然而还没完哦！
071	其实还有一种办法也能让物体旋转，\n那就是向我的{color[0400]}{[0001|1b00]}输入端口{[0001|ffff]}{color[ffff]}输入信号！
072	总之～\n先重置一下我的{color[0400]}{[0001|1b00]}范围{[0001|ffff]}{color[ffff]}！\n恢复初始设置！
073	请打开铰链连接小节点的设置。
074	把左滑块恢复到{[0001|1b00]}{color[0400]}-180.00{color[ffff]}{[0001|ffff]}，\n右滑块恢复到{[0001|1b00]}{color[0400]}180.00{color[ffff]}{[0001|ffff]}。
114	先去游戏画面确认一下。
115	控制UFO去撞击立方体看看。
116	又能骨碌骨碌转起来了。
117	然后返回程序画面。
076	万事俱备，只欠东风！\n有请我的朋友{[0001|1b00]}{color[0400]}常数小节点{color[ffff]}{[0001|ffff]}登场～！
077	我是守常不变的常数小节点。
080	当有信号输入到我的{[0001|1b00]}{color[0400]}输入端口{color[ffff]}{[0001|ffff]}时～
081	我能把{[0001|1b00]}{color[0400]}输入进来的数值{color[ffff]}{[0001|ffff]}转换成{color[0400]}{[0001|1b00]}角度{[0001|ffff]}{color[ffff]}，\n然后让物体旋转！
082	举个例子，\n请打开{[0001|1b00]}{color[0400]}常数小节点{color[ffff]}{[0001|ffff]}的设置。
083	更改为{[0001|1b00]}{color[0400]}90.00{color[ffff]}{[0001|ffff]}。
084	关闭设置画面。
085	然后把设置为{[0001|1b00]}90.00{[0001|ffff]}的{[0001|1b00]}{color[0400]}常数小节点\n{color[ffff]}{[0001|ffff]}和{[0001|1b00]}{color[0400]}铰链连接小节点{color[ffff]}{[0001|ffff]}连接起来……
086	干得漂亮～！\n这样就能分毫不差地\n{color[0400]}{[0001|1b00]}旋转到90°{[0001|ffff]}{color[ffff]}为止啦～！
087	去确认一下吧。
088	{[0001|1b00]}{color[0400]}立方体旋转了90°{color[ffff]}{[0001|ffff]}。
118	由于向铰链连接小节点输入了{color[0400]}{[0001|1b00]}90.00{[0001|ffff]}{color[ffff]}这一数值，\n立方体便保持{color[0400]}{[0001|1b00]}旋转90°{[0001|ffff]}{color[ffff]}的状态和球体粘在一起。
089	就算用UFO去撞击，\n立方体也依然纹丝不动。
090	向铰链连接小节点输入信号后\n会发生什么事情……\n你明白了吗？
091	好，那我们返回{[0001|1b00]}{color[0400]}程序画面{color[ffff]}{[0001|ffff]}吧。
092	欢迎回来～！
110	我的职责呢，\n就是让大家骨碌骨碌转起来～！
111	{[0201]}，\n你也和我一起舞动起来吧！！
112	那就下回再见了……
113	骨碌骨碌……骨碌骨碌……
Guidebook_HingeSlide.msbt
000	……欢迎。
001	现在在画面中我们能看到两个{[0001|1b00]}{color[0400]}人{color[ffff]}{[0001|ffff]}……\n以及蓝色{[0001|1b00]}{color[0400]}立方体{color[ffff]}{[0001|ffff]}与红色{[0001|1b00]}{color[0400]}圆柱体{color[ffff]}{[0001|ffff]}的结合体。
002	请尝试用{color[0400]}{[0001|1b00]}摇杆控制左边的人{[0001|ffff]}{color[ffff]}、\n{[0001|1b00]}{color[0400]}摇杆控制右边的人{color[ffff]}{[0001|ffff]}去撞击立方体。
003	立方体被人撞击后{[0001|1b00]}{color[0400]}发生了滑动{color[ffff]}{[0001|ffff]}。
006	这次我们要学习的是，\n{[0001|1b00]}{color[0400]}物体{color[ffff]}{[0001|ffff]}像刚才那样{[0001|1b00]}{color[0400]}滑动的原理{color[ffff]}{[0001|ffff]}。
007	那么，请前往程序画面。
008	{[0201]}！\n还记得我吗！\n我是{[0001|1b00]}{color[0400]}滑动连接小节点{color[ffff]}{[0001|ffff]}！！
009	什么！\n你想了解{[0001|1b00]}{color[0400]}物体滑动的原理{color[ffff]}{[0001|ffff]}？
010	……没想到{[0201]}\n会对我产生兴趣……
011	好激动！！\n超级无敌开心！！
013	{[0001|1b00]}{color[0400]}物体滑动起来{color[ffff]}{[0001|ffff]}可都是我的功劳！！
014	{[0201]}，\n接下来就由我来教你{[0001|1b00]}{color[0400]}物体滑动的原理{color[ffff]}{[0001|ffff]}吧。\n我保证讲得清清楚楚、明明白白！
015	包在我身上！！！
016	在游戏画面中我们能看到\n{[0001|1b00]}{color[0400]}长条形蓝色立方体{color[ffff]}{[0001|ffff]}\n和{[0001|1b00]}{color[0400]}红色圆柱体{color[ffff]}{[0001|ffff]}粘在一起。
016-01	……我是红色圆柱体。
016-02	……我是长条形蓝色立方体。
017	如果想让物体粘在一起，\n通常会直接在{[0001|1b00]}{color[0400]}物体小节点之间建立连接{color[ffff]}{[0001|ffff]}……
018	就像这样连接起来。
019	但如果不是直接建立连接，\n而是{[0001|1b00]}{color[0400]}隔着我把物体连接到一起{color[ffff]}{[0001|ffff]}的话……
020	{[0001|1b00]}{color[0400]}被我连接的物体就能滑动{color[ffff]}{[0001|ffff]}啦！！
021	比如当我们想要像刚才那样\n把立方体与圆柱体连接起来时……
022	首先把{color[0400]}{[0001|1b00]}立方体与我连接{[0001|ffff]}{color[ffff]}。
023	然后再把{color[0400]}{[0001|1b00]}我与圆柱体连接{[0001|ffff]}{color[ffff]}！
024	这样一来，\n{color[0400]}{[0001|1b00]}立方体就能滑动{[0001|ffff]}{color[ffff]}起来啦！！
044-01	其实……\n我的作用可远不止让物体滑动哦！
045	{[0201]}……\n不好意思……\n能劳烦你打开我的设置画面吗？
046	在我的设置画面中，\n能{color[0400]}{[0001|1b00]}更改滑动的范围{[0001|ffff]}{color[ffff]}！
047	试试看吧。
048	这里就是{[0001|1b00]}{color[0400]}范围{color[ffff]}{[0001|ffff]}。
049	移动左右滑块\n即可更改{[0001|1b00]}{color[0400]}滑动范围{color[ffff]}{[0001|ffff]}。
050	请把{color[0400]}{[0001|1b00]}左滑块{[0001|ffff]}{color[ffff]}设置为{[0001|1b00]}{color[0400]}0.00{color[ffff]}{[0001|ffff]}。
051	然后关闭。
052	竟然特意为我更改了设置……\n真是不胜感激！！
052-01	当前{[0001|1b00]}{color[0400]}滑动范围{color[ffff]}{[0001|ffff]}变成了\n{[0001|1b00]}{color[0400]}0.00{color[ffff]}{[0001|ffff]}～{[0001|1b00]}{color[0400]}100.00{color[ffff]}{[0001|ffff]}……
053	这意味着滑动范围被限制在中心的右边……\n也就是说{[0001|1b00]}{color[0400]}无法从中心向左滑动{color[ffff]}{[0001|ffff]}了！
054	去游戏画面确认一下吧。
055	首先尝试用{color[0400]}{[0001|1b00]}摇杆控制右边的人{[0001|ffff]}{color[ffff]}\n去撞击立方体。
056	……可以看到立方体{[0001|1b00]}{color[0400]}没有向左滑动{color[ffff]}{[0001|ffff]}。
057	然后再尝试用{color[0400]}{[0001|1b00]}摇杆控制左边的人{[0001|ffff]}{color[ffff]}\n去撞击立方体。
058	立方体{[0001|1b00]}{color[0400]}向右滑动了{color[ffff]}{[0001|ffff]}。
059	因为我们把{[0001|1b00]}{color[0400]}滑动范围{color[ffff]}{[0001|ffff]}限制在了\n{[0001|1b00]}{color[0400]}0.00{color[ffff]}{[0001|ffff]}～{[0001|1b00]}{color[0400]}100.00{color[ffff]}{[0001|ffff]}之间……
060	所以物体只能从原始位置{[0001|1b00]}{color[0400]}向右滑动{color[ffff]}{[0001|ffff]}，\n{[0001|1b00]}{color[0400]}而无法向左滑动{color[ffff]}{[0001|ffff]}。
063	请前往程序画面。
064	看到了吗？\n除了能让物体滑动起来，\n我还能{color[0400]}{[0001|1b00]}限制{[0001|ffff]}{color[ffff]}滑动的范围！
065	这样的我……\n是不是能稍微帮到你一点呢？\n{[0201]}！
066	其实我的作用还不止如此哦……
067	如果把{[0001|1b00]}{color[0400]}范围缩小到极限{color[ffff]}{[0001|ffff]}，\n就能{[0001|1b00]}{color[0400]}以偏移的状态把物体连接{color[ffff]}{[0001|ffff]}起来哦！
068	让我们试试看吧。
069	请把范围的{color[0400]}{[0001|1b00]}左右滑块{[0001|ffff]}{color[ffff]}\n同时设置为{[0001|1b00]}{color[0400]}2.00{color[ffff]}{[0001|ffff]}。
070	这样移动范围就变成了\n{[0001|1b00]}{color[0400]}2.00{color[ffff]}{[0001|ffff]}到{[0001|1b00]}{color[0400]}2.00{color[ffff]}{[0001|ffff]}……
071	也就是说……\n物体{color[0400]}{[0001|1b00]}被固定在了2.00的位置上{[0001|ffff]}{color[ffff]}。
072	关闭设置画面。
073	去游戏画面看看吧。
074	我们通过更改{[0001|1b00]}{color[0400]}滑动连接小节点{color[ffff]}{[0001|ffff]}的设置，\n把物体{color[0400]}{[0001|1b00]}固定在了2.00的位置上{[0001|ffff]}{color[ffff]}……
075	可以看到立方体的位置\n{[0001|1b00]}{color[0400]}从正中间向右发生了偏移{color[ffff]}{[0001|ffff]}。
076	就算受到撞击也{color[0400]}{[0001|1b00]}纹丝不动{[0001|ffff]}{color[ffff]}。
077	请返回程序画面。
078	还有还有！\n如果向我的{[0001|1b00]}{color[0400]}输入端口{color[ffff]}{[0001|ffff]}传递信号……
078-01	我就能根据输入进来的数值\n让物体发生相应的{[0001|1b00]}{color[0400]}偏移后连接{color[ffff]}{[0001|ffff]}！
079	{[0201]}，\n首先请把我的{[0001|1b00]}{color[0400]}范围{color[ffff]}{[0001|ffff]}设置恢复原状！
080	打开{[0001|1b00]}{color[0400]}滑动连接小节点{color[ffff]}{[0001|ffff]}的设置画面。
081	恢复到{[0001|1b00]}{color[0400]}-100.00{color[ffff]}{[0001|ffff]}～{[0001|1b00]}{color[0400]}100.00{color[ffff]}{[0001|ffff]}。
082	然后关闭。
083	接下来……\n有请{[0001|1b00]}{color[0400]}常数小节点{color[ffff]}{[0001|ffff]}！
084	常胜将军就是我，{[0001|1b00]}\n{color[0400]}常数小节点{color[ffff]}{[0001|ffff]}是也。
085	我们来更改常数小节点的设置。
086	改为{[0001|1b00]}{color[0400]}-2.00{color[ffff]}{[0001|ffff]}。
087	然后关闭。
088	{[0001|1b00]}{color[0400]}-2.00{color[ffff]}{[0001|ffff]}是吧！\n我会守常不变地持续发送{[0001|1b00]}{color[0400]}-2.00{color[ffff]}{[0001|ffff]}。
089	{[0201]}，\n能劳烦你把{[0001|1b00]}{color[0400]}常数小节点{color[ffff]}{[0001|ffff]}\n和我连接起来吗！？
103	把他们连接起来。
090	常数小节点始终发送同一个数值的\n专注与坚持……实在太帅气了！！
091	我不能辜负他的努力！我也要根据\n{[0001|1b00]}{color[0400]}输入进来的数值{color[ffff]}{[0001|ffff]}把物体牢牢{[0001|1b00]}{color[0400]}固定{color[ffff]}{[0001|ffff]}住！！
092	刚才{[0001|1b00]}{color[0400]}固定在2.00{color[ffff]}{[0001|ffff]}时，\n发生了{[0001|1b00]}{color[0400]}向右的偏移{color[ffff]}{[0001|ffff]}……
093	这次{color[0400]}{[0001|1b00]}固定在了-2.00{[0001|ffff]}{color[ffff]}，\n又会发生怎样的偏移呢？
094	去看看结果和你的想象是否一致吧。
095	立方体发生了{color[0400]}{[0001|1b00]}向左的偏移{[0001|ffff]}{color[ffff]}。
096	因为滑动连接小节点始终\n接收着{[0001|1b00]}{color[0400]}-2.00{color[ffff]}{[0001|ffff]}的数值信号，\n所以物体{[0001|1b00]}{color[0400]}被固定在了向左偏移2.00的位置上{color[ffff]}{[0001|ffff]}。
097	就算让人去推也推不动。
098	请前往程序画面。
099	{[0201]}，\n……如何？
100	有没有感受到我全身心投入的努力……！
101	当需要{color[0400]}{[0001|1b00]}滑动物体\n{[0001|ffff]}{color[ffff]}或者{color[0400]}{[0001|1b00]}以偏移的状态连接物体{[0001|ffff]}{color[ffff]}时……\n请尽管来找我！！！
102	那就下次再见了，后会有期。
Guidebook_JudgeWinOrLose.msbt
00.00.Alice	……你好，{[0201]}。
00.01.Alice	这次要学习的是{[0001|1b00]}{color[0400]}判定胜负程序{color[ffff]}{[0001|ffff]}。\n这个程序的构造有点复杂，\n我会按顺序一步一步地讲解。
00.02.Alice	首先请看，这里有个{[0001|1b00]}{color[0400]}写着数字的蓝箱子{color[ffff]}{[0001|ffff]}。
00.03.Alice	请按下{[0001|1b00]}{color[0400]}键{color[ffff]}{[0001|ffff]}。
00.04.Alice	我们听到了拉炮的响声，\n并且看到数字从0变为1。
00.05.Alice	再一次按下{[0001|1b00]}{color[0400]}键{color[ffff]}{[0001|ffff]}看看。
00.06.Alice	什么都没有发生呢。
00.07.Alice	按下一次键之后，\n就再也不会发生任何反应……
00.09.Alice	其实，这是判定胜负程序的\n一个重要组成部分。
00.10.Alice	我们去程序画面看看吧。
01.00.ButtonL	请指教！\n又见面了呢，{[0201]}。
01.01.FlagL	呼噜……\n我是……旗标小节点……
01.02.NumberL	你好，\n{[0201]}，\n我是带数字物体小节点。
01.03.NumberL	我能把旗标小节点\n输出的数字\n显示在蓝箱子上。
01.04.EffectL	你好，{[0201]}。\n今天也要嗨起来哟～\n叭啦～叭叭叭！！
01.05.FlagL	嗯……\n哈欠……
01.06.FlagL	呼噜……\n{[0201]}……\n今天有什么事吗？哈欠……
01.07.FlagL	呼噜……\n想了解判定胜负程序？\n哈欠……\t
01.08.FlagL	好吧……\n那我们就从按下键后\n会发生什么开始讲解……
01.08-01.FlagL	不好意思……\n容我边睡边讲……呼噜……
01.09.FlagL	首先……我的{[0001|1b00]}{color[0400]}初始状态\n是关闭{color[ffff]}{[0001|ffff]}的……唔嗯……
01.10.NumberL	因为{[0001|1b00]}{color[0400]}关闭状态下不传递信号{color[ffff]}{[0001|ffff]}，\n所以当旗标小节点关闭时，\n我身上的数字就显示为0。
01.11.ButtonL	如果在旗标小节点关闭状态下\n按下键……
01.12.FlagL	……唔嗯唔嗯……\n当我的{[0001|1b00]}{color[0400]}开启端口接收到信号{color[ffff]}{[0001|ffff]}，\n我就会{[0001|1b00]}{color[0400]}切换为开启状态{color[ffff]}{[0001|ffff]}……
01.13.NumberL	因为{[0001|1b00]}{color[0400]}开启状态下会传递信号{color[ffff]}{[0001|ffff]}，\n所以当旗标小节点开启时，\n我身上的数字就显示为1。
01.18.FlagL	……我{[0001|1b00]}{color[0400]}一旦切换到开启状态{color[ffff]}{[0001|ffff]}，\n{[0001|1b00]}{color[0400]}之后无论开启端口再接收多少次信号{color[ffff]}{[0001|ffff]}，\n{[0001|1b00]}{color[0400]}都只会保持开启状态不变{color[ffff]}{[0001|ffff]}……
01.19.NumberL	这就是我显示的数字\n从0变成1后一直保持为1不变的原因。
01.20.FlagL	……换句话说……\n{[0001|1b00]}{color[0400]}键只要被按过一次{color[ffff]}{[0001|ffff]}……\n我就能记住……哈欠……
01.21.ButtonL	然而！\n没有比赛，就不需要判定胜负！\n不是说好要讲解{[0001|1b00]}{color[0400]}判定胜负{color[ffff]}{[0001|ffff]}吗！？
01.22.Alice	那么接下来，\n有请比赛对手的队伍登场。
01.23.ButtonR	请指教！\n我是{[0001|1b00]}{[0001|ffff]}按键小节点的对手，\n我负责传递键的情况！
01.24.FlagR	……呼噜……\n……唔嗯唔嗯……
01.25.EffectR	你好！\n虽然对手能发出拉炮声是挺厉害……
01.26.EffectR	但我也会“咻咻咻”发动损伤特效，\n猛烈地吐槽对手哦～
01.28.NumberR	你好，\n{[0201]}，\n我是带数字物体小节点。
01.29.NumberR	我能把右方旗标小节点的状态，\n以数字形式显示在红箱子上。
01.30.Alice	新登场的右方队伍\n与左方队伍由相同的小节点构成。
01.31.Alice	小节点的数量一下子翻倍了呢！\n让我们先去确认一下\n游戏画面变成了什么样吧。
01.32.Alice	那么，请前往游戏画面。
02.00.Alice	多了一个带数字的红箱子。
02.01.Alice	请按下{[0001|1b00]}{color[0400]}键{color[ffff]}{[0001|ffff]}。
02.02.Alice	我们看到了损伤特效，\n并且红箱子上的数字从0变为1。
02.03.Alice	再一次按下{[0001|1b00]}{color[0400]}键{color[ffff]}{[0001|ffff]}看看。
02.04.Alice	按下按键也没反应了对吧？
02.05.Alice	再试试看{[0001|1b00]}{color[0400]}键{color[ffff]}{[0001|ffff]}。
02.06.Alice	这边也和先前一样，\n按过一次{[0001|1b00]}{color[0400]}键{color[ffff]}{[0001|ffff]}后，\n无论再按多少次都不再有反应。
02.07.Alice	总结起来，无论哪边的按键，\n都分别只能获得1次反应。
02.08.Alice	顺带一提，只要按下“重来”\n即可让两个箱子上的数字\n都变回0，重新来过。
02.09.Alice	弄明白按下键和键会发生什么后，\n让我们返回程序画面。
03.00.NumberR	感觉如何？
03.01.FlagR	呼噜……\n右方的红队也是那样……
03.02.FlagL	呼噜……\n左方的蓝队也是那样……
03.03.NumberL	其实是相同的事情\n在两边各发生了一遍嘛。
03.04.ButtonL	条件公平！\n值得一战！
03.05.ButtonR	好，那我们比什么好呢？\n比谁1分钟能做更多的俯卧撑？
03.06.FlagR	……唔嗯……\n虽然{[0001|1b00]}{color[0400]}只要按键被按下过一次{color[ffff]}{[0001|ffff]}\n我们就能记住……
03.07.FlagL	但具体被按下了多少次……\n我们就数不清了呀……哈欠……
03.08.NumberL	既然这样，\n那我们就{[0001|1b00]}{color[0400]}比谁按得快{color[ffff]}{[0001|ffff]}如何？
03.09.NumberR	游戏开始后，\n{[0001|1b00]}{color[0400]}键和键当中谁先被按下{color[ffff]}{[0001|ffff]}，\n谁就是赢家！
03.10.Alice	下面让我们进入主题，开始学习判定胜负。
03.11.Alice	我们的目标是\n只让先被按下的按键获得反应。
03.12.Alice	还记得吗？\n旗标小节点能记住\n{[0001|1b00]}{color[0400]}按键是否被按下过{color[ffff]}{[0001|ffff]}……
03.13.Alice	所以我们要做的是，在对手按下按键之前……\n也就是{[0001|1b00]}{color[0400]}在对手的旗标小节点处于关闭状态{color[ffff]}{[0001|ffff]}时，\n{[0001|1b00]}{color[0400]}按下自己的按键能获得反应{color[ffff]}{[0001|ffff]}。
03.14.Alice	反之，当对手已经按下了按键……\n也就是{[0001|1b00]}{color[0400]}在对手的旗标小节点处于开启状态{color[ffff]}{[0001|ffff]}时，\n{[0001|1b00]}{color[0400]}按下自己的按键也不能获得反应{color[ffff]}{[0001|ffff]}。
03.15.Alice	那我们先从右方的红队\n开始编程吧。
03.16.Alice	请选中右方{[0001|1b00]}{[0001|ffff]}按键小节点\n身上连着的线……
03.17.Alice	我们暂且拿掉这条线。
03.20.Alice	然后把{[0001|1b00]}{color[0400]}AND小节点{color[ffff]}{[0001|ffff]}叫出来。
03.21.AndR	没问题没问题！\n{[0201]}，\n你好！
03.22.AndR	当我的两个输入端口\n{[0001|1b00]}{color[0400]}都接收到信号时{color[ffff]}{[0001|ffff]}，\n我就可以输出信号。
03.23.Alice	因为我们希望做到的是，\n在{[0001|1b00]}{color[0400]}对方的旗标小节点处于关闭状态时{color[ffff]}{[0001|ffff]}，\n{[0001|1b00]}{color[0400]}按下自己的按键{color[ffff]}{[0001|ffff]}能输出信号。所以……
03.24.ButtonR	把我的输出端口\n连接到其中一端就行！
03.25.FlagL	……哈欠……\n另一端的条件是……\n我处于{[0001|1b00]}{color[0400]}关闭状态{color[ffff]}{[0001|ffff]}……
03.26.FlagL	但是……唔嗯……\n我只会在{[0001|1b00]}{color[0400]}开启状态时\n输出信号{color[ffff]}{[0001|ffff]}……
03.27.NumberL	所以一旦就这么直接连接到AND小节点，\n{[0001|1b00]}{color[0400]}旗标小节点处于开启状态{color[ffff]}{[0001|ffff]}\n就成了判定条件。
03.28.FlagR	……哈欠……\n希望能{[0001|1b00]}{color[0400]}在关闭状态时{color[ffff]}{[0001|ffff]}输出信号，\n而{[0001|1b00]}{color[0400]}不是开启状态{color[ffff]}{[0001|ffff]}……
03.29.Alice	那么，\n把{[0001|1b00]}{color[0400]}NOT小节点{color[ffff]}{[0001|ffff]}叫出来吧。
03.30.NotR	嘿嘿嘿！\n我是NOT小节点……才怪～
03.31.NumberL	NOT小节点能{[0001|1b00]}{color[0400]}输出\n与输入的相反的信号{color[ffff]}{[0001|ffff]}，\n这样就能{[0001|1b00]}{color[0400]}在关闭状态时输出信号{color[ffff]}{[0001|ffff]}了。
03.32.NotR	你可别指望我帮你连线哦～
03.32-01.Flag	……唔嗯……\n这下……我{[0001|1b00]}{color[0400]}关闭{color[ffff]}{[0001|ffff]}的时候……
03.32-02.AndR	我就能收到信号。
03.32-03.Flag	……哈欠……\n……我{[0001|1b00]}{color[0400]}开启{color[ffff]}{[0001|ffff]}的时候……
03.32-04.AndR	我就收不到信号！
03.33.AndR	没问题没问题，这样一来两个\n输入端口的条件就设置好了。
03.35.FlagR	当两个条件都达成时……\n记得给我发信号……\n哈欠……
03.36.Alice	这样，我们就完成了\n{[0001|1b00]}{color[0400]}仅在键比键先被按下时{color[ffff]}{[0001|ffff]}\n才给出反应的程序。
03.37.Alice	去游戏画面确认一下吧。
04.00.Alice	那么我们开始确认。\n想恢复初始状态时按“重来”即可。
04.01.Alice	首先尝试在初始状态下\n按下{[0001|1b00]}{color[0400]}键{color[ffff]}{[0001|ffff]}。
04.01.Alice_00	请按下重来键重来游戏，\n然后仅按下{[0001|1b00]}{color[0400]}键{color[ffff]}{[0001|ffff]}。
04.02.Alice	我们听到了拉炮的响声，\n并且看到蓝箱子上的数字变为1。
04.03.Alice	目前为止，\n都和先前一样。
04.04.Alice	在蓝箱子上的数字为1的前提下，\n我们再尝试按下{[0001|1b00]}{color[0400]}键{color[ffff]}{[0001|ffff]}。
04.05.Alice	……
04.06.Alice	什么都没有发生对吧。
04.07.Alice	{[0001|1b00]}{color[0400]}因为键先被按下{color[ffff]}{[0001|ffff]}，\n所以再按键也不会发生任何反应。
04.08.Alice	换句话说，键……\n也就是红队{[0001|1b00]}{color[0400]}被判定为输家{color[ffff]}{[0001|ffff]}。
04.09.Alice	请按下“{[0001|1b00]}{color[0400]}重来{color[ffff]}{[0001|ffff]}”。
04.10.Alice	接下来尝试在初始状态下\n先按{[0001|1b00]}{color[0400]}键{color[ffff]}{[0001|ffff]}。
04.10.Alice_00	请按下重来键重来游戏，\n然后仅按下{[0001|1b00]}{color[0400]}键{color[ffff]}{[0001|ffff]}。
04.11.Alice	我们看到了损伤特效，\n并且红箱子上的数字变为1。
04.12.Alice	{[0001|1b00]}{color[0400]}因为这次先被按下的是键而非键{color[ffff]}{[0001|ffff]}……{[0001|1b00]}{color[0400]}\n{color[ffff]}{[0001|ffff]}所以红队被判定为赢家。
04.13.Alice	充分确认过后，\n请返回程序画面。
05.00.FlagL	唔嗯……\n怎么样？
05.01.FlagL	根据我是否处于开启状态……哈欠……\n或者说根据键有没有被按下过……
05.02.ButtonR	按下键时\n会发生不同的反应！
05.03.NumberR	的确，这样当左方蓝队胜利后，\n我们右方红队就不可能赢了呢……
05.04.EffectR	那我们队岂不是\n单方面很吃亏？
05.05.Alice	说得没错。
05.06.Alice	那么接下来，\n我们就开始给\n左方蓝队编程吧。
05.07.Alice	请选中左方{[0001|1b00]}{[0001|ffff]}按键小节点\n身上连着的线……
05.08.Alice	我们暂且拿掉这条线。
05.11.Alice	然后像刚才那样，\n把AND小节点和NOT小节点叫出来。
05.12.AndL	你好，我是AND小节点。\n左方蓝队的{[0001|1b00]}{color[0400]}胜负判定\n{color[ffff]}{[0001|ffff]}就交给我吧。
05.13.NotL	嘿嘿嘿！\n我是第2个NOT小节点\n……才怪～
05.14.Alice	然后同样按照右方红队的方式\n把线连起来。
05.15.Alice	不过，从右方旗标小节点的输出端口……
05.16.Alice	连接到第2个NOT小节点\n输入端口的那条线……
05.17.Alice	一旦连接起来，\n会让程序画面显得有点凌乱……
05.18.Alice	所以最后就留给{[0201]}\n自己来小心地连接看看吧。
05.19.Alice	如此这般，\n{[0001|1b00]}{color[0400]}判定胜负程序就完成了{color[ffff]}{[0001|ffff]}。
05.20.Alice	快去游戏画面确认一下吧。
06.01.Alice	想恢复初始状态时，\n按“重来”即可。
06.02.Alice	那么首先尝试在初始状态下\n按下{[0001|1b00]}{color[0400]}键{color[ffff]}{[0001|ffff]}。
06.02.Alice_00	请按下重来键重来游戏，\n然后仅按下{[0001|1b00]}{color[0400]}键{color[ffff]}{[0001|ffff]}。
06.03.Alice	我们听到了拉炮的响声，\n并且看到蓝箱子上的数字变为1。
06.04.Alice	然后尝试按下{[0001|1b00]}{color[0400]}键{color[ffff]}{[0001|ffff]}。
06.05.Alice	什么都没有发生对吧。
06.06.Alice	{[0001|1b00]}{color[0400]}因为先被按下的是键{color[ffff]}{[0001|ffff]}，\n所以蓝队是赢家，红队是输家……
06.07.Alice	请按下“{[0001|1b00]}{color[0400]}重来{color[ffff]}{[0001|ffff]}”。
06.08.Alice	接下来尝试在初始状态下\n先按{[0001|1b00]}{color[0400]}键{color[ffff]}{[0001|ffff]}。
06.08.Alice_00	请按下重来键重来游戏，\n然后仅按下{[0001|1b00]}{color[0400]}键{color[ffff]}{[0001|ffff]}。
06.09.Alice	我们看到了损伤特效，\n并且红箱子上的数字变为1。
06.10.Alice	然后尝试按下{[0001|1b00]}{color[0400]}键{color[ffff]}{[0001|ffff]}。
06.11.Alice	看，什么都没有发生对吧。
06.12.Alice	这次{[0001|1b00]}{color[0400]}因为先被按下的是键{color[ffff]}{[0001|ffff]}，\n所以红队是赢家，蓝队是输家……
06.13.Alice	你可以反复按“重来”，\n自由尝试以不同的{[0001|1b00]}{color[0400]}顺序{color[ffff]}{[0001|ffff]}\n按下{[0001|1b00]}{color[0400]}键{color[ffff]}{[0001|ffff]}和{[0001|1b00]}{color[0400]}键{color[ffff]}{[0001|ffff]}。
06.14.Alice	充分确认过后，\n请返回程序画面。
07.00.FlagR	……呼噜。\n感觉怎么样？
07.01.ButtonL	终于要迎来\n一决胜负的时刻了！
07.02.NumberL	虽然有点复杂，\n但是只要掌握了这个程序，\n以后你就无所畏惧了哦！
07.03.Alice	这次学习的判定胜负程序的关键点\n首先是{color[0400]}{[0001|1b00]}需要2个旗标小节点{[0001|ffff]}{color[ffff]}。
07.04.Alice	2个旗标小节点的初始状态都为{color[0400]}{[0001|1b00]}关闭{[0001|ffff]}{color[ffff]}……
07.05.FlagL	左方蓝队获胜时，\n{color[0400]}{[0001|1b00]}只有我{[0001|ffff]}{color[ffff]}变为{color[0400]}{[0001|1b00]}开启{[0001|ffff]}{color[ffff]}状态……哈欠。
07.06.FlagR	右方红队获胜时，\n{color[0400]}{[0001|1b00]}只有我{[0001|ffff]}{color[ffff]}变为{color[0400]}{[0001|1b00]}开启{[0001|ffff]}{color[ffff]}状态……哈欠。
07.07.AndL	而最终实际判定\n比赛结果的……
07.08.AndR	是我们AND小节点。
07.09.NumberL	根据AND小节点的判定，\n当{color[0400]}{[0001|1b00]}某一方{[0001|ffff]}{color[ffff]}的旗标小节点\n变为{color[0400]}{[0001|1b00]}开启{[0001|ffff]}{color[ffff]}状态后……
07.10.NumberR	另一方的旗标小节点\n就{color[0400]}{[0001|1b00]}不会开启{[0001|ffff]}{color[ffff]}了。
07.10-01.Alice	不同的小节点们各司其职、齐心协力，\n才最终完成了这个判定胜负程序。
07.11.EffectL	虽然我们特效小节点\n并不直接参与胜负的判定……
07.12.EffectR	但是多亏有我们的倾情演绎，\n你才能直观地看清谁是赢家，\n不是吗？
07.13.EffectL	所以我们被誉为——\n无名狗熊！
07.14.EffectR	无名狗熊是什么啦！\n无名狗熊怎么听都不像\n能靠谱地完成幕后工作的样子！
07.15.NotR	嘿嘿嘿！\n特效小节点总是很幽默呢～
07.16.EffectL	哇哦～！\n不知为什么，\n唯独NOT小节点每次都会笑耶～
07.18.Alice	……那这次就到这里吧。
Guidebook_MoveFancyRigid.msbt
000	……你好。
001	……我们看到了一条{[0001|1b00]}{color[0400]}鲔鱼{color[ffff]}{[0001|ffff]}。
002	请尝试左右推动{[0001|1b00]}{color[0400]}摇杆{color[ffff]}{[0001|ffff]}。
003	看到了吗？鲔鱼动起来了。
004	这条鲔鱼是{color[0400]}{[0001|1b00]}时尚物体{[0001|ffff]}{color[ffff]}，\n一般来说是{color[0400]}{[0001|1b00]}不能操作{[0001|ffff]}{color[ffff]}的……
005	{color[0400]}{[0001|1b00]}如何让时尚物体动起来{[0001|ffff]}{color[ffff]}，\n就是这次要讲解的主题。
006	那么，\n请前往程序画面。
097	哎呀～\n{[0201]}，\n欢迎光临♥
007	{[0201]}，\n今天我要让你见识一下时尚的最前沿！
008	当今最潮的时尚元素是……鲔鱼！
009	鲔鱼代表着生命的跃动，\n不动起来怎么行……
010	所以我忍不住让鲔鱼动起来了哟♥
012	让鲔鱼动起来是有秘诀的，\n那就是……
013	把我{color[0400]}{[0001|1b00]}和移动物体小节点\n连接在一起{[0001|ffff]}{color[ffff]}哟♥
014	没错！\n你好！！\n我就是{[0001|1b00]}{color[0400]}移动物体小节点{color[ffff]}{[0001|ffff]}！！！
015	{[0201]}！\n平时会不会腰酸背痛腿抽筋～？\n每天坚持适量运动很重要哦！
016	言归正传！\n我能接收{[0001|1b00]}{color[0400]}摇杆小节点{color[ffff]}{[0001|ffff]}\n输入的信号！
017	转呀转——\n我会传递{[0001|1b00]}{color[0400]}摇杆左右{color[ffff]}{[0001|ffff]}移动的信号哦——
018	接收{[0001|1b00]}{color[0400]}摇杆小节点{color[ffff]}{[0001|ffff]}输入给我的信号后，\n我会让物体发生相应的左右移动！
018-01	因为我{color[0400]}{[0001|1b00]}状态{[0001|ffff]}{color[ffff]}中的“{color[0400]}{[0001|1b00]}能看见{[0001|ffff]}{color[ffff]}”是{color[0400]}{[0001|1b00]}关闭{[0001|ffff]}{color[ffff]}的……\n所以你在游戏画面中看不见\n有物体在移动……
018-02	但我真的\n在活力十足地左右移动哦～！
020	因为我{[0001|1b00]}{color[0400]}连接{color[ffff]}{[0001|ffff]}着\n这样活泼的移动物体小节点……
021	所以鲔鱼也就{color[0400]}{[0001|1b00]}和移动物体小节点粘在一起{[0001|ffff]}{color[ffff]}，\n同步移动起来啦♥
022	没错！\n大家跟我一起做运动，\n锻炼身体是重中之重！！
023	那么为了让{[0201]}\n能看见物体移动的样子……
024	请把我{[0001|1b00]}{color[0400]}状态{color[ffff]}{[0001|ffff]}中的“{color[0400]}{[0001|1b00]}能看见{[0001|ffff]}{color[ffff]}”\n切换到{color[0400]}{[0001|1b00]}开启{[0001|ffff]}{color[ffff]}状态！
025	那么，请打开移动物体小节点的\n设置画面。
026	把{[0001|1b00]}{color[0400]}状态{color[ffff]}{[0001|ffff]}中的“{[0001|1b00]}{color[0400]}能看见{color[ffff]}{[0001|ffff]}”设为{[0001|1b00]}{color[0400]}开启{color[ffff]}{[0001|ffff]}。
027	然后关闭设置画面。
028	去游戏画面确认一下吧。
029	我们可以看到\n和{[0001|1b00]}{color[0400]}鲔鱼{color[ffff]}{[0001|ffff]}发生重叠的{[0001|1b00]}{color[0400]}立方体{color[ffff]}{[0001|ffff]}。
030	这个立方体就是{[0001|1b00]}{color[0400]}移动物体{color[ffff]}{[0001|ffff]}。
031	左右推动{[0001|1b00]}{color[0400]}摇杆{color[ffff]}{[0001|ffff]}看看。
032	立方体和鲔鱼{[0001|1b00]}{color[0400]}在同步移动{color[ffff]}{[0001|ffff]}。
033	通过操作{[0001|1b00]}{color[0400]}摇杆{color[ffff]}{[0001|ffff]}实际控制的是\n{[0001|1b00]}{color[0400]}移动物体{color[ffff]}{[0001|ffff]}。
034	而{[0001|1b00]}{color[0400]}鲔鱼{color[ffff]}{[0001|ffff]}因为跟{color[0400]}{[0001|1b00]}移动物体{[0001|ffff]}{color[ffff]}粘在一起，\n所以也同步发生了移动。
035	也就是说，\n其实你在直接控制的并不是鲔鱼。
036	请前往程序画面。
037	你看到我和{[0001|1b00]}{color[0400]}移动物体\n{color[ffff]}{[0001|ffff]}同步移动的样子了吗？
038	鲔鱼和移动物体依偎在一起，\n你进我也进，你退我便退……\n这就是爱的力量啊！好感动！
039	♥高端！大气！上档次！♥
040	无论哪个{[0001|1b00]}{color[0400]}时尚物体{color[ffff]}{[0001|ffff]}，\n只要跟{color[0400]}{[0001|1b00]}移动物体小节点{[0001|ffff]}{color[ffff]}一结合，\n就可以动起来啦！
041	那么，让我们换下一套服装吧♥
042	会变成什么样子呢……\n稍后亲自去游戏画面确认吧♥
043	对了，我还请来了\n{[0001|1b00]}{color[0400]}上下摇杆小节点{color[ffff]}{[0001|ffff]}！
044	转呀转——\n我会传递{color[0400]}{[0001|1b00]}摇杆上下{[0001|ffff]}{color[ffff]}移动的信号哦——
045	学会了左右移动，\n这次我们来尝试{[0001|1b00]}{color[0400]}前后{color[ffff]}{[0001|ffff]}移动！
046	那么{[0201]}，\n请把我们{[0001|1b00]}{color[0400]}连接{color[ffff]}{[0001|ffff]}起来，\n让我们能够同步移动吧♥
047	把{[0001|1b00]}{color[0400]}时尚物体小节点{color[ffff]}{[0001|ffff]}\n与{[0001|1b00]}{color[0400]}移动物体小节点{color[ffff]}{[0001|ffff]}连接。
048	没错！！\n是时候运动起来了！！！
049	去游戏画面确认一下吧。
100	……{color[0400]}{[0001|1b00]}相扑选手{[0001|ffff]}{color[ffff]}出现了。
050	请尝试{[0001|1b00]}{color[0400]}上下{color[ffff]}{[0001|ffff]}推动{[0001|1b00]}{color[0400]}摇杆{color[ffff]}{[0001|ffff]}。
051	可以看到{[0001|1b00]}{color[0400]}相扑选手{color[ffff]}{[0001|ffff]}在{[0001|1b00]}{color[0400]}前后{color[ffff]}{[0001|ffff]}移动。
052	咚……咚……
053	像这样，无论哪个{[0001|1b00]}{color[0400]}时尚物体{color[ffff]}{[0001|ffff]}，\n只要跟{color[0400]}{[0001|1b00]}移动物体小节点{[0001|ffff]}{color[ffff]}一连接，\n就可以{[0001|1b00]}{color[0400]}动起来{color[ffff]}{[0001|ffff]}。
054	请返回程序画面。
056	随着{[0001|1b00]}{color[0400]}相扑选手{color[ffff]}{[0001|ffff]}迈动的步伐……\n大横纲的气势也扑面而来！！
057	♥高端！大气！上档次！♥
058	那么接下来……\n我们还是回到最潮的{color[0400]}{[0001|1b00]}鲔鱼{[0001|ffff]}{color[ffff]}……
059	怎样才能让鲔鱼以更真实的姿态……\n优雅地游动呢……
060	有了！换装！
061	我请来了{[0001|1b00]}{color[0400]}UFO小节点{color[ffff]}{[0001|ffff]}！
062	你好呀～\n飘来飘去～优哉游哉～
063	我身为{[0001|1b00]}鲔鱼{[0001|ffff]}时尚物体小节点，\n与{[0001|1b00]}{color[0400]}UFO小节点连接{color[ffff]}{[0001|ffff]}后……
064	想必可以立刻变身{[0001|1b00]}{color[0400]}飞天鲔鱼{color[ffff]}{[0001|ffff]}！\n冲击力满分！
065	把{[0001|1b00]}{color[0400]}时尚物体小节点{color[ffff]}{[0001|ffff]}\n与{[0001|1b00]}{color[0400]}UFO小节点连接{color[ffff]}{[0001|ffff]}。
068	鲔鱼和UFO粘在一起后\n就能同步移动了。
069	去游戏画面确认一下吧。
070	现在的确能用{[0001|1b00]}{color[0400]}摇杆{color[ffff]}{[0001|ffff]}\n移动鲔鱼……
071	但鲔鱼实在太重了，\n很难自如地控制。
073	请返回程序画面。
074	哎呀～\n{color[0400]}{[0001|1b00]}鲔鱼太重了好难控制{[0001|ffff]}{color[ffff]}～
076	教你一招～\n只要把{[0001|1b00]}鲔鱼{[0001|ffff]}{color[0400]}{[0001|1b00]}时尚物体小节点{[0001|ffff]}{color[ffff]}的“{[0001|1b00]}{color[0400]}材料{color[ffff]}{[0001|ffff]}”\n设置为“{[0001|1b00]}{color[0400]}无重力{color[ffff]}{[0001|ffff]}”～就{[0001|1b00]}{color[0400]}没有重量{color[ffff]}{[0001|ffff]}啦～
077	试试看吧。
078	选中{[0001|1b00]}{color[0400]}材料{color[ffff]}{[0001|ffff]}。
079	更改为“{[0001|1b00]}{color[0400]}无重力{color[ffff]}{[0001|ffff]}”。
081	关闭设置画面。
085	去游戏画面确认一下吧。
086	鲔鱼{color[0400]}{[0001|1b00]}浮在空中没有掉下来{[0001|ffff]}{color[ffff]}。
087	推动{[0001|1b00]}{color[0400]}摇杆{color[ffff]}{[0001|ffff]}看看。
088	……鲔鱼，\n……在天上游泳！
089	……高端！大气！\n……上档次！
090	像这样{color[0400]}{[0001|1b00]}与UFO连接{[0001|ffff]}{color[ffff]}后，\n我们就能让时尚物体\n{color[0400]}{[0001|1b00]}更自由地动起来{[0001|ffff]}{color[ffff]}。
091	尽情游个痛快后，\n请前往程序画面。
092	欢迎回来！
093	挣脱大海的束缚……\n在空中肆意徜徉……\n这条{[0001|1b00]}{color[0400]}鲔鱼{color[ffff]}{[0001|ffff]}……获得了真正的自由……！
093-01	多么让人神往……\n♥高端！大气！上档次！♥
094	{[0201]}，\n多多尝试我和{[0001|1b00]}{color[0400]}移动物体小节点\n{color[ffff]}{[0001|ffff]}或者{[0001|1b00]}{color[0400]}UFO小节点{color[ffff]}{[0001|ffff]}的各种组合♥
095	你可以尽情尝试……\n让任何你觉得来电的物体动起来哟♥
Guidebook_MoveRigid.msbt
000	……你好。
001	画面中的黄箱子……\n其实……
003	{[0001|1b00]}{color[0400]}能通过摇杆的操作来左右移动{color[ffff]}{[0001|ffff]}。\n……试试看吧。
004	如果找不到箱子了，\n按{[0001|1b00]}{color[0400]}重来键{color[ffff]}{[0001|ffff]}即可。
005	这个箱子经过编程，\n能通过摇杆的操作发生移动。
006	这次我们要讲解的就是，\n{[0001|1b00]}{color[0400]}能让物体动起来的程序{color[ffff]}{[0001|ffff]}。
007	请前往程序画面。
008	你好！\n流汗的感觉是不是特别痛快！？
009	我叫{color[0400]}{[0001|1b00]}移动物体小节点{[0001|ffff]}{color[ffff]}！
010	呀～！\n活动身体以后……\n感觉身心都舒畅了呢！
011	你好——
012	摇杆分别向{[0001|1b00]}{color[0400]}左右{color[ffff]}{[0001|ffff]}推动了多少，\n我都会如实输出哦——
013	移动物体小节点和\n一般的物体小节点不同……
014	正如其名，\n他的作用是{[0001|1b00]}{color[0400]}移动物体{color[ffff]}{[0001|ffff]}。
015	当我接收到信号时……
016	{[0001|1b00]}{color[0400]}移动的力量！！！{color[ffff]}{[0001|ffff]}
017	……就产生了！
018	我们可以看到有3个输入端口。
019	每个端口可分别产生\n不同{[0001|1b00]}{color[0400]}方向的力量{color[ffff]}{[0001|ffff]}。
020	最上面的{[0001|1b00]}{color[0400]}X{color[ffff]}{[0001|ffff]}……\n对应{[0001|1b00]}{color[0400]}左右移动的力量！{color[ffff]}{[0001|ffff]}
021	中间的{[0001|1b00]}{color[0400]}Y{color[ffff]}{[0001|ffff]}……\n对应{[0001|1b00]}{color[0400]}上下移动的力量！！{color[ffff]}{[0001|ffff]}
022	然后……最下面的{[0001|1b00]}{color[0400]}Z{color[ffff]}{[0001|ffff]}……\n对应{[0001|1b00]}{color[0400]}前后移动的力量！！！{color[ffff]}{[0001|ffff]}
023	因为现在摇杆小节点的输出\n连接在了{[0001|1b00]}X{[0001|ffff]}端口上……
024	所以能让物体左右移动。
025	虽然能左右移动已经很不错啦……！\n但既然有这么宽敞的运动场地，\n我想更无拘无束地四处奔跑！
026	{[0201]}！\n请给我的{[0001|1b00]}{color[0400]}Z{color[ffff]}{[0001|ffff]}端口也输入信号好吗！？
027	那么，\n就再叫1个摇杆小节点出来吧。
028	请多指教——
029	我能输出摇杆的\n{[0001|1b00]}{color[0400]}上下{color[ffff]}{[0001|ffff]}移动情况哦——
030	为了让物体听从摇杆的指挥\n进行{[0001|1b00]}{color[0400]}前后{color[ffff]}{[0001|ffff]}移动……
031	把{[0001|1b00]}上下{[0001|ffff]}摇杆小节点的输出\n连接到移动物体小节点的{[0001|1b00]}Z{[0001|ffff]}端口上。
032	成功了～！\n非常感谢！
033	好，那我们去游戏画面\n尝试移动物体看看吧。
034	尝试用摇杆让物体{[0001|1b00]}{color[0400]}前后{color[ffff]}{[0001|ffff]}移动。
035	如果找不到物体了，\n按{[0001|1b00]}{color[0400]}重来键{color[ffff]}{[0001|ffff]}即可。
037	依靠X方向和Z方向的力量，\n物体能够前后左右移动了。
038	现在我们先按一下“重来”……
039	这次，我们尝试{color[0400]}{[0001|1b00]}\n小幅度地{[0001|ffff]}{color[ffff]}推动摇杆。
040	小幅度地推动时，移动速度变慢了对吧。
041	看来推动摇杆的幅度和\n箱子的移动方式息息相关……
042	返回程序画面\n确认一下吧。
043	呀～！果然还是\n无拘无束地跑起来更开心啊！！
044	{[0201]}，\n不如你也来加入我的行列吧！？
045	小幅度地推动摇杆时，\n物体的移动速度也变慢了呢。
046	没错，就是这样！
047	{[0001|1b00]}{color[0400]}信号强度变弱{color[ffff]}{[0001|ffff]}的话，\n当然{[0001|1b00]}{color[0400]}移动的力量也会随之变小{color[ffff]}{[0001|ffff]}。
048	你可以通过控制推动摇杆的幅度\n来更改输出信号的强弱哦——
049	也就是说，产生多大的移动力量，\n全由你推动摇杆的幅度{[0001|1b00]}{color[0400]}决定{color[ffff]}{[0001|ffff]}。
050	没错！{[0201]}\n施加给摇杆的每一分力量，\n最终都会转换成我移动的力量！！！
051	移动物体小节点和物体小节点的\n最大区别就在于这份移动的力量。
052	话虽如此！\n本质上我和物体小节点还是同类。
053	所以和物体小节点一样，\n我的{[0001|1b00]}{color[0400]}形状{color[ffff]}{[0001|ffff]}和{[0001|1b00]}{color[0400]}状态{color[ffff]}{[0001|ffff]}也都是可以设置的！
054	那么，我们尝试把\n物体的形状更改为{[0001|1b00]}{color[0400]}球体{color[ffff]}{[0001|ffff]}……\n变成一个可以滚动的球吧。
055	请选中移动物体小节点。
056	打开设置。
057	与物体小节点相同，我们可以在这里\n设置{[0001|1b00]}{color[0400]}物体的形状{color[ffff]}{[0001|ffff]}、{color[0400]}{[0001|1b00]}状态{[0001|ffff]}{color[ffff]}和{[0001|1b00]}{color[0400]}颜色{color[ffff]}{[0001|ffff]}等。
058	把{[0001|1b00]}物体的形状{[0001|ffff]}设置为{[0001|1b00]}{color[0400]}球体{color[ffff]}{[0001|ffff]}。
059	关闭设置。
060	太棒了！\n我要滚动到天涯海角～！
061	去游戏画面确认一下吧。
062	请尝试用摇杆移动球体。
063	如果找不到物体了，\n按{[0001|1b00]}{color[0400]}重来键{color[ffff]}{[0001|ffff]}即可。
064	箱子变成了球体，\n能够四处滚动了呢。
065	请返回程序画面。
066	虽然有点晕晕的……\n但是自由滚动的感觉\n实在是太爽了！
067	{[0201]}，\n不如你也来加入我的行列吧！？
068	……你们觉不觉得移动速度有点太快了？
069	源源不断的力量，\n给了我源源不断的加速！
070	就连我！也没办法！\n让自己停下来！！
071	……看来是移动的力量\n让移动物体获得了{[0001|1b00]}{color[0400]}加速{color[ffff]}{[0001|ffff]}。
072	在设置里可以调整{[0001|1b00]}{color[0400]}移动的模式{color[ffff]}{[0001|ffff]}，\n请尝试切换一下模式吧！
073	请选中移动物体小节点。
074	进入设置画面。
075	打开{[0001|1b00]}模式{[0001|ffff]}画面。
076	存在{[0001|1b00]}{color[0400]}加速度{color[ffff]}{[0001|ffff]}和{[0001|1b00]}{color[0400]}速度{color[ffff]}{[0001|ffff]}\n2种{[0001|1b00]}模式{[0001|ffff]}。
077	当前为{color[0400]}{[0001|1b00]}加速度{[0001|ffff]}{color[ffff]}模式。
078	{color[0400]}{[0001|1b00]}加速度{[0001|ffff]}{color[ffff]}是描述物体每1秒\n{color[0400]}{[0001|1b00]}速度变快多少{[0001|ffff]}{color[ffff]}的物理量。
079	……也就是说，只要持续输入信号，\n物体的移动速度就会{color[0400]}{[0001|1b00]}越来越快{[0001|ffff]}{color[ffff]}。
080	另1个是{color[0400]}{[0001|1b00]}速度{[0001|ffff]}{color[ffff]}模式。
081	{color[0400]}{[0001|1b00]}速度{[0001|ffff]}{color[ffff]}是描述物体每1秒\n{color[0400]}{[0001|1b00]}移动多少距离{[0001|ffff]}{color[ffff]}的物理量。
082	也就是说，物体的移动{color[0400]}{[0001|1b00]}速度{[0001|ffff]}{color[ffff]}\n与接收到的数值保持一致。
083	因为当前处于{[0001|1b00]}{color[0400]}加速度模式{color[ffff]}{[0001|ffff]}……
084	所以物体在力量的作用下速度越来越快。
085	为了能调整物体的速度……\n请尝试更改为{[0001|1b00]}{color[0400]}速度模式{color[ffff]}{[0001|ffff]}。
104	同时为了防止物体滚来滚去……\n请把{[0001|1b00]}物体的形状{[0001|ffff]}恢复成{color[0400]}{[0001|1b00]}立方体{[0001|ffff]}{color[ffff]}。
086	关闭设置。
087	你帮我从加速度模式\n切换到速度模式了对吧！
088	换句话说……\n从冲刺变成了慢跑！！
089	……那么，\n我们去游戏画面确认一下\n速度模式下的移动方式吧。
090	请尝试用摇杆移动箱子。
091	如果找不到物体了，\n按{[0001|1b00]}{color[0400]}重来键{color[ffff]}{[0001|ffff]}即可。
092	……移动速度变慢了。
093	当处于速度模式时，\n{[0001|1b00]}{color[0400]}信号的数值大小即为速度的数值大小{color[ffff]}{[0001|ffff]}。
094	与加速度模式不同，\n物体的速度不会越来越快……
095	速度模式的特点\n就在于能够更轻松地控制速度。
096	请返回程序画面。
097	总之，如果想要不断加速……\n请选择加速度模式！
098	而如果想要控制速度……\n那就请选择速度模式！
099	根据希望得到的移动方式……
100	慎重选择合适的模式吧。
101	如果你不知道选哪个模式好……\n那就不管三七二十一，先动起来看看！！
102	常言道，实践出真知！\n编程的秘诀就在于大胆尝试！\n听我的，准没错！
Guidebook_Not.msbt
Guidebook_NotB.msbt
00.00.Alice	……欢迎来到战场。
00.01.Alice	{[0201]}，\n希望你能帮我停止\n这场没完没了的爆炸。
00.02.Alice	请长按{color[0400]}{[0001|1b00]}键{[0001|ffff]}{color[ffff]}。
00.03.Alice	长按键期间，\n爆炸停止了。
00.04.Alice	按下按键后发生爆炸我倒是能理解，\n按下按键后爆炸却停止了……\n这种情况有没有觉得有点不可思议？
00.05.Alice	究竟是怎么回事呢？\n我们去程序画面看看吧。
01.00.Button	请指教！\n{[0201]}！
01.02.Effect	嗨～嗨～嗨～\n{[0201]}、按键小节点，\n你们好呀～今天外面热得像火炉一样呢～
01.03.Effect	……火炉？\n…………炸炉？\n………………炸弹！？
01.04.Effect	哎呀～不小心说漏嘴了！\n没错，游戏画面中的爆炸\n就是我弄出来的特效！
01.05.Button	不管在游戏画面还是在程序画面，\n这家伙都闹腾个不停啊！
01.06.Button	话说回来，{[0201]}，\n今日有何要事！？
01.07.Button	原来如此！\n想知道那个特效停止的原理对吧！！
01.08.Button	那么，\n有请{color[0400]}{[0001|1b00]}NOT小节点{[0001|ffff]}{color[ffff]}！
01.09.Not	嘿嘿嘿！\n我是NOT小节点……才怪！
01.10.Not	你想知道的东西和我没关系，\n所以请不要来烦我！
01.11.Effect	NOT小节点真是个\n怕生的小节点呢～\n明明他就是这次的主角！
01.13.Button	没办法！\n还是由我们来介绍\nNOT小节点好了！
01.14.Button	首先，我的作用是把键的情况\n传递给NOT小节点的输入端口！
01.15.Not	我才没有什么输入端口和输出端口！\n也不会把输入信号{[0001|1b00]}{color[0400]}反转{color[ffff]}{[0001|ffff]}后再输出去！\n嘿嘿嘿！
01.17.Alice	……不行，\n这样讲解太难懂了。\nNOT小节点，请暂时保持安静。
01.18.Not	倒也不是拿你没办法，\n不过宽宏大量的我也不是不能不闭嘴。
01.19.Button	听他说话真让人头疼！
01.20.Alice	看到没，NOT小节点就是\n这样一个爱说{color[0400]}{[0001|1b00]}反{[0001|ffff]}{color[ffff]}话的小节点。
01.21.Alice	他会把输入端口接收到的信号\n变成相{color[0400]}{[0001|1b00]}反{[0001|ffff]}{color[ffff]}的信号再输出。
01.22.Button	比方说，\n当我{color[0400]}{[0001|1b00]}没在输出{[0001|ffff]}{color[ffff]}信号时……
01.23.Alice	NOT小节点{color[0400]}{[0001|1b00]}没有接收到{[0001|ffff]}{color[ffff]}信号，\n这时候，爱说反话的他\n反而{color[0400]}{[0001|1b00]}会输出{[0001|ffff]}{color[ffff]}信号。
01.24.Effect	于是我这里接收到信号后，\n就让爆炸的轰隆轰隆声响起来啦～！
01.25.Button	这就是明明{color[0400]}{[0001|1b00]}没有按下按键{[0001|ffff]}{color[ffff]}，\n还是没完没了地发生爆炸的原因！
01.27.Button	那如果按下按键，\n又会怎么样呢！？
01.28.Alice	当NOT小节点{color[0400]}{[0001|1b00]}接收到{[0001|ffff]}{color[ffff]}信号时，\n爱说反话的他\n反而{color[0400]}{[0001|1b00]}不会输出{[0001|ffff]}{color[ffff]}信号。
01.29.Effect	我这里没有信号过来，\n爆炸当然就停止啦～
01.30.Button	这就是{color[0400]}{[0001|1b00]}按下按键时{[0001|ffff]}{color[ffff]}，\n爆炸停止的原因！！
01.31.Not	倒也并非不是这么回事……才怪！
01.32.Alice	他的意思是……就是这么回事。
01.33.Alice	如果讲得再细一点……
01.33.Alice_00	NOT小节点的工作原理是\n把输入的0.00转换成1.00后输出，\n而把输入的0.00{[0001|1b00]}{color[0400]}以外{color[ffff]}{[0001|ffff]}的数值转换成0.00后输出。
01.34.Button	所以无论给他输入什么数值，\n他最后输出的必定是{color[0400]}{[0001|1b00]}0.00{[0001|ffff]}{color[ffff]}或{color[0400]}{[0001|1b00]}1.00{[0001|ffff]}{color[ffff]}！
01.35.Alice	现在掌握了NOT小节点的工作原理，\n我们再去游戏画面看看吧。
02.00.Alice	真的好吵啊……
02.01.Alice	按下{color[0400]}{[0001|1b00]}键{[0001|ffff]}{color[ffff]}让爆炸停下来。
02.02.Alice	什么时候爆炸会停止，\n已经确认清楚了吧？
02.03.Alice	那我们回到程序画面。
03.00.Not	嘿嘿嘿！\n现在你这么了解我了，\n我觉得很开心～～才怪！
03.01.Effect	又怕羞又怕生，\n真是个别扭的家伙～～
03.02.Alice	你只要记住，\nNOT小节点永远只会\n{color[0400]}{[0001|1b00]}做相反的事{[0001|ffff]}{color[ffff]}就对了。
03.03.Button	{color[0400]}{[0001|1b00]}没有{[0001|ffff]}{color[ffff]}输入的时候，就{color[0400]}{[0001|1b00]}有{[0001|ffff]}{color[ffff]}输出！\n{color[0400]}{[0001|1b00]}有{[0001|ffff]}{color[ffff]}输入的时候，就{color[0400]}{[0001|1b00]}没有{[0001|ffff]}{color[ffff]}输出！\n非常简单明了！
03.04.Alice	在编程时经常会碰到这种情况，\n希望在不是〇〇的条件下，\n得到××的结果。
03.05.Alice	这就是NOT小节点大显身手的时候，\n所以请牢牢记住他吧。
03.06.Not	不不不，我才不想被记住呢！
03.07.Effect	又在说违心话了～～\nNOT小节点真是每时每刻\n都在{color[0400]}{[0001|1b00]}发育期{[0001|ffff]}{color[ffff]}呢～
03.08.Effect	……啊说错了，应该是{color[0400]}{[0001|1b00]}叛逆期{[0001|ffff]}{color[ffff]}才对！\n什么发育期……\n难道他还能发育成大节点不成！
03.09.Not	嘿嘿嘿！\n特效小节点\n总是这么幽默！
03.10.Effect	哇哦～～！有生以来第一次搞笑成功！！\n多谢NOT小节点捧场～！
Guidebook_OnOffFlag.msbt
000	……你好。
001	现在，游戏画面中能看到\n一个{[0001|1b00]}{color[0400]}人{color[ffff]}{[0001|ffff]}和几个{[0001|1b00]}{color[0400]}淡蓝色箱子{color[ffff]}{[0001|ffff]}。
002	请尝试按下{color[0400]}{[0001|1b00]}键{[0001|ffff]}{color[ffff]}。
003	按下{color[0400]}{[0001|1b00]}键{[0001|ffff]}{color[ffff]}后，\n{color[0400]}{[0001|1b00]}人一边发出声音{[0001|ffff]}{color[ffff]}，\n{color[0400]}{[0001|1b00]}一边向前发射出球体{[0001|ffff]}{color[ffff]}。
004	并不需要一直按住{[0001|1b00]}{color[0400]}键{color[ffff]}{[0001|ffff]}。
005	然后再按下{[0001|1b00]}{color[0400]}键{color[ffff]}{[0001|ffff]}看看。 
006	……声音和发射都{[0001|1b00]}{color[0400]}停止了{color[ffff]}{[0001|ffff]}。
007	按{[0001|1b00]}{color[0400]}键开启{color[ffff]}{[0001|ffff]}发射，\n按{[0001|1b00]}{color[0400]}键关闭{color[ffff]}{[0001|ffff]}发射，\n请再试试看。
008	好，{[0001|1b00]}{color[0400]}如何切换开启与关闭{color[ffff]}{[0001|ffff]}，\n就是本次要讲解的主题。
009	那么，请前往程序画面。
010	你好呀，{[0201]}！
011	……你好。
012	我们在乖乖地……
013	排排站……
014	你好呀～～♪\n请问有何指教？
016	你是想问\n{[0001|1b00]}{color[0400]}按下按键就能开启或关闭\n声音与发射的原理{color[ffff]}{[0001|ffff]}对吧！
017	放心交给我吧♪
018	一五一十，全都唱给你听哟！
020	……那么请听，\n《开启与关闭之歌》。
021	是谁～～在开启～～\n是谁～～又在关闭～～\n是他，是他，都是他～♪
022	他有一个美丽的名字～～\n旗标～～小节点～～♪
023	呼噜……
024	……\n咦？？{[0001|1b00]}{color[0400]}旗标小节点{color[ffff]}{[0001|ffff]}？ 
025	哈欠……\n我是{[0001|1b00]}{color[0400]}旗标小节点{color[ffff]}{[0001|ffff]}……唔嗯……
026	……在我如此深情又美妙的歌声中\n还能睡得这么熟……大人物啊……
101	……没办法，\n还是由我来继续讲解吧♪
027	请注意看{[0001|1b00]}{color[0400]}旗标小节点{color[ffff]}{[0001|ffff]}的{[0001|1b00]}输入端口{[0001|ffff]}～♪
102	当{color[0400]}{[0001|1b00]}开启端口{[0001|ffff]}{color[ffff]}接收到信号时～♪
103	{[0001|1b00]}{color[0400]}旗标小节点{color[ffff]}{[0001|ffff]}就会切换为{color[0400]}{[0001|1b00]}开启{[0001|ffff]}{color[ffff]}状态～♪
104	然后{color[0400]}{[0001|1b00]}持续输出{[0001|ffff]}{color[ffff]}信号～♪
105	当{[0001|1b00]}{color[0400]}关闭端口{color[ffff]}{[0001|ffff]}接收到信号时，\n{color[0400]}{[0001|1b00]}旗标小节点{[0001|ffff]}{color[ffff]}就会切换为{color[0400]}{[0001|1b00]}关闭{[0001|ffff]}{color[ffff]}状态～♪
033	然后{color[0400]}{[0001|1b00]}不再输出信号{[0001|ffff]}{color[ffff]}～♪
033-01	……感谢你的聆听。
107	……呼噜。
033-02	……\n没错，旗标小节点拥有\n{[0001|1b00]}{color[0400]}开启{color[ffff]}{[0001|ffff]}和{[0001|1b00]}{color[0400]}关闭{color[ffff]}{[0001|ffff]}2种状态……
033-03	{[0001|1b00]}{color[0400]}开启{color[ffff]}{[0001|ffff]}时持续{color[0400]}{[0001|1b00]}输出{[0001|ffff]}{color[ffff]}信号，\n{color[0400]}{[0001|1b00]}关闭{[0001|ffff]}{color[ffff]}时{[0001|1b00]}{color[0400]}不输出{color[ffff]}{[0001|ffff]}信号。\n……就是这么回事啦♪
034	因为{[0001|1b00]}{color[0400]}{color[ffff]}{[0001|ffff]}的{[0001|1b00]}{color[0400]}按键小节点{color[ffff]}{[0001|ffff]}目前连接着\n旗标小节点的{[0001|1b00]}{color[0400]}开启端口{color[ffff]}{[0001|ffff]}……
035	所以只要按下{[0001|1b00]}{color[0400]}键{color[ffff]}{[0001|ffff]}就能\n让{[0001|1b00]}{color[0400]}旗标小节点{color[ffff]}{[0001|ffff]}切换为{[0001|1b00]}{color[0400]}开启{color[ffff]}{[0001|ffff]}状态！
036	……呼噜。\n{[0001|1b00]}{color[0400]}开启{color[ffff]}{[0001|ffff]}……我醒了……开始输出信号……\n哈欠……
037	{[0001|1b00]}{color[0400]}播放声音小节点{color[ffff]}{[0001|ffff]}……\n{[0001|1b00]}{color[0400]}发射物体小节点{color[ffff]}{[0001|ffff]}……\n准备好接收我的信号……唔嗯……
038	太棒了！来来来！！\n尽管放马过来！！！
039	信号一来～\n我就要疯狂发射球体喽～～
040	因为我现在牢牢{[0001|1b00]}{color[0400]}连接{color[ffff]}{[0001|ffff]}着\n{[0001|1b00]}{color[0400]}人小节点{color[ffff]}{[0001|ffff]}～～
041	所以你才能看到\n{[0001|1b00]}{color[0400]}人发射球体{color[ffff]}{[0001|ffff]}的壮观场面！！！
044	同样，{[0001|1b00]}{color[0400]}{color[ffff]}{[0001|ffff]}的{[0001|1b00]}{color[0400]}按键小节点{color[ffff]}{[0001|ffff]}目前连接着\n旗标小节点的{[0001|1b00]}{color[0400]}关闭端口{color[ffff]}{[0001|ffff]}，所以……
045	请指教！\n只要按下{[0001|1b00]}{color[0400]}键{color[ffff]}{[0001|ffff]}就能把\n{color[0400]}{[0001|1b00]}旗标小节点{[0001|ffff]}{color[ffff]}切换为{color[0400]}{[0001|1b00]}关闭{[0001|ffff]}{color[ffff]}状态！
045-01	……呼噜。\n{[0001|1b00]}{color[0400]}关闭{color[ffff]}{[0001|ffff]}的话……\n我就不输出信号了……
045-02	没有信号～\n就不能发射球体喽～～
047-01	……综上所述，\n通过切换{[0001|1b00]}{color[0400]}旗标小节点{color[ffff]}{[0001|ffff]}的\n{[0001|1b00]}{color[0400]}开关{color[ffff]}{[0001|ffff]}状态……
047-02	我们就能切换声音与发射的开关状态。
048	好，现在我们对旗标小节点\n有了一定的了解。
049	请再去游戏画面\n确认一下吧。
050	请按下{[0001|1b00]}{color[0400]}键{color[ffff]}{[0001|ffff]}，\n开启声音并发射球体。
051	按下{[0001|1b00]}{color[0400]}键{color[ffff]}{[0001|ffff]}后，\n{[0001|1b00]}{color[0400]}旗标小节点{color[ffff]}{[0001|ffff]}切换为{[0001|1b00]}{color[0400]}开启{color[ffff]}{[0001|ffff]}状态……
052	于是旗标小节点{color[0400]}{[0001|1b00]}输出{[0001|ffff]}{color[ffff]}信号，\n使球体发射、声音响起。
054	当按下{color[0400]}{color[ffff]}{[0001|1b00]}{color[0400]}键{color[ffff]}{[0001|ffff]}时，\n{[0001|1b00]}{color[0400]}旗标小节点{color[ffff]}{[0001|ffff]}切换为{[0001|1b00]}{color[0400]}关闭{color[ffff]}{[0001|ffff]}状态……
055	此时信号{[0001|1b00]}{color[0400]}停止输出{color[ffff]}{[0001|ffff]}，\n球体不再发射、声音也不再响起。
056	当你想把某种变化作为\n{[0001|1b00]}{color[0400]}输出或停止信号{color[ffff]}{[0001|ffff]}的开关时……
057	{[0001|1b00]}{color[0400]}旗标小节点{color[ffff]}{[0001|ffff]}会很有用。
058	请返回程序画面。
061	……哈欠。\n我的工作原理……\n你都明白了吗……？
062	你也可以用其他小节点来连接\n我的{[0001|1b00]}{color[0400]}开启端口{color[ffff]}{[0001|ffff]}……不同的小节点\n{[0001|1b00]}{color[0400]}触发开关{color[ffff]}{[0001|ffff]}的形式也会有所不同。
063	比方说，还能{[0001|1b00]}{color[0400]}在拿到苹果后{color[ffff]}{[0001|ffff]}\n{[0001|1b00]}{color[0400]}获得跳跃能力{color[ffff]}{[0001|ffff]}……呼……
064	试试看吧。
064-01	首先，我们暂且与\n物体小节点们告别。
064-02	然后，\n把{[0001|1b00]}{color[0400]}苹果{color[ffff]}{[0001|ffff]}的{[0001|1b00]}{color[0400]}时尚物体小节点{color[ffff]}{[0001|ffff]}叫出来。
064-03	吃了苹果就能跳跃……\n简直像站在……\n牛顿定律的对立面！
064-04	何等叛逆的创意……\n不愧是{[0201]}！\n高端！大气！上档次！♥
065	现在，\n请选中{[0001|1b00]}{color[0400]}旗标小节点{color[ffff]}{[0001|ffff]}……
066	复制。
067	移动到左边。
068	……呼噜。
069	然后……\n把{[0001|1b00]}{color[0400]}物体损坏时小节点{color[ffff]}{[0001|ffff]}\n叫出来。
070	哎呀哎呀！\n想知道{[0001|1b00]}{color[0400]}苹果损坏的瞬间{color[ffff]}{[0001|ffff]}吗！？
071	包在我身上！
072	苹果一旦损坏，\n我会立刻输出信号！
075	那么，请把{[0001|1b00]}{color[0400]}物体损坏时小节点{color[ffff]}{[0001|ffff]}和\n{[0001|1b00]}{color[0400]}旗标小节点{color[ffff]}{[0001|ffff]}的{color[0400]}{[0001|1b00]}开启端口{[0001|ffff]}{color[ffff]}连接起来。
076	如此一来……\n我们就完成了{[0001|1b00]}{color[0400]}苹果损坏时\n旗标小节点开启{color[ffff]}{[0001|ffff]}的程序。
078	下一个目标是，当{[0001|1b00]}{color[0400]}旗标小节点开启{color[ffff]}{[0001|ffff]}时，\n让{[0001|1b00]}{color[0400]}人获得跳跃能力{color[ffff]}{[0001|ffff]}。
079	我们需要{[0001|1b00]}{color[0400]}按键小节点{color[ffff]}{[0001|ffff]}和{[0001|1b00]}{color[0400]}AND小节点{color[ffff]}{[0001|ffff]}。
080	请指教！我是{[0001|1b00]}{color[0400]}键{color[ffff]}{[0001|ffff]}！
081	没问题没问题！\n我来检查{[0001|1b00]}{color[0400]}键的输入\n{color[ffff]}{[0001|ffff]}和{[0001|1b00]}{color[0400]}旗标小节点{color[ffff]}{[0001|ffff]}的状态。
082	那么，开始编程。
083	请先连接{[0001|1b00]}{color[0400]}旗标小节点{color[ffff]}和{color[0400]}AND小节点{color[ffff]}{[0001|ffff]}。
084	然后连接{[0001|1b00]}{color[0400]}按键小节点{color[ffff]}{[0001|ffff]}和{[0001|1b00]}{color[0400]}AND小节点{color[ffff]}{[0001|ffff]}。
085	最后……把{[0001|1b00]}{color[0400]}AND小节点{color[ffff]}{[0001|ffff]}的输出\n连接到{[0001|1b00]}{color[0400]}人小节点{color[ffff]}{[0001|ffff]}的{[0001|1b00]}{color[0400]}跳跃端口{color[ffff]}{[0001|ffff]}。
086	如此一来，当苹果损坏时……\n也就是{[0001|1b00]}{color[0400]}当人拿到苹果后{color[ffff]}{[0001|ffff]}，\n{[0001|1b00]}{color[0400]}就能用键跳跃{color[ffff]}{[0001|ffff]}了。
087	好，去游戏画面确认一下吧。
088	请先按下{[0001|1b00]}{color[0400]}键{color[ffff]}{[0001|ffff]}看看。
089a_00	……可以的话，\n希望你在{[0001|1b00]}{color[0400]}拿到苹果前{color[ffff]}{[0001|ffff]}\n按下键……
089a_01	请按下“重来”。
089a_02	好，请在{[0001|1b00]}{color[0400]}拿到苹果前按下键{color[ffff]}{[0001|ffff]}。
089a_03	……好吧，我再重复一次，\n请在{[0001|1b00]}{color[0400]}拿到苹果前按下键{color[ffff]}{[0001|ffff]}。
089a_04	请再次按下“重来”。
089	{[0001|1b00]}{color[0400]}在拿到苹果前{color[ffff]}{[0001|ffff]}，\n人{color[0400]}{[0001|1b00]}不能跳跃{[0001|ffff]}{color[ffff]}。
090	接下来去拿{[0001|1b00]}{color[0400]}苹果{color[ffff]}{[0001|ffff]}，看看会发生什么……
091	请再按下{[0001|1b00]}{color[0400]}键{color[ffff]}{[0001|ffff]}看看。
092	看，人{color[0400]}{[0001|1b00]}在拿到苹果后\n能跳跃了{[0001|ffff]}{color[ffff]}。
093	……是不是跟游戏里常见的\n拿到{[0001|1b00]}{color[0400]}道具{color[ffff]}{[0001|ffff]}的效果差不多？
094	没错，旗标小节点适合用于\n设计像这种{[0001|1b00]}{color[0400]}做出某种行为后\n即可获得某种能力{color[ffff]}{[0001|ffff]}的程序。
094-01	要认真记住哦。
095	好，我们前往程序画面。
096	欢迎回来～♪
097	{[0001|1b00]}{color[0400]}旗标小节点{color[ffff]}{[0001|ffff]}～\n切换～开启与关闭～♪
097-01	请务必铭记于心～～♪
097-02	……呼噜。
097-03	……还在睡。
098	……哈欠。\n够了……不要再发射饭团了……\n我的肚子要撑爆了……呼……
099	他做的是什么梦啊……
Guidebook_PrintDebug.msbt
00.00.Alice	……你好，{[0201]}。
00.01.Alice	我们可以看到\n游戏画面的左边停着一辆汽车，\n右边有一条红线。
00.02.Alice	我希望能在汽车开到{[0001|1b00]}{color[0400]}红线{color[ffff]}{[0001|ffff]}时\n听到{[0001|1b00]}{color[0400]}拉炮声{color[ffff]}{[0001|ffff]}……
00.03.Alice	请尝试用{[0001|1b00]}{color[0400]}键{color[ffff]}{[0001|ffff]}\n让汽车行驶到红线处。
00.04.Alice	……没错，\n汽车越过红线后{[0001|1b00]}{color[0400]}什么都没有发生{color[ffff]}{[0001|ffff]}。
00.05.Alice	也许是{color[0400]}{[0001|1b00]}程序中存在什么问题{[0001|ffff]}{color[ffff]}，\n导致拉炮无法顺利响起。
00.06.Alice	这次要讲解的主题就是{color[0400]}{[0001|1b00]}调试{[0001|ffff]}{color[ffff]}的方法，\n其作用是找出发生问题的原因。
00.07.Alice	那就快去程序画面看看吧。
01.00.Car	滴滴叭叭呜！\n我是汽车小节点！
01.01.Rigid	……你好，\n我是物体小节点，\n现在是一条红线。
01.02.Sensor	我是位置感应器小节点。\n想知道汽车小节点的位置吗？\n交给我就对了！
01.03.Effect	你好，{[0201]}。\n今天也要嗨起来哟～\n叭啦～叭叭叭！！
01.04.Effect	话说，今天来是有何贵干呀？
01.05.Effect	原来如此，\n你是想找出我不响的原因啊。
01.06.Effect	那么你要先知道，\n我在什么条件下才会发出响声。
01.07.Car	首先，当我的{color[0400]}{[0001|1b00]}加速端口{[0001|ffff]}{color[ffff]}接收到\n按键小节点传递过来的信号时，\n我就会“轰～”地{[0001|1b00]}{color[0400]}向右行驶{color[ffff]}{[0001|ffff]}！
01.08.Sensor	我连接着汽车小节点……
01.09.Sensor	所以可以分别从\nX轴、Y轴、Z轴……\n输出{[0001|1b00]}{color[0400]}汽车的当前位置{color[ffff]}{[0001|ffff]}！
01.10.Compare	嗨，{[0201]}。\n我是比较小节点！
01.11.Compare	你一定也很好奇，\n位置感应器小节点传递的数值……
01.12.Compare	和常数小节点传递的数值相比……
01.13.Compare	哪一个更{color[0400]}{[0001|1b00]}大{[0001|ffff]}{color[ffff]}吧？
01.14.Constant	我是常数小节点，\n本次负责输出4.00。
01.15.Constant	如果{[0001|1b00]}{color[0400]}位置感应器小节点输出的数值\n{color[ffff]}{[0001|ffff]}大于我输出的{[0001|1b00]}{color[0400]}4.00{color[ffff]}{[0001|ffff]}……
01.16.Constant	我就会收到信号。
01.17.Constant	4.00……\n和我在X轴的{color[0400]}{[0001|1b00]}位置{[0001|ffff]}{color[ffff]}相同。
01.19.Alice	保险起见，\n去设置画面确认一下吧。
01.20.Alice	请选中物体小节点……
01.21.Alice	打开设置画面。
01.23.Alice	没错，确实是{color[0400]}{[0001|1b00]}X：4.00m{[0001|ffff]}{color[ffff]}。
01.24.Alice	确认完毕后，\n关闭设置画面。
01.25.Effect	也就是说，\n当汽车的位置超过红色物体时，\n我就会拉响拉炮。
01.25-01.Car	但是……\n我刚才行驶到红色物体那里后，\n拉炮并没有响呀？
01.26.Alice	会出现这种情况……\n一定是程序有哪里出了{color[0400]}{[0001|1b00]}问题{[0001|ffff]}{color[ffff]}。
01.27.Alice	如果我们把{[0001|1b00]}{color[0400]}小节点输出的数值\n显示到游戏画面上{color[ffff]}{[0001|ffff]}，\n就更容易找出原因了。
01.28.Alice	所以，我们有请{[0001|1b00]}{color[0400]}带数字物体小节点\n{color[ffff]}{[0001|ffff]}来帮忙调试。
01.29.Number	你好，\n{[0201]}。
01.30.Number	{color[0400]}{[0001|1b00]}想要显示哪个小节点的数字{[0001|ffff]}{color[ffff]}，\n就把他的输出端口连接到我的输入端口。
01.31.Alice	目前已知的问题只有，\n{color[0400]}{[0001|1b00]}特效没有按照我们希望的方式响起{[0001|ffff]}{color[ffff]}。
01.32.Alice	从已知的问题出发，由近及远地\n逐一检查与问题相关的小节点\n是否输出了{[0001|1b00]}{color[0400]}我们想要的数值{color[ffff]}{[0001|ffff]}……
01.33.Alice	直至找出发生问题的原因。
01.34.Alice	那么就先从输入到\n特效小节点的数值……\n也就是{[0001|1b00]}{color[0400]}比较小节点的输出{color[ffff]}{[0001|ffff]}开始检查吧。
01.35.Alice	请把比较小节点的输出\n连接到带数字物体小节点。
01.36.Alice	很好，\n去游戏画面确认一下吧。
02.00.Alice	正中央的物体上\n显示着数值{[0001|1b00]}{color[0400]}0.00{color[ffff]}{[0001|ffff]}。
02.01.Alice	这就是\n{color[0400]}{[0001|1b00]}比较小节点输出的数值{[0001|ffff]}{color[ffff]}。
02.02.Alice	请一边观察这个数值，\n一边按下{color[0400]}{[0001|1b00]}键{[0001|ffff]}{color[ffff]}，让汽车行驶起来。
02.03.Alice	汽车明明越过了红线，\n数值却还是0.00……
02.04.Alice	如果想再确认一次，\n按“重来”即可。
02.05.Alice	数值始终为0.00……\n这意味着比较小节点\n{[0001|1b00]}{color[0400]}没有输出信号{color[ffff]}{[0001|ffff]}。
02.06.Alice	先返回程序画面吧。
03.00.Number	看到了吗？\n我显示的数值\n{color[0400]}{[0001|1b00]}一直是0.00{[0001|ffff]}{color[ffff]}。
03.01.Effect	我伸长脖子等呀等～等呀等～\n信号信号～你究竟何时来～
03.01-01.Effect	……哎呀，\n我好像没有脖子——？
03.02.Alice	没发现什么有问题的地方，\n下面我们来检查\n{color[0400]}{[0001|1b00]}输入到比较小节点的数值{[0001|ffff]}{color[ffff]}。
03.03.Constant	我的职责是输出4.00，\n守常不变地输出4.00。
03.04.Sensor	我输出的数值\n{color[0400]}{[0001|1b00]}随汽车的移动而变化{[0001|ffff]}{color[ffff]}！
03.05.Alice	常数小节点的输出\n应该是4.00不会错，\n我们去检查{color[0400]}{[0001|1b00]}位置感应器小节点{[0001|ffff]}{color[ffff]}吧。
03.06.Sensor	是要检查我的输出吗，没问题！
03.08.Alice	那么，请选中刚才这条\n检查比较小节点输出的线……
03.09.Alice	删除。
03.09-01.Alice	然后，把{[0001|1b00]}{color[0400]}位置感应器小节点{color[ffff]}{[0001|ffff]}的\n输出连接过去。
03.10.Alice	很好，去游戏画面确认一下吧。
04.00.Alice	物体显示的数值\n变成了{[0001|1b00]}{color[0400]}0.77{color[ffff]}{[0001|ffff]}。
04.00-01.Alice	这个数值就是\n位置感应器小节点输入到\n比较小节点的数值……
04.00-02.Alice	也就是说，\n比较小节点正在比较这个{[0001|1b00]}{color[0400]}0.77\n{color[ffff]}{[0001|ffff]}和常数小节点输出的{[0001|1b00]}{color[0400]}4.00{color[ffff]}{[0001|ffff]}。
04.00-03.Alice	而比较小节点要检查的是\n位置感应器小节点的数值\n{[0001|1b00]}{color[0400]}是否大于4.00{color[ffff]}{[0001|ffff]}……
04.01.Alice	因为{color[0400]}{[0001|1b00]}0.77小于4.00{[0001|ffff]}{color[ffff]}，\n所以此时此刻\n{[0001|1b00]}{color[0400]}比较小节点不会输出信号{color[ffff]}{[0001|ffff]}。
04.02.Alice	那么，请一边观察这个数值，\n一边按下{color[0400]}{[0001|1b00]}键{[0001|ffff]}{color[ffff]}，让汽车行驶起来。
04.03.Alice	即使汽车行驶起来，\n数值也还是保持0.77不变……
04.04.Alice	这样的话，无论汽车行驶多远，\n数值都不可能超过4.00。
04.05.Alice	由此，我们可以确定，\n问题出在{[0001|1b00]}{color[0400]}位置感应器小节点输出的数值{color[ffff]}{[0001|ffff]}……\n也就是和4.00比较的那个数值身上。
04.06.Alice	那么，请返回程序画面。
05.00.Number	看到了吗？\n我显示的数值\n{color[0400]}{[0001|1b00]}一直是0.77{[0001|ffff]}{color[ffff]}。
05.01.Compare	0.77就是比4.00小嘛！你说对不对？
05.03.Effect	汽车明明在行驶，\n数值却一直不变，\n这是怎么回事？
05.04.Sensor	真奇怪！\n如果汽车向右行驶，\n我{color[0400]}{[0001|1b00]}X{[0001|ffff]}{color[ffff]}端口的输出应该也会变化才对！
05.05.Number	咦……你说{color[0400]}{[0001|1b00]}X{[0001|ffff]}{color[ffff]}端口……？
05.06.Number	位置感应器小节点……\n你现在身上连着线的地方\n似乎不是{color[0400]}{[0001|1b00]}X端口{[0001|ffff]}{color[ffff]}，而是{[0001|1b00]}{color[0400]}Y端口{color[ffff]}{[0001|ffff]}啊？
05.07.Sensor	还真是这样！\n线竟然连接在我的{[0001|1b00]}{color[0400]}Y端口{color[ffff]}{[0001|ffff]}！
05.08.Sensor	能输出汽车小节点左右位置的\n应该是{[0001|1b00]}{color[0400]}X端口{color[ffff]}{[0001|ffff]}才对！
05.09.Compare	这样啊！原来我一直在比较的\n{color[0400]}{[0001|1b00]}不是{[0001|ffff]}{color[ffff]}汽车小节点的{color[0400]}{[0001|1b00]}左右位置{[0001|ffff]}{color[ffff]}，\n{color[0400]}{[0001|1b00]}而是上下位置{[0001|ffff]}{color[ffff]}啊！
05.10.Number	至此，原因已经非常清楚了。
05.10-01.Effect	那就是，\n{[0001|1b00]}{color[0400]}线连接在了{color[ffff]}{[0001|ffff]}位置感应器小节点的\n{[0001|1b00]}{color[0400]}错误的端口上{color[ffff]}{[0001|ffff]}……！
05.11.Alice	那就开始修正吧。
05.12.Alice	请选中连接在\n位置感应器小节点的{[0001|1b00]}{color[0400]}Y端口{color[ffff]}{[0001|ffff]}与\n带数字物体小节点之间的线……
05.13.Alice	删除。
05.14.Alice	连接到比较小节点的\n这条线也是一样……
05.15.Alice	删除。
05.16.Sensor	然后用新的线把我的{[0001|1b00]}{color[0400]}X端口{color[ffff]}{[0001|ffff]}和他们\n重新连接起来就可以了吧，没问题！
05.17.Alice	这样就修正完成了。
05.18.Alice	去游戏画面确认一下吧。
06.00.Alice	显示的数值变成负数了。
06.02.Alice	请用{color[0400]}{[0001|1b00]}键{[0001|ffff]}{color[ffff]}让汽车行驶起来。
06.03.Alice	数值随着汽车行驶而增加……
06.04.Alice	当数值超过4.00时，\n拉炮声响起。
06.05.Alice	请按下“{color[0400]}{[0001|1b00]}重来{[0001|ffff]}{color[ffff]}”，\n我们再试一次。
06.05-01.Alice	嗯嗯，错误被修正后，\n程序能够正常运行了。
06.06.Alice	充分确认过后，\n让我们返回程序画面。
07.00.Effect	感觉怎么样？\n我的拉炮是不是很嗨呀～\n叭啦～叭叭叭！！
07.01.Sensor	线有没有连接到正确的端口……\n一定要好好确认才行！
07.02.Number	有时候，只要找出原因，\n问题其实很容易解决，\n但寻找原因的过程却很难。
07.03.Alice	那么，用带数字物体小节点进行调试的方法……\n你都明白了吗？
07.06.Number	只要把想要检查的输出连接到我身上，\n我就可以把数值显示\n在游戏画面上给你看。
07.07.Effect	只要从和预期结果不同的地方开始\n逐个确认……
07.08.Number	就一定能找出问题所在。
07.09.Effect	总之就是不要着急，慢慢来就对了。\n俗话说得好……{[0001|1b00]}{color[0400]}欲速则不幸{color[ffff]}{[0001|ffff]}啊。
07.10.Effect	啊，应该是{[0001|1b00]}{color[0400]}欲速则不达{color[ffff]}{[0001|ffff]}才对～！\n谁要不幸啊！
07.11.Alice	……那么，今天就到这里吧。
07.12.Car	滴滴叭叭呜！\n那就下回再见啦！
Guidebook_PunchAndBreak.msbt
000	……你好。
001	我们看到画面中有一座\n五颜六色的{[0001|1b00]}{color[0400]}立方体堆成的山{color[ffff]}{[0001|ffff]}。
002	请用{[0001|1b00]}{color[0400]}摇杆{color[ffff]}{[0001|ffff]}控制人移动，\n并用{[0001|1b00]}{color[0400]}键使出拳击攻击立方体{color[ffff]}{[0001|ffff]}。
003	拳头击中立方体后，{color[0400]}{[0001|1b00]}立方体损坏{[0001|ffff]}{color[ffff]}。
106	请继续拳击剩下的立方体。
004	呼……爽……
005	{color[0400]}{[0001|1b00]}如何让人的拳头能破坏物体{[0001|ffff]}{color[ffff]}……
006	就是这次要讲解的主题。
105	那么，请前往程序画面。
007	哈！吃我一招——！看拳——！！
008	啊，是{[0201]}！\n你好！
009	听我说！听我说！\n我最近获得了新的能力哦！
010	现在的我，\n{color[0400]}{[0001|1b00]}一拳就能破坏物体{[0001|ffff]}{color[ffff]}！！
011	……没错。\n我们会被破坏掉。
012	嘿嘿！厉害吧！！
014	赋予我这项能力的是……
014-01	{[0001|1b00]}{color[0400]}按键小节点{color[ffff]}{[0001|ffff]}和\n{[0001|1b00]}{color[0400]}破坏物体小节点{color[ffff]}{[0001|ffff]}！
014-02	请指教！\n想让拳头更有力？\n那就多做俯卧撑！
014-03	呵呵……\n用拳头搞破坏……\n真野蛮呢……呵呵……
015	你看～{[0001|1b00]}{color[0400]}按键小节点{color[ffff]}{[0001|ffff]}连接着\n我的{[0001|1b00]}{color[0400]}动作端口{color[ffff]}{[0001|ffff]}……
016	请指教！\n当按下{[0001|1b00]}{color[0400]}键{color[ffff]}{[0001|ffff]}时，\n我会向{[0001|1b00]}{color[0400]}人小节点{color[ffff]}{[0001|ffff]}发送{[0001|1b00]}{color[0400]}信号{color[ffff]}{[0001|ffff]}！
017	当{[0001|1b00]}{color[0400]}信号{color[ffff]}{[0001|ffff]}到达我的{[0001|1b00]}{color[0400]}动作端口{color[ffff]}{[0001|ffff]}时，\n人就能{color[0400]}{[0001|1b00]}做出{[0001|ffff]}{color[ffff]}设置好的{color[0400]}{[0001|1b00]}动作{[0001|ffff]}{color[ffff]}！
018	当前设置的动作是{[0001|1b00]}{color[0400]}拳击{color[ffff]}{[0001|ffff]}……
019	所以当按下{[0001|1b00]}{color[0400]}键{color[ffff]}{[0001|ffff]}时，\n人会做出{[0001|1b00]}{color[0400]}拳击{color[ffff]}{[0001|ffff]}动作！
020	但如果仅此而已的话……\n人只能挥动拳头，\n{[0001|1b00]}{color[0400]}并不能破坏物体{color[ffff]}{[0001|ffff]}。
021	因此我们需要{[0001|1b00]}{color[0400]}编写破坏物体程序{color[ffff]}{[0001|ffff]}。
024	呵呵……
025	啊！\n{[0001|1b00]}{color[0400]}破坏物体小节点{color[ffff]}{[0001|ffff]}！
026	说到破坏物体，那可是我的绝活……
027	{color[0400]}{[0001|1b00]}人使出拳击时{[0001|ffff]}{color[ffff]}{[0001|1b00]}{color[0400]}破坏了物体{color[ffff]}{[0001|ffff]}，\n就是因为……
028	我能把{[0001|1b00]}{color[0400]}自己接触到的物体{color[ffff]}{[0001|ffff]}……\n……呵呵……破坏掉……
029	当我与人小节点{[0001|1b00]}{color[0400]}连接{color[ffff]}{[0001|ffff]}后……\n我就粘在了{[0001|1b00]}{color[0400]}人的前面{color[ffff]}{[0001|ffff]}……
029-01	同时……\n{color[0400]}{[0001|1b00]}按键小节点{[0001|ffff]}{color[ffff]}也连接着我，\n看到了吗？
029-02	当按键小节点把信号传递过来……\n也就是……当{[0001|1b00]}{color[0400]}键被按下时{color[ffff]}{[0001|ffff]}，\n我会把接触到的物体……破坏掉。
029-03	另外，当键被按下时……\n人还会做出{[0001|1b00]}{color[0400]}拳击{color[ffff]}{[0001|ffff]}动作……
029-04	所以我们看到，当人{[0001|1b00]}{color[0400]}做出拳击动作时{color[ffff]}{[0001|ffff]}，\n我{[0001|1b00]}{color[0400]}接触到的物体被破坏{color[ffff]}{[0001|ffff]}了！
029-05	呵呵，学得真快……\n我喜欢聪明的孩子……
041	那么，{[0201]}。\n为了让你也能看清我的工作方式……\n我们来调整一下设置吧……呵呵。
042	把我改为“{[0001|1b00]}{color[0400]}能看见{color[ffff]}{[0001|ffff]}”……呵呵。
043	请打开{[0001|1b00]}{color[0400]}破坏物体小节点{color[ffff]}{[0001|ffff]}的设置。
044	把{[0001|1b00]}{color[0400]}状态{color[ffff]}{[0001|ffff]}中的“{[0001|1b00]}{color[0400]}能看见{color[ffff]}{[0001|ffff]}”设置为{color[0400]}{[0001|1b00]}开启{[0001|ffff]}{color[ffff]}。
045	关闭设置画面。
046	这样一来我的位置……\n就可以看得一清二楚了……呵呵。
047	你可以用肉眼直观地看到\n我{color[0400]}{[0001|1b00]}破坏物体的全过程{[0001|ffff]}{color[ffff]}……\n呵呵……
053	去吧，{[0201]}，\n释放你的本能……\n尽情破坏吧……
054	尝试破坏物体吧。
055	看到了吗？人的身前\n粘着一个{[0001|1b00]}{color[0400]}立方体形状的网格{color[ffff]}{[0001|ffff]}。
056	这个网格会{color[0400]}{[0001|1b00]}破坏接触到的物体{[0001|ffff]}{color[ffff]}。
057	让{color[0400]}{[0001|1b00]}网格与立方体保持接触{[0001|ffff]}{color[ffff]}，\n然后按下{[0001|1b00]}{color[0400]}键{color[ffff]}{[0001|ffff]}。
058	可以看到立方体损坏了。
059	像这样，当人做出拳击动作时，\n就会破坏与网格接触的物体……
060	于是最终呈现出\n{[0001|1b00]}{color[0400]}用拳击破坏物体{color[ffff]}{[0001|ffff]}的效果。
061	请返回程序画面。
062	那么接下来……\n再试试看用{[0001|1b00]}{color[0400]}其他动作{color[ffff]}{[0001|ffff]}……\n来破坏物体吧……呵呵。
063	{[0001|1b00]}{color[0400]}物体小节点{color[ffff]}{[0001|ffff]}，\n可以换一种排列方式吗……
064	……遵命。
065	变换队形完成。
067	发生了怎样的变化呢，\n先去游戏画面看看吧。
068	一排立方体{color[0400]}{[0001|1b00]}浮在空中{[0001|ffff]}{color[ffff]}。
068-01	此时就算做出拳击动作也碰不到立方体。
069	这次我们来编写一个新的程序，\n让浮在空中的立方体能被\n{color[0400]}{[0001|1b00]}从下往上的拳击动作{[0001|ffff]}{color[ffff]}破坏。
071	前往程序画面。
074	首先……\n请更改按下{[0001|1b00]}{color[0400]}键{color[ffff]}{[0001|ffff]}时\n{color[0400]}{[0001|1b00]}人会做出的动作{[0001|ffff]}{color[ffff]}。
075	选择{[0001|1b00]}{color[0400]}动作{color[ffff]}{[0001|ffff]}。
076	更改为{[0001|1b00]}{color[0400]}欢呼{color[ffff]}{[0001|ffff]}。
077	关闭当前画面。
079	去确认一下新的动作吧。
080	请移动到立方体下方，\n然后按下{[0001|1b00]}{color[0400]}键{color[ffff]}{[0001|ffff]}。
081	可以看到人做出了\n{color[0400]}{[0001|1b00]}从下往上的拳击{[0001|ffff]}{color[ffff]}动作。
081-01	但是……立方体{color[0400]}{[0001|1b00]}没有损坏{[0001|ffff]}{color[ffff]}。
082	这是因为虽然拳头\n看似击中了立方体……\n但是白色网格{[0001|1b00]}{color[0400]}没有接触{color[ffff]}{[0001|ffff]}立方体。
084	请前往程序画面。
085	呵呵呵……\n{[0201]}……\n你露出了迫不及待想要破坏物体的表情……
086	那份喷薄而出的冲动……\n就由我来实现吧……呵呵……
087	是时候修改我的{[0001|1b00]}{color[0400]}连接面{color[ffff]}{[0001|ffff]}了。
088	请打开{[0001|1b00]}{color[0400]}破坏物体小节点{color[ffff]}{[0001|ffff]}的设置画面。
089	打开{[0001|1b00]}连接面{[0001|ffff]}。
090	因为立方体位于空中……所以需要\n把破坏物体小节点粘到{[0001|1b00]}{color[0400]}人的上方{color[ffff]}{[0001|ffff]}。\n请把“{[0001|1b00]}{color[0400]}连接对象的连接面{color[ffff]}{[0001|ffff]}”设置为{[0001|1b00]}{color[0400]}Y+{color[ffff]}{[0001|ffff]}。
091	关闭当前画面。
092	继续关闭。
093	去游戏画面确认一下吧。
094	现在白色网格\n粘在了{[0001|1b00]}{color[0400]}人的上方{color[ffff]}{[0001|ffff]}。
095	请站到立方体下方按下{[0001|1b00]}{color[0400]}键{color[ffff]}{[0001|ffff]}。
096	立方体损坏了。
097	因为现在破坏物体小节点\n{color[0400]}{[0001|1b00]}能够接触到{[0001|ffff]}{color[ffff]}立方体，\n所以我们就又能进行{color[0400]}{[0001|1b00]}破坏{[0001|ffff]}{color[ffff]}啦。
098	综上所述，当需要\n{color[0400]}{[0001|1b00]}让人用不同动作破坏物体{[0001|ffff]}{color[ffff]}时……
099	给破坏物体小节点\n{color[0400]}{[0001|1b00]}选择合适的连接面{[0001|ffff]}{color[ffff]}就显得至关重要。
100	确认完成后请前往程序画面。
101	欢迎回来！
102	呵呵呵……{[0201]}…… \n希望你能将我与人的各种动作灵活组合……
104	创造出更多、更新奇的破坏方式……\n……我看好你哦……呵呵。
Guidebook_RotateRigid.msbt
00.00.Alice	……你好，\n{[0201]}。
00.01.Alice	我们看到游戏画面中\n漂浮着一个立方体。
00.02.Alice	请尝试{color[0400]}{[0001|1b00]}上下推动摇杆{[0001|ffff]}{color[ffff]}\n看看会发生什么。
00.03.Alice	立方体前后旋转了起来。
00.04.Alice	这个立方体是{color[0400]}{[0001|1b00]}旋转物体{[0001|ffff]}{color[ffff]}。
00.05.Alice	也就是我们这次要讲解的主题。
00.06.Alice	那么，请前往程序画面。
01.00.Rotate	翩翩～起舞～♪\n旋转是我的招牌动作。
01.01.Rotate	我的名字是{color[0400]}{[0001|1b00]}旋转物体小节点{[0001|ffff]}{color[ffff]}。\n今后请多关照♪
01.02.Stick	转呀转——\n我负责把摇杆输入的信号\n传递给旋转物体小节点——
01.03.Rotate	想和舞伴跳出轻盈的舞步吗？\n你需要{[0001|1b00]}{color[0400]}无重力{color[ffff]}的材料{[0001|ffff]}～
01.04.Rotate	摆脱重力束缚，随心旋转舞动，\n何等美妙的享受！\n那么，我能和你跳支舞吗♪
01.05.Stick	转呀转——\n话说回来，{[0201]}，\n这次是有何贵干——？
01.06.Rotate	呵呵，\n想了解物体旋转的原理？
01.06-01.Rotate	没问题，听好了！\n华丽的教学～即将开始～♪
01.07.Stick	首先，我的作用是\n把摇杆的上下操作信号传递给\n旋转物体小节点的{color[0400]}{[0001|1b00]}X轴端口{[0001|ffff]}{color[ffff]}——
01.08.Rotate	{[0001|1b00]}{color[0400]}X轴{color[ffff]}{[0001|ffff]}就是一根\n像单杠似的{color[0400]}{[0001|1b00]}横向轴{[0001|ffff]}{color[ffff]}。
01.09.Rotate	当{[0001|1b00]}X轴端口{[0001|ffff]}接收到数值时，\n物体就能{color[0400]}{[0001|1b00]}以这根单杠为轴{[0001|ffff]}{color[ffff]}\n骨碌骨碌地旋转起来♪
01.10.Stick	就像刚才，我们上下推动摇杆时，\n物体也随之发生了{color[0400]}{[0001|1b00]}相应的前后旋转{[0001|ffff]}{color[ffff]}——
01.11.Rotate	正是如此。\n物体的{color[0400]}{[0001|1b00]}旋转方向{[0001|ffff]}{color[ffff]}和{color[0400]}{[0001|1b00]}旋转速度{[0001|ffff]}{color[ffff]}\n由输入的数值决定！
01.12.Stick	如果向上推动摇杆，\n让我输出{color[0400]}{[0001|1b00]}1.00{[0001|ffff]}{color[ffff]}——
01.13.Rotate	物体便会以{color[0400]}{[0001|1b00]}每秒1圈{[0001|ffff]}{color[ffff]}的速度\n{color[0400]}{[0001|1b00]}向前方{[0001|ffff]}{color[ffff]}滴溜溜地旋转♪
01.14.Stick	反过来，如果把摇杆向下\n推至大约一半的程度，\n让我输出{color[0400]}{[0001|1b00]}-0.50{[0001|ffff]}{color[ffff]}——
01.15.Rotate	我就会向反方向大转身！\n物体将会以{color[0400]}{[0001|1b00]}每秒0.5圈{[0001|ffff]}{color[ffff]}的速度\n慢悠悠地{color[0400]}{[0001|1b00]}向后方旋转{[0001|ffff]}{color[ffff]}♪
01.21.Stick	那么——\n如果向其他输入端口输入数值的话，\n物体又会怎样旋转呢——？
01.22.Alice	百闻不如一见，\n接下来试试{color[0400]}{[0001|1b00]}Y轴端口{[0001|ffff]}{color[ffff]}吧。
01.23.Alice	这次要连接的不是摇杆小节点，\n而是{color[0400]}{[0001|1b00]}常数小节点{[0001|ffff]}{color[ffff]}。
01.24.Stick	我先告辞啦——
01.25.Constant	我是常数小节点。\n4.00对吧，遵命。\n我会守常不变地输出4.00。
01.26.Rotate	看来我的舞伴换人了。\n那么常数小节点，\n请把手给我吧♪
01.26-01	这个常数小节点的\n输出数值为{color[0400]}{[0001|1b00]}4.00{[0001|ffff]}{color[ffff]}……
01.28.Rotate	因此！\n物体将围绕{[0001|1b00]}{color[0400]}Y轴{color[ffff]}{[0001|ffff]}以{color[0400]}{[0001|1b00]}每秒4圈的速度{[0001|ffff]}{color[ffff]}\n骨碌骨碌～不停旋转♪
01.29.Alice	究竟会怎样旋转呢，\n去确认一下吧。
02.00.Alice	立方体……转得飞快！
02.02.Alice	围绕Y轴旋转，\n就意味着会是这样的旋转方向。
02.03.Alice	那么，请返回程序画面。
03.00.Rotate	翩翩～起舞～\n优雅而迷人的Y轴高速旋转，\n小菜一碟♪
03.04.Constant	{[0001|1b00]}{color[0400]}Y轴{color[ffff]}{[0001|ffff]}就是一根\n像钢管舞中的钢管一样的{color[0400]}{[0001|1b00]}纵向轴{[0001|ffff]}{color[ffff]}。
03.05.Rotate	正是如此。物体以这根钢管为轴，\n骨碌骨碌地转了个痛快♪
03.08.Constant	那么，\n最后的{color[0400]}{[0001|1b00]}Z轴端口{[0001|ffff]}{color[ffff]}又会\n带来怎样的旋转呢？
03.09.Rotate	{[0001|1b00]}{color[0400]}Z轴{color[ffff]}{[0001|ffff]}是一根{color[0400]}{[0001|1b00]}纵深方向的轴{[0001|ffff]}{color[ffff]}，\n物体会像表针一样旋转。
03.10.Alice	我们来实际看看\nZ轴旋转吧。
03.11.Alice	这次我们来连接\n{color[0400]}{[0001|1b00]}按键小节点{[0001|ffff]}{color[ffff]}。
03.12.Constant	偶尔跳跳舞还挺开心的。\n那就下回再见了，拜拜。
03.13.Button	请指教！\n键的情况，尽在我的掌握！
03.14.Button	想测试旋转物体小节点的\nZ轴旋转！？\n没问题，交给我！
03.19.Alice	好了，快去看看\n实际的旋转情况吧。
04.00.Alice	请按下{color[0400]}{[0001|1b00]}键{[0001|ffff]}{color[ffff]}。
04.01.Alice	开始{color[0400]}{[0001|1b00]}逆时针{[0001|ffff]}{color[ffff]}旋转。
04.02.Alice	明白旋转方式后，\n请前往程序画面。
05.01.Rotate	感觉如何？
05.02.Rotate	当{[0001|1b00]}Z轴端口{[0001|ffff]}\n{color[0400]}{[0001|1b00]}接收到正数信号时{[0001|ffff]}{color[ffff]}，\n物体会{color[0400]}{[0001|1b00]}逆时针旋转{[0001|ffff]}{color[ffff]}。
05.03.Button	咦，是这样的吗！？\n我还以为因为按下的是键，\n所以才向左旋转呢！
05.04.Rotate	嚯嚯嚯～♪\n很可惜，你猜错了哟。
05.06.Rotate	作为热爱舞蹈之人，\n自然要遵守舞蹈的{color[0400]}{[0001|1b00]}旋转规则{[0001|ffff]}{color[ffff]}。
05.07.Alice	当X轴为中心轴时，\n{color[0400]}{[0001|1b00]}从X-看向X+{[0001|ffff]}{color[ffff]}，\n物体呈{color[0400]}{[0001|1b00]}逆时针方向{[0001|ffff]}{color[ffff]}旋转……
05.07-01.Alice	当Y轴为中心轴时，\n{color[0400]}{[0001|1b00]}从Y-看向Y+{[0001|ffff]}{color[ffff]}，\n物体呈{color[0400]}{[0001|1b00]}逆时针方向{[0001|ffff]}{color[ffff]}旋转。
05.08.Rotate	即便向多个输入端口\n{color[0400]}{[0001|1b00]}同时输入数值{[0001|ffff]}{color[ffff]}，\n也同样遵循这个规则。
05.09.Button	等下！\n还可以同时围绕不同轴旋转的吗！？
05.10.Rotate	嚯嚯嚯，那是当然。
05.11.Alice	那么，我们去实际看看\n多轴同时旋转的样子吧。
05.12.Alice	再次有请最开始的\n摇杆小节点登场……
05.13.Stick	你好——\n{[0201]}，\n又见面了呢——
05.14.Rotate	能再次见到摇杆小节点，\n我很荣幸。
05.15.Rotate	这次我们将挑战\n更复杂的旋转技巧，\n请跟上我的舞步♪
05.16.Stick	转呀转——\n那就拜托你啦——
05.17.Alice	现在又会怎样旋转呢，\n去游戏画面确认一下吧。
06.00.Alice	请尝试在{color[0400]}{[0001|1b00]}上下推动摇杆\n{[0001|ffff]}{color[ffff]}让物体绕X轴旋转的同时，\n按下{color[0400]}{[0001|1b00]}键{[0001|ffff]}{color[ffff]}让物体绕Z轴逆时针旋转。
06.02.Alice	看，当同时围绕多根轴旋转时，\n旋转的动作就会变得如此复杂。
06.03.Alice	顺带一提，\n如果想恢复到初始的直立状态，\n按“重来”即可。
06.04.Alice	充分确认过后，\n让我们返回程序画面。
07.00.Rotate	完～～美～～！\n你一定被我华丽的无重力之舞\n迷倒了吧？
07.01.Button	我完全不知道\n那个物体是怎么转的，\n简直一头雾水！
07.02.Stick	好复杂——
07.03.Rotate	像刚才那种精妙绝伦的高难度\n旋转技巧，倒也没必要去理解\n其中的具体原理。
07.04.Rotate	用心去感受……\n这才是欣赏舞蹈的方式！
07.06.Alice	总而言之，{color[0400]}{[0001|1b00]}旋转物体小节点{[0001|ffff]}{color[ffff]}的能力\n如他的名字所示，可以让旋转物体\n出现在游戏画面中。
07.15.Rotate	当你需要优雅的舞伴时～\n请务必记得找我。\n无论何时，随叫随到♪
07.16.Button	那就下回再见了！
Guidebook_Scroll.msbt
000	……你好，\n{[0201]}。
001	画面边缘……\n似乎有什么东西若隐若现。
002	那是……{color[0400]}{[0001|1b00]}人{[0001|ffff]}{color[ffff]}吗？
003	这次我们要学习如何把\n{color[0400]}{[0001|1b00]}画面边缘的人显示到画面正中央{[0001|ffff]}{color[ffff]}。
004	那么，请打开程序画面。
005	哦！\n这不是{[0201]}嘛～～
006	{[0201]}！\n你好！
008	刚才在游戏画面中，\n是不是只能看到人的一部分～～～？
009	不行不行～～！\n既然要拍摄，就要完美显示拍摄对象，\n舞台中央才是演员的归宿～～！
009-01	所以！我准备{color[0400]}{[0001|1b00]}让游戏画面的\n显示范围偏移一下{[0001|ffff]}{color[ffff]}～～～
009-02	告诉你个秘密！！其实……\n就算{color[0400]}{[0001|1b00]}不改变游戏画面小节点的位置{[0001|ffff]}{color[ffff]}，\n也有办法让显示范围偏移哦！
009-03	请放大我的{color[0400]}{[0001|1b00]}X端口{[0001|ffff]}{color[ffff]}！！
010	当我的{color[0400]}{[0001|1b00]}X端口{[0001|ffff]}{color[ffff]}接收到数值～\n{color[0400]}{[0001|1b00]}游戏画面会根据这个数值的大小\n朝X方向偏移相应的距离{[0001|ffff]}{color[ffff]}！
011	那么～～\n有请{color[0400]}{[0001|1b00]}常数小节点{[0001|ffff]}{color[ffff]}登场～！
012	到！\n是要让游戏画面偏移吧，\n我这就来帮忙！
012-01	我能输出{color[0400]}{[0001|1b00]}5.00{[0001|ffff]}{color[ffff]}，\n正正好好{color[0400]}{[0001|1b00]}5.00{[0001|ffff]}{color[ffff]}。
013	{[0201]}！\n请把{[0001|1b00]}{color[0400]}常数小节点{color[ffff]}{[0001|ffff]}连接到我的{color[0400]}{[0001|1b00]}X端口{[0001|ffff]}{color[ffff]}～～！
014	把常数小节点连接到\n游戏画面小节点的{color[0400]}{[0001|1b00]}X端口{[0001|ffff]}{color[ffff]}。
015	干得漂亮～！！\n这样一来，显示范围就\n{color[0400]}{[0001|1b00]}朝X方向偏移了5.00m{[0001|ffff]}{color[ffff]}～～！
017	现在，人一定完美地\n在舞台中央亮相了！！！
018	去游戏画面看看吧。
019	没错，人显示在{color[0400]}{[0001|1b00]}画面正中央{[0001|ffff]}{color[ffff]}。
020	这就是把游戏画面{color[0400]}{[0001|1b00]}朝X方向\n偏移5.00m{[0001|ffff]}{color[ffff]}后的结果。
02100	话说……\n右边好像又冒出来个东西……
022	……幼鸟？
023	返回程序画面确认一下吧。
024	哎呀♥\n你发现了？
025	游戏画面偏移后，\n把幼鸟给显示出来了♥
026	时尚物体小节点登场！\n感觉画面瞬间华丽了起来～！
027	有了！\n下一位主角就决定是你了！
028	我要用最高级的拍摄手法\n{color[0400]}{[0001|1b00]}让幼鸟站到舞台中央{[0001|ffff]}{color[ffff]}～～！
029	那么～\n{color[0400]}{[0001|1b00]}摇杆小节点{[0001|ffff]}{color[ffff]}～\n我需要你的力量～！
030	转呀转——
031	把{color[0400]}{[0001|1b00]}摇杆小节点\n{[0001|ffff]}{color[ffff]}连接到我的{color[0400]}{[0001|1b00]}X端口{[0001|ffff]}{color[ffff]}后……
032	就能随着摇杆的操作{color[0400]}{[0001|1b00]}\n移动画面{[0001|ffff]}{color[ffff]}～！
033	请连接摇杆小节点。
034	去游戏画面看看吧。
035	请向右推动{color[0400]}{[0001|1b00]}摇杆{[0001|ffff]}{color[ffff]}。
036	画面随着摇杆的操作\n向右移动。
037	但是……\n只动了一点点……
038	这样还是看不清幼鸟。
039	请返回程序画面。
039-01	嗯嗯～～～\n好像稍微出了那么一点点……\n小问题～～
040	因为就算把摇杆向右推到底，\n摇杆小节点{color[0400]}{[0001|1b00]}最多也只能输出1.00{[0001|ffff]}{color[ffff]}～～
041	所以画面最多也只能\n移动1.00m～～
042	为了处理这种情况……\n我们需要新的帮手，\n有请嘉宾{color[0400]}{[0001|1b00]}映射小节点{[0001|ffff]}{color[ffff]}～～！
043	哎呀……\n听说有人找我～？
044	我的名字是{color[0400]}{[0001|1b00]}映射小节点{[0001|ffff]}{color[ffff]}～
045	……哎呀哎呀哎呀？？
046	摇杆小节点和游戏画面小节点\n在深情对视……
047	他们究竟有什么不可告人的关系～～！？\n我都要脸红了——！
048	……咦？\n没有任何关系？\n真没意思……
050	映射小节点的作用是\n{color[0400]}{[0001|1b00]}将输入进来的数值\n转换成其他数值{[0001|ffff]}{color[ffff]}！
052	请看映射小节点的设置。
053	映射小节点拥有\n{color[0400]}{[0001|1b00]}输入范围{[0001|ffff]}{color[ffff]}和{[0001|1b00]}{color[0400]}输出范围{color[ffff]}{[0001|ffff]}\n2项设置。
054	{[0001|1b00]}输入范围{[0001|ffff]}为\n{color[0400]}{[0001|1b00]}0.00到1.00{[0001|ffff]}{color[ffff]}。
055	{[0001|1b00]}输出范围{[0001|ffff]}为\n{color[0400]}{[0001|1b00]}0.00到10.00{[0001|ffff]}{color[ffff]}。
056	简单来说……\n就是将输入进来的{[0001|1b00]}{color[0400]}0.00～1.00\n转换成0.00～10.00{color[ffff]}{[0001|ffff]}。
057	举个例子……\n当输入为{color[0400]}{[0001|1b00]}1.00{[0001|ffff]}{color[ffff]}时，输出即为{color[0400]}{[0001|1b00]}10.00{[0001|ffff]}{color[ffff]}。
058	输入为{color[0400]}{[0001|1b00]}0.50{[0001|ffff]}{color[ffff]}时，输出即为{color[0400]}{[0001|1b00]}5.00{[0001|ffff]}{color[ffff]}。
059	输入为{color[0400]}{[0001|1b00]}0.00{[0001|ffff]}{color[ffff]}时，输出也为{color[0400]}{[0001|1b00]}0.00{[0001|ffff]}{color[ffff]}。
060	……就像这样，\n以{[0001|1b00]}输入范围{[0001|ffff]}和{[0001|1b00]}输出范围{[0001|ffff]}为基准，\n{color[0400]}{[0001|1b00]}将输入的数值转换后输出{[0001|ffff]}{color[ffff]}。
06100	关闭当前画面。
062	请选中连接在摇杆小节点\n和游戏画面小节点之间的线。
063	删除。
064	然后把{color[0400]}{[0001|1b00]}摇杆小节点{[0001|ffff]}{color[ffff]}\n连接到{color[0400]}{[0001|1b00]}映射小节点{[0001|ffff]}{color[ffff]}。
065	再把{color[0400]}{[0001|1b00]}映射小节点{[0001|ffff]}{color[ffff]}的输出连接到\n{color[0400]}{[0001|1b00]}游戏画面小节点的X端口{[0001|ffff]}{color[ffff]}。
066	如此一来，映射小节点就能接收\n{color[0400]}{[0001|1b00]}摇杆小节点输出的\n0.00到1.00之间的数值{[0001|ffff]}{color[ffff]}……
067	然后{color[0400]}{[0001|1b00]}转换成0.00到10.00之间的数值{[0001|ffff]}{color[ffff]}，\n接着输出给游戏画面小节点。
068	移动情况发生了什么变化呢？\n去游戏画面确认一下吧。
069	请向右推动{color[0400]}{[0001|1b00]}摇杆{[0001|ffff]}{color[ffff]}。
070	{color[0400]}{[0001|1b00]}移动幅度比刚才大了很多{[0001|ffff]}{color[ffff]}，\n这次幼鸟终于能显示完整啦。
071	多亏{color[0400]}{[0001|1b00]}映射小节点{[0001|ffff]}{color[ffff]}把摇杆小节点\n输出的{color[0400]}{[0001|1b00]}0.00到1.00{[0001|ffff]}{color[ffff]}……
072	{color[0400]}{[0001|1b00]}转换成了0.00到10.00{[0001|ffff]}{color[ffff]}，\n{color[0400]}{[0001|1b00]}移动幅度才变大了{[0001|ffff]}{color[ffff]}。
073	话说……\n右边好像又冒出来个什么东西。
074	把那个东西也显示完整吧。
076	精彩～～！\n我仿佛看到摇杆小节点和映射小节点\n之间发生了化学反应！
07600	那么最后，请让我用\n最激动人心的表演来画上句号！
07601	为迎接即将上演的高潮～\n让我们更换演员～～！
07602	你好，{[0201]}，\n我是{color[0400]}{[0001|1b00]}计数小节点{[0001|ffff]}{color[ffff]}。
07603	{color[0400]}{[0001|1b00]}常数小节点{[0001|ffff]}{color[ffff]}连接在我身上。
077	哎呀？哎呀呀？？\n计数小节点……？
078	哦！常数小节点也在！？\n和计数小节点排着队，\n把我也连接了起来……
079	这就是传说中的三角关系吗——！？\n我将会面临怎样的处境～～～！？
080	映射小节点，\n请冷静，\n什么都不会发生。
081	因为常数小节点在持续向\n计数小节点输入数值……
081-01	所以计数小节点的数值\n{color[0400]}{[0001|1b00]}以每秒60次的速度\n{[0001|ffff]}{color[ffff]}不断增长。
082	而计数小节点输出的数值\n又会输入到{color[0400]}{[0001|1b00]}映射小节点{[0001|ffff]}{color[ffff]}。
083	请看映射小节点的设置。
084	当前{[0001|1b00]}输入范围{[0001|ffff]}为\n{color[0400]}{[0001|1b00]}0.00到60.00{[0001|ffff]}{color[ffff]}。
084-01	说到{color[0400]}{[0001|1b00]}60.00{[0001|ffff]}{color[ffff]}……\n不正是计数小节点\n{color[0400]}{[0001|1b00]}每秒计数的数值{[0001|ffff]}{color[ffff]}吗？
085	而当前{[0001|1b00]}输出范围{[0001|ffff]}为\n{color[0400]}{[0001|1b00]}0.00到2.00{[0001|ffff]}{color[ffff]}。
086	根据现在的设置，\n输入为{color[0400]}{[0001|1b00]}60.00{[0001|ffff]}{color[ffff]}时，输出即为{color[0400]}{[0001|1b00]}2.00{[0001|ffff]}{color[ffff]}。
087	输入为{color[0400]}{[0001|1b00]}30.00{[0001|ffff]}{color[ffff]}时，输出即为{color[0400]}{[0001|1b00]}1.00{[0001|ffff]}{color[ffff]}……\n以此类推。
088	先前我们尝试了放大数值，\n这次准备尝试的是{color[0400]}{[0001|1b00]}缩小数值{[0001|ffff]}{color[ffff]}。
088-01	计数小节点{color[0400]}{[0001|1b00]}每秒递增60.00{[0001|ffff]}{color[ffff]}的数值\n将会输入到这里……
088-02	然后60.00被转换成2.00……\n也就是将会输出{color[0400]}{[0001|1b00]}每秒递增2.00{[0001|ffff]}{color[ffff]}的数值。
089	关闭设置。
089-01	把映射小节点连接到\n游戏画面小节点的{color[0400]}{[0001|1b00]}X端口{[0001|ffff]}{color[ffff]}。
090	让我们看看，当游戏画面小节点\n接收到{color[0400]}{[0001|1b00]}每秒递增2.00的数值{[0001|ffff]}{color[ffff]}时……
091	游戏画面会发生怎样的变化。
092	画面在{color[0400]}{[0001|1b00]}自动向右滚动{[0001|ffff]}{color[ffff]}。
093	因为利用计数小节点和映射小节点，\n输入了{color[0400]}{[0001|1b00]}每秒递增2.00的数值{[0001|ffff]}{color[ffff]}……
094	所以游戏画面能够以\n{color[0400]}{[0001|1b00]}每秒2.00m{[0001|ffff]}{color[ffff]}的速度滚动。
095	话说……\n这也太多了吧……
096	请返回程序画面。
097	欢迎回来～～！！
098	哇哦～～！完美的表演！！\n无论哪个小节点看了\n都一定会热泪盈眶！！
099	呵呵……\n{[0201]}，\n你也要用用看自动滚动哦～～
100	以上就是我们的表演……
101	♥感谢欣赏♥
Guidebook_Shot.msbt
000	……欢迎。
002	我们看到画面中央\n在不断{[0001|1b00]}{color[0400]}发射{color[ffff]}{[0001|ffff]}着{[0001|1b00]}{color[0400]}立方体{color[ffff]}{[0001|ffff]}。
004	没错，这次要讲解的主题就是\n{[0001|1b00]}{color[0400]}发射物体的原理{color[ffff]}{[0001|ffff]}。
005	那么，请前往{[0001|1b00]}{color[0400]}程序画面{color[ffff]}{[0001|ffff]}。
007	搞什么……？\n这不是{[0201]}吗～？
008	找我有事～～？？
009	什么……？\n你想了解{[0001|1b00]}{color[0400]}发射物体的原理{color[ffff]}{[0001|ffff]}～～～！？
010	真没办法～\n看在{[0201]}你的面子上，\n我就教教你吧～
011	我是鼎鼎大名的\n{[0001|1b00]}{color[0400]}发射物体小节点{color[ffff]}{[0001|ffff]}～～～
012	我在哪里，\n哪里就能{[0001|1b00]}{color[0400]}发射物体{color[ffff]}{[0001|ffff]}～～
013	{[0001|1b00]}{color[0400]}发射哪种物体{color[ffff]}{[0001|ffff]}还有{[0001|1b00]}{color[0400]}如何发射{color[ffff]}{[0001|ffff]}，\n都可以在设置画面里更改！\n来！试试看吧！
014	那么，\n请选中{[0001|1b00]}{color[0400]}发射物体小节点{color[ffff]}{[0001|ffff]}。
015	打开设置画面。
016	我们可以在这里更改\n{[0001|1b00]}{color[0400]}发射物体的形状{color[ffff]}{[0001|ffff]}。
017	先改为{[0001|1b00]}{color[0400]}球体{color[ffff]}{[0001|ffff]}看看吧。
018	关闭设置画面。
019	前往游戏画面。
021	……发射出来的物体\n变成了{[0001|1b00]}{color[0400]}球体{color[ffff]}{[0001|ffff]}。
023	像这样，\n通过更改发射物体小节点的设置，\n我们能够改变{[0001|1b00]}{color[0400]}发射物体的形状{color[ffff]}{[0001|ffff]}。
024	请返回{[0001|1b00]}{color[0400]}程序画面{color[ffff]}{[0001|ffff]}。
025	看到没～～～？
026	{[0001|1b00]}{color[0400]}发射出来的物体{color[ffff]}{[0001|ffff]}跟先前\n不一样了对吧～～？
027	那么下一步……\n我们来换一换发射方式～～！
028	比如……\n提高{[0001|1b00]}{color[0400]}发射速度{color[ffff]}{[0001|ffff]}的话，\n不就能更痛快地发射了？
029	请更改{[0001|1b00]}{color[0400]}发射物体小节点{color[ffff]}{[0001|ffff]}的设置。
030	当前{[0001|1b00]}{color[0400]}发射速度{color[ffff]}{[0001|ffff]}是{[0001|1b00]}4.00{[0001|ffff]}。
031	将其改为{[0001|1b00]}{color[0400]}12.00{color[ffff]}{[0001|ffff]}看看。
032	关闭设置画面。
033	去游戏画面看看吧。
036	球体发射的气势变得非常迅猛！
038	除了{[0001|1b00]}{color[0400]}发射速度{color[ffff]}{[0001|ffff]}，还有其他设置\n也能影响到发射方式……
039	去{[0001|1b00]}{color[0400]}程序画面{color[ffff]}{[0001|ffff]}试试吧。
040	打开{[0001|1b00]}{color[0400]}发射物体小节点{color[ffff]}{[0001|ffff]}的设置画面。
041	这里有个叫{[0001|1b00]}{color[0400]}发射间隔{color[ffff]}{[0001|ffff]}的设置。
042	这个设置决定了\n{[0001|1b00]}{color[0400]}距离下一次发射物体的时间间隔{color[ffff]}{[0001|ffff]}。
101	当前数值为{[0001|1b00]}{color[0400]}1.00{color[ffff]}{[0001|ffff]}，\n意味着发射间隔为{[0001|1b00]}{color[0400]}1秒{color[ffff]}{[0001|ffff]}。
043	那么……将其改为{[0001|1b00]}{color[0400]}0.10{color[ffff]}{[0001|ffff]}。
044	这下，\n发射间隔变成{[0001|1b00]}{color[0400]}0.1秒{color[ffff]}{[0001|ffff]}了。
045	关闭设置。
046	哎哟～～\n{[0201]}你可真行啊～～\n竟然把发射间隔给改成{[0001|1b00]}{color[0400]}0.1秒{color[ffff]}{[0001|ffff]}了～～！？
047	有意思～～！\n看我大显身手！！！
049	去{[0001|1b00]}{color[0400]}游戏画面{color[ffff]}{[0001|ffff]}看看吧。
051	物体一个接一个发射，让人眼花缭乱。
052	这可真是痛快至极……
053	像这样，我们可以通过\n设置{[0001|1b00]}{color[0400]}速度{color[ffff]}{[0001|ffff]}与{[0001|1b00]}{color[0400]}发射间隔{color[ffff]}{[0001|ffff]}来\n自由改变发射方式。
055	请返回{[0001|1b00]}{color[0400]}程序画面{color[ffff]}{[0001|ffff]}。
059	怎么样！？\n看了我全力以赴的发挥……\n是不是感觉特别痛快～～！？
060	我的设置可不止这些……\n就连{[0001|1b00]}{color[0400]}发射物体的方向{color[ffff]}{[0001|ffff]}\n也是可以改变的～～
061	尝试更改设置吧。
062	这里有个叫{[0001|1b00]}{color[0400]}发射方向{color[ffff]}{[0001|ffff]}的设置。
063	当前方向为{[0001|1b00]}{color[0400]}X+{color[ffff]}{[0001|ffff]}。
064	{[0001|1b00]}{color[0400]}X+{color[ffff]}{[0001|ffff]}的意思是{[0001|1b00]}{color[0400]}向右发射{color[ffff]}{[0001|ffff]}……
065	改为{color[0400]}{[0001|1b00]}向上{[0001|ffff]}{color[ffff]}发射的{[0001|1b00]}{color[0400]}Y+{color[ffff]}{[0001|ffff]}试试。
067	关闭设置画面。
068	去确认一下吧。
069	现在变成向{[0001|1b00]}{color[0400]}上{color[ffff]}{[0001|ffff]}发射了。
070	可见，\n只要更改{[0001|1b00]}{color[0400]}发射方向{color[ffff]}{[0001|ffff]}……
071	就能做到{[0001|1b00]}{color[0400]}上下{color[ffff]}{[0001|ffff]}、{[0001|1b00]}{color[0400]}前后{color[ffff]}{[0001|ffff]}\n发射物体。
072	那么，请返回{[0001|1b00]}{color[0400]}程序画面{color[ffff]}{[0001|ffff]}。
073	看到没？\n……我放的烟花\n是不是特别壮观～～～？
074	总结！\n我的作用是{[0001|1b00]}{color[0400]}发射物体{color[ffff]}{[0001|ffff]}……
075	并且，发射{[0001|1b00]}{color[0400]}物体的形状{color[ffff]}{[0001|ffff]}、\n{[0001|1b00]}{color[0400]}发射速度{color[ffff]}{[0001|ffff]}、{[0001|1b00]}{color[0400]}发射间隔{color[ffff]}{[0001|ffff]}以及{[0001|1b00]}{color[0400]}方向{color[ffff]}{[0001|ffff]}……
076	都能根据喜好来设置～
083	哎哟……怎么啦～～？\n怎么摆出这副表情……
083-01	{[0001|1b00]}{color[0400]}“可不可以不要自动发射，\n而是用按键来控制发射？”{color[ffff]}{[0001|ffff]}\n……你的表情是这么告诉我的。
083-02	小看谁呢！？\n这还用问！？\n这点小事我当然做得到！！
083-03	把按键小节点给我叫来！
084	那么，有请{[0001|1b00]}{color[0400]}按键小节点{color[ffff]}{[0001|ffff]}登场。
087	请指教！\n今天也很闹腾啊！发射物体小节点！
088	废话少说……\n赶紧把按键小节点\n连接到我这里来！
089	把{[0001|1b00]}{color[0400]}按键小节点{color[ffff]}{[0001|ffff]}的{[0001|1b00]}{color[0400]}输出{color[ffff]}{[0001|ffff]}端口连接到\n{[0001|1b00]}{color[0400]}发射物体小节点{color[ffff]}{[0001|ffff]}的{[0001|1b00]}{color[0400]}输入{color[ffff]}{[0001|ffff]}上。
090	好嘞！\n现在只要按下{color[0400]}{[0001|1b00]}键{[0001|ffff]}{color[ffff]}，\n我就能给{[0001|1b00]}{color[0400]}发射物体小节点{color[ffff]}{[0001|ffff]}发送{[0001|1b00]}{color[0400]}信号{color[ffff]}{[0001|ffff]}啦！
091	那么，去{[0001|1b00]}{color[0400]}游戏画面{color[ffff]}{[0001|ffff]}看看吧。
092	请按下{[0001|1b00]}{color[0400]}键{color[ffff]}{[0001|ffff]}。
093	现在在按下按键时，\n才会发射物体。
093-01	只要像这样将按键小节点\n连接到发射物体小节点身上，\n就可以{[0001|1b00]}{color[0400]}按下按键来发射物体{color[ffff]}{[0001|ffff]}了。
094	连续按下按键\n即可{[0001|1b00]}{color[0400]}反复发射{color[ffff]}{[0001|ffff]}物体……
095	但是请注意，无论按得多快，\n实际的{[0001|1b00]}{color[0400]}发射间隔{color[ffff]}{[0001|ffff]}也无法比设置好的更短。
096	请返回{[0001|1b00]}{color[0400]}程序画面{color[ffff]}{[0001|ffff]}。
097	请指教！\n按得漂亮！
098	怎么样！看到没！\n这种小事对我来说易如反掌！
098-01	……好！关于我的作用，\n你差不多都了解清楚了吧～？
099	也就是说！！\n我和{[0201]}\n从今天开始就是好哥们了！！！
100	“想大闹一场！”“想发射物体！”\n当你冒出这些念头的时候，\n不用客气，尽管叫我就好！
Guidebook_StickAndHuman.msbt
000	……你好。
001	现在在游戏画面中可以看到一个{[0001|1b00]}{color[0400]}人{color[ffff]}{[0001|ffff]}。
002	请尝试用{[0001|1b00]}{color[0400]}摇杆{color[ffff]}{[0001|ffff]}让他{[0001|1b00]}{color[0400]}左右{color[ffff]}{[0001|ffff]}移动。
003	这次我们要学习的是，\n{[0001|1b00]}{color[0400]}用摇杆控制人移动的程序{color[ffff]}{[0001|ffff]}。
004	那么，请前往程序画面。
005	啊——\n{[0201]}来了——
006	你好！\n有什么能帮你的吗？
007	嗯嗯，明白了。\n你想学习{[0001|1b00]}{color[0400]}用摇杆移动人的原理{color[ffff]}{[0001|ffff]}对吗！
008	没问题——\n我们来教你——
009	首先从介绍我自己——\n{[0001|1b00]}{color[0400]}摇杆小节点{color[ffff]}{[0001|ffff]}开始吧。
010	顾名思义——\n我的作用是接收{[0001|1b00]}{color[0400]}Nintendo Switch\n手柄{color[ffff]}{[0001|ffff]}上的{[0001|1b00]}{color[0400]}摇杆{color[ffff]}{[0001|ffff]}输入的信号……
011	然后通过{[0001|1b00]}{color[0400]}线{color[ffff]}{[0001|ffff]}把{[0001|1b00]}{color[0400]}摇杆的操作情况\n{color[ffff]}{[0001|ffff]}传递给其他小节点——
012	是的，\n会传递到我这边！
013	现在——\n我传递的是{[0001|1b00]}{color[0400]}摇杆的左右操作{color[ffff]}{[0001|ffff]}——
014	现在我只能接收到\n{[0001|1b00]}{color[0400]}摇杆的左右操作{color[ffff]}{[0001|ffff]}的信号！
015	当然啦——\n我不仅能传递摇杆的左右操作，\n传递{[0001|1b00]}{color[0400]}摇杆{color[ffff]}{[0001|ffff]}或是{[0001|1b00]}{color[0400]}上下{color[ffff]}{[0001|ffff]}的操作也不在话下——
016	具体想要传递{[0001|1b00]}{color[0400]}哪个摇杆{color[ffff]}{[0001|ffff]}、\n{[0001|1b00]}{color[0400]}哪个方向的操作{color[ffff]}{[0001|ffff]}，都可以在我的\n{[0001|1b00]}{color[0400]}设置画面{color[ffff]}{[0001|ffff]}内更改哦——
017	那么，\n请选中{[0001|1b00]}{color[0400]}摇杆小节点{color[ffff]}{[0001|ffff]}。
018	打开{[0001|1b00]}{color[0400]}设置画面{color[ffff]}{[0001|ffff]}。
019	在“{[0001|1b00]}是哪个摇杆？{[0001|ffff]}”这里，\n可以选择传递{[0001|1b00]}{color[0400]}摇杆或\n摇杆{color[ffff]}{[0001|ffff]}的信号……
020	在“{[0001|1b00]}反应的方向{[0001|ffff]}”这里，\n可以选择传递{[0001|1b00]}{color[0400]}摇杆的\n哪个方向的操作{color[ffff]}{[0001|ffff]}。
021	这次先选择\n{[0001|1b00]}{color[0400]}是哪个摇杆？{color[ffff]}{[0001|ffff]}中的{[0001|1b00]}{color[0400]}R摇杆{color[ffff]}{[0001|ffff]}。
022	关闭设置画面。
023	去游戏画面确认一下\n发生了什么变化吧。
024	请尝试推动{[0001|1b00]}{color[0400]}摇杆{color[ffff]}{[0001|ffff]}。
025	看，\n现在能{[0001|1b00]}{color[0400]}让人移动{color[ffff]}{[0001|ffff]}的\n不是摇杆，而是{[0001|1b00]}{color[0400]}摇杆{color[ffff]}{[0001|ffff]}。
026	像这样，\n通过{[0001|1b00]}{color[0400]}更改{color[ffff]}{[0001|ffff]}摇杆小节点的{[0001|1b00]}{color[0400]}设置{color[ffff]}{[0001|ffff]}，\n{[0001|1b00]}{color[0400]}我们就能改变操作的程序{color[ffff]}{[0001|ffff]}。
027	那么，\n请前往程序画面。
028	怎么样——？
029	人是不是很听{[0001|1b00]}{color[0400]}摇杆{color[ffff]}{[0001|ffff]}的话——？
030	那个！\n我可以问个问题吗？
031	什么问题——？
032	如果把摇杆小节点传递的方向\n从左右改为{[0001|1b00]}{color[0400]}上下{color[ffff]}{[0001|ffff]}……\n会发生什么呢？
033	我有点好奇这件事～！
034	原来如此——
035	那我们就来试试看吧——
035000	……那么，\n请选中摇杆小节点。
036	再次打开设置画面。
037	选择“{[0001|1b00]}{color[0400]}反应的方向{color[ffff]}{[0001|ffff]}”中的“{[0001|1b00]}{color[0400]}上下{color[ffff]}{[0001|ffff]}”。
038	关闭设置画面。
039	这样一来——\n我就能把{[0001|1b00]}{color[0400]}摇杆{color[ffff]}{[0001|ffff]}的{[0001|1b00]}{color[0400]}上下操作{color[ffff]}{[0001|ffff]}\n传递给人小节点啦——
040	会变成什么样呢——？
041	去游戏画面确认一下吧。
042	请尝试{[0001|1b00]}{color[0400]}上下推动摇杆{color[ffff]}{[0001|ffff]}。
043	……明明在{[0001|1b00]}{color[0400]}上下{color[ffff]}{[0001|ffff]}推动摇杆，\n人却在{[0001|1b00]}{color[0400]}左右{color[ffff]}{[0001|ffff]}移动……
044	你知道这是为什么吗？
045	去程序画面思考吧。
046	怎么样——？
047	是不是很奇怪为什么{[0001|1b00]}{color[0400]}摇杆的上下{color[ffff]}{[0001|ffff]}操作……\n对应了{[0001|1b00]}{color[0400]}人的左右{color[ffff]}{[0001|ffff]}移动呢——？
048	是啊，好奇怪！\n明明在上下推动摇杆，为什么人却左右移动？
049	……啊，我懂了！
050	因为摇杆小节点连接的是\n我的{[0001|1b00]}{color[0400]}左右端口{color[ffff]}{[0001|ffff]}！
051	没错，原因就在这里。
052	现在，摇杆操作的信号\n在向人小节点的{[0001|1b00]}{color[0400]}左右端口{color[ffff]}{[0001|ffff]}传递。
053	而人小节点{[0001|1b00]}{color[0400]}左右端口{color[ffff]}{[0001|ffff]}的作用是\n根据输入的信号，\n{[0001|1b00]}{color[0400]}让人相应地左右移动{color[ffff]}{[0001|ffff]}。
054	也就是说……\n无论摇杆小节点传递的是\n哪个方向的操作……
055	凡是输入到人小节点{[0001|1b00]}{color[0400]}左右端口{color[ffff]}{[0001|ffff]}的\n信号都会被用于让人小节点{[0001|1b00]}{color[0400]}左右移动{color[ffff]}{[0001|ffff]}。
056	原来如此！
057	所以设置为{[0001|1b00]}{color[0400]}上下{color[ffff]}{[0001|ffff]}的摇杆小节点\n和我的{[0001|1b00]}{color[0400]}左右端口{color[ffff]}{[0001|ffff]}连接后……
058	最终就得到了{[0001|1b00]}{color[0400]}上下推动摇杆{color[ffff]}{[0001|ffff]}\n能让{[0001|1b00]}{color[0400]}人左右移动{color[ffff]}{[0001|ffff]}的程序！
059	那么，\n如果不再连接到左右端口，\n而是连接到{[0001|1b00]}{color[0400]}前后端口{color[ffff]}{[0001|ffff]}又会发生什么呢？
060	请选中这条{[0001|1b00]}{color[0400]}线{color[ffff]}{[0001|ffff]}。
061	然后按下这个键将线{[0001|1b00]}{color[0400]}删除{color[ffff]}{[0001|ffff]}。
062	这次我们把{[0001|1b00]}{color[0400]}摇杆小节点{color[ffff]}{[0001|ffff]}\n连接到{[0001|1b00]}{color[0400]}人小节点的前后端口{color[ffff]}{[0001|ffff]}。
063	去游戏画面确认一下吧。
064	请尝试{[0001|1b00]}{color[0400]}上下{color[ffff]}{[0001|ffff]}推动{[0001|1b00]}{color[0400]}摇杆{color[ffff]}{[0001|ffff]}。
065	这次人变成{[0001|1b00]}{color[0400]}前后{color[ffff]}{[0001|ffff]}移动了。
066	像这样，\n当需要让{[0001|1b00]}{color[0400]}人前后移动{color[ffff]}{[0001|ffff]}时，\n就用得上人小节点的{[0001|1b00]}{color[0400]}前后端口{color[ffff]}{[0001|ffff]}了。
067	那么，请前往程序画面。
068	怎么样——？
069	合理设置我的摇杆——
070	然后连接到我的\n左右端口或前后端口……
071	就能设计出各种操作程序\n来操作人啦！
074	嘿嘿嘿——！\n我们俩是游戏编程界的最强组合！
075	一定要好好记住我们哦——
Guidebook_ThirdPersonCamera.msbt
002	……你好，\n{[0201]}。
003	看来{color[0400]}{[0001|1b00]}相扑{[0001|ffff]}{color[ffff]}比赛很快就要开始了。
004	不过……从正上方看相扑比赛\n总感觉不够身临其境。
005	遇到这种情况……\n只要移动{color[0400]}{[0001|1b00]}照相机{[0001|ffff]}{color[ffff]}就好了。
007	事不宜迟，\n这就去程序画面移动照相机吧。
008	哦～！\n{[0201]}～！\n辛苦你了阿罗哈！
009	什么什么～？\n想把{color[0400]}{[0001|1b00]}照相机{[0001|ffff]}{color[ffff]}调到最佳角度～？
010	其实……别看我这样，\n我也算是个照相机哦！\n放心交给我吧！
011	……虽然我很想这样打包票啦～\n但其实我稍微有那么一点点……\n不擅长找到有冲击力的角度～
014	毕竟我的作用只是{[0001|1b00]}{color[0400]}把圈起来的\n范围显示到画面上{color[ffff]}{[0001|ffff]}而已～
019	不过你放心！\n我认识一个超厉害的摄影师，\n这就把他介绍给你！
020	他就是我的前辈……\n{[0001|1b00]}{color[0400]}照相机小节点{color[ffff]}{[0001|ffff]}！
026	所以前辈～～！\n接下来就拜托你啦～～！！
027	……包在我身上。
028	我是{color[0400]}{[0001|1b00]}照相机小节点{[0001|ffff]}{color[ffff]}。
087	从不同的位置拍摄游戏画面，\n能给人不同的印象。
091	找到体现拍摄对象优点的\n最佳位置与角度……就是我的工作。
091-01	照相机小节点\n和游戏画面小节点不同……
091-02	照相机小节点能从自身所处的{color[0400]}{[0001|1b00]}位置{[0001|ffff]}{color[ffff]}\n朝自身面向的{[0001|1b00]}{color[0400]}方向{color[ffff]}{[0001|ffff]}拍摄游戏画面。
091-03	所以照相机小节点自身的\n位置与方向就尤为重要了。
029	那么，我们来看看照相机小节点\n究竟是怎样工作的吧。
030	拍摄对象是……相扑吗……
031	唔。\n看来重点在于画面的张力。
032	……先从相扑场地的\n{[0001|1b00]}{color[0400]}正前方{color[ffff]}{[0001|ffff]}拍摄看看。
033	请把照相机小节点移动到\n相扑场地的正前方处。
034	……好位置。
035	更改了照相机的位置后，\n要记得去{[0001|1b00]}{color[0400]}确认游戏画面{color[ffff]}{[0001|ffff]}。
036	请确认游戏画面。
038	因为改变了照相机角度，\n现在看到的是{[0001|1b00]}{color[0400]}从正前方观看的画面{color[ffff]}{[0001|ffff]}。
039	虽然是能看清楚相扑场地了……\n但画面张力还是不够强。
040	请返回程序画面。
041	如果想提升画面的张力，\n靠近对象拍摄特写是个好办法……
042	那我再靠近些试试吧。
043	移动照相机小节点。
088	……这个位置怎么样？
044	去游戏画面确认一下吧。
045	张力瞬间就增强了。
046	照相机离物体{color[0400]}{[0001|1b00]}越近{[0001|ffff]}{color[ffff]}，\n物体在画面中就会显示得{color[0400]}{[0001|1b00]}越大{[0001|ffff]}{color[ffff]}。
047	现在这个距离感觉很合适。
048	我们再试试其他角度吧。
049	请返回程序画面。
050	唔……\n这次我们{[0001|1b00]}{color[0400]}从后方{color[ffff]}{[0001|ffff]}拍摄相扑选手看看。
051	请把照相机小节点移动到\n相扑选手的后方。
052	定下照相机的位置后……
053	下一步是{[0001|1b00]}{color[0400]}调整照相机的方向{color[ffff]}{[0001|ffff]}。
054	别忘了把照相机对准拍摄对象。
055	让照相机小节点的方向\n对准相扑选手。
056	搞定，感觉怎么样？
057	去游戏画面确认一下吧。
058	现在拍摄相扑选手的角度\n变成了斜后方。
060	像这样，我们可以通过调整\n照相机小节点的位置和方向\n来改变拍摄角度。
061	但是……\n现在这个角度看不见\n相扑选手的发髻呢。
062	发髻可是相扑的灵魂！\n我们先返回程序画面吧。
063	……唔。\n看不见发髻可不行。
064	尝试把照相机的{color[0400]}{[0001|1b00]}位置拉高{[0001|ffff]}{color[ffff]}，\n从更高一些的地方拍摄看看吧。
065	如果要更改照相机的高度，\n用{color[0400]}{[0001|1b00]}水平视角{[0001|ffff]}{color[ffff]}会比较方便。
066	切换{color[0400]}{[0001|1b00]}视角{[0001|ffff]}{color[ffff]}。
068	把照相机小节点\n{color[0400]}{[0001|1b00]}向上{[0001|ffff]}{color[ffff]}移动。
069	还有别忘了调整照相机{color[0400]}{[0001|1b00]}方向{[0001|ffff]}{color[ffff]}。
070	{[0001|1b00]}{color[0400]}向下转30°{color[ffff]}{[0001|ffff]}应该就差不多了。
070-01	要想让照相机向下旋转，\n更改设置中的“{[0001|1b00]}{color[0400]}X轴旋转{color[ffff]}{[0001|ffff]}”即可。
072	打开设置。
073	将“{[0001|1b00]}X轴旋转{[0001|ffff]}”设置为{color[0400]}30.00°{color[ffff]}。
074	关闭设置。
075	搞定，感觉怎么样？
076	去看看画面的变化吧。
077	高角度拍摄带来身临其境的感觉！
079	这{[0001|1b00]}{color[0400]}从上往下的角度{color[ffff]}{[0001|ffff]}\n把发髻拍得一清二楚呢。
080	请返回程序画面。
081	……很好！\n你是个能干的家伙！
083	只要用好照相机小节点，\n就能随心所欲地调整拍摄角度。
084	……为了拍出最精彩的画面，\n需要不厌其烦地尝试各种{[0001|1b00]}{color[0400]}位置{color[ffff]}{[0001|ffff]}和{[0001|1b00]}{color[0400]}方向{color[ffff]}{[0001|ffff]}。
085	秘诀就在于勤加查看游戏画面。
085-01	这都是我的经验之谈，请牢记。
086	……是时候开始比赛了吧♥
092	各就各位，预备……开始！
Guidebook_UFO.msbt
000	……你好。
001	……天上好像飘着什么东西。
002	原来是{[0001|1b00]}{color[0400]}UFO{color[ffff]}{[0001|ffff]}。
003	请尝试用{[0001|1b00]}{color[0400]}摇杆{color[ffff]}{[0001|ffff]}左右移动UFO。
103	是不是如丝般顺滑？
004	没错，\n这次要讲解的主题就是{[0001|1b00]}{color[0400]}UFO{color[ffff]}{[0001|ffff]}。
005	请前往程序画面。
006	{[0201]}！\n我等你很久了哦～～
009	好巧，我正好在想……\n要是你能更了解我该多好～\n这时候，你就出现了～～
010	不愧是程序员～\n把握时机的能力果然精准～\n佩服佩服～
011	那么那么～～\n{[0201]}，\n我要开始介绍{[0001|1b00]}{color[0400]}UFO{color[ffff]}{[0001|ffff]}了哦～～
012	说到UFO～～\n大家首先联想到的一定是在空中\n轻飘飘地～飘来飘去的飞碟～～～
013	一般来说～～\n{[0001|1b00]}{color[0400]}人或者物体{color[ffff]}{[0001|ffff]}如果被放到空中，\n{[0001|1b00]}{color[0400]}一定会掉下来{color[ffff]}{[0001|ffff]}对吧～
014	但UFO不同，\nUFO能{color[0400]}{[0001|1b00]}持续漂浮在空中{[0001|ffff]}{color[ffff]}哦～～
014-01	就是这么轻飘飘～～\n自由自在～～
028	此外～～
029	你能用{[0001|1b00]}{color[0400]}摇杆{color[ffff]}{[0001|ffff]}让UFO轻飘飘地\n{[0001|1b00]}{color[0400]}左右移动{color[ffff]}{[0001|ffff]}的原因在于～
030	{[0001|1b00]}{color[0400]}摇杆小节点{color[ffff]}{[0001|ffff]}连接在UFO上～
031	转呀转——
032	{[0001|1b00]}{color[0400]}UFO小节点{color[ffff]}{[0001|ffff]}有{[0001|1b00]}{color[0400]}3个输入端口{color[ffff]}{[0001|ffff]}——
033	从上到下分别是……\n{[0001|1b00]}{color[0400]}前后{color[ffff]}{[0001|ffff]}、{[0001|1b00]}{color[0400]}左右{color[ffff]}{[0001|ffff]}、{[0001|1b00]}{color[0400]}上下{color[ffff]}{[0001|ffff]}——
034	因为我把{[0001|1b00]}{color[0400]}摇杆的左右操作{color[ffff]}{[0001|ffff]}——\n传递给了{[0001|1b00]}{color[0400]}左右端口{color[ffff]}{[0001|ffff]}——
035	所以当{[0001|1b00]}{color[0400]}摇杆{color[ffff]}{[0001|ffff]}被推动时，\n{[0001|1b00]}{color[0400]}UFO{color[ffff]}{[0001|ffff]}会随之{[0001|1b00]}{color[0400]}左右移动{color[ffff]}{[0001|ffff]}～～
036	就是这样——
037	{[0201]}——\n除了{[0001|1b00]}{color[0400]}左右{color[ffff]}{[0001|ffff]}——你一定也很想\n让UFO{[0001|1b00]}{color[0400]}上下{color[ffff]}{[0001|ffff]}移动吧——？
038	把{[0001|1b00]}{color[0400]}能传递上下操作的\n摇杆小节点{color[ffff]}{[0001|ffff]}叫来——
039	然后跟{[0001|1b00]}{color[0400]}UFO小节点{color[ffff]}{[0001|ffff]}的{[0001|1b00]}{color[0400]}上下端口{color[ffff]}{[0001|ffff]}连接起来\n就能让UFO上下移动啦——
040	那么，\n有请{[0001|1b00]}{color[0400]}上下{color[ffff]}{[0001|ffff]}{color[0400]}{[0001|1b00]}摇杆小节点{[0001|ffff]}{color[ffff]}登场。
045-01	摇杆的上下尽在我的掌握——\n转呀转——
046	把他连接到UFO小节点的{[0001|1b00]}{color[0400]}上下端口{color[ffff]}{[0001|ffff]}。
047	我传递{[0001|1b00]}{color[0400]}摇杆{color[ffff]}{[0001|ffff]}的{[0001|1b00]}{color[0400]}左右{color[ffff]}{[0001|ffff]}操作——
048	我传递{[0001|1b00]}{color[0400]}上下{color[ffff]}{[0001|ffff]}操作——
049	去游戏画面确认一下吧。
050	请随意推动{[0001|1b00]}{color[0400]}摇杆{color[ffff]}{[0001|ffff]}看看。
051	能{[0001|1b00]}{color[0400]}上下左右移动{color[ffff]}{[0001|ffff]}了呢。
052	明白了吗？\n连接{[0001|1b00]}{color[0400]}上下端口{color[ffff]}{[0001|ffff]}后，\n就能让UFO像这样上下移动起来。
054	请前往程序画面。
055	那么～\n接下来～～～
056	我们再试试其他方向的移动吧～
057	把传递{[0001|1b00]}{color[0400]}上下摇杆移动{color[ffff]}{[0001|ffff]}信号的目的地～\n更改为{[0001|1b00]}{color[0400]}前后端口{color[ffff]}{[0001|ffff]}～
058	请选中连接到{[0001|1b00]}{color[0400]}上下端口{color[ffff]}{[0001|ffff]}的{[0001|1b00]}{color[0400]}线{color[ffff]}{[0001|ffff]}。
059	删除。
060	然后重新连接到UFO小节点的{[0001|1b00]}{color[0400]}前后端口{color[ffff]}{[0001|ffff]}。
061	好了，现在UFO会怎样移动呢？
062	请用{[0001|1b00]}{color[0400]}摇杆{color[ffff]}{[0001|ffff]}移动UFO。
063	现在能{[0001|1b00]}{color[0400]}前后左右移动{color[ffff]}{[0001|ffff]}了。
064	总结一下，UFO能在前后、左右、上下\n{[0001|1b00]}{color[0400]}三个方向上{color[ffff]}{[0001|ffff]}移动……
065	你可以根据游戏的需要，\n选择合适的端口来控制UFO的移动方向。
066	请返回程序画面。
067	顺便问一句，\n{[0201]}～
068	你希望UFO以多快的速度移动呢～～？
069	既可以急匆匆地{[0001|1b00]}{color[0400]}高速移动{color[ffff]}{[0001|ffff]}～\n也可以慢吞吞地{[0001|1b00]}{color[0400]}低速移动{color[ffff]}{[0001|ffff]}～
070	速度的快慢有着丰富的可能性哦～～
071	你可以在我的设置里\n{[0001|1b00]}{color[0400]}更改速度{color[ffff]}{[0001|ffff]}哦～
072	请打开{[0001|1b00]}{color[0400]}UFO小节点{color[ffff]}{[0001|ffff]}的设置。
073	更改{[0001|1b00]}{color[0400]}水平速度{color[ffff]}{[0001|ffff]}的数值，\n可以调整{[0001|1b00]}{color[0400]}水平方向的移动速度{color[ffff]}{[0001|ffff]}……
074	更改{[0001|1b00]}{color[0400]}垂直速度{color[ffff]}{[0001|ffff]}的数值，\n可以调整{[0001|1b00]}{color[0400]}上下方向的移动速度{color[ffff]}{[0001|ffff]}。
075	把{color[0400]}{[0001|1b00]}水平速度{[0001|ffff]}{color[ffff]}设置为{[0001|1b00]}{color[0400]}2.00{color[ffff]}{[0001|ffff]}。
076	关闭。
077	去确认一下速度的变化吧。
078	请尝试移动UFO。
079	与先前相比，速度变快了。
080	不仅是{[0001|1b00]}{color[0400]}左右{color[ffff]}{[0001|ffff]}，\n{[0001|1b00]}{color[0400]}前后的移动速度{color[ffff]}{[0001|ffff]}也变快了。
081	可见当{[0001|1b00]}{color[0400]}水平速度{color[ffff]}{[0001|ffff]}变化后，\n{[0001|1b00]}{color[0400]}前后左右的移动速度{color[ffff]}{[0001|ffff]}都会随之变化。
082	确认过后请返回程序画面。
083	更改过{[0001|1b00]}{color[0400]}水平速度{color[ffff]}{[0001|ffff]}以后～
084	是不是也想更改一下{[0001|1b00]}{color[0400]}垂直速度{color[ffff]}{[0001|ffff]}了呢～～？\n这也是人之常情吧，我懂～～～！
085	这次我们让速度{[0001|1b00]}{color[0400]}慢下来{color[ffff]}{[0001|ffff]}。
086	把{color[0400]}{[0001|1b00]}垂直速度{[0001|ffff]}{color[ffff]}设置为{[0001|1b00]}{color[0400]}0.30{color[ffff]}{[0001|ffff]}。
087	关闭设置。
088	因为是垂直速度，所以我们要把线\n从前后端口移动到上下端口。
089	请选中连接到{[0001|1b00]}{color[0400]}前后端口{color[ffff]}{[0001|ffff]}的{[0001|1b00]}{color[0400]}线{color[ffff]}{[0001|ffff]}。
090	删除。
091	重新连接到{[0001|1b00]}{color[0400]}上下端口{color[ffff]}{[0001|ffff]}。
092	这样一来UFO就又能\n{[0001|1b00]}{color[0400]}上下左右移动{color[ffff]}{[0001|ffff]}了。
093	我们去实际操作看看吧。
094	请用{[0001|1b00]}{color[0400]}摇杆上下{color[ffff]}{[0001|ffff]}移动UFO。
095	因为我们减小了{[0001|1b00]}{color[0400]}垂直速度{color[ffff]}{[0001|ffff]}的数值，\n所以UFO的{color[0400]}{[0001|1b00]}上下移动速度{[0001|ffff]}{color[ffff]}也相应{color[0400]}{[0001|1b00]}变慢{[0001|ffff]}{color[ffff]}。
097	你可以像这样按照自己的喜好\n设置UFO的速度。
098	请返回程序画面。
099	欢迎回来～～
100	我是轻飘飘～自由自在的UFO～\n请一定一定要用用看哦～～
101	我相信，\n你一定能用我做出特别灵动的\n精彩游戏～～
102	那就下回再见啦——
Guidebook_ViewChange.msbt
BU_001	你好。
BU_002	{[0201]}，\n你听说过{[0001|1b00]}{color[0400]}视角{color[ffff]}{[0001|ffff]}这个词吗？
BU_003	视角就是指{[0001|1b00]}{color[0400]}观看{color[ffff]}{[0001|ffff]}游戏空间的{[0001|1b00]}{color[0400]}方向{color[ffff]}{[0001|ffff]}。
BU_003_01	你现在在以{[0001|1b00]}{color[0400]}水平视角{color[ffff]}{[0001|ffff]}观看游戏画面。
BU_003_03	可以看到画面中央的苹果……\n还有向远处延伸的蓝天。
BU_003_04	水平视角就是指……\n{[0001|1b00]}{color[0400]}从水平方向观看游戏空间{color[ffff]}{[0001|ffff]}。
BU_003_05	但有时……我们也会想做那种\n{[0001|1b00]}{color[0400]}从上往下俯瞰游戏空间{color[ffff]}{[0001|ffff]}的游戏，不是吗？
BU_003_06	这时候，就需要用到{[0001|1b00]}{color[0400]}切换视角{color[ffff]}{[0001|ffff]}。
BU_004	{[0001|1b00]}{color[0400]}切换视角{color[ffff]}{[0001|ffff]}的意思就是\n改变观看游戏空间的方向。
BU_005	下面我会利用这个苹果来讲解\n切换视角的基本知识。
BU_015	那么，请前往程序画面。
BU_016	哎呀，{[0201]}，\n你好呀♥ 
BU_017	红彤彤的苹果……很漂亮吧！
BU_018	珠圆玉润的身体曲线，\n加上诱人的鲜艳红色……完美♥
BU_019	可选择的视角有2种。
BU_020	我们现在的视角是……\n从水平方向观看游戏空间的{[0001|1b00]}{color[0400]}水平视角{color[ffff]}{[0001|ffff]}。
BU_021	还有1种视角是……\n从上往下俯瞰游戏空间的{[0001|1b00]}{color[0400]}俯瞰视角{color[ffff]}{[0001|ffff]}。
BU_022	这2种视角可以在程序画面中\n进行切换。
BU_023	切换视角的方法很简单……
BU_024	按下这个{[0001|1b00]}{color[0400]}切换视角按键{color[ffff]}{[0001|ffff]}即可。
BU_025	{[0201]}，\n按下{[0001|1b00]}{color[0400]}切换视角按键{color[ffff]}{[0001|ffff]}看看吧。
BU_028	这样我们就从\n{[0001|1b00]}{color[0400]}水平视角{color[ffff]}{[0001|ffff]}切换成{[0001|1b00]}{color[0400]}俯瞰视角{color[ffff]}{[0001|ffff]}了。
BU_030	去游戏画面看看\n俯瞰视角是什么样的吧。
BU_031	苹果的叶子看得一清二楚。
BU_036	游戏画面中呈现的内容\n的确都变成了{[0001|1b00]}{color[0400]}俯瞰视角{color[ffff]}{[0001|ffff]}。
BU_037	那么，请返回程序画面。
BU_038	绿色的叶子反射着可爱的光泽……
BU_039	又发现了苹果新的一面呢♥
BU_041	那么，\n再把视角从{[0001|1b00]}{color[0400]}俯瞰视角{color[ffff]}{[0001|ffff]}变回{[0001|1b00]}{color[0400]}水平视角{color[ffff]}{[0001|ffff]}。
BU_042	还记得切换视角的方法吗……
BU_043	按下这个{[0001|1b00]}{color[0400]}切换视角按键{color[ffff]}{[0001|ffff]}。
BU_046	这样视角就从俯瞰视角\n切换成了{[0001|1b00]}{color[0400]}水平视角{color[ffff]}{[0001|ffff]}。
BU_048	再去看看\n变回水平视角的游戏画面吧。
BU_049	观看游戏画面的方式\n恢复成最初的样子了。
BU_052	像这样，我们可以通过切换视角\n来{color[0400]}{[0001|1b00]}改变观看游戏空间的方向{[0001|ffff]}{color[ffff]}。
BU_053	你现在看到的游戏空间存在3个方向，\n它们各自拥有不同的名字。
BU_056	左右方向被称为{[0001|1b00]}{color[0400]}X方向{color[ffff]}{[0001|ffff]}。
BU_057	上下方向被称为{[0001|1b00]}{color[0400]}Y方向{color[ffff]}{[0001|ffff]}。
BU_058	前后方向被称为{[0001|1b00]}{color[0400]}Z方向{color[ffff]}{[0001|ffff]}。
BU_059	像这样存在{[0001|1b00]}{color[0400]}3个方向{color[ffff]}{[0001|ffff]}的游戏空间……
BU_060	我们也称之为{[0001|1b00]}{color[0400]}3D空间{color[ffff]}{[0001|ffff]}。
BU_061	去程序画面移动小节点的位置，\n确认一下会发生什么变化吧。
BU_062	现在是水平视角的程序画面。
BU_063	所以{[0001|1b00]}{color[0400]}横轴是X轴{color[ffff]}{[0001|ffff]}……
BU_064	{[0001|1b00]}{color[0400]}纵轴是Y轴{color[ffff]}{[0001|ffff]}。
BU_065	把时尚物体小节点\n朝程序画面的上方……\n也就是朝{[0001|1b00]}{color[0400]}Y方向{color[ffff]}{[0001|ffff]}移动看看。
BU_066	就算朝Y方向移动了位置，\n苹果的魅力也分毫不减……♥
BU_067	把小节点朝Y方向移动后，\n游戏画面会发生怎样的变化呢？
BU_068	去游戏画面确认一下吧。
BU_069	苹果出现在了先前位置的上方。
BU_070	把程序画面中的小节点\n朝{[0001|1b00]}{color[0400]}Y方向{color[ffff]}{[0001|ffff]}移动后……
BU_071	苹果朝先前位置的{[0001|1b00]}{color[0400]}上方{color[ffff]}{[0001|ffff]}移动了。
BU_073	请返回程序画面。
BU_074	把时尚物体小节点放回\n原来的位置吧。
BU_075	浮在空中的苹果虽然很有趣……\n但还是脚踏实地的苹果更～可～靠♥
BU_076	下面我们切换成{[0001|1b00]}{color[0400]}俯瞰视角{color[ffff]}{[0001|ffff]}后，\n再移动小节点试试。
BU_077	按下切换视角。
BU_079	去俯瞰视角的游戏画面看看吧。
BU_080	切换成俯瞰视角后，\n能看到的方向也随之改变。
BU_081	游戏画面的{[0001|1b00]}{color[0400]}左右{color[ffff]}{[0001|ffff]}\n依然是{[0001|1b00]}{color[0400]}X方向{color[ffff]}{[0001|ffff]}不变……
BU_082	但画面的{[0001|1b00]}{color[0400]}上下{color[ffff]}{[0001|ffff]}变成了{[0001|1b00]}{color[0400]}Z方向{color[ffff]}{[0001|ffff]}……
BU_083	也就是变成了{[0001|1b00]}{color[0400]}前后方向{color[ffff]}{[0001|ffff]}。
BU_084	请返回程序画面。
BU_085	切换成{[0001|1b00]}{color[0400]}俯瞰视角{color[ffff]}{[0001|ffff]}后，\n程序画面上，{[0001|1b00]}{color[0400]}轴的方向{color[ffff]}{[0001|ffff]}也随之改变。
BU_086	{[0001|1b00]}{color[0400]}横轴依然是X轴{color[ffff]}{[0001|ffff]}不变……
BU_087	但{[0001|1b00]}{color[0400]}纵轴变成了Z轴{color[ffff]}{[0001|ffff]}。
BU_088	把时尚物体小节点\n朝程序画面的上方……\n也就是朝{[0001|1b00]}{color[0400]}Z方向{color[ffff]}{[0001|ffff]}移动看看。
BU_089	为了提升苹果的魅力，\n朝Z方向动一动也未尝不可♥
BU_090	把小节点朝Z方向移动后，\n游戏画面会发生怎样的变化呢？
BU_091	去游戏画面确认一下吧。
BU_092	苹果出现在了比先前位置更远的地方。
BU_093	把程序画面中的小节点\n朝{[0001|1b00]}{color[0400]}Z方向{color[ffff]}{[0001|ffff]}移动后……
BU_094	苹果朝游戏画面的深处移动了。
BU_096	请前往程序画面。
BU_097	总而言之，切换视角可以改变\n观看游戏画面的方式……
BU_098	切换{[0001|1b00]}{color[0400]}水平视角{color[ffff]}{[0001|ffff]}和{[0001|1b00]}{color[0400]}俯瞰视角{color[ffff]}{[0001|ffff]}时，\n显示在画面上的轴的方向也会变化。
BU_099	{[0201]}，\n还记得游戏空间的{[0001|1b00]}{color[0400]}3个方向{color[ffff]}{[0001|ffff]}分别叫什么吗？
BU_100	答案是{[0001|1b00]}{color[0400]}X方向{color[ffff]}{[0001|ffff]}、{[0001|1b00]}{color[0400]}Y方向{color[ffff]}{[0001|ffff]}和{[0001|1b00]}{color[0400]}Z方向{color[ffff]}{[0001|ffff]}。
BU_101	在游戏编程时经常会用到这3个方向，\n所以一定要好好记住哦。
BU_102	改变视角后，我仿佛看到了崭新的世界。
BU_103	切换视角……真是个好想法！
Guidebook_Warp.msbt
000	……你好，\n{[0201]}。
001	画面中的2个圆环……\n是{[0001|1b00]}{color[0400]}传送门{color[ffff]}{[0001|ffff]}。
003	请用摇杆控制人移动……\n让人走进{color[0400]}{[0001|1b00]}右边的圆环{[0001|ffff]}{color[ffff]}。
004	……看，传送到另一个圆环了。
006	人一走进右边的圆环……\n就会被传送到左边的圆环。
007	这次让人走进{color[0400]}{[0001|1b00]}左边的圆环{[0001|ffff]}{color[ffff]}看看。
008	……不能把人从左边传送到右边。
009	可见这两个传送门\n只能从右向左{[0001|1b00]}{color[0400]}单向通行{color[ffff]}{[0001|ffff]}。
010	这次要讲解的主题就是\n{color[0400]}{[0001|1b00]}传送的原理{[0001|ffff]}{color[ffff]}。
011	去看看传送的程序结构吧。
012	{[0201]}，\n你好！
013	你刚才看到人瞬间移动了吧！？\n像变魔术一样！
014	嗨～我是右边的圆环。
015	闪耀着七彩光芒的圆环……
016	传送的通道仿佛是一座彩虹桥♥
017	嗨～我是左边的圆环。
018	因为重叠在一起会看不太清楚，\n我就找了个倾斜的角度错开啦♥
019	凡事不要太中规中矩才能更加……\n♥高端！大气！上档次！♥
020	这些时尚的圆环……\n是为了让你能看到传送点的{[0001|1b00]}{color[0400]}标记{color[ffff]}{[0001|ffff]}。
021	真正把人传送过去的是……
022	呜呼……\n吾名，{[0001|1b00]}{color[0400]}传送物体入口小节点{color[ffff]}{[0001|ffff]}。
023	引导汝至此之机缘，\n是为诞生于汝心中之求知欲。
023-01	甚好，汝欲知吾等{color[0400]}{[0001|1b00]}超能力{[0001|ffff]}{color[ffff]}之精髓，\n吾便传授一二。
024	吾之超能力……\n即{color[0400]}{[0001|1b00]}将碰触之物传送至亚空间{[0001|ffff]}{color[ffff]}之能力。
025	呜呼……\n吾名，{[0001|1b00]}{color[0400]}传送物体出口小节点{color[ffff]}{[0001|ffff]}。
026	吾之超能力……\n即{[0001|1b00]}{color[0400]}令物体从亚空间现世{color[ffff]}{[0001|ffff]}之能力。
027	合吾等之力……
028	即可令物体实现\n穿越亚空间之{color[0400]}{[0001|1b00]}超高速移动{[0001|ffff]}{color[ffff]}。
029	人称{[0001|1b00]}{color[0400]}传送{color[ffff]}{[0001|ffff]}是也。
031	……我来翻译下，\n他们的意思是说他们能够把物体\n从{[0001|1b00]}{color[0400]}传送物体入口{color[ffff]}{[0001|ffff]}传送到{[0001|1b00]}{color[0400]}传送物体出口{color[ffff]}{[0001|ffff]}。
033	来看看{[0001|1b00]}{color[0400]}传送物体入口小节点{color[ffff]}{[0001|ffff]}的设置吧。
034	打开设置。
035	只有在“{color[0400]}{[0001|1b00]}要传送什么？{[0001|ffff]}{color[ffff]}”中\n设置好的物体才能被传送。
036	可以看到设置为{color[0400]}{[0001|1b00]}人{[0001|ffff]}{color[ffff]}。
037	并且{[0001|1b00]}状态{[0001|ffff]}中的“{color[0400]}{[0001|1b00]}能看见{[0001|ffff]}{color[ffff]}”\n处于{color[0400]}{[0001|1b00]}关闭{[0001|ffff]}{color[ffff]}状态。
039	把“{color[0400]}{[0001|1b00]}能看见{[0001|ffff]}{color[ffff]}”设置为{color[0400]}{[0001|1b00]}开启{[0001|ffff]}{color[ffff]}试试。
040	关闭设置。
041	接下来再去看看\n{color[0400]}{[0001|1b00]}传送物体出口小节点{[0001|ffff]}{color[ffff]}的设置。
042	选中他。
043	打开设置。
044	{[0001|1b00]}状态{[0001|ffff]}中的“{color[0400]}{[0001|1b00]}能看见{[0001|ffff]}{color[ffff]}”\n处于{color[0400]}{[0001|1b00]}关闭{[0001|ffff]}{color[ffff]}状态。
045	把“{color[0400]}{[0001|1b00]}能看见{[0001|ffff]}{color[ffff]}”设置为{color[0400]}{[0001|1b00]}开启{[0001|ffff]}{color[ffff]}试试。
046	关闭设置。
047	那么，把传送物体小节点\n可视化后会变成什么样……\n去游戏画面确认一下吧。
048	请仔～细观察圆环中央……\n可以看到{[0001|1b00]}{color[0400]}白色的网格{color[ffff]}{[0001|ffff]}。
049	这边的白色网格是{[0001|1b00]}{color[0400]}传送入口{color[ffff]}{[0001|ffff]}。
050	物体碰到这个网格时\n就会被传送走。
051	这边的白色网格是{[0001|1b00]}{color[0400]}传送出口{color[ffff]}{[0001|ffff]}。
052	物体会从这中央出现。
053	请把人移动到入口的白色网格……\n再确认一下传送的过程。
054	……在人接触到网格的瞬间发生了传送。
055	所以说真正的传送入口并不是圆环，\n而是这个白色网格。
056	不过……放个圆环在那里的话，\n传送点的位置就一目了然了不是吗？
057	……那么，请返回程序画面。
060	听我说～\n我突然有个想法……
061	假如说～在{color[0400]}{[0001|1b00]}没有传送物体出口{[0001|ffff]}{color[ffff]}的情况下\n接触到传送物体入口……\n……会发生什么呢！？
062	若亚空间之出口不存在……
063	则脱离亚空间之手段……\n自当无存。
065	简言之……\n{[0001|1b00]}{color[0400]}从游戏画面消失{color[ffff]}{[0001|ffff]}。
066	……只听讲解的话感觉有点抽象，\n还是让{[0001|1b00]}{color[0400]}传送物体出口小节点{color[ffff]}{[0001|ffff]}暂时退场，\n看看实际效果吧。
067	请选中传送物体出口小节点。
068	删除。
069	然后把标记出口的圆环……\n时尚物体小节点也选中。
070	删除。
071	人被传送到没有出口的亚空间后，\n究竟会发生什么呢……
072	会发生什么呢……！
073	去游戏画面确认一下吧。
074	控制人移动起来……\n走进传送入口看看。
075	人从游戏画面……\n……{color[0400]}{[0001|1b00]}消失了{[0001|ffff]}{color[ffff]}。
076	如果想再试一次，\n按“{[0001|1b00]}重来{[0001|ffff]}”即可。
077	也就是说当传送出口不存在时，\n一旦和入口{[0001|1b00]}{color[0400]}接触就会消失{color[ffff]}{[0001|ffff]}。
078	请返回程序画面。
079	消失，\n乃吾超能力之另一衍生表象。
079-01	恐惧、战栗……\n汝无须生出分毫此等情感。
080	……既然已经确认了会发生什么，\n那就把传送物体出口小节点和\n时尚物体小节点恢复原状吧。
081	呜呼……\n亚空间通道再次与出口连通。
082	这样就恢复原状了。
083	传送，其入口与出口宛如一茎双生之并蒂莲，\n须呈两相呼应之势。
084	入口与出口连接同一亚空间之时，\n传送方可施为。
085	为此，\n吾等须携带相同之标识符。
086	汝尽可于设置之中查验{[0001|1b00]}{color[0400]}传送ID{color[ffff]}{[0001|ffff]}。
086-01	……呃……说白了就是，\n传送入口和传送出口的\n{[0001|1b00]}{color[0400]}传送ID{color[ffff]}{[0001|ffff]}必须保持一致。
087	去看看{[0001|1b00]}{color[0400]}传送物体出口小节点{color[ffff]}{[0001|ffff]}的设置吧。
088	打开设置。
089	这就是{color[0400]}{[0001|1b00]}传送ID{[0001|ffff]}{color[ffff]}。
091	拥有相同{[0001|1b00]}{color[0400]}传送ID{color[ffff]}{[0001|ffff]}的\n入口和出口相互连通。
092	这个出口的{[0001|1b00]}传送ID{[0001|ffff]}\n目前被设置为{color[0400]}{[0001|1b00]}A{[0001|ffff]}{color[ffff]}。
093	确认后请关闭设置。
094	接着去确认一下入口的{[0001|1b00]}传送ID{[0001|ffff]}。
095	选中他。
096	打开设置。
097	入口的{[0001|1b00]}传送ID{[0001|ffff]}和出口相同，\n也被设置为{color[0400]}{[0001|1b00]}A{[0001|ffff]}{color[ffff]}。
098	由于两者拥有相同的{[0001|1b00]}{color[0400]}传送ID{color[ffff]}{[0001|ffff]}，\n意味着这组入口与出口之间的\n{[0001|1b00]}{color[0400]}传送处于连通状态{color[ffff]}{[0001|ffff]}。
099	关闭设置。
101	那么下面让我们利用{color[0400]}{[0001|1b00]}传送ID{[0001|ffff]}{color[ffff]}来\n创造另1组不同的传送门。
102	呜呼……\n吾乃{color[0400]}{[0001|1b00]}亚空间之入口{[0001|ffff]}{color[ffff]}。
103	呜呼……\n吾乃{color[0400]}{[0001|1b00]}亚空间之出口{[0001|ffff]}{color[ffff]}。
104	我请来了传送物体入口与出口小节点……
105	以及作为传送点标记的\n时尚物体小节点。
109	为了连通传送的通道，\n需要设置好他们的{[0001|1b00]}{color[0400]}传送ID{color[ffff]}{[0001|ffff]}。
110	首先来确认出口的{[0001|1b00]}{color[0400]}传送ID{color[ffff]}{[0001|ffff]}。
111	打开设置。
112	这个出口的{[0001|1b00]}传送ID{[0001|ffff]}……\n目前被设置为{color[0400]}{[0001|1b00]}B{[0001|ffff]}{color[ffff]}。
113	关闭设置。
114	然后选中入口。
115	打开设置。
116	这个入口的{[0001|1b00]}传送ID{[0001|ffff]}……\n现在是{color[0400]}{[0001|1b00]}A{[0001|ffff]}{color[ffff]}。
117	为了和刚才那个传送出口连通……
118	需要把{[0001|1b00]}传送ID{[0001|ffff]}设置为{color[0400]}{[0001|1b00]}B{[0001|ffff]}{color[ffff]}。
119	还有别忘了设置“{color[0400]}{[0001|1b00]}要传送什么？{[0001|ffff]}{color[ffff]}”。\n因为我们希望能传送人……
120	所以要把{color[0400]}{[0001|1b00]}人{[0001|ffff]}{color[ffff]}设置为{color[0400]}{[0001|1b00]}开启{[0001|ffff]}{color[ffff]}。
121	关闭当前画面。
122	再关闭设置。
123	这样，传送的设置就完成了。
124	托汝之福，\n又一全新亚空间通道已连通，\n空间交汇之处孕育点点星光。
125	……呃——\n去游戏画面确认一下吧。
126	右边的2个是传送入口，\n左边的2个是传送出口。
127	请进入上方传送入口……\n也就是{[0001|1b00]}传送ID{[0001|ffff]}为{[0001|1b00]}{color[0400]}B{color[ffff]}{[0001|ffff]}的入口看看。
128	可见{[0001|1b00]}传送ID{[0001|ffff]}为{color[0400]}{[0001|1b00]}B{[0001|ffff]}{color[ffff]}的入口……\n与{[0001|1b00]}传送ID{[0001|ffff]}同为{color[0400]}{[0001|1b00]}B{[0001|ffff]}{color[ffff]}的出口连通……
129	然后，\n再进入{[0001|1b00]}传送ID{[0001|ffff]}为{[0001|1b00]}{color[0400]}A{color[ffff]}{[0001|ffff]}的入口看看。
130	可见{[0001|1b00]}传送ID{[0001|ffff]}为{color[0400]}{[0001|1b00]}A{[0001|ffff]}{color[ffff]}的入口……\n与{[0001|1b00]}传送ID{[0001|ffff]}同为{color[0400]}{[0001|1b00]}A{[0001|ffff]}{color[ffff]}的出口连通。
131	看到了吗？拥有相同的传送ID，\n是入口与出口连通的条件。
132	请返回程序画面。
133	呜呼……为求汝之熟练度更上一层楼，\n吾将传授汝愈加精深之应用技术。
134	即，对单一传送出口……\n{color[0400]}{[0001|1b00]}可设置复数{[0001|ffff]}{color[ffff]}传送入口。
135	即便存在复数{[0001|1b00]}{color[0400]}相同ID{color[ffff]}{[0001|ffff]}之入口，\n亦能悉数将目标传送至{[0001|1b00]}{color[0400]}相同ID{color[ffff]}{[0001|ffff]}之出口。
135-01	……呃——\n就是说哪怕有许多个相同ID的入口，\n也可以全都连通到同一个相同ID的出口。
136	{[0001|1b00]}{color[0400]}独立ID{color[ffff]}{[0001|ffff]}乃设置出口ID之法则。\n赋予复数出口相同ID之举，\n不可为。
137	……呃——\n意思是说无法给多个出口设置相同的ID。
138	汝，尽可尝试将二入口……\n连通至一出口。
139	那么……\n请选中传送物体入口小节点……
140	打开设置。
141	将{[0001|1b00]}传送ID{[0001|ffff]}改为{color[0400]}{[0001|1b00]}B{[0001|ffff]}{color[ffff]}。
142	关闭设置。
143	呜呼……\n受次元扭曲之影响……\n吾……已连通至{[0001|1b00]}{color[0400]}B{color[ffff]}{[0001|ffff]}出口。
144	……去游戏画面确认一下\n传送连通方式的变化吧。
145	首先进入上方的入口传送看看。
146	然后进入下方的入口传送看看。
147	……无论进入哪个入口，\n都会传送到同一个出口。
148	因为上下两个入口的\n{[0001|1b00]}传送ID{[0001|ffff]}都设置为{color[0400]}{[0001|1b00]}B{[0001|ffff]}{color[ffff]}……
149	所以不管哪个入口\n都与{color[0400]}{[0001|1b00]}B{[0001|ffff]}{color[ffff]}出口连通。
150	请返回程序画面。
151	呜呼……\n若能为满足汝之求知欲助一臂之力，\n亦不枉吾此番口舌。
152	穿越亚空间之超高速移动……\n名为传送。
153	利用传送……\n就能让物体从游戏画面瞬间消失，\n或者瞬间移动到别的地方。
154	超越空间，等同于超越次元。\n此番传授必将对汝今后之创作大有助益。
155	汝当与吾等携手……\n踏上穿越亚空间之旅……！！
155-01	青山不改，绿水长流。
156	关于传送的讲解就到这里吧……
157	……唉——\n……筋疲力尽。
LessonCommon.msbt
Dialog_Finish_Body	确定完成了吗？
Dialog_Finish_Button1	是
Dialog_Finish_Button2	否
LessonName.msbt
00	欢迎来到附带导航的课堂
01	二人对战！捉迷藏大战
02	滚滚球
03	ALIEN SHOOTING
04	GO！GO！运动竞技
05	解谜房间
06	刺激赛车
07	3D运动竞技空间
ChexkPoint00	第一次小测验
ChexkPoint01	小测验1
ChexkPoint02	小测验2
ChexkPoint03	小测验3
ChexkPoint04	小测验4
ChexkPoint05	小测验5
ChexkPoint06	小测验6
ChexkPoint07	附加小测验
Explain_00	使用小节点车库体验编程！\n附带导航的课堂等待你的到来……
Explain_01	双方以捉迷藏一决胜负！\n掌握游戏编程的基础知识吧！
Explain_02	利用倾斜的力量让球滚动起来！\n通过切换视角不断探索新的编程课题！
Explain_03	以宇宙为舞台！消灭汹汹来袭的外星人！\n发起编程挑战，制作只属于你的游戏吧！
Explain_04	经典的横版过关动作游戏！\n使用连接功能编程创造丰富多彩的机关！
Explain_05	神秘的房间里……隐藏着沉睡的宝藏！？\n在3D空间内编程设计考验聪明才智的机关吧！
Explain_06	激战！玩家VS自动驾驶AI！\n凭借你的编程让赛车一骑绝尘！！
Explain_07	集合了各种元素的3D动作游戏！\n尽情展示你的编程水平吧！
CheckPoint_00	神秘小测验突然降临……\n向它迈出勇敢的一步吧！
CheckPoint_01	本次小测验将考查你的编程水平！\n没问题！你能行！
CheckPoint_02	本次小测验将考查你的编程水平！\n别担心！你能行！
CheckPoint_03	本次小测验将考查你的编程水平！\n去吧！你能行！
CheckPoint_04	本次小测验将考查你的编程水平！\n相信我！你能行！
CheckPoint_05	本次小测验将考查你的编程水平！\n相信自己！你能行！
CheckPoint_06	本次小测验将考查你的编程水平！\n对你来说这又算什么！
CheckPoint_07	我们为步入程序员生涯的你……\n准备了特殊的谜题。
Lesson_2DAction_00.msbt
000000	欢迎来到第4课！
000	转眼间～～\n附带导航的课堂也走到了一半！
001	这次我们要设计的游戏是……！
002	GO！GO！运动竞技！
003	这是一个为了抵达终点，\n必须闯过重重机关的动作游戏！
004	我们制作的游戏越来越专业了呢～！
005	好，那就赶快开始编程吧！
006	前往程序画面～\nGO！GO！
007	首先，我们需要一个可以操作的\n玩家角色，也就是{color[0400]}{[0001|1b00]}人{[0001|ffff]}{color[ffff]}。
008	把{color[0400]}{[0001|1b00]}人小节点{[0001|ffff]}{color[ffff]}叫出来吧！
009	嗨！\n感觉好久没当主角了呢！
010	请把这个人小节点缩小后\n放到平面上去。
011	接着打开人小节点的设置！
012	首先打开{color[0400]}{[0001|1b00]}颜色{[0001|ffff]}{color[ffff]}……
013	设置为{color[0400]}{[0001|1b00]}淡蓝色{[0001|ffff]}{color[ffff]}！
014	然后把{color[0400]}{[0001|1b00]}跳跃力{[0001|ffff]}{color[ffff]}设置为{color[0400]}{[0001|1b00]}0.50{[0001|ffff]}{color[ffff]}。
015	另外，在这个游戏里，\n人要向右前进……
016	所以要把{color[0400]}{[0001|1b00]}Y轴旋转{[0001|ffff]}{color[ffff]}设置为{color[0400]}{[0001|1b00]}-90.00°{[0001|ffff]}{color[ffff]}，\n让人面向右边。
017	这样就设置完成啦～
018	下一步，我们要让人\n在手柄控制下能移动起来。
019	首先把掌管{[0001|1b00]}L摇杆左右{[0001|ffff]}的\n{color[0400]}{[0001|1b00]}摇杆小节点{[0001|ffff]}{color[ffff]}叫出来。
020	转呀转——\n{[0201]}，\n最近我们常见面呢——
021	把摇杆小节点移动到左边……
022	再把摇杆小节点连接到\n人小节点的{color[0400]}{[0001|1b00]}左右端口{[0001|ffff]}{color[ffff]}！
023	接下来，\n把{color[0400]}{[0001|1b00]}的按键小节点{[0001|ffff]}{color[ffff]}叫出来。
024	请指教！\n又到了疯狂按键的时刻！\n我按按按按按按按！！
025	把按键小节点也移动到左边……
026	再把按键小节点连接到\n人小节点的{color[0400]}{[0001|1b00]}跳跃端口{[0001|ffff]}{color[ffff]}！
027	这样一来{[0001|1b00]}{color[0400]}人{color[ffff]}{[0001|ffff]}就能……
028	听从{[0001|1b00]}{color[0400]}摇杆{color[ffff]}{[0001|ffff]}的指挥{[0001|1b00]}{color[0400]}左右{color[ffff]}{[0001|ffff]}移动——
029	并且在{[0001|1b00]}{color[0400]}键{color[ffff]}{[0001|ffff]}被按下时{color[0400]}{[0001|1b00]}跳跃{[0001|ffff]}{color[ffff]}了！\n请指教！
030	好！\n那就去游戏画面确认一下吧！
031	请尝试用{color[0400]}{[0001|1b00]}摇杆{[0001|ffff]}{color[ffff]}和{color[0400]}{[0001|1b00]}键{[0001|ffff]}{color[ffff]}\n让人走一走、跳一跳。
032	很好！\n成功让人动起来了～
033	虽然这种让人动起来的程序\n已经很久没碰了……\n但是你已经对此很熟悉了吧～
034	言归正传，这是一个需要闯过\n{color[0400]}{[0001|1b00]}长长的场地{[0001|ffff]}{color[ffff]}，向终点进发的游戏。
035	为了能在长长的场地上顺利游玩，\n让我们想办法在人移动时，\n让{[0001|1b00]}{color[0400]}游戏画面也{color[ffff]}{[0001|ffff]}跟着人{[0001|1b00]}{color[0400]}一起移动{color[ffff]}{[0001|ffff]}！
036	好！\n开始编程吧！
037	首先请出我们的老朋友——\n{[0001|1b00]}{color[0400]}游戏画面小节点{color[ffff]}{[0001|ffff]}。
038	哟哟哟～\n{[0201]}～
039	今天能不能拍摄到精彩画面，\n就看你的编程技术够不够高明啦～
040	稍微把游戏画面小节点\n放大一些。
041	下面就开始编写\n能让游戏画面跟随人移动的程序！
042	为此我们需要……
043	把游戏画面小节点{color[0400]}{[0001|1b00]}连接{[0001|ffff]}{color[ffff]}到\n人小节点身上。
044	收到收到没问题——！\n给人小节点做贴身拍摄就好了是吧～
045	天涯海角我都跟拍到底，我的镜头\n会完美记录精彩画面的每一秒～～！
046	好！\n去看看有什么变化吧！
047	请尝试用摇杆和键\n让人走一走、跳一跳。
048	游戏画面跟着人一起动了～！
049	这样一来，\n哪怕场地再长也能游玩到底了！
050	那么！\n是时候开始设计场地了！
051	为了消除游戏画面中的平面，\n请先把{color[0400]}{[0001|1b00]}空间小节点{[0001|ffff]}{color[ffff]}叫出来。
052	……我能看见，\n站在漫长试炼的终点，\n收获稀世珍宝的身影……
053	好，打开空间小节点的设置。
054	把“{color[0400]}{[0001|1b00]}空间的形状{[0001|ffff]}{color[ffff]}”设置为“{color[0400]}{[0001|1b00]}无{[0001|ffff]}{color[ffff]}”。
055	关闭设置画面～
056	然后叫出担任场地的\n{[0001|1b00]}{color[0400]}立方体物体小节点{color[ffff]}{[0001|ffff]}。
057	……你好。\n又见面了，我是物体小节点。
058	把物体小节点\n拉成扁扁～的一条。
059	打开物体小节点的设置画面。
060	这个物体是作为人立足的场地使用，\n所以请只把{color[0400]}{[0001|1b00]}状态{[0001|ffff]}{color[ffff]}中的“{color[0400]}{[0001|1b00]}能看见{[0001|ffff]}{color[ffff]}”\n和“{color[0400]}{[0001|1b00]}能接触{[0001|ffff]}{color[ffff]}”设为{[0001|1b00]}{color[0400]}开启{color[ffff]}{[0001|ffff]}。
061	搞定——！
062	好，去游戏画面确认一下吧！
063	第一个场地做好啦～！
064	之后还要继续这样\n制作更多不同的场地哦～
065	那么，请前往程序画面。
066	很好～～到这里～～～
067	第1步就完成了——！
068a	恭喜恭喜～
068c	干得漂亮！
068d	……好。
069	“GO！GO！运动竞技！”的\n第1步，你感觉如何呀？
070	只是让{[0001|1b00]}{color[0400]}游戏画面跟随人移动{color[ffff]}{[0001|ffff]}起来，\n游戏的气氛一下子就出来了呢！
071	在下个步骤中，\n我们将学习如何设计{color[0400]}{[0001|1b00]}敌方角色{[0001|ffff]}{color[ffff]}！
072	那就第2步再见喽～
Lesson_2DAction_01.msbt
000	等你很久了～
001	我们现在开始\nGO！GO！运动竞技的第2步！
002	请先用摇杆和键\n尝试让人进行移动。
003	我们上次成功地让游戏画面\n跟随人移动了，还记得吧！
004	在第2步中，我们要安排\n{color[0400]}{[0001|1b00]}敌方角色{[0001|ffff]}{color[ffff]}——{color[0400]}{[0001|1b00]}外星人{[0001|ffff]}{color[ffff]}登场。
005	事不宜迟！\n前往程序画面，GO！GO！
006	我们首先要通过“{[0001|1b00]}圆形时尚物体{[0001|ffff]}”中的“{color[0400]}{[0001|1b00]}外星人{[0001|ffff]}{color[ffff]}”\n叫出{[0001|1b00]}{color[0400]}时尚物体小节点{color[ffff]}{[0001|ffff]}。
007	摄人心魄的大眼睛……\n熠熠生辉的身体……
008	令万众为之倾倒的外星人……\n魅力无穷♥
009	将时尚物体小节点放在场地上。
010	打开时尚物体小节点的设置画面。
011	请{color[0400]}{[0001|1b00]}开启状态{[0001|ffff]}{color[ffff]}中的“{color[0400]}{[0001|1b00]}能看见{[0001|ffff]}{color[ffff]}”、“{color[0400]}{[0001|1b00]}能接触{[0001|ffff]}{color[ffff]}”、\n“{color[0400]}{[0001|1b00]}能损坏{[0001|ffff]}{color[ffff]}”、“{color[0400]}{[0001|1b00]}能破坏{[0001|ffff]}{color[ffff]}”。
011000	很好！
012	最好让外星人能面向人……
013	请将{[0001|1b00]}{color[0400]}旋转{color[ffff]}{[0001|ffff]}的{[0001|1b00]}{color[0400]}Y轴{color[ffff]}{[0001|ffff]}设为{color[0400]}{[0001|1b00]}90.00°{[0001|ffff]}{color[ffff]}。
014	关闭设置画面。
014-01	来，让我们再有请一个外星人登场！
015	请{color[0400]}{[0001|1b00]}复制{[0001|ffff]}{color[ffff]}时尚物体小节点。
016	将所复制的时尚物体小节点放在旁边。
017	这样2个外星人的位置就安排好了。
018	接下来请打开\n人小节点的设置画面。
019	请{color[0400]}{[0001|1b00]}开启状态{[0001|ffff]}{color[ffff]}中的“{color[0400]}{[0001|1b00]}能损坏{[0001|ffff]}{color[ffff]}”，\n使人在接触到外星人后能够损坏。
020	设置完成～
021	来吧！让我们去游戏画面\n确认一下外星人的身姿！
022	来！请鼓起勇气\n撞向拦路的外星人～
023	如我们所料，人损坏了～！
024	但是……不觉得跟平时相比\n少了点什么吗～？
025	不错！在人损坏之后，\n希望可以{color[0400]}{[0001|1b00]}自动重来{[0001|ffff]}{color[ffff]}！
026	让我们编写熟悉的套路，\n加入游戏当中吧～
027	请叫出{color[0400]}{[0001|1b00]}物体损坏时小节点{[0001|ffff]}{color[ffff]}。
028	哦？\n你想检查什么物体损坏时的情况呢？
028000	关于损坏物体，\n我可是无所不知！
029	请略微移动\n物体损坏时小节点……
030	请打开物体损坏时小节点的设置画面。
031	打开“{color[0400]}{[0001|1b00]}要检查什么？{[0001|ffff]}{color[ffff]}”……
032	仅将{color[0400]}{[0001|1b00]}人{[0001|ffff]}{color[ffff]}设置为{color[0400]}{[0001|1b00]}开启{[0001|ffff]}{color[ffff]}～
033	关闭当前画面。
034	然后关闭设置画面。
035	好的，要检查{color[0400]}{[0001|1b00]}人损坏时{[0001|ffff]}{color[ffff]}的情况对吧？
035-01	包在我身上！
036	接下来请叫出{color[0400]}{[0001|1b00]}计时小节点{[0001|ffff]}{color[ffff]}。
037	唔……\n怎么每堂课都要叫我出来啊。
037000	要是能规划好日程提前通知我，\n我就谢天谢地了……
038	然后……\n也略微移动计时小节点。
039	请连接{color[0400]}{[0001|1b00]}物体损坏时小节点{[0001|ffff]}{color[ffff]}和\n{color[0400]}{[0001|1b00]}计时小节点{[0001|ffff]}{color[ffff]}。
040	最后！\n请叫出{color[0400]}{[0001|1b00]}重来小节点{[0001|ffff]}{color[ffff]}！
041	唉……\n真想重新来过……
042	怎么了？
043	之前一不小心，\n冲着物体损坏时小节点\n叫了声“妈妈”。
044	唉……\n真想重新来过……
045	别往心里去！
045-01	我随时都愿意\n像妈妈一样疼爱你！
046	……\n唉……真想重新来过。
047	那么……\n再略微移动重来小节点。
048	请连接{color[0400]}{[0001|1b00]}计时小节点{[0001|ffff]}{color[ffff]}和\n{color[0400]}{[0001|1b00]}重来小节点{[0001|ffff]}{color[ffff]}。
049	这样一来，和平时一样，\n{color[0400]}{[0001|1b00]}在人损坏1秒后游戏就会重来{[0001|ffff]}{color[ffff]}……
050	大功告成～
051	去游戏画面确认一下吧！
052	请撞向外星人～
053	顺利重来了～！
054	不过……\n其实还有一个问题……
055	能否请你{color[0400]}{[0001|1b00]}掉下场地{[0001|ffff]}{color[ffff]}看看？
056	掉下去之后什么都没发生。
057	是不是希望在{color[0400]}{[0001|1b00]}掉下场地时{[0001|ffff]}{color[ffff]}也能重来？
058	我们会在下个步骤中\n通过编程实现这一机制！
059	这次就到此为止！\n前往程序画面吧。
060	那么～～这样一来～～
061	第2步就完成了～！
062-00	恭喜你啦♥
062-01	恭喜！
062-02	恭喜你……
062-03	还可以吧。
063	那么，下次我们将在第3步中，\n通过编程实现{color[0400]}{[0001|1b00]}掉下场地后重来的机制{[0001|ffff]}{color[ffff]}。
064	会有全新小节点登场亮相，\n敬请期待！
065	让我们在下个步骤再会～
Lesson_2DAction_02.msbt
000	你好～～！
001	让我们开始第4课的\n第3步教学～～
002	我们在上个步骤中，\n安排了外星人作为{color[0400]}{[0001|1b00]}敌方角色{[0001|ffff]}{color[ffff]}……
002-001	并编写了当人与外星人碰撞，\n人发生损坏时会自动{color[0400]}{[0001|1b00]}重来{[0001|ffff]}{color[ffff]}的程序！
003	不过……请尝试掉下场地。
004	……\n什么都没发生。
005	就仿佛坠入无底深渊。
006	……对游戏而言，\n这种情况不太合适～
007	所以我们需要编写{[0001|1b00]}{color[0400]}当掉下场地时{color[ffff]}{[0001|ffff]}\n游戏将会{color[0400]}{[0001|1b00]}重来{[0001|ffff]}{color[ffff]}的程序！
008	来～～前往程序画面～～
009	GO！GO！
009-01	因为想把“{color[0400]}{[0001|1b00]}人损坏时{[0001|ffff]}{color[ffff]}”\n作为游戏重来的条件……
009-02	那么只要{color[0400]}{[0001|1b00]}在人掉下场地时\n将人破坏{[0001|ffff]}{color[ffff]}，游戏就能够重来了！
010	至于人是否已掉下场地……
011	只要观察{[0001|1b00]}{color[0400]}人的位置{color[ffff]}{[0001|ffff]}就知道了！
013	那就让我们叫出专门负责\n监测位置的小节点……\n{color[0400]}{[0001|1b00]}位置感应器小节点{[0001|ffff]}{color[ffff]}吧！
014	请依次打开{[0001|1b00]}物体 {[0001|ffff]}{[0001|0500]} {[0001|ffff]}{[0001|1b00]}感应器 {[0001|ffff]}{[0001|0500]} {[0001|ffff]}{[0001|1b00]}位置感应器{[0001|ffff]}，\n来叫出{[0001|1b00]}{color[0400]}位置感应器小节点{color[ffff]}{[0001|ffff]}！
015	你好！\n我是位置感应器小节点！
016	要监测人的位置是吧？
017	明白！\n交给我吧！
018	将位置感应器小节点\n移至人小节点上方附近……
019	请打开位置感应器小节点的设置画面。
020	并{color[0400]}{[0001|1b00]}关闭状态{[0001|ffff]}{color[ffff]}中的“{color[0400]}{[0001|1b00]}能看见{[0001|ffff]}{color[ffff]}”～
021	请关闭设置画面！
022	然后{color[0400]}{[0001|1b00]}连接位置感应器小节点{[0001|ffff]}{color[ffff]}与\n{color[0400]}{[0001|1b00]}人小节点{[0001|ffff]}{color[ffff]}。
023	这样一来，位置感应器小节点\n就能够输出{color[0400]}{[0001|1b00]}人的位置{[0001|ffff]}{color[ffff]}了。
024	接下来要编写判断人的位置\n{color[0400]}{[0001|1b00]}是否低于场地{[0001|ffff]}{color[ffff]}的程序。
025	这里要使用{color[0400]}{[0001|1b00]}比较小节点{[0001|ffff]}{color[ffff]}！
026	请叫出{color[0400]}{[0001|1b00]}＜{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1b00]}比较小节点{[0001|ffff]}{color[ffff]}！——
027	是不是很想知道……\n人是否已掉下场地？
028	将比较小节点\n放在位置感应器小节点旁边……
029	先连接位置感应器小节点的{color[0400]}{[0001|1b00]}Y端口{[0001|ffff]}{color[ffff]}\n与比较小节点的{color[0400]}{[0001|1b00]}输入1端口{[0001|ffff]}{color[ffff]}。
030	这样一来，{color[0400]}{[0001|1b00]}人在Y轴方向的位置{[0001|ffff]}{color[ffff]}……\n即{[0001|1b00]}{color[0400]}人的高度{color[ffff]}{[0001|ffff]}将被输入比较小节点中。
031	为了比较{color[0400]}{[0001|1b00]}人的高度{[0001|ffff]}{color[ffff]}\n{color[0400]}{[0001|1b00]}是否低于场地的高度{[0001|ffff]}{color[ffff]}……
032	请叫出{color[0400]}{[0001|1b00]}常数小节点{[0001|ffff]}{color[ffff]}！
033	你好！\n我是永不气馁的常数小节点！
033-01	将这个常数小节点\n与刚才的{[0001|1b00]}{color[0400]}人的高度{color[ffff]}{[0001|ffff]}进行比较……
033-02	就能够判断\n{color[0400]}{[0001|1b00]}人的位置是否低于场地{[0001|ffff]}{color[ffff]}了！
034	请打开常数小节点的设置画面。
035	为比较人的位置是否低于场地，\n让我们设置一个{color[0400]}{[0001|1b00]}低于场地位置的数值{[0001|ffff]}{color[ffff]}。
036	就{color[0400]}{[0001|1b00]}-3.00{[0001|ffff]}{color[ffff]}好了！
037	请关闭设置画面。
038	移动常数小节点……
039	并连接常数小节点和\n比较小节点的{color[0400]}{[0001|1b00]}输入2端口{[0001|ffff]}{color[ffff]}。
040	这样一来，当人的位置高度\n低于{color[0400]}{[0001|1b00]}-3.00{[0001|ffff]}{color[ffff]}……
041	也就是{color[0400]}{[0001|1b00]}掉下场地时{[0001|ffff]}{color[ffff]}，\n比较小节点将会{[0001|1b00]}{color[0400]}输出信号{color[ffff]}{[0001|ffff]}。
042	能够判断{color[0400]}{[0001|1b00]}人是否已掉下场地{[0001|ffff]}{color[ffff]}的程序\n就此顺利完成！
043	我们要利用它\n继续编写{color[0400]}{[0001|1b00]}人{[0001|ffff]}{color[ffff]}在掉下场地时\n{color[0400]}{[0001|1b00]}会损坏{[0001|ffff]}{color[ffff]}的程序。
044	请依次打开{[0001|1b00]}物体 {[0001|ffff]}{[0001|0500]} {[0001|ffff]}{[0001|1b00]}放出、消除、引力 {[0001|ffff]}{[0001|0500]} {[0001|ffff]}{[0001|1b00]}破坏物体{[0001|ffff]}，\n来叫出{color[0400]}{[0001|1b00]}破坏物体小节点{[0001|ffff]}{color[ffff]}！
045	呵呵……呵呵呵呵呵……
046	你想破坏物体是吧？
047	呵呵……交给我好了。
048	灰飞烟灭……如你所愿。
049	破坏物体小节点\n能够{color[0400]}{[0001|1b00]}破坏所接触的物体{[0001|ffff]}{color[ffff]}！
050	让我们移动\n破坏物体小节点……
051	请打开设置画面。
052	并{color[0400]}{[0001|1b00]}关闭状态{[0001|ffff]}{color[ffff]}中的“{color[0400]}{[0001|1b00]}能看见{[0001|ffff]}{color[ffff]}”。
053	请打开“{color[0400]}{[0001|1b00]}要破坏什么？{[0001|ffff]}{color[ffff]}”。
054	可以在这里设置“要破坏什么？”。
055	因为这次只想破坏人……\n所以请仅将{color[0400]}{[0001|1b00]}人{[0001|ffff]}{color[ffff]}设为{color[0400]}{[0001|1b00]}开启{[0001|ffff]}{color[ffff]}。
056	干得漂亮！
057	关闭设置画面吧。
058	然后请{color[0400]}{[0001|1b00]}连接破坏物体小节点{[0001|ffff]}{color[ffff]}与\n{color[0400]}{[0001|1b00]}人小节点{[0001|ffff]}{color[ffff]}。
059	这样破坏物体小节点\n将与人粘在一起……
060	始终{color[0400]}{[0001|1b00]}与人接触{[0001|ffff]}{color[ffff]}！
061	呵呵呵……
067	最后，请连接{color[0400]}{[0001|1b00]}比较小节点{[0001|ffff]}{color[ffff]}\n与{color[0400]}{[0001|1b00]}破坏物体小节点{[0001|ffff]}{color[ffff]}！
068	好！这样一来，\n当{color[0400]}{[0001|1b00]}比较小节点输出信号时{[0001|ffff]}{color[ffff]}，\n{color[0400]}{[0001|1b00]}人就会损坏{[0001|ffff]}{color[ffff]}了！
069	呵呵……就是说……\n当人掉下场地之时……
070	我就会……\n破坏他……
071	呵呵呵……\n当然轮不到我登场是再好不过……\n呵呵……
072	那么，\n让我们去游戏画面确认看看！
073	请尝试掉下场地！
074	人掉下场地后发生损坏……\n并且游戏自动重来了～！
075	动作游戏的范儿\n是不是一下子就出来了？
076	让我们前往程序画面～
077	那么～～这样一来～～
078	第3步就完成了！！
079-00	恭喜你。
079-01	呵呵……恭喜。
079-02	干得好！
079-03	恭喜！
080	这次我们编写了\n在人掉下场地时，\n将人破坏的程序！
082	从下个步骤开始，\n我们还将通过编程，\n在场地上添加更多的机关～
083	让我们在下个步骤再会～
Lesson_2DAction_03.msbt
000	欢迎光临～～！
001	让我们进入\nGO！GO！运动竞技的第4步！
002	先复习一下上次学过的内容。
003	请掉下场地试试！
004	上次我们实现了人掉下场地后\n会发生损坏的机制对吧～！
006	好期待呀！从这一步开始，\n我们终于要通过编程制作\n满载各种机关的场地了～！
007	在这一步中，\n我们将制作摇摇晃晃的\n{color[0400]}{[0001|1b00]}跷跷板{[0001|ffff]}{color[ffff]}场地。
008	来，事不宜迟，\n前往程序画面～！
009	GO！GO！
010	请先叫出担任跷跷板底座的\n{[0001|1b00]}{color[0400]}球体{color[ffff]}{[0001|ffff]}{color[0400]}{[0001|1b00]}物体小节点{[0001|ffff]}{color[ffff]}！
011	……你好。\n我喜静不喜动，\n堪称天生的底座。
012	将这个物体小节点\n放在第一个场地前方……
013	请打开设置画面！
014	因为要用作底座，\n请仅{color[0400]}{[0001|1b00]}开启状态{[0001|ffff]}{color[ffff]}中的“{color[0400]}{[0001|1b00]}能看见{[0001|ffff]}{color[ffff]}”～
015	关闭设置画面。
016	接下来请叫出担任跷跷板的\n{[0001|1b00]}{color[0400]}立方体{color[ffff]}{[0001|ffff]}{color[0400]}{[0001|1b00]}物体小节点{[0001|ffff]}{color[ffff]}！
017	……你好。\n虽然静止也不错，但尽情摇摆时\n我同样能够乐在其中。
018	请将这个立方体物体小节点\n调节成跷跷板的形状，\n并放在球体物体小节点之上。
019	打开设置画面！
020	请{color[0400]}{[0001|1b00]}开启状态{[0001|ffff]}{color[ffff]}中的\n“{color[0400]}{[0001|1b00]}能看见{[0001|ffff]}{color[ffff]}”、“{color[0400]}{[0001|1b00]}能接触{[0001|ffff]}{color[ffff]}”、“{color[0400]}{[0001|1b00]}能移动{[0001|ffff]}{color[ffff]}”～
021	然后打开{color[0400]}{[0001|1b00]}颜色{[0001|ffff]}{color[ffff]}。
022	设为{color[0400]}{[0001|1b00]}黄色{[0001|ffff]}{color[ffff]}吧～！
023	再打开{color[0400]}{[0001|1b00]}连接面{[0001|ffff]}{color[ffff]}……
024	请将“{color[0400]}{[0001|1b00]}自己的连接面{[0001|ffff]}{color[ffff]}”和\n“{color[0400]}{[0001|1b00]}连接对象的连接面{[0001|ffff]}{color[ffff]}”都设为{[0001|1b00]}{color[0400]}中央{color[ffff]}{[0001|ffff]}，\n让跷跷板连接到底座的中心。
025	关闭当前画面。
026	关闭设置画面～
027	然后请{color[0400]}{[0001|1b00]}连接{[0001|ffff]}{color[ffff]}立方体物体小节点\n与作为底座的球体物体小节点～
028	让我们去确认一下\n现在发生了什么变化～！
029	请在场地上前进，\n走上黄色的跷跷板！
030	虽然看似跷跷板……
031	但走上去却纹丝不动！
032	这还叫什么跷跷板！\n你也这么觉得吧……？
033	那么，就让我们通过编程\n将这个冒牌货变成\n真正的跷跷板吧！
034	为了让这个场地\n像跷跷板一样上下晃动……
035	需要进行{color[0400]}{[0001|1b00]}特殊连接{[0001|ffff]}{color[ffff]}！
036	为此～
037	请依次打开{[0001|1b00]}物体{[0001|ffff]} {[0001|0500]}{[0001|ffff]} {[0001|1b00]}连接零件{[0001|ffff]}\n{[0001|0500]}{[0001|ffff]} {[0001|1b00]}铰链连接{[0001|ffff]} {[0001|0500]}{[0001|ffff]} {[0001|1b00]}Z轴铰链{[0001|ffff]}，\n来叫出{color[0400]}{[0001|1b00]}铰链连接小节点{[0001|ffff]}{color[ffff]}！
038	哈啰！大家好！
039	今天也要骨碌骨碌转个痛快哦～～！
040	将这个铰链连接小节点\n{color[0400]}{[0001|1b00]}夹在当中进行连接{[0001|ffff]}{color[ffff]}的话……
041	就能让所连接的物体\n{color[0400]}{[0001|1b00]}骨碌骨碌转起来{[0001|ffff]}{color[ffff]}！
042	没错！\n完全正确！
043	像做三明治一样把我夹住～～！\n一起骨碌骨碌～旋舞起来吧！
044	那么，请将之前连上的\n立方体物体小节点\n和球体物体小节点{color[0400]}{[0001|1b00]}断开连接{[0001|ffff]}{color[ffff]}……
045	并将铰链连接小节点\n放在两者之间。
046	然后先{color[0400]}{[0001|1b00]}连接立方体物体小节点{[0001|ffff]}{color[ffff]}与\n{color[0400]}{[0001|1b00]}铰链连接小节点{[0001|ffff]}{color[ffff]}……
047	再{color[0400]}{[0001|1b00]}连接铰链连接小节点{[0001|ffff]}{color[ffff]}与\n{color[0400]}{[0001|1b00]}球体物体小节点{[0001|ffff]}{color[ffff]}……
048	太棒了！\n这下{[0001|1b00]}{color[0400]}立方体{color[ffff]}{[0001|ffff]}\n就能骨碌骨碌转起来了～
049	骨碌骨碌～
050	来，让我们去确认一下\n发生了什么变化！
051	来，请像之前一样\n走上黄色的跷跷板！
052	骨碌骨碌……
053	……转是转起来了，\n但过犹不及，这已经\n不能称之为跷跷板了……
054	让他更符合跷跷板的概念吧！
055	没问题没问题！\n符合跷跷板的概念是吧？
056	那就要用到我的{color[0400]}{[0001|1b00]}范围{[0001|ffff]}{color[ffff]}设置了！\n快去调节一下吧～～～！
057	那么，请打开\n铰链连接小节点的设置画面。
057-01	可以在{color[0400]}{[0001|1b00]}范围{[0001|ffff]}{color[ffff]}选项中\n设置{color[0400]}{[0001|1b00]}旋转角度的范围{[0001|ffff]}{color[ffff]}。
058	请将左滑块调至{color[0400]}{[0001|1b00]}-45.00{[0001|ffff]}{color[ffff]}，\n将右滑块调至{color[0400]}{[0001|1b00]}45.00{[0001|ffff]}{color[ffff]}。
059	这样一来，旋转{color[0400]}{[0001|1b00]}范围{[0001|ffff]}{color[ffff]}\n就固定在{color[0400]}{[0001|1b00]}-45°{[0001|ffff]}{color[ffff]}至{color[0400]}{[0001|1b00]}45°{[0001|ffff]}{color[ffff]}区间内了！
060	关闭设置画面……
061	确认一下结果吧！
062	来，走上黄色的跷跷板吧！
063	成功了！\n像跷跷板一样动起来了～！
064	这正是\n铰链连接小节点的力量！
065	如果没有疑问，\n让我们前往程序画面～
066	那么～～这样一来～～
067	第4步就完成了！
068-00	……恭喜了。
068-01	恭喜你～～～！！
068-02	……骨碌骨碌。
069	这次我们使用铰链连接小节点进行编程，\n在游戏中设置了跷跷板。
070	在下个步骤当中，\n我们还将通过编程\n设置其他别具一格的机关～！
071	让我们在下个步骤再会！
Lesson_2DAction_04.msbt
000	欢迎来到\nGO！GO！运动竞技的第5步～！
001	我们照例先复习一下\n上次学过的内容！
002	请在场地上前进，\n走上黄色的跷跷板！
003	好！\n上次我们使用{color[0400]}{[0001|1b00]}铰链连接小节点{[0001|ffff]}{color[ffff]}\n制作了跷跷板对吧！
004	在这一步中，\n我们将通过编程制作\n{color[0400]}{[0001|1b00]}可以推动的箱子{[0001|ffff]}{color[ffff]}机关！
005	请大家重复我们的口号。
006	前往程序画面～～
007	GO！GO！
008	首先从制作场地开始。
009	请叫出{[0001|1b00]}{color[0400]}立方体{color[ffff]}{[0001|ffff]}{color[0400]}{[0001|1b00]}物体小节点{[0001|ffff]}{color[ffff]}！
010	将这个物体小节点\n调节成场地的大小，\n并放在蓝框处。
011	打开物体小节点的设置画面！
012	仅{color[0400]}{[0001|1b00]}开启状态{[0001|ffff]}{color[ffff]}中的“{color[0400]}{[0001|1b00]}能看见{[0001|ffff]}{color[ffff]}”和“{color[0400]}{[0001|1b00]}能接触{[0001|ffff]}{color[ffff]}”！
013	设置完成～！
014	接下来请叫出{color[0400]}{[0001|1b00]}立方体{[0001|ffff]}{color[ffff]}{[0001|1b00]}{color[0400]}物体小节点{color[ffff]}{[0001|ffff]}，\n要让他来担任{color[0400]}{[0001|1b00]}可以推动的箱子{[0001|ffff]}{color[ffff]}。
015	……你好。\n我是个一推就跑的小节点。
016	请将这个物体小节点\n放在场地的上方……
017	然后打开设置画面！
018	仅{color[0400]}{[0001|1b00]}开启状态{[0001|ffff]}{color[ffff]}中的“{color[0400]}{[0001|1b00]}能看见{[0001|ffff]}{color[ffff]}”、\n“{color[0400]}{[0001|1b00]}能接触{[0001|ffff]}{color[ffff]}”、“{color[0400]}{[0001|1b00]}能移动{[0001|ffff]}{color[ffff]}”。
019	为了方便辨识，\n不妨打开{color[0400]}{[0001|1b00]}颜色{[0001|ffff]}{color[ffff]}选项，\n给箱子换个颜色。
020	换成{color[0400]}{[0001|1b00]}淡蓝色{[0001|ffff]}{color[ffff]}吧～
021	请关闭设置画面！
022	让我们去确认一下效果～！
023	请走上跷跷板的下一个场地。
025	推动这个{color[0400]}{[0001|1b00]}淡蓝色的箱子{[0001|ffff]}{color[ffff]}试试！
026	请继续推箱子，一直推出场地外。
027	掉下去了～
028	尽管掉下去是理所当然的……
029	但我们想实现的是\n即使箱子被推出场地外，\n也{color[0400]}{[0001|1b00]}不会掉下去{[0001|ffff]}{color[ffff]}的机关！
030	让我们开始编程吧！
031	若想让箱子既能被推动……\n同时又不会掉下场地……
032	这种时候又要用到{color[0400]}{[0001|1b00]}特殊连接{[0001|ffff]}{color[ffff]}！
033	请依次选择{[0001|1b00]}物体{[0001|ffff]} {[0001|0500]}{[0001|ffff]} {[0001|1b00]}连接零件{[0001|ffff]}\n{[0001|0500]}{[0001|ffff]} {[0001|1b00]}滑动连接{[0001|ffff]} {[0001|0500]}{[0001|ffff]} {[0001|1b00]}X轴滑动{[0001|ffff]}，\n来叫出{color[0400]}{[0001|1b00]}滑动连接小节点{[0001|ffff]}{color[ffff]}。
034	你就是传说中的程序员吧！
035	我的名字是……\n滑动连接小节点！
036	……我、我！\n我会终生追随你的！
037	将这个滑动连接小节点\n{color[0400]}{[0001|1b00]}夹在当中进行连接{[0001|ffff]}{color[ffff]}的话，
038	就能让所连接的物体\n{color[0400]}{[0001|1b00]}仅在一个方向上移动{[0001|ffff]}{color[ffff]}！
039	是这样的！
040	{[0201]}！\n请给我一个表现的机会！
041	那么就试试看吧。
043	请将箱子……也就是{color[0400]}{[0001|1b00]}上方的物体小节点{[0001|ffff]}{color[ffff]}，\n与{[0001|1b00]}{color[0400]}滑动连接小节点{color[ffff]}{[0001|ffff]}进行连接。
044	然后将{color[0400]}{[0001|1b00]}滑动连接小节点{[0001|ffff]}{color[ffff]}与场地……\n也就是{color[0400]}{[0001|1b00]}下方的物体小节点{[0001|ffff]}{color[ffff]}进行连接。
045	好了！
046	我会让箱子只能在{[0001|1b00]}{color[0400]}X方向{color[ffff]}{[0001|ffff]}……
047	也就是{color[0400]}{[0001|1b00]}只能往左往右{[0001|ffff]}{color[ffff]}自由移动！
048	{[0201]}！\n请看看我的成果！
049	好，让我们去确认一下\n发生了什么变化！
050	到箱子旁边\n推动箱子试试～
051	哦哦～\n毫无阻碍地～～～\n飘在半空中飞走了～
052	真有趣啊！
053	但要是飞得不见踪影\n就不方便使用了，\n稍作调整吧。
054	来，前往程序画面！
055	{[0201]}，\n您觉得怎么样！？
056	什么！？\n飞得不见踪影，\n不方便使用是吗！？
057	……真对不起，\n我会承担责任的！
058	不用，没什么大不了的。
059	来，{[0201]}，\n请打开滑动连接小节点的设置画面。
060	可以用这个{color[0400]}{[0001|1b00]}范围{[0001|ffff]}{color[ffff]}\n来设置所连接物体的{[0001|1b00]}{color[0400]}移动范围{color[ffff]}{[0001|ffff]}！
061	请将左滑块设为{color[0400]}{[0001|1b00]}0.00{[0001|ffff]}{color[ffff]}，\n将右滑块设为{color[0400]}{[0001|1b00]}3.00{[0001|ffff]}{color[ffff]}！
062	关闭设置画面！
063	……这是弥补过失的机会。
064	{[0201]}！\n我……我……！\n这次会竭尽全力的！！
065	来，让我们去游戏画面看看吧！
066	请推动箱子。
067	在中途停下来了！
068	这样就便于使用了～！
069	好了，现在前往程序画面。
070	……怎么样？
071	哦哦！\n看来是成功了！
072	太好了，\n没让{[0201]}失望……！！
073	最后，让我们来\n制作下一个场地吧！
074	请复制这个物体小节点！
075	然后请调节尺寸，\n并将其移至蓝框处。
076	再将这个场地也复制一下……
077	放在稍微往下一点的地方。
078	继续复制！
079	继续往下放。
080	这样就做出了\n如同阶梯般的场地！
081	让我们去游戏画面确认一下！
082	推动箱子作为落脚点，\n向阶梯场地进发！
083	场地的种类\n也越发丰富多彩了～！
084	如果没有什么疑问，\n请前往程序画面吧。
085	那么～～这样一来～～！
086	第5步就完成了！
087-00	恭喜你了！！
087-01	……恭喜了。
087-02	爱推才会赢。
088	这次我们用滑动连接小节点\n制作了可以推动的箱子机关。
089	下次会通过编程制作出\n更加有技术含量的机关哦～
090	敬请期待下个步骤！
Lesson_2DAction_05.msbt
000	等你很久了～！
001	GO！GO！运动竞技\n已进入白热化阶段！
002	我们将继续编程，\n在游戏中加入大量机关！
003	这次呢～
004	我们要编写{color[0400]}{[0001|1b00]}移动落脚点{[0001|ffff]}{color[ffff]}的程序！
005	那么照例，\n我们的口号是～
006	前往程序画面～～
007	GO！GO！
008	那么，在制作移动落脚点之前，\n我想说一件事……
009	每次为确认效果，\n都需要在场地上走一遍……\n是不是比较麻烦～？
010	因此，让我们想办法\n直接传送到想确认的位置吧！
011	说到传送～
012	请叫出{color[0400]}{[0001|1b00]}传送物体入口小节点{[0001|ffff]}{color[ffff]}！
013	呜呼，求道者啊，\n坚信自己的选择吧。
014	将传送物体入口小节点放在\n{[0001|1b00]}{color[0400]}与人小节点重合{color[ffff]}{[0001|ffff]}的地方……
015	请打开设置画面！
016	将{color[0400]}{[0001|1b00]}传送ID{[0001|ffff]}{color[ffff]}设为{color[0400]}{[0001|1b00]}H{[0001|ffff]}{color[ffff]}。
017	打开“{color[0400]}{[0001|1b00]}要传送什么？{[0001|ffff]}{color[ffff]}”……
018	仅将{color[0400]}{[0001|1b00]}人{[0001|ffff]}{color[ffff]}设为{color[0400]}{[0001|1b00]}开启{[0001|ffff]}{color[ffff]}。
019	关闭当前画面……
020	关闭设置画面！
021	接下来，在阶梯场地处\n叫出{color[0400]}{[0001|1b00]}传送物体出口小节点{[0001|ffff]}{color[ffff]}！
022	呜呼，求道者啊，\n唯有一往无前\n方为解惑之道。
023	将传送物体出口小节点\n放在传送目标地点。
024	请打开设置画面！
025	将{color[0400]}{[0001|1b00]}传送ID{[0001|ffff]}{color[ffff]}设为{color[0400]}{[0001|1b00]}H{[0001|ffff]}{color[ffff]}！
026	请关闭设置画面。
027	这样只要游戏一开始，\n人就会被传送至阶梯场地处了！
028	不妨一试。
029	瞬间移动至阶梯场地了～！
030	这样在需要确认的时候就轻松了！
031	言归正传，\n我们去制作移动落脚点吧～！
032	制作移动落脚点需要使用\n上次也登场过的{color[0400]}{[0001|1b00]}滑动连接小节点{[0001|ffff]}{color[ffff]}！
033	请先叫出{[0001|1b00]}{color[0400]}球体{color[ffff]}{[0001|ffff]}{color[0400]}{[0001|1b00]}物体小节点{[0001|ffff]}{color[ffff]}！
034	将{color[0400]}{[0001|1b00]}物体小节点{[0001|ffff]}{color[ffff]}放在蓝框处。
035	然后打开{[0001|1b00]}{color[0400]}球体{color[ffff]}{[0001|ffff]}{color[0400]}{[0001|1b00]}物体小节点{[0001|ffff]}{color[ffff]}的设置画面～
036	仅{color[0400]}{[0001|1b00]}开启状态{[0001|ffff]}{color[ffff]}中的“{color[0400]}{[0001|1b00]}能看见{[0001|ffff]}{color[ffff]}”！
037	好了！
038	接下来请叫出\n用作落脚点的{[0001|1b00]}{color[0400]}立方体{color[ffff]}{[0001|ffff]}{color[0400]}{[0001|1b00]}物体小节点{[0001|ffff]}{color[ffff]}！
039	……你好，\n我来送你到目的地。
040	将这个物体小节点\n调节成落脚点的形状，\n并放在蓝框处。
041	然后打开物体小节点的设置画面！
042	仅{color[0400]}{[0001|1b00]}开启状态{[0001|ffff]}{color[ffff]}中的“{color[0400]}{[0001|1b00]}能看见{[0001|ffff]}{color[ffff]}”、\n“{color[0400]}{[0001|1b00]}能接触{[0001|ffff]}{color[ffff]}”、“{color[0400]}{[0001|1b00]}能移动{[0001|ffff]}{color[ffff]}”。
043	打开{color[0400]}{[0001|1b00]}颜色{[0001|ffff]}{color[ffff]}～
044	设置为{color[0400]}{[0001|1b00]}黄绿色{[0001|ffff]}{color[ffff]}！
045	打开{color[0400]}{[0001|1b00]}连接面{[0001|ffff]}{color[ffff]}。
046	请将“{color[0400]}{[0001|1b00]}自己的连接面{[0001|ffff]}{color[ffff]}”和\n“{color[0400]}{[0001|1b00]}连接对象的连接面{[0001|ffff]}{color[ffff]}”都设为{[0001|1b00]}{color[0400]}中央{color[ffff]}{[0001|ffff]}。
047	关闭当前画面～
048	设置完成～！
049	接下来请叫出负责{color[0400]}{[0001|1b00]}Y轴滑动{[0001|ffff]}{color[ffff]}的\n{color[0400]}{[0001|1b00]}滑动连接小节点{[0001|ffff]}{color[ffff]}！
050	{[0201]}……！\n你再次起用我了！
051	我……\n即使赴汤蹈火，\n也会终生追随你的！
051-01	这次我负责{color[0400]}{[0001|1b00]}Y轴滑动{[0001|ffff]}{color[ffff]}，\n可让所连接的物体{[0001|1b00]}{color[0400]}上下{color[ffff]}{[0001|ffff]}移动！
052	将滑动连接小节点\n放在蓝框处……
053	请连接{[0001|1b00]}{color[0400]}立方体{color[ffff]}{[0001|ffff]}{color[0400]}{[0001|1b00]}物体小节点{[0001|ffff]}{color[ffff]}与\n{color[0400]}{[0001|1b00]}滑动连接小节点{[0001|ffff]}{color[ffff]}。
054	并连接{color[0400]}{[0001|1b00]}滑动连接小节点{[0001|ffff]}{color[ffff]}与\n{color[0400]}{[0001|1b00]}球体物体小节点{[0001|ffff]}{color[ffff]}～
055	如此一来，这两个物体小节点\n就{color[0400]}{[0001|1b00]}隔着滑动连接小节点{[0001|ffff]}{color[ffff]}\n连接在一起了！
056	让我们来确认一下\n发生了什么变化吧！
057	啊……\n落脚点掉下去了……
057-01	如果没看清楚，\n可以按“{color[0400]}{[0001|1b00]}重来{[0001|ffff]}{color[ffff]}”再确认一遍。
058	我们编程的目标是\n让这个落脚点能够{color[0400]}{[0001|1b00]}上下移动{[0001|ffff]}{color[ffff]}！
059	前往程序画面～
060	想让落脚点……也就是立方体\n上下移动是吧！
061	那就请向\n我的输入端口输入数值吧！
062	我会根据{color[0400]}{[0001|1b00]}传递到输入端口的数值{[0001|ffff]}{color[ffff]}，\n让立方体的位置{color[0400]}{[0001|1b00]}发生偏移{[0001|ffff]}{color[ffff]}！
063	试试就明白了。
064	请先叫出{color[0400]}{[0001|1b00]}常数小节点{[0001|ffff]}{color[ffff]}。
065	你好！\n我是纹丝不动、\n永葆常态的常数小节点！
066	请将这个常数小节点\n与滑动连接小节点连接！
067	这样一来，便将数值{color[0400]}{[0001|1b00]}1.00{[0001|ffff]}{color[ffff]}\n输入了滑动连接小节点。
068	让我们来确认一下\n数值是否已输入\n滑动连接小节点！
069	看，落脚点没有掉下去！
070	而且被{color[0400]}{[0001|1b00]}固定{[0001|ffff]}{color[ffff]}在\n与球体发生{color[0400]}{[0001|1b00]}偏移的位置{[0001|ffff]}{color[ffff]}！
071	像这样将数值输入\n滑动连接小节点的话……
072	他就会根据输入的数值大小，\n{color[0400]}{[0001|1b00]}让所连接的物体发生偏移{[0001|ffff]}{color[ffff]}！
073	那我们就利用这个原理\n来为{color[0400]}{[0001|1b00]}移动落脚点{[0001|ffff]}{color[ffff]}编程吧！
074	请删除连接在常数小节点与\n滑动连接小节点之间的线。
075	然后……\n取而代之，使用{color[0400]}{[0001|1b00]}能够输出\n变化的数值{[0001|ffff]}{color[ffff]}的小节点进行连接。
077	让我们请出{color[0400]}{[0001|1b00]}计数小节点{[0001|ffff]}{color[ffff]}！
078	我会不停地计数，\n然后输出这个数值。
079	请将常数小节点连接到\n这个计数小节点的{color[0400]}{[0001|1b00]}增加端口{[0001|ffff]}{color[ffff]}！
080	这样一来，计数小节点\n就会{color[0400]}{[0001|1b00]}连续不断地计数{[0001|ffff]}{color[ffff]}了。
081	接下来，\n请打开计数小节点的设置画面～
082	将{color[0400]}{[0001|1b00]}模式{[0001|ffff]}{color[ffff]}设为{color[0400]}{[0001|1b00]}来回{[0001|ffff]}{color[ffff]}。
083	将{color[0400]}{[0001|1b00]}计数范围{[0001|ffff]}{color[ffff]}的左滑块设为{color[0400]}{[0001|1b00]}-3{[0001|ffff]}{color[ffff]}，\n右滑块设为{color[0400]}{[0001|1b00]}3{[0001|ffff]}{color[ffff]}～
084	这样一来，计数小节点就会在\n{color[0400]}{[0001|1b00]}-3{[0001|ffff]}{color[ffff]}与{color[0400]}{[0001|1b00]}3{[0001|ffff]}{color[ffff]}之间{color[0400]}{[0001|1b00]}来回计数{[0001|ffff]}{color[ffff]}了。
085	关闭设置画面。
086	连接计数小节点\n与滑动连接小节点！
087	他们会如何运作呢……\n让我们去游戏画面确认一下！
088	……晴天霹雳！
089	这疯狂移动的落脚点……\n简直是过山车般的感觉。
090	去程序画面进行调整吧！
091	常数小节点的数值是{color[0400]}{[0001|1b00]}1.00{[0001|ffff]}{color[ffff]}……
092	所以计数小节点\n每次计数增加{color[0400]}{[0001|1b00]}1.00{[0001|ffff]}{color[ffff]}。
093	但这样增速未免过快……
094	请打开常数小节点的设置画面！
095	使用数字键盘，\n将“{color[0400]}{[0001|1b00]}要输出什么数值？{[0001|ffff]}{color[ffff]}”设置为{color[0400]}{[0001|1b00]}0.03{[0001|ffff]}{color[ffff]}！
096	关闭设置画面……
097	好，让我们去确认一下！
098	现在的移动速度恰到好处～！
099	还有，你一定想隐藏\n位于正中央的白色球体吧？
100	为了隐藏白色球体，\n让我们前往程序画面！
101	请打开球体物体小节点的设置画面。
102	{color[0400]}{[0001|1b00]}关闭状态{[0001|ffff]}{color[ffff]}中的“{color[0400]}{[0001|1b00]}能看见{[0001|ffff]}{color[ffff]}”！
103	关闭设置画面……
104	去确认结果吧！
105	白色球体消失了～！
106	最后，让我们制作\n搭乘移动落脚点到达上方后的\n下一个场地吧！
107	复制这个场地……
108	将其放大并放在蓝框处～！
109	看看结果吧～！
110	请搭乘移动落脚点\n向上方移动。
111	新场地登场了！
112	场地真是越来越丰富了！
113	让我们前往程序画面。
114	那么～～这样一来～～！
115	第6步就完成了！
116-00	真了不起！！！
116-01	可喜可贺。
116-02	……恭喜了。
117	这次我们通过编程\n制作了略为复杂的机关！
118	移动落脚点……\n游戏成分十足，\n令人跃跃欲试！
119	下次我们将通过编程制作\n让人能够使出拳击的{color[0400]}{[0001|1b00]}道具{[0001|ffff]}{color[ffff]}，\n进一步增强游戏的氛围！
120	尽管多少有点难度，\n但{[0201]}一定没问题！
121	让我们在下个步骤再会～
Lesson_2DAction_06.msbt
000	GO！GO！运动竞技\n第7步的时间到了～！
001	上次我们通过编程\n制作了{[0001|1b00]}{color[0400]}移动落脚点{color[ffff]}{[0001|ffff]}！
001-01	为了让场地机关的丰富程度\n不断攀升，我们要再接再厉！
002	这次要编写的是{color[0400]}{[0001|1b00]}道具{[0001|ffff]}{color[ffff]}的程序！
003	当我们获得道具，\n{color[0400]}{[0001|1b00]}就能够用拳击解决外星人{[0001|ffff]}{color[ffff]}！
004	这个步骤多少有些难度，\n但{[0201]}一定没问题！
005	事不宜迟～\n前往程序画面～～～
006	大家跟我一起喊——！
007	GO！GO！
008	为便于确认情况，\n不妨先移动一下人的传送位置。
009	请将这个传送物体出口小节点\n移至蓝框处。
010	这样一来，在游戏开始后，\n人将被传送至移动落脚点的\n下一个场地上！
011	让我们确认一下吧！
012	传送成功了！
013	下面开始将外星人\n放在这个场地上吧！
014	前往程序画面～
015	首先，这个场地……\n未免显得单调了点……
016	稍微加一点{[0001|1b00]}{color[0400]}台阶{color[ffff]}{[0001|ffff]}进去吧。
017	请复制这个场地……
018	更改尺寸后\n放在场地之上。
019	这样场地上就出现了台阶！
020	接下来！\n请从{color[0400]}{[0001|1b00]}圆形时尚物体{[0001|ffff]}{color[ffff]}中叫出\n{color[0400]}{[0001|1b00]}外星人{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1b00]}时尚物体小节点{[0001|ffff]}{color[ffff]}。
021	让外星人人山人海吧♥
022	将时尚物体小节点放在场地上……
023	请打开时尚物体小节点的设置画面。
024	仅{color[0400]}{[0001|1b00]}开启状态{[0001|ffff]}{color[ffff]}中的\n“{color[0400]}{[0001|1b00]}能看见{[0001|ffff]}{color[ffff]}”、“{color[0400]}{[0001|1b00]}能接触{[0001|ffff]}{color[ffff]}”、\n“{color[0400]}{[0001|1b00]}能损坏{[0001|ffff]}{color[ffff]}”、“{color[0400]}{[0001|1b00]}能破坏{[0001|ffff]}{color[ffff]}”。
025	为使外星人面向左侧，\n请将{[0001|1b00]}{color[0400]}旋转{color[ffff]}{[0001|ffff]}的{[0001|1b00]}{color[0400]}Y轴{color[ffff]}{[0001|ffff]}设置为{color[0400]}{[0001|1b00]}90.00°{[0001|ffff]}{color[ffff]}。
026	设置完成～！
027	复制时尚物体小节点……
028	将第2个外星人放在旁边！
029	继续复制……
030	这次放在台阶上面。
031	让外星人不断增殖。
032	走下台阶后的地方\n同样必不可少～！
033	成群结队的外星人♥
034	奏响外星人组曲，\n令观者为之心动……
035	何其超一流的品位！
036	来，让我们去看看外星人吧！
037	好多外星人啊～
038	不过……\n目前还无法解决外星人！
040	为了能与外星人分庭抗礼，\n我们要制作让人\n{color[0400]}{[0001|1b00]}能够使出拳击的道具{[0001|ffff]}{color[ffff]}！
041	前往程序画面！
042	首先让我们\n放置道具——{color[0400]}{[0001|1b00]}苹果{[0001|ffff]}{color[ffff]}。
043	从{color[0400]}{[0001|1b00]}圆形时尚物体{[0001|ffff]}{color[ffff]}中叫出\n{color[0400]}{[0001|1b00]}苹果{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1b00]}时尚物体小节点{[0001|ffff]}{color[ffff]}。
044	将苹果的时尚物体小节点放在空中……
045	请打开苹果的时尚物体小节点的设置画面。
046	仅{color[0400]}{[0001|1b00]}开启状态{[0001|ffff]}{color[ffff]}中的“{color[0400]}{[0001|1b00]}能看见{[0001|ffff]}{color[ffff]}”、\n“{color[0400]}{[0001|1b00]}能接触{[0001|ffff]}{color[ffff]}”、“{color[0400]}{[0001|1b00]}能损坏{[0001|ffff]}{color[ffff]}”。
047	关闭设置画面。
048	这样苹果就放好了。
049	接下来请打开\n人小节点的设置画面。
050	然后{color[0400]}{[0001|1b00]}开启状态{[0001|ffff]}{color[ffff]}中的“{color[0400]}{[0001|1b00]}能破坏{[0001|ffff]}{color[ffff]}”。
051	请关闭设置画面。
051-01	这样人就应该能够破坏苹果了！
052	实际确认一下吧！
053	请尝试去拿苹果！
054	漂亮！\n成功拿到苹果了！
055	不过当然……\n虽然已经拿到苹果，\n但人目前还无法使出拳击。
056	终于要进入正题了！\n我们要编写人在拿到苹果后\n{color[0400]}{[0001|1b00]}能够使出拳击{[0001|ffff]}{color[ffff]}的程序！
057	拿到苹果了……
058	换言之，\n就是{color[0400]}{[0001|1b00]}苹果损坏了{[0001|ffff]}{color[ffff]}。
059	就是说，可根据{color[0400]}{[0001|1b00]}苹果损坏与否\n{[0001|ffff]}{color[ffff]}来判断{color[0400]}{[0001|1b00]}是否已拿到苹果{[0001|ffff]}{color[ffff]}。
060	接下来有请我们的老朋友！
061	请叫出{color[0400]}{[0001|1b00]}物体损坏时小节点{[0001|ffff]}{color[ffff]}～
062	怎么着？\n又有什么“能损坏”的家伙出现了吗？
063	如果他损坏了的话我会告诉你的！
064	请将物体损坏时小节点\n移至上方……
065	打开物体损坏时小节点的设置画面。
066	打开“{color[0400]}{[0001|1b00]}要检查什么？{[0001|ffff]}{color[ffff]}”……
067	仅将{color[0400]}{[0001|1b00]}苹果{[0001|ffff]}{color[ffff]}设为{color[0400]}{[0001|1b00]}开启{[0001|ffff]}{color[ffff]}。
068	关闭当前画面。
069	设置完成！
070	在苹果损坏时报告给你就行了是吗？
071	不过……你知道吗？\n我{color[0400]}{[0001|1b00]}只{[0001|ffff]}{color[ffff]}负责报告{color[0400]}{[0001|1b00]}损坏的瞬间{[0001|ffff]}{color[ffff]}，\n之后就不归我管了。
072	不错！
073	物体损坏时小节点\n只会在{color[0400]}{[0001|1b00]}苹果损坏的瞬间\n{[0001|ffff]}{color[ffff]}输出信号而已。
074	但这次……却需要让他\n在物体{[0001|1b00]}{color[0400]}损坏后持续不断地{color[ffff]}{[0001|ffff]}输出信号。
075	因此！要让他对苹果损坏这一事实{color[0400]}{[0001|1b00]}\n形成记忆{[0001|ffff]}{color[ffff]}并{color[0400]}{[0001|1b00]}持续输出信号{[0001|ffff]}{color[ffff]}！
076	请依次打开{[0001|1b00]}中间{[0001|ffff]} {[0001|0500]}{[0001|ffff]} {[0001|1b00]}旗标、计数、随机{[0001|ffff]} {[0001|0500]}{[0001|ffff]} {[0001|1b00]}旗标{[0001|ffff]}，\n来叫出{color[0400]}{[0001|1b00]}旗标小节点{[0001|ffff]}{color[ffff]}！
077	……
077-01	……
078	……呼噜。
079	旗标小节点现在虽然在梦乡当中……
080	但他的特性\n是在被输入信号后就会醒来。
081	旗标小节点醒来称为{color[0400]}{[0001|1b00]}开启{[0001|ffff]}{color[ffff]}！
081000	那么请将旗标小节点\n放在物体损坏时小节点旁边。
082	为使{color[0400]}{[0001|1b00]}旗标小节点\n{[0001|ffff]}{color[ffff]}能在苹果损坏时{color[0400]}{[0001|1b00]}开启{[0001|ffff]}{color[ffff]}……
083	请将物体损坏时小节点与\n旗标小节点的{color[0400]}{[0001|1b00]}开启端口{[0001|ffff]}{color[ffff]}进行连接！
084	……\n当苹果损坏时请叫醒我。
084-01	当旗标小节点收到\n从物体损坏时小节点\n输入的信号时则会{color[0400]}{[0001|1b00]}开启{[0001|ffff]}{color[ffff]}。
085	{color[0400]}{[0001|1b00]}开启后的旗标小节点\n{[0001|ffff]}{color[ffff]}在这期间会{color[0400]}{[0001|1b00]}持续输出信号{[0001|ffff]}{color[ffff]}。
086	也就是说在{color[0400]}{[0001|1b00]}苹果损坏后\n会持续输出信号{[0001|ffff]}{color[ffff]}！
087	那么，让我们用旗标小节点\n让人能够使出拳击。
087-01	虽然想和{color[0400]}{[0001|1b00]}人小节点{[0001|ffff]}{color[ffff]}的\n{color[0400]}{[0001|1b00]}动作端口{[0001|ffff]}{color[ffff]}进行连接……
088	但人小节点距离太远，\n很难用线与他连接。
089	因此！\n让我们叫出具有{color[0400]}{[0001|1b00]}远距离连线{[0001|ffff]}{color[ffff]}\n这一便利功能的小节点！
090	请依次打开{[0001|1b00]}中间{[0001|ffff]} {[0001|0500]}{[0001|ffff]} {[0001|1b00]}程序整理{[0001|ffff]} {[0001|0500]}{[0001|ffff]} {[0001|1b00]}无线传送：入口{[0001|ffff]}，\n来叫出{color[0400]}{[0001|1b00]}无线传送入口小节点{[0001|ffff]}{color[ffff]}！
091	这里是入口A。
092	旗标小节点一醒来，我就会进行通信。\n请讲。
093	顾名思义，{color[0400]}{[0001|1b00]}无线传送入口小节点{[0001|ffff]}{color[ffff]}\n是能将线{color[0400]}{[0001|1b00]}传送至{[0001|ffff]}{color[ffff]}远处的小节点。
093000	请将无线传送入口小节点\n放在旗标小节点旁边。
094	并连接旗标小节点\n与无线传送入口小节点。
095	这样从旗标小节点这边\n把线传送出去的准备就做好了。
096	接下来把线传送到这边来吧。
097	请依次打开{[0001|1b00]}中间{[0001|ffff]} {[0001|0500]}{[0001|ffff]} {[0001|1b00]}程序整理{[0001|ffff]} {[0001|0500]}{[0001|ffff]} {[0001|1b00]}无线传送：出口{[0001|ffff]}，\n来叫出{color[0400]}{[0001|1b00]}无线传送出口小节点{[0001|ffff]}{color[ffff]}！
098	这里是出口A。
099	明白。旗标小节点一醒来，\n你就立即发送信号给我。请讲。
100	刚才输入无线传送入口小节点的信号……
101	会被传送到这边的无线传送出口小节点，\n然后输出！
102	那么，请先将\n无线传送出口小节点移至蓝框处。
103	而我们现在的目标是\n让人{color[0400]}{[0001|1b00]}在苹果损坏后能使出拳击{[0001|ffff]}{color[ffff]}……
104	首先让我们做准备，\n将{color[0400]}{[0001|1b00]}键{[0001|ffff]}{color[ffff]}设为拳击键。
105	请叫出{color[0400]}{[0001|1b00]}{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1b00]}按键小节点{[0001|ffff]}{color[ffff]}。
106	请指教！\n拳击就是要不停出拳。\n我按按按按按按按按！
107	请将按键小节点移至蓝框处。
107000	然后打开按键小节点的设置画面！
107001	请将{color[0400]}{[0001|1b00]}输出的时机{[0001|ffff]}{color[ffff]}设为{[0001|1b00]}{color[0400]}按下时{color[ffff]}{[0001|ffff]}！
107002	这样，按键小节点\n就{color[0400]}{[0001|1b00]}只会在按下键的瞬间\n{[0001|ffff]}{color[ffff]}{[0001|1b00]}{color[0400]}输出{color[ffff]}{[0001|ffff]}信号了！
107003	关闭设置画面！
108	但仅仅按下键，人就会使出拳击，\n并不是我们的目的……
109	我们是想让人在{color[0400]}{[0001|1b00]}拿到苹果后{[0001|ffff]}{color[ffff]}，\n再{[0001|1b00]}{color[0400]}按下键时{color[ffff]}{[0001|ffff]}才能使出拳击～
110	为此请叫出{color[0400]}{[0001|1b00]}AND小节点{[0001|ffff]}{color[ffff]}！
111	没问题没问题！\n我会在2个条件都没问题时才输出信号。
111000	请将AND小节点移至蓝框处……
112	将{color[0400]}{[0001|1b00]}无线传送出口小节点{[0001|ffff]}{color[ffff]}\n与{color[0400]}{[0001|1b00]}AND小节点{[0001|ffff]}{color[ffff]}的\n{color[0400]}{[0001|1b00]}输入1端口{[0001|ffff]}{color[ffff]}进行连接！
113	然后将{color[0400]}{[0001|1b00]}按键小节点{[0001|ffff]}{color[ffff]}\n与{color[0400]}{[0001|1b00]}AND小节点{[0001|ffff]}{color[ffff]}的\n{color[0400]}{[0001|1b00]}输入2端口{[0001|ffff]}{color[ffff]}进行连接！
114	嚯嚯！\n以{color[0400]}{[0001|1b00]}苹果损坏{[0001|ffff]}{color[ffff]}为第一个条件……
115	嗯嗯！\n并将{color[0400]}{[0001|1b00]}按下键{[0001|ffff]}{color[ffff]}作为第二个条件对吗？
116	只有在两者都没问题的情况下，\n我才会输出信号。
117	接下来，将AND小节点\n与人小节点的{color[0400]}{[0001|1b00]}动作端口{[0001|ffff]}{color[ffff]}进行连接！
118	这样一来，只有当{color[0400]}{[0001|1b00]}苹果损坏{[0001|ffff]}{color[ffff]}\n且{color[0400]}{[0001|1b00]}键被按下时{[0001|ffff]}{color[ffff]}，\n才会向{color[0400]}{[0001|1b00]}动作端口{[0001|ffff]}{color[ffff]}输入信号。
119	接着，请打开人小节点的设置画面！
120	打开{color[0400]}{[0001|1b00]}动作{[0001|ffff]}{color[ffff]}。
121	可以在这里设置\n当人小节点的动作端口有信号输入时，\n人会{color[0400]}{[0001|1b00]}做出什么动作{[0001|ffff]}{color[ffff]}。
122	现在当然要选择{color[0400]}{[0001|1b00]}拳击{[0001|ffff]}{color[ffff]}了！
123	关闭设置画面……
124	辛苦了！\n让我们去确认一下……\n现在能否使出拳击！
125	先请拿到苹果！
126	然后尝试按下键！
127	成功使出拳击了～！
128	请按下“重来”，再尝试一次。
128-01	请在拿到苹果之前按下键，\n确认一下是不是无法使出拳击～
128-02	拿到苹果之前无法使出拳击！
128-03	哎呀，不小心拿到苹果了……\n请再重来一次吧。
129	那么……\n经过确认，人在拿到苹果后\n确实可以使出拳击……
130	可惜是花拳绣腿……\n并不具备解决外星人的力量！
131	通过编程\n赋予拳击力量吧～！
132	想用拳击破坏外星人……
133	首先需要能够{color[0400]}{[0001|1b00]}破坏物体{[0001|ffff]}{color[ffff]}的小节点。
134	因此！\n让我们叫出{color[0400]}{[0001|1b00]}破坏物体小节点{[0001|ffff]}{color[ffff]}吧！
135	呵呵呵……\n有何贵干？
136	又萌生破坏物体的冲动了吧……\n呵呵……呵呵呵呵。
137	请将破坏物体小节点\n调节得稍小一些。
138	然后打开破坏物体小节点的设置画面！
139	{color[0400]}{[0001|1b00]}关闭状态{[0001|ffff]}{color[ffff]}中的“{color[0400]}{[0001|1b00]}能看见{[0001|ffff]}{color[ffff]}”……
140	然后打开“{color[0400]}{[0001|1b00]}要破坏什么？{[0001|ffff]}{color[ffff]}”！
141	仅将{color[0400]}{[0001|1b00]}外星人{[0001|ffff]}{color[ffff]}设为{color[0400]}{[0001|1b00]}开启{[0001|ffff]}{color[ffff]}～
142	关闭当前画面……
143	再打开{color[0400]}{[0001|1b00]}连接面{[0001|ffff]}{color[ffff]}！
144	想用拳击破坏物体，\n需要将破坏物体小节点与{color[0400]}{[0001|1b00]}人的正面{[0001|ffff]}{color[ffff]}连接。
146	请将“{color[0400]}{[0001|1b00]}自己的连接面{[0001|ffff]}{color[ffff]}”设为{[0001|1b00]}{color[0400]}X-{color[ffff]}{[0001|ffff]}，\n将“{color[0400]}{[0001|1b00]}连接对象的连接面{[0001|ffff]}{color[ffff]}”设为{[0001|1b00]}{color[0400]}Z-{color[ffff]}{[0001|ffff]}～
147	关闭当前画面。
148	设置完成～！
150	那么，请将破坏物体小节点\n与人小节点进行连接。
151	这样，破坏物体小节点\n就连接在了{color[0400]}{[0001|1b00]}人的正面{[0001|ffff]}{color[ffff]}。
152	就是说，当外星人出现在人面前，\n就将遭到破坏！
153	不过如此一来……\n人只要靠近外星人\n就能够破坏对方……
154	需要想办法改为{color[0400]}{[0001|1b00]}只有在使出拳击时{[0001|ffff]}{color[ffff]}，\n破坏物体小节点才会{color[0400]}{[0001|1b00]}破坏外星人{[0001|ffff]}{color[ffff]}。
155	使出拳击时……\n其实跟{color[0400]}{[0001|1b00]}AND小节点输出信号时{[0001|ffff]}{color[ffff]}\n是一回事对吧。
156	因此请连接AND小节点\n与破坏物体小节点！
157	这样就能够用拳击\n破坏外星人了！
158	来～！\n让我们去游戏画面确认一下！
159	请拿到苹果，\n然后用拳击解决外星人。
160	漂亮！\n这拳击充满了力量～！
161	可以让人使出拳击的{color[0400]}{[0001|1b00]}道具{[0001|ffff]}{color[ffff]}就此完成！
162	不过……我还是……\n有少许疑问……
163	拿到苹果后即可使出拳击……{color[0400]}{[0001|1b00]}\n玩游戏的人{[0001|ffff]}{color[ffff]}知道这件事吗～？
164	让我们把拿到苹果即可使出拳击的事\n{color[0400]}{[0001|1b00]}告诉玩游戏的人{[0001|ffff]}{color[ffff]}吧！
165	加油！成功近在咫尺！\n前往程序画面，GO！GO！
166	如果需要向玩游戏的人传递信息……
167	请叫出{color[0400]}{[0001|1b00]}带注释物体小节点{[0001|ffff]}{color[ffff]}！
168	语言是人类共通的魔法。
169	只言片语，\n就足以使人展颜。
171	请将带注释物体小节点\n略微放大一些并移至上方。
172	打开带注释物体小节点的设置画面！
173	仅{color[0400]}{[0001|1b00]}开启状态{[0001|ffff]}{color[ffff]}中的“{color[0400]}{[0001|1b00]}能看见{[0001|ffff]}{color[ffff]}”。
174	并将{[0001|1b00]}{color[0400]}大小{color[ffff]}{[0001|ffff]}中的{[0001|1b00]}{color[0400]}Z{color[ffff]}{[0001|ffff]}\n设为{color[0400]}{[0001|1b00]}0.10m{[0001|ffff]}{color[ffff]}，使他变薄。
175	然后让这个带注释物体小节点\n显示{color[0400]}{[0001|1b00]}“按Y键使出拳击”{[0001|ffff]}{color[ffff]}！
176	请按下{[0001|1b00]}{color[0400]}编辑{color[ffff]}{[0001|ffff]}键，\n输入{color[0400]}{[0001|1b00]}“按Y键使出拳击”{[0001|ffff]}{color[ffff]}。
177	是否已输入{color[0400]}{[0001|1b00]}“按Y键使出拳击”{[0001|ffff]}{color[ffff]}？
yes	是
no	否
178	然后关闭设置画面。
179	接着要想办法使带注释物体小节点\n在苹果损坏时出现在场地上方！
180	请叫出{color[0400]}{[0001|1b00]}传送物体入口小节点{[0001|ffff]}{color[ffff]}！
181	呜呼……\n话语有翻天覆地之力。
182	请将传送物体入口小节点\n放在与带注释物体小节点\n重合的地方。
183	并将{color[0400]}{[0001|1b00]}物体损坏时小节点{[0001|ffff]}{color[ffff]}\n与{color[0400]}{[0001|1b00]}传送物体入口小节点{[0001|ffff]}{color[ffff]}连接！
184	接下来请叫出{color[0400]}{[0001|1b00]}传送物体出口小节点{[0001|ffff]}{color[ffff]}！
185	呜呼……\n话语之力，不容小觑。
186	将传送物体出口小节点\n移至场地上方……
187	请打开传送物体出口小节点的\n设置画面！
188	{color[0400]}{[0001|1b00]}关闭状态{[0001|ffff]}{color[ffff]}中的“{color[0400]}{[0001|1b00]}能看见{[0001|ffff]}{color[ffff]}”……
189	请将{color[0400]}{[0001|1b00]}位置{[0001|ffff]}{color[ffff]}中的{[0001|1b00]}{color[0400]}Z{color[ffff]}{[0001|ffff]}设为{color[0400]}{[0001|1b00]}0.80m{[0001|ffff]}{color[ffff]}，\n使其能够出现在\n比场地略远的地方。
190	关闭设置画面……
191	好，是时候去游戏画面确认一下了！
192	请拿到苹果！
193	注释显示出来了～！
194	这下玩游戏的人就知道\n现在可以使出拳击了！
195	请前往程序画面。
196	那么～～这样一来～～！
197	第7步就完成了！
198-00	好棒啊。
198-01	……恭喜……呼噜。
198-02	这里是入口A，恭喜。
199	由衷～感谢您长时间的陪伴！
200	我就知道{[0201]}\n一定能够坚持到底！
201	看啊！\n游戏正在不断成形！
202	下面我宣布！\n在下个步骤中，我们终于\n要编写{color[0400]}{[0001|1b00]}BOSS{[0001|ffff]}{color[ffff]}的程序了！
203	你一定很期待这激动人心的时刻。\n下次再见！
Lesson_2DAction_07.msbt
000	欢迎光临～～！
001	GO！GO！运动竞技\n第8步正式开始～！！
002	上次我们通过编程\n实现了道具被拿起后，\n人就能够使出拳击的机制！
003	游戏即将进入最后环节！\n在这个步骤当中\n我们要制作{color[0400]}{[0001|1b00]}BOSS角色{[0001|ffff]}{color[ffff]}！
005	那么让我们快快\n前往程序画面～～
006	GO！GO！
007	我们首先要制作\n同BOSS战斗的场地。
008	请复制这个担任场地的{color[0400]}{[0001|1b00]}物体小节点{[0001|ffff]}{color[ffff]}。
009	然后将其稍微缩小，\n放在蓝框处。
010	继续复制……
011	放在稍微往下一点的地方。
012	继续复制！
013	继续往下放。
014	复制～
015	稍微放大一点再放下！
016	来，让我们去确认一下场地！
017	请在场地上前进。
018	真是一片地形错落有致、\n乐趣十足的场地！
019	我们将在这里同BOSS展开激战。
020	接下来，去程序画面\n制作{[0001|1b00]}{color[0400]}BOSS{color[ffff]}{[0001|ffff]}吧！
021	我们要让外星人巨大化\n来充当BOSS。
022	请复制这个时尚物体小节点。
023	然后将尺寸调节至BOSS水准，\n使其雄踞于场地之上。
024	这还没完！\n还要让这个BOSS能对人发动攻击！
025	请叫出{color[0400]}{[0001|1b00]}发射物体小节点{[0001|ffff]}{color[ffff]}（{[0001|1b00]}10个{[0001|ffff]}）！
026	哎哟！\n这不是{[0201]}嘛～
027	啥！？\n让我给BOSS当爪牙……？
028	你莫非不知道～～？\n我可是从小就梦想\n当个正义的英雄啊～
029	如今你居然让我当反派……？
030	……算了，\n好像也有点意思。
031	放一万个心吧！
032	那么请将发射物体小节点\n稍微缩小一些放在BOSS眼前……
033	然后打开发射物体小节点的\n设置画面！
034	再打开{color[0400]}{[0001|1b00]}发射方向{[0001|ffff]}{color[ffff]}。
035	我们想让他向{[0001|1b00]}{color[0400]}左侧{color[ffff]}{[0001|ffff]}发射，\n因此请设为{[0001|1b00]}{color[0400]}X-{color[ffff]}{[0001|ffff]}。
036	然后将{color[0400]}{[0001|1b00]}发射速度{[0001|ffff]}{color[ffff]}设为{color[0400]}{[0001|1b00]}3.00{[0001|ffff]}{color[ffff]}。
037	将{color[0400]}{[0001|1b00]}发射间隔{[0001|ffff]}{color[ffff]}设为{color[0400]}{[0001|1b00]}3.00{[0001|ffff]}{color[ffff]}！
038	最后请打开{color[0400]}{[0001|1b00]}材料{[0001|ffff]}{color[ffff]}……
039	选择{[0001|1b00]}{color[0400]}无重力{color[ffff]}{[0001|ffff]}！
040	这样一来，发射出来的物体\n就能够{color[0400]}{[0001|1b00]}径直向前飞而不会掉落{[0001|ffff]}{color[ffff]}了！
041	关闭设置画面～
042	不过……\n不会掉落就意味着\n会无止境地向前飞行。
043	这会阻碍游戏进程，因此我们要\n让这些球体能够在途中{color[0400]}{[0001|1b00]}消失{[0001|ffff]}{color[ffff]}。
044	为使物体消失……\n请叫出{color[0400]}{[0001|1b00]}传送物体入口小节点{[0001|ffff]}{color[ffff]}！
045	呜呼……\n诞生与消亡为表里一体。
046	请放大传送物体入口小节点，\n并放在蓝框处。
047	然后打开传送物体入口小节点的\n设置画面！
048	将{color[0400]}{[0001|1b00]}传送ID{[0001|ffff]}{color[ffff]}设为{[0001|1b00]}{color[0400]}B{color[ffff]}{[0001|ffff]}……
049	然后{color[0400]}{[0001|1b00]}关闭状态{[0001|ffff]}{color[ffff]}中的“{color[0400]}{[0001|1b00]}能看见{[0001|ffff]}{color[ffff]}”！
050	设置完成！
051	去确认一下效果吧……
052	不过在出发前……\n还请稍等一下。
053	为便于确认，\n请将人临时设为{[0001|1b00]}{color[0400]}无敌状态{color[ffff]}{[0001|ffff]}！
054	请打开{[0001|1b00]}{color[0400]}人小节点{color[ffff]}{[0001|ffff]}的设置画面。
055	{color[0400]}{[0001|1b00]}关闭状态{[0001|ffff]}{color[ffff]}中的“{color[0400]}{[0001|1b00]}能损坏{[0001|ffff]}{color[ffff]}”。
056	关闭设置画面～
057	一切准备就绪！\n现在可以出发去确认了！
058	解决掉一路上的外星人，\n直指BOSS老巢～
059	有球体飞过来了～
060	哇！\n巨大的外星人！！
061	请尝试用拳击解决他！
062	干得漂亮！
063	因为人目前处于无敌状态，\n所以轻而易举地解决了对方……
064	而在实际游玩时，\n我们需要一边躲避飞过来的球体，\n一边同外星人展开激战！
065	……话说回来，\n不觉得有点奇怪吗？
066	虽然已经解决了BOSS，\n但{color[0400]}{[0001|1b00]}球体却仍在持续发射{[0001|ffff]}{color[ffff]}！
067	让我们编写在{color[0400]}{[0001|1b00]}BOSS损坏之后{[0001|ffff]}{color[ffff]}，\n{color[0400]}{[0001|1b00]}球体将停止发射{[0001|ffff]}{color[ffff]}的程序吧～
068	要{color[0400]}{[0001|1b00]}停止球体的发射{[0001|ffff]}{color[ffff]}……
069	需要先{color[0400]}{[0001|1b00]}将线连接到{[0001|ffff]}{color[ffff]}发射物体小节点，\n{color[0400]}{[0001|1b00]}输入信号{[0001|ffff]}{color[ffff]}，使他能发射球体……
070	然后在BOSS损坏后\n{[0001|1b00]}{color[0400]}停止输入信号{color[ffff]}{[0001|ffff]}，\n这样球体的发射也会停止！
071	首先我们需要一个\n监测该外星人BOSS{color[0400]}{[0001|1b00]}损坏与否{[0001|ffff]}{color[ffff]}的小节点。
072	说到损坏与否……\n本应由物体损坏时小节点出马……
073	但物体损坏时小节点\n在{color[0400]}{[0001|1b00]}除BOSS外的外星人损坏时\n同样会{[0001|ffff]}{color[ffff]}发出信号！
074-01	因此……现在需要的\n并不是我们熟悉的\n物体损坏时小节点……
075	请依次打开{[0001|1b00]}物体{[0001|ffff]} {[0001|0500]}{[0001|ffff]} {[0001|1b00]}感应器{[0001|ffff]} {[0001|0500]}{[0001|ffff]} {[0001|1b00]}损坏感应器{[0001|ffff]}，\n来叫出{color[0400]}{[0001|1b00]}损坏感应器小节点{[0001|ffff]}{color[ffff]}！
076	你好！\n本人名为{color[0400]}{[0001|1b00]}损坏感应器小节点{[0001|ffff]}{color[ffff]}！
077	我将不遗余力、竭尽所能地\n守望各位，关注各位的安危！
078	同时……\n万一物体发生损坏……
079	我将不遗余力、全心全意、\n第一时间向你汇报！
080	那个……\n关于损坏感应器小节点的职责……
081	其实他是一个监测{color[0400]}{[0001|1b00]}自身所连接物体\n有无损坏{[0001|ffff]}{color[ffff]}的小节点！
082	他的职责与物体损坏时小节点略有不同，\n监测的对象{color[0400]}{[0001|1b00]}仅限所连接的物体{[0001|ffff]}{color[ffff]}！
083	正是！我会专注于某个对象，\n不遗余力、全心全意地守望他！
084	那么请稍微移动一下\n损坏感应器小节点……
085	将{color[0400]}{[0001|1b00]}损坏感应器小节点{[0001|ffff]}{color[ffff]}\n与{color[0400]}{[0001|1b00]}时尚物体小节点{[0001|ffff]}{color[ffff]}进行{color[0400]}{[0001|1b00]}连接{[0001|ffff]}{color[ffff]}！
086	再打开损坏感应器小节点的设置画面！
087	请{color[0400]}{[0001|1b00]}关闭状态{[0001|ffff]}{color[ffff]}中的“{color[0400]}{[0001|1b00]}能看见{[0001|ffff]}{color[ffff]}”。
088	关闭设置画面！
089	明白！我会不遗余力、不苟言笑地\n守望外星人BOSS的！
090	拜托了哦♥
091	如此，这个损坏感应器小节点\n就将在外星人BOSS{color[0400]}{[0001|1b00]}损坏时输出信号{[0001|ffff]}{color[ffff]}了。
092	但我们还需要在外星人BOSS{color[0400]}{[0001|1b00]}尚未损坏时\n{[0001|ffff]}{color[ffff]}向发射物体小节点{color[0400]}{[0001|1b00]}输入信号{[0001|ffff]}{color[ffff]}。
092000	要想在损坏感应器小节点\n{color[0400]}{[0001|1b00]}未输出{[0001|ffff]}{color[ffff]}信号时{color[0400]}{[0001|1b00]}接收到他的信号{[0001|ffff]}{color[ffff]}……
092001	就需要那个爱说{color[0400]}{[0001|1b00]}反{[0001|ffff]}{color[ffff]}话的小节点了！
093	爱说反话的小节点是谁呢～？\n让我们叫出{color[0400]}{[0001|1b00]}NOT小节点{[0001|ffff]}{color[ffff]}！
094	嘿嘿嘿！\n区区外星人BOSS，我才不会害怕呢。
095	请把NOT小节点放在\n损坏感应器小节点旁边……
096	然后连接{color[0400]}{[0001|1b00]}损坏感应器小节点\n{[0001|ffff]}{color[ffff]}与{color[0400]}{[0001|1b00]}NOT小节点{[0001|ffff]}{color[ffff]}。
097	再连接{color[0400]}{[0001|1b00]}NOT小节点{[0001|ffff]}{color[ffff]}与{color[0400]}{[0001|1b00]}发射物体小节点{[0001|ffff]}{color[ffff]}！
098	这样一来，{color[0400]}{[0001|1b00]}当外星人BOSS损坏时\n球体的发射就会停止{[0001|ffff]}{color[ffff]}了～
099	让我们去游戏画面确认一下！
100	请用拳击解决BOSS！
101	……
102	球体的发射停止了～！
103	BOSS的制作就此完成！
104	……不过，我们还想进一步\n加强{color[0400]}{[0001|1b00]}解决BOSS时的视听效果{[0001|ffff]}{color[ffff]}！
106	在程序画面中\n添加在解决BOSS之时\n播放的音效吧！
107	请从“{color[0400]}{[0001|1b00]}播放音效{[0001|ffff]}{color[ffff]}”当中\n叫出{color[0400]}{[0001|1b00]}播放声音小节点{[0001|ffff]}{color[ffff]}！
108	我可是声音方面的专家～♪
110	请打开播放声音小节点的\n设置画面！
111	选择{color[0400]}{[0001|1b00]}喜剧效果{[0001|ffff]}{color[ffff]}……
112	然后选择{color[0400]}{[0001|1b00]}大爆炸{[0001|ffff]}{color[ffff]}！
113	嗯嗯！\nBOSS倒地就应该发出这种声音。
114	关闭当前画面……
115	关闭设置画面！
116	然后请将{color[0400]}{[0001|1b00]}损坏感应器小节点{[0001|ffff]}{color[ffff]}连接到\n{color[0400]}{[0001|1b00]}播放声音小节点{[0001|ffff]}{color[ffff]}的{[0001|1b00]}播放端口{[0001|ffff]}！
117	让我们去游戏画面确认一下！
118	请仔细倾听解决BOSS之时的声音！
120	气势十足！！
122	最后让我们解除人的无敌状态！
123	请打开人小节点的设置画面。
124	请{color[0400]}{[0001|1b00]}开启状态{[0001|ffff]}{color[ffff]}中的“{color[0400]}{[0001|1b00]}能损坏{[0001|ffff]}{color[ffff]}”！
125	这样一来～
126	人就恢复到原来的状态了！
127	去游戏画面确认一下！
128	现在，人在与球体和外星人\n碰撞时能损坏了。
129	请务必挑战一下能否打倒BOSS！
130	如果没有疑问，\n就让我们前往程序画面～！
131	那么～～这样一来～～！
132	第8步就完成了！
133-00	恭喜你！！
133-01	恭喜恭喜你～～♪
133-02	哎哟！挺像样啊！
134	我们终于完成了BOSS的编程！
135	下次让我们来制作{color[0400]}{[0001|1b00]}终点{[0001|ffff]}{color[ffff]}……\n迎接这个游戏的尾声。
136	GO！GO！运动竞技的完成指日可待！
137	下个步骤也请多关照～！
Lesson_2DAction_08.msbt
000	欢迎光临～！
001	GO！GO！运动竞技\n已进入最终阶段！
002	迄今为止，我们编程制作了\n各种机关和道具以及BOSS……
003	有始就会有终……\n在这一步我们将制作{color[0400]}{[0001|1b00]}终点{[0001|ffff]}{color[ffff]}！
004	事不宜迟，\n前往程序画面……
005	GO！GO！
006	先来制作最后的场地。
007	请复制这个物体小节点……
008	稍微缩小一些后放在蓝框处。
009	继续复制。
010	这次要稍微放大一些后\n放在蓝框处。
011	我们准备在这里\n放置{[0001|1b00]}{color[0400]}宝箱{color[ffff]}{[0001|ffff]}作为终点！
012	请从{color[0400]}{[0001|1b00]}四边形时尚物体{[0001|ffff]}{color[ffff]}中选择{color[0400]}{[0001|1b00]}宝箱{[0001|ffff]}{color[ffff]}，\n来叫出{color[0400]}{[0001|1b00]}时尚物体小节点{[0001|ffff]}{color[ffff]}！
013	宝箱……\n里面肯定有好东西吧……♥
014	请把这个时尚物体小节点\n放在场地末端……
015	然后打开时尚物体小节点的\n设置画面！
016	{color[0400]}{[0001|1b00]}关闭状态{[0001|ffff]}{color[ffff]}中的“{color[0400]}{[0001|1b00]}能移动{[0001|ffff]}{color[ffff]}”！
017	关闭设置画面……
018	为便于确认情况，\n我们先调整人的传送位置！
019	请将此{color[0400]}{[0001|1b00]}传送物体出口小节点{[0001|ffff]}{color[ffff]}移至蓝框处。
020	很好！
021	去游戏画面确认一下吧！
022	请在场地上前进。
023	看到宝箱了～！
024	让我们想办法在玩家\n接触到宝箱时呈现{color[0400]}{[0001|1b00]}终点特效{[0001|ffff]}{color[ffff]}！
025	前往程序画面～！
026	要想知道{color[0400]}{[0001|1b00]}是否已接触到宝箱{[0001|ffff]}{color[ffff]}～
027	请叫出{color[0400]}{[0001|1b00]}接触感应器小节点{[0001|ffff]}{color[ffff]}！
028	哇！\n不要突然把我叫出来啊！
029	还以为这次我没机会登场了呢……
030	将接触感应器小节点稍微放大一些后，\n放在与时尚物体小节点重合的地方。
031	请打开接触感应器小节点的\n设置画面。
032	请{color[0400]}{[0001|1b00]}关闭状态{[0001|ffff]}{color[ffff]}中的“{color[0400]}{[0001|1b00]}能看见{[0001|ffff]}{color[ffff]}”……
033	打开“{color[0400]}{[0001|1b00]}要检查什么？{[0001|ffff]}{color[ffff]}”……
034	仅将{color[0400]}{[0001|1b00]}人{[0001|ffff]}{color[ffff]}设为{color[0400]}{[0001|1b00]}开启{[0001|ffff]}{color[ffff]}～
035	关闭当前画面。
036	关闭设置画面。
037	那么接下来！\n让我们想办法实现{color[0400]}{[0001|1b00]}当接触宝箱时\n音效会响起{[0001|ffff]}{color[ffff]}的机制吧！
038	请从“{color[0400]}{[0001|1b00]}播放音效{[0001|ffff]}{color[ffff]}”当中\n叫出{color[0400]}{[0001|1b00]}播放声音小节点{[0001|ffff]}{color[ffff]}！
039	让我来营造庆功会的气氛吧～～♪
041	请打开播放声音小节点的\n设置画面。
042	打开{color[0400]}{[0001|1b00]}效果音乐{[0001|ffff]}{color[ffff]}……
043	选择{color[0400]}{[0001|1b00]}非常开心{[0001|ffff]}{color[ffff]}！
044	关闭当前画面……
045	关闭设置画面……
046	请连接{color[0400]}{[0001|1b00]}接触感应器小节点{[0001|ffff]}{color[ffff]}\n与{color[0400]}{[0001|1b00]}播放声音小节点{[0001|ffff]}{color[ffff]}的{[0001|1b00]}播放端口{[0001|ffff]}！
047	人接触宝箱后，\n我就会播放欢快的声音哦～♪
048	历尽千辛万苦到达了终点……\n迎接我们的只有声音未免太冷清……
049	所以，请再叫出\n{color[0400]}{[0001|1b00]}拉炮{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1b00]}特效小节点{[0001|ffff]}{color[ffff]}！
050	你好啊～\n我是特效小节点～
051	这个游戏叫“GO！GO！”\n虽然听起来讨喜～
052	但要是被我玩个梗，\n蝇营狗苟的帽子就扣上来啦！
053	……什么？\n不知道蝇营狗苟的意思？
054	那就请向身边的大人们咨询吧。
055	那么……\n请稍微移动特效小节点～
059	请连接{color[0400]}{[0001|1b00]}接触感应器小节点{[0001|ffff]}{color[ffff]}\n与{color[0400]}{[0001|1b00]}特效小节点{[0001|ffff]}{color[ffff]}！
060	最后让我们来想办法\n在获得宝箱之后使{color[0400]}{[0001|1b00]}游戏重来{[0001|ffff]}{color[ffff]}。
061	请先叫出{color[0400]}{[0001|1b00]}计时小节点{[0001|ffff]}{color[ffff]}！
062	把计时小节点放在\n播放声音小节点下面……
063	然后打开计时小节点的\n设置画面！
064	将“{color[0400]}{[0001|1b00]}在几秒后输出{[0001|ffff]}{color[ffff]}”\n设为{color[0400]}{[0001|1b00]}3.00{[0001|ffff]}{color[ffff]}！
065	关闭设置画面。
066	请连接{color[0400]}{[0001|1b00]}接触感应器小节点\n{[0001|ffff]}{color[ffff]}与{color[0400]}{[0001|1b00]}计时小节点{[0001|ffff]}{color[ffff]}！
067	接下来～\n请叫出{color[0400]}{[0001|1b00]}重来小节点{[0001|ffff]}{color[ffff]}！
068	把重来小节点放在计时小节点旁边……
069	连接计时小节点与重来小节点！
070	好！终点就此完成！
071	让我们来确认一下\n现在终点究竟变成了什么样子！
072	请接触宝箱！
073	当呈现终点特效之后，\n游戏自动重来了～！
074	我们就此完成了终点制作！
075	前往程序画面吧。
076	那么～～这样一来～～！
077	第9步就完成了！
078-00	噫，恭喜你。
078-01	恭喜啦～
078-02	恭喜恭喜你～～♪
079	随着终点完成，\nGO！GO！运动竞技即将大功告成！
080	在下个步骤当中……
081	我们要在游戏中\n进一步体现{[0201]}的个性！
082	敬请期待最后一步！
Lesson_2DAction_09.msbt
000	欢迎来到\nGO！GO！运动竞技的最后一步！
001	在设计了各种各样的机关之后，\n这一系列课程也即将迎来高潮！
002	在最后一步当中，\n我们将进一步体现{[0201]}的个性！
003	首先，让我们对BOSS所发射的球体\n做一点小小的改造！
004	那么～最后一次一起喊……
005	前往程序画面～～
006	GO！GO！
007	说起来，{color[0400]}{[0001|1b00]}发射物体小节点{[0001|ffff]}{color[ffff]}……
008	其实还能与{color[0400]}{[0001|1b00]}材质小节点连接{[0001|ffff]}{color[ffff]}！
009	只要将材质小节点\n与发射物体小节点连接……
010	我们就能将自己{color[0400]}{[0001|1b00]}画的画\n贴在{[0001|ffff]}{color[ffff]}被发射物体的表面上了！
011	首先，请打开{color[0400]}{[0001|1b00]}发射物体小节点{[0001|ffff]}{color[ffff]}的\n设置画面来做准备工作。
012	请将{color[0400]}{[0001|1b00]}物体的形状{[0001|ffff]}{color[ffff]}设为{[0001|1b00]}{color[0400]}立方体{color[ffff]}{[0001|ffff]}。
013	并{color[0400]}{[0001|1b00]}关闭状态{[0001|ffff]}{color[ffff]}中的“{color[0400]}{[0001|1b00]}能看见{[0001|ffff]}{color[ffff]}”。
014	准备就绪！
015	请叫出{color[0400]}{[0001|1b00]}材质小节点{[0001|ffff]}{color[ffff]}！
016	画为心声。
017	请用画笔直抒胸臆。
017000	请将材质小节点调节为\n与发射物体小节点相同尺寸，\n并将他移动到上方……
018	连接材质小节点与发射物体小节点。
019	然后打开材质小节点的\n设置画面。
020	请先打开{color[0400]}{[0001|1b00]}粘贴面{[0001|ffff]}{color[ffff]}。
021	仅将{[0001|1b00]}{color[0400]}Z-{color[ffff]}{[0001|ffff]}设为{color[0400]}{[0001|1b00]}开启{[0001|ffff]}{color[ffff]}。
022	关闭当前画面～
023	好！让我们挥毫作画！
024	请随意画点什么。
025	画好之后请关闭设置画面哦。
026	下面为了确认效果……
027	请移动人的传送位置。
028	请将这个{color[0400]}{[0001|1b00]}传送物体出口小节点\n{[0001|ffff]}{color[ffff]}移至蓝框处。
029	接下来让我们确认一下……\n发射对象变成了什么样！
030	成功发射了\n{[0201]}的画作～！
031	如果画的是雷或火……\n观感想必会截然不同！
032	好！让我们前往程序画面！
033	这款游戏还少了点什么……
034	音乐！\n没错，少了BGM！
035	让我们叫出{color[0400]}{[0001|1b00]}BGM小节点{[0001|ffff]}{color[ffff]}吧！
036	耶！\n为你做的游戏\n送上我的祝福！
037	揭开程序神秘面纱，\n奉上游戏老少皆宜！
038	为了播放BGM，\n还要叫出{color[0400]}{[0001|1b00]}常数小节点{[0001|ffff]}{color[ffff]}。
039	请将常数小节点\n放在BGM小节点旁边……
040	并将常数小节点连接到\nBGM小节点的{[0001|1b00]}播放端口{[0001|ffff]}！
041	然后请打开BGM小节点的\n设置画面。
042	打开{[0001|1b00]}{color[0400]}乐曲{color[ffff]}{[0001|ffff]}。
043	然后……将{[0001|1b00]}乐曲{[0001|ffff]}设为{color[0400]}{[0001|1b00]}小跳步{[0001|ffff]}{color[ffff]}！
044	是不是正合本作风格～？
045	那么关闭当前画面～
046	让我们去确认一下效果！
047	有了{color[0400]}{[0001|1b00]}BGM{[0001|ffff]}{color[ffff]}感觉就是不一样～
048	让我们前往程序画面吧～
049	这样一来准备就全部就绪了！
050	接下来请{[0201]}\n亲手改造游戏，\n打造属于自己的风格吧！
051	现在你可以用{color[0400]}{[0001|1b00]}材质小节点{[0001|ffff]}{color[ffff]}作画，\n来改变BOSS放出的攻击……
052	或者将{color[0400]}{[0001|1b00]}BGM{[0001|ffff]}{color[ffff]}换成自己喜欢的类型……
053	还有更改{color[0400]}{[0001|1b00]}场地颜色{[0001|ffff]}{color[ffff]}等等……\n请尽情尝试吧！
054	这个用于确认情况的{color[0400]}{[0001|1b00]}传送物体出口小节点{[0001|ffff]}{color[ffff]}\n已被设为可自由移动的状态……
055	在编程过程中，可以随时\n将他移动到想确认的地方哦。
056	和往常一样，\n当你完成了满意的作品，\n就请按下{color[0400]}{[0001|1b00]}完成键{[0001|ffff]}{color[ffff]}！
057	那么～～
058	编程开始！
059	终于完成了啊！
060	那么就请删除这个用于确认的\n{color[0400]}{[0001|1b00]}传送物体入口小节点{[0001|ffff]}{color[ffff]}……
061	再删除这边的{color[0400]}{[0001|1b00]}传送物体出口小节点{[0001|ffff]}{color[ffff]}。
062	请展示游戏画面！
063	哇～！！\n{[0201]}版GO！GO！运动竞技\n终于露出了庐山真面目！
063-01	原来如此～！\n有意保持原汁原味\n也是个性的体现～！
064	{[0201]}的品位\n在游戏画面中一览无余！
065	到此为止，\nGO！GO！运动竞技正式完成～！！！
066	尽情确认之后，\n让我们前往程序画面。
067	GO！GO！运动竞技……\n是一款编程难度颇高的游戏……
068	不愧是{[0201]}！\n竟能认真坚持到最后！
069	那么，让我们照例将这款游戏……\n加入游戏一览当中吧～
069-01	先返回菜单～
WireWarpOutNode	这里是出口A。\n游戏已顺利完成。\n请讲。
PlzPositionSensorNode	真厉害！\n神作上线！
PlzBindCommanderNode	呵呵……\n好棒啊……
PlzJointHingeNode	{[0201]}！\n你真了不起～～！
PlzJointSingleAxisSliderNode	{[0201]}！\n我会终生追随你的！
FlagNode	没想到一睁开眼睛\n就见证了名作诞生！
PlzBrokenSensorNode	好！真不枉我风雨无阻、\n不遗余力的守望！
PlzRigidNode	……嗯。\n不愧是{[0201]}，\n果然厉害。
Lesson_3DAction_00.msbt
000	你好～～！
001	终于……终于！\n到了最后一课的时间！
002	请跟上我的步伐坚持到底哦！
003	……你好。
004	……嗯？\n你是……
005	那个……我不会干扰你们的，\n可以让我旁听吗？
006	……\n……不会干扰我们就好。
007	就当我不存在好了，\n请继续上课吧。
008	呃……那么我们继续吧！
009	我们要在最后一课制作的游戏是\n{color[0400]}{[0001|1b00]}3D运动竞技空间{[0001|ffff]}{color[ffff]}！！
010	这是一款3D动作游戏，目标是\n攻略在水平方向上向远方延伸的场地！
010-01	相信它会为附带导航的课堂\n画上一个圆满的句号！！
011	事不宜迟，\n让我们开始编程～！
012	为便于编程，先切换为{color[0400]}{[0001|1b00]}俯瞰视角{[0001|ffff]}{color[ffff]}。
013	因为在3D动作游戏中，\n{color[0400]}{[0001|1b00]}物体会呈纵深排列{[0001|ffff]}{color[ffff]}，\n所以用俯瞰视角更便于作业。
014	……那接下来，\n请{color[0400]}{[0001|1b00]}切换视角{[0001|ffff]}{color[ffff]}～
015	为消除既存平面，\n请叫出{color[0400]}{[0001|1b00]}空间小节点{[0001|ffff]}{color[ffff]}。
016	……终于到最后一课了啊。
017	……\n……觉醒之时将至。
020	打开空间小节点的\n设置画面。
020-000	请将“{color[0400]}{[0001|1b00]}空间的形状{[0001|ffff]}{color[ffff]}”\n设置为“{color[0400]}{[0001|1b00]}无{[0001|ffff]}{color[ffff]}”。
020-001	关闭设置画面……
020000	请向下移动空间小节点。
021	接下来……
021-01	既然平面已不复存在，\n就要叫出{color[0400]}{[0001|1b00]}物体小节点{[0001|ffff]}{color[ffff]}作为{color[0400]}{[0001|1b00]}场地{[0001|ffff]}{color[ffff]}对吧。
022	……对，为制作场地，\n请叫出{[0001|1b00]}{color[0400]}立方体{color[ffff]}{[0001|ffff]}{color[0400]}{[0001|1b00]}物体小节点{[0001|ffff]}{color[ffff]}～
023	……你好。\n我估计这次我的戏份也不会少。
025	请将物体小节点放大到极限～
026	然后打开物体小节点的\n设置画面！
027	因为要作为场地使用，\n请{color[0400]}{[0001|1b00]}开启状态{[0001|ffff]}{color[ffff]}中的“{color[0400]}{[0001|1b00]}能看见{[0001|ffff]}{color[ffff]}”、“{color[0400]}{[0001|1b00]}能接触{[0001|ffff]}{color[ffff]}”。
028	请将{color[0400]}{[0001|1b00]}颜色{[0001|ffff]}{color[ffff]}设为{color[0400]}{[0001|1b00]}绿色{[0001|ffff]}{color[ffff]}～
029	关闭设置……
029-01	为调节场地高度，\n请切换为{color[0400]}{[0001|1b00]}水平视角{[0001|ffff]}{color[ffff]}。
029-02	请将其略向下移。
029-03	恰到好处！
029-04	然后返回俯瞰视角……
030	前往游戏画面确认一下。
031	那是我的台词！
032	我得重新打起精神……\n好！要前往游戏画面啦～！
033	一个绿色的立方体飘浮在那里～
034	要继续排列这样的立方体，\n制作向远方延伸的场地对吧？
035	啊～～！真是的！\n别抢在我前面说出来啊！
036	不要干扰授课！
037	好的，我不说话了。
038	……唉。\n接下来，让我们编写\n玩家角色——{color[0400]}{[0001|1b00]}人{[0001|ffff]}{color[ffff]}的程序。
039	请前往程序画面～
040	叫出{color[0400]}{[0001|1b00]}人小节点{[0001|ffff]}{color[ffff]}。
041	嗨！\n这是最后一课了对吧？
042	谢谢你在最后的游戏中\n选我做主人公！
048	让我们通过编程\n实现对人的操作。
049	请叫出{[0001|1b00]}L摇杆左右方向{[0001|ffff]}的{color[0400]}{[0001|1b00]}摇杆小节点{[0001|ffff]}{color[ffff]}。
050	转呀转——
050000	请将摇杆小节点稍微向左移动……
051	然后将{color[0400]}{[0001|1b00]}摇杆小节点{[0001|ffff]}{color[ffff]}连接到\n{color[0400]}{[0001|1b00]}人小节点{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1b00]}左右端口{[0001|ffff]}{color[ffff]}～
052	再叫出{[0001|1b00]}L摇杆上下方向{[0001|ffff]}的{color[0400]}{[0001|1b00]}摇杆小节点{[0001|ffff]}{color[ffff]}。
053	转呀转、转呀转——
053000	请将这个摇杆小节点向上移动……
054	然后将这个{[0001|1b00]}上下方向{[0001|ffff]}的{color[0400]}{[0001|1b00]}摇杆小节点{[0001|ffff]}{color[ffff]}\n连接到{color[0400]}{[0001|1b00]}人小节点{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1b00]}前后端口{[0001|ffff]}{color[ffff]}～
056	再接下来！\n请叫出{color[0400]}{[0001|1b00]}键的按键小节点{[0001|ffff]}{color[ffff]}。
057	请指教！\n将连击进行到底！\n我按按按按按按按按按按！！！
057000	将按键小节点移至下方……
058	来！\n请连接按键小节点与{color[0400]}{[0001|1b00]}跳跃端口{[0001|ffff]}{color[ffff]}！
059	那么！\n让我们前往游戏画面确认一下～
060	请用摇杆与键让人动起来看看～
061	无可挑剔！
062	接下来，为提高用户体验，\n让我们来编写{color[0400]}{[0001|1b00]}照相机{[0001|ffff]}{color[ffff]}的程序。
063	请前往程序画面～
064	下面请叫出{color[0400]}{[0001|1b00]}照相机小节点{[0001|ffff]}{color[ffff]}！
065	……\n需要我拍什么？
066	这边！\n拍我拍我！
067	……好的，\n包在我身上。
068	请将{color[0400]}{[0001|1b00]}照相机小节点{[0001|ffff]}{color[ffff]}与{color[0400]}{[0001|1b00]}人小节点{[0001|ffff]}{color[ffff]}进行{color[0400]}{[0001|1b00]}连接{[0001|ffff]}{color[ffff]}～
069	然后打开照相机小节点的设置画面。
072	请将{color[0400]}{[0001|1b00]}偏移距离{[0001|ffff]}{color[ffff]}设为\n{[0001|1b00]}{color[0400]}Y: {color[ffff]}{[0001|ffff]}{color[0400]}{[0001|1b00]}4.00\nZ{[0001|ffff]}{color[ffff]}{[0001|1b00]}{color[0400]}: {color[ffff]}{[0001|ffff]}{color[0400]}{[0001|1b00]}-6.00{[0001|ffff]}{color[ffff]}～
073	好！一切就绪！\n请关闭设置画面。
074	来！\n让我们前往游戏画面进行确认～～！
075	哦～！\n拍得漂亮啊～！
076	这样照相机就没问题了！
077	……真的没问题吗？
078	你不是不说话了吗！
079	要是能用摇杆\n{color[0400]}{[0001|1b00]}让照相机动起来{[0001|ffff]}{color[ffff]}的话……
080	不是更有3D动作游戏的感觉吗？
081	……但教学大纲里并没有……
082	不用在意那么多啦。\n试试看嘛。
083	来，{[0201]}，\n前往程序画面。
084	……
085	叫出{[0001|1b00]}摇杆上下方向{[0001|ffff]}的{color[0400]}{[0001|1b00]}摇杆小节点{[0001|ffff]}{color[ffff]}。
086	转呀转、转呀转——\n转呀转、转呀转——
086000	先向上移动摇杆小节点……
087	然后将{[0001|1b00]}摇杆上下方向{[0001|ffff]}的{color[0400]}{[0001|1b00]}摇杆小节点{[0001|ffff]}{color[ffff]}与\n照相机小节点的{color[0400]}{[0001|1b00]}上下端口{[0001|ffff]}{color[ffff]}进行连接。
087-01	只要像这样将{color[0400]}{[0001|1b00]}摇杆小节点{[0001|ffff]}{color[ffff]}\n连接到{color[0400]}{[0001|1b00]}照相机小节点的输入端口{[0001|ffff]}{color[ffff]}，\n就能{color[0400]}{[0001|1b00]}用摇杆来转动照相机{[0001|ffff]}{color[ffff]}了。
088	接着叫出{[0001|1b00]}摇杆左右方向{[0001|ffff]}的{color[0400]}{[0001|1b00]}摇杆小节点{[0001|ffff]}{color[ffff]}。
089	将{[0001|1b00]}摇杆左右方向{[0001|ffff]}的{color[0400]}{[0001|1b00]}摇杆小节点{[0001|ffff]}{color[ffff]}与\n照相机小节点的{color[0400]}{[0001|1b00]}水平端口{[0001|ffff]}{color[ffff]}进行连接。
090	这样一来，\n应该能用摇杆移动照相机了。
091	我的课堂……
092	去游戏画面看看吧。
093	尝试使用摇杆移动照相机。
094	你看！\n照相机动起来了！
095	……太棒了～
096	这样就更有3D动作游戏的感觉了！
097	哎呀……
098	我干扰你讲课了。\n请你继续讲吧。
099	……能移动照相机的确更有趣……
100	既然效果优于大纲……\n这样也好……
101	……来！最后让我们打起精神，\n完成对{color[0400]}{[0001|1b00]}人的调整{[0001|ffff]}{color[ffff]}吧！
102	请前往程序画面。
103	请打开人小节点的设置画面～
104	先将{[0001|1b00]}{color[0400]}Y轴旋转{color[ffff]}{[0001|ffff]}设为{color[0400]}{[0001|1b00]}180.00{[0001|ffff]}{color[ffff]}。
105	这样一来，人就面向屏幕内侧……\n即{[0001|1b00]}{color[0400]}Z+方向{color[ffff]}{[0001|ffff]}了。
106	……好，然后请将{color[0400]}{[0001|1b00]}颜色{[0001|ffff]}{color[ffff]}设为{color[0400]}{[0001|1b00]}红色{[0001|ffff]}{color[ffff]}。
107	但我比较喜欢蓝色……
108	能不能请你再安静一会儿？
109	……好！\n请关闭设置画面！
110	前往游戏画面确认一下效果～
111	人的颜色变成红色，\n初始方向变成面向屏幕内侧了～
112	我觉得还是蓝色更有型……
113	如果没有疑问，\n请前往程序画面！
114	那么～～这样一来～～！
115	第1步就完成了！
116-00	恭喜恭喜～～
116-01	恭喜——
116-02	恭喜！！
117	……抱歉，\n因不可抗力而导致拖堂。
118	毕竟是不可抗力嘛。
119	……\n下次我们要来实现\n当人{color[0400]}{[0001|1b00]}掉出场地时游戏重来{[0001|ffff]}{color[ffff]}的机制！
120	那么下个步骤再会～
121	再见啦。
Lesson_3DAction_01.msbt
000	你好！
001	你好，{[0201]}。
002	那么～我们将继续\n{color[0400]}{[0001|1b00]}3D运动竞技空间{[0001|ffff]}{color[ffff]}的制作……
003	……\n这个步骤你也要旁听？
004	当然，\n我申请全程旁听。
005	……\n尽量别干扰授课啊。
006	那么！\n先来复习之前的内容。
007	我们制作了场地，\n并使用{color[0400]}{[0001|1b00]}摇杆{[0001|ffff]}{color[ffff]}与{color[0400]}{[0001|1b00]}键{[0001|ffff]}{color[ffff]}使人移动～
008	还实现了用{color[0400]}{[0001|1b00]}摇杆\n{[0001|ffff]}{color[ffff]}移动{color[0400]}{[0001|1b00]}照相机{[0001|ffff]}{color[ffff]}的操作。
009	……好，这次我们要制作的是\n{color[0400]}{[0001|1b00]}当人掉出场地时会损坏{[0001|ffff]}{color[ffff]}的机制！
010	前往程序画面吧～
011	请先叫出{color[0400]}{[0001|1b00]}位置感应器小节点{[0001|ffff]}{color[ffff]}～
012	终于到最后一课了！
012000	请将位置感应器小节点向上移动……
013	打开位置感应器小节点的\n设置画面～
014	{color[0400]}{[0001|1b00]}关闭状态{[0001|ffff]}{color[ffff]}中的“{color[0400]}{[0001|1b00]}能看见{[0001|ffff]}{color[ffff]}”。
018	好的！\n关闭设置画面……
019	将{color[0400]}{[0001|1b00]}位置感应器小节点{[0001|ffff]}{color[ffff]}与\n{color[0400]}{[0001|1b00]}人小节点{[0001|ffff]}{color[ffff]}进行{color[0400]}{[0001|1b00]}连接{[0001|ffff]}{color[ffff]}！
021	这样{color[0400]}{[0001|1b00]}位置感应器小节点{[0001|ffff]}{color[ffff]}\n就可以输出{color[0400]}{[0001|1b00]}人的位置{[0001|ffff]}{color[ffff]}了！
022	让我们通过编程实现\n使用这个位置感应器小节点\n判断人{color[0400]}{[0001|1b00]}是否掉出场地{[0001|ffff]}{color[ffff]}的机制。
023	掉出场地……就意味着\n{color[0400]}{[0001|1b00]}人的位置低于场地的位置{[0001|ffff]}{color[ffff]}……
024	就是说只要比较\n位置感应器小节点{color[0400]}{[0001|1b00]}Y端口{[0001|ffff]}{color[ffff]}输出的数值\n{color[0400]}{[0001|1b00]}是否低于场地位置{[0001|ffff]}{color[ffff]}即可。
025	……话是不错，但别干扰授课。
026	那就请叫出{color[0400]}{[0001|1b00]}常数小节点{[0001|ffff]}{color[ffff]}！
027	你好，\n我是常数小节点，我有一颗\n直到末日也始终不变的专一之心！
027000	将他向上方移动～
028	打开常数小节点的设置画面……
029	设为小于场地位置的数值……\n就{color[0400]}{[0001|1b00]}-10.00{[0001|ffff]}{color[ffff]}好了～
030	关闭设置画面！
031	{color[0400]}{[0001|1b00]}-10.00{[0001|ffff]}{color[ffff]}是吧，遵命。\n我会守常不变地输出{color[0400]}{[0001|1b00]}-10.00{[0001|ffff]}{color[ffff]}。
032	接下来请叫出{color[0400]}{[0001|1b00]}＞{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1b00]}比较小节点{[0001|ffff]}{color[ffff]}～
033	是不是很想知道……\n人的位置是否低于场地！？
033000	将比较小节点\n放在位置感应器小节点旁边……
034	先将{color[0400]}{[0001|1b00]}位置感应器小节点{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1b00]}Y端口{[0001|ffff]}{color[ffff]}与\n{color[0400]}{[0001|1b00]}比较小节点{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1b00]}输入2端口{[0001|ffff]}{color[ffff]}进行连接。
035	再将{color[0400]}{[0001|1b00]}常数小节点{[0001|ffff]}{color[ffff]}与\n{color[0400]}{[0001|1b00]}比较小节点{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1b00]}输入1端口{[0001|ffff]}{color[ffff]}进行连接！
036	这样一来，当人的位置{color[0400]}{[0001|1b00]}低于-10.00{[0001|ffff]}{color[ffff]}时，\n比较小节点就会输出信号。
037	一点不错！
038	……说多少遍了！\n别干扰授课！
039	理解机制不是关键吗？
040	……那接下来，\n请叫出{color[0400]}{[0001|1b00]}破坏物体小节点{[0001|ffff]}{color[ffff]}。
041	呵呵呵……\n破坏也可能带来新生……
041000	将破坏物体小节点\n放在比较小节点旁边……
042	打开破坏物体小节点的\n设置画面！
043	{color[0400]}{[0001|1b00]}关闭状态{[0001|ffff]}{color[ffff]}中的“{color[0400]}{[0001|1b00]}能看见{[0001|ffff]}{color[ffff]}”。
046	打开“{color[0400]}{[0001|1b00]}要破坏什么？{[0001|ffff]}{color[ffff]}”……
047	仅将{color[0400]}{[0001|1b00]}人{[0001|ffff]}{color[ffff]}设为{color[0400]}{[0001|1b00]}开启{[0001|ffff]}{color[ffff]}～
048	关闭当前画面。
049	然后关闭设置画面！
049000	请将{color[0400]}{[0001|1b00]}破坏物体小节点{[0001|ffff]}{color[ffff]}与\n{color[0400]}{[0001|1b00]}人小节点{[0001|ffff]}{color[ffff]}进行{color[0400]}{[0001|1b00]}连接{[0001|ffff]}{color[ffff]}～
050	最后请打开{color[0400]}{[0001|1b00]}人小节点{[0001|ffff]}{color[ffff]}的设置画面……
051	{color[0400]}{[0001|1b00]}开启状态{[0001|ffff]}{color[ffff]}中的“{color[0400]}{[0001|1b00]}能损坏{[0001|ffff]}{color[ffff]}”！
052	关闭设置画面～
053	再连接{color[0400]}{[0001|1b00]}比较小节点{[0001|ffff]}{color[ffff]}与\n{color[0400]}{[0001|1b00]}破坏物体小节点{[0001|ffff]}{color[ffff]}就完成了！
054	来！\n让我们去游戏画面确认一下！
055	请掉出场地～
056	现在人在掉出场地后会损坏了！
057	那么更进一步，我们希望\n在{color[0400]}{[0001|1b00]}人损坏之后游戏能够自动重来{[0001|ffff]}{color[ffff]}。
058	没错！\n就像往常那样～
059	……来！\n让我们前往程序画面～
060	请先叫出{color[0400]}{[0001|1b00]}物体损坏时小节点{[0001|ffff]}{color[ffff]}。
061	{[0201]}，\n你终于来到最后一课了。
061-01	可不要虎头蛇尾啊！
061000	请移动物体损坏时小节点……
062	打开物体损坏时小节点的\n设置画面……
063	然后打开“{color[0400]}{[0001|1b00]}要检查什么？{[0001|ffff]}{color[ffff]}”……
064	仅将{color[0400]}{[0001|1b00]}人{[0001|ffff]}{color[ffff]}设为{color[0400]}{[0001|1b00]}开启{[0001|ffff]}{color[ffff]}。
065	关闭当前画面。
066	然后关闭设置画面。
068	接下来请叫出{color[0400]}{[0001|1b00]}计时小节点{[0001|ffff]}{color[ffff]}。
069	不经意间听到，\n这好像是最后一课了对吧？
070	倒是先打声招呼，\n让我有个心理准备啊……
071	好！请把计时小节点放在\n物体损坏时小节点旁边……
072	连接{color[0400]}{[0001|1b00]}物体损坏时小节点{[0001|ffff]}{color[ffff]}与{color[0400]}{[0001|1b00]}计时小节点{[0001|ffff]}{color[ffff]}！
073	再叫出{color[0400]}{[0001|1b00]}重来小节点{[0001|ffff]}{color[ffff]}。
074	终于到最后了……\n不要留下遗憾啊。
074000	请移动重来小节点……
075	连接{color[0400]}{[0001|1b00]}重来小节点{[0001|ffff]}{color[ffff]}与{color[0400]}{[0001|1b00]}计时小节点{[0001|ffff]}{color[ffff]}。
076	看！\n我们成功实现了\n{color[0400]}{[0001|1b00]}人损坏之后游戏自动重来{[0001|ffff]}{color[ffff]}的机制！
077	去游戏画面确认一下效果！
078	请掉出场地。
079	游戏自动重来了～！
080	让我们再简单加工一下{color[0400]}{[0001|1b00]}场地{[0001|ffff]}{color[ffff]}，\n然后结束这个步骤吧！
081	请前往程序画面～
082	复制这个物体小节点……
083	放在上方！
084	继续复制……
085	这次放在右边。
086	继续复制！
087	继续往右边摆放～！
088	这样一来后续场地就\n扩建完成了一小部分。
089	去游戏画面确认一下吧～
090	简单的场地完成了！
091	……我说啊，\n要是在这儿放个台阶，\n会不会更有意思？
092	不……大纲中说\n这部分要简洁……
093	试试看嘛。
094	{[0201]}，\n前往程序画面吧。
095	复制这个物体小节点……
096000	稍微缩小一些放在蓝框处。
097	然后……既然要做成台阶……\n高度也必须进行调整。
098	切换成{color[0400]}{[0001|1b00]}水平视角{[0001|ffff]}{color[ffff]}。
099	把刚才的物体小节点\n放在场地的上方。
101	打开设置画面更改颜色吧。
102	将{color[0400]}{[0001|1b00]}颜色{[0001|ffff]}{color[ffff]}设为{color[0400]}{[0001|1b00]}棕色{[0001|ffff]}{color[ffff]}。
103	关闭设置画面……
104	来，让我们多做几级台阶。
105	复制物体小节点……
106	放大之后放在右侧以形成台阶。
108	继续复制！
109	再放大一些，然后放在右侧～～
111	台阶是不是就完成了！？
111-01	先返回俯瞰视角……
112	来！\n前往游戏画面确认成果吧！
113	前进至台阶处！
114	哦哦～！\n真的出现台阶啦～！
115	好有意思啊！
115-01	……\n……兴奋过度失态了。
117	……\n虽然与大纲不同……\n但趣味性不减反增……
118	……\n……没错吧？
119	既然台阶已经完成……\n让我们前往程序画面吧。
120	……那么～～～这样一来～～～！
121	第2步就完成了～！
122-01	可喜可贺啊！
122-02	嗯，确实不错。
122-03	了不起啊……
122-04	呵呵呵……
123	虽然这次也拖了会儿堂……
124	但我们向游戏完成迈出了坚实的一步。
125	在下个步骤中，我们将\n制作场地特殊机关哦～！
126	场地特殊机关……
127	那么！下个步骤再会～
128	……再会～
Lesson_3DAction_02.msbt
000	欢迎来到第3步！
001	欢迎光临，\n{[0201]}。
002	我们和往常一样复习一下上次的内容。
003	请先尝试掉出场地。
004	我们通过编程实现了\n{color[0400]}{[0001|1b00]}当人掉出场地时会损坏{[0001|ffff]}{color[ffff]}的机制～
005	并制作了一小部分场地。
006	还通过增设台阶，\n让趣味性更上一层楼。
007	……好，那么我们要继续在前方\n添加场地特殊机关～！
008	关于要添加的内容～～
009	就是{color[0400]}{[0001|1b00]}移动落脚点{[0001|ffff]}{color[ffff]}了！
010	……原来如此，\n要使用{color[0400]}{[0001|1b00]}滑动连接小节点{[0001|ffff]}{color[ffff]}进行编程是吧。
011	禁止剧透！
012	……没错，我们将再次制作\n在{color[0400]}{[0001|1b00]}GO！GO！运动竞技{[0001|ffff]}{color[ffff]}中\n制作过的{color[0400]}{[0001|1b00]}移动落脚点{[0001|ffff]}{color[ffff]}！
013	好～那么事不宜迟……
014	等一下。
015	……你就非干扰授课不可吗……
016	如果已经用滑动连接小节点\n制作过移动落脚点了……
017	这次干脆用{color[0400]}{[0001|1b00]}铰链连接小节点\n{[0001|ffff]}{color[ffff]}做个{color[0400]}{[0001|1b00]}旋转路障{[0001|ffff]}{color[ffff]}怎么样？
018	……不，按照大纲，\n这次要做移动落脚点……
019	大纲那种东西不重要啦。
020	还是征求实际操作的\n{[0201]}的意见吧。
021	……明白了，\n这样也好。
022	那就请{[0201]}\n来决定到底做什么吧！
023	{color[0400]}{[0001|1b00]}移动落脚点{[0001|ffff]}{color[ffff]}和{color[0400]}{[0001|1b00]}旋转路障{[0001|ffff]}{color[ffff]}，\n你想做哪种？
023a	移动落脚点
023b	旋转路障
024	太好了～～\n我就知道！
025	什么……
026	……好吧，\n既然{[0201]}发话了，\n我也没办法反驳。
027	那么这就开始编程吧～
028	我就知道！
029	……好吧，\n既然{[0201]}主意已定……
030	那么让我们抓紧时间开始吧。
Lesson_3DAction_02a.msbt
000	那么我们先来制作\n移动落脚点的下一个场地。
001	请复制物体小节点……
002	放在蓝框处～
003	我们将在场地之间的这片空隙中\n制作{color[0400]}{[0001|1b00]}移动落脚点{[0001|ffff]}{color[ffff]}～
004	请再次复制这个物体小节点……
006	将其缩小后～\n放在空隙正中央。
007	打开设置画面。
008	请{color[0400]}{[0001|1b00]}关闭{[0001|ffff]}{color[ffff]}所有{color[0400]}{[0001|1b00]}状态{[0001|ffff]}{color[ffff]}～
009	关闭设置画面～
010	接下来请叫出负责{color[0400]}{[0001|1b00]}X轴滑动{[0001|ffff]}{color[ffff]}的\n{color[0400]}{[0001|1b00]}滑动连接小节点{[0001|ffff]}{color[ffff]}。
011	{[0201]}……！\n你在最后一课也愿意起用我！！！
011-01	我、我……！\n一定会鞠躬尽瘁的！！！
013	请将{color[0400]}{[0001|1b00]}滑动连接小节点连接{[0001|ffff]}{color[ffff]}到\n{color[0400]}{[0001|1b00]}物体小节点{[0001|ffff]}{color[ffff]}～
014	然后复制这个物体小节点……
015	因为要用作{[0001|1b00]}{color[0400]}落脚点{color[ffff]}{[0001|ffff]}，\n需将其稍微缩小后移至上方。
017	打开设置画面～
018	{color[0400]}{[0001|1b00]}开启状态{[0001|ffff]}{color[ffff]}中的“{color[0400]}{[0001|1b00]}能移动{[0001|ffff]}{color[ffff]}”。
019	将{color[0400]}{[0001|1b00]}颜色{[0001|ffff]}{color[ffff]}设为{color[0400]}{[0001|1b00]}黄色{[0001|ffff]}{color[ffff]}～
021	请在{color[0400]}{[0001|1b00]}连接面{[0001|ffff]}{color[ffff]}当中\n将“{[0001|1b00]}自己的连接面{[0001|ffff]}”和\n“{[0001|1b00]}连接对象的连接面{[0001|ffff]}”都设为{[0001|1b00]}{color[0400]}中央{color[ffff]}{[0001|ffff]}。
022	请关闭当前画面……
023	好了！\n再关闭设置画面！
024	请将这个{color[0400]}{[0001|1b00]}物体小节点连接{[0001|ffff]}{color[ffff]}到\n{color[0400]}{[0001|1b00]}滑动连接小节点{[0001|ffff]}{color[ffff]}～
025	因为这个物体小节点\n{color[0400]}{[0001|1b00]}状态{[0001|ffff]}{color[ffff]}中的“{color[0400]}{[0001|1b00]}可移动{[0001|ffff]}{color[ffff]}”已经{color[0400]}{[0001|1b00]}关闭{[0001|ffff]}{color[ffff]}……
026	所以{color[0400]}{[0001|1b00]}连接{[0001|ffff]}{color[ffff]}在他身上的{color[0400]}{[0001|1b00]}落脚点不会掉落{[0001|ffff]}{color[ffff]}，\n而是借助滑动连接小节点的力量\n{color[0400]}{[0001|1b00]}仅在X方向上移动{[0001|ffff]}{color[ffff]}。
027	没错～
028	……那么，\n接下来请叫出{color[0400]}{[0001|1b00]}常数小节点{[0001|ffff]}{color[ffff]}。
030	请将其放在蓝框处！
031	叫出这个常数小节点，\n是不是因为想让他\n连接{color[0400]}{[0001|1b00]}计数小节点{[0001|ffff]}{color[ffff]}呢？
032	将{color[0400]}{[0001|1b00]}常数小节点{[0001|ffff]}{color[ffff]}与{color[0400]}{[0001|1b00]}计数小节点{[0001|ffff]}{color[ffff]}组合后，\n就可以输出{color[0400]}{[0001|1b00]}不断递增的数字{[0001|ffff]}{color[ffff]}了。
033	正是～～～
034	……能不能别没完没了地插话？
035	我也没插几句话啊。
035-01	都被你打断多少次了！
036	啊，抱歉……\n接下来请叫出{color[0400]}{[0001|1b00]}计数小节点{[0001|ffff]}{color[ffff]}。
037	在这个步骤中，\n爱丽丝的插话次数是2次。
038	你看，不是才2次嘛？
039	言归正传！\n请将计数小节点移动到蓝框处……
040	打开设置画面。
041	请将{color[0400]}{[0001|1b00]}模式{[0001|ffff]}{color[ffff]}设为{color[0400]}{[0001|1b00]}来回{[0001|ffff]}{color[ffff]}……
042	将{color[0400]}{[0001|1b00]}计数范围{[0001|ffff]}{color[ffff]}设为{color[0400]}{[0001|1b00]}-100至100{[0001|ffff]}{color[ffff]}。
043	以这样的设置将这个{color[0400]}{[0001|1b00]}计数小节点\n{[0001|ffff]}{color[ffff]}连接到{color[0400]}{[0001|1b00]}滑动连接小节点{[0001|ffff]}{color[ffff]}的话，\n落脚点就会在{color[0400]}{[0001|1b00]}-100m至100m{[0001|ffff]}{color[ffff]}区间内移动了。
044	别忘了在他们之间加入{color[0400]}{[0001|1b00]}映射小节点{[0001|ffff]}{color[ffff]}，\n缩小移动的区间。
045	这是第3次插话！！！
046	……好了，关闭设置画面吧。
047	请将{color[0400]}{[0001|1b00]}常数小节点{[0001|ffff]}{color[ffff]}连接到\n{color[0400]}{[0001|1b00]}计数小节点{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1b00]}增加端口{[0001|ffff]}{color[ffff]}。
048	然后……\n叫出{color[0400]}{[0001|1b00]}映射小节点{[0001|ffff]}{color[ffff]}。
049	天哪！\n鲍伯博士和爱丽丝\n竟已势同水火～～～！
049-01	这难不成是……\n为了争夺我～～～～？\n啊～～不要为我坏了感情～～～！
050	请把映射小节点\n放在计数小节点旁边。
051	打开设置画面。
052	请将{color[0400]}{[0001|1b00]}输入范围{[0001|ffff]}{color[ffff]}设为\n{color[0400]}{[0001|1b00]}-100.00至100.00{[0001|ffff]}{color[ffff]}。
053	并将{color[0400]}{[0001|1b00]}输出范围{[0001|ffff]}{color[ffff]}设为\n{color[0400]}{[0001|1b00]}-3.00至3.00{[0001|ffff]}{color[ffff]}～
054	第4次插话。
055	这样就能将{color[0400]}{[0001|1b00]}计数小节点{[0001|ffff]}{color[ffff]}所输出的\n{color[0400]}{[0001|1b00]}-100.00至100.00{[0001|ffff]}{color[ffff]}之内的数值……
056	转换成{color[0400]}{[0001|1b00]}-3.00至3.00{[0001|ffff]}{color[ffff]}进行输出。
057	将其与{color[0400]}{[0001|1b00]}滑动连接小节点{[0001|ffff]}{color[ffff]}连接的话，\n就做出在{color[0400]}{[0001|1b00]}-3.00m至3.00m{[0001|ffff]}{color[ffff]}区间内\n移动的{color[0400]}{[0001|1b00]}移动落脚点{[0001|ffff]}{color[ffff]}了。
058	……\n……不错，是这样。
059	那么请关闭设置画面。
060	请连接{color[0400]}{[0001|1b00]}计数小节点{[0001|ffff]}{color[ffff]}与{color[0400]}{[0001|1b00]}映射小节点{[0001|ffff]}{color[ffff]}。
061	然后只要再连接{color[0400]}{[0001|1b00]}映射小节点{[0001|ffff]}{color[ffff]}与\n{color[0400]}{[0001|1b00]}滑动连接小节点{[0001|ffff]}{color[ffff]}！
062	{color[0400]}{[0001|1b00]}移动落脚点{[0001|ffff]}{color[ffff]}就大功告成了！
063	让我们前往游戏画面确认一下～
064	请前进至移动落脚点处。
065	干得漂亮！\n落脚点真的在移动～！
066	错过旋转路障固然可惜……\n但做这个也不错。
067	没错吧～～！！
068	那么，请在尽情确认没有疑问之后，\n返回程序画面。
069	那么～～～这样一来～～～
070	第3步就完成了～！
071-01	恭喜你了！！
071-02	恭喜你……好棒哦！
071-03	恭喜你。
072-00	这次我们制作了移动落脚点\n作为最初的场地特殊机关！
072	在下个步骤中，\n我们将制作更为复杂的\n{color[0400]}{[0001|1b00]}开关的特殊机关{[0001|ffff]}{color[ffff]}～
073	开关啊……
074	敬请期待！
075	好～
076	那么下个步骤再会～
077	不要缺席哦～
Lesson_3DAction_02b.msbt
000	那么，让我们先制作场地平面。
001	复制这个物体小节点。
002	放在右边。
003	继续复制。
004	继续向右摆放。
005	我们要在这个平面上\n编程设置旋转路障。
007	先叫出{[0001|1b00]}{color[0400]}圆柱体{color[ffff]}{[0001|ffff]}{color[0400]}{[0001|1b00]}物体小节点{[0001|ffff]}{color[ffff]}，\n用作路障的轴。
008	……你好。\n我来担任路障的中心。
009	把这个物体小节点\n放在平面正中央……
015	打开设置画面。
016	因为是用作路障的轴……\n请仅{color[0400]}{[0001|1b00]}开启状态{[0001|ffff]}{color[ffff]}中的“{color[0400]}{[0001|1b00]}能看见{[0001|ffff]}{color[ffff]}”、“{color[0400]}{[0001|1b00]}能接触{[0001|ffff]}{color[ffff]}”。
017	这样一来这个圆柱体就固定不动了。
018	然后将{color[0400]}{[0001|1b00]}颜色{[0001|ffff]}{color[ffff]}设为{color[0400]}{[0001|1b00]}白色{[0001|ffff]}{color[ffff]}。
019	关闭设置画面吧。
020	只要将{color[0400]}{[0001|1b00]}铰链连接小节点\n连接{[0001|ffff]}{color[ffff]}到这个固定不动的\n圆柱体物体小节点……
021	再将物体小节点\n{color[0400]}{[0001|1b00]}连接{[0001|ffff]}{color[ffff]}到这个{color[0400]}{[0001|1b00]}铰链连接小节点{[0001|ffff]}{color[ffff]}，\n就能{color[0400]}{[0001|1b00]}使物体骨碌骨碌旋转起来{[0001|ffff]}{color[ffff]}了。
022	那就赶快叫出{color[0400]}{[0001|1b00]}Y轴铰链{[0001|ffff]}{color[ffff]}的\n{color[0400]}{[0001|1b00]}铰链连接小节点{[0001|ffff]}{color[ffff]}吧。
023	{[0201]}！\n最后一课了啊～～！
024	将铰链连接小节点\n移至物体小节点上方。
025	将{color[0400]}{[0001|1b00]}铰链连接小节点{[0001|ffff]}{color[ffff]}\n连接到{color[0400]}{[0001|1b00]}物体小节点{[0001|ffff]}{color[ffff]}。
026	接下来叫出{[0001|1b00]}{color[0400]}球体物体小节点{color[ffff]}{[0001|ffff]}。
027	让这个{color[0400]}{[0001|1b00]}球体骨碌骨碌旋转起来{[0001|ffff]}{color[ffff]}，\n再{color[0400]}{[0001|1b00]}将路障粘在上面{[0001|ffff]}{color[ffff]}，\n{color[0400]}{[0001|1b00]}旋转路障{[0001|ffff]}{color[ffff]}就大功告成了。
029	那么，将{[0001|1b00]}{color[0400]}球体物体小节点{color[ffff]}{[0001|ffff]}移至上方。
030	打开设置画面。
031	既然球体要做的\n只有骨碌骨碌旋转……
032	请{color[0400]}{[0001|1b00]}开启状态{[0001|ffff]}{color[ffff]}中的“{color[0400]}{[0001|1b00]}能移动{[0001|ffff]}{color[ffff]}”……
033	然后在{color[0400]}{[0001|1b00]}连接面{[0001|ffff]}{color[ffff]}当中\n将“{[0001|1b00]}自己的连接面{[0001|ffff]}”和\n“{[0001|1b00]}连接对象的连接面{[0001|ffff]}”都设为{[0001|1b00]}{color[0400]}中央{color[ffff]}{[0001|ffff]}。
035	关闭当前画面……
036	好，没问题了。\n关闭设置画面吧。
037	来，将{color[0400]}{[0001|1b00]}球体物体小节点\n连接{[0001|ffff]}{color[ffff]}到{color[0400]}{[0001|1b00]}铰链连接小节点{[0001|ffff]}{color[ffff]}。
039	然后叫出{[0001|1b00]}{color[0400]}立方体物体小节点{color[ffff]}{[0001|ffff]}。
040	调整至路障大小，\n并放在{[0001|1b00]}{color[0400]}圆柱体物体小节点{color[ffff]}{[0001|ffff]}旁边。
042	来，打开设置画面。
043	{color[0400]}{[0001|1b00]}关闭状态{[0001|ffff]}{color[ffff]}中的“{color[0400]}{[0001|1b00]}能损坏{[0001|ffff]}{color[ffff]}”，
044	至于{color[0400]}{[0001|1b00]}颜色{[0001|ffff]}{color[ffff]}……\n就选{color[0400]}{[0001|1b00]}粉红色{[0001|ffff]}{color[ffff]}吧。
045	然后在{[0001|1b00]}{color[0400]}连接面{color[ffff]}{[0001|ffff]}当中\n将“{[0001|1b00]}自己的连接面{[0001|ffff]}”设为{[0001|1b00]}{color[0400]}X-{color[ffff]}{[0001|ffff]}，\n“{[0001|1b00]}连接对象的连接面{[0001|ffff]}”设为{[0001|1b00]}{color[0400]}X+{color[ffff]}{[0001|ffff]}。
045-01	这样一来立方体侧面\n就粘在球体侧面了。
047	关闭当前画面。
048	关闭设置画面。
048000	将{color[0400]}{[0001|1b00]}立方体物体小节点\n连接{[0001|ffff]}{color[ffff]}到{color[0400]}{[0001|1b00]}球体物体小节点{[0001|ffff]}{color[ffff]}。
049	那接下来……
050	差不多该去确认游戏画面了吧？
051	确认效果也很重要哦。
052	……说得对。
053	那好，{[0201]}，\n让我们前往游戏画面吧。
054	前进至路障处。
055	嗯！路障出现了！
056	然后我们只要让路障\n骨碌骨碌旋转起来就行了。
057	去程序画面继续编程吧。
058	让我们来编程实现旋转的机制。
059	{color[0400]}{[0001|1b00]}铰链连接小节点{[0001|ffff]}{color[ffff]}能够根据输入的内容\n来控制所连接物体的{[0001|1b00]}{color[0400]}角度{color[ffff]}{[0001|ffff]}。
060	因此当球体物体小节点\n连接在铰链连接小节点身上时，\n{color[0400]}{[0001|1b00]}球体就会依照输入的数值旋转{[0001|ffff]}{color[ffff]}。
061	就是说，使连接着常数小节点的计数小节点\n与映射小节点相连，并循环输出0～180的话……
062	……百闻不如一见，\n先动手做起来，晚点再解说原理怎么样？
063	……嗯，\n那么{[0201]}，\n请叫出{color[0400]}{[0001|1b00]}常数小节点{[0001|ffff]}{color[ffff]}吧。
064	你好，\n我是常数小节点，\n我有一颗始终不变的专一之心！
065	将常数小节点放在蓝框处……
066	然后叫出{color[0400]}{[0001|1b00]}计数小节点{[0001|ffff]}{color[ffff]}。
067	{[0201]}，\n这是第7课……\n也是最后一课。
068	将{color[0400]}{[0001|1b00]}计数小节点{[0001|ffff]}{color[ffff]}放在{color[0400]}{[0001|1b00]}常数小节点{[0001|ffff]}{color[ffff]}旁边。
069	打开设置画面。
070	将{color[0400]}{[0001|1b00]}模式{[0001|ffff]}{color[ffff]}设为{color[0400]}{[0001|1b00]}循环{[0001|ffff]}{color[ffff]}。
071	将{color[0400]}{[0001|1b00]}计数范围{[0001|ffff]}{color[ffff]}设为{color[0400]}{[0001|1b00]}0至180{[0001|ffff]}{color[ffff]}。
072	关闭设置画面。
073	将{color[0400]}{[0001|1b00]}常数小节点{[0001|ffff]}{color[ffff]}连接到\n{color[0400]}{[0001|1b00]}计数小节点{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1b00]}增加端口{[0001|ffff]}{color[ffff]}。
074	这样一来，计数小节点就能够\n在{color[0400]}{[0001|1b00]}0至180{[0001|ffff]}{color[ffff]}之间{color[0400]}{[0001|1b00]}循环{[0001|ffff]}{color[ffff]}计数了。
074-01	计数小节点是以\n每秒60的速度计数的……
074-02	因此可以计算出\n他在{color[0400]}{[0001|1b00]}0至180{[0001|ffff]}{color[ffff]}之间计数需要3秒。
075	接下来请叫出{color[0400]}{[0001|1b00]}映射小节点{[0001|ffff]}{color[ffff]}。
076	天哪！\n爱丽丝竟然在课堂现身了～～！
076-01	这……难不成是～～！\n风云变幻的前兆～～～！？
077	……将映射小节点\n放在计数小节点旁边……
078	并将{color[0400]}{[0001|1b00]}计数小节点{[0001|ffff]}{color[ffff]}连接到{color[0400]}{[0001|1b00]}映射小节点{[0001|ffff]}{color[ffff]}。
079	打开映射小节点的设置画面。
080	这个映射小节点将接收到\n{color[0400]}{[0001|1b00]}来自计数小节点的\n0至180{[0001|ffff]}{color[ffff]}之间的数值……
081	因此将{color[0400]}{[0001|1b00]}输入范围{[0001|ffff]}{color[ffff]}设为{color[0400]}{[0001|1b00]}0.00至180.00{[0001|ffff]}{color[ffff]}。
082	并且{color[0400]}{[0001|1b00]}铰链连接小节点{[0001|ffff]}{color[ffff]}是\n将输入的数值视为{[0001|1b00]}{color[0400]}角度{color[ffff]}{[0001|ffff]}\n来旋转物体的……
083	因此为使路障能够{color[0400]}{[0001|1b00]}360°{[0001|ffff]}{color[ffff]}旋转，\n需要将{color[0400]}{[0001|1b00]}输出范围{[0001|ffff]}{color[ffff]}设为{color[0400]}{[0001|1b00]}0.00至360.00{[0001|ffff]}{color[ffff]}。
084	关闭设置画面……
085	这样一来，\n映射小节点就能{color[0400]}{[0001|1b00]}循环输出\n0.00至360.00{[0001|ffff]}{color[ffff]}之间的数值了。
086	最后将{color[0400]}{[0001|1b00]}映射小节点\n{[0001|ffff]}{color[ffff]}连接到{color[0400]}{[0001|1b00]}铰链连接小节点{[0001|ffff]}{color[ffff]}……
087	好！这样一来\n{color[0400]}{[0001|1b00]}旋转路障{[0001|ffff]}{color[ffff]}应该就完成了！
088	前往游戏画面确认一下吧！
089	前进至路障处！
090	真的在骨碌骨碌旋转～～
091	真厉害！\n这机关太有趣了！
092	虽然与大纲截然不同……\n但是倒也别有一番趣味！
093	……没错吧！
094	好了，{[0201]}，\n尽情游玩过后，就返回程序画面吧。
095	好，这样一来～～～
096	第3步就完成了！
097-01	恭喜你～～～！！
097-02	恭喜你……好棒哦！
097-03	恭喜你。
098	那是我的台词……
099	……嗯哼，至此，\n我们完成了第1个场地特殊机关。
100	在下个步骤中，我们将制作\n更为复杂的{color[0400]}{[0001|1b00]}开关的特殊机关{[0001|ffff]}{color[ffff]}～
101	开关是吗……
102	敬请期待！
103	好～
104	那么下个步骤再会～
105	不要缺席哦～
Lesson_3DAction_03.msbt
000	好！下面开始第4步的教学！
001	这次的教学进度也即将过半。
002	让我们一步一步将{color[0400]}{[0001|1b00]}3D运动竞技空间{[0001|ffff]}{color[ffff]}的\n场地营造得更加丰富多彩～！
003	在这个步骤中，我们要制作的是\n{color[0400]}{[0001|1b00]}当按下开关后桥会出现{[0001|ffff]}{color[ffff]}的\n场地特殊机关。
004	但我想制作的是{color[0400]}{[0001|1b00]}当按下开关后{[0001|ffff]}{color[ffff]}，{color[0400]}{[0001|1b00]}\n在计时结束后消失的桥\n会出现{[0001|ffff]}{color[ffff]}的场地特殊机关。
005	……那个编程难度\n是不是有点太高了？
006	的确，操作又繁复又困难……\n但是{[0201]}，\n你一定没问题吧？
007	……那就请{[0201]}\n作出决定吧。
008	我提议的{color[0400]}{[0001|1b00]}简易式开关{[0001|ffff]}{color[ffff]}机关……
009	我提议的\n有点难度的{color[0400]}{[0001|1b00]}计时式开关{[0001|ffff]}{color[ffff]}……
010	你想做哪一种？
010a	简易式开关
010b	计时式开关
011	明白了！\n那就让我们来做\n简易式开关机关吧～
012	唉……\n可我觉得我提议的机关，\n{[0201]}也能做到。
013	那就让我们立即着手吧！
014	不愧是{[0201]}！
015	{[0201]}……\n没问题吗？
016	没问题吧，\n毕竟已经积累了这么多经验。
017	来，\n让我们去程序画面开始编程吧。
Lesson_3DAction_03a.msbt
000	下面我来正式介绍一下\n本次要编程制作的特殊机关～
001	那就是当{color[0400]}{[0001|1b00]}把箱子放在开关上{[0001|ffff]}{color[ffff]}时\n{color[0400]}{[0001|1b00]}桥会出现{[0001|ffff]}{color[ffff]}的特殊机关！
002	我们先有请箱子登场！
003	请从{color[0400]}{[0001|1b00]}四边形时尚物体{[0001|ffff]}{color[ffff]}中\n叫出{[0001|1b00]}{color[0400]}箱子{color[ffff]}{[0001|ffff]}的{color[0400]}{[0001|1b00]}时尚物体小节点{[0001|ffff]}{color[ffff]}～
004	……我是箱子。\n箱子本是为容纳其他事物而生的物体。
005	而你竟能着眼于容器本身而非内容物，\n你的眼光可真是……\n♥高端！大气！上档次！♥
012	将时尚物体小节点放在蓝框处……
013	好！先去游戏画面\n确认一下效果吧～
014	……\n要一步一步走到箱子附近……\n是不是很麻烦？
015	不妨使用{color[0400]}{[0001|1b00]}传送物体小节点\n{[0001|ffff]}{color[ffff]}直接{color[0400]}{[0001|1b00]}传送{[0001|ffff]}{color[ffff]}到箱子附近吧。
016	让我们前往程序画面～
017	请先在起点处叫出\n{color[0400]}{[0001|1b00]}传送物体入口小节点{[0001|ffff]}{color[ffff]}。
018	呜呼……\n欲借吾神通，\n求事半功倍？
019	也好。\n此力通天彻地，\n愿助汝随心所欲。
022	请将传送物体入口小节点\n放在与人小节点重合的地方……
024	打开传送物体入口小节点的\n设置画面。
025	请将{color[0400]}{[0001|1b00]}传送ID{[0001|ffff]}{color[ffff]}设为{color[0400]}{[0001|1b00]}H{[0001|ffff]}{color[ffff]}。
026	打开“{color[0400]}{[0001|1b00]}要传送什么？{[0001|ffff]}{color[ffff]}”……
027	仅将{color[0400]}{[0001|1b00]}人{[0001|ffff]}{color[ffff]}设为{color[0400]}{[0001|1b00]}开启{[0001|ffff]}{color[ffff]}。
027000	关闭当前画面……
028	再关闭设置画面！
030	接着请叫出\n{color[0400]}{[0001|1b00]}传送物体出口小节点{[0001|ffff]}{color[ffff]}。
031	呜呼……\n汝既有此宏愿——
032	吾便相助一臂。
034	先切换成{color[0400]}{[0001|1b00]}水平视角{[0001|ffff]}{color[ffff]}……
035	将传送物体出口小节点\n稍微放大一些放在平面上。
035-01	返回{color[0400]}{[0001|1b00]}俯瞰视角{[0001|ffff]}{color[ffff]}……
036	打开传送物体出口小节点的\n设置画面。
037	将{color[0400]}{[0001|1b00]}传送ID{[0001|ffff]}{color[ffff]}设为{color[0400]}{[0001|1b00]}H{[0001|ffff]}{color[ffff]}。
040	请关闭设置画面。
042	好～\n这样应该便于确认了！
043	让我们去游戏画面确认一下～
044	传送到箱子附近了！
045	箱子也已准备就绪！\n接下来开始编写开关的程序吧～
046	……等一下。
047	……怎么了？
048	{[0201]}，\n你推推看这个箱子。
049	……箱子会改变朝向，\n推的时候是不是有些不听使唤？
050	……是有这种感觉。
051	我倒是有个好办法……
052	……
053	……嗯。\n可以请你实践一下吗？
054	……好的！
055	来，{[0201]}，\n前往程序画面。
056	要想让箱子在被推动时\n{color[0400]}{[0001|1b00]}不改变朝向{[0001|ffff]}{color[ffff]}……
057	使用{color[0400]}{[0001|1b00]}自由滑动连接小节点{[0001|ffff]}{color[ffff]}就可以了。
058	啊，原来如此！
059	这就试试看吧。
060	先让{color[0400]}{[0001|1b00]}时尚物体小节点\n{[0001|ffff]}{color[ffff]}稍微往旁边偏移一点。
061	然后叫出{[0001|1b00]}{color[0400]}立方体{color[ffff]}{[0001|ffff]}{color[0400]}{[0001|1b00]}物体小节点{[0001|ffff]}{color[ffff]}。
062	……你好。
067	将这个{color[0400]}{[0001|1b00]}物体小节点{[0001|ffff]}{color[ffff]}放在之前\n{color[0400]}{[0001|1b00]}时尚物体小节点所在的地方{[0001|ffff]}{color[ffff]}。
067-01	打开物体小节点的设置画面。
067-02	{color[0400]}{[0001|1b00]}关闭{[0001|ffff]}{color[ffff]}所有{color[0400]}{[0001|1b00]}状态{[0001|ffff]}{color[ffff]}。
067-03	关闭设置画面。
068	然后叫出{color[0400]}{[0001|1b00]}自由滑动连接小节点{[0001|ffff]}{color[ffff]}。
069	感觉你们在做的事相当有意思啊。
070	创作中怎么少得了即兴发挥呢？
070000	将{color[0400]}{[0001|1b00]}自由滑动连接小节点{[0001|ffff]}{color[ffff]}放在蓝框处……
070-01	将{color[0400]}{[0001|1b00]}自由滑动连接小节点\n连接{[0001|ffff]}{color[ffff]}到{color[0400]}{[0001|1b00]}物体小节点{[0001|ffff]}{color[ffff]}。
070-02	打开{color[0400]}{[0001|1b00]}时尚物体小节点{[0001|ffff]}{color[ffff]}的\n设置画面。
070-03	在{color[0400]}{[0001|1b00]}连接面{[0001|ffff]}{color[ffff]}当中\n将“{[0001|1b00]}自己的连接面{[0001|ffff]}”\n和“{[0001|1b00]}连接对象的连接面{[0001|ffff]}”都设为{[0001|1b00]}{color[0400]}中央{color[ffff]}{[0001|ffff]}。
070-04	关闭当前画面……
070-05	关闭设置画面。
070-06	将{color[0400]}{[0001|1b00]}时尚物体小节点\n连接{[0001|ffff]}{color[ffff]}到{color[0400]}{[0001|1b00]}自由滑动连接小节点{[0001|ffff]}{color[ffff]}。
070001	然后打开自由滑动连接小节点的\n设置画面。
070002	{color[0400]}{[0001|1b00]}关闭{[0001|ffff]}{color[ffff]}所有{color[0400]}{[0001|1b00]}滑动的移动输入{[0001|ffff]}{color[ffff]}。
070003	这样一来，所连接的{color[0400]}{[0001|1b00]}箱子\n{[0001|ffff]}{color[ffff]}就{color[0400]}{[0001|1b00]}能够自由移动{[0001|ffff]}{color[ffff]}了。
070004	关闭设置画面……
080	好，让我们去游戏画面\n确认一下效果。
081	请尝试推动箱子。
082	怎么样？\n现在箱子不会改变朝向了对吧！
083	好厉害……！
084	因为与{color[0400]}{[0001|1b00]}看不见的立方体连接{[0001|ffff]}{color[ffff]}在一起，\n所以箱子的{color[0400]}{[0001|1b00]}朝向不会改变{[0001|ffff]}{color[ffff]}了……
085	但因为{color[0400]}{[0001|1b00]}自由滑动连接小节点{[0001|ffff]}{color[ffff]}的\n{color[0400]}{[0001|1b00]}滑动的移动输入{[0001|ffff]}{color[ffff]}已设为{color[0400]}{[0001|1b00]}关闭{[0001|ffff]}{color[ffff]}，\n所以仍然{color[0400]}{[0001|1b00]}可以自由移动{[0001|ffff]}{color[ffff]}箱子。
086	……不好意思，干扰你了。\n请继续讲解吧。
087	……效果很不错啊！\n谢谢你！
089	好！箱子的移动也已成功升级！\n接下来就投入到{color[0400]}{[0001|1b00]}开关{[0001|ffff]}{color[ffff]}制作中吧。
090	那么，请叫出用作{color[0400]}{[0001|1b00]}开关{[0001|ffff]}{color[ffff]}的\n{[0001|1b00]}{color[0400]}立方体物体小节点{color[ffff]}{[0001|ffff]}。
090-01	请切换成{color[0400]}{[0001|1b00]}水平视角{[0001|ffff]}{color[ffff]}。
092	为了一看便知这是开关，\n要将物体小节点放在\n{color[0400]}{[0001|1b00]}略微凸出平面{[0001|ffff]}{color[ffff]}的位置。
092-01	返回{color[0400]}{[0001|1b00]}俯瞰视角{[0001|ffff]}{color[ffff]}……
092-02	将物体小节点向下移动。
093	请打开物体小节点的\n设置画面。
095	仅{color[0400]}{[0001|1b00]}开启状态{[0001|ffff]}{color[ffff]}中的“{color[0400]}{[0001|1b00]}能看见{[0001|ffff]}{color[ffff]}”……
097	然后将{color[0400]}{[0001|1b00]}颜色{[0001|ffff]}{color[ffff]}设为{color[0400]}{[0001|1b00]}淡蓝色{[0001|ffff]}{color[ffff]}。
098	关闭设置画面……
099	让我们去看看感觉如何～
100	看，{color[0400]}{[0001|1b00]}开关{[0001|ffff]}{color[ffff]}出现了，感觉只要\n按下去就会发生神奇的事～！
101	我们要实现的目标是\n当{color[0400]}{[0001|1b00]}把箱子放在{[0001|ffff]}{color[ffff]}开关上时\n{color[0400]}{[0001|1b00]}桥会出现{[0001|ffff]}{color[ffff]}！
102	通过编程来实现目标吧～
103	为了监测到{color[0400]}{[0001|1b00]}箱子已经放在开关上{[0001|ffff]}{color[ffff]}～
104	让我们叫出{color[0400]}{[0001|1b00]}接触感应器小节点{[0001|ffff]}{color[ffff]}！
105	噫……\n找我有什么事？
106	请将{color[0400]}{[0001|1b00]}接触感应器小节点\n连接{[0001|ffff]}{color[ffff]}到开关的{color[0400]}{[0001|1b00]}物体小节点{[0001|ffff]}{color[ffff]}。
107	打开接触感应器小节点的\n设置画面。
107-01	在{[0001|1b00]}{color[0400]}连接面{color[ffff]}{[0001|ffff]}当中\n将“{[0001|1b00]}自己的连接面{[0001|ffff]}”设为{[0001|1b00]}{color[0400]}Y-{color[ffff]}{[0001|ffff]}，\n“{[0001|1b00]}连接对象的连接面{[0001|ffff]}”设为{[0001|1b00]}{color[0400]}Y+{color[ffff]}{[0001|ffff]}。
107-02	这样接触感应器就粘在{color[0400]}{[0001|1b00]}开关上方{[0001|ffff]}{color[ffff]}了。
107-03	关闭当前画面……
108	接下来打开“{color[0400]}{[0001|1b00]}要检查什么？{[0001|ffff]}{color[ffff]}”……
109	仅将{color[0400]}{[0001|1b00]}箱子{[0001|ffff]}{color[ffff]}设为{color[0400]}{[0001|1b00]}开启{[0001|ffff]}{color[ffff]}～
110	请关闭当前画面……
110-01	然后{color[0400]}{[0001|1b00]}关闭状态{[0001|ffff]}{color[ffff]}中的“{color[0400]}{[0001|1b00]}能看见{[0001|ffff]}{color[ffff]}”。
111	这样一来设置就完成了！\n请关闭设置画面。
112	现在{color[0400]}{[0001|1b00]}只要把箱子放在开关上{[0001|ffff]}{color[ffff]}，\n接触感应器小节点就会{color[0400]}{[0001|1b00]}输出信号{[0001|ffff]}{color[ffff]}了。
113	好！\n然后只要编程实现{color[0400]}{[0001|1b00]}使桥出现的机制{[0001|ffff]}{color[ffff]}，\n这个步骤就大功告成了！
114	要想使桥出现……
116	请叫出{color[0400]}{[0001|1b00]}传送物体入口小节点{[0001|ffff]}{color[ffff]}！
117	大幅放大{color[0400]}{[0001|1b00]}传送物体入口小节点{[0001|ffff]}{color[ffff]}～
118	请叫出用作桥的{[0001|1b00]}{color[0400]}立方体物体小节点{color[ffff]}{[0001|ffff]}！
120	将物体小节点调节成桥的大小……
121	请打开物体小节点的\n设置画面。
122	仅{color[0400]}{[0001|1b00]}开启状态{[0001|ffff]}{color[ffff]}中的\n“{color[0400]}{[0001|1b00]}能看见{[0001|ffff]}{color[ffff]}”、“{color[0400]}{[0001|1b00]}能接触{[0001|ffff]}{color[ffff]}”。
123	然后将{color[0400]}{[0001|1b00]}颜色{[0001|ffff]}{color[ffff]}设为{color[0400]}{[0001|1b00]}黄色{[0001|ffff]}{color[ffff]}～
125	关闭设置画面……
126	接下来，请打开\n传送物体入口小节点的设置画面。
127	{color[0400]}{[0001|1b00]}关闭状态{[0001|ffff]}{color[ffff]}中的“{color[0400]}{[0001|1b00]}能看见{[0001|ffff]}{color[ffff]}”……
128	请打开“{color[0400]}{[0001|1b00]}要传送什么？{[0001|ffff]}{color[ffff]}”。
129	仅将{[0001|1b00]}{color[0400]}立方体{color[ffff]}{[0001|ffff]}设为{color[0400]}{[0001|1b00]}开启{[0001|ffff]}{color[ffff]}。
130	关闭当前画面……
131	关闭设置画面～
133	下面请叫出{color[0400]}{[0001|1b00]}传送物体出口小节点{[0001|ffff]}{color[ffff]}。
134-01	切换成{color[0400]}{[0001|1b00]}水平视角{[0001|ffff]}{color[ffff]}以便调节高度……
134-02	请将传送物体出口小节点\n移动到与平面相同的高度。
134-03	在返回{color[0400]}{[0001|1b00]}俯瞰视角{[0001|ffff]}{color[ffff]}后～
135	打开传送物体出口小节点的\n设置画面。
136	{color[0400]}{[0001|1b00]}关闭状态{[0001|ffff]}{color[ffff]}中的“{color[0400]}{[0001|1b00]}能看见{[0001|ffff]}{color[ffff]}”。
137	关闭设置画面……
138	这样一来，为了让桥出现\n而做的准备工作就完成了！
139	然后只要将{color[0400]}{[0001|1b00]}接触感应器小节点{[0001|ffff]}{color[ffff]}输出的数值\n输入{color[0400]}{[0001|1b00]}传送物体入口小节点{[0001|ffff]}{color[ffff]}，\n桥应该就能被成功传送了……
141	但因为他们相距较远，\n难以直接连接在一起……\n所以请叫出{[0001|1b00]}{color[0400]}无线传送入口小节点{color[ffff]}{[0001|ffff]}！
142	这里是入口A。\n即将与接触感应器小节点进行接触。\n请讲。
143	将其移至\n接触感应器小节点旁边……
144	将{color[0400]}{[0001|1b00]}接触感应器小节点\n{[0001|ffff]}{color[ffff]}连接到{color[0400]}{[0001|1b00]}无线传送入口小节点{[0001|ffff]}{color[ffff]}！
145	接下来请在这边叫出\n{color[0400]}{[0001|1b00]}无线传送出口小节点{[0001|ffff]}{color[ffff]}！
146	这里是出口A。\n明白，我也将与对象进行接触。\n请讲。
147	将其移至\n传送物体入口小节点旁边……
148	连接{color[0400]}{[0001|1b00]}无线传送出口小节点\n{[0001|ffff]}{color[ffff]}与{color[0400]}{[0001|1b00]}传送物体入口小节点{[0001|ffff]}{color[ffff]}！
149	辛苦了！ 这样一来，\n{color[0400]}{[0001|1b00]}当把箱子放在开关上之后\n桥会出现{[0001|ffff]}{color[ffff]}的特殊机关就完成了！
150	让我们去游戏画面确认一下效果！
151	请把箱子推动到开关上～
152	桥如愿出现了！！
153	掌声响起来～～～
154	……不过，\n桥的出现是不是……\n有点太不起眼了？
155	哼哼，可别小看人啊！
156	怎么可能就此画上句号呢？
157	我早就为桥出现的瞬间\n设计了让人一目了然的特效！
158	哦哦～
159	{[0201]}！\n为此，让我们这就开始编程吧！
160	那么，\n请叫出{color[0400]}{[0001|1b00]}烟雾{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1b00]}特效小节点{[0001|ffff]}{color[ffff]}！
161	大家好～～
162	你想瞧见嗨翻天的登场是吧？
163	但能瞧出什么花样呢～\n我小时候可总被教育\n非礼勿视啊～
164	……原来此桥非彼瞧啊～～！
166	那么，请放大特效小节点～！
166000	打开特效小节点的设置画面。
166001000	将{color[0400]}{[0001|1b00]}特效出现的位置{[0001|ffff]}{color[ffff]}设为{color[0400]}{[0001|1b00]}空间{[0001|ffff]}{color[ffff]}！
166001001	然后{color[0400]}{[0001|1b00]}关闭状态{[0001|ffff]}{color[ffff]}中的“{color[0400]}{[0001|1b00]}能看见{[0001|ffff]}{color[ffff]}”。
166002	请关闭设置画面～
167	接着请叫出{color[0400]}{[0001|1b00]}无线传送出口小节点{[0001|ffff]}{color[ffff]}。
167000	移至特效小节点旁边……
168	请连接{color[0400]}{[0001|1b00]}无线传送出口小节点\n{[0001|ffff]}{color[ffff]}与{color[0400]}{[0001|1b00]}特效小节点{[0001|ffff]}{color[ffff]}。
169	这个无线传送出口小节点的\n{color[0400]}{[0001|1b00]}传送ID{[0001|ffff]}{color[ffff]}为{[0001|1b00]}{color[0400]}A{color[ffff]}{[0001|ffff]}……
170	所以{color[0400]}{[0001|1b00]}接触感应器小节点输出的信号\n{[0001|ffff]}{color[ffff]}会传送到这里。
171	没错！
172	因此，{color[0400]}{[0001|1b00]}在桥被传送的同时{[0001|ffff]}{color[ffff]}，\n会显示烟雾特效！
173	让我们去游戏画面确认一下！
174	请把箱子放在开关上使桥出现。
175	看！在桥登场的瞬间，\n显示了烟雾特效！
176	哦哦……
177	这次十分一目了然啊。
178	没错吧～～？
179	来，让我们返回程序画面～！
186	那么～～这样一来～～
187	第4步就完成了！
188-01	♥恭喜你啦♥
188-02	恭喜。
188-03	噫……恭喜你。
189	那么，随着解谜特殊机关成功上线，\n游戏完成也已经指日可待了。
190	在下个步骤中，\n我们将制作敌方角色！
191	敌方角色……好！
192	那么，下次我们\n将面临怎样的挑战呢！？
193	让我们下个步骤再会～
194	敬请期待～
Lesson_3DAction_03b.msbt
000	下面我来正式介绍一下\n接下来要编程制作的特殊机关……
001	那就是{color[0400]}{[0001|1b00]}当按下开关后桥会出现{[0001|ffff]}{color[ffff]}，\n{color[0400]}{[0001|1b00]}并于10秒后消失{[0001|ffff]}{color[ffff]}的特殊机关。
002	还是加上时间限制比较有趣吧？
003	来，让我们\n这就从{color[0400]}{[0001|1b00]}开关{[0001|ffff]}{color[ffff]}开始制作。
004	叫出{[0001|1b00]}{color[0400]}立方体物体小节点{color[ffff]}{[0001|ffff]}。
005	……你好。\n这次我要扮演开关对吧？
005-01	切换成{color[0400]}{[0001|1b00]}水平视角{[0001|ffff]}{color[ffff]}。
005-02	为了一看便知这是开关，\n要移动物体小节点，使他略微凸出平面。
005-03	然后返回{color[0400]}{[0001|1b00]}俯瞰视角{[0001|ffff]}{color[ffff]}。
005000	将这个物体小节点向下移动……
006	打开物体小节点的设置画面。
007	仅{color[0400]}{[0001|1b00]}开启状态{[0001|ffff]}{color[ffff]}中的“{color[0400]}{[0001|1b00]}能看见{[0001|ffff]}{color[ffff]}”……
009	然后将{color[0400]}{[0001|1b00]}颜色{[0001|ffff]}{color[ffff]}设为{color[0400]}{[0001|1b00]}淡蓝色{[0001|ffff]}{color[ffff]}。
012	好，关闭设置画面。
013	让我们去游戏画面确认一下。
014	……\n要一步一步走到开关附近\n真是够麻烦的。
015	先返回程序画面，\n想个{color[0400]}{[0001|1b00]}能直接移动到开关附近{[0001|ffff]}{color[ffff]}的办法吧。
016	使用{color[0400]}{[0001|1b00]}传送物体小节点{[0001|ffff]}{color[ffff]}，\n即可体验瞬间移动到\n开关附近的感觉。
017	先叫出{color[0400]}{[0001|1b00]}传送物体入口小节点{[0001|ffff]}{color[ffff]}。
018	呜呼……\n欲借吾神通，\n求事半功倍？
019	也好。\n此力通天彻地，\n愿助汝随心所欲。
020	就用这个{color[0400]}{[0001|1b00]}传送物体入口小节点{[0001|ffff]}{color[ffff]}来传送人。
022	请将{color[0400]}{[0001|1b00]}传送物体入口小节点\n{[0001|ffff]}{color[ffff]}放在与人小节点重合的地方……
023	然后打开传送物体入口小节点的\n设置画面。
024	将{color[0400]}{[0001|1b00]}传送ID{[0001|ffff]}{color[ffff]}设为{color[0400]}{[0001|1b00]}H{[0001|ffff]}{color[ffff]}。
025	打开“{color[0400]}{[0001|1b00]}要传送什么？{[0001|ffff]}{color[ffff]}”。
026	仅将{color[0400]}{[0001|1b00]}人{[0001|ffff]}{color[ffff]}设为{color[0400]}{[0001|1b00]}开启{[0001|ffff]}{color[ffff]}。
027	关闭当前画面……
028	再关闭设置画面。
030	接下来请叫出\n{color[0400]}{[0001|1b00]}传送物体出口小节点{[0001|ffff]}{color[ffff]}。
031	呜呼……\n汝既有此宏愿——
032	吾便相助一臂。
032-01	切换成{color[0400]}{[0001|1b00]}水平视角{[0001|ffff]}{color[ffff]}……
032-02	将传送物体出口小节点\n稍微放大一些放在平面上。
032-03	返回{color[0400]}{[0001|1b00]}俯瞰视角{[0001|ffff]}{color[ffff]}……
036	打开传送物体出口小节点的\n设置画面。
037	将{color[0400]}{[0001|1b00]}传送ID{[0001|ffff]}{color[ffff]}设为{color[0400]}{[0001|1b00]}H{[0001|ffff]}{color[ffff]}。
038	关闭设置画面。
040	好，现在应该可以确认了。
041	嗯，确实出现了\n看起来像{color[0400]}{[0001|1b00]}开关{[0001|ffff]}{color[ffff]}的物体。
042	接下来就要通过编程实现\n{color[0400]}{[0001|1b00]}按下开关后桥会出现的机制{[0001|ffff]}{color[ffff]}了。
043	先叫出{color[0400]}{[0001|1b00]}接触感应器小节点{[0001|ffff]}{color[ffff]}。
044	噫……怎么，是爱丽丝……？\n找我有什么事？
045	将{color[0400]}{[0001|1b00]}接触感应器小节点\n连接{[0001|ffff]}{color[ffff]}到开关的{color[0400]}{[0001|1b00]}物体小节点{[0001|ffff]}{color[ffff]}。
046	然后打开接触感应器小节点的\n设置画面。
046000	{color[0400]}{[0001|1b00]}关闭状态{[0001|ffff]}{color[ffff]}中的“{color[0400]}{[0001|1b00]}能看见{[0001|ffff]}{color[ffff]}”。
047	打开“{color[0400]}{[0001|1b00]}要检查什么？{[0001|ffff]}{color[ffff]}”……
048	仅将{color[0400]}{[0001|1b00]}人{[0001|ffff]}{color[ffff]}设为{color[0400]}{[0001|1b00]}开启{[0001|ffff]}{color[ffff]}。
049	关闭当前画面……
050	关闭设置画面。
051	这样一来{color[0400]}{[0001|1b00]}只要人按下开关{[0001|ffff]}{color[ffff]}，\n{color[0400]}{[0001|1b00]}接触感应器小节点就会输出信号{[0001|ffff]}{color[ffff]}了。
052	然后只要实现\n当这个接触感应器输出信号时，\n{color[0400]}{[0001|1b00]}会使桥出现的机制{[0001|ffff]}{color[ffff]}就可以了。
053	要想实现使桥出现的机制，\n同样需要用到{color[0400]}{[0001|1b00]}传送物体小节点{[0001|ffff]}{color[ffff]}。
054	先在这里叫出\n{color[0400]}{[0001|1b00]}传送物体入口小节点{[0001|ffff]}{color[ffff]}。
055	放大传送物体入口小节点……
056	再叫出用作桥的\n{[0001|1b00]}{color[0400]}立方体物体小节点{color[ffff]}{[0001|ffff]}。
057	……你好。\n我会演好桥这个角色的。
058	将物体小节点调节成桥的大小……
059	打开物体小节点的设置画面。
060	仅{color[0400]}{[0001|1b00]}开启状态{[0001|ffff]}{color[ffff]}中的\n“{color[0400]}{[0001|1b00]}能看见{[0001|ffff]}{color[ffff]}”、“{color[0400]}{[0001|1b00]}能接触{[0001|ffff]}{color[ffff]}”。
062	然后将{color[0400]}{[0001|1b00]}颜色{[0001|ffff]}{color[ffff]}设为{color[0400]}{[0001|1b00]}黄色{[0001|ffff]}{color[ffff]}。
063	关闭设置画面。
064	下面打开{color[0400]}{[0001|1b00]}传送物体入口小节点{[0001|ffff]}{color[ffff]}的\n设置画面。
065	{color[0400]}{[0001|1b00]}关闭状态{[0001|ffff]}{color[ffff]}中的“{color[0400]}{[0001|1b00]}能看见{[0001|ffff]}{color[ffff]}”……
066	打开“{color[0400]}{[0001|1b00]}要传送什么？{[0001|ffff]}{color[ffff]}”。
067	仅将{[0001|1b00]}{color[0400]}立方体{color[ffff]}{[0001|ffff]}设为{color[0400]}{[0001|1b00]}开启{[0001|ffff]}{color[ffff]}。
068	关闭当前画面……
069	好，设置完成。
070	接下来在这里叫出\n{color[0400]}{[0001|1b00]}传送物体出口小节点{[0001|ffff]}{color[ffff]}。
070-01	切换成{color[0400]}{[0001|1b00]}水平视角{[0001|ffff]}{color[ffff]}以便调节高度……
070-02	将传送物体出口小节点\n移动到与平面相同的高度。
070-03	在返回{color[0400]}{[0001|1b00]}俯瞰视角{[0001|ffff]}{color[ffff]}后……
072	打开传送物体出口小节点的\n设置画面……
073	{color[0400]}{[0001|1b00]}关闭状态{[0001|ffff]}{color[ffff]}中的“{color[0400]}{[0001|1b00]}能看见{[0001|ffff]}{color[ffff]}”。
074	关闭设置画面……
075	好，这样一来，为了让桥出现\n而做的准备工作就完成了。
076	将{color[0400]}{[0001|1b00]}接触感应器小节点{[0001|ffff]}{color[ffff]}输出的内容\n输入这个{color[0400]}{[0001|1b00]}传送物体入口小节点{[0001|ffff]}{color[ffff]}的话……
076-01	桥就会被传送至出口处，\n{color[0400]}{[0001|1b00]}呈现出桥瞬间出现的效果{[0001|ffff]}{color[ffff]}。
078	请叫出{color[0400]}{[0001|1b00]}无线传送入口小节点{[0001|ffff]}{color[ffff]}，\n以传送接触感应器小节点输出的内容。
079	这里是入口A，\n即将与接触感应器小节点进行接触，\n请讲。
080	将无线传送入口小节点放在蓝框处……
081	连接{color[0400]}{[0001|1b00]}接触感应器小节点\n{[0001|ffff]}{color[ffff]}与{color[0400]}{[0001|1b00]}无线传送入口小节点{[0001|ffff]}{color[ffff]}。
082	在这边叫出\n{color[0400]}{[0001|1b00]}无线传送出口小节点{[0001|ffff]}{color[ffff]}。
083	这里是出口A。\n明白，我也将与对象进行接触。\n请讲。
084	将其移至\n传送物体小节点旁边……
085	连接{color[0400]}{[0001|1b00]}无线传送出口小节点\n{[0001|ffff]}{color[ffff]}与{color[0400]}{[0001|1b00]}传送物体入口小节点{[0001|ffff]}{color[ffff]}。
086	这样一来，{color[0400]}{[0001|1b00]}当按下开关后\n桥会出现的机制{[0001|ffff]}{color[ffff]}就完成了。
087	让我们去游戏画面确认一下。
088	按下开关试试。
089	看！\n桥出现了！
090	虽然你刚才惊呼“桥出现了！”\n但是……我好像没觉得\n这座桥的出现有那么强的魄力？
091	唔……\n的确……有这种感觉。
092	我有个好主意！
093	哦……\n那么可以请你实践一下吗？
094	那么，{[0201]}！\n让我们返回程序画面开始编程吧！
095	为了让桥的出现充满魄力……
096	请叫出{color[0400]}{[0001|1b00]}烟雾{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1b00]}特效小节点{[0001|ffff]}{color[ffff]}！
097	大家好～～
098	你想瞧见嗨翻天的登场是吧？
099	但能瞧出什么花样呢～\n我小时候可总被教育\n非礼勿视啊～
100	……原来此桥非彼瞧啊～～～！
101	……那么，请将特效小节点稍微放大……
102000	打开特效小节点的设置画面。
102001	请将{color[0400]}{[0001|1b00]}特效出现的位置{[0001|ffff]}{color[ffff]}设为{color[0400]}{[0001|1b00]}空间{[0001|ffff]}{color[ffff]}！
1020031000	然后{color[0400]}{[0001|1b00]}关闭状态{[0001|ffff]}{color[ffff]}中的“{color[0400]}{[0001|1b00]}能看见{[0001|ffff]}{color[ffff]}”。
102002	关闭设置画面～
103	接着请叫出{color[0400]}{[0001|1b00]}无线传送出口小节点{[0001|ffff]}{color[ffff]}。
103000	移至特效小节点旁边……
104	将这个无线传送出口小节点\n与特效小节点进行连接！
105	原来如此……\n这个{color[0400]}{[0001|1b00]}无线传送出口小节点{[0001|ffff]}{color[ffff]}的\n{color[0400]}{[0001|1b00]}传送ID{[0001|ffff]}{color[ffff]}是{[0001|1b00]}{color[0400]}A{color[ffff]}{[0001|ffff]}……
106	所以{color[0400]}{[0001|1b00]}接触感应器小节点输出的信号\n{[0001|ffff]}{color[ffff]}会传送到这里对吧。
107	没错！
108	因此{color[0400]}{[0001|1b00]}在桥被传送的同时{[0001|ffff]}{color[ffff]}，\n会显示特效！
109	让我们去游戏画面确认一下！
110	请尝试按下开关～
111	看！\n桥在{color[0400]}{[0001|1b00]}烟雾{[0001|ffff]}{color[ffff]}中华丽登场了！
112	哦哦～～
113	这次魄力十足啊。
114	没错吧～～？
115	哎呀……\n不好意思，干扰你讲解了。
116	效果很不错哦，\n谢谢你。
117	……
118	那么，接下来让我们编程实现\n{color[0400]}{[0001|1b00]}桥在出现10秒后消失的机制{[0001|ffff]}{color[ffff]}。
119	前往程序画面。
120	{[0201]}，\n接下来会有一定难度……\n要努力跟上哦。
121	先叫出{color[0400]}{[0001|1b00]}旗标小节点{[0001|ffff]}{color[ffff]}。
122	呼噜……
123	稍微移动旗标小节点……
124	将接触感应器小节点连接到\n旗标小节点的{color[0400]}{[0001|1b00]}开启端口{[0001|ffff]}{color[ffff]}。
125	这样一来，\n{color[0400]}{[0001|1b00]}当人按下开关{[0001|ffff]}{color[ffff]}，{color[0400]}{[0001|1b00]}\n旗标小节点{[0001|ffff]}{color[ffff]}就会变为{color[0400]}{[0001|1b00]}开启{[0001|ffff]}{color[ffff]}状态。
126	……等开关被按下后，\n再叫醒我……
127	再叫出{color[0400]}{[0001|1b00]}计时小节点{[0001|ffff]}{color[ffff]}。
128	竟然又把我叫出来了……
129	看来这次没有按部就班地推进啊。
130	我可不太欣赏这种作风。\n做任何事都应当提前详尽地\n制订计划并严格遵守才是……
131	按计划行动固然重要，\n但打破常规随心所欲地创造……\n也很有趣哦。
132	……唔，\n我倒是不太在乎那些。
133	那么，把计时小节点\n移至旗标小节点旁边。
134	连接旗标小节点与计时小节点。
135	这样一来，当人按下开关，\n{color[0400]}{[0001|1b00]}旗标小节点{[0001|ffff]}{color[ffff]}变为{color[0400]}{[0001|1b00]}开启{[0001|ffff]}{color[ffff]}状态后……
136	计时小节点\n就会{color[0400]}{[0001|1b00]}每秒输出信号{[0001|ffff]}{color[ffff]}了。
137	然后叫出{color[0400]}{[0001|1b00]}计数小节点{[0001|ffff]}{color[ffff]}以统计秒数。
138	好的，在开关被按下后，\n我将统计经过的秒数。
139	将计数小节点移动到\n计时小节点旁边。
140	将计时小节点与\n计数小节点的{color[0400]}{[0001|1b00]}增加端口{[0001|ffff]}{color[ffff]}进行连接。
141	这样就完成了当人按下开关后，\n{color[0400]}{[0001|1b00]}统计所经过秒数{[0001|ffff]}{color[ffff]}的机制。
142	那接下来，\n要实现{color[0400]}{[0001|1b00]}剩余时间{[0001|ffff]}{color[ffff]}的计算。
143	这次我们想让桥\n在出现{[0001|1b00]}{color[0400]}10秒{color[ffff]}{[0001|ffff]}后消失……
144	那么用常数{color[0400]}{[0001|1b00]}10.00减去\n{[0001|ffff]}{color[ffff]}人{color[0400]}{[0001|1b00]}按下开关后经过的秒数{[0001|ffff]}{color[ffff]}……
145	就能够计算出{color[0400]}{[0001|1b00]}剩余秒数{[0001|ffff]}{color[ffff]}了。
146	来，先叫出{color[0400]}{[0001|1b00]}常数小节点{[0001|ffff]}{color[ffff]}。
147	你好！\n我是常数小节点，我有一颗\n分分秒秒都不改变的专一之心！
148	将常数小节点\n移至计数小节点上方。
149	打开设置画面……
150	设为{color[0400]}{[0001|1b00]}10.00{[0001|ffff]}{color[ffff]}。
150000	关闭设置画面。
151	接下来叫出{color[0400]}{[0001|1b00]}－{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1b00]}计算小节点{[0001|ffff]}{color[ffff]}……
152	要想计算剩余时间，\n请交给我这台高性能计算器！
153	将计算小节点\n移至计数小节点旁边。
154	然后将常数小节点与\n计算小节点的{color[0400]}{[0001|1b00]}输入1端口{[0001|ffff]}{color[ffff]}进行连接。
155	将计数小节点与\n计算小节点的{color[0400]}{[0001|1b00]}输入2端口{[0001|ffff]}{color[ffff]}进行连接。
156	这样一来，{color[0400]}{[0001|1b00]}计算小节点\n{[0001|ffff]}{color[ffff]}就能够{color[0400]}{[0001|1b00]}输出剩余秒数{[0001|ffff]}{color[ffff]}了。
157	下面让我们想办法将{color[0400]}{[0001|1b00]}剩余时间\n显示在游戏画面当中{[0001|ffff]}{color[ffff]}吧。
158	我们的目标是\n将剩余秒数显示在桥的旁边。
159	既然要显示数字……\n就叫出{color[0400]}{[0001|1b00]}带数字物体小节点{[0001|ffff]}{color[ffff]}吧。
160	好，{color[0400]}{[0001|1b00]}用时间限制减去经过的时间{[0001|ffff]}{color[ffff]}，\n就能够得出剩余时间。
161	其实减法经常在这样的场合\n用于计算剩余的数值哦。
161-01	切换成{color[0400]}{[0001|1b00]}水平视角\n{[0001|ffff]}{color[ffff]}以便于放大带数字物体小节点。
161-02	放大带数字物体小节点。
161-03	返回{color[0400]}{[0001|1b00]}俯瞰视角{[0001|ffff]}{color[ffff]}。
162	打开带数字物体小节点的\n设置画面。
163	{color[0400]}{[0001|1b00]}开启状态{[0001|ffff]}{color[ffff]}中的“{color[0400]}{[0001|1b00]}能看见{[0001|ffff]}{color[ffff]}”。
164	关闭设置画面。
165	我们想将之前{color[0400]}{[0001|1b00]}计算小节点输出的数值\n{[0001|ffff]}{color[ffff]}输入这个带数字物体小节点……
166	但他们相距有点远……\n叫出{color[0400]}{[0001|1b00]}无线传送入口小节点{[0001|ffff]}{color[ffff]}吧。
167	打开设置画面。
168	将{color[0400]}{[0001|1b00]}传送ID{[0001|ffff]}{color[ffff]}设为{color[0400]}{[0001|1b00]}C{[0001|ffff]}{color[ffff]}。
169	关闭设置画面。
170	连接计算小节点\n与无线传送入口小节点。
171	在这边叫出{color[0400]}{[0001|1b00]}无线传送出口小节点{[0001|ffff]}{color[ffff]}。
172	打开设置画面。
173	将{color[0400]}{[0001|1b00]}传送ID{[0001|ffff]}{color[ffff]}设为{color[0400]}{[0001|1b00]}C{[0001|ffff]}{color[ffff]}。
174	关闭设置画面……
175	连接无线传送出口小节点\n与带数字物体小节点。
176	好，这样一来计算结果……\n也就是{color[0400]}{[0001|1b00]}剩余时间{[0001|ffff]}{color[ffff]}就会\n显示在带数字物体上了。
177	去游戏画面看看吧。
178	按下开关。
179	成功地让显示在桥旁边的\n数字开始{color[0400]}{[0001|1b00]}倒数{[0001|ffff]}{color[ffff]}了！
180	这样距离桥消失的\n{color[0400]}{[0001|1b00]}剩余时间{[0001|ffff]}{color[ffff]}就一目了然了。
181	当然，我们还没有为\n桥消失的机制编程……
182	不过暂时不管那个……\n我们先继续关注正在倒数的数字。
182-01	我想看看倒数的数字，\n再按一次开关吧。
183	数字变成了{color[0400]}{[0001|1b00]}负数{[0001|ffff]}{color[ffff]}。
184	{color[0400]}{[0001|1b00]}剩余时间变为0之后{[0001|ffff]}{color[ffff]}，\n计数却{color[0400]}{[0001|1b00]}没有停止{[0001|ffff]}{color[ffff]}。
185	那就让我们通过编程，\n让{color[0400]}{[0001|1b00]}计数到0为止{[0001|ffff]}{color[ffff]}。
186	要想让计数在剩余时间\n变为0时停止……
187	首先需要能够识别出\n{color[0400]}{[0001|1b00]}剩余时间是否为0{[0001|ffff]}{color[ffff]}。
188	说到这方面的专家……
189	让我们叫出{color[0400]}＝{color[ffff]}的{color[0400]}{[0001|1b00]}比较小节点{[0001|ffff]}{color[ffff]}。
190	是不是很想知道……\n剩余时间是否等于0？
191	将比较小节点放在计算小节点旁边。
192	再叫出{color[0400]}{[0001|1b00]}常数小节点{[0001|ffff]}{color[ffff]}。
193	将常数小节点放在计算小节点上方。
194	打开常数小节点的设置画面。
196	设为{color[0400]}{[0001|1b00]}0.00{[0001|ffff]}{color[ffff]}。
197	关闭设置画面。
198	将常数小节点\n与比较小节点的{color[0400]}{[0001|1b00]}输入1端口{[0001|ffff]}{color[ffff]}进行连接。
199	再将计算小节点\n与比较小节点的{color[0400]}{[0001|1b00]}输入2端口{[0001|ffff]}{color[ffff]}进行连接。
200	这样就可以判断\n{color[0400]}{[0001|1b00]}剩余时间是否为0{[0001|ffff]}{color[ffff]}了。
201	让我们在这里叫出\n{color[0400]}{[0001|1b00]}无线传送入口小节点{[0001|ffff]}{color[ffff]}……
202	放在比较小节点旁边。
203	打开设置画面。
204	将{color[0400]}{[0001|1b00]}传送ID{[0001|ffff]}{color[ffff]}设为尚未使用的{color[0400]}{[0001|1b00]}B{[0001|ffff]}{color[ffff]}。
205	关闭设置画面。
206	然后将其与比较小节点连接……
207	这样一来就能将{color[0400]}{[0001|1b00]}剩余时间是否为0{[0001|ffff]}{color[ffff]}的情况\n输入{[0001|1b00]}{color[0400]}B{color[ffff]}{[0001|ffff]}的{color[0400]}{[0001|1b00]}无线传送入口小节点{[0001|ffff]}{color[ffff]}了。
207000	我们的目的是在剩余时间变为0时\n停止时间的计数……
208	因此要用{[0001|1b00]}{color[0400]}B{color[ffff]}{[0001|ffff]}的{color[0400]}{[0001|1b00]}无线传送出口小节点\n{[0001|ffff]}{color[ffff]}来{color[0400]}{[0001|1b00]}关闭旗标小节点{[0001|ffff]}{color[ffff]}。
209	来，叫出{color[0400]}{[0001|1b00]}无线传送出口小节点{[0001|ffff]}{color[ffff]}。
210	放在旗标小节点下方。
211	打开设置画面。
212	将{color[0400]}{[0001|1b00]}传送ID{[0001|ffff]}{color[ffff]}设为{color[0400]}{[0001|1b00]}B{[0001|ffff]}{color[ffff]}。
213	关闭设置画面。
214	将这个{color[0400]}{[0001|1b00]}无线传送出口小节点{[0001|ffff]}{color[ffff]}与\n{color[0400]}{[0001|1b00]}旗标小节点{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1b00]}关闭端口{[0001|ffff]}{color[ffff]}进行连接。
215	这样一来，\n{color[0400]}{[0001|1b00]}当剩余时间变为0时{[0001|ffff]}{color[ffff]}，\n旗标小节点就会{color[0400]}{[0001|1b00]}关闭{[0001|ffff]}{color[ffff]}……
216	也就是{color[0400]}{[0001|1b00]}不再向计时小节点输入信号{[0001|ffff]}{color[ffff]}……
217	所以{color[0400]}{[0001|1b00]}时间的计数就会停止{[0001|ffff]}{color[ffff]}。
218	此外，为使{color[0400]}{[0001|1b00]}旗标小节点关闭时{[0001|ffff]}{color[ffff]}，\n剩余时间能够{color[0400]}{[0001|1b00]}恢复为10{[0001|ffff]}{color[ffff]}……
219	我们需要在旗标小节点{color[0400]}{[0001|1b00]}关闭时{[0001|ffff]}{color[ffff]}\n{color[0400]}{[0001|1b00]}重置计数小节点{[0001|ffff]}{color[ffff]}。
220	为实现{color[0400]}{[0001|1b00]}在关闭时做到某事{[0001|ffff]}{color[ffff]}……\n让我们叫出{color[0400]}{[0001|1b00]}NOT小节点{[0001|ffff]}{color[ffff]}吧。
221	{[0201]}，\n这是你要做的最后一个游戏了吧？
222	你做的最后一个游戏会是什么样子，\n我真是非常期待……才怪！
224	将旗标小节点与NOT小节点进行连接。
225	将NOT小节点与\n计数小节点的{color[0400]}{[0001|1b00]}重置端口{[0001|ffff]}{color[ffff]}进行连接。
226	这样{color[0400]}{[0001|1b00]}剩余时间在变为0的瞬间\n会恢复为10的机制{[0001|ffff]}{color[ffff]}就完成了。
227	去游戏画面确认一下。
228	尝试按下开关。
229	注意观察桥旁边的数字……
229-01	再按一次开关吧。
230	看！剩余时间\n在变为0的瞬间恢复为10了！
231	10秒计时机制就此完成。
232	我们一口气进行了\n这样漫长的编程……
233	{[0201]}，\n你累了吗？
234	{[0201]}\n肯定没问题的。
235	就剩最后一点了，\n要坚持到底啊。
236	那么，最后我们要来编程实现\n当剩余时间变为0时{color[0400]}{[0001|1b00]}桥会消失{[0001|ffff]}{color[ffff]}的机制。
237	在进入编程之前……
238	注意这个{color[0400]}{[0001|1b00]}传送ID为A{[0001|ffff]}{color[ffff]}的\n{color[0400]}{[0001|1b00]}无线传送入口小节点{[0001|ffff]}{color[ffff]}。
239	{color[0400]}{[0001|1b00]}每当按下开关{[0001|ffff]}{color[ffff]}，\n这个无线传送入口小节点\n都会接收到信号。
240	这个信号会传送给\n{color[0400]}{[0001|1b00]}连接在特效小节点身上的{[0001|ffff]}{color[ffff]}\n无线传送出口小节点……
242	所以每当按下开关时，\n都会显示特效。
243	……感觉好累赘啊……
244	改改吧。
245	{color[0400]}{[0001|1b00]}删除{[0001|ffff]}{color[ffff]}连接接触感应器小节点\n与无线传送入口小节点的{color[0400]}{[0001|1b00]}线{[0001|ffff]}{color[ffff]}。
246	将{[0001|1b00]}{color[0400]}A{color[ffff]}{[0001|ffff]}的{color[0400]}{[0001|1b00]}无线传送入口小节点\n{[0001|ffff]}{color[ffff]}向旁边移动。
247	然后连接{color[0400]}{[0001|1b00]}旗标小节点{[0001|ffff]}{color[ffff]}与\n{color[0400]}{[0001|1b00]}无线传送入口小节点{[0001|ffff]}{color[ffff]}。
248	这样一来，只有在{color[0400]}{[0001|1b00]}旗标小节点\n从关闭变为开启的瞬间{[0001|ffff]}{color[ffff]}，\n特效才会显示。
249	啊～干净利索。
250	言归正传。
251	我们要编程实现\n{color[0400]}{[0001|1b00]}当剩余时间变为0时桥会消失的机制{[0001|ffff]}{color[ffff]}。
252	要想使物体消失……\n让我们叫出{color[0400]}{[0001|1b00]}传送物体入口小节点{[0001|ffff]}{color[ffff]}。
254	打开设置画面。
255	将{color[0400]}{[0001|1b00]}传送ID{[0001|ffff]}{color[ffff]}设为{color[0400]}{[0001|1b00]}B{[0001|ffff]}{color[ffff]}。
255000	{color[0400]}{[0001|1b00]}关闭状态{[0001|ffff]}{color[ffff]}中的“{color[0400]}{[0001|1b00]}能看见{[0001|ffff]}{color[ffff]}”。
255001	请打开“{color[0400]}{[0001|1b00]}要传送什么？{[0001|ffff]}{color[ffff]}”。
255002	仅将{[0001|1b00]}{color[0400]}立方体{color[ffff]}{[0001|ffff]}设为{color[0400]}{[0001|1b00]}开启{[0001|ffff]}{color[ffff]}。
255003	关闭当前画面。
256	关闭设置画面……
257	放大传送物体入口小节点。
257-01	切换成{color[0400]}{[0001|1b00]}水平视角{[0001|ffff]}{color[ffff]}以便调节高度。
257-02	为了能够传送桥，\n将其移动到高度与桥相同的地方。
257-03	返回{color[0400]}{[0001|1b00]}俯瞰视角{[0001|ffff]}{color[ffff]}。
258	还记得会通知我们\n{color[0400]}{[0001|1b00]}剩余时间变为0{[0001|ffff]}{color[ffff]}的小节点吗？
259	记得是……\n{color[0400]}{[0001|1b00]}传送ID为B{[0001|ffff]}{color[ffff]}的\n{color[0400]}{[0001|1b00]}无线传送出口小节点{[0001|ffff]}{color[ffff]}。
260	来，叫出{color[0400]}{[0001|1b00]}无线传送出口小节点{[0001|ffff]}{color[ffff]}。
261	打开设置画面。
262	将{color[0400]}{[0001|1b00]}传送ID{[0001|ffff]}{color[ffff]}设为{color[0400]}{[0001|1b00]}B{[0001|ffff]}{color[ffff]}。
263	关闭设置画面……
264	连接无线传送出口小节点\n与传送物体入口小节点。
265	这样{color[0400]}{[0001|1b00]}当剩余时间变为0时{[0001|ffff]}{color[ffff]}，{color[0400]}{[0001|1b00]}\n桥就会消失{[0001|ffff]}{color[ffff]}了。
266	但这样一来……\n桥消失之后就不会再度出现……
267	这代价惨重了点……
268	是啊。
269	所以我们需要想办法实现\n{color[0400]}{[0001|1b00]}当再次按下开关时桥还会出现{[0001|ffff]}{color[ffff]}的机制。
270	为此……
271	我们不要让桥消失，\n而是用{color[0400]}{[0001|1b00]}传送ID为B{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1b00]}传送物体出口小节点{[0001|ffff]}{color[ffff]}\n将其{color[0400]}{[0001|1b00]}传送{[0001|ffff]}{color[ffff]}回原位就可以了。
272	那就让我们叫出\n{color[0400]}{[0001|1b00]}传送物体出口小节点{[0001|ffff]}{color[ffff]}。
274	打开设置画面。
275	{color[0400]}{[0001|1b00]}传送ID{[0001|ffff]}{color[ffff]}已经是{color[0400]}{[0001|1b00]}B{[0001|ffff]}{color[ffff]}了。
275000	让我们{color[0400]}{[0001|1b00]}关闭状态{[0001|ffff]}{color[ffff]}中的“{color[0400]}{[0001|1b00]}能看见{[0001|ffff]}{color[ffff]}”。
276	关闭设置画面。
277	把传送物体出口小节点\n放在桥的中心处。
278	{color[0400]}{[0001|1b00]}当剩余时间变为0时{[0001|ffff]}{color[ffff]}，\n{color[0400]}{[0001|1b00]}桥会被传送到{[0001|ffff]}{color[ffff]}这里……
279	因此{color[0400]}{[0001|1b00]}当按下开关时{[0001|ffff]}{color[ffff]}，\n在{color[0400]}{[0001|1b00]}传送物体入口小节点{[0001|ffff]}{color[ffff]}的\n力量作用下，{color[0400]}{[0001|1b00]}桥{[0001|ffff]}{color[ffff]}会再次{color[0400]}{[0001|1b00]}出现{[0001|ffff]}{color[ffff]}。
280	来，话不多说，去确认一下就明白了。
281	尝试按下开关。
282-00	离开开关上方……
282	继续等待剩余时间变为0……
282-01	从按下开关的操作开始重来一次。
283	桥消失了！\n来，尝试再次按下开关！
284	桥成功再次出现了～！
284-01	当剩余时间变为0时桥会消失……
284-02	这时如果还站在开关上方，\n开关会被再次按下，\n于是桥就出现了。
285	哦哦～～！\n了不起～～
286	计时式开关至此大功告成！
287	好了，前往程序画面。
293	那么～～这样一来～～～
294	第4步就完成了！！
295-01	呼噜……恭喜。
295-02	不可喜不可贺。
295-03	恭喜～～！
296	不愧是{[0201]}！\n全程都跟上了讲解！
297	{[0201]}……\n真了不起。
298	竟然能完成这种高难度编程……
299	看，游戏的内容越来越完整了。
300	{[0201]}无疑将左右\n游戏最终成品的走向！
301	下次我们要制作敌方角色了～
302	敌方角色……
303	下个步骤再会～
304	敬请期待～
Lesson_3DAction_04.msbt
000	你好～～
001	等你很久了。
002	这次我们准备制作{color[0400]}{[0001|1b00]}敌方角色{[0001|ffff]}{color[ffff]}。
003	按照大纲……\n要制作的是{color[0400]}{[0001|1b00]}当玩家出现在面前时\n会发动突击{[0001|ffff]}{color[ffff]}的敌方角色……
004	我觉得{color[0400]}{[0001|1b00]}一边追击玩家\n一边开火{[0001|ffff]}{color[ffff]}的敌方角色更有趣。
005	明白了，那么这次\n也交由{[0201]}决定吧。
006	你想制作{color[0400]}{[0001|1b00]}向玩家突击的敌人\n{[0001|ffff]}{color[ffff]}还是{color[0400]}{[0001|1b00]}向玩家开火的敌人{[0001|ffff]}{color[ffff]}？
006a	向玩家突击的敌人
006b	向玩家开火的敌人
007	明白了！\n那我们就来制作\n{color[0400]}{[0001|1b00]}向玩家突击的敌人{[0001|ffff]}{color[ffff]}。
008	我也会提供协助的。
008000	谢谢！
009	那么让我们前往程序画面！
010	好，那我们就来制作\n{color[0400]}{[0001|1b00]}一边追击玩家一边开火的敌人{[0001|ffff]}{color[ffff]}。
011	想必能做出很有趣的敌人！
012	是吧。
013	好，让我们前往程序画面！
Lesson_3DAction_04a.msbt
000	那么，我们来制作{color[0400]}{[0001|1b00]}当人出现在面前时\n会发动突击的敌人{[0001|ffff]}{color[ffff]}～
001	先在这附近制作\n用来安放敌人的{color[0400]}{[0001|1b00]}平面{[0001|ffff]}{color[ffff]}。
001-01	将这片区域的平面\n做成稍微特别一点的形状吧～
002	首先请复制这个物体小节点……
002-01	更改大小使他变扁～
003	然后{color[0400]}{[0001|1b00]}滚动程序画面{[0001|ffff]}{color[ffff]}，\n把他放在{color[0400]}{[0001|1b00]}上方{[0001|ffff]}{color[ffff]}的蓝框处。
006	继续复制物体小节点……
007	这次在{color[0400]}{[0001|1b00]}滚动程序画面{[0001|ffff]}{color[ffff]}的同时，\n更改大小使他变得瘦高后放在上方。
008	再次复制这个物体小节点……
009	滚动程序画面，把他放在{color[0400]}{[0001|1b00]}上方{[0001|ffff]}{color[ffff]}。
009000	这次要复制的是这个物体小节点……
009001	请滚动程序画面，把他放在上方～
010	好！蜿蜒曲折的场地大功告成！
011	蜿蜒曲折～
014	我们先来移动这个用于\n确认效果的{color[0400]}{[0001|1b00]}传送物体出口小节点{[0001|ffff]}{color[ffff]}，\n以便更快捷地确认！
015	滚动程序画面，\n把这个{color[0400]}{[0001|1b00]}传送物体出口小节点{[0001|ffff]}{color[ffff]}\n移动到{color[0400]}{[0001|1b00]}蜿蜒曲折的场地{[0001|ffff]}{color[ffff]}处。
032	没问题了！\n去游戏画面确认一下吧！
033	好！\n成功传送至蜿蜒曲折的场地了！
035	怎么样！？\n这样的场地是不是很有趣～？
036	我们要在这里制作\n会对人发动攻击的敌人！
037	那就进入程序画面\n开始编程吧～
038	需要敌人登场时，原本应当是\n{color[0400]}{[0001|1b00]}时尚物体小节点当中的外星人\n{[0001|ffff]}{color[ffff]}大显身手的时候……
039	但是我们没办法\n让什么也没连接的{color[0400]}{[0001|1b00]}外星人{[0001|ffff]}{color[ffff]}移动起来！
040	因此在这里我们要……
041	叫出{[0001|1b00]}{color[0400]}立方体{color[ffff]}{[0001|ffff]}的{color[0400]}{[0001|1b00]}移动物体小节点{[0001|ffff]}{color[ffff]}！
042	你好！\n{[0201]}，\n在坚持运动吗～？
043	那贯穿全部课堂教学的恒心……
044	在运动中也一定会得到体现的！
047	将移动物体小节点向右移动……
047-01	接下来请从{color[0400]}{[0001|1b00]}圆形时尚物体{[0001|ffff]}{color[ffff]}中叫出\n{color[0400]}{[0001|1b00]}外星人{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1b00]}时尚物体小节点{[0001|ffff]}{color[ffff]}！
047-02	地外生命……外星人。\n堪称人类探求未知文化的图腾……
047-03	竟然选了外星人，\n{[0201]}果然好品位♥
047-04	将时尚物体小节点稍微放大一些，\n移至移动物体小节点上方。
047-05	然后请打开时尚物体小节点的\n设置画面！
047-06	{color[0400]}{[0001|1b00]}开启状态{[0001|ffff]}{color[ffff]}中的“{color[0400]}{[0001|1b00]}能破坏{[0001|ffff]}{color[ffff]}”……
047-08	然后在{color[0400]}{[0001|1b00]}连接面{[0001|ffff]}{color[ffff]}当中\n将“{[0001|1b00]}自己的连接面{[0001|ffff]}”\n和“{[0001|1b00]}连接对象的连接面{[0001|ffff]}”都设为{[0001|1b00]}{color[0400]}中央{color[ffff]}{[0001|ffff]}。
047-09	请关闭当前画面……
047-10	关闭设置画面。
047-11	然后将{color[0400]}{[0001|1b00]}时尚物体小节点\n连接{[0001|ffff]}{color[ffff]}到{color[0400]}{[0001|1b00]}移动物体小节点{[0001|ffff]}{color[ffff]}！
047-12	再打开{color[0400]}{[0001|1b00]}移动物体小节点{[0001|ffff]}{color[ffff]}的\n设置画面。
047-13	{color[0400]}{[0001|1b00]}开启状态{[0001|ffff]}{color[ffff]}中的“{color[0400]}{[0001|1b00]}能接触{[0001|ffff]}{color[ffff]}”……
047-1300	然后打开{color[0400]}{[0001|1b00]}模式{[0001|ffff]}{color[ffff]}……
047-1301	设为“{[0001|1b00]}{color[0400]}速度{color[ffff]}{[0001|ffff]}”。
047-14	请关闭设置画面。
047-1400	通过连接{color[0400]}{[0001|1b00]}时尚物体小节点{[0001|ffff]}{color[ffff]}与\n{color[0400]}{[0001|1b00]}看不见的移动物体小节点{[0001|ffff]}{color[ffff]}……
047-1401	就{color[0400]}{[0001|1b00]}能让外星人移动起来{[0001|ffff]}{color[ffff]}了，对吧？
047-15	完全正确！
047-16	让我们先去游戏画面\n确认一下吧～
047-17	看到外星人了～！
047-18	我们要让这个外星人{color[0400]}{[0001|1b00]}面向左侧{[0001|ffff]}{color[ffff]}，\n并使其在{color[0400]}{[0001|1b00]}人出现在面前时会发动突击{[0001|ffff]}{color[ffff]}！
047-19	前往程序画面吧！
047-20	首先，为使外星人面向左侧……
047-21	请将{color[0400]}{[0001|1b00]}移动物体小节点\n向右旋转90°{[0001|ffff]}{color[ffff]}。
047-22	因为{color[0400]}{[0001|1b00]}时尚物体小节点{[0001|ffff]}{color[ffff]}与\n{color[0400]}{[0001|1b00]}移动物体小节点连接{[0001|ffff]}{color[ffff]}在一起……
047-23	所以当{color[0400]}{[0001|1b00]}旋转移动物体小节点{[0001|ffff]}{color[ffff]}时，\n{color[0400]}{[0001|1b00]}外星人也会随之旋转{[0001|ffff]}{color[ffff]}。
047-24	没错！\n感谢补充！
047-25	接下来！让我们编程实现\n{color[0400]}{[0001|1b00]}当人出现在面前时\n外星人会发动突击的机制{[0001|ffff]}{color[ffff]}吧！
053	为监测到\n{color[0400]}{[0001|1b00]}人出现在外星人面前的事实{[0001|ffff]}{color[ffff]}……
054	请叫出{color[0400]}{[0001|1b00]}接触感应器小节点{[0001|ffff]}{color[ffff]}。
055	噫，这次找我有什么事？
057	请将{color[0400]}{[0001|1b00]}接触感应器小节点{[0001|ffff]}{color[ffff]}放大后\n放在左边。
058	然后切换成{color[0400]}{[0001|1b00]}水平视角{[0001|ffff]}{color[ffff]}……
059	将其向高处移动，放在平面上方。
060	请返回俯瞰视角～
061	打开接触感应器小节点的\n设置画面！
062	请{color[0400]}{[0001|1b00]}关闭状态{[0001|ffff]}{color[ffff]}中的“{color[0400]}{[0001|1b00]}能看见{[0001|ffff]}{color[ffff]}”……
063	打开“{color[0400]}{[0001|1b00]}要检查什么？{[0001|ffff]}{color[ffff]}”。
064	仅将{[0001|1b00]}{color[0400]}人{color[ffff]}{[0001|ffff]}设为{color[0400]}{[0001|1b00]}开启{[0001|ffff]}{color[ffff]}。
065	关闭当前画面……
066	关闭设置画面。
068	{color[0400]}{[0001|1b00]}当人接触{[0001|ffff]}{color[ffff]}这个接触感应器小节点时，\n要让{color[0400]}{[0001|1b00]}外星人发动突击{[0001|ffff]}{color[ffff]}。
068-01	请先叫出{color[0400]}{[0001|1b00]}旗标小节点{[0001|ffff]}{color[ffff]}，\n他能让接触感应器小节点\n记住自己被接触过。
068-02	呼噜……\n等人来到外星人面前……\n再叫醒我。
068-03	把旗标小节点放在\n接触感应器小节点旁边……
068-04	将接触感应器小节点与\n旗标小节点的{color[0400]}{[0001|1b00]}开启端口{[0001|ffff]}{color[ffff]}进行连接！
068-05	这样一来，\n当人接触接触感应器小节点时，\n{color[0400]}{[0001|1b00]}旗标小节点就会{[0001|ffff]}{color[ffff]}变为{color[0400]}{[0001|1b00]}开启{[0001|ffff]}{color[ffff]}状态！
068-06	接下来，我们想让{color[0400]}{[0001|1b00]}外星人\n{[0001|ffff]}{color[ffff]}能在旗标小节点{color[0400]}{[0001|1b00]}开启期间移动{[0001|ffff]}{color[ffff]}。
069	因为想让外星人向左……\n也就是{[0001|1b00]}{color[0400]}向X-方向移动{color[ffff]}{[0001|ffff]}……
070	所以必须向移动物体小节点的\n{color[0400]}{[0001|1b00]}X端口{[0001|ffff]}{color[ffff]}输入{color[0400]}{[0001|1b00]}负数{[0001|ffff]}{color[ffff]}！
071	那么请先叫出{color[0400]}{[0001|1b00]}常数小节点{[0001|ffff]}{color[ffff]}。
072	你好！我是常数小节点，\n我有一颗即使直面敌人的突击\n也不动摇的专一之心！
073	移动常数小节点……
074	打开设置画面。
075	设为{color[0400]}{[0001|1b00]}-5.00{[0001|ffff]}{color[ffff]}。
076	请关闭设置画面。
077	目标是只在{color[0400]}{[0001|1b00]}旗标小节点开启期间\n{[0001|ffff]}{color[ffff]}把这个{color[0400]}{[0001|1b00]}-5.00输入移动物体小节点{[0001|ffff]}{color[ffff]}是吧？
080	没错！为此请叫出{[0001|1b00]}{color[0400]}×{color[ffff]}{[0001|ffff]}的{color[0400]}{[0001|1b00]}计算小节点{[0001|ffff]}{color[ffff]}！
081	明白。\n就交给我这台高性能计算器吧。
082	把计算小节点\n放在移动物体小节点左边。
083	请将{color[0400]}{[0001|1b00]}旗标小节点{[0001|ffff]}{color[ffff]}与\n{color[0400]}{[0001|1b00]}计算小节点{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1b00]}输入1端口{[0001|ffff]}{color[ffff]}进行连接。
084	再将{color[0400]}{[0001|1b00]}常数小节点{[0001|ffff]}{color[ffff]}与\n{color[0400]}{[0001|1b00]}计算小节点{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1b00]}输入2端口{[0001|ffff]}{color[ffff]}进行连接。
085	然后将计算小节点与\n移动物体小节点的{color[0400]}{[0001|1b00]}X端口\n{[0001|ffff]}{color[ffff]}进行连接……
086	这样一来，\n{color[0400]}{[0001|1b00]}当人接触接触感应器小节点时{[0001|ffff]}{color[ffff]}，\n{color[0400]}{[0001|1b00]}外星人就会发动突击{[0001|ffff]}{color[ffff]}了！
087	在接触感应器小节点\n{color[0400]}{[0001|1b00]}被人接触之前{[0001|ffff]}{color[ffff]}……
088	{color[0400]}{[0001|1b00]}旗标小节点处于关闭状态{[0001|ffff]}{color[ffff]}，\n因此不会输出信号。
089	因为计算小节点未接收到信号，\n所以{color[0400]}{[0001|1b00]}即使相乘{[0001|ffff]}{color[ffff]}，{color[0400]}{[0001|1b00]}计算结果也是0{[0001|ffff]}{color[ffff]}。
090	相对的，\n当接触感应器小节点{color[0400]}{[0001|1b00]}被人接触{[0001|ffff]}{color[ffff]}后……
091	{color[0400]}{[0001|1b00]}旗标小节点{[0001|ffff]}{color[ffff]}将会变为{color[0400]}{[0001|1b00]}开启{[0001|ffff]}{color[ffff]}状态，\n向计算小节点输入{color[0400]}{[0001|1b00]}1.00{[0001|ffff]}{color[ffff]}这一数值……
092	从而计算1.00×-5.00，\n向移动物体小节点输入{color[0400]}{[0001|1b00]}-5.00{[0001|ffff]}{color[ffff]}……
093	没错！
094	那么！\n让我们去游戏画面确认一下！
095	请一直走到外星人面前～
096	哇！\n外星人冲过来了！
097	这样就完成了当人出现在面前时\n会发动突击的敌方角色！
097-01	把握时机跳跃躲避是过关的窍门哦。
097-02	没错没错！
133	好了，请前往程序画面。
134	那么～～～这样一来～～
135	第5步就完成了！
136-01	恭喜你啦♥
136-02	恭喜你！！
136-03	噫……恭喜你。
137	随着敌方角色登场，\n游戏越来越有意思了！
138	是啊是啊。
139	我们将在下个步骤中\n制作本游戏的终点。
140	很快就要结束了啊……
141	那么，我们下个步骤再会～
142	坚持到底吧。
Lesson_3DAction_04b.msbt
000	那么，我们接下来要制作\n一边{color[0400]}{[0001|1b00]}左右移动追击{[0001|ffff]}{color[ffff]}，\n一边对人{color[0400]}{[0001|1b00]}开火的敌人{[0001|ffff]}{color[ffff]}。
001	先从平面开始做起。
002	复制这个物体小节点。
003	{color[0400]}{[0001|1b00]}滚动程序画面{[0001|ffff]}{color[ffff]}，\n把他放在{color[0400]}{[0001|1b00]}上方{[0001|ffff]}{color[ffff]}的蓝框处。
004	继续复制这个物体小节点。
005	滚动程序画面，把他移至上方。
006	这样平面就完成了。
006-01	然后来移动这个用于\n传送人的{color[0400]}{[0001|1b00]}传送物体出口小节点{[0001|ffff]}{color[ffff]}，\n以便更快捷地确认！
006-02	向上滚动程序画面，\n将{color[0400]}{[0001|1b00]}传送物体出口小节点{[0001|ffff]}{color[ffff]}\n放在刚才的平面处。
007	来，进入游戏画面确认一下。
028	嗯嗯，顺利传送到\n刚才制作的平面处了。
029	我们要在这里制作\n{color[0400]}{[0001|1b00]}与人同步左右移动的敌人{[0001|ffff]}{color[ffff]}。
030	前往程序画面编程制作敌人吧。
031	需要敌人登场时……原本应当是\n时尚物体小节点当中的{color[0400]}{[0001|1b00]}外星人\n{[0001|ffff]}{color[ffff]}大显身手的时候……
032	但是我们没办法\n让什么也没连接的{color[0400]}{[0001|1b00]}外星人{[0001|ffff]}{color[ffff]}移动起来……
033	因此我们要在编程中\n使用{color[0400]}{[0001|1b00]}移动物体小节点{[0001|ffff]}{color[ffff]}。
034	叫出{[0001|1b00]}{color[0400]}立方体{color[ffff]}{[0001|ffff]}的{color[0400]}{[0001|1b00]}移动物体小节点{[0001|ffff]}{color[ffff]}吧。
035	你好！\n在坚持运动吗！？
036	竟能长驱直入来到最后一课……\n多么令人惊叹的持久力～～！
037	请务必将这份持久力\n也投入到运动中，\n打造更加强健的体魄吧！
037000	打开移动物体小节点的\n设置画面。
037001	打开{color[0400]}{[0001|1b00]}模式{[0001|ffff]}{color[ffff]}。
037002	选择“{[0001|1b00]}{color[0400]}速度{color[ffff]}{[0001|ffff]}”，\n使其不要移动得太快……
037002-01	仅{color[0400]}{[0001|1b00]}开启状态{[0001|ffff]}{color[ffff]}中的\n“{color[0400]}{[0001|1b00]}能接触{[0001|ffff]}{color[ffff]}”、“{color[0400]}{[0001|1b00]}能移动{[0001|ffff]}{color[ffff]}”。
037003	好，\n关闭设置画面。
037-01	把{color[0400]}{[0001|1b00]}时尚物体小节点连接{[0001|ffff]}{color[ffff]}到\n这个{color[0400]}{[0001|1b00]}移动物体小节点{[0001|ffff]}{color[ffff]}，\n就可以{color[0400]}{[0001|1b00]}移动外星人{[0001|ffff]}{color[ffff]}！
037-02	从{color[0400]}{[0001|1b00]}圆形时尚物体{[0001|ffff]}{color[ffff]}中叫出\n{color[0400]}{[0001|1b00]}外星人{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1b00]}时尚物体小节点{[0001|ffff]}{color[ffff]}。
037-03	地外生命……外星人。\n堪称人类探求未知文化的图腾……
037-04	竟然选了外星人，\n{[0201]}果然好品位♥
037-05	将{color[0400]}{[0001|1b00]}时尚物体小节点{[0001|ffff]}{color[ffff]}稍微放大一些，\n移至上方……
037-06	打开设置画面。
037-08	在{color[0400]}{[0001|1b00]}连接面{[0001|ffff]}{color[ffff]}当中\n将“{[0001|1b00]}自己的连接面{[0001|ffff]}”\n和“{[0001|1b00]}连接对象的连接面{[0001|ffff]}”都设为{[0001|1b00]}{color[0400]}中央{color[ffff]}{[0001|ffff]}。
037-09	关闭当前画面。
037-10	关闭设置画面。
037-11	然后将{color[0400]}{[0001|1b00]}时尚物体小节点\n连接{[0001|ffff]}{color[ffff]}到{color[0400]}{[0001|1b00]}移动物体小节点{[0001|ffff]}{color[ffff]}。
037-12	移动外星人的准备工作就此完成。
037-13	让我们去游戏画面确认一下。
037-14	嗯，看到外星人了。
037-15	要让这个外星人\n{color[0400]}{[0001|1b00]}随着人的位置变化左右移动{[0001|ffff]}{color[ffff]}。
037-16	让我们开始编程吧。
046	为了让外星人能够\n{color[0400]}{[0001|1b00]}随着人的位置变化左右移动{[0001|ffff]}{color[ffff]}……
047	就需要把握{color[0400]}{[0001|1b00]}外星人的位置\n与人的位置之间偏移了多远{[0001|ffff]}{color[ffff]}。
048	然后只要使外星人\n遵照{color[0400]}{[0001|1b00]}偏移{[0001|ffff]}{color[ffff]}量移动……
049	就能呈现{color[0400]}{[0001|1b00]}随着人的\n位置变化移动{[0001|ffff]}{color[ffff]}的效果。
050	话不多说，实际编程尝试一下吧！
051	叫出{color[0400]}{[0001|1b00]}位置感应器小节点{[0001|ffff]}{color[ffff]}，\n以把握{color[0400]}{[0001|1b00]}外星人的位置{[0001|ffff]}{color[ffff]}。
052	我只要监测外星人的位置就可以了是吧！
053	明白！\n包在我身上！
054	稍微移动位置感应器小节点……
055	打开设置画面。
056	{color[0400]}{[0001|1b00]}关闭状态{[0001|ffff]}{color[ffff]}中的“{color[0400]}{[0001|1b00]}能看见{[0001|ffff]}{color[ffff]}”。
057	关闭设置画面。
058	将{color[0400]}{[0001|1b00]}位置感应器小节点连接{[0001|ffff]}{color[ffff]}到\n{[0001|1b00]}外星人{[0001|ffff]}的{color[0400]}{[0001|1b00]}时尚物体小节点{[0001|ffff]}{color[ffff]}。
061	这样一来就可以把握\n{color[0400]}{[0001|1b00]}外星人的位置{[0001|ffff]}{color[ffff]}了。
062	接下来要把握{color[0400]}{[0001|1b00]}人的位置{[0001|ffff]}{color[ffff]}。
063	因为{color[0400]}{[0001|1b00]}位置感应器小节点\n{[0001|ffff]}{color[ffff]}已经{color[0400]}{[0001|1b00]}连接到人小节点{[0001|ffff]}{color[ffff]}身上了……
064	让我们使用{color[0400]}{[0001|1b00]}无线传送入口小节点{[0001|ffff]}{color[ffff]}传送\n{color[0400]}{[0001|1b00]}位置感应器小节点{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1b00]}X端口{[0001|ffff]}{color[ffff]}输出的数值。
065	叫出{color[0400]}{[0001|1b00]}无线传送入口小节点{[0001|ffff]}{color[ffff]}。
065000	移至位置感应器小节点的右上方……
066	打开设置画面。
067	将{color[0400]}{[0001|1b00]}传送ID{[0001|ffff]}{color[ffff]}设为{[0001|1b00]}{color[0400]}X{color[ffff]}{[0001|ffff]}。
068	关闭设置画面。
069	将{color[0400]}{[0001|1b00]}位置感应器小节点{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1b00]}X端口{[0001|ffff]}{color[ffff]}与\n{color[0400]}{[0001|1b00]}无线传送入口小节点{[0001|ffff]}{color[ffff]}进行连接。
070	在这边叫出{color[0400]}{[0001|1b00]}无线传送出口小节点{[0001|ffff]}{color[ffff]}。
071	移至位置感应器小节点上方。
072	打开设置画面。
073	将{color[0400]}{[0001|1b00]}传送ID{[0001|ffff]}{color[ffff]}设为{[0001|1b00]}{color[0400]}X{color[ffff]}{[0001|ffff]}。
074	关闭设置画面。
075	然后只需计算{color[0400]}{[0001|1b00]}人的X位置{[0001|ffff]}{color[ffff]}……
076	与{color[0400]}{[0001|1b00]}外星人的X位置{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1b00]}偏移量{[0001|ffff]}{color[ffff]}即可。
077	让我们{[0001|1b00]}叫出{color[0400]}－{color[ffff]}{[0001|ffff]}的{color[0400]}{[0001|1b00]}计算小节点{[0001|ffff]}{color[ffff]}。
078	偏移量的计算也尽管交给\n我这台高性能计算器就好。
078000	移动计算小节点……
079	将{color[0400]}{[0001|1b00]}无线传送出口小节点{[0001|ffff]}{color[ffff]}与\n{color[0400]}{[0001|1b00]}计算小节点{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1b00]}输入1端口{[0001|ffff]}{color[ffff]}进行连接。
080	将{color[0400]}{[0001|1b00]}位置感应器小节点{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1b00]}X端口{[0001|ffff]}{color[ffff]}与\n{color[0400]}{[0001|1b00]}计算小节点{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1b00]}输入2端口{[0001|ffff]}{color[ffff]}进行连接。
081	这样就能够计算人与外星人的\n{color[0400]}{[0001|1b00]}位置偏移量{[0001|ffff]}{color[ffff]}了。
082	将得出的偏移量输入\n{color[0400]}{[0001|1b00]}无线传送入口小节点{[0001|ffff]}{color[ffff]}吧。
083	叫出{color[0400]}{[0001|1b00]}无线传送入口小节点{[0001|ffff]}{color[ffff]}……
084	放在计算小节点右边。
085	打开无线传送入口小节点的\n设置画面。
086	将{color[0400]}{[0001|1b00]}传送ID{[0001|ffff]}{color[ffff]}设为{[0001|1b00]}{color[0400]}D{color[ffff]}{[0001|ffff]}。
087	关闭设置画面。
088	连接{color[0400]}{[0001|1b00]}计算小节点{[0001|ffff]}{color[ffff]}与\n{color[0400]}{[0001|1b00]}无线传送入口小节点{[0001|ffff]}{color[ffff]}。
089	这样一来，人与外星人的{color[0400]}{[0001|1b00]}位置偏移量\n{[0001|ffff]}{color[ffff]}就能通过{[0001|1b00]}{color[0400]}D{color[ffff]}{[0001|ffff]}的{color[0400]}{[0001|1b00]}无线传送出口小节点{[0001|ffff]}{color[ffff]}输出了。
090	让我们这就叫出\n{color[0400]}{[0001|1b00]}无线传送出口小节点{[0001|ffff]}{color[ffff]}……
091	移至移动物体小节点左边。
092	打开设置画面。
093	将{color[0400]}{[0001|1b00]}传送ID{[0001|ffff]}{color[ffff]}设为{[0001|1b00]}{color[0400]}D{color[ffff]}{[0001|ffff]}。
094	关闭设置画面。
095	只要将{[0001|1b00]}{color[0400]}D{color[ffff]}{[0001|ffff]}的{color[0400]}{[0001|1b00]}无线传送出口小节点\n{[0001|ffff]}{color[ffff]}与{color[0400]}{[0001|1b00]}移动物体小节点{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1b00]}X端口{[0001|ffff]}{color[ffff]}进行连接……
096	{color[0400]}{[0001|1b00]}外星人左右移动\n对人展开追击{[0001|ffff]}{color[ffff]}的程序就完成了。
097	去游戏画面确认一下吧。
098	……外星人的动作好奇怪。
099	和设想的不一样……
100	啊……\n我好像想到是什么原因了。
101	你看，{color[0400]}{[0001|1b00]}起点{[0001|ffff]}{color[ffff]}不是位于\n{[0001|1b00]}{color[0400]}左边{color[ffff]}{[0001|ffff]}很远的地方吗？
102	也就是说在游戏刚刚开始时，\n{color[0400]}{[0001|1b00]}人与外星人的位置偏移量{[0001|ffff]}{color[ffff]}非常{color[0400]}{[0001|1b00]}大{[0001|ffff]}{color[ffff]}对吧？
103	因此在游戏{color[0400]}{[0001|1b00]}开始时{[0001|ffff]}{color[ffff]}，\n{color[0400]}{[0001|1b00]}有非常大的力量施加{[0001|ffff]}{color[ffff]}在外星人身上，\n引发了奇怪的动作，应该是这样吧？
104	……啊，\n的确如此……
105	在脑内模拟时\n明明一切顺利的……
106	……\n看来有些问题，\n不经过实践是意识不到的。
107	那么……\n因为我们不希望看到\n外星人在人{color[0400]}{[0001|1b00]}尚在起点时{[0001|ffff]}{color[ffff]}就开始移动……
108	所以需要实现{color[0400]}{[0001|1b00]}当人来到敌人所在区域后{[0001|ffff]}{color[ffff]}，\n敌人才会开始移动的机制。
110	开始编程吧。
111	{[0201]}，\n编写什么样的程序能解决这个问题，\n你心里是否有数？
112	需要使用{color[0400]}{[0001|1b00]}接触感应器小节点{[0001|ffff]}{color[ffff]}、\n{color[0400]}{[0001|1b00]}旗标小节点{[0001|ffff]}{color[ffff]}，以及{color[0400]}{[0001|1b00]}计算小节点{[0001|ffff]}{color[ffff]}。
113	先叫出{color[0400]}{[0001|1b00]}接触感应器小节点{[0001|ffff]}{color[ffff]}。
114	噫，这次找我有什么事～？
115	我们想要在{color[0400]}{[0001|1b00]}人接触{[0001|ffff]}{color[ffff]}这个\n接触感应器小节点时，\n才让{color[0400]}{[0001|1b00]}外星人开始移动{[0001|ffff]}{color[ffff]}。
117	先打开接触感应器小节点的\n设置画面。
118	{color[0400]}{[0001|1b00]}关闭状态{[0001|ffff]}{color[ffff]}中的“{color[0400]}{[0001|1b00]}能看见{[0001|ffff]}{color[ffff]}”。
119	打开“{color[0400]}{[0001|1b00]}要检查什么？{[0001|ffff]}{color[ffff]}”。
120	仅将{[0001|1b00]}{color[0400]}人{color[ffff]}{[0001|ffff]}设为{color[0400]}{[0001|1b00]}开启{[0001|ffff]}{color[ffff]}。
121	关闭当前画面。
122	关闭设置画面。
123	为确保能让人接触到……\n先来大幅延伸一下\n接触感应器小节点的宽度……
125	再切换成{color[0400]}{[0001|1b00]}水平视角{[0001|ffff]}{color[ffff]}……
126	将他调节成像一面墙一样高。
127	好，\n返回{color[0400]}{[0001|1b00]}俯瞰视角{[0001|ffff]}{color[ffff]}。
128	然后叫出{color[0400]}{[0001|1b00]}旗标小节点{[0001|ffff]}{color[ffff]}。
129	……呼噜。\n等到人来了再叫醒我……
131	把旗标小节点移至\n接触感应器小节点右边。
132	将{color[0400]}{[0001|1b00]}接触感应器小节点{[0001|ffff]}{color[ffff]}与\n{color[0400]}{[0001|1b00]}旗标小节点{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1b00]}开启端口{[0001|ffff]}{color[ffff]}进行连接。
133	再叫出{color[0400]}{[0001|1b00]}无线传送入口小节点{[0001|ffff]}{color[ffff]}。
134	移至旗标小节点右边。
135	打开设置画面。
136	将{color[0400]}{[0001|1b00]}传送ID{[0001|ffff]}{color[ffff]}设为{[0001|1b00]}{color[0400]}E{color[ffff]}{[0001|ffff]}。
137	关闭设置画面。
138	连接{color[0400]}{[0001|1b00]}旗标小节点{[0001|ffff]}{color[ffff]}与\n{color[0400]}{[0001|1b00]}无线传送入口小节点{[0001|ffff]}{color[ffff]}。
140	当人接触接触感应器小节点时，\n{[0001|1b00]}{color[0400]}E{color[ffff]}{[0001|ffff]}的{color[0400]}{[0001|1b00]}无线传送出口小节点{[0001|ffff]}{color[ffff]}就会\n输出信号了。
141	下面在这里叫出\n{color[0400]}{[0001|1b00]}无线传送出口小节点{[0001|ffff]}{color[ffff]}。
142	打开设置画面。
143	将{color[0400]}{[0001|1b00]}传送ID{[0001|ffff]}{color[ffff]}设为{[0001|1b00]}{color[0400]}E{color[ffff]}{[0001|ffff]}。
144	关闭设置画面。
145	放在{[0001|1b00]}{color[0400]}D{color[ffff]}{[0001|ffff]}的{color[0400]}{[0001|1b00]}无线传送出口小节点{[0001|ffff]}{color[ffff]}上方。
146	并{[0001|1b00]}{color[0400]}删除{color[ffff]}{[0001|ffff]}连接在{[0001|1b00]}{color[0400]}D{color[ffff]}{[0001|ffff]}的{color[0400]}{[0001|1b00]}无线传送出口小节点{[0001|ffff]}{color[ffff]}与\n{color[0400]}{[0001|1b00]}移动物体小节点{[0001|ffff]}{color[ffff]}之间的{color[0400]}{[0001|1b00]}线{[0001|ffff]}{color[ffff]}。
147	再叫出{[0001|1b00]}{color[0400]}×{color[ffff]}{[0001|ffff]}的{color[0400]}{[0001|1b00]}计算小节点{[0001|ffff]}{color[ffff]}。
148	将{color[0400]}{[0001|1b00]}计算小节点\n{[0001|ffff]}{color[ffff]}放在{color[0400]}{[0001|1b00]}移动物体小节点{[0001|ffff]}{color[ffff]}左边。
149	这个{[0001|1b00]}{color[0400]}D{color[ffff]}{[0001|ffff]}的{color[0400]}{[0001|1b00]}无线传送出口小节点\n{[0001|ffff]}{color[ffff]}输出的是{color[0400]}{[0001|1b00]}人与外星人的\n位置偏移量{[0001|ffff]}{color[ffff]}是吧。
150	而这个{[0001|1b00]}{color[0400]}E{color[ffff]}{[0001|ffff]}的{color[0400]}{[0001|1b00]}无线传送出口小节点{[0001|ffff]}{color[ffff]}输出的\n是{color[0400]}{[0001|1b00]}人来到了刚才那个地点的事实{[0001|ffff]}{color[ffff]}。
151	如果将他们输出的这2个信号{color[0400]}{[0001|1b00]}相乘{[0001|ffff]}{color[ffff]}……
152	那么，{[0001|1b00]}{color[0400]}只有在E{color[ffff]}{[0001|ffff]}的\n{color[0400]}{[0001|1b00]}无线传送出口小节点{[0001|ffff]}{color[ffff]}输出信号期间……\n也就是{color[0400]}{[0001|1b00]}人来到了刚才那个地点时{[0001|ffff]}{color[ffff]}……
152-01	{[0001|1b00]}{color[0400]}D{color[ffff]}{[0001|ffff]}的{color[0400]}{[0001|1b00]}无线传送出口小节点{[0001|ffff]}{color[ffff]}的数值……\n也就是{color[0400]}{[0001|1b00]}人与外星人的位置偏移量{[0001|ffff]}{color[ffff]}\n才会被输出。
153	来，将{[0001|1b00]}{color[0400]}E{color[ffff]}{[0001|ffff]}的{color[0400]}{[0001|1b00]}无线传送出口小节点\n{[0001|ffff]}{color[ffff]}与计算小节点的{color[0400]}{[0001|1b00]}输入1端口{[0001|ffff]}{color[ffff]}进行连接。
154	再将{[0001|1b00]}{color[0400]}D{color[ffff]}{[0001|ffff]}的{color[0400]}{[0001|1b00]}无线传送出口小节点\n{[0001|ffff]}{color[ffff]}与计算小节点的{color[0400]}{[0001|1b00]}输入2端口{[0001|ffff]}{color[ffff]}进行连接。
155	接着将计算小节点与\n{color[0400]}{[0001|1b00]}移动物体小节点{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1b00]}X端口{[0001|ffff]}{color[ffff]}进行连接～
156	这样一来，{color[0400]}{[0001|1b00]}当人来到这片区域时{[0001|ffff]}{color[ffff]}，\n{color[0400]}{[0001|1b00]}外星人会开始移动{[0001|ffff]}{color[ffff]}的程序就完成了。
157	让我们去游戏画面确认一下。
158	前进。
159	当人向左右移动时，\n外星人也会随之移动。
159-01	要是外星人掉下去了，\n就按下“重来”重新来过吧。
160	嗯！外星人左右移动，\n成功对人展开追击了！
178	那么，我们最后\n要让外星人能向人{color[0400]}{[0001|1b00]}开火{[0001|ffff]}{color[ffff]}。
179	要想发射球体，当然需要……
180	叫出{color[0400]}{[0001|1b00]}发射物体小节点（10个）{[0001|ffff]}{color[ffff]}。
181	哎哟哎哟～～\n总算轮到我啦～～
182	我还以为再也\n没机会登场啦～～！？
184	打开发射物体小节点的\n设置画面。
186	在{[0001|1b00]}{color[0400]}连接面{color[ffff]}{[0001|ffff]}当中\n将“{[0001|1b00]}自己的连接面{[0001|ffff]}”设为{[0001|1b00]}{color[0400]}Z+{color[ffff]}{[0001|ffff]}，\n将“{[0001|1b00]}连接对象的连接面{[0001|ffff]}”设为{[0001|1b00]}{color[0400]}Z-{color[ffff]}{[0001|ffff]}。
187	关闭当前画面。
188	打开{color[0400]}{[0001|1b00]}发射方向{[0001|ffff]}{color[ffff]}。
189	设为{[0001|1b00]}{color[0400]}Z-{color[ffff]}{[0001|ffff]}。
189-01	然后将{color[0400]}{[0001|1b00]}颜色{[0001|ffff]}{color[ffff]}设为{color[0400]}{[0001|1b00]}粉红色{[0001|ffff]}{color[ffff]}。
190	关闭设置画面……
191	将{color[0400]}{[0001|1b00]}发射物体小节点\n连接{[0001|ffff]}{color[ffff]}到{color[0400]}{[0001|1b00]}时尚物体小节点{[0001|ffff]}{color[ffff]}。
194	再将{[0001|1b00]}{color[0400]}E{color[ffff]}{[0001|ffff]}的{color[0400]}{[0001|1b00]}无线传送出口小节点\n{[0001|ffff]}{color[ffff]}与{color[0400]}{[0001|1b00]}发射物体小节点{[0001|ffff]}{color[ffff]}进行连接。
195	这样当人进入这片区域，\n发射物体小节点就会发射球体了。
196	去游戏画面确认一下吧。
197	前进。
197-01	要是外星人掉下去了，\n就按下“重来”重新来过吧。
198	看！\n外星人一边左右移动，\n一边开火了！
198000	{color[0400]}{[0001|1b00]}一边与人同步左右移动{[0001|ffff]}{color[ffff]}，\n{color[0400]}{[0001|1b00]}一边开火的敌人{[0001|ffff]}{color[ffff]}至此大功告成！
198001	好厉害！强敌制作完成了！
204	呵呵……\n尽情体验之后就返回程序画面吧。
205	那么～～～这样一来～～
206	第5步就完成了！
207-01	哎哟～～挺像样啊！
207-02	恭喜你！！
207-03	恭喜！
208	随着敌方角色登场，\n游戏越来越有意思了！
209	是啊是啊。
210	我们将在下个步骤中\n制作这款游戏的{color[0400]}{[0001|1b00]}终点{[0001|ffff]}{color[ffff]}。
211	很快就要结束了啊……
212	那么，我们下个步骤再会～
213	坚持到底吧～
Lesson_3DAction_05.msbt
000	看啊，{color[0400]}{[0001|1b00]}3D运动竞技空间\n{[0001|ffff]}{color[ffff]}即将大功告成了！
001	……
002	经历了重重波折，\n作品的印象已与\n最初的大纲颇有不同……
003	但我们做出了\n质量超出大纲预计的游戏！
004	……！
005	来吧，{[0201]}，\n让我们再接再厉！
006	这次我们要设计{color[0400]}{[0001|1b00]}终点{[0001|ffff]}{color[ffff]}……\n为这款游戏画上句号！
007	进入程序画面开始编程吧！
008	先从{color[0400]}{[0001|1b00]}平面{[0001|ffff]}{color[ffff]}的编程开始。
009	和以前一样对吧？
010	没错！\n和以前一样，\n请复制这个物体小节点。
011	然后{color[0400]}{[0001|1b00]}滚动程序画面{[0001|ffff]}{color[ffff]}，\n将复制好的物体小节点移至上方。
012	再复制这个物体小节点……
013	继续往上摆放。
014	继续复制！
015	继续移至更上方～
016	那么！\n让我们前往游戏画面确认！
017	等一下！
018	你忘记调节用于确认的传送门了。
019	啊，对了。
019-01	那么，{[0201]}，\n把这个{color[0400]}{[0001|1b00]}传送物体出口小节点\n{[0001|ffff]}{color[ffff]}移到上面去吧。
038	准备就绪！
039	好了，现在可以去游戏画面确认了。
040	看，这里就是最后的区域！
041	好宽阔的地方。
042	好！进入程序画面，\n编程设计终点吧～
043	那么，我们要在这里\n开始进行{color[0400]}{[0001|1b00]}终点{[0001|ffff]}{color[ffff]}的编程。
044	按照常见套路，\n将{color[0400]}{[0001|1b00]}获得宝箱{[0001|ffff]}{color[ffff]}视为{color[0400]}{[0001|1b00]}到达终点{[0001|ffff]}{color[ffff]}吧。
045	请从{color[0400]}{[0001|1b00]}四边形时尚物体{[0001|ffff]}{color[ffff]}中\n叫出{color[0400]}{[0001|1b00]}宝箱{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1b00]}时尚物体小节点{[0001|ffff]}{color[ffff]}。
046	人见人爱的宝箱……
047	常见套路掌握得越发熟练了啊，\n真不愧是{[0201]}♥
047000	稍微移动{color[0400]}{[0001|1b00]}时尚物体小节点{[0001|ffff]}{color[ffff]}。
051	打开时尚物体小节点的\n设置画面。
052	{color[0400]}{[0001|1b00]}关闭状态{[0001|ffff]}{color[ffff]}中的“{color[0400]}{[0001|1b00]}能移动{[0001|ffff]}{color[ffff]}”。
053	这是为了让宝箱\n在被接触时不会移动对吧？
054	没错～
055	好了！\n请关闭设置画面。
056	还有，我们希望\n{color[0400]}{[0001|1b00]}在接触宝箱时拉响拉炮{[0001|ffff]}{color[ffff]}。
057	……既然如此～
058	{[0201]}，\n先叫出{color[0400]}{[0001|1b00]}接触感应器小节点{[0001|ffff]}{color[ffff]}吧。
059	噫……\n把、把我叫到这荒郊野岭的地方，\n究竟有什么事啊～～？
060	把接触感应器小节点稍微放大一些后\n放在时尚物体小节点右边。
061	比宝箱稍大一些反应就会更加灵敏了。
062	没错！
063	那就打开接触感应器小节点的\n设置画面吧。
064	{color[0400]}{[0001|1b00]}关闭状态{[0001|ffff]}{color[ffff]}中的“{color[0400]}{[0001|1b00]}能看见{[0001|ffff]}{color[ffff]}”。
065	打开“{color[0400]}{[0001|1b00]}要检查什么？{[0001|ffff]}{color[ffff]}”。
066	仅将{color[0400]}{[0001|1b00]}人{[0001|ffff]}{color[ffff]}设为{color[0400]}{[0001|1b00]}开启{[0001|ffff]}{color[ffff]}。
067	关闭当前画面。
068	关闭设置画面。
069	将这个{color[0400]}{[0001|1b00]}接触感应器小节点\n连接{[0001|ffff]}{color[ffff]}到{color[0400]}{[0001|1b00]}时尚物体小节点{[0001|ffff]}{color[ffff]}。
070	这样一来，{color[0400]}{[0001|1b00]}在人接触宝箱时\n会输出信号{[0001|ffff]}{color[ffff]}的机制就完成了。
071	名不虚传！
072	那么，最后请叫出\n{color[0400]}{[0001|1b00]}拉炮{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1b00]}特效小节点{[0001|ffff]}{color[ffff]}～
073	大家好～～
074	想在拿到宝箱后拉响拉炮～\n大张旗鼓地炫耀一番～对吧～～
075	但万一这个宝箱只是个\n空箱子，里面没有宝贝，\n那可就欲哭无泪啦～
076	那么，请把特效小节点放在\n接触感应器小节点右边……
077	连接接触感应器小节点\n与特效小节点。
077-01	好！这样一来，\n当到达宝箱时拉炮就会响起了！
077-02	我说啊……
077-03	为了让到达终点的庆祝更加热烈，\n要不要……再来播放一曲{color[0400]}{[0001|1b00]}撒花{[0001|ffff]}{color[ffff]}？
077-04	好啊！\n那就让我们来播放撒花吧！
077-05	好！{[0201]}，\n从“{color[0400]}{[0001|1b00]}播放音效{[0001|ffff]}{color[ffff]}”当中叫出\n{color[0400]}{[0001|1b00]}播放声音小节点{[0001|ffff]}{color[ffff]}。
077-0501	让我来完成\n最终乐章～～～♪
077-06	放在特效小节点下方。
077-07	来！打开设置画面！
077-08	选择{color[0400]}{[0001|1b00]}效果音乐{[0001|ffff]}{color[ffff]}……
077-09	然后选择{color[0400]}{[0001|1b00]}撒花{[0001|ffff]}{color[ffff]}……
077-10	嗯！\n这样终点的庆祝气氛\n就更加热烈了！
077-11	好，关闭当前画面……
077-12	关闭设置画面。
077-13	将{color[0400]}{[0001|1b00]}接触感应器小节点{[0001|ffff]}{color[ffff]}与\n{color[0400]}{[0001|1b00]}播放声音小节点{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1b00]}播放端口{[0001|ffff]}{color[ffff]}进行连接。
078	那么～这样一来！
079	终点的机制就完成了！
080	终点的机制就完成了！
081	那么，\n让我们去游戏画面确认一下。
082	来，{[0201]}，\n快接触宝箱看看会发生什么！
083	拉炮声如愿响起了～
084	撒花的音乐也让人欢欣鼓舞！
085	最后删除用于确认的传送门，\n让游戏能够从起点开始。
086	我们要和这个{color[0400]}{[0001|1b00]}传送物体出口小节点{[0001|ffff]}{color[ffff]}告别……
087	也要和这边的{color[0400]}{[0001|1b00]}传送物体入口小节点{[0001|ffff]}{color[ffff]}说再见了。
088	来！\n最后再确认一遍！
089	游戏顺利从起点开始了～
090	现在，从起点到终点，\n游戏全程都已经制作完成！
091	终于走到这一步了……
092	好了，请返回程序画面～
093	那么～～这样一来～～～
094	那么～～这样一来～～～
095	第6步就完成了！
096	第6步就完成了！
097-01	恭喜你啦♥
097-02	恭喜恭喜恭喜你～～～♪
097-03	恭喜啦～～
098	终点也总算顺利完成了……
099	难道还有什么需要做的吗？
100	没错，\n{[0201]}的任务尚未结束！
101	接下来……
102	……
103	敬请期待下个步骤！
104	下次我们终于将要迎来\n整个附带导航的课堂的最后一步……
105	最后一步……\n{[0201]}，\n加油啊。
Lesson_3DAction_06.msbt
000	{[0201]}，\n你好啊！
001	{[0201]}，\n你好。
002	漫长的附带导航的课堂\n终于迎来最后一步。
003	首先，请认真确认到目前为止\n所完成的{color[0400]}{[0001|1b00]}3D运动竞技空间{[0001|ffff]}{color[ffff]}的内容。
004	在确认完成之后前往程序画面。
005	在{color[0400]}{[0001|1b00]}3D运动竞技空间{[0001|ffff]}{color[ffff]}的最后一步中，\n请你在终点前的空地上\n制作场地特殊机关。
006	……
007	按照大纲，本想像往常一样\n请你按照我的指示实施编程……
008	……但这是最后的特殊机关了，\n{[0201]}，\n还是希望你能随心所欲地设计！
009	……！
010	制作BOSS角色也好，\n在以往的特殊机关基础上发挥也好，\n创造全新的特殊机关也好……
011	做什么，怎么做……\n都是{[0201]}的自由！
012	既然如此，可以对过去做过的\n场地特殊机关实施改造吗？
013	当然可以！
013-01	现在{color[0400]}{[0001|1b00]}所有地方{[0001|ffff]}{color[ffff]}都可以进行{color[0400]}{[0001|1b00]}自由编程{[0001|ffff]}{color[ffff]}。\n{[0201]}，请按你的喜好\n尽情改造这款游戏吧！
014	{[0201]}，\n你已经成功编程制作出许许多多游戏，\n如今这对你而言一定不在话下。
015	你已经成功解开重重谜题，\n对小节点车库也了如指掌，\n如今这对你而言一定不是问题。
016	万一程序混乱难以挽回，\n请从暂停菜单选择{color[0400]}{[0001|1b00]}“重新开始这个步骤”{[0001|ffff]}{color[ffff]}。
017	{[0201]}，\n我很期待你制作的游戏。
018	请在游戏完成后按下{color[0400]}{[0001|1b00]}完成键{[0001|ffff]}{color[ffff]}哦。
019	设计中的程序即使中断，\n已完成的进度也会得到保存，\n如果觉得累了请安心休息。
020	那么……
021	编程开始！
022	编程开始！
1000	……终于完成了。
1000-01	快去游戏画面展示给我们看看吧。
1001	这就是……\n{[0201]}制作的游戏……
1002	精彩绝伦……！\n处处洋溢着你的个性，这无疑是\n一款{color[0400]}{[0001|1b00]}由你亲手编程制作的游戏{[0001|ffff]}{color[ffff]}！
1003	是世界上独一无二的作品！
1003-01	那么……\n让我们返回程序画面。
1004	{[0201]}，\n那就把{color[0400]}{[0001|1b00]}这款由你打造的游戏{[0001|ffff]}{color[ffff]}……
1005	加入到游戏一览当中去吧！
Lesson_BallRoll_00.msbt
000	{[0201]}！\n欢迎来到第2课！
001	我们在上一堂课中编程设计了\n二人对战！捉迷藏大战，\n还记得吗～？
004	那么！\n在第2课中也请跟上我的步伐哦～！
006	这次要做的游戏是……
007	{color[0400]}{[0001|1b00]}通过倾斜{[0001|ffff]}{color[ffff]}Nintendo Switch主机\n{color[0400]}{[0001|1b00]}游玩{[0001|ffff]}{color[ffff]}的游戏，它的名字是……
008	{color[0400]}{[0001|1b00]}滚滚球{[0001|ffff]}{color[ffff]}！
009	接下来会播放一段视频～
010	在观看过程中，\n请想象画面内真的有一个球在滚动！
011	这是一款{color[0400]}{[0001|1b00]}倾斜主机{[0001|ffff]}{color[ffff]}，\n使画面中的球滚动起来的游戏！
013	{color[0400]}{[0001|1b00]}通过倾斜{[0001|ffff]}{color[ffff]}手柄{color[0400]}{[0001|1b00]}游玩{[0001|ffff]}{color[ffff]}的游戏，\n它的名字是……
014	{color[0400]}{[0001|1b00]}滚滚球{[0001|ffff]}{color[ffff]}！
015	建议以{color[0400]}{[0001|1b00]}掌上模式{[0001|ffff]}{color[ffff]}游玩这个游戏！
016	接下来会播放一段视频，\n在观看过程中，请想象自己\n是在{color[0400]}{[0001|1b00]}俯瞰{[0001|ffff]}{color[ffff]}一个装有球的箱子。
017	这是一款{color[0400]}{[0001|1b00]}倾斜手柄{[0001|ffff]}{color[ffff]}，\n使装有球的箱子倾斜的游戏！
019	因此！在这堂课上，\n要通过{color[0400]}{[0001|1b00]}从上往下看的\n俯瞰视角{[0001|ffff]}{color[ffff]}进行编程！
020	那么！\n让我们前往程序画面！
021	在{[0001|1b00]}{color[0400]}切换视角{color[ffff]}{[0001|ffff]}之前……
022	我们先在游戏中放置\n滚滚球的重要道具——{[0001|1b00]}{color[0400]}苹果{color[ffff]}{[0001|ffff]}！
023	为了放置苹果～\n需要叫出{color[0400]}{[0001|1b00]}时尚物体小节点{[0001|ffff]}{color[ffff]}！
024	选择{color[0400]}{[0001|1b00]}物体{[0001|ffff]}{color[ffff]}。
025	{color[0400]}{[0001|1b00]}时尚物体{[0001|ffff]}{color[ffff]}。
026	{color[0400]}{[0001|1b00]}圆形时尚物体{[0001|ffff]}{color[ffff]}。
027	最后选择{color[0400]}{[0001|1b00]}苹果{[0001|ffff]}{color[ffff]}，\n来叫出{color[0400]}{[0001|1b00]}时尚物体小节点{[0001|ffff]}{color[ffff]}！
028	时尚物体……\n令人心醉♥
030	竟然选了个圆溜溜～\n红彤彤的{[0001|1b00]}{color[0400]}苹果{color[ffff]}{[0001|ffff]}……
031	{[0201]}，你真是\n♥热情似火♥
032	这样苹果就放置好了！
033	去游戏画面看看吧！
034	是令人垂涎欲滴的苹果～！
036	接下来……\n是这次的重头戏！！
037	让我们切换成\n{color[0400]}{[0001|1b00]}从上往下看的俯瞰视角\n{[0001|ffff]}{color[ffff]}来欣赏这个苹果吧～
038	要想切换视角～
039	就请按下这个{[0001|1b00]}{color[0400]}视角切换键{color[ffff]}{[0001|ffff]}！
040	哇哦……♥\n感觉好像……\n……大不一样了♥
041	成功切换成了{color[0400]}{[0001|1b00]}俯瞰视角{[0001|ffff]}{color[ffff]}！
042	那么，\n在游戏画面中会呈现怎样的效果呢～～
043	让我们一看究竟！
044	哦哦～～！了不起！！
045	不久前我们还在\n以{[0001|1b00]}{color[0400]}水平{color[ffff]}{[0001|ffff]}视角欣赏苹果……
046	一下子就变成{[0001|1b00]}{color[0400]}俯瞰{color[ffff]}{[0001|ffff]}视角了～！
047	就让我们通过这个视角\n来制作滚滚球的场地吧！
049	那么！\n让我们来制作场地！
050	先确定{[0001|1b00]}{color[0400]}游戏画面的尺寸{color[ffff]}{[0001|ffff]}～
051	选择{color[0400]}{[0001|1b00]}物体{[0001|ffff]}{color[ffff]}。
052	{color[0400]}{[0001|1b00]}游戏画面和照相机{[0001|ffff]}{color[ffff]}。
053	最后从{color[0400]}{[0001|1b00]}游戏画面{[0001|ffff]}{color[ffff]}中\n叫出{color[0400]}{[0001|1b00]}游戏画面小节点{[0001|ffff]}{color[ffff]}。
054	辛苦你了阿罗哈～～！
055	这次也干脆利落地……\n确定游戏画面吧～！
056	那么，\n将游戏画面小节点\n准确嵌入{[0001|1b00]}{color[0400]}蓝框{color[ffff]}{[0001|ffff]}当中吧！
057	分毫不差！\n严丝合缝～～！
058	在顺利确定了游戏画面之后……
060	用{color[0400]}{[0001|1b00]}物体小节点{[0001|ffff]}{color[ffff]}制作{color[0400]}{[0001|1b00]}墙壁{[0001|ffff]}{color[ffff]}，\n将四周围起来吧！
061	选择{color[0400]}{[0001|1b00]}物体{[0001|ffff]}{color[ffff]}。
062	{color[0400]}{[0001|1b00]}简单物体{[0001|ffff]}{color[ffff]}。
063	{color[0400]}{[0001|1b00]}立方体{[0001|ffff]}{color[ffff]}。
064	……你好。\n我要扮演墙壁是吧。
067	把他安放在画面上方的蓝框处！
069	干得漂亮！
070	接下来调整墙壁的设置。
071	打开物体小节点的设置画面。
072	请仅{color[0400]}{[0001|1b00]}开启{[0001|ffff]}{color[ffff]}{[0001|1b00]}状态{[0001|ffff]}中的\n“{color[0400]}{[0001|1b00]}能看见{[0001|ffff]}{color[ffff]}”、“{color[0400]}{[0001|1b00]}能接触{[0001|ffff]}{color[ffff]}”。
073	{color[0400]}{[0001|1b00]}颜色{[0001|ffff]}{color[ffff]}也换一换吧～
074	请设为{color[0400]}{[0001|1b00]}红色{[0001|ffff]}{color[ffff]}！
075	干得漂亮。\n关闭设置画面吧！
076	那么！\n继续制作其余3面墙壁吧！
077	{color[0400]}{[0001|1b00]}复制{[0001|ffff]}{color[ffff]}物体小节点～
078	移动到画面下方～
079	我是下方的墙壁。
080	再次{color[0400]}{[0001|1b00]}复制！{[0001|ffff]}{color[ffff]}
081	请{color[0400]}{[0001|1b00]}拉至瘦高形状～{[0001|ffff]}{color[ffff]}\n安放在左边蓝框中～
082	我是左边的墙壁。
083	最后一次{color[0400]}{[0001|1b00]}复制！{[0001|ffff]}{color[ffff]}
084	移动到画面右边！
085	……好的，\n已用墙壁将游戏画面围起来了。
086	大功告成～～！
087	让我们去看看吧！
089	{[0001|1b00]}{color[0400]}滚滚球的场地{color[ffff]}{[0001|ffff]}做好了！
090	我们要让球在这片场地中\n骨碌骨碌地滚动起来！
092	前往程序画面吧！
093	那么～～这样一来～～～
094	第1步就完成了！
095	♥恭喜你啦～♥
096	恭喜你啦～～
097	恭喜了。
098	了不起。
099	这次～\n我们切换成{color[0400]}{[0001|1b00]}俯瞰视角{[0001|ffff]}{color[ffff]}……
100	编程制作了{color[0400]}{[0001|1b00]}滚滚球的场地{[0001|ffff]}{color[ffff]}！
103	那么在下个步骤中，\n我们要通过编程{color[0400]}{[0001|1b00]}让球滚动起来{[0001|ffff]}{color[ffff]}！
105	敬请期待～！
Lesson_BallRoll_01.msbt
000	欢迎来到滚滚球的第2步！
001	上次我们将游戏画面\n切换成{color[0400]}{[0001|1b00]}俯瞰视角{[0001|ffff]}{color[ffff]}……
002	然后制作墙壁，\n完成了{color[0400]}{[0001|1b00]}滚滚球的场地{[0001|ffff]}{color[ffff]}！
003	那么！\n在第2步中……
004	我们要实现\n倾斜Nintendo Switch主机时，\n{color[0400]}{[0001|1b00]}球会滚动的机制{[0001|ffff]}{color[ffff]}！
005	我们要实现\n倾斜手柄时{color[0400]}{[0001|1b00]}球会滚动的机制{[0001|ffff]}{color[ffff]}！
006	滚到南来滚到北～\n滚到东来滚到西～～
007	直达快乐的{[0001|1b00]}{color[0400]}倾斜世界{color[ffff]}{[0001|ffff]}！
008	大家一起滚动起来！
009	首先要放置\n会骨碌骨碌滚动的球。
011	叫出球体的{color[0400]}{[0001|1b00]}移动物体小节点{[0001|ffff]}{color[ffff]}！
012	选择{color[0400]}{[0001|1b00]}物体{[0001|ffff]}{color[ffff]}。
013	{color[0400]}{[0001|1b00]}特殊物体{[0001|ffff]}{color[ffff]}。
014	{color[0400]}{[0001|1b00]}移动物体{[0001|ffff]}{color[ffff]}。
015	最后选择{color[0400]}{[0001|1b00]}球体{[0001|ffff]}{color[ffff]}，\n来叫出{color[0400]}{[0001|1b00]}移动物体小节点{[0001|ffff]}{color[ffff]}！
016	初次见面！\n我是{color[0400]}{[0001|1b00]}移动物体小节点{[0001|ffff]}{color[ffff]}！
017	那个～你最近\n有没有注意锻炼身体？？
018	锻炼身体……\n可以令大脑才思敏捷！！
019	今天也请多关照！！
021	先将移动物体小节点\n稍微缩小一些～
022	好！\n恰到好处！！
023	然后去调整\n移动物体小节点的设置～
024	{color[0400]}{[0001|1b00]}关闭{[0001|ffff]}{color[ffff]}{[0001|1b00]}状态{[0001|ffff]}中的“{color[0400]}{[0001|1b00]}能损坏{[0001|ffff]}{color[ffff]}”。
025	接下来换个{color[0400]}{[0001|1b00]}颜色{[0001|ffff]}{color[ffff]}～
026	就用{color[0400]}{[0001|1b00]}蓝色{[0001|ffff]}{color[ffff]}吧！
027	请将{[0001|1b00]}位置{[0001|ffff]}的{[0001|1b00]}Y{[0001|ffff]}设为{[0001|1b00]}{color[0400]}0.30m{color[ffff]}{[0001|ffff]}。
028	很不错！\n那就关闭设置～
030	进入游戏画面看看吧！
031	球成功出现了！一看就像是\n会骨碌骨碌滚动的样子！
033	那么！\n请{[0001|1b00]}{color[0400]}倾斜主机让球滚动起来{color[ffff]}{[0001|ffff]}！
034	那么！\n请{[0001|1b00]}{color[0400]}倾斜手柄让球滚动起来{color[ffff]}{[0001|ffff]}！
035	……
036	纹丝不动～～～～！
038	没错！\n如果不编程实现{[0001|1b00]}{color[0400]}滚动的机制{color[ffff]}{[0001|ffff]}，\n球是不会动的！
039	……那么！\n让我们开始编程吧！
040	既然我们想在{[0001|1b00]}{color[0400]}倾斜主机时{color[ffff]}{[0001|ffff]}让球滚动起来～
041	既然我们想在{[0001|1b00]}{color[0400]}倾斜手柄时{color[ffff]}{[0001|ffff]}让球滚动起来～
042	就快叫出{color[0400]}{[0001|1b00]}倾斜小节点{[0001|ffff]}{color[ffff]}吧！
043	选择{color[0400]}{[0001|1b00]}输入{[0001|ffff]}{color[ffff]}。
044	{color[0400]}{[0001|1b00]}动作感应{[0001|ffff]}{color[ffff]}。
045	{color[0400]}{[0001|1b00]}倾斜{[0001|ffff]}{color[ffff]}。
046	最后选择{color[0400]}{[0001|1b00]}自动{[0001|ffff]}{color[ffff]}，\n来叫出{color[0400]}{[0001|1b00]}倾斜小节点{[0001|ffff]}{color[ffff]}！
047	你好～
048	主机倾斜的情况……
049	手柄倾斜的情况……
050	只有心灵宁静之时\n才能发觉……
057	先去蓝框区域静静心吧～
059	那么，先要在{[0001|1b00]}{color[0400]}左右{color[ffff]}{[0001|ffff]}倾斜{[0001|1b00]}{color[0400]}主机{color[ffff]}{[0001|ffff]}时，\n让{[0001|1b00]}{color[0400]}球{color[ffff]}{[0001|ffff]}能够向{[0001|1b00]}{color[0400]}左右{color[ffff]}{[0001|ffff]}滚动。
060	那么，先要在{[0001|1b00]}{color[0400]}左右{color[ffff]}{[0001|ffff]}倾斜{[0001|1b00]}{color[0400]}手柄{color[ffff]}{[0001|ffff]}时，\n让{[0001|1b00]}{color[0400]}球{color[ffff]}{[0001|ffff]}能够向{[0001|1b00]}{color[0400]}左右{color[ffff]}{[0001|ffff]}滚动。
061	进入倾斜小节点的设置！
069	请将{[0001|1b00]}范围{[0001|ffff]}设为{[0001|1b00]}{color[0400]}0.00{color[ffff]}{[0001|ffff]}至{color[0400]}{[0001|1b00]}0.15{[0001|ffff]}{color[ffff]}。
071	干得漂亮！\n关闭设置吧～
072	然后将倾斜小节点与\n移动物体小节点的{color[0400]}{[0001|1b00]}X端口{[0001|ffff]}{color[ffff]}进行连接！
072-01	这样一来，\n当{[0001|1b00]}{color[0400]}左右{color[ffff]}{[0001|ffff]}倾斜{[0001|1b00]}{color[0400]}主机{color[ffff]}{[0001|ffff]}时，\n{[0001|1b00]}{color[0400]}球{color[ffff]}{[0001|ffff]}就会随之向{[0001|1b00]}{color[0400]}左右{color[ffff]}{[0001|ffff]}滚动了。
072-02	这样一来，\n当{[0001|1b00]}{color[0400]}左右{color[ffff]}{[0001|ffff]}倾斜{[0001|1b00]}{color[0400]}手柄{color[ffff]}{[0001|ffff]}时，\n{[0001|1b00]}{color[0400]}球{color[ffff]}{[0001|ffff]}就会随之向{[0001|1b00]}{color[0400]}左右{color[ffff]}{[0001|ffff]}滚动了。
073	顺带一提，\n{color[0400]}{[0001|1b00]}X{[0001|ffff]}{color[ffff]}指的是{color[0400]}{[0001|1b00]}左右方向{[0001|ffff]}{color[ffff]}。
079	那就去游戏画面确认一下吧！
080	请尝试{color[0400]}{[0001|1b00]}左右{[0001|ffff]}{color[ffff]}倾斜主机。
081	请尝试{color[0400]}{[0001|1b00]}左右{[0001|ffff]}{color[ffff]}倾斜手柄。
082	球滚动起来了～～～～～～！！！
083	让球向左右滚动的机制就此完成！
084	那么，这次请{color[0400]}{[0001|1b00]}前后{[0001|ffff]}{color[ffff]}倾斜主机。
085	那么，这次请{color[0400]}{[0001|1b00]}前后{[0001|ffff]}{color[ffff]}倾斜手柄。
086	因为尚未编程实现\n前后滚动的机制，\n所以球没有滚动！
087	那么～\n想办法让球同样能向{color[0400]}{[0001|1b00]}前后{[0001|ffff]}{color[ffff]}滚动吧！
088	选中倾斜小节点……
089	复制！
090	你好～
091	倾斜蕴含深意……
092	记录指尖感觉，\n承载片刻思念……
093	又怎能不倾倒……
094	不好意思，\n打扰你抒情了……\n可你压在我身上了……
095	那么，\n让新叫出来的倾斜小节点\n往下方偏移一些吧～
096	为了能{color[0400]}{[0001|1b00]}输出前后倾斜情况{[0001|ffff]}{color[ffff]}，\n我们打开设置。
097	{color[0400]}{[0001|1b00]}前后倾斜{[0001|ffff]}{color[ffff]}指的是\n以{color[0400]}{[0001|1b00]}X轴{[0001|ffff]}{color[ffff]}为中心旋转的方向～
098	所以我们将{[0001|1b00]}转动轴{[0001|ffff]}设为{color[0400]}{[0001|1b00]}X{[0001|ffff]}{color[ffff]}。
100	可以了！\n关闭设置吧。
101	将倾斜小节点连接到\n移动物体小节点的{color[0400]}{[0001|1b00]}Z端口{[0001|ffff]}{color[ffff]}！
101-01	这样一来，\n当{[0001|1b00]}{color[0400]}前后{color[ffff]}{[0001|ffff]}倾斜{[0001|1b00]}{color[0400]}主机{color[ffff]}{[0001|ffff]}时，\n{[0001|1b00]}{color[0400]}球{color[ffff]}{[0001|ffff]}就会随之向{[0001|1b00]}{color[0400]}前后{color[ffff]}{[0001|ffff]}滚动了！
101-02	这样一来，\n当{[0001|1b00]}{color[0400]}前后{color[ffff]}{[0001|ffff]}倾斜{[0001|1b00]}{color[0400]}手柄{color[ffff]}{[0001|ffff]}时，\n{[0001|1b00]}{color[0400]}球{color[ffff]}{[0001|ffff]}就会随之向{[0001|1b00]}{color[0400]}前后{color[ffff]}{[0001|ffff]}滚动了！
102	{color[0400]}{[0001|1b00]}Z{[0001|ffff]}{color[ffff]}指的是{color[0400]}{[0001|1b00]}前后方向{[0001|ffff]}{color[ffff]}。
108	那么！\n让我们去游戏画面确认一下～
109	请{color[0400]}{[0001|1b00]}前后{[0001|ffff]}{color[ffff]}倾斜主机，\n让球滚动起来吧！
110	请{color[0400]}{[0001|1b00]}前后{[0001|ffff]}{color[ffff]}倾斜手柄，\n让球滚动起来吧！
111	骨碌骨碌～～～～～！
113	{color[0400]}{[0001|1b00]}让球滚动的机制{[0001|ffff]}{color[ffff]}大功告成～～～！！
116	返回之前的画面吧！
117	那么～～这样一来～～～
118	第2步就完成了！
119	辛苦了！！
120	好厉害呀。
121	可喜可贺。
122	关于倾斜的编程感觉如何？
125	能够制作{[0001|1b00]}{color[0400]}无需按键操作的游戏{color[ffff]}{[0001|ffff]}……！
126	这正是{[0001|1b00]}{color[0400]}小节点车库{color[ffff]}{[0001|ffff]}的趣味所在！
130	下次我们会把供球滚动的{[0001|1b00]}{color[0400]}场地{color[ffff]}{[0001|ffff]}\n进一步打造得可玩性十足。
131	敬请期待～！
Lesson_BallRoll_02.msbt
000	{[0201]}！\n到滚滚球第3步的时间了哦！
001	在上一步中，\n我们成功实现了球的滚动～！
002	请实际体会这来之不易的成果，\n尝试让{[0001|1b00]}{color[0400]}球{color[ffff]}{[0001|ffff]}滚动并撞向{[0001|1b00]}{color[0400]}苹果{color[ffff]}{[0001|ffff]}！
003	干得漂亮！成功命中～！
004	这次我们要在这个长方形场地中\n制作{color[0400]}{[0001|1b00]}墙壁{[0001|ffff]}{color[ffff]}、增设{color[0400]}{[0001|1b00]}苹果{[0001|ffff]}{color[ffff]}……
005	把这里打造成更具可玩性的场地！
006	那么！\n请前往程序画面～
008	首先从{[0001|1b00]}{color[0400]}墙壁{color[ffff]}{[0001|ffff]}着手，\n来设计一条路线。
009	选中{[0001|1b00]}{color[0400]}物体小节点{color[ffff]}{[0001|ffff]}……
010	复制！
011	安放在蓝框处制作墙壁～
012	我要扮演起点的墙壁对吧。
013	继续复制……
014	移向蓝框……
015	从我上方下方都可以通过。
016	最后再复制一个～
017	拉长一点移至蓝框处！
018	我是正中央的墙壁。
019	墙壁就此完成！
020	让我们去游戏画面确认一下！
021	墙壁被安放在了\n如我们所愿的地方！
022	苹果不见了，\n不过请先不要在意……
023	请将球滚到{color[0400]}{[0001|1b00]}右下区域{[0001|ffff]}{color[ffff]}！
024	非常好！
026	场地变得复杂了一点，\n滚起球来也更加有趣了！
027	那么！\n让我们救出埋在墙壁下的苹果吧！
029	选中苹果的时尚物体小节点……
030	稍微放大一点，\n并将其向左下移动～
031	恰到好处！
032	呼～\n差点喘不过来气了♥
033	快看看效果如何吧！
034	苹果重新出现了！
035	那么，请让球撞向苹果。
036	当球与苹果碰撞后，\n苹果滚动起来了对吧？
037	这里我们希望\n球在与苹果发生碰撞后\n能够{color[0400]}{[0001|1b00]}获得苹果{[0001|ffff]}{color[ffff]}！
039	前往程序画面！
040	选中苹果的时尚物体小节点……
041	打开设置！
042	{color[0400]}{[0001|1b00]}开启{[0001|ffff]}{color[ffff]}{[0001|1b00]}状态{[0001|ffff]}中的“{color[0400]}{[0001|1b00]}能看见{[0001|ffff]}{color[ffff]}”、\n“{color[0400]}{[0001|1b00]}能接触{[0001|ffff]}{color[ffff]}”、“{color[0400]}{[0001|1b00]}能损坏{[0001|ffff]}{color[ffff]}”。
043	因为{color[0400]}{[0001|1b00]}开启{[0001|ffff]}{color[ffff]}了“{color[0400]}{[0001|1b00]}能损坏{[0001|ffff]}{color[ffff]}”，\n苹果在{color[0400]}{[0001|1b00]}与球发生碰撞后\n{[0001|ffff]}{color[ffff]}就会{color[0400]}{[0001|1b00]}损坏{[0001|ffff]}{color[ffff]}了！
044	关闭设置。
045	让我们去确认一下\n现在当球与苹果碰撞后\n会发生什么～
046	请让球撞向苹果！
047	干得漂亮～！
048	现在能够获得苹果了！
049	就像这样，\n通过{color[0400]}{[0001|1b00]}破坏苹果{[0001|ffff]}{color[ffff]}来{color[0400]}{[0001|1b00]}呈现\n获得道具的效果{[0001|ffff]}{color[ffff]}！
050	下面让我们放置更多的苹果，\n打造出生机勃勃的场地吧！
052	让我们大量{[0001|1b00]}{color[0400]}复制\n时尚物体小节点{color[ffff]}{[0001|ffff]}！
053	先选中{[0001|1b00]}{color[0400]}时尚物体小节点{color[ffff]}{[0001|ffff]}～
054	复制。
055	移至右上～
056	继续复制。
057	移至右下。
058	还不够，继续复制！
059	移至右上～
060	最后一次复制。
061	放在下方！
061-01	5个苹果摆放完成！
062	去游戏画面确认一下吧！
063	5个苹果映入眼帘！
064	请实际体会这来之不易的成果，\n尝试获得所有苹果！
065	球技真是精湛！
066	话音未落就已大功告成了啊！
067	随着苹果数量增加，\n游戏的可玩性也大幅提升了！
069	返回之前的画面吧～
070	那么～～～这样一来～～～～～
071	第3步就完成了！
072	恭喜了。
073	越来越期待了。
074	♥恭喜你啦～♥
075	♥高端大气的场地♥
076	这次我们通过增加墙壁与苹果\n制作了{color[0400]}{[0001|1b00]}场地{[0001|ffff]}{color[ffff]}～
077	游戏变得越来越有趣了！
078	虽然现在就算获得苹果，\n也没有带来任何变化……
079	但下次我们要学习编写\n统计{color[0400]}{[0001|1b00]}获得个数{[0001|ffff]}{color[ffff]}的程序！
080	期待早日与你在下个步骤再会～！
Lesson_BallRoll_03.msbt
000	滚滚球第4步正式开始～！
001	上次我们用墙壁和苹果\n制作了场地！
003	之前，滚滚球的内容\n只是让这个球滚来滚去。\n而从这次开始……
004	为了让它更像一款真正的游戏，\n我们要{color[0400]}{[0001|1b00]}制订规则{[0001|ffff]}{color[ffff]}——\n{color[0400]}{[0001|1b00]}获得5个{[0001|ffff]}{color[ffff]}苹果即可{color[0400]}{[0001|1b00]}过关{[0001|ffff]}{color[ffff]}！
006	在这个步骤中，\n我们要开始编写\n{color[0400]}{[0001|1b00]}统计获得苹果数量{[0001|ffff]}{color[ffff]}的程序！！
008	前往程序画面吧。
009	要想{color[0400]}{[0001|1b00]}统计{[0001|ffff]}{color[ffff]}获得的苹果……
010	就要请擅长统计数量的\n{color[0400]}{[0001|1b00]}计数小节点{[0001|ffff]}{color[ffff]}出马了！
011	选择{color[0400]}{[0001|1b00]}中间{[0001|ffff]}{color[ffff]}……
012	{color[0400]}{[0001|1b00]}旗标、计数、随机{[0001|ffff]}{color[ffff]}。
013	最后选择{color[0400]}{[0001|1b00]}计数{[0001|ffff]}{color[ffff]}，\n来叫出{color[0400]}{[0001|1b00]}计数小节点{[0001|ffff]}{color[ffff]}！
014	我是在这堂课中……\n被叫出来的{color[0400]}{[0001|1b00]}第17个{[0001|ffff]}{color[ffff]}小节点。
014-01	计数对象为\n获得的苹果数量对吧。
014-02	计数的工作尽管交给我。
015	让计数小节点的位置\n稍微偏移一下然后放好～
019	要想统计数量，\n就需要向计数小节点{color[0400]}{[0001|1b00]}输入信号{[0001|ffff]}{color[ffff]}！
020	所以，\n为了统计{color[0400]}{[0001|1b00]}获得的苹果数量{[0001|ffff]}{color[ffff]}……
021	需要能在{color[0400]}{[0001|1b00]}获得苹果时\n{[0001|ffff]}{color[ffff]}输出信号的小节点。
022	获得苹果……\n就意味着{color[0400]}{[0001|1b00]}苹果损坏{[0001|ffff]}{color[ffff]}～
024	因此请叫出{[0001|1b00]}{color[0400]}物体损坏时小节点{color[ffff]}{[0001|ffff]}，\n让他在苹果损坏时输出信号！
025	选择{color[0400]}{[0001|1b00]}输入{[0001|ffff]}{color[ffff]}。
026	{color[0400]}{[0001|1b00]}游戏内的变化{[0001|ffff]}{color[ffff]}。
027	{color[0400]}{[0001|1b00]}物体损坏时{[0001|ffff]}{color[ffff]}。
029	我听说了！\n你是不是在做一款\n{[0001|1b00]}{color[0400]}有苹果大量损坏的游戏{color[ffff]}{[0001|ffff]}？
030	正确的说法是\n{[0001|1b00]}{color[0400]}获得苹果的游戏{color[ffff]}{[0001|ffff]}……
031	管他呢～管他呢～\n总之我会用心～\n帮你{[0001|1b00]}{color[0400]}关注损坏情况{color[ffff]}{[0001|ffff]}啦！
033	那么……\n请打开物体损坏时小节点的设置。
034	打开“{color[0400]}{[0001|1b00]}要检查什么？{[0001|ffff]}{color[ffff]}”……
035	仅将{color[0400]}{[0001|1b00]}苹果{[0001|ffff]}{color[ffff]}设为{color[0400]}{[0001|1b00]}开启{[0001|ffff]}{color[ffff]}。
036	好！\n关闭详细画面～
037	关闭设置！
038	略微移动物体损坏时小节点～
039	将{[0001|1b00]}{color[0400]}物体损坏时小节点{color[ffff]}{[0001|ffff]}连接到\n计数小节点的{color[0400]}{[0001|1b00]}增加端口{[0001|ffff]}{color[ffff]}。
040	苹果损坏时我会告诉你的！
041	明白！\n我来统计数量！
042	这样就成功实现了\n{[0001|1b00]}{color[0400]}统计获得苹果数量的机制{color[ffff]}{[0001|ffff]}！
044	然后我们要让这个数字\n显示在游戏画面中！
045	叫出{[0001|1b00]}{color[0400]}带数字物体小节点{color[ffff]}{[0001|ffff]}！
046	选择{color[0400]}{[0001|1b00]}物体{[0001|ffff]}{color[ffff]}。
047	{color[0400]}{[0001|1b00]}特殊物体{[0001|ffff]}{color[ffff]}。
048	最后选择{color[0400]}{[0001|1b00]}带数字物体{[0001|ffff]}{color[ffff]}，\n来叫出{color[0400]}{[0001|1b00]}带数字物体小节点{[0001|ffff]}{color[ffff]}！
049	你好，初次见面，\n请多关照。
050	我的职责是……\n将{[0001|1b00]}{color[0400]}接收的数值显示在\n游戏画面中的物体上{color[ffff]}{[0001|ffff]}。
050-01	请向我输入希望显示的数字。
051	把带数字物体小节点\n稍微缩小一些，\n放在游戏画面中显眼的位置～
052	然后打开设置画面……
053	仅{color[0400]}{[0001|1b00]}开启状态{[0001|ffff]}{color[ffff]}中的“{color[0400]}{[0001|1b00]}能看见{[0001|ffff]}{color[ffff]}”。
054	换个{color[0400]}{[0001|1b00]}颜色{[0001|ffff]}{color[ffff]}吧。
055	设为{color[0400]}{[0001|1b00]}红色{[0001|ffff]}{color[ffff]}！
056	也想换一换数字的颜色～\n请打开{color[0400]}{[0001|1b00]}文字颜色{[0001|ffff]}{color[ffff]}。
057	设为{color[0400]}{[0001|1b00]}白色{[0001|ffff]}{color[ffff]}吧～
058	{color[0400]}{[0001|1b00]}1位数{[0001|ffff]}{color[ffff]}就足够了～
059	将{[0001|1b00]}整数位数{[0001|ffff]}设为{color[0400]}{[0001|1b00]}1{[0001|ffff]}{color[ffff]}！
060	将{[0001|1b00]}位置{[0001|ffff]}的{[0001|1b00]}Y{[0001|ffff]}设为{[0001|1b00]}{color[0400]}0.60m{color[ffff]}{[0001|ffff]}。
061	恰到好处！\n请关闭设置画面！
062	然后！连接计数小节点\n与带数字物体小节点～
063	这样一来，{color[0400]}{[0001|1b00]}获得的苹果数量\n{[0001|ffff]}{color[ffff]}应该就能显示在游戏画面当中了！
064	让我们去看看吧！
065	没问题，{[0001|1b00]}{color[0400]}获得的苹果数量{color[ffff]}{[0001|ffff]}是……
066	没显示啊……
067	是我大意了……\n因为游戏画面当前处于{[0001|1b00]}{color[0400]}俯瞰视角{color[ffff]}{[0001|ffff]}……
068	需要将数字的{[0001|1b00]}{color[0400]}显示方向{color[ffff]}{[0001|ffff]}设为上方！
069	为了{color[0400]}{[0001|1b00]}能从上面看见{[0001|ffff]}{color[ffff]}数字，\n让我们修改一下程序～
070	选中带数字物体小节点～
071	打开设置！
072	请打开{color[0400]}{[0001|1b00]}显示方向{[0001|ffff]}{color[ffff]}。
073	因为我们希望向上方显示数字……
074	所以请设为{[0001|1b00]}{color[0400]}Y+{color[ffff]}{[0001|ffff]}！
074-01	{[0001|1b00]}{color[0400]}Y{color[ffff]}{[0001|ffff]}指的就是{color[0400]}{[0001|1b00]}上下方向{[0001|ffff]}{color[ffff]}。
075	好了，\n请关闭设置……
076	这次应该能看见了！
077	现在能看见数字了！
079	接下来就请专心收集苹果吧！
080	能够正常显示{color[0400]}{[0001|1b00]}获得数量{[0001|ffff]}{color[ffff]}了！
081	返回之前的画面吧～
082	那么～～这样一来～～～
083	第4步就完成了！
084	哎呀！了不起啊！
085	可喜可贺！
086	恭喜你～
087	这次我们成功编写了\n统计获得苹果数量的程序！
088	下次我们将利用这个数字\n来实现当获得全部苹果后\n即可{color[0400]}{[0001|1b00]}过关{[0001|ffff]}{color[ffff]}的机制！
090	这次的程序将成为下次的基础……
091	下次的程序也会继续\n带领我们走向更进一步的学习！
092	使程序相继形成连锁，\n让构思不断得以实现，\n这正是编程的乐趣所在啊！
094	那么！\n下个步骤也敬请期待～！
Lesson_BallRoll_04.msbt
000	欢迎来到滚滚球的第5步～～！
001	上次我们成功编程实现了\n{color[0400]}{[0001|1b00]}统计获得苹果数量的机制{[0001|ffff]}{color[ffff]}！
002	这次我们要{color[0400]}{[0001|1b00]}利用这个数字{[0001|ffff]}{color[ffff]}……
003	来计算{color[0400]}{[0001|1b00]}剩余的苹果数量{[0001|ffff]}{color[ffff]}！
004	以及制作{color[0400]}{[0001|1b00]}游戏过关的机制{[0001|ffff]}{color[ffff]}！
011	让我们这就开始编程吧！
016	现在，游戏画面中显示的\n是我们{color[0400]}{[0001|1b00]}获得的苹果数量{[0001|ffff]}{color[ffff]}……
017	接下来准备通过改造，\n让画面中显示{color[0400]}{[0001|1b00]}剩余的苹果数量{[0001|ffff]}{color[ffff]}！
018	{color[0400]}{[0001|1b00]}当剩余数量为0即可过关{[0001|ffff]}{color[ffff]}……\n一目了然吧！
019	因为一共有5个苹果……
020	所以计算{color[0400]}{[0001|1b00]}5－获得数量\n{[0001|ffff]}{color[ffff]}即可得出剩余数量。
021	遇到这种需要做{color[0400]}{[0001|1b00]}减法{[0001|ffff]}{color[ffff]}的情况时，\n就叫出{color[0400]}{[0001|1b00]}计算小节点{[0001|ffff]}{color[ffff]}吧！
022	选择{color[0400]}{[0001|1b00]}中间{[0001|ffff]}{color[ffff]}……
023	{color[0400]}{[0001|1b00]}计算（＋－×÷）{[0001|ffff]}{color[ffff]}。
024	最后选择{color[0400]}{[0001|1b00]}－{[0001|ffff]}{color[ffff]}，\n来叫出{color[0400]}{[0001|1b00]}计算小节点{[0001|ffff]}{color[ffff]}！
025	我是一台高性能计算器。
026	使用我的四则运算装置……
027	即可用{color[0400]}{[0001|1b00]}输入1端口{[0001|ffff]}{color[ffff]}的数值……\n{color[0400]}{[0001|1b00]}减去输入2端口{[0001|ffff]}{color[ffff]}的数值。
028	我将从{color[0400]}{[0001|1b00]}输出端口{[0001|ffff]}{color[ffff]}输出{color[0400]}{[0001|1b00]}计算结果{[0001|ffff]}{color[ffff]}。
031	将计算小节点移动到蓝框处……
032	将{color[0400]}{[0001|1b00]}计数小节点{[0001|ffff]}{color[ffff]}连接到\n{[0001|1b00]}{color[0400]}计算小节点{color[ffff]}{[0001|ffff]}的{color[0400]}{[0001|1b00]}输入2端口{[0001|ffff]}{color[ffff]}！
033	明白了，\n这是{color[0400]}{[0001|1b00]}获得的苹果数量{[0001|ffff]}{color[ffff]}。
034	下面请连接\n要向{color[0400]}{[0001|1b00]}输入1端口{[0001|ffff]}{color[ffff]}输入的数值。
036	必须将某个能够{color[0400]}{[0001|1b00]}输出\n{[0001|ffff]}{color[ffff]}苹果总数——{color[0400]}{[0001|1b00]}5{[0001|ffff]}{color[ffff]}的小节点\n连接到{color[0400]}{[0001|1b00]}输入1端口{[0001|ffff]}{color[ffff]}。
037	遇到这种需要使用{color[0400]}{[0001|1b00]}固定数值{[0001|ffff]}{color[ffff]}的情况时！\n请叫出{color[0400]}{[0001|1b00]}常数小节点{[0001|ffff]}{color[ffff]}！
038	请选择{color[0400]}{[0001|1b00]}输入{[0001|ffff]}{color[ffff]}……
039	然后选择{color[0400]}{[0001|1b00]}常数{[0001|ffff]}{color[ffff]}，\n叫出{color[0400]}{[0001|1b00]}常数小节点{[0001|ffff]}{color[ffff]}！
040	世上只有唯一真理……
041	请放心交给拥有一颗专一之心的我，\n{[0001|1b00]}{color[0400]}常数小节点{color[ffff]}{[0001|ffff]}。
043	将常数小节点放在蓝框处……
044	打开设置……
045	将“{[0001|1b00]}要输出什么数值？{[0001|ffff]}”设为{[0001|1b00]}{color[0400]}5.00{color[ffff]}{[0001|ffff]}！
046	关闭设置！
047	5.00是吧？\n遵命，我会守常不变地输出5.00。
048	将{color[0400]}{[0001|1b00]}常数小节点{[0001|ffff]}{color[ffff]}连接到\n{[0001|1b00]}{color[0400]}计算小节点{color[ffff]}{[0001|ffff]}的{color[0400]}{[0001|1b00]}输入1端口{[0001|ffff]}{color[ffff]}～
049	明白了，是{color[0400]}{[0001|1b00]}5{[0001|ffff]}{color[ffff]}。
050	我会用超高性能算法输出\n{color[0400]}{[0001|1b00]}5{[0001|ffff]}{color[ffff]}减去{color[0400]}{[0001|1b00]}获得苹果数{[0001|ffff]}{color[ffff]}的结果！！
051	要更换向带数字物体小节点\n输入数字的小节点了，\n重新进行连接吧！
052	请选中计数小节点\n与带数字物体小节点之间的线……
053	对这条线说声再见！
054	然后连接{color[0400]}{[0001|1b00]}计算小节点\n{[0001|ffff]}{color[ffff]}与{color[0400]}{[0001|1b00]}带数字物体小节点{[0001|ffff]}{color[ffff]}！
055	这样夹在小节点们{color[0400]}{[0001|1b00]}中间{[0001|ffff]}{color[ffff]}的\n计算小节点就会\n帮我们{color[0400]}{[0001|1b00]}计算数量{[0001|ffff]}{color[ffff]}了！
057	综上所述！现在应该\n能够显示{color[0400]}{[0001|1b00]}剩余苹果数量{[0001|ffff]}{color[ffff]}了！
058	好，前往游戏画面！
059	游戏开始时，正常显示为{color[0400]}{[0001|1b00]}5{[0001|ffff]}{color[ffff]}！
060	请获得所有苹果～
061	5、4、3、2、1、0……\n数字依次递减！
062	成功显示了{color[0400]}{[0001|1b00]}剩余苹果数量{[0001|ffff]}{color[ffff]}！
063	接下来我们要实现\n{[0001|1b00]}{color[0400]}获得所有苹果即可过关{color[ffff]}{[0001|ffff]}的机制！
064	前往程序画面！
065	{color[0400]}{[0001|1b00]}获得所有苹果{[0001|ffff]}{color[ffff]}，\n也就是说要{color[0400]}{[0001|1b00]}获得5个苹果{[0001|ffff]}{color[ffff]}……！
068	因此需要叫出能够{color[0400]}{[0001|1b00]}比较\n{[0001|ffff]}{color[ffff]}获得的苹果数量是否为5个的小节点！
070	选择{color[0400]}{[0001|1b00]}中间{[0001|ffff]}{color[ffff]}……
071	{color[0400]}{[0001|1b00]}比较{[0001|ffff]}{color[ffff]}。
072	最后选择{[0001|1b00]}{color[0400]}＝{color[ffff]}{[0001|ffff]}，\n来叫出{color[0400]}{[0001|1b00]}比较小节点{[0001|ffff]}{color[ffff]}！
073	世上需要比较之事比比皆是！
074	获得的苹果数量是否为5个……\n我表示强烈关注！！
074-01	将你想比较的数值\n输入我的{color[0400]}{[0001|1b00]}2个输入端口{[0001|ffff]}{color[ffff]}！！
075	事不宜迟！
076	将比较小节点移动到蓝框处～
077	将常数小节点连接到\n比较小节点的{color[0400]}{[0001|1b00]}输入1端口{[0001|ffff]}{color[ffff]}。
078	明白了，是{color[0400]}{[0001|1b00]}5{[0001|ffff]}{color[ffff]}！
079	将计数小节点连接到\n比较小节点的{color[0400]}{[0001|1b00]}输入2端口{[0001|ffff]}{color[ffff]}！
080	明白了，是{color[0400]}{[0001|1b00]}获得的苹果数量{[0001|ffff]}{color[ffff]}！
081	我会比较{color[0400]}{[0001|1b00]}5{[0001|ffff]}{color[ffff]}和{color[0400]}{[0001|1b00]}获得的苹果数量{[0001|ffff]}{color[ffff]}，\n{color[0400]}{[0001|1b00]}如果相同{[0001|ffff]}{color[ffff]}则输出信号！
084	好！这样一来\n{color[0400]}{[0001|1b00]}是否已获得5个苹果{[0001|ffff]}{color[ffff]}就一目了然了！
096	那么我们要借助该机制进行编程，\n在{color[0400]}{[0001|1b00]}获得5个苹果时让拉炮响起{[0001|ffff]}{color[ffff]}！
097	要想拉响拉炮～\n就要叫出那位天才演员\n兼暖场达人——{color[0400]}{[0001|1b00]}特效小节点{[0001|ffff]}{color[ffff]}了！
099	选择{color[0400]}{[0001|1b00]}物体{[0001|ffff]}{color[ffff]}。
100	{color[0400]}{[0001|1b00]}特殊物体{[0001|ffff]}{color[ffff]}。
101	然后从{color[0400]}{[0001|1b00]}特效{[0001|ffff]}{color[ffff]}当中……
102	选择{color[0400]}{[0001|1b00]}拉炮{[0001|ffff]}{color[ffff]}，\n来叫出{color[0400]}{[0001|1b00]}特效小节点{[0001|ffff]}{color[ffff]}！
103	你好！谢邀！！
104	我是小节点车库\n最嗨的明星——\n{[0001|1b00]}{color[0400]}特效小节点{color[ffff]}{[0001|ffff]}！！
105	要用{color[0400]}{[0001|1b00]}拉炮{[0001|ffff]}{color[ffff]}让游戏过关的\n场面嗨起来是吧！
107	那就先来句吉利话吧！
108	咱这拉炮～～～\n一飞冲天！一炮走红！！
109	……将他请到这边的席位就座吧。
110	连接{[0001|1b00]}{color[0400]}比较小节点{color[ffff]}{[0001|ffff]}与{[0001|1b00]}{color[0400]}特效小节点{color[ffff]}{[0001|ffff]}！
110-01	好！这样一来，\n{color[0400]}{[0001|1b00]}当获得5个苹果时\n拉炮响起{[0001|ffff]}{color[ffff]}的机制大功告成！
111	让我们去游戏画面看看效果吧～！
112	请获得全部苹果！
113	在获得全部苹果时，\n拉炮高奏凯歌了～！
115	不过……\n只有拉炮好像还缺了点什么……
116	好不容易过关了，\n再{color[0400]}{[0001|1b00]}加点声音{[0001|ffff]}{color[ffff]}热闹热闹吧！
117	前往程序画面。
118	要想播放声音～\n就叫出{color[0400]}{[0001|1b00]}播放声音小节点{[0001|ffff]}{color[ffff]}吧！
119	选择{color[0400]}{[0001|1b00]}输出{[0001|ffff]}{color[ffff]}。
120	{color[0400]}{[0001|1b00]}播放声音{[0001|ffff]}{color[ffff]}。
121	最后选择{color[0400]}{[0001|1b00]}播放音效{[0001|ffff]}{color[ffff]}，\n来叫出{color[0400]}{[0001|1b00]}播放声音小节点{[0001|ffff]}{color[ffff]}！
122	啦～～～～～～～～～♪
126	要嗨起来是吧，不会令你失望的，\n尽管交给我吧～～～♪
127	将播放声音小节点移动到蓝框处。
128	设置一下播放的声音吧。
128-01	播放声音小节点可以\n从设置画面中选择{color[0400]}{[0001|1b00]}播放什么声音{[0001|ffff]}{color[ffff]}！
129	这次我们选择{color[0400]}{[0001|1b00]}人声{[0001|ffff]}{color[ffff]}……
130	选择“{color[0400]}{[0001|1b00]}耶～！{[0001|ffff]}{color[ffff]}”。
130-01	好热闹的感觉啊！
131	好了，关闭详细画面……
132	关闭设置。
133	将{[0001|1b00]}{color[0400]}比较小节点{color[ffff]}{[0001|ffff]}与\n播放声音小节点的{[0001|1b00]}{color[0400]}播放端口{color[ffff]}{[0001|ffff]}进行连接。
134	去游戏画面确认一下吧！
135	目标是游戏过关～～\n出发！！
136	哦哦～～！要的就是这样的感觉！
137	没想到加个声音\n就能使过关的喜悦倍增～！
138	这样一来，\n{[0001|1b00]}{color[0400]}游戏过关机制{color[ffff]}{[0001|ffff]}就大功告成了！
139	返回之前的画面吧～
140	那么～～这样一来～～～
141	第5步就完成了！
142	可喜可贺！
143	太精彩了！
144	恭喜～！
145	恭喜啦～
147	这次我们通过编程实现了\n对{color[0400]}{[0001|1b00]}剩余苹果数量的计算{[0001|ffff]}{color[ffff]}……
148	并通过{color[0400]}{[0001|1b00]}比较获得苹果数量{[0001|ffff]}{color[ffff]}，\n制作了游戏过关的机制！
150	下次的编程，我们将在\n{color[0400]}{[0001|1b00]}提升游玩体验{[0001|ffff]}{color[ffff]}上面下功夫～
151	敬请期待！
Lesson_BallRoll_05.msbt
107	{[0201]}，欢迎光临！
000	第6步即将开始，\n你准备好了吗！？
001	上次我们编程实现了\n{[0001|1b00]}{color[0400]}游戏过关{color[ffff]}{[0001|ffff]}机制～！
003	而本次编程将致力于\n提升游玩体验！
005	首先请看游戏画面！
008	{color[0400]}{[0001|1b00]}游戏目的{[0001|ffff]}{color[ffff]}\n似乎表达得不够明确……是吧！
007	因此～我们要通过编程\n向玩家{color[0400]}{[0001|1b00]}说明玩法{[0001|ffff]}{color[ffff]}！
009	至于如何向玩家说明玩法……
010	方法当然不止一种，\n这里就直接通过{color[0400]}{[0001|1b00]}注释{[0001|ffff]}{color[ffff]}说明吧！
011	要想在游戏画面中显示{color[0400]}{[0001|1b00]}注释{[0001|ffff]}{color[ffff]}，\n需要使用{[0001|1b00]}{color[0400]}带注释物体小节点{color[ffff]}{[0001|ffff]}！
013	选择{color[0400]}{[0001|1b00]}物体{[0001|ffff]}{color[ffff]}……
014	{color[0400]}{[0001|1b00]}特殊物体{[0001|ffff]}{color[ffff]}。
015	选择{color[0400]}{[0001|1b00]}带注释物体{[0001|ffff]}{color[ffff]}，\n来叫出{color[0400]}{[0001|1b00]}带注释物体小节点{[0001|ffff]}{color[ffff]}！
017	语言……\n是让人与人心意相通的魔法……
018	要想将玩法告知玩家……\n就把心声寄托在{[0001|1b00]}{color[0400]}注释{color[ffff]}{[0001|ffff]}中吧！
019	那么我们来编辑\n{color[0400]}{[0001|1b00]}要告知{[0001|ffff]}{color[ffff]}玩家的{color[0400]}{[0001|1b00]}注释内容{[0001|ffff]}{color[ffff]}！
016	将带注释物体小节点\n横向放大并移动～
020	打开设置！
022	请按下“{[0001|1b00]}显示的注释{[0001|ffff]}”的{[0001|1b00]}编辑{[0001|ffff]}键，\n并输入{[0001|1b00]}{color[0400]}“获取苹果吧！”{color[ffff]}{[0001|ffff]}
023	是否已输入{[0001|1b00]}{color[0400]}“获取苹果吧！”{color[ffff]}{[0001|ffff]}？
024	是
025	否
026	那么请输入{[0001|1b00]}{color[0400]}“获取苹果吧！”{color[ffff]}{[0001|ffff]}！
028	继续进行其他设置！
029	仅{color[0400]}{[0001|1b00]}开启{[0001|ffff]}{color[ffff]}{[0001|1b00]}状态{[0001|ffff]}中的“{color[0400]}{[0001|1b00]}能看见{[0001|ffff]}{color[ffff]}”……
030	换个{color[0400]}{[0001|1b00]}颜色{[0001|ffff]}{color[ffff]}吧。
031	设为{color[0400]}{[0001|1b00]}红色{[0001|ffff]}{color[ffff]}。
032	{color[0400]}{[0001|1b00]}文字颜色{[0001|ffff]}{color[ffff]}也换一换。
033	就用{color[0400]}{[0001|1b00]}白色{[0001|ffff]}{color[ffff]}吧！
034	不要忘记设置{[0001|1b00]}{color[0400]}显示方向{color[ffff]}{[0001|ffff]}～
035	设置为{[0001|1b00]}{color[0400]}Y+{color[ffff]}{[0001|ffff]}，\n使之能够向上方显示。
037	并将{[0001|1b00]}位置{[0001|ffff]}的{[0001|1b00]}Y{[0001|ffff]}设为{[0001|1b00]}{color[0400]}0.60m{color[ffff]}{[0001|ffff]}。
038	恰到好处！\n关闭设置吧。
039	好！\n去游戏画面看看效果！
040	注释显示出来了！
041	这样就能将游戏目的\n明确告知玩家了！
042	接下来……
042-01	要让{color[0400]}{[0001|1b00]}数字所代表的含义\n{[0001|ffff]}{color[ffff]}能够一目了然！
043	让我们前往程序画面！
044	选中{color[0400]}{[0001|1b00]}带注释物体小节点{[0001|ffff]}{color[ffff]}……
045	复制！
046	稍微缩小一些后\n放在带数字物体小节点旁边～
047	打开设置～
048	请选择“{[0001|1b00]}显示的注释{[0001|ffff]}”，\n输入{[0001|1b00]}{color[0400]}“剩余”{color[ffff]}{[0001|ffff]}！
049	是否已输入{[0001|1b00]}{color[0400]}“剩余”{color[ffff]}{[0001|ffff]}？
050	是
051	否
052	那么请输入{[0001|1b00]}{color[0400]}“剩余”{color[ffff]}{[0001|ffff]}！
053	关闭设置。
054	去看看游戏画面\n发生了什么变化吧！
055	刚才设置的注释\n显示出来了～
056	这样数字所代表的含义\n就一清二楚了！
057	那么在进行后续操作之前，\n请获得所有的苹果～
058	干得漂亮！
059	现在……如果想再玩一遍，\n就必须按下“{color[0400]}{[0001|1b00]}重来{[0001|ffff]}{color[ffff]}”。
060	接下来的课题～\n正是如今面对的……过关后的问题！
061	如果想再玩一遍，\n就需要按下“{color[0400]}{[0001|1b00]}重来{[0001|ffff]}{color[ffff]}”。
062	因此为了便于重复游玩，\n让我们来编程实现\n{color[0400]}{[0001|1b00]}过关后自动重来的机制{[0001|ffff]}{color[ffff]}！
063	前往程序画面！
065	叫出{[0001|1b00]}{color[0400]}重来小节点{color[ffff]}{[0001|ffff]}！
066	选择{[0001|1b00]}{color[0400]}输出{color[ffff]}{[0001|ffff]}。
067	{[0001|1b00]}{color[0400]}重来、结束、切换{color[ffff]}{[0001|ffff]}。
068	{[0001|1b00]}{color[0400]}重来游戏{color[ffff]}{[0001|ffff]}。
069	将重来小节点移至蓝框处。
070	唉……\n完了……
071	怎……怎么了？
072	之前一不小心，\n将{color[0400]}{[0001|1b00]}计时小节点{[0001|ffff]}{color[ffff]}叫成了{color[0400]}{[0001|1b00]}计分小节点{[0001|ffff]}{color[ffff]}……
073	弄错别人的名字太不礼貌了……\n唉……真想重新来过。
075	……那么，\n一并叫出那位{color[0400]}{[0001|1b00]}计时小节点{[0001|ffff]}{color[ffff]}吧。
076	选择{color[0400]}{[0001|1b00]}中间{[0001|ffff]}{color[ffff]}。
077	{color[0400]}{[0001|1b00]}计时{[0001|ffff]}{color[ffff]}。
077-01	计时和计分一般不会搞混吧？\n意思不是完全不一样了嘛！！
077-02	我不是为被叫错名字心怀不满，\n只是对你犯错的原因本身抱有疑问。
077-03	噫……对不起。
077-04	因为我并没有生气，\n所以你不需要道歉。\n下次多注意就是了。
078	……既然纠纷已经化解，\n请将计时小节点放在蓝框处。
085	下面请打开设置。
086	将“{[0001|1b00]}在几秒后输出{[0001|ffff]}”设为{[0001|1b00]}{color[0400]}2.00{color[ffff]}{[0001|ffff]}！
087	关闭设置。
088	将{color[0400]}{[0001|1b00]}比较小节点{[0001|ffff]}{color[ffff]}连接到\n计时小节点的{color[0400]}{[0001|1b00]}输入端口{[0001|ffff]}{color[ffff]}～
089	将{color[0400]}{[0001|1b00]}计时小节点{[0001|ffff]}{color[ffff]}连接到\n{color[0400]}{[0001|1b00]}重来小节点{[0001|ffff]}{color[ffff]}～！
089-01	这样一来，游戏在过关2秒后\n重来的机制就完成了！
092	去游戏画面确认一下吧～
093	请获得所有苹果使游戏过关。
094	游戏自动重来了～！
108	这样就便于重复游玩了！
095	返回程序画面吧！
096	那么～～这样一来～～～
097	第6步就完成了！
098	心意传达到了。
099	真是太棒了。
100	恭……恭喜你。
101	干得漂亮啊。
102	这次我们{color[0400]}{[0001|1b00]}用注释说明了{[0001|ffff]}{color[ffff]}游戏玩法～
103	并通过编程实现了{color[0400]}{[0001|1b00]}重来的机制{[0001|ffff]}{color[ffff]}，\n让玩家能轻松地重复游玩！
104	下次我们将编程设计\n让滚滚球充满{color[0400]}{[0001|1b00]}刺激{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1b00]}传送门陷阱{[0001|ffff]}{color[ffff]}！
106	敬请期待下个步骤～～！
Lesson_BallRoll_06.msbt
000	欢迎光临～～！\n滚滚球第7步的时间到了！
001	在上次编程中，\n我们在画面中{color[0400]}{[0001|1b00]}说明了玩法{[0001|ffff]}{color[ffff]}！
003	那就再过关一次看看吧。
004	优美的滚动艺术！
005	重来也一切顺利！
006	尽管这已经不乏乐趣……
008	但还是不够啊……\n……{color[0400]}{[0001|1b00]}刺激{[0001|ffff]}{color[ffff]}方面。
010	因此！这次我们要编程\n设计{color[0400]}{[0001|1b00]}传送门{[0001|ffff]}{color[ffff]}制造障碍～
011	来为滚滚球注入{color[0400]}{[0001|1b00]}刺激{[0001|ffff]}{color[ffff]}元素～
012	至于如何设计{color[0400]}{[0001|1b00]}传送门{[0001|ffff]}{color[ffff]}……
013	自然要有请拥有传送能力的\n{color[0400]}{[0001|1b00]}传送物体入口小节点{[0001|ffff]}{color[ffff]}了！
014	选择{color[0400]}{[0001|1b00]}物体{[0001|ffff]}{color[ffff]}。
015	{color[0400]}{[0001|1b00]}放出、消除、引力{[0001|ffff]}{color[ffff]}。
016	{color[0400]}{[0001|1b00]}传送物体{[0001|ffff]}{color[ffff]}。
017	最后选择{color[0400]}{[0001|1b00]}传送物体：入口{[0001|ffff]}{color[ffff]}，\n来叫出{color[0400]}{[0001|1b00]}传送物体入口小节点{[0001|ffff]}{color[ffff]}！
018	呜呼……唤吾何事？
019	吾能力范围之广，\n可超乎世界尽头……
020	换言之……\n虽亚空间亦可及。
021	那就请他\n将球传送到亚空间去吧～
022	稍微缩小传送物体入口小节点，\n并移至蓝框处。
023	打开设置～
024	首先我们想将传送入口变{color[0400]}{[0001|1b00]}圆{[0001|ffff]}{color[ffff]}！
025	请将{[0001|1b00]}物体的形状{[0001|ffff]}设为{color[0400]}{[0001|1b00]}球体{[0001|ffff]}{color[ffff]}！
026	然后要通过更改设置，\n让{color[0400]}{[0001|1b00]}球{[0001|ffff]}{color[ffff]}能够被传送～
027	选择“{color[0400]}{[0001|1b00]}要传送什么？{[0001|ffff]}{color[ffff]}”……
028	仅将{color[0400]}{[0001|1b00]}球体{[0001|ffff]}{color[ffff]}设为{color[0400]}{[0001|1b00]}开启{[0001|ffff]}{color[ffff]}。
029	准确到位。\n关闭详细画面……
030	关闭设置。
031	传至亚空间，\n意即……出离游戏画面。
032	莫要反悔。
033	哦哦～～！\n太让人期待了！
034	那么！\n让球飞向亚空间吧～！
035	前往游戏画面！
036	正中央附近依稀可见的\n白线围成的球体\n就是{color[0400]}{[0001|1b00]}传送入口{[0001|ffff]}{color[ffff]}！
037	那么！\n请尝试让球接触{color[0400]}{[0001|1b00]}传送入口{[0001|ffff]}{color[ffff]}！
038	消失了……！！
039	进入传送入口的球……消失了！
040	魔幻啊！！！
042	而这看似魔幻的现象，\n恰恰证明了编程的成功！！
043	那么……\n既然球已经消失，\n我们就只好从头再来了！
044	但这似乎……\n苛刻了点……
045	那就通过编程，\n让球在消失后能够被传送回{color[0400]}{[0001|1b00]}起点{[0001|ffff]}{color[ffff]}吧！
046	我们要让进入传送入口\n并消失在亚空间的球\n能够重新{color[0400]}{[0001|1b00]}出现在起点{[0001|ffff]}{color[ffff]}。
047	既然存在传送入口，\n当然也存在着相应的传送出口！
048	那么！\n让我们这就叫出\n{[0001|1b00]}{color[0400]}传送物体出口小节点{color[ffff]}{[0001|ffff]}～！
049	选择{color[0400]}{[0001|1b00]}物体{[0001|ffff]}{color[ffff]}。
050	{color[0400]}{[0001|1b00]}放出、消除、引力{[0001|ffff]}{color[ffff]}。
051	{color[0400]}{[0001|1b00]}传送物体{[0001|ffff]}{color[ffff]}。
052	最后选择{color[0400]}{[0001|1b00]}传送物体：出口{[0001|ffff]}{color[ffff]}，\n来叫出{color[0400]}{[0001|1b00]}传送物体出口小节点{[0001|ffff]}{color[ffff]}！
053	呜呼……唤吾何事？
054	汝既有此愿……
055	吾自当竭力由亚空间彼岸……\n召唤任意物体重现世间……
056	置吾于{[0001|1b00]}{color[0400]}目标地点{color[ffff]}{[0001|ffff]}即可。
057	那就将传送物体出口小节点\n移动到{[0001|1b00]}{color[0400]}起点{color[ffff]}{[0001|ffff]}处吧～
058	来！\n去游戏画面确认一下！
059	起点处白线围成的立方体\n就是传送出口了～
060	请让球接触{color[0400]}{[0001|1b00]}传送入口{[0001|ffff]}{color[ffff]}！
061	啊……\n球从起点处出现了～～！
063	{[0001|1b00]}{color[0400]}传送机制{color[ffff]}{[0001|ffff]}至此大功告成！
064	……但如果只有白线，\n发动传送需要接触的部位\n就不够明确……
065	让它一目了然吧！
066	使用{color[0400]}{[0001|1b00]}时尚物体小节点\n{[0001|ffff]}{color[ffff]}在传送地点放置{color[0400]}{[0001|1b00]}圆环{[0001|ffff]}{color[ffff]}！
067	选择{color[0400]}{[0001|1b00]}物体{[0001|ffff]}{color[ffff]}。
068	{color[0400]}{[0001|1b00]}时尚物体{[0001|ffff]}{color[ffff]}。
069	{color[0400]}{[0001|1b00]}各种时尚物体{[0001|ffff]}{color[ffff]}。
070	最后选择{color[0400]}{[0001|1b00]}圆环{[0001|ffff]}{color[ffff]}，\n来叫出{color[0400]}{[0001|1b00]}时尚物体小节点{[0001|ffff]}{color[ffff]}！
071	放在传送物体入口小节点处。
072	传送到起点后……\n形成传送循环……
073	圆环正好能为循环代言！！\n♥高端！大气！上档次！♥
075	打开时尚物体小节点的设置～
076	仅{color[0400]}{[0001|1b00]}开启{[0001|ffff]}{color[ffff]}{[0001|1b00]}状态{[0001|ffff]}中的“{color[0400]}{[0001|1b00]}能看见{[0001|ffff]}{color[ffff]}”。
077	关闭设置。
078	然后要在起点处的\n传送出口那边放置同样的圆环！
079	复制{[0001|1b00]}圆环{[0001|ffff]}的{color[0400]}{[0001|1b00]}时尚物体小节点{[0001|ffff]}{color[ffff]}～
080	移至传送出口旁边。
081	将这个圆环尽量贴合墙壁放置！
082	请打开时尚物体小节点的设置！
083	将{[0001|1b00]}旋转{[0001|ffff]}的{[0001|1b00]}Z{[0001|ffff]}设为{color[0400]}{[0001|1b00]}90.00°{[0001|ffff]}{color[ffff]}。
083-01	这样圆环的朝向就会旋转，\n贴合墙壁了！
084	好了，请关闭设置。
085	来！去游戏画面看看吧！
086	圆环华丽登场了！
087	这样就算看不见{[0001|1b00]}{color[0400]}传送门{color[ffff]}{[0001|ffff]}的白线\n也不要紧了。
088	在程序画面中进行设置，\n隐藏白线吧！
089	我们要{color[0400]}{[0001|1b00]}关闭传送门的外观{[0001|ffff]}{color[ffff]}。
090	先选中{[0001|1b00]}{color[0400]}传送物体入口小节点{color[ffff]}{[0001|ffff]}～
091	在设置当中……
092	{color[0400]}{[0001|1b00]}关闭{[0001|ffff]}{color[ffff]}{[0001|1b00]}状态{[0001|ffff]}中的“{color[0400]}{[0001|1b00]}能看见{[0001|ffff]}{color[ffff]}”。
093	关闭设置。
094	呜呼……\n此身若有若无……
095	对{[0001|1b00]}{color[0400]}传送出口{color[ffff]}{[0001|ffff]}也如法炮制。
096	选择{[0001|1b00]}{color[0400]}传送物体出口小节点{color[ffff]}{[0001|ffff]}。
097	在设置当中～
098	{color[0400]}{[0001|1b00]}关闭{[0001|ffff]}{color[ffff]}{[0001|1b00]}状态{[0001|ffff]}中的“{color[0400]}{[0001|1b00]}能看见{[0001|ffff]}{color[ffff]}”。
099	没问题了，\n关闭设置吧。
100	呜呼……\n形虽逝而力犹存……
101	去游戏画面确认一下吧。
102	无可挑剔！\n传送门的白线看不见了！
103	那个……{[0201]}，\n只有1个传送门是不是还不够刺激～～～？
104	为满足{[0201]}对刺激的追求！\n我建议继续追加传送门！
105	前往程序画面！
106	下面就来追加传送门！
107	选中{[0001|1b00]}{color[0400]}传送物体入口小节点{color[ffff]}{[0001|ffff]}……
108	复制！
109	请将其移动到蓝框处。
110	呜呼，\n以传送……\n邂逅未知。
111	继续复制。
112	移至右上角～
113	呜呼……无需介怀。
114	前所未见而已。
115	最后一次复制！
116	将最后的传送入口放在这里～！
117	呜呼……心愿之界限，\n即为世界之尽头……
118	虽然传送入口增加了许多，\n但所有传送入口均与\n{[0001|1b00]}{color[0400]}起点处的出口{color[ffff]}{[0001|ffff]}连接着～
119	呜呼……\n{[0001|1b00]}{color[0400]}传送物体入口小节点{color[ffff]}{[0001|ffff]}\n虽为数甚多亦可安心。
120	凭吾之力，\n终将回归。
121	那就一并追加圆环吧。
122	选择{[0001|1b00]}圆环{[0001|ffff]}的{color[0400]}{[0001|1b00]}时尚物体小节点{[0001|ffff]}{color[ffff]}……
123	复制。
124	与传送入口对齐～
125	休想侵入通道一步！\n我是闪亮♥圆环。
126	继续复制。
127	同样对齐！
128	不停步就让你好看！\n我是光明♥圆环。
129	最后一次复制。
130	可要严丝合缝地对齐哦！
131	全方位禁止通行！\n我是华丽♥圆环。
132	好了！\n让我们去游戏画面确认一下！
133	一下子多了这么多的传送入口！
134	之前那个单纯让球\n骨碌骨碌滚动的游戏……
135	已经蜕变成为充满刺激的作品！
136	那就请尽情游玩吧！
137	恭喜～！\n你过关了！！
138	那么让我们前往程序画面～！
139	如果玩够了，\n就让我们返回程序画面吧～
140	那么～～这样一来～～～
141	第7步就完成了！
142	可喜。
143	可叹。
144	堪称完美。
145	♥好刺激哦♥
146	好！\n这次我们制作了\n惊险刺激的{color[0400]}{[0001|1b00]}传送门陷阱{[0001|ffff]}{color[ffff]}～
147	距离游戏完成仅咫尺之遥！
148	下次就是{[0001|1b00]}{color[0400]}最后一步{color[ffff]}{[0001|ffff]}～！
149	让我们添加{color[0400]}{[0001|1b00]}BGM{[0001|ffff]}{color[ffff]}，\n为滚滚球画上句号！
150	敬请期待下个步骤～～！
Lesson_BallRoll_07.msbt
000	{[0201]}，欢迎光临！
001	滚滚球……\n终于迎来{[0001|1b00]}{color[0400]}最后的步骤{color[ffff]}{[0001|ffff]}了！
002	今天我们要在滚滚球当中\n进一步展示{[0201]}的个性！
003	让我们前往程序画面！
004	首先为改变{[0001|1b00]}{color[0400]}外观{color[ffff]}{[0001|ffff]}做好准备！
005	创造世界，改变世界……\n叫出{color[0400]}{[0001|1b00]}空间小节点{[0001|ffff]}{color[ffff]}！
006	选择{color[0400]}{[0001|1b00]}物体{[0001|ffff]}{color[ffff]}。
007	选择{color[0400]}{[0001|1b00]}空间{[0001|ffff]}{color[ffff]}，\n来叫出{color[0400]}{[0001|1b00]}空间小节点{[0001|ffff]}{color[ffff]}！
009	你的双眼……\n炯炯有神。
012	让我们将你心中的世界……\n化为现实……
012-01	空间小节点呢～\n拥有改变游戏画面中的\n{[0001|1b00]}{color[0400]}世界形状及外观{color[ffff]}{[0001|ffff]}的能力！
013	不妨先尝试改变平面风格看看！
014	打开设置……
015	打开{color[0400]}{[0001|1b00]}空间的外观{[0001|ffff]}{color[ffff]}……
016	设为{color[0400]}{[0001|1b00]}金属{[0001|ffff]}{color[ffff]}。
017	没问题，\n请关闭设置。
023	让我们来看看效果！
024	哦哦～！\n印象截然不同了！
025	像这样在{color[0400]}{[0001|1b00]}空间小节点{[0001|ffff]}{color[ffff]}的\n设置中更改{color[0400]}{[0001|1b00]}空间的外观{[0001|ffff]}{color[ffff]}，\n就能{color[0400]}{[0001|1b00]}改变{[0001|ffff]}{color[ffff]}游戏的{color[0400]}{[0001|1b00]}整体印象{[0001|ffff]}{color[ffff]}！
026	那接下来！\n来{[0001|1b00]}{color[0400]}编程添加BGM{color[ffff]}{[0001|ffff]}吧！
033	要想播放BGM，\n需要叫出{[0001|1b00]}{color[0400]}BGM小节点{color[ffff]}{[0001|ffff]}！
034	选择{[0001|1b00]}{color[0400]}输出{color[ffff]}{[0001|ffff]}。
035	选择{color[0400]}{[0001|1b00]}播放BGM{[0001|ffff]}{color[ffff]}，\n来叫出{color[0400]}{[0001|1b00]}BGM小节点{[0001|ffff]}{color[ffff]}！
036	耶！！\n大家有没有在尽情享受\n最酷最嗨的编程时刻！？
037	很好！各位！\n跟着我喊！小～节点！
038	小～节点！
039	小～节点！
040	小～节点！
041	最后一次！小～节点！耶～！
042	小～节点！耶～！
043	很好！很好！\n感谢各位最酷最嗨的\n小节点倾情配合！谢谢！
050	要想播放BGM，\n需要向{color[0400]}{[0001|1b00]}BGM小节点输入信号{[0001|ffff]}{color[ffff]}……
051	因此叫出{[0001|1b00]}{color[0400]}常数小节点\n{color[ffff]}{[0001|ffff]}并与他进行连接吧！
052	选择{[0001|1b00]}{color[0400]}输入{color[ffff]}{[0001|ffff]}。
053	选择{color[0400]}{[0001|1b00]}常数{[0001|ffff]}{color[ffff]}，\n来叫出{color[0400]}{[0001|1b00]}常数小节点{[0001|ffff]}{color[ffff]}！
054	放在BGM小节点旁边～
055	不变的情怀！\n永恒的旋律！\n“常数”前来报到！
056	美妙的颤音！
058	请将常数小节点连接到\nBGM小节点的{color[0400]}{[0001|1b00]}播放端口{[0001|ffff]}{color[ffff]}。
059	很好！\n来吧！让我们前去确认！
060	响起了欢快的音乐！
061	成功播放BGM了！
062	BGM小节点的保留曲目\n当然不止一首～～
063	接下来{color[0400]}{[0001|1b00]}更改BGM{[0001|ffff]}{color[ffff]}试试！
064	请选中{color[0400]}{[0001|1b00]}BGM小节点{[0001|ffff]}{color[ffff]}～
065	打开设置。
066	BGM正在播放～！
067	我们想换一首\n完全不同的BGM。
068	首先来选择{color[0400]}{[0001|1b00]}乐曲{[0001|ffff]}{color[ffff]}吧！
069	选择{color[0400]}{[0001|1b00]}踏实{[0001|ffff]}{color[ffff]}听听看。
070	BGM变了！
071	还可以通过更改{color[0400]}{[0001|1b00]}旋律{[0001|ffff]}{color[ffff]}、{color[0400]}{[0001|1b00]}主伴奏{[0001|ffff]}{color[ffff]}、\n{color[0400]}{[0001|1b00]}副伴奏{[0001|ffff]}{color[ffff]}、{color[0400]}{[0001|1b00]}节奏{[0001|ffff]}{color[ffff]}的组合～
072	创作出五花八门的BGM！
073	请尝试将{[0001|1b00]}主伴奏{[0001|ffff]}设为{color[0400]}{[0001|1b00]}木吉他{[0001|ffff]}{color[ffff]}。
075	我们听到了{color[0400]}{[0001|1b00]}木吉他的音色{[0001|ffff]}{color[ffff]}。
076	这次将{[0001|1b00]}主伴奏{[0001|ffff]}设为\n{color[0400]}{[0001|1b00]}踏板效果器与吉他{[0001|ffff]}{color[ffff]}～
077	我们听到了嗡嗡作响的\n奇妙吉他音色。
081	接下来将{[0001|1b00]}主伴奏{[0001|ffff]}设为{color[0400]}{[0001|1b00]}静音{[0001|ffff]}{color[ffff]}～
082	踏板效果器与吉他的声音\n陷入沉默，主伴奏消失了！
084	那么将{[0001|1b00]}副伴奏{[0001|ffff]}也设为{color[0400]}{[0001|1b00]}静音{[0001|ffff]}{color[ffff]}～
085	这样一来，\n{color[0400]}{[0001|1b00]}只有旋律和节奏{[0001|ffff]}{color[ffff]}的BGM就完成了！
086	我们可以像这样\n通过更改音色或\n设为静音等方式{color[0400]}{[0001|1b00]}创作BGM{[0001|ffff]}{color[ffff]}！
087	先关闭设置～
088	进入游戏画面\n确认BGM是否已经改变！
089	没问题！\n现在播放的是刚才设置的BGM！
091	返回程序画面吧！
092	好了！接下来是\n{[0201]}自由发挥的时间！！
094	改变{color[0400]}{[0001|1b00]}空间的外观{[0001|ffff]}{color[ffff]}也好……
095	创作{color[0400]}{[0001|1b00]}BGM{[0001|ffff]}{color[ffff]}也好……
096	更换带注释物体的{color[0400]}{[0001|1b00]}注释{[0001|ffff]}{color[ffff]}内容也好，\n请打造{[0201]}独有的\n滚滚球游戏吧！
097	如果觉得“就是它了！”，\n请按下{color[0400]}{[0001|1b00]}完成键{[0001|ffff]}{color[ffff]}！
098	那么～～～
099	开始编程！
100	终于……完成了！
101	快去游戏画面展示一下\n{[0201]}制作的滚滚球吧！
102	哦哦～～～！！\n好一款洋溢着{[0201]}个性的\n滚滚球游戏！
103	原来如此～\n有意保持原汁原味也是个不错的选择～
104	那么……\n这样一来～～～
105	滚滚球大功告成！！
106	太棒了～～～！
107	来！\n让我们前往程序画面！！
108	这超一流的完成度！\n滚滚球音乐起～～！！
109	{[0201]}，\n太了不起了～～～～！！
110	完美掌握计算方法！
111	你制作的出色游戏……\n会将你的心声传达给每一个人。
112	将倾斜的乐趣展示得淋漓尽致……\n了不起。
113	终于成功了！\n我现在！！\n激动得无以复加！！
114	{[0201]}的品位同样\n♥超级亮眼♥
115	呜呼……传送达人。\n汝……绝非寻常之辈。
125	无论是{color[0400]}{[0001|1b00]}倾斜{[0001|ffff]}{color[ffff]}的运用，\n还是使用数字进行的{[0001|1b00]}{color[0400]}计算{color[ffff]}{[0001|ffff]}及{color[0400]}{[0001|1b00]}比较{[0001|ffff]}{color[ffff]}，\n均为本次讲解增添了难度……
126	但竟然仍难不倒你……\n{[0201]}，你的天赋……\n深不可测！！
128	敬请期待下次课程！
129	那就将这款滚滚球\n也加入到游戏一览当中吧！
130	辛苦了！\n让我们先返回菜单～！
Lesson_CarRace_00.msbt
000	你好呀，\n{[0201]}。
001	欢迎来到火花四射的赛车场！
002	没错！今天我们要制作的游戏～～～
003	就是{[0001|1b00]}{color[0400]}刺激赛车{color[ffff]}{[0001|ffff]}啦！！！
004	顾名思义，这是一款赛车游戏！！
005	在倒数的报数声中，逐渐升腾的紧张感……
006	参赛赛车齐声轰鸣的引擎……
007	以及……\n率先抵达终点时欢欣鼓舞的心情！
008	简直太刺激了！
009	那么让我们抓紧时间前往程序画面吧～
010	3、2、1……
011	GO——！！！
012	首先……
013	切换成{[0001|1b00]}{color[0400]}俯瞰视角{color[ffff]}{[0001|ffff]}吧。
014	很好～！
015	提起赛车游戏就会想到{[0001|1b00]}{color[0400]}汽车{color[ffff]}{[0001|ffff]}。
016	提起汽车，\n那必然就会想到{[0001|1b00]}{color[0400]}汽车小节点{color[ffff]}{[0001|ffff]}啦！
017	选择{[0001|1b00]}物体{[0001|ffff]} {[0001|0500]}{[0001|ffff]} {[0001|1b00]}角色{[0001|ffff]} {[0001|0500]}{[0001|ffff]} {[0001|1b00]}{color[0400]}汽车{color[ffff]}{[0001|ffff]}，\n叫出汽车小节点吧！
018	滴滴叭叭呜！\n嗨，我是{[0001|1b00]}{color[0400]}汽车小节点{color[ffff]}{[0001|ffff]}。
019	我会按照编程的内容行驶哦！！
020	我最喜欢赛车了！\n滴滴……轰——轰——
022	那么现在，\n我们就来编写程序，\n让汽车小节点行驶起来吧。
023	首先让我们把汽车小节点\n放在起点位置，并稍微缩小一些。
024	滴滴……
025	接着我们就来编写\n汽车行驶所必需的……
026	加速的程序吧！
027	首先叫出{[0001|1b00]}{color[0400]}{color[ffff]}{[0001|ffff]}的{[0001|1b00]}{color[0400]}按键小节点{color[ffff]}{[0001|ffff]}，\n并将他放在蓝框处。
028	请指教！
029	把{[0001|1b00]}{color[0400]}按键小节点{color[ffff]}{[0001|ffff]}连接到\n汽车小节点的{[0001|1b00]}{color[0400]}加速端口{color[ffff]}{[0001|ffff]}。
030	好的！现在可以用键\n踩下油门了哦！
031	轰——轰隆隆——
032	接下来，\n为了让汽车能够左右转弯～
033	我们要编程\n实现方向盘的操作！
034	叫出{[0001|1b00]}{color[0400]}L摇杆左右方向{color[ffff]}{[0001|ffff]}的{[0001|1b00]}{color[0400]}摇杆小节点{color[ffff]}{[0001|ffff]}，\n放在蓝框处。
035	转呀转——我负责左右方向。
036	现在把{[0001|1b00]}{color[0400]}摇杆小节点{color[ffff]}{[0001|ffff]}连接到\n汽车小节点的{[0001|1b00]}{color[0400]}方向盘端口{color[ffff]}{[0001|ffff]}。
037	方向盘转呀转——
038	现在请打开\n{[0001|1b00]}{color[0400]}汽车小节点{color[ffff]}{[0001|ffff]}的设置～
039	把{[0001|1b00]}移动速度{[0001|ffff]}设为{[0001|1b00]}{color[0400]}0.50{color[ffff]}{[0001|ffff]}。
040	把{[0001|1b00]}位置{[0001|ffff]}的{[0001|1b00]}Y{[0001|ffff]}调节到{[0001|1b00]}{color[0400]}0.40m{color[ffff]}{[0001|ffff]}。
041	万无一失。\n那么关闭设置吧。
042	好了！\n现在我们就可以驾驶汽车了！
043	那么，前往游戏画面，\n踩下油门吧！
044	按下{[0001|1b00]}{color[0400]}键{color[ffff]}{[0001|ffff]}发动汽车看看吧。
045	汽车可以行驶了！
047	但是……以这个势头行驶，\n很快就会跑出游戏画面。
049	因此！我们要让游戏画面\n也跟随汽车一起移动！
050	既然赛车游戏的本质，\n就是让汽车不停往前开……
051	那么我们就来安排{[0001|1b00]}{color[0400]}照相机{color[ffff]}{[0001|ffff]}，\n跟随在汽车后面拍摄。
052	首先把{[0001|1b00]}{color[0400]}汽车小节点旋转180°{color[ffff]}{[0001|ffff]}。
053	叫出{[0001|1b00]}{color[0400]}照相机小节点{color[ffff]}{[0001|ffff]}，\n并把他移动到汽车的后面。
054	今天我要拍摄怎样的画面呢？
055	在解谜房间的制作中，\n照相机的位置是固定的……
056	不过这次，就让照相机来{[0001|1b00]}{color[0400]}跟随汽车{color[ffff]}{[0001|ffff]}吧。
057	……包在我身上。
058	和“GO！GO！运动竞技”中的\n游戏画面小节点一样……
059	照相机小节点也可以{[0001|1b00]}{color[0400]}通过连接{color[ffff]}{[0001|ffff]}，\n{[0001|1b00]}{color[0400]}跟随{color[ffff]}{[0001|ffff]}其他小节点进行移动！
060	把{[0001|1b00]}{color[0400]}照相机小节点{color[ffff]}{[0001|ffff]}\n连接到{[0001|1b00]}{color[0400]}汽车小节点{color[ffff]}{[0001|ffff]}身上吧。
061	要把我拍得帅一点哦！
062	……那是必须的。
063	那么，为了呈现更好的画面效果，\n让我们打开{[0001|1b00]}{color[0400]}照相机小节点{color[ffff]}{[0001|ffff]}的设置～
064	把{[0001|1b00]}照相机视角{[0001|ffff]}设为{[0001|1b00]}{color[0400]}60.00{color[ffff]}{[0001|ffff]}。
065	把{[0001|1b00]}角色Y轴旋转追踪{[0001|ffff]}设为{[0001|1b00]}{color[0400]}开启{color[ffff]}{[0001|ffff]}。
066	再把{[0001|1b00]}偏移距离{[0001|ffff]}设置成\n{[0001|1b00]}Y{[0001|ffff]}：{[0001|1b00]}{color[0400]}0.50m{color[ffff]}{[0001|ffff]}，\n{[0001|1b00]}Z{[0001|ffff]}：{[0001|1b00]}{color[0400]}3.00m{color[ffff]}{[0001|ffff]}。
067	很好！\n那么关闭设置吧！
069	这样一来，\n镜头就会追着汽车跑了！
070	让我们去看看效果吧！
071	哦哦～
072	现在可以拍到汽车后面的样子了……
073	这样的画面很适合观看赛车呢。
074	用{[0001|1b00]}{color[0400]}键{color[ffff]}{[0001|ffff]}和{[0001|1b00]}{color[0400]}摇杆{color[ffff]}{[0001|ffff]}\n来尝试驾驶汽车吧。
075	画面会跟随汽车同步移动了～！
076	让我们返回程序画面吧。
077	能跟上我的速度，\n真是厉害！
078	……包在我身上。
079	话说回来……
080	现在汽车可以往{[0001|1b00]}{color[0400]}前{color[ffff]}{[0001|ffff]}行驶，\n也可以往{[0001|1b00]}{color[0400]}左右{color[ffff]}{[0001|ffff]}转弯了……
081	但是还不能{[0001|1b00]}{color[0400]}后退{color[ffff]}{[0001|ffff]}。
082	就算是个赛车游戏，\n偶尔～也会需要倒车嘛……
083	那接下来我们就来为倒车编程吧～！
084	其实，只要向汽车小节点的\n{[0001|1b00]}加速端口{[0001|ffff]}……
085	输入{[0001|1b00]}{color[0400]}负{color[ffff]}{[0001|ffff]}数的话，\n就可以{[0001|1b00]}{color[0400]}倒车或是刹车{color[ffff]}{[0001|ffff]}了哦！
087	现在我们就来编程，\n利用键实现倒车吧！
088	首先叫出{[0001|1b00]}{color[0400]}{color[ffff]}{[0001|ffff]}的{[0001|1b00]}{color[0400]}按键小节点{color[ffff]}{[0001|ffff]}，\n放在蓝框处。
089	请指教！
090	想要让键的\n输出值{[0001|1b00]}{color[0400]}为负数{color[ffff]}{[0001|ffff]}，\n要怎么办才好呢……
091	答案是\n做{[0001|1b00]}{color[0400]}减法{color[ffff]}{[0001|ffff]}！
092	把2个按键小节点的输出值，\n按“{[0001|1b00]}{color[0400]}－{color[ffff]}{[0001|ffff]}”的方式进行减法计算。
092-01	这样一来，\n当按下{[0001|1a00]}{color[0400]}键{color[ffff]}{[0001|ffff]}时就会输出{[0001|1a00]}{color[0400]}1{color[ffff]}{[0001|ffff]}，\n当按下{[0001|1a00]}{color[0400]}键{color[ffff]}{[0001|ffff]}时就会输出{[0001|1a00]}{color[0400]}-1{color[ffff]}{[0001|ffff]}！
093	叫出{[0001|1b00]}{color[0400]}－{color[ffff]}{[0001|ffff]}的{[0001|1b00]}{color[0400]}计算小节点{color[ffff]}{[0001|ffff]}，\n放在蓝框处。
094	减法是吧，\n请尽管交给我。
095	把{[0001|1b00]}{color[0400]}{color[ffff]}{[0001|ffff]}的按键小节点\n和计算小节点的{[0001|1b00]}{color[0400]}输入1端口{color[ffff]}{[0001|ffff]}连接起来。
096	把{[0001|1b00]}{color[0400]}{color[ffff]}{[0001|ffff]}的按键小节点\n和计算小节点的{[0001|1b00]}{color[0400]}输入2端口{color[ffff]}{[0001|ffff]}连接起来。
097	然后把汽车小节点\n和{[0001|1b00]}{[0001|ffff]}的按键小节点\n之间的{[0001|1b00]}{color[0400]}线删除{color[ffff]}{[0001|ffff]}。
098	把{[0001|1b00]}{color[0400]}计算小节点{color[ffff]}{[0001|ffff]}\n和汽车小节点的{[0001|1b00]}{color[0400]}加速端口{color[ffff]}{[0001|ffff]}连接起来。
099	倒车，请注意……\n倒车，请注意……
100	输入和输出，\n都已万无一失。
101	这样一来，\n倒车的编程也完成了～
102	那我们就去确认一下吧！
103	用{[0001|1b00]}{color[0400]}键{color[ffff]}{[0001|ffff]}试试看倒车吧。
104	现在可以成功倒车了～
105	这样一来，汽车就可以\n自由自在地到处行驶了！
106	话说回来，你有没有觉得……\n这辆车的外观很豪迈呢～？
107	看这伸出车体的硕大轮胎，\n要是用它们在沙漠或是\n荒原上奔驰的话……
108	想必会很爽吧！
109	既然如此，不如就把空间的外观\n换成沙漠的样子吧～
110	让我们返回程序画面。
111	请叫出{[0001|1b00]}{color[0400]}空间小节点{color[ffff]}{[0001|ffff]}，\n放在蓝框处。
112	我就在想，\n你们差不多也该过来了……
113	在设置中把{[0001|1b00]}空间的外观{[0001|ffff]}设为{[0001|1b00]}{color[0400]}沙{color[ffff]}{[0001|ffff]}。
114	做得很棒！\n请关闭设置。
115	让我们去确认一下吧。
116	灼热的沙漠配上越野车……\n简直帅爆了！！
117	要是在沙漠开够了，\n就返回程序画面吧！
118	那么～～～这样一来～～～～～
119	第1步就完成了。
120	可喜可贺啊。
121	……恭喜。
122	恭喜你。
123	真是值得庆贺啊。
124	在下个步骤，\n让我们来编程设计{[0001|1b00]}{color[0400]}终点线{color[ffff]}{[0001|ffff]}\n和你的{[0001|1b00]}{color[0400]}比赛对手{color[ffff]}{[0001|ffff]}吧！
125	敬请期待！
126	那么让我们在下个步骤再会～
Lesson_CarRace_01.msbt
000	你好，\n{[0201]}。
001	上次我们完成了\n对{[0001|1b00]}{color[0400]}汽车{color[ffff]}{[0001|ffff]}与{[0001|1b00]}{color[0400]}照相机{color[ffff]}{[0001|ffff]}的编程！
002	让我们再试试驾驶汽车，\n以便温故知新吧～
003	是加速，\n是倒车/刹车，\n是方向盘。
004	照相机会跟随汽车进行移动。
005	那么这次～
006	我们将编程设计\n{[0001|1b00]}{color[0400]}终点线{color[ffff]}{[0001|ffff]}与{[0001|1b00]}{color[0400]}比赛对手{color[ffff]}{[0001|ffff]}！
007	前往程序画面吧。
008	先来制作{[0001|1b00]}{color[0400]}终点线{color[ffff]}{[0001|ffff]}～
009	移动到远一些的地方放置终点线吧。
010	叫出{[0001|1b00]}{color[0400]}立方体{color[ffff]}{[0001|ffff]}的{[0001|1b00]}{color[0400]}物体小节点{color[ffff]}{[0001|ffff]}，\n设置为终点线的形状。
011	我是细长的横――――――――――――线！
012	请打开设置。
013	仅{color[0400]}{[0001|1b00]}开启{[0001|ffff]}{color[ffff]}{[0001|1b00]}状态{[0001|ffff]}中的“{color[0400]}{[0001|1b00]}能看见{[0001|ffff]}{color[ffff]}”……
014	将{[0001|1b00]}大小{[0001|ffff]}的{[0001|1b00]}Y{[0001|ffff]}设为{[0001|1b00]}{color[0400]}0.10m{color[ffff]}{[0001|ffff]}……
015	将{[0001|1b00]}位置{[0001|ffff]}的{[0001|1b00]}Y{[0001|ffff]}设为{[0001|1b00]}{color[0400]}0.00m{color[ffff]}{[0001|ffff]}……
016	没问题！\n关闭设置吧。
017	终点线就此完成～！
018	不过……\n这只是画了条普通的线而已……
019	通过编程，\n在汽车到达终点时让拉炮响起吧～
020	为监测汽车是否已到达终点～
021	让我们叫出{[0001|1b00]}{color[0400]}接触感应器小节点{color[ffff]}{[0001|ffff]}，\n置于终点线处。
022	哇！\n这细长的横线……\n在……在这里做什么啊！？
023	请打开设置～
024	{color[0400]}{[0001|1b00]}关闭{[0001|ffff]}{color[ffff]}{[0001|1b00]}状态{[0001|ffff]}中的“{[0001|1b00]}能看见{[0001|ffff]}”……
025	并在“{[0001|1b00]}要检查什么？{[0001|ffff]}”当中\n仅将{[0001|1b00]}{color[0400]}汽车{color[ffff]}{[0001|ffff]}设为开启。
026	关闭设置～
027	什么！？\n离得太远看不见……\n有汽车要过来吗～？
028	没错！\n就拜托你检查了！
029	不过……仅仅执行检查的话，\n当然不会发生任何事……
030	因此要通过编程，使接触感应器小节点\n在产生反应后能够{[0001|1b00]}{color[0400]}让拉炮响起{color[ffff]}{[0001|ffff]}！
031	叫出{[0001|1b00]}{color[0400]}拉炮{color[ffff]}{[0001|ffff]}的{[0001|1b00]}{color[0400]}特效小节点{color[ffff]}{[0001|ffff]}，\n放在靠近终点处。
032-00	我的工作量……最近直线上升啊。\n是不是多少得给点赏钱了？
032-01	比如说……每到一次终点……\n就发一个钟点的工资……怎么样？
032-02	开玩笑啦。
033	连接{[0001|1b00]}{color[0400]}接触感应器小节点{color[ffff]}{[0001|ffff]}与{[0001|1b00]}{color[0400]}特效小节点{color[ffff]}{[0001|ffff]}。
034	噼里啪啦！
035	噫……\n请多关照！
036	噼里啪啦，\n让我们去确认一下效果～！
037	目标终点线，径直前进！
038	如果迷路了，\n请在重来之后只按键径直前进哦。
039	冲破终点线——！！！
040	{[0201]}选手\n借助精彩绝伦的编程到达了终点！
042	……大家静一静。
043	随着终点完成，\n我们的赛车游戏也已渐露雏形。
044	但既然是“赛车”～
045	又怎么少得了\n争先恐后冲向终点的对手？
046	因此，接下来\n我们要设计{[0001|1b00]}{color[0400]}比赛对手的汽车{color[ffff]}{[0001|ffff]}。
047	返回起点去吧～
048	{[0001|1b00]}{color[0400]}复制汽车小节点{color[ffff]}{[0001|ffff]}放在旁边。
049	滴滴叭叭呜……
050	赛车啦！
051	让我们更改汽车颜色以便区分～
052	先将玩家的汽车涂成红色。
053	选中玩家的汽车小节点～
054	打开设置。
055	将{[0001|1b00]}颜色{[0001|ffff]}设为{[0001|1b00]}{color[0400]}红色{color[ffff]}{[0001|ffff]}。
056	OK！\n关闭设置。
057	然后将对手的汽车涂成淡蓝色。
058	选中对手的汽车小节点……
059	打开设置！
060	将{[0001|1b00]}颜色{[0001|ffff]}设为{[0001|1b00]}{color[0400]}淡蓝色{color[ffff]}{[0001|ffff]}。
061	顺便将{[0001|1b00]}移动速度{[0001|ffff]}调节为{[0001|1b00]}{color[0400]}0.45{color[ffff]}{[0001|ffff]}。
062	恰到好处！\n关闭设置吧。
063	事不宜迟，让我们确认一下效果。
064	哦哦哦～
065	当两辆车排在一起，\n赛车游戏的范儿就出来了！
067	不过……比赛对手那辆\n淡蓝色的汽车纹丝不动！
069	……当然，\n因为我们尚未就此进行编程。
070	这就进行编程，\n让那辆汽车也动起来吧！
071	比赛对手的汽车并非由人来操作～
072	而是要通过编程\n使其能够自动行驶起来！
073	在这个步骤中\n就让他简单地直线行驶吧～
074	至于编程从何着手……
075	我们要将常数连接到\n汽车小节点的加速端口！
076	请想象被踩住油门的汽车。
077	叫出{[0001|1b00]}{color[0400]}常数小节点{color[ffff]}{[0001|ffff]}并放在汽车小节点附近。
078	将{[0001|1b00]}{color[0400]}常数小节点{color[ffff]}{[0001|ffff]}连接到\n左边汽车小节点的{[0001|1b00]}{color[0400]}加速端口{color[ffff]}{[0001|ffff]}。
079	踩下油门！
080	没有什么能够\n阻挡我前进的步伐！！
081	去领教一下\n势不可挡的派头吧！
082	哦哦～
083	比赛对手的汽车自动开起来了！
086	这样一来！\n简单的赛车游戏就完成了！
087	返回程序画面吧～
088	在这个步骤结束之前……
089	我们要编程实现\n当赛车到达终点时游戏会重来的机制！
090	前往终点处～
091	叫出{[0001|1b00]}{color[0400]}计时小节点{color[ffff]}{[0001|ffff]}并放在蓝框处。
092	呼噜……嗯？
093	……抱歉，等我1秒钟。
094	……请便。
095	或许是因为没有在上一堂课登场，\n让我无意间有些松懈……
096	要想精准计时，必须未雨绸缪。
097	所以我反复强调\n事先制订计划的必要性……
098	感谢精彩发言！那么我们继续～！\n请将{[0001|1b00]}{color[0400]}接触感应器小节点\n{color[ffff]}{[0001|ffff]}连接到{[0001|1b00]}{color[0400]}计时小节点{color[ffff]}{[0001|ffff]}。
099	接下来请叫出{[0001|1b00]}{color[0400]}重来小节点{color[ffff]}{[0001|ffff]}！
100-00	♪啦啦啦啦啦♪啦啦啦啦啦♪\n啦啦啦啦啦啦啦♪
100-01	……哎呀？\n都没发现我被叫出来了……
100-02	自娱自乐的样子被别人看见了……\n唉……真想重新来过……
100-03	……哪里哪里！\n开心就好啊！
100-04	……唉……真想重新来过。
106	那么接下来！\n将{[0001|1b00]}{color[0400]}重来小节点{color[ffff]}{[0001|ffff]}放在蓝框处！
106-01	将{[0001|1b00]}{color[0400]}计时小节点{color[ffff]}{[0001|ffff]}连接到{[0001|1b00]}{color[0400]}重来小节点{color[ffff]}{[0001|ffff]}。
107	准确到位。
108	看看效果吧～
109	当任意一辆汽车到达终点时，\n游戏就会重来。
110	游戏重来了！
110-01	这样就能无数次地体验速度与激情了！
111	让我们返回程序画面～
112	那么～～～这样一来～～～～～
113	第2步就完成了。
114	恭……恭喜你。
115	恭喜了。
116	恭喜啦～
117	唉……恭喜你～
117-01	这次我们通过\n编程设计终点线与比赛对手，\n奠定了赛车游戏的基础！
118	下次我们将编程实现\n判断谁先到达终点……\n也就是{[0001|1b00]}{color[0400]}判定胜负{color[ffff]}{[0001|ffff]}的机制！
119	这个程序多少有一定专业性质，\n敬请期待！
120	那么让我们在下个步骤再会～
Lesson_CarRace_02.msbt
000	你好，\n{[0201]}。
001	上次我们设计了赛车游戏的\n{[0001|1b00]}{color[0400]}终点{color[ffff]}{[0001|ffff]}与{[0001|1b00]}{color[0400]}比赛对手{color[ffff]}{[0001|ffff]}。
002	不过……虽然能够监测到\n汽车是否已经到达终点……
003	但无论哪一辆汽车到达终点，\n都会显示相同的特效～
004	无法判断获胜的是哪一方！
005	因此这次我们就来编程实现\n{[0001|1b00]}{color[0400]}判定胜负的机制{color[ffff]}{[0001|ffff]}～
006	让比赛的胜负一目了然吧！
007	因为终点处的接触感应器\n负责检查通过的{[0001|1b00]}{color[0400]}汽车{color[ffff]}{[0001|ffff]}……
008	所以当与{[0001|1b00]}{color[0400]}双方汽车{color[ffff]}{[0001|ffff]}发生接触时\n均会产生反应。
009	我们将改造这部分构造，\n使之能够区分玩家的汽车\n与对手的汽车！
012	这里将传授一种{[0001|1b00]}{color[0400]}巧妙的方法{color[ffff]}{[0001|ffff]}，\n请认真倾听！
013	那么请先从{[0001|1b00]}四边形时尚物体{[0001|ffff]}中\n叫出{[0001|1b00]}{color[0400]}Joy-Con(R){color[ffff]}{[0001|ffff]}的{[0001|1b00]}{color[0400]}时尚物体小节点{color[ffff]}{[0001|ffff]}。
014	只要出现一个，就令人\n不禁想象没有出现的另一个……
015	Joy-Con……\n给人插上一双想象力的翅膀♥
016	而这个时尚物体小节点\n正是{[0001|1b00]}{color[0400]}区分双方汽车的关键{color[ffff]}{[0001|ffff]}！
017	！！！
018	向{[0201]}传授{[0001|1b00]}{color[0400]}那个{color[ffff]}{[0001|ffff]}的时候到了……
020	请配合汽车，\n稍微缩小时尚物体小节点。
021	然后请将{[0001|1b00]}{color[0400]}时尚物体小节点\n{color[ffff]}{[0001|ffff]}连接到{[0001|1b00]}{color[0400]}玩家的汽车小节点{color[ffff]}{[0001|ffff]}～
022	接着打开{[0001|1b00]}{color[0400]}时尚物体小节点{color[ffff]}{[0001|ffff]}的设置。
023	在{color[0400]}{[0001|1b00]}连接面{[0001|ffff]}{color[ffff]}当中\n将“{[0001|1b00]}自己的连接面{[0001|ffff]}”\n和“{[0001|1b00]}连接对象的连接面{[0001|ffff]}”都设为{[0001|1b00]}{color[0400]}中央{color[ffff]}{[0001|ffff]}。
024	关闭详细画面～
025	仅{color[0400]}{[0001|1b00]}开启{[0001|ffff]}{color[ffff]}{[0001|1b00]}状态{[0001|ffff]}中的“{color[0400]}{[0001|1b00]}能移动{[0001|ffff]}{color[ffff]}”。
026	这样一来，时尚物体就{[0001|1b00]}{color[0400]}看不见{color[ffff]}{[0001|ffff]}了！
026-00	请关闭设置画面～
027	难得我打扮得这么时尚，\n大家竟然{[0001|1b00]}{color[0400]}看不见{color[ffff]}{[0001|ffff]}……
028	倒是显出了几分神秘气质★
029	对！说到点子上了！
030	{[0001|1b00]}{color[0400]}连接看不见的时尚物体{color[ffff]}{[0001|ffff]}……\n正是这次所传授之方法的巧妙之处！！
031	编程尚未完成～
032	让我们前往终点线！
033	请打开{[0001|1b00]}{color[0400]}接触感应器{color[ffff]}{[0001|ffff]}的设置！
034	在“{[0001|1b00]}要检查什么？{[0001|ffff]}”当中\n仅将{[0001|1b00]}{color[0400]}Joy-Con(R){color[ffff]}{[0001|ffff]}设为开启。
035	没问题了，\n关闭设置吧～
036	虽然看不见，\n但我可以感觉到。
037	明明只能看见汽车……\n却可以感觉到{[0001|1b00]}{color[0400]}Joy-Con(R){color[ffff]}{[0001|ffff]}的气息……噫。
039	这样一来，接触感应器小节点\n就{[0001|1b00]}{color[0400]}不再检查汽车{color[ffff]}{[0001|ffff]}，转而{[0001|1b00]}{color[0400]}检查{color[ffff]}{[0001|ffff]}\n时尚物体——{[0001|1b00]}{color[0400]}Joy-Con(R){color[ffff]}{[0001|ffff]}了！
040	那就让我们确认一下效果吧～
041	先{[0001|1b00]}{color[0400]}不做任何操作{color[ffff]}{[0001|ffff]}，\n静待对手到达终点～
04201	哎呀……\n不慎抢先到达终点了。
04202	{[0001|1b00]}{color[0400]}不做任何操作{color[ffff]}{[0001|ffff]}，\n静待对手到达终点吧。
043	虽然对手已到达终点……\n但什么都没有发生！
045	接下来，\n请操作自己的汽车到达终点！
046	冲破终点线——！！！
047	在玩家的汽车到达终点时，\n特效瞬间出现了！
049	这是因为{[0001|1b00]}{color[0400]}检查对象{color[ffff]}{[0001|ffff]}已由汽车\n变成了连接在玩家汽车上的{[0001|1b00]}{color[0400]}Joy-Con(R){color[ffff]}{[0001|ffff]}！
051	{[0001|1b00]}{color[0400]}检查的不是{color[ffff]}{[0001|ffff]}看得见的{[0001|1b00]}{color[0400]}汽车{color[ffff]}{[0001|ffff]}，\n而是看不见的时尚物体——{[0001|1b00]}{color[0400]}Joy-Con(R){color[ffff]}{[0001|ffff]}！
052	我把这招命名为……
053	{[0001|1b00]}{color[0400]}秘技：时尚迷踪！！{color[ffff]}{[0001|ffff]}
054	传授到此结束！
055	那接下来～
056	继续编程，为对手的汽车\n也增设{[0001|1b00]}{color[0400]}看不见的时尚物体{color[ffff]}{[0001|ffff]}吧！
057	返回起点。
058	选中{[0001|1b00]}{color[0400]}时尚物体小节点{color[ffff]}{[0001|ffff]}～
059	{[0001|1b00]}{color[0400]}复制{color[ffff]}{[0001|ffff]}～
060	请打开设置。
061	将{[0001|1b00]}外观{[0001|ffff]}设为{[0001|1b00]}{color[0400]}Joy-Con(L){color[ffff]}{[0001|ffff]}。
062	关闭设置。
063	这是要和Joy-Con(R)成双成对啊★
064	同样将其缩小后加以移动～
065	请将{[0001|1b00]}{color[0400]}时尚物体小节点\n{color[ffff]}{[0001|ffff]}连接到{[0001|1b00]}{color[0400]}对手的汽车小节点{color[ffff]}{[0001|ffff]}。
066	已将另一个{[0001|1b00]}{color[0400]}看不见的时尚物体\n{color[ffff]}{[0001|ffff]}连接到对手的汽车上面了哦！
067	让我们前往终点吧～
068	编程设计对手到达终点时的特效！
069	{[0001|1b00]}{color[0400]}复制接触感应器{color[ffff]}{[0001|ffff]}……
070	使其位置稍微偏移然后放好。
071	这是便于连线的技巧！
072	请打开设置。
073	在“{[0001|1b00]}要检查什么？{[0001|ffff]}”当中\n仅将{[0001|1b00]}{color[0400]}Joy-Con(L){color[ffff]}{[0001|ffff]}设为开启。
074	关闭设置。
075	我感觉到Joy-Con(L)的气息了……噫。
076	叫出{[0001|1b00]}{color[0400]}失败{color[ffff]}{[0001|ffff]}的{[0001|1b00]}{color[0400]}特效小节点{color[ffff]}{[0001|ffff]}并放在蓝框中。
077	你好～～～
078	附赠一个失败时专用的自虐特效～～！
079	它的名字是～～
080	拜师特效！\n胜者为师～～～请受我一拜！！
081	……多应景啊。
084	将负责检查Joy-Con(L)的\n{[0001|1b00]}{color[0400]}接触感应器小节点\n{color[ffff]}{[0001|ffff]}与{[0001|1b00]}{color[0400]}特效小节点{color[ffff]}{[0001|ffff]}进行连接。
085	这样一来，当对手到达终点时，\n就会显示失败特效了～！
086	让我们去看看效果吧！
087	不做任何操作，\n静待对手到达终点吧。
088	{[0001|1b00]}失败{[0001|ffff]}特效出现了！
089	失败者的不甘……痛彻心扉。
090	在玩家到达终点时辅以{[0001|1b00]}{color[0400]}拉炮{color[ffff]}{[0001|ffff]}，\n在对手到达终点时显示{[0001|1b00]}{color[0400]}失败{color[ffff]}{[0001|ffff]}特效……
091	到达终点的是哪一辆汽车\n就一清二楚了！
092	但这样一来……
093	一旦双方车辆{[0001|1b00]}{color[0400]}几乎同时{color[ffff]}{[0001|ffff]}到达终点，\n将会使{[0001|1b00]}{color[0400]}拉炮{color[ffff]}{[0001|ffff]}特效与{[0001|1b00]}{color[0400]}失败{color[ffff]}{[0001|ffff]}特效\n{[0001|1b00]}{color[0400]}两者{color[ffff]}{[0001|ffff]}一并出现！
094	这样就不知道是谁获胜了！
095	因此……
096	接下来我们需要编程\n实现{[0001|1b00]}{color[0400]}判定胜负{color[ffff]}{[0001|ffff]}的机制～
097	{[0001|1b00]}{color[0400]}判定胜负{color[ffff]}{[0001|ffff]}是个小有难度的程序……
098	因此要对程序加以整理，\n{[0001|1b00]}{color[0400]}设法{color[ffff]}{[0001|ffff]}使其清晰易懂。
099	该程序分为{[0001|1b00]}{color[0400]}胜利{color[ffff]}{[0001|ffff]}时运行的部分\n与{[0001|1b00]}{color[0400]}败北{color[ffff]}{[0001|ffff]}时运行的部分……
100	对这两个部分\n分别加以{[0001|1b00]}{color[0400]}记录{color[ffff]}{[0001|ffff]}便可一目了然。
101	这里我们要请出{[0001|1b00]}{color[0400]}个人笔记小节点{color[ffff]}{[0001|ffff]}。
102	选择{[0001|1b00]}中间{[0001|ffff]} {[0001|0500]}{[0001|ffff]} {[0001|1b00]}程序整理{[0001|ffff]} {[0001|0500]}{[0001|ffff]} {[0001|1b00]}{color[0400]}个人笔记{color[ffff]}{[0001|ffff]}，\n叫他出来吧。
103	初次见面，\n我是{[0001|1b00]}{color[0400]}个人笔记小节点{color[ffff]}{[0001|ffff]}。
104	我记忆力欠佳，\n因此常做笔记以防万一……
105	{[0201]}，\n若你也有类似顾虑……
106	不妨唤我出来做个笔记。
107	事不宜迟，现在就来做笔记试试吧！
108	先将{[0001|1b00]}{color[0400]}个人笔记小节点\n{color[ffff]}{[0001|ffff]}放大到与蓝框重合的大小。
109	打开设置。
110	写下“胜利”吧。
111	是否已写下“胜利”？
112	是
113	还要修改
114	那么请写下“胜利”吧。
115	好的！\n关闭设置吧～
116	我和带注释物体小节点不同……
117	不会出现在游戏画面中，\n也不会影响其他小节点。
118	只要能帮助{[0201]}\n在接下来的编程中\n保持思路清晰，我就满足了。
119	那接下来……
120	{[0001|1b00]}{color[0400]}复制{color[ffff]}{[0001|ffff]}个人笔记小节点并放在蓝框中。
121	请打开设置。
122	写下“败北”吧。
123	是否已写下“败北”？
124	是
125	还要修改
126	那么请写下“败北”吧。
127	好的，\n关闭设置吧。
128	我们将在这附近编写{[0001|1b00]}{color[0400]}胜利{color[ffff]}{[0001|ffff]}的程序……
129	并在这附近编写{[0001|1b00]}{color[0400]}败北{color[ffff]}{[0001|ffff]}的程序……
130	原来如此……\n文字传心，果不其然。
131	……且赋诗一首。
132	胜负有悲喜，输赢无得失；\n拂衣终萦怀，落笔以记之。
133	{[0001|1b00]}{color[0400]}做好笔记{color[ffff]}{[0001|ffff]}其实也是编程的重要一环。
134	准备就绪。
135	接下来我们将触及\n判定胜负程序的核心机制！
136	判定赛车的胜负，看的其实就是……
137	是{[0001|1b00]}{color[0400]}玩家先到{color[ffff]}{[0001|ffff]}终点，\n还是{[0001|1b00]}{color[0400]}对手先到{color[ffff]}{[0001|ffff]}终点～
138	因此要编程设计当{[0001|1b00]}{color[0400]}玩家先到{color[ffff]}{[0001|ffff]}终点时\n变为开启状态的{[0001|1b00]}{color[0400]}旗标小节点{color[ffff]}{[0001|ffff]}……
139	以及当{[0001|1b00]}{color[0400]}对手先到{color[ffff]}{[0001|ffff]}终点时\n变为开启状态的{[0001|1b00]}{color[0400]}旗标小节点{color[ffff]}{[0001|ffff]}。
140	请叫出{[0001|1b00]}{color[0400]}旗标小节点{color[ffff]}{[0001|ffff]}并放在蓝框处。
141	……呼噜。\n等{[0001|1b00]}{color[0400]}玩家先到{color[ffff]}{[0001|ffff]}终点\n再叫我起来……唔嗯。
142	再叫出一个{[0001|1b00]}{color[0400]}旗标小节点{color[ffff]}{[0001|ffff]}放在蓝框处。
143	……呼噜。\n等{[0001|1b00]}{color[0400]}对手先到{color[ffff]}{[0001|ffff]}终点\n再叫我起来……唔嗯。
144	成功放置了2个旗标小节点！
145	那么我们先来编写{[0001|1b00]}{color[0400]}玩家先到{color[ffff]}{[0001|ffff]}……\n也就是让{[0001|1b00]}{color[0400]}上方的旗标小节点\n变为开启{color[ffff]}{[0001|ffff]}的程序！
146	{[0001|1b00]}{color[0400]}玩家先到终点{color[ffff]}{[0001|ffff]}就意味着……
147	在{[0001|1b00]}{color[0400]}“对手未到终点”{color[ffff]}{[0001|ffff]}时{[0001|1b00]}{color[0400]}“玩家到达终点”{color[ffff]}{[0001|ffff]}。
148	也就是需要同时检查这两项要素～
149	既然要同时检查……
150	当然需要AND小节点了！
151	叫出{[0001|1b00]}{color[0400]}AND小节点{color[ffff]}{[0001|ffff]}放在旗标小节点旁边。
152	并将{[0001|1b00]}{color[0400]}AND小节点{color[ffff]}{[0001|ffff]}与\n该旗标小节点的{color[0400]}{[0001|1b00]}开启端口{[0001|ffff]}{color[ffff]}进行连接。
153	……呼噜。\n等{[0001|1b00]}{color[0400]}玩家先到{color[ffff]}{[0001|ffff]}终点再叫我起来……
154	明白！
155	那就有请{[0201]}\n编程制作要向我输入的内容吧？
156	需要输入AND小节点的是……
157	{[0001|1b00]}{color[0400]}“玩家到达终点”{color[ffff]}{[0001|ffff]}与{[0001|1b00]}{color[0400]}“对手未到终点”{color[ffff]}{[0001|ffff]}两项。
158	负责检查{[0001|1b00]}{color[0400]}“玩家到达终点”{color[ffff]}{[0001|ffff]}的\n是{[0001|1b00]}{color[0400]}接触感应器小节点{color[ffff]}{[0001|ffff]}对吧～
159	把这个{[0001|1b00]}{color[0400]}接触感应器小节点{color[ffff]}{[0001|ffff]}与\nAND小节点的{color[0400]}{[0001|1b00]}输入2端口{[0001|ffff]}{color[ffff]}进行连接。
160	{[0001|1b00]}{color[0400]}“玩家到达终点”{color[ffff]}{[0001|ffff]}输入，没问题！
161	接下来继续输入{[0001|1b00]}{color[0400]}“对手未到终点”{color[ffff]}{[0001|ffff]}。
162	对了……还记得我们曾经设置了\n当对手{[0001|1b00]}{color[0400]}先到终点{color[ffff]}{[0001|ffff]}时即变为\n开启状态的小节点吗？
163	唔嗯……是在说我吗？
164	没错！
165	为了不让一堆线纠缠在一起，\n利用无线传送入口及出口小节点\n来进行连接。
166	叫出{[0001|1b00]}{color[0400]}无线传送入口小节点\n{color[ffff]}{[0001|ffff]}放在旗标小节点旁边。
167	并将该{[0001|1b00]}{color[0400]}旗标小节点\n{color[ffff]}{[0001|ffff]}连接到{[0001|1b00]}{color[0400]}无线传送入口小节点{color[ffff]}{[0001|ffff]}。
168	这里是入口A，\n我会传递{[0001|1b00]}{color[0400]}“对手先到终点”{color[ffff]}{[0001|ffff]}与否的情况！
169	叫出{[0001|1b00]}{color[0400]}无线传送出口小节点{color[ffff]}{[0001|ffff]}放在蓝框中。
170	这里是出口A，收到！\n我会输出{[0001|1b00]}{color[0400]}“对手先到终点”{color[ffff]}{[0001|ffff]}与否的情况！
171	然后叫出{[0001|1b00]}{color[0400]}NOT小节点{color[ffff]}{[0001|ffff]}放在蓝框中。
172	请将{[0001|1b00]}{color[0400]}无线传送出口小节点\n{color[ffff]}{[0001|ffff]}连接到{[0001|1b00]}{color[0400]}NOT小节点{color[ffff]}{[0001|ffff]}。
173	NOT小节点会将输入的内容反转输出……\n因此他会在“对手{[0001|1b00]}{color[0400]}未到终点{color[ffff]}{[0001|ffff]}”时输出信号。
174	嘿嘿嘿。
175	将{[0001|1b00]}{color[0400]}NOT小节点{color[ffff]}{[0001|ffff]}连接到\nAND小节点的{color[0400]}{[0001|1b00]}输入1端口{[0001|ffff]}{color[ffff]}。
176	“对手{[0001|1b00]}{color[0400]}未到终点{color[ffff]}{[0001|ffff]}”输入，没问题！
177	“玩家到达终点”与“对手未到终点”……
178	当这两个信号同时传递过来时，\n我就会唤醒旗标小节点！
179	拜托了……唔嗯。
180	当{[0001|1b00]}{color[0400]}“对手未到终点”{color[ffff]}{[0001|ffff]}时{[0001|1b00]}{color[0400]}“玩家到达终点”{color[ffff]}{[0001|ffff]}……\n也就是对“胜利”的判定就此大功告成！
181	然后重新连接一下\n{color[0400]}{[0001|1b00]}拉炮{[0001|ffff]}{color[ffff]}的特效小节点～
182	{[0001|1b00]}{color[0400]}删除{color[ffff]}{[0001|ffff]}连接在{[0001|1b00]}{color[0400]}拉炮{color[ffff]}{[0001|ffff]}的特效小节点身上的{[0001|1b00]}{color[0400]}线{color[ffff]}{[0001|ffff]}。
183	移动{[0001|1b00]}{color[0400]}拉炮{color[ffff]}{[0001|ffff]}的特效小节点。
184	将{[0001|1b00]}{color[0400]}旗标小节点{color[ffff]}{[0001|ffff]}与\n{[0001|1b00]}{color[0400]}拉炮{color[ffff]}{[0001|ffff]}的特效小节点进行连接。
185	接下来～～
186	让我们来编写让{[0001|1b00]}{color[0400]}“对手先到终点”{color[ffff]}{[0001|ffff]}的\n旗标小节点变为开启的程序～
187	啊……对了……
188	本次编程流程较长，\n如果觉得累了～
189	不妨吃些甜点稍作休息哦！
190	接下来的编程只要\n像{[0001|1b00]}{color[0400]}上下照镜子{color[ffff]}{[0001|ffff]}一样照着来就好～
191	大可轻松应对哦～～
192	那么～\n{[0001|1b00]}{color[0400]}对手先到终点{color[ffff]}{[0001|ffff]}就意味着……
193	在{[0001|1b00]}{color[0400]}“玩家未到终点”{color[ffff]}{[0001|ffff]}时{[0001|1b00]}{color[0400]}“对手到达终点”{color[ffff]}{[0001|ffff]}。
194	同时检查这两项要素\n仍然需要AND小节点！
195	叫出{[0001|1b00]}{color[0400]}AND小节点{color[ffff]}{[0001|ffff]}放在旗标小节点旁边。
196	并将{[0001|1b00]}{color[0400]}AND小节点{color[ffff]}{[0001|ffff]}与\n该旗标小节点的{color[0400]}{[0001|1b00]}开启端口{[0001|ffff]}{color[ffff]}进行连接。
197	……呼噜。\n等{[0001|1b00]}{color[0400]}对手先到终点{color[ffff]}{[0001|ffff]}再叫我起来……
199	负责检查{[0001|1b00]}{color[0400]}“对手到达终点”{color[ffff]}{[0001|ffff]}的\n是接触感应器小节点对吧～
200	把这个{[0001|1b00]}{color[0400]}接触感应器小节点{color[ffff]}{[0001|ffff]}与\nAND小节点的{color[0400]}{[0001|1b00]}输入1端口{[0001|ffff]}{color[ffff]}进行连接。
201	{[0001|1b00]}{color[0400]}“对手到达终点”{color[ffff]}{[0001|ffff]}输入，没问题！
202	接下来是{[0001|1b00]}{color[0400]}“玩家未到终点”{color[ffff]}{[0001|ffff]}。
203	把“玩家{[0001|1b00]}{color[0400]}先到终点{color[ffff]}{[0001|ffff]}”的\n旗标小节点的输出内容传送过去！
204	叫出{[0001|1b00]}{color[0400]}无线传送入口小节点\n{color[ffff]}{[0001|ffff]}放在旗标小节点旁边。
205	打开设置，将{[0001|1b00]}{color[0400]}传送ID{color[ffff]}{[0001|ffff]}设为{[0001|1b00]}{color[0400]}B{color[ffff]}{[0001|ffff]}。
206	好，关闭设置吧。
207	将上方的{[0001|1b00]}{color[0400]}旗标小节点\n{color[ffff]}{[0001|ffff]}连接到{[0001|1b00]}{color[0400]}无线传送入口小节点{color[ffff]}{[0001|ffff]}。
208	这里是入口B，\n我会传递{[0001|1b00]}{color[0400]}“玩家先到终点”{color[ffff]}{[0001|ffff]}与否的情况！
209	叫出{[0001|1b00]}{color[0400]}无线传送出口小节点{color[ffff]}{[0001|ffff]}放在蓝框中。
210	打开设置，将{[0001|1b00]}{color[0400]}传送ID{color[ffff]}{[0001|ffff]}设为{[0001|1b00]}{color[0400]}B{color[ffff]}{[0001|ffff]}。
211	好，关闭设置吧。
212	这里是出口B，收到！\n我会输出{[0001|1b00]}{color[0400]}“对手先到终点”{color[ffff]}{[0001|ffff]}与否的情况！
213	然后叫出{[0001|1b00]}{color[0400]}NOT小节点{color[ffff]}{[0001|ffff]}放在蓝框中。
214	将旁边的{[0001|1b00]}{color[0400]}无线传送出口小节点\n{color[ffff]}{[0001|ffff]}连接到{[0001|1b00]}{color[0400]}NOT小节点{color[ffff]}{[0001|ffff]}。
215	NOT小节点会将输入内容反转，\n在“玩家{[0001|1b00]}{color[0400]}未到终点{color[ffff]}{[0001|ffff]}”时输出信号。
216	嘿嘿嘿。
217	将{[0001|1b00]}{color[0400]}NOT小节点{color[ffff]}{[0001|ffff]}连接到\nAND小节点的{color[0400]}{[0001|1b00]}输入2端口{[0001|ffff]}{color[ffff]}。
218	“玩家{[0001|1b00]}{color[0400]}未到终点{color[ffff]}{[0001|ffff]}”输入，没问题！
219	“对手到达终点”与“玩家未到终点”……
220	当这两个信号同时传递过来时，\n我就会唤醒旗标小节点！
221	拜托了……唔嗯。
222	这样一来～～
223	{[0001|1b00]}{color[0400]}“对手先到终点”{color[ffff]}{[0001|ffff]}……\n也就是对“败北”的判定就此大功告成！
224	然后重新连接一下\n{[0001|1b00]}失败{[0001|ffff]}的特效小节点～
225	{[0001|1b00]}{color[0400]}删除{color[ffff]}{[0001|ffff]}连接在{[0001|1b00]}{color[0400]}失败{color[ffff]}{[0001|ffff]}的特效小节点身上的{[0001|1b00]}{color[0400]}线{color[ffff]}{[0001|ffff]}。
226	移动{[0001|1b00]}{color[0400]}失败{color[ffff]}{[0001|ffff]}的特效小节点。
227	将{[0001|1b00]}{color[0400]}旗标小节点{color[ffff]}{[0001|ffff]}与\n{[0001|1b00]}{color[0400]}失败{color[ffff]}{[0001|ffff]}的特效小节点进行连接。
228	那么最后～～
229	我们来更改程序，让游戏\n在任意一方到达终点后都会重来～
230	将{[0001|1b00]}{color[0400]}重来小节点{color[ffff]}{[0001|ffff]}移动到蓝框处。
231	对{[0001|1b00]}{color[0400]}计时小节点{color[ffff]}{[0001|ffff]}也如法炮制～
232	{[0001|1b00]}{color[0400]}删除{color[ffff]}{[0001|ffff]}计时小节点输入端口的{[0001|1b00]}{color[0400]}线{color[ffff]}{[0001|ffff]}。
233	将上方的{[0001|1b00]}{color[0400]}旗标小节点{color[ffff]}{[0001|ffff]}连接到\n{[0001|1b00]}{color[0400]}计时小节点{color[ffff]}{[0001|ffff]}的输入端口。
234	将下方的{[0001|1b00]}{color[0400]}旗标小节点{color[ffff]}{[0001|ffff]}同样连接到\n{[0001|1b00]}{color[0400]}计时小节点{color[ffff]}{[0001|ffff]}的输入端口。
235	这样一来……
236	我们终于……
237	完成了判定胜负的机制！！
238	这就去确认一下吧！
239	首先让对战对手率先到达终点。
240	失败特效顺利出现了！
241	接下来让自己率先到达终点。
242	拉炮也尽职尽责地拉响了！
243	下面请自由地行驶，\n以确认是不是只会出现\n{[0001|1b00]}{color[0400]}拉炮{color[ffff]}{[0001|ffff]}与{[0001|1b00]}{color[0400]}失败{color[ffff]}{[0001|ffff]}这两种特效{[0001|1b00]}{color[0400]}其中之一{color[ffff]}{[0001|ffff]}。
244	确认完成后\n就返回程序画面吧～
245	那么～～～这样一来～～～～～
246	第3步就完成了。
247	恭……\n恭喜你。
248	真了不起。
249	恭喜你！\n请讲。
250	恭喜……唔嗯。
251	虽然这个步骤\n稍～显漫长而艰难……
252	但我们打造了赛车的根本！\n完成了判定比赛胜负的{[0001|1b00]}{color[0400]}核心内容{color[ffff]}{[0001|ffff]}！！
253	我感到之前在附带导航的课堂中\n完成5个游戏的经验～～
254	已经切实地化作了\n属于{[0201]}的力量！！
255	下次……
256	让我们编程设计{[0001|1b00]}{color[0400]}赛道{color[ffff]}{[0001|ffff]}吧！
257	这次的难度高了点～
258	下次有机会松口气了～！
259	那么让我们在下个步骤再会～
Lesson_CarRace_03.msbt
000	你好，\n{[0201]}。
001	上次我们编程实现了\n判定胜负的机制！
002	尽管是一个不乏难度的步骤～
003	但也迅速有效地为作品树立了\n赛车游戏应有的风范！
004	在这一次……
005	我们将为赛车游戏的重中之重……\n{[0001|1b00]}{color[0400]}赛道{color[ffff]}{[0001|ffff]}实施编程！
006	在空空荡荡的场地驾车直线行驶\n又有什么乐趣可言呢？
007	这就进入程序画面设计赛道吧～！
008	请叫出{[0001|1b00]}{color[0400]}立方体物体小节点{color[ffff]}{[0001|ffff]}，\n将其放在左边。
009	然后打开该物体小节点的设置。
010	将{[0001|1b00]}大小{[0001|ffff]}的{[0001|1b00]}X{[0001|ffff]}、{[0001|1b00]}Y{[0001|ffff]}、{[0001|1b00]}Z{[0001|ffff]}\n分别设为{[0001|1b00]}{color[0400]}0.40m、0.40m、10.00m{color[ffff]}{[0001|ffff]}。
011	并将{[0001|1b00]}位置{[0001|ffff]}的{[0001|1b00]}Y{[0001|ffff]}设为{[0001|1b00]}{color[0400]}0.20m{color[ffff]}{[0001|ffff]}。
012	仅开启{[0001|1b00]}状态{[0001|ffff]}中的\n“{color[0400]}{[0001|1b00]}能看见{[0001|ffff]}{color[ffff]}”、“{color[0400]}{[0001|1b00]}能接触{[0001|ffff]}{color[ffff]}”。
013	好的，请关闭设置。
014	……你好。\n要制作墙壁是吧。
015	那就通过{[0001|1b00]}{color[0400]}复制\n{color[ffff]}{[0001|ffff]}使我大量增加即可。
016	通过{[0001|1b00]}{color[0400]}复制{color[ffff]}{[0001|ffff]}来制作左侧的墙壁吧～
017	{[0001|1b00]}{color[0400]}复制{color[ffff]}{[0001|ffff]}物体小节点并放在上方。
018	继续{[0001|1b00]}{color[0400]}复制{color[ffff]}{[0001|ffff]}，\n向上摆放～
019	还差2个。
020	还差1个了！
021	左侧墙壁完成了！
022	排列成了一条笔直的线。
023	看着真舒服。
024	先去游戏画面看看\n赛道实际效果吧～
025	左边出现了\n一面长长的笔直的墙壁！
026	那就一鼓作气\n继续制作右侧墙壁吧～
027	接下来要制作右侧墙壁了～
028	我们想让右侧墙壁形成弯道！
029	先来放置竖直部分的墙壁，\n中间分别间隔一段距离！
030	{[0001|1b00]}{color[0400]}复制{color[ffff]}{[0001|ffff]}最上方的物体小节点并放在右侧。
031	{[0001|1b00]}{color[0400]}继续复制{color[ffff]}{[0001|ffff]}所得到的物体小节点。
032	移动他～
033	再{[0001|1b00]}{color[0400]}复制{color[ffff]}{[0001|ffff]}一次～
034	移动他～
035	继续{[0001|1b00]}{color[0400]}复制{color[ffff]}{[0001|ffff]}～～
036	继续移动～
037	然后要制作{[0001|1b00]}{color[0400]}斜向的墙壁{color[ffff]}{[0001|ffff]}～
038	选中这个物体小节点……
060	{[0001|1b00]}{color[0400]}复制{color[ffff]}{[0001|ffff]}。
039	{[0001|1b00]}{color[0400]}旋转{color[ffff]}{[0001|ffff]}并移动他～
040	我是斜向的～
041	继续{[0001|1b00]}{color[0400]}复制{color[ffff]}{[0001|ffff]}并放在下一个位置～
042	接下来要复制并{[0001|1b00]}{color[0400]}改变角度{color[ffff]}{[0001|ffff]}。
043	最后1个，\n{[0001|1b00]}{color[0400]}复制{color[ffff]}{[0001|ffff]}并放在空着的地方！
044	赛道完成了！
045	那么！这是一条怎样的赛道呢……\n让我们实际游玩一下吧！
047	不久前还一片空旷的沙漠中\n出现了一条赛道！
048	赛车游戏的感觉一下子就出来了～～！
049	请在这条特制赛道上尽情驰骋吧。
050	充分体验过后就返回程序画面吧。
051	那么～～～这样一来～～～～～
052	第4步就完成了。
053	恭喜你了。
057	恭喜了。
058	真好。
059	可喜可贺。
054-00	随着赛道完成，\n我们的赛车游戏也已渐入佳境！
054	现在比赛对手的汽车\n只会径直向前行驶……
055	下次我们要编程使之更加{[0001|1b00]}{color[0400]}“智能”{color[ffff]}{[0001|ffff]}！
056	那么让我们在下个步骤再会～
Lesson_CarRace_04.msbt
000	你好，\n{[0201]}。
001	上次我们编程设计了赛道。
002	恕我冒昧……\n可以观察一下{[0001|1b00]}{color[0400]}比赛对手{color[ffff]}{[0001|ffff]}的情况吗？
003	按下{[0001|1b00]}{color[0400]}重来键{color[ffff]}{[0001|ffff]}重新开始，\n不做任何操作进行观察。
004	请不要做任何操作，\n在静止状态下观察对手的汽车～
005	对手{[0001|1b00]}{color[0400]}径直向前行驶{color[ffff]}{[0001|ffff]}并撞上了{[0001|1b00]}{color[0400]}墙壁{color[ffff]}{[0001|ffff]}……
006	未免莽撞了点……
007	如果在弯道处会转弯就好了！
008	因此这次～～
010	我们要对这辆只会径直向前行驶的\n汽车实施升级改造，\n使之能够{[0001|1b00]}{color[0400]}沿着赛道转弯{color[ffff]}{[0001|ffff]}！
011	换言之就是{[0001|1b00]}{color[0400]}自动驾驶AI{color[ffff]}{[0001|ffff]}！
012	AI编程开始！
013	这次的主角是对手的汽车……
014	所以这次我们让照相机\n跟随对手的汽车，\n以便确认情况～
015	{[0001|1b00]}{color[0400]}请删除{color[ffff]}{[0001|ffff]}玩家的汽车小节点\n与照相机小节点之间的{[0001|1b00]}{color[0400]}连接{color[ffff]}{[0001|ffff]}。
016	并将照相机小节点连接到\n对手的汽车小节点。
017	让我们去确认一下视觉效果。
018	现在照相机\n会跟随对手的汽车移动了！
020	可以清楚地看到这辆汽车\n撞墙的样子……
021	确认完成后就返回程序画面吧。
022	那么！\n让汽车{[0001|1b00]}{color[0400]}沿着赛道转弯{color[ffff]}{[0001|ffff]}的编程开始！
023	首先，在最初的弯道处\n需要{[0001|1b00]}{color[0400]}自动右转{color[ffff]}{[0001|ffff]}！
024	这里的重点就在于，\n要让汽车{[0001|1b00]}{color[0400]}在什么情况下右转{color[ffff]}{[0001|ffff]}！
025	这次我们要编程将右转条件\n设为{[0001|1b00]}{color[0400]}汽车面前出现墙壁{color[ffff]}{[0001|ffff]}。
026	这里要用到的是……\n{[0001|1b00]}{color[0400]}接触感应器小节点{color[ffff]}{[0001|ffff]}！
029	叫出{[0001|1b00]}{color[0400]}接触感应器小节点{color[ffff]}{[0001|ffff]}，\n放在汽车小节点前面。
030	请打开设置。
031	将{[0001|1b00]}大小{[0001|ffff]}的{[0001|1b00]}Y{[0001|ffff]}设为{[0001|1b00]}{color[0400]}0.40m{color[ffff]}{[0001|ffff]}。
032	请在{[0001|1b00]}{color[0400]}连接面{color[ffff]}{[0001|ffff]}当中\n将“{[0001|1b00]}自己的连接面{[0001|ffff]}”设为{[0001|1b00]}{color[0400]}Z+{color[ffff]}{[0001|ffff]}，\n将“{[0001|1b00]}连接对象的连接面{[0001|ffff]}”设为{[0001|1b00]}{color[0400]}Z-{color[ffff]}{[0001|ffff]}。
033	没问题了～\n关闭设置吧～
034	这次我会撞到墙壁对吧……
035	……噫。
036	将{[0001|1b00]}{color[0400]}接触感应器小节点\n连接{color[ffff]}{[0001|ffff]}到{[0001|1b00]}{color[0400]}汽车小节点{color[ffff]}{[0001|ffff]}。
037	并将接触感应器小节点与\n汽车小节点的{color[0400]}{[0001|1b00]}方向盘端口{[0001|ffff]}{color[ffff]}进行连接。
038	这样一来，当墙壁出现在面前时……\n{[0001|1b00]}{color[0400]}在接触感应器小节点接触墙壁的瞬间{color[ffff]}{[0001|ffff]}，\n汽车就会右转了～！
039	让我们去确认一下。
040	仔细看！
041	接触感应器对墙壁产生反应，\n指挥汽车右转了～！
042	返回之前的画面吧～
043	那接下来，\n我们希望这辆汽车\n不仅能够右转，也能够左转……
044	在那之前！让我们\n将接触感应器的{[0001|1b00]}{color[0400]}反应时机{color[ffff]}{[0001|ffff]}\n表现得更为直观吧。
045	请叫出{[0001|1b00]}{color[0400]}带数字物体小节点{color[ffff]}{[0001|ffff]}，\n放在蓝框中。
046	更改设置。
047	仅开启{[0001|1b00]}状态{[0001|ffff]}中的\n“{color[0400]}{[0001|1b00]}能看见{[0001|ffff]}{color[ffff]}”、“{color[0400]}{[0001|1b00]}能移动{[0001|ffff]}{color[ffff]}”。
051	将{[0001|1b00]}整数位数{[0001|ffff]}设为{[0001|1b00]}{color[0400]}1{color[ffff]}{[0001|ffff]}～
052	将{[0001|1b00]}大小{[0001|ffff]}的{[0001|1b00]}Y{[0001|ffff]}设为{[0001|1b00]}{color[0400]}0.40m{color[ffff]}{[0001|ffff]}。
053	好，关闭设置吧～
054	连接接触感应器小节点\n与带数字物体小节点。
055	再将带数字物体小节点\n{[0001|1b00]}{color[0400]}连接{color[ffff]}{[0001|ffff]}到汽车小节点。
056	我只要显示接触感应器小节点\n是否在输出信号的情况\n就可以了对吧？
057	那个！\n请代我问候{[0201]}！
059-00	这样就能在游戏画面中看到\n接触感应器输出的数字了！
059	去确认一下吧。
060	请观察汽车靠近墙壁时，\n数字的变化。
061	当靠近墙壁时，数字变成了1！
062	这样就可以直观地看到\n接触感应器{[0001|1b00]}{color[0400]}产生反应的瞬间{color[ffff]}{[0001|ffff]}了！
063	只要使用带数字物体小节点～～
064	就能像这样将原本看不见的数字\n{[0001|1b00]}{color[0400]}显示在游戏画面中{color[ffff]}{[0001|ffff]}了！
065	这个带数字物体小节点的\n职责只是{[0001|1b00]}{color[0400]}辅助编程{color[ffff]}{[0001|ffff]}～
066	所以他会在游戏完成之际\n告别我们～
067	确认完成后就返回之前的画面吧。
068-00	那么，我们终于要编程实现\n汽车{[0001|1b00]}{color[0400]}自动左右转弯{color[ffff]}{[0001|ffff]}的机制了！
068	要想让汽车自动左右转弯～～
069	需要在{[0001|1b00]}{color[0400]}汽车前方\n{color[ffff]}{[0001|ffff]}安装{[0001|1b00]}{color[0400]}2个{color[ffff]}{[0001|ffff]}接触感应器！
070	分别将感应器安装在汽车的\n{[0001|1b00]}{color[0400]}左前方使之能够右转{color[ffff]}{[0001|ffff]}，\n{[0001|1b00]}{color[0400]}以及右前方使之能够左转{color[ffff]}{[0001|ffff]}。
071	首先～
072	要{[0001|1b00]}{color[0400]}改变{color[ffff]}{[0001|ffff]}现有的接触感应器小节点的\n{[0001|1b00]}{color[0400]}连接{color[ffff]}{[0001|ffff]}方式，将其稍微向左偏移！
073	先{[0001|1b00]}{color[0400]}删除{color[ffff]}{[0001|ffff]}接触感应器小节点\n与汽车小节点之间的{[0001|1b00]}{color[0400]}连接{color[ffff]}{[0001|ffff]}。
074	然后将接触感应器小节点向左移动。
078	叫出{[0001|1b00]}{color[0400]}球体物体小节点{color[ffff]}{[0001|ffff]}，\n放在汽车小节点前方。
079	更改设置。
080	仅开启{[0001|1b00]}状态{[0001|ffff]}中的“{color[0400]}{[0001|1b00]}能移动{[0001|ffff]}{color[ffff]}”。
081	请在{[0001|1b00]}{color[0400]}连接面{color[ffff]}{[0001|ffff]}当中\n将“{[0001|1b00]}自己的连接面{[0001|ffff]}”设为{[0001|1b00]}{color[0400]}Z+{color[ffff]}{[0001|ffff]}，\n将“{[0001|1b00]}连接对象的连接面{[0001|ffff]}”设为{[0001|1b00]}{color[0400]}Z-{color[ffff]}{[0001|ffff]}～
082	准确到位！\n请关闭设置。
083	将{[0001|1b00]}{color[0400]}球体{color[ffff]}{[0001|ffff]}物体小节点\n连接到{[0001|1b00]}{color[0400]}汽车小节点{color[ffff]}{[0001|ffff]}。
085	……你好。\n虽然你看不见我，\n但我会暗中帮助你。
075	再打开接触感应器小节点的设置。
076	请在{[0001|1b00]}{color[0400]}连接面{color[ffff]}{[0001|ffff]}当中\n将“{[0001|1b00]}自己的连接面{[0001|ffff]}”设为{[0001|1b00]}{color[0400]}X-{color[ffff]}{[0001|ffff]}，\n将“{[0001|1b00]}连接对象的连接面{[0001|ffff]}”设为{[0001|1b00]}{color[0400]}X+{color[ffff]}{[0001|ffff]}。
077	没问题！\n关闭设置。
084	请将{[0001|1b00]}{color[0400]}接触感应器小节点\n{color[ffff]}{[0001|ffff]}连接到{[0001|1b00]}{color[0400]}球体{color[ffff]}{[0001|ffff]}物体小节点～
084-01	这样一来，负责右转的感应器就\n成功安装在{[0001|1b00]}{color[0400]}汽车左前方{color[ffff]}{[0001|ffff]}了！
086	去确认一下吧～！
087	接触感应器的位置\n从汽车正面变为左前方了！
088	让我们返回吧～！
089	接下来要通过编程\n{[0001|1b00]}{color[0400]}进一步实现左转{color[ffff]}{[0001|ffff]}机制～
090	{[0001|1b00]}{color[0400]}复制接触感应器小节点{color[ffff]}{[0001|ffff]}，\n放在另一侧。
091	请打开设置。
092	请在{[0001|1b00]}{color[0400]}连接面{color[ffff]}{[0001|ffff]}当中\n将“{[0001|1b00]}自己的连接面{[0001|ffff]}”设为{[0001|1b00]}{color[0400]}X+{color[ffff]}{[0001|ffff]}，\n将“{[0001|1b00]}连接对象的连接面{[0001|ffff]}”设为{[0001|1b00]}{color[0400]}X-{color[ffff]}{[0001|ffff]}。
093	关闭设置。
094	将{[0001|1b00]}{color[0400]}接触感应器小节点\n{color[ffff]}{[0001|ffff]}连接到{[0001|1b00]}{color[0400]}球体{color[ffff]}{[0001|ffff]}物体小节点。
095	噫……\n我会撞到右侧墙壁对吧……
096	然后……\n要将这个接触感应器小节点的\n{[0001|1b00]}{color[0400]}输出内容用于左转{color[ffff]}{[0001|ffff]}……
097	要想{[0001|1b00]}{color[0400]}左转{color[ffff]}{[0001|ffff]}，\n就必须往{[0001|1b00]}方向盘端口{color[0400]}输入负数{color[ffff]}{[0001|ffff]}！
098	正数右转，负数左转哦。
099	而要想让接触感应器小节点\n输出负数……
100	就要用到{[0001|1b00]}{color[0400]}计算小节点{color[ffff]}{[0001|ffff]}了！
101	请叫出{[0001|1b00]}{color[0400]}－{color[ffff]}{[0001|ffff]}的{[0001|1b00]}{color[0400]}计算小节点{color[ffff]}{[0001|ffff]}并放在蓝框中。
102	通过我的计算，\n实现方向盘的华丽旋转。
103	请{[0001|1b00]}{color[0400]}删除{color[ffff]}{[0001|ffff]}连接在\n汽车小节点{[0001|1b00]}{color[0400]}方向盘端口{color[ffff]}{[0001|ffff]}的{[0001|1b00]}{color[0400]}线{color[ffff]}{[0001|ffff]}。
104	请将位于{[0001|1b00]}{color[0400]}左侧{color[ffff]}{[0001|ffff]}的接触感应器小节点\n连接到计算小节点的{[0001|1b00]}{color[0400]}输入1端口{color[ffff]}{[0001|ffff]}。
105	再将位于{[0001|1b00]}{color[0400]}右侧{color[ffff]}{[0001|ffff]}的接触感应器小节点\n连接到计算小节点的{[0001|1b00]}{color[0400]}输入2端口{color[ffff]}{[0001|ffff]}。
106	然后！将计算小节点的输出\n连接到汽车小节点的{[0001|1b00]}{color[0400]}方向盘端口{color[ffff]}{[0001|ffff]}！
107	无可挑剔。
108	接下来～\n还要让带数字物体小节点显示\n被传递到{[0001|1b00]}方向盘端口{[0001|ffff]}的数字！
109	请删除连接在带数字物体小节点\n输入端口的线。
110	取而代之，连接计算小节点\n与带数字物体小节点～
111	我会告诉大家\n传递到方向盘端口的计算结果哦。
112	好！自动左右转弯的程序\n至此大功告成！
113	将其英姿铭刻在心吧～！
114	来！\n睁大眼睛！！
115	右转～
116	左转～
117	未加任何操作～～
118	汽车就自动转弯了～！
119	{[0001|1b00]}{color[0400]}自动驾驶AI{color[ffff]}{[0001|ffff]}～\n宣告完成～～！！！
120	这是欣赏对手眼中风景\n最后的机会了～
121	铭刻在心之后就返回之前的画面吧～
122	最后将照相机恢复原位。
123	{[0001|1b00]}{color[0400]}删除{color[ffff]}{[0001|ffff]}照相机小节点与\n对手的汽车小节点之间的{[0001|1b00]}{color[0400]}连接{color[ffff]}{[0001|ffff]}。
124	老样子，{[0001|1b00]}{color[0400]}请{color[ffff]}{[0001|ffff]}将照相机小节点\n{[0001|1b00]}{color[0400]}连接{color[ffff]}{[0001|ffff]}到玩家的汽车小节点。
125	来！现在再去看看效果！
126	请尝试从后面慢慢追赶\n自动驾驶的汽车～
127	从客观角度看还真新鲜～～！
128	让汽车能够沿着赛道\n{[0001|1b00]}{color[0400]}自动移动{color[ffff]}{[0001|ffff]}的程序……
129	太～～～精彩了！！！
130	这下子赛车游戏的战况\n无疑会更加白热化！
131	那就让我们返回之前的画面吧～
132	那么～～～这样一来～～～～～
133	第5步就完成了！
134	恭喜你。
135	恭喜你～
136	恭……恭喜你！
137	太好啦～\n恭喜你～
137-01	这次我们编程设计了\n{[0001|1b00]}{color[0400]}汽车的自动驾驶AI{color[ffff]}{[0001|ffff]}！
137-02	让事物自动地移动起来……\n这正是编程的乐趣所在！
138	下次～\n为了增强紧张感～
139	我们要在起点处编写\n倒数的程序！
140	那么让我们在下个步骤再会～
Lesson_CarRace_05.msbt
000	你好，\n{[0201]}。
001	上次我们编程设计了自动驾驶AI。
003	和亲手编程设计的AI比赛……\n怎能不让人热血沸腾～～！！
004	这次为了增强起点的紧张感……
005	让我们编程实现{[0001|1b00]}{color[0400]}倒数{color[ffff]}{[0001|ffff]}的机制！
006	那就前往程序画面～
007	3、2、1……
008	GO——！！！
009	我们希望在{[0001|1b00]}{color[0400]}游戏开始时\n{color[ffff]}{[0001|ffff]}立即开始倒数～
010	为此则需要{[0001|1b00]}{color[0400]}能够告知游戏开始{color[ffff]}{[0001|ffff]}的小节点！
011	这里就轮到{[0001|1b00]}{color[0400]}开始时小节点{color[ffff]}{[0001|ffff]}亮相了！
012	选择{[0001|1b00]}输入{[0001|ffff]} {[0001|0500]}{[0001|ffff]} {[0001|1b00]}游戏内的变化{[0001|ffff]}\n{[0001|0500]}{[0001|ffff]} {[0001|1b00]}{color[0400]}开始时{color[ffff]}{[0001|ffff]}，来叫他出场吧。
013	我是{[0001|1b00]}{color[0400]}开始时小节点{color[ffff]}{[0001|ffff]}！\n我会告诉大家游戏开始的情况哦～～～！！！
014	接下来……
015	就拜托了……
016	开始时小节点\n{[0001|1b00]}{color[0400]}仅在游戏开始瞬间{color[ffff]}{[0001|ffff]}输出信号～
017	然后就不输出任何内容了！
018	在开始的瞬间拼尽全力……\n那就是开始时小节点……
018-01	筋疲力尽了……
019	好的，那么接下来\n请叫出{[0001|1b00]}{color[0400]}倒数3秒{color[ffff]}{[0001|ffff]}的{[0001|1b00]}{color[0400]}特效小节点{color[ffff]}{[0001|ffff]}，\n放在蓝框处～
020	你好～～
021	让我们来个倒数的口号吧～！
022	三……
023	二……
024	一本万利！！\n万里挑一！
025	……
026	赶紧进行下一步啦！
027	嗯……\n只要把这个开始时小节点\n与特效小节点进行连接……
027-01	游戏开始时，倒数就会开始了！
028	……但我们在游戏开始之后，\n需要一点时间来做心理准备～～
029	为此就用计时小节点\n在倒数开始前留点时间吧。
030	叫出{[0001|1b00]}{color[0400]}计时小节点{color[ffff]}{[0001|ffff]}放在蓝框处～
031	又是这样，不提前预约就叫我出来……\n其实我也需要做心理准备的……
032	没错！\n为了让玩家做好心理准备，\n需要计时小节点的力量啊！
033	……
034	请连接{[0001|1b00]}{color[0400]}开始时小节点{color[ffff]}{[0001|ffff]}与{[0001|1b00]}{color[0400]}计时小节点{color[ffff]}{[0001|ffff]}～
035	再连接{[0001|1b00]}{color[0400]}计时小节点{color[ffff]}{[0001|ffff]}与{[0001|1b00]}{color[0400]}特效小节点{color[ffff]}{[0001|ffff]}～
036	这就去确认效果吧！
037	成功开始倒数了～！
038	可是……
039	对手的汽车……\n{[0001|1b00]}{color[0400]}无视{color[ffff]}{[0001|ffff]}倒数直接开了出去……
040	只进行特效的编程，\n{[0001|1b00]}{color[0400]}无法阻止{color[ffff]}{[0001|ffff]}任何人的步伐！
042	让我们来编程实现\n在倒数期间{[0001|1b00]}{color[0400]}汽车无法行驶{color[ffff]}{[0001|ffff]}的机制。
043	首先要编程规定\n汽车不能移动的时间长度！
044	既然是倒数3秒，\n那就需要在倒数开始{[0001|1b00]}{color[0400]}3秒{color[ffff]}{[0001|ffff]}内\n都不能移动才合适。
045	请叫出{[0001|1b00]}{color[0400]}计时小节点{color[ffff]}{[0001|ffff]}放在蓝框处。
046	打开设置～
047	将“{[0001|1b00]}在几秒后输出{[0001|ffff]}”设为{[0001|1b00]}{color[0400]}3.00{color[ffff]}{[0001|ffff]}。
048	准确到位。\n关闭设置吧～
051	请连接{[0001|1b00]}{color[0400]}2个计时小节点{color[ffff]}{[0001|ffff]}。
052	还要拜托{[0001|1b00]}{color[0400]}旗标小节点\n{color[ffff]}{[0001|ffff]}帮我们记住{[0001|1b00]}{color[0400]}倒数已结束的情况{color[ffff]}{[0001|ffff]}。
054	叫出{[0001|1b00]}{color[0400]}旗标小节点{color[ffff]}{[0001|ffff]}放在旁边～
055	将{[0001|1b00]}{color[0400]}计时小节点{color[ffff]}{[0001|ffff]}的输出连接到\n旗标小节点的{[0001|1b00]}{color[0400]}开启端口{color[ffff]}{[0001|ffff]}。
056	……等倒数结束了\n再叫我起来……
057	这个旗标小节点的输出\n在此后会有多种用途……
058	所以要预先将其\n与无线传送入口小节点连接好，\n使无线传送出口小节点接收到信号。
059	叫出{[0001|1b00]}{color[0400]}无线传送入口小节点{color[ffff]}{[0001|ffff]}放在旁边～
060	连接{[0001|1b00]}{color[0400]}旗标小节点{color[ffff]}{[0001|ffff]}与{[0001|1b00]}{color[0400]}无线传送入口小节点{color[ffff]}{[0001|ffff]}。
061	打开无线传送入口小节点的设置！
062	将{[0001|1b00]}传送ID{[0001|ffff]}设为{[0001|1b00]}{color[0400]}C{color[ffff]}{[0001|ffff]}。
063	没问题，\n请关闭设置。
064	这里是入口C，\n负责传递倒数结束的情况！\n请讲！
065	准备就绪。
066	接下来～～
067	我们要通过编程，\n使汽车在倒计数结束前{[0001|1b00]}{color[0400]}无法行驶{color[ffff]}{[0001|ffff]}。
068	先从玩家的汽车着手。
069	想办法实现在倒数结束前，\n{[0001|1b00]}加速端口{color[0400]}不会有信号输入{color[ffff]}{[0001|ffff]}的机制吧！
072	首先要让他能够接收到\n{[0001|1b00]}{color[0400]}倒数结束与否{color[ffff]}{[0001|ffff]}的情况。
073	请叫出{[0001|1b00]}{color[0400]}无线传送出口小节点{color[ffff]}{[0001|ffff]}放在蓝框处。
074	打开设置，\n将{[0001|1b00]}传送ID{[0001|ffff]}设为{[0001|1b00]}{color[0400]}C{color[ffff]}{[0001|ffff]}。
075	没问题，\n关闭设置吧～
076	这里是出口C，\n负责传递倒数结束的情况！\n请讲！
077	这个无线传送出口小节点\n{[0001|1b00]}{color[0400]}在倒数结束前不会输出信号{color[ffff]}{[0001|ffff]}！
07701	不输出信号即表示{color[0400]}{[0001|1b00]}数值为0{[0001|ffff]}{color[ffff]}～
078	因此若将其与输入{[0001|1b00]}加速端口{[0001|ffff]}的数值{[0001|1b00]}{color[0400]}相乘{color[ffff]}{[0001|ffff]}，\n{[0001|1b00]}加速端口{[0001|ffff]}在倒数结束前就{[0001|1b00]}{color[0400]}不会有信号输入{color[ffff]}{[0001|ffff]}！
079	请{[0001|1b00]}{color[0400]}删除{color[ffff]}{[0001|ffff]}连接在汽车小节点的{[0001|1b00]}加速端口{[0001|ffff]}\n与{[0001|1b00]}{color[0400]}－{color[ffff]}{[0001|ffff]}的计算小节点之间的{[0001|1b00]}{color[0400]}线{color[ffff]}{[0001|ffff]}。
080	叫出{[0001|1b00]}{color[0400]}×{color[ffff]}{[0001|ffff]}的{[0001|1b00]}{color[0400]}计算小节点{color[ffff]}{[0001|ffff]}放在蓝框处。
081	将{[0001|1b00]}{color[0400]}无线传送出口小节点{color[ffff]}{[0001|ffff]}与\n×的计算小节点的{[0001|1b00]}{color[0400]}输入1端口{color[ffff]}{[0001|ffff]}进行连接～
082	将{[0001|1b00]}{color[0400]}－{color[ffff]}{[0001|ffff]}的计算小节点的输出与\n×的计算小节点的{[0001|1b00]}{color[0400]}输入2端口{color[ffff]}{[0001|ffff]}进行连接～～
083	将{[0001|1b00]}{color[0400]}×{color[ffff]}{[0001|ffff]}的计算小节点连接到\n汽车小节点的{[0001|1b00]}{color[0400]}加速端口{color[ffff]}{[0001|ffff]}！
084	这样一来，\n在倒数结束前加速就无效了～！
085	快去确认一下效果吧。
086	请在倒数期间按下{[0001|1b00]}{color[0400]}键{color[ffff]}{[0001|ffff]}。
087	通过按下“重来”等方式\n重新开始游戏～
088	在倒数期间按键，\n汽车也没有移动！
089	玩家的车辆在倒数结束前无法行驶了！
090	对对手的汽车也如法炮制吧～
091	这次相对之下就简单多了。
092	让我们和常数小节点{[0001|1b00]}{color[0400]}说再见{color[ffff]}{[0001|ffff]}吧。
093	取而代之，\n叫出{[0001|1b00]}{color[0400]}无线传送出口小节点{color[ffff]}{[0001|ffff]}放在蓝框处。
094	打开设置，\n将{[0001|1b00]}传送ID{[0001|ffff]}设为{[0001|1b00]}{color[0400]}C{color[ffff]}{[0001|ffff]}。
095	没问题，\n关闭设置吧。
096	这里是出口C，\n负责传递倒数结束的情况！\n请讲！
097	将无线传送出口小节点连接到\n汽车小节点的{[0001|1b00]}{color[0400]}加速端口{color[ffff]}{[0001|ffff]}。
098	这样一来，对手的汽车同样\n等到倒数结束后才会开出去！
099	去确认一下吧！
100	仔细观察对手！
101	现在他确实会安安静静地\n等到倒数结束才开出去！
103	出发前的倒数机制大功告成！
104	返回程序画面吧。
105	那么～～～这样一来～～～～～
106	第6步就完成了。
107	恭喜你！\n请讲。
108	恭喜你。
109	恭喜你！！
110	恭喜……唔嗯唔嗯。
111	这次我们通过编程\n增强了起点的紧张感！
113	这款作品已经越来越有\n赛车游戏的味道了～！
114	下次的目标是{[0001|1b00]}{color[0400]}隐藏特殊机关{color[ffff]}{[0001|ffff]}……
115	以及{[0001|1b00]}{color[0400]}为便于他人游玩\n所需的程序整理{color[ffff]}{[0001|ffff]}！
116	那么让我们在下个步骤再会～
Lesson_CarRace_06.msbt
000	你好，\n{[0201]}。
001	上次我们编程设计了\n起点的倒数机制！
002	作为一款赛车游戏，\n这已经足以面世了……
003	但我们这次要进一步\n在{[0001|1b00]}{color[0400]}隐藏特殊机关{color[ffff]}{[0001|ffff]}和{[0001|1b00]}{color[0400]}程序整理{color[ffff]}{[0001|ffff]}上面下功夫！
004	先来进行隐藏特殊机关的编程吧。
005	至于机关的种类……
006	我们要设计的是\n起点后面的{[0001|1b00]}{color[0400]}传送捷径{color[ffff]}{[0001|ffff]}！
007	借助这条捷径\n可以轻松到达终点……\n换句话说就是{[0001|1b00]}{color[0400]}秘技{color[ffff]}{[0001|ffff]}！
008	……什么？\n你问为什么要设计这种秘技……？
009	因为秘技是游戏的一大乐趣嘛～！
011	事不宜迟！\n请叫出{[0001|1b00]}{color[0400]}传送物体入口小节点{color[ffff]}{[0001|ffff]}！
012	诉诸旁门左道……\n实乃程序员难逃之宿命……
013	请打开设置。
014	{[0001|1b00]}{color[0400]}关闭状态{color[ffff]}中的“{color[0400]}能看见{color[ffff]}{[0001|ffff]}”。
015	请在“{[0001|1b00]}要传送什么？{[0001|ffff]}”中\n仅将{[0001|1b00]}{color[0400]}汽车{color[ffff]}{[0001|ffff]}设为开启。
016	没问题！\n关闭设置吧。
017	吾将逐车至亚空间，\n身为异能者，\n虽于心不忍亦无可奈何。
018	选择{[0001|1b00]}各种时尚物体{[0001|ffff]}中的{[0001|1b00]}{color[0400]}圆环{color[ffff]}{[0001|ffff]}，\n来叫出时尚物体小节点作为标记，\n与传送物体入口小节点重叠放置。
019	请打开设置。
020	仅开启{[0001|1b00]}状态{[0001|ffff]}中的“{color[0400]}{[0001|1b00]}能看见{[0001|ffff]}{color[ffff]}”。
021	请将{[0001|1b00]}位置{[0001|ffff]}的{[0001|1b00]}Y{[0001|ffff]}设为{[0001|1b00]}{color[0400]}0.60m{color[ffff]}{[0001|ffff]}～
022	将{[0001|1b00]}旋转{[0001|ffff]}的{[0001|1b00]}X轴{[0001|ffff]}设为{[0001|1b00]}{color[0400]}90.00°{color[ffff]}{[0001|ffff]}。
023	没问题，\n关闭设置吧～
024	然后前往传送目标地点。
025	叫出{[0001|1b00]}{color[0400]}传送物体出口小节点{color[ffff]}{[0001|ffff]}。
026	于空间彼岸，\n召唤汝欲相见之物。
028	打开设置～
029	{[0001|1b00]}{color[0400]}关闭状态{color[ffff]}中的“{color[0400]}能看见{color[ffff]}{[0001|ffff]}”。
030	没问题～\n请关闭设置。
031	隐藏特殊机关大功告成！
032	快去确认一下效果吧。
033	{[0001|1b00]}{color[0400]}按住键{color[ffff]}{[0001|ffff]}直线倒车即可传送。
034	传送成功了！
035	在我们自己编程时……
036	也可以像这样按照个人喜好，\n在游戏里暗中加入秘技！
037	接下来，\n为了{[0001|1b00]}{color[0400]}便于他人游玩{color[ffff]}{[0001|ffff]}，\n{[0001|1b00]}{color[0400]}对程序进行整理{color[ffff]}{[0001|ffff]}吧。
038	删除那些仅用于为编程提供便利～
039	而在成品中不需要出现的部分吧！
040	和{[0001|1b00]}{color[0400]}带数字物体小节点说再见{color[ffff]}{[0001|ffff]}吧。
041	打开{[0001|1b00]}{color[0400]}左侧接触感应器小节点{color[ffff]}{[0001|ffff]}的设置～
042	{color[0400]}{[0001|1b00]}关闭{[0001|ffff]}{color[ffff]}{[0001|1b00]}状态{[0001|ffff]}中的“{color[0400]}{[0001|1b00]}能看见{[0001|ffff]}{color[ffff]}”。
043	没问题，\n请关闭设置。
044	再打开{[0001|1b00]}{color[0400]}右侧接触感应器小节点{color[ffff]}{[0001|ffff]}的设置～～
045	同样{color[0400]}{[0001|1b00]}关闭{[0001|ffff]}{color[ffff]}{[0001|1b00]}状态{[0001|ffff]}中的“{color[0400]}{[0001|1b00]}能看见{[0001|ffff]}{color[ffff]}”～
046	没问题，\n请关闭设置。
047	那就去确认一下吧。
048	请注意观察比赛对手的汽车。
049	隐藏接触感应器和带数字物体之后，\n画面显得清爽多了！
050	如果没有疑问就返回吧～
051	那么～～～这样一来～～～～～
052	第7步就完成了。
053	♥高端大气♥
054	恭喜～\n滴滴！
055	恭……
056	恭喜你！
057	这次我们添加了\n利用隐藏传送门实现的秘技～
058	并为便于他人游玩\n而对程序进行了整理！
059	刺激赛车至此已完成在即！
060	下次就是{[0001|1b00]}{color[0400]}最后一步{color[ffff]}{[0001|ffff]}～！
061	请为刺激赛车注入\n{[0201]}的个性吧！
062	那么让我们在下个步骤再会～
Lesson_CarRace_07.msbt
000	你好！！
001	来吧！\n这次终于要迎来\n刺激赛车最后的步骤了！！
002	上次我们为了便于他人游玩，\n而对程序进行了整理！
003	这次我们要为刺激赛车\n注入{[0201]}的个性！
004	让我们前往程序画面……\nGO——！！！
005	这次想请{[0201]}改造的是～～
006	{[0001|1b00]}{color[0400]}外观{color[ffff]}{[0001|ffff]}与{[0001|1b00]}{color[0400]}BGM{color[ffff]}{[0001|ffff]}！
007	先准备BGM吧。
008	叫出{[0001|1b00]}{color[0400]}BGM小节点{color[ffff]}{[0001|ffff]}～
009	耶！\n汽车小节点一骑绝尘，\n你的游戏神乎其神！
010	轮胎呼啸奏响强音，\n编程技术突飞猛进！
01001	请打开设置。
01002	将{[0001|1b00]}乐曲{[0001|ffff]}设为{color[0400]}{[0001|1b00]}竞争{[0001|ffff]}{color[ffff]}！
01003	这BGM足以令赛车手激情澎湃！
01005	关闭设置。
011	我们希望在倒数结束时\n开始播放BGM～
012	因此需要将旗标小节点的输出\n连接到BGM小节点的{[0001|1b00]}{color[0400]}播放端口{color[ffff]}{[0001|ffff]}。
013	让我们去听听效果～
014	等待倒数结束。
015	BGM如期响起了！
01501	按说BGM的准备就完成了……
01502	但这次我们还有更高的追求！
01503	返回程序画面。
01504	BGM小节点除{color[0400]}{[0001|1b00]}播放端口{[0001|ffff]}{color[ffff]}外还有2个端口。
01505	这次我们要用其中之一——{color[0400]}{[0001|1b00]}速度端口\n{[0001|ffff]}{color[ffff]}来改变{color[0400]}{[0001|1b00]}BGM的播放速度{[0001|ffff]}{color[ffff]}！
01506	向{[0001|1b00]}速度端口{[0001|ffff]}输入{color[0400]}{[0001|1b00]}大于1.00的值{[0001|ffff]}{color[ffff]}时，\nBGM的播放速度就会{color[0400]}{[0001|1b00]}加快{[0001|ffff]}{color[ffff]}……
01507	而向{[0001|1b00]}速度端口{[0001|ffff]}输入{color[0400]}{[0001|1b00]}小于1.00的值{[0001|ffff]}{color[ffff]}时\nBGM的播放速度就会{color[0400]}{[0001|1b00]}减慢{[0001|ffff]}{color[ffff]}！
01508	那么！\n这次就让BGM的播放速度\n{color[0400]}{[0001|1b00]}稍微慢一点{[0001|ffff]}{color[ffff]}！
01509	叫出{color[0400]}{[0001|1b00]}常数小节点\n{[0001|ffff]}{color[ffff]}放在BGM小节点旁边！
01510	打开设置～
01511	将“{[0001|1b00]}要输出什么数值？{[0001|ffff]}”设为{[0001|1b00]}{color[0400]}0.95{color[ffff]}{[0001|ffff]}！
01512	关闭设置。
01513	0.95是吧？\n遵命，我会守常不变地输出0.95。
01514	在将常数小节点\n{color[0400]}{[0001|1b00]}连接{[0001|ffff]}{color[ffff]}到{[0001|1b00]}速度端口{[0001|ffff]}{color[0400]}{[0001|1b00]}之前{[0001|ffff]}{color[ffff]}……
01515	先打开BGM小节点的{color[0400]}{[0001|1b00]}设置{[0001|ffff]}{color[ffff]}，\n以{color[0400]}{[0001|1b00]}通常速度{[0001|ffff]}{color[ffff]}再听一次BGM吧！
01516	这就是{color[0400]}{[0001|1b00]}通常速度{[0001|ffff]}{color[ffff]}。
0151601	稍微多听一会儿。
01517	请在认真听过之后关闭设置。
01518	那么～\n请将常数小节点与BGM小节点的\n{color[0400]}{[0001|1b00]}速度端口{[0001|ffff]}{color[ffff]}进行连接。
01519	淡定。
01520	再次打开BGM小节点的设置。
01521	怎么样？\n播放速度{color[0400]}{[0001|1b00]}放慢一些{[0001|ffff]}{color[ffff]}，\nBGM的感觉就不一样了～
0152101	只要像这样\n{color[0400]}{[0001|1b00]}向速度端口输入信号{[0001|ffff]}{color[ffff]}，\n就可以改变播放速度了！
01522	如果没有疑问，\n请关闭设置。
01524	再进入游戏画面实际听听BGM吧！
01525	等待倒数结束……
01526	游戏画面中同样流淌着\n放慢了一些的BGM！
016	返回之前的画面吧～
017	好！\n一切准备就绪！
018	接下来就请{[0201]}\n亲手完成刺激赛车的收尾工作吧！
019	改变汽车与赛道的风格也好～
020	按个人喜好更改BGM也好……
02001	自由调节BGM的播放速度也好……\n尽情做出各种尝试吧！
021	如果觉得“就是它了！”……
022	就请按下{color[0400]}{[0001|1b00]}完成键{[0001|ffff]}{color[ffff]}吧！
023	那么～～～
024	编程开始！！
025	看来完成了是吧！
026	那么……请展示\n{[0201]}独有的刺激赛车！
027	出自{[0201]}之手的\n刺激感扑面而来～～！
028	原来如此～\n有意保持原汁原味……也是一种别样的刺激！
029	那么……\n这样一来～～～
030	刺激赛车就完成了！！
031	太棒啦～～～！
032	来！\n让我们前往程序画面！！
033	全速前进的感觉！\n好期待～～～！！
034	3、2、1！\nGO——GO——GO——！！！
035	……嗯，\n的确刺激。
036	英名响彻亚空间。
037	噫……竟然装备着\n看不见的时尚物体……\n你的品位无人能敌！
038	赛车如电闪，程序似珠联；\n节点凝聚力，神速乃冲天。
039	游戏没问题！\n收尾没问题！\n作品圆满成功！
040	{[0201]}已成功到达终点！！\n请讲！
041	竟能连克难关完成游戏……
042	{[0201]}的潜力……\n深不可测！
043	下次我们终于要迎来最后一课……
044	我有预感，\n{[0201]}将到达全新的高度！
045	那一刻真令我……\n望眼欲穿！！！
046	那就将这款赛车游戏\n加入游戏一览当中吧～
047	让我们先返回菜单～
Lesson_Chase_00.msbt
000	你好！\n{[0201]}！
001	你果然如约前来了～！
002	{[0001|1b00]}{color[0400]}附带导航的课堂{color[ffff]}{[0001|ffff]}欢迎你的到来！
002-001	下面正式自我介绍一下，\n我叫{[0001|1b00]}{color[0400]}鲍伯{color[ffff]}{[0001|ffff]}。
002-002	今后请多关照哦～～！
003	那么！我们在充满纪念意义的\n第一课中所要制作的游戏是……
004	二人对战！捉迷藏大战！
004000	这是一款{[0001|1b00]}{color[0400]}逃跑的人{color[ffff]}{[0001|ffff]}与{[0001|1b00]}{color[0400]}追逐的鬼\n{color[ffff]}{[0001|ffff]}一边躲避滚来滚去的危险球体，\n一边展开追逐战的游戏！
004001	听起来是不是很有趣～～～？
005	之后我们可以\n在眼前的{[0001|1b00]}{color[0400]}游戏画面{color[ffff]}{[0001|ffff]}中\n游玩这款趣味十足的游戏！
008	……不过现在，\n游戏画面中还空～无一物。
009	那是当然，\n因为我们还没有\n编程制作任何东西呢～
010	接下来只要在{[0001|1b00]}{color[0400]}程序画面{color[ffff]}{[0001|ffff]}对游戏实施编程，\n成果就会显示在{[0001|1b00]}{color[0400]}游戏画面{color[ffff]}{[0001|ffff]}当中了。
011	事不宜迟！\n这就前往{[0001|1b00]}{color[0400]}程序画面{color[ffff]}{[0001|ffff]}开始编程制作游戏吧～
012	按下这个按键，\n直通{[0001|1b00]}{color[0400]}程序画面{color[ffff]}{[0001|ffff]}！
013	欢迎来到{[0001|1b00]}{color[0400]}程序画面{color[ffff]}{[0001|ffff]}！
014	我们将在这里\n叫出{[0001|1b00]}{color[0400]}小节点{color[ffff]}{[0001|ffff]}们对游戏实施编程。
015	那么就从设计{[0001|1b00]}{color[0400]}玩家角色{color[ffff]}{[0001|ffff]}开始编程吧。
016	为此……\n先叫出{[0001|1b00]}{color[0400]}人小节点{color[ffff]}{[0001|ffff]}！
017	依次选择{[0001|1b00]}{color[0400]}物体{color[ffff]}{[0001|ffff]}。
018	{[0001|1b00]}{color[0400]}角色{color[ffff]}{[0001|ffff]}。
019	{[0001|1b00]}{color[0400]}人{color[ffff]}{[0001|ffff]}……
020	嗨！\n我是{[0001|1b00]}{color[0400]}人小节点{color[ffff]}{[0001|ffff]}！
021	啊，{[0201]}，\n我们又见面了！
023	接下来要对游戏实施编程了。
024	哇！\n太好了！
025	不用说！\n主角肯定是我吧！
027	那么，将{[0001|1b00]}{color[0400]}人小节点{color[ffff]}{[0001|ffff]}放在这里后，\n会有什么变化呢……
028	让我们去{[0001|1b00]}{color[0400]}游戏画面{color[ffff]}{[0001|ffff]}确认一下吧～
029	请按下这个按键前往{[0001|1b00]}{color[0400]}游戏画面{color[ffff]}{[0001|ffff]}。
030	{[0001|1b00]}{color[0400]}人{color[ffff]}{[0001|ffff]}……出现在刚刚还空空如也的\n游戏画面当中了～！
031	只要将{[0001|1b00]}{color[0400]}人小节点{color[ffff]}{[0001|ffff]}放在{[0001|1b00]}{color[0400]}程序画面{color[ffff]}{[0001|ffff]}中，\n{[0001|1b00]}{color[0400]}游戏画面{color[ffff]}{[0001|ffff]}中就会有与之对应的{[0001|1b00]}{color[0400]}人{color[ffff]}{[0001|ffff]}出现。
032	那么……我们希望能用手柄\n对这个人实施{[0001|1b00]}{color[0400]}操作{color[ffff]}{[0001|ffff]}……
033	可以请你尝试使用{[0001|1b00]}{color[0400]}摇杆{color[ffff]}{[0001|ffff]}让人移动吗？
034	人一动不动！
035	要想用摇杆让人移动，\n必须通过{[0001|1b00]}{color[0400]}编程{color[ffff]}{[0001|ffff]}来实现！
036	来吧！\n根据{[0001|1b00]}{color[0400]}用摇杆移动人的原理{color[ffff]}{[0001|ffff]}，\n编程让人动起来吧～
037	既然要用摇杆让人移动，\n请叫出{[0001|1b00]}{color[0400]}摇杆小节点{color[ffff]}{[0001|ffff]}。
038	请依次选择{[0001|1b00]}{color[0400]}输入{color[ffff]}{[0001|ffff]}。
039	{[0001|1b00]}{color[0400]}推动摇杆{color[ffff]}{[0001|ffff]}。
040	{[0001|1b00]}{color[0400]}L摇杆{color[ffff]}{[0001|ffff]}。
040000	{[0001|1b00]}{color[0400]}左右{color[ffff]}{[0001|ffff]}！
041	你好——！
042	你是{[0201]}对吧——？
043	你想转一转摇杆是吗——？
044	那么，将这个{[0001|1b00]}{color[0400]}摇杆小节点{color[ffff]}{[0001|ffff]}的{[0001|1b00]}{color[0400]}输出端口{color[ffff]}{[0001|ffff]}……
045	与{[0001|1b00]}{color[0400]}人小节点{color[ffff]}{[0001|ffff]}的{[0001|1b00]}{color[0400]}左右端口{color[ffff]}{[0001|ffff]}进行连接。
046	摇杆小节点！\n还是按老样子，麻烦你啦！
047	转呀转——\n我会传递摇杆的状态哦——
048	那么！\n让我们去游戏画面确认一下效果！
049	请尝试{[0001|1b00]}{color[0400]}左右{color[ffff]}{[0001|ffff]}推动{[0001|1b00]}{color[0400]}摇杆{color[ffff]}{[0001|ffff]}！
050	干得漂亮！\n成功用摇杆让人动起来了～！
051	掌声响起来～
052	在成功用摇杆让人动起来之后……
053	我们还希望{[0001|1b00]}{color[0400]}通过按下按键实现跳跃{color[ffff]}{[0001|ffff]}。
054	来编程实现按下键时\n人会跳跃的机制吧！
055	请先将{[0001|1b00]}{color[0400]}摇杆小节点{color[ffff]}{[0001|ffff]}移至蓝框处。
056	然后依次选择{[0001|1b00]}{color[0400]}输入{color[ffff]}{[0001|ffff]}。
057	{[0001|1b00]}{color[0400]}按下按键{color[ffff]}{[0001|ffff]}。
058	{[0001|1b00]}{color[0400]}{color[ffff]}{[0001|ffff]}！
059	请指教！
060	我是{[0001|1b00]}{color[0400]}按键小节点{color[ffff]}{[0001|ffff]}。
061	怎么，\n原来是{[0201]}啊。
063	有关按键的工作就包在我身上！\n我按按按按按按按！
064	请将{[0001|1b00]}{color[0400]}按键小节点{color[ffff]}{[0001|ffff]}放在蓝框处……
065	将{[0001|1b00]}{color[0400]}按键小节点的输出端口{color[ffff]}{[0001|ffff]}与\n{[0001|1b00]}{color[0400]}人小节点的跳跃端口{color[ffff]}{[0001|ffff]}进行连接！
066	明白！\n我会干净利落地传递按键状态！
067	拜托了！
068	那就去游戏画面确认一下吧！
069	请按下{[0001|1b00]}{color[0400]}键{color[ffff]}{[0001|ffff]}。
070	干得漂亮！\n用键让人跳起来了～
071	好了！\n如果没有疑问，\n请返回程序画面。
072	那么～～～这样一来～～～～～
073	第1步就完成了！
074a	恭喜恭喜～
074b	恭喜——
074c	恭喜你！
075-00	这次我们通过编程\n实现了使用手柄对人进行操作！
075	在下个步骤，\n我们将为制作捉迷藏{[0001|1b00]}{color[0400]}场地\n{color[ffff]}{[0001|ffff]}做准备工作！
076	敬请期待！
077	那么让我们在下个步骤再会～
Lesson_Chase_01.msbt
000	欢迎光临！\n{[0201]}！
001	让我们继续制作捉迷藏游戏吧！
002	先回顾上次的内容。
003	请尝试用{[0001|1b00]}{color[0400]}摇杆{color[ffff]}{[0001|ffff]}和{[0001|1b00]}{color[0400]}键{color[ffff]}{[0001|ffff]}让人移动～
004	不错！经过你的编程，\n我们已经能够{[0001|1b00]}{color[0400]}使用手柄\n对人进行操作了{color[ffff]}{[0001|ffff]}！
005	这次我们要制作的是捉迷藏场地的\n基本要素——{[0001|1b00]}{color[0400]}平面与墙壁{color[ffff]}{[0001|ffff]}！
006	那就前往程序画面吧～
007	在制作平面与墙壁之前……
007000	先要明确{[0001|1b00]}{color[0400]}制作场地的位置{color[ffff]}{[0001|ffff]}。
007001	就在略偏上方的……\n这片空间着手吧。
007002	既然位置已定，\n就要让其能够{[0001|1b00]}{color[0400]}显示在游戏画面当中{color[ffff]}{[0001|ffff]}。
009	为此！\n需叫出{[0001|1b00]}{color[0400]}游戏画面小节点{color[ffff]}{[0001|ffff]}！
010	请依次选择{[0001|1b00]}{color[0400]}物体{color[ffff]}{[0001|ffff]}。
011	{[0001|1b00]}{color[0400]}游戏画面和照相机{color[ffff]}{[0001|ffff]}。
012	{[0001|1b00]}{color[0400]}游戏画面{color[ffff]}{[0001|ffff]}。
013	你好你好～\n早上好啊～～
013-01	哦～！\n你就是{[0201]}对吧！\n久仰久仰～～！
013-02	让我们共同完成震惊业界的顶级作品吧！
014	使用这个{[0001|1b00]}{color[0400]}游戏画面小节点{color[ffff]}{[0001|ffff]}……
015	就能够确定\n要将{[0001|1b00]}{color[0400]}程序画面中的哪个范围\n显示在游戏画面中{color[ffff]}{[0001|ffff]}！
016	说得没错～
017	我会把我{[0001|1b00]}{color[0400]}圈起来的范围{color[ffff]}{[0001|ffff]}——\n也就是这部分！\n显示在游戏画面中～～～
018	那就将这个游戏画面小节点\n稍微放大一些吧。
018000	请{[0001|1b00]}{color[0400]}拖动{color[ffff]}{[0001|ffff]}这个按键，\n将游戏画面小节点\n{[0001|1b00]}{color[0400]}扩大至与蓝框相同大小{color[ffff]}{[0001|ffff]}。
019	好！\n让我们去看看游戏画面\n发生了什么变化吧！
020	看不到人了。
021	这是因为在程序画面中，\n{[0001|1b00]}{color[0400]}人小节点不在游戏画面小节点\n圈起来的范围内{color[ffff]}{[0001|ffff]}。
022	返回程序画面，\n想办法{[0001|1b00]}{color[0400]}使人得以显示{color[ffff]}{[0001|ffff]}吧。
023	请将{[0001|1b00]}{color[0400]}人小节点{color[ffff]}{[0001|ffff]}……
024	移至{[0001|1b00]}{color[0400]}游戏画面小节点内部{color[ffff]}{[0001|ffff]}。
025	好的好的～～\n我会让人小节点完美出镜的～～！
026	要把我拍得帅一点哦！
027	好了，让我们前往游戏画面。
028	你看！\n人显示出来了！
029	……但随即就掉了下去。
031	……嗯，总而言之！\n在程序画面中\n被{[0001|1b00]}{color[0400]}游戏画面小节点圈起来的范围{color[ffff]}{[0001|ffff]}……
032	就会像这样{[0001|1b00]}{color[0400]}显示在游戏画面当中{color[ffff]}{[0001|ffff]}～
032000	不过……要是人掉下去，\n接下来的事就难以进行了。
033	为此我们需要编程设计{[0001|1b00]}{color[0400]}平面{color[ffff]}{[0001|ffff]}，\n防止人的掉落。
034	要想制作平面……\n需要叫出{[0001|1b00]}{color[0400]}物体小节点{color[ffff]}{[0001|ffff]}。
035	请依次选择{[0001|1b00]}{color[0400]}物体{color[ffff]}{[0001|ffff]}。
036	{[0001|1b00]}{color[0400]}简单物体{color[ffff]}{[0001|ffff]}。
037	{[0001|1b00]}{color[0400]}立方体{color[ffff]}{[0001|ffff]}。
038	……你好，\n我是物体小节点。
039	顾名思义，{[0001|1b00]}{color[0400]}物体小节点{color[ffff]}{[0001|ffff]}是\n{[0001|1b00]}{color[0400]}让物体出现在游戏画面中{color[ffff]}{[0001|ffff]}的小节点！
039-01	……是的。
040	把这个物体小节点\n移至{[0001|1b00]}{color[0400]}人小节点下方{color[ffff]}{[0001|ffff]}……
041	来！\n在游戏画面中确认一下效果！
042	你看！物体出现了！\n明白了吗！？
043	……对不起，我疏忽了。\n未经过设置的物体同样会{[0001|1b00]}{color[0400]}掉下去{color[ffff]}{[0001|ffff]}。
044	不好意思，\n先返回程序画面，\n通过编程让物体{[0001|1b00]}{color[0400]}不会掉下去{color[ffff]}{[0001|ffff]}吧。
045	请先选中{[0001|1b00]}{color[0400]}物体小节点{color[ffff]}{[0001|ffff]}。
046	按下这个按键打开{[0001|1b00]}{color[0400]}设置画面{color[ffff]}{[0001|ffff]}。
047	我们可在设置画面中\n更改{[0001|1b00]}{color[0400]}小节点的设置{color[ffff]}{[0001|ffff]}！
048	要想防止物体掉落，\n只要更改{[0001|1b00]}{color[0400]}状态{color[ffff]}{[0001|ffff]}设置即可。
049	请{color[0400]}{[0001|1b00]}关闭{[0001|ffff]}{color[ffff]}状态中的\n“{color[0400]}{[0001|1b00]}能移动{[0001|ffff]}{color[ffff]}”、“{color[0400]}{[0001|1b00]}能损坏{[0001|ffff]}{color[ffff]}”、“{color[0400]}{[0001|1b00]}能破坏{[0001|ffff]}{color[ffff]}”。
050	关闭设置画面……
051	去游戏画面确认一下吧！
052	干得漂亮！\n物体不会掉下去了～
052000	人也不会一下子掉下去了！
053	……话虽如此，\n面积这么小的平面\n未免让人感到不踏实……
054	返回程序画面，\n然后更改一下{[0001|1b00]}{color[0400]}大小{color[ffff]}{[0001|ffff]}吧。
055	请选中{[0001|1b00]}{color[0400]}物体小节点{color[ffff]}{[0001|ffff]}。
056	{[0001|1b00]}{color[0400]}拖动{color[ffff]}{[0001|ffff]}这个按键，\n将物体小节点{[0001|1b00]}{color[0400]}扩大至与蓝框相同大小{color[ffff]}{[0001|ffff]}。
057	恰到好处！
058	那就去游戏画面\n看看平面的变化吧！
059	这个大小站上去就踏实了～！
059-01	人也不会轻易掉下去！
060	不过……\n{color[0400]}{[0001|1b00]}平面的颜色{[0001|ffff]}{color[ffff]}……是不是单调了点？
060000	那就趁此机会换个颜色吧！
061	请返回程序画面～
062	选中物体小节点。
063	打开设置画面，
064	然后选择{[0001|1b00]}{color[0400]}颜色{color[ffff]}{[0001|ffff]}。
065	在这个画面中\n就可以选择物体的颜色了。
066	选择{[0001|1b00]}{color[0400]}棕色{color[ffff]}{[0001|ffff]}吧。
068	关闭设置画面……
069	来！\n该去游戏画面确认了！
070	平面变成棕色的了～
071	好棒啊！
072	虽然平面已顺利完成……
073	但人走到边缘地带还是会掉下去……
074	因此下面我们要制作{[0001|1b00]}{color[0400]}墙壁{color[ffff]}{[0001|ffff]}以策万全。
075	返回程序画面吧～
076	跟制作平面时一样，\n制作墙壁也要用到物体小节点……
077	再次叫出物体小节点并更改设置……\n是不是很麻烦～～
078	因此我们通过{[0001|1b00]}{color[0400]}复制{color[ffff]}{[0001|ffff]}之前的平面\n来制作墙壁。
079	选择该物体小节点。
080	按下这个按键{[0001|1b00]}{color[0400]}复制{color[ffff]}{[0001|ffff]}！
080000	……你好，\n我将成为墙壁。
081	成功复制了物体小节点！
082	请先将这个物体小节点移至蓝框处。
083	然后将其调节为{[0001|1b00]}{color[0400]}瘦高{color[ffff]}{[0001|ffff]}形状。
084	继续复制该物体小节点……
085	移至右端！
086	好！\n{[0001|1b00]}{color[0400]}墙壁{color[ffff]}{[0001|ffff]}大功告成了。
087	去游戏画面看看吧～
088	棕色的墙壁完成了～
089	这样人就不会再掉下去！\n总算可以放心了！
090	那就返回程序画面吧。
091	那么～～～这样一来～～～～
092	第2步就完成了！！
093a	恭喜你啦～～
093b	……嗯。
093c	……恭喜了。
093d	……厉害啊。
094	这次我们制作了平面与墙壁……
094-01	在下个步骤中要加入大量{color[0400]}{[0001|1b00]}落脚点{[0001|ffff]}{color[ffff]}，\n以完成场地的制作！
095	那么让我们在第3步中再会～
Lesson_Chase_02.msbt
000	等你很久了！
001	好！让我们继续全心投入到\n捉迷藏游戏的编程当中吧～～
002	还记得吗，上次我们制作了平面和墙壁！
003	请尝试用{[0001|1b00]}{color[0400]}摇杆{color[ffff]}{[0001|ffff]}和{[0001|1b00]}{color[0400]}键{color[ffff]}{[0001|ffff]}让人移动～
005	在第3步中……\n我们要在这里制作捉迷藏的场地！
006	但这方寸之地……\n用来玩捉迷藏似乎捉襟见肘了点。
006000	虽然可以通过调节\n平面与墙壁的位置来扩展空间……
007	但这次让我们通过\n{[0001|1b00]}{color[0400]}将人变小{color[ffff]}{[0001|ffff]}的方式来{[0001|1b00]}{color[0400]}使场地变大{color[ffff]}{[0001|ffff]}，\n足以供人活动吧。
008	让我们直奔程序画面！
009	请选中人小节点……
010	调节至与蓝框相同的大小～
011	成功将人小节点缩小了！
012	那么……\n游戏画面中的人……又会如何呢？
013	人变小了！
014	这样一来，场地就足够宽敞，可以供人尽情跑动了～～
015	准备就绪！\n让我们开始制作场地吧！
015000	请返回程序画面。
015-01	那么！\n我们准备通过放置\n大量{color[0400]}{[0001|1b00]}落脚点{[0001|ffff]}{color[ffff]}来制作场地！
016	先选中平面的物体小节点……
017	复制。
018	请将此物体小节点调节至蓝框大小。
019	然后将其移至蓝框处。
019-01	……你好，\n我是落脚点，\n请站到我的身上来。
020	来，进入游戏画面确认一下效果！
021	正中央出现了一块{[0001|1b00]}{color[0400]}落脚点{color[ffff]}{[0001|ffff]}。
022	以此类推，\n继续制作落脚点吧～！
023	让我们返回程序画面～！
024	接下来要制作的是{[0001|1b00]}{color[0400]}倾斜的落脚点{color[ffff]}{[0001|ffff]}！
024000	先选中这个物体小节点……
025	复制！
026	请将所复制的物体小节点移至蓝框处。
027	将其稍微缩小一些。
028	还没完！\n请{[0001|1b00]}{color[0400]}旋转{color[ffff]}{[0001|ffff]}该物体小节点使之{[0001|1b00]}{color[0400]}倾斜{color[ffff]}{[0001|ffff]}。
029	请按住这个按键并旋转，\n让小节点与蓝框对齐。
030	……明白，\n倾斜。
031	然后在另一边也制作同样的落脚点。
031000	选中这个物体小节点。
032	复制！
033	请将其移至左侧。
033000	稍微缩小一些。
034	像刚才一样按住按键并旋转～～
035	恰到好处！
036	去确认一下发生了什么变化吧～
037	{[0001|1b00]}{color[0400]}倾斜的落脚点{color[ffff]}{[0001|ffff]}大功告成～！
038	干得漂亮！
039	我们的落脚点工程尚未结束～
040	接下来在平面上制作{[0001|1b00]}{color[0400]}斜坡{color[ffff]}{[0001|ffff]}吧。
040000	选中这个物体小节点。
041	复制。
042	移至右下……
043	旋转～
044	停！！
044000	再次选中物体小节点……
045	复制！
046	移至左下……
047	旋转旋转～～～
048	完美！！
049	好～去确认一下效果吧～
050	随着斜坡完成，\n专业的捉迷藏场地\n已建设得有模有样！
051	继续添加落脚点，\n进一步充实场地的趣味性吧～
051000	选中正中央的物体小节点……
052	像往常一样复制！
053	请将其移至上方。
054	缩小该落脚点。
055	接下来要在左右两侧添加同样的落脚点！
056	复制物体小节点～
057	移至右侧。
058	继续复制！
059	移至左侧～
060	好！\n现在所有的落脚点都大功告成了！
061	去游戏画面确认一下吧！
062	哦哦～！\n高水平的场地宣告落成！
063	请用{[0001|1b00]}{color[0400]}摇杆{color[ffff]}{[0001|ffff]}和{[0001|1b00]}{color[0400]}键\n{color[ffff]}{[0001|ffff]}让人随意走上几圈吧～
064	我们可以在此尽情体验\n捉迷藏的乐趣！
065	真是令人迫不及待啊！
066	如果没有疑问，\n就返回程序画面吧。
067	那么～～～这样一来～～～
068	第3步就完成了！
069a	……恭喜了。
069b	……场地完成了。
069c	……嗯。
069-01	这次我们通过放置落脚点，\n制作了捉迷藏的场地！
070	好！下次捉迷藏游戏的\n设计进度也将来到半程！
071	在下个步骤中，我们终于要制作\n期待已久的对手——鬼，\n以满足{[0001|1b00]}{color[0400]}二人对战{color[ffff]}{[0001|ffff]}的条件了～
072	那么让我们在下个步骤再会～！
Lesson_Chase_03.msbt
000	欢迎回来！
001	捉迷藏游戏的编程作业也将过半！
002	这次我们要来制作{[0001|1b00]}{color[0400]}鬼{color[ffff]}{[0001|ffff]}，\n以满足{[0001|1b00]}{color[0400]}二人对战{color[ffff]}{[0001|ffff]}的条件～～
003	上次我们制作了捉迷藏的场地！
004	用{[0001|1b00]}{color[0400]}摇杆{color[ffff]}{[0001|ffff]}和{[0001|1b00]}{color[0400]}键{color[ffff]}{[0001|ffff]}让人移动，\n在场地内纵横驰骋吧！
006	{[0001|1b00]}{color[0400]}追逐的鬼{color[ffff]}{[0001|ffff]}与{[0001|1b00]}{color[0400]}逃跑的人{color[ffff]}{[0001|ffff]}将在这里\n展开一场激烈的追逐战。
007	好了！那就进入程序画面，\n开始进行{[0001|1b00]}{color[0400]}鬼{color[ffff]}{[0001|ffff]}的制作吧～
008	在开始制作鬼之前，\n我们先要改变{[0001|1b00]}{color[0400]}人{color[ffff]}{[0001|ffff]}的位置。
009	将这个人小节点\n移动到{[0001|1b00]}{color[0400]}右边的落脚点上{color[ffff]}{[0001|ffff]}。
010	为了使画面便于查看，\n将与人小节点相连的\n其他小节点也向右移动吧。
011	首先移动{[0001|1b00]}{color[0400]}摇杆小节点{color[ffff]}{[0001|ffff]}。
012	然后移动{[0001|1b00]}{color[0400]}按键小节点{color[ffff]}{[0001|ffff]}！
013	没问题！
014	去游戏画面中确认一下效果吧！
015	人的位置由正中央移到右边去了～！
015000	准备就绪！
016	让我们返回程序画面\n开始着手{[0001|1b00]}{color[0400]}鬼{color[ffff]}{[0001|ffff]}的制作吧～
016-01	{[0001|1b00]}{color[0400]}鬼{color[ffff]}{[0001|ffff]}的编程作业\n同样需要使用{[0001|1b00]}{color[0400]}人小节点{color[ffff]}{[0001|ffff]}！
017	请选中这个人小节点……
018	复制！
019	嗨！
020	需要我再出一份力是吧！
021	呵呵呵……\n包在我身上！
022	请将这个人小节点\n移至左边的落脚点。
023	好了！\n去游戏画面看看发生了什么变化！
024	现在有两个人出现在了画面当中～
025	请尝试用{[0001|1b00]}{color[0400]}摇杆{color[ffff]}{[0001|ffff]}和{[0001|1b00]}{color[0400]}键{color[ffff]}{[0001|ffff]}让他们移动～
026	奇怪……？\n左边的人不动啊……
027	没错！因为尚未进行\n使第2个人能够移动的{[0001|1b00]}{color[0400]}编程{color[ffff]}{[0001|ffff]}！
028	返回程序画面开始编程吧～
029	那么……让我们暂缓编程，\n先在这里思考一下，\n要如何操作两个人行动。
029-01	这是一款双人对战游戏……
030	因此必须让两个玩家同时\n分别操作一个人才能够游玩。
030-01	所以……\n要是能分别使用手柄左侧与手柄右侧\n各操作一个人，应该就可以实现了！
031	我们要想办法{[0001|1b00]}{color[0400]}用摇杆\n移动鬼{color[ffff]}{[0001|ffff]}……也就是{[0001|1b00]}{color[0400]}左侧的人{color[ffff]}{[0001|ffff]}，\n{[0001|1b00]}{color[0400]}用键让他跳跃{color[ffff]}{[0001|ffff]}。
032	同样，{[0001|1b00]}{color[0400]}用摇杆\n移动逃跑的人{color[ffff]}{[0001|ffff]}……也就是{[0001|1b00]}{color[0400]}右侧的人{color[ffff]}{[0001|ffff]}，\n{[0001|1b00]}{color[0400]}用键让他跳跃{color[ffff]}{[0001|ffff]}。
033	方针已经确定，\n下面就从实现{[0001|1b00]}{color[0400]}鬼的操作{color[ffff]}{[0001|ffff]}开始编程吧。
034	我们先叫出{[0001|1b00]}{color[0400]}摇杆小节点{color[ffff]}{[0001|ffff]}～
035	依次选择{[0001|1b00]}{color[0400]}输入{color[ffff]}{[0001|ffff]}。
036	{[0001|1b00]}{color[0400]}推动摇杆{color[ffff]}{[0001|ffff]}。
037	{[0001|1b00]}{color[0400]}L摇杆{color[ffff]}{[0001|ffff]}。
038	{[0001|1b00]}{color[0400]}左右{color[ffff]}{[0001|ffff]}！
039	你好——
040	对摇杆转一转着迷了对吧——
041	请将这个摇杆小节点移至左边……
042	与{[0001|1b00]}{color[0400]}人小节点的左右端口{color[ffff]}{[0001|ffff]}进行连接。
043	我也请你多关照喽！
044	转呀转——
045	再叫出{[0001|1b00]}{color[0400]}按键小节点{color[ffff]}{[0001|ffff]}。
046	依次选择{[0001|1b00]}{color[0400]}输入{color[ffff]}{[0001|ffff]}。
047	{[0001|1b00]}{color[0400]}按下按键{color[ffff]}{[0001|ffff]}。
048	{[0001|1b00]}{color[0400]}{color[ffff]}{[0001|ffff]}！
049	请指教！
050	想盯着键猛按是吧！！\n我按按按按按按按按按！
052	将按键小节点也移动到左边……
053	并与{[0001|1b00]}{color[0400]}人小节点的跳跃端口{color[ffff]}{[0001|ffff]}进行连接！
054	好！\n鬼的操作至此顺利实现！
055	接下来要更改{[0001|1b00]}{color[0400]}逃跑的人{color[ffff]}{[0001|ffff]}的操作方法。
055000	通过编程实现\n用{[0001|1b00]}{color[0400]}摇杆{color[ffff]}{[0001|ffff]}和{[0001|1b00]}{color[0400]}键{color[ffff]}{[0001|ffff]}使人移动吧！
056	选中{[0001|1b00]}{color[0400]}摇杆小节点{color[ffff]}{[0001|ffff]}……
057	打开设置画面！
058	请将“{[0001|1b00]}{color[0400]}是哪个摇杆？{color[ffff]}{[0001|ffff]}”设为{[0001|1b00]}{color[0400]}R摇杆{color[ffff]}{[0001|ffff]}！
059	这样一来就不是用摇杆，\n而是用{[0001|1b00]}{color[0400]}摇杆{color[ffff]}{[0001|ffff]}来进行操作了！
060	关闭设置画面……
061	选中{[0001|1b00]}{color[0400]}按键小节点{color[ffff]}{[0001|ffff]}！
062	打开设置画面～
063	将这个{[0001|1b00]}{color[0400]}{color[ffff]}{[0001|ffff]}设为{[0001|1b00]}{color[0400]}关闭{color[ffff]}{[0001|ffff]}……
064	取而代之将{[0001|1b00]}{color[0400]}{color[ffff]}{[0001|ffff]}设为{[0001|1b00]}{color[0400]}开启{color[ffff]}{[0001|ffff]}！
065	这样就能使用{[0001|1b00]}{color[0400]}键跳跃{color[ffff]}{[0001|ffff]}了！
066	关闭设置画面……
067	好！\n到进入游戏确认效果的时间了！
068	先确认{[0001|1b00]}{color[0400]}鬼{color[ffff]}{[0001|ffff]}的操作。
069	请用{[0001|1b00]}{color[0400]}摇杆{color[ffff]}{[0001|ffff]}和{[0001|1b00]}{color[0400]}键{color[ffff]}{[0001|ffff]}让鬼动起来。
070	万无一失！
071	然后是{[0001|1b00]}{color[0400]}逃跑的人{color[ffff]}{[0001|ffff]}。
072	请用{[0001|1b00]}{color[0400]}摇杆{color[ffff]}{[0001|ffff]}和{[0001|1b00]}{color[0400]}键{color[ffff]}{[0001|ffff]}让人动起来。
073	太棒了～～～！
074	这样就能够分别操作这两个人了！
075	不过……\n两者外形完全相同，难以区分啊～
076	在程序画面中\n设置两者的{[0001|1b00]}{color[0400]}外形区别{color[ffff]}{[0001|ffff]}吧～
077	选中扮演{[0001|1b00]}{color[0400]}鬼{color[ffff]}{[0001|ffff]}的人小节点……
078	打开设置画面。
079	选择{[0001|1b00]}{color[0400]}颜色{color[ffff]}{[0001|ffff]}！
080	将鬼的颜色设为{[0001|1b00]}{color[0400]}红色{color[ffff]}{[0001|ffff]}～
081	关闭设置画面～
082	然后选择扮演{[0001|1b00]}{color[0400]}逃跑的人{color[ffff]}{[0001|ffff]}的人小节点！
083	打开设置画面～
084	选择{[0001|1b00]}{color[0400]}颜色{color[ffff]}{[0001|ffff]}！
085	将逃跑的人设为{[0001|1b00]}{color[0400]}淡蓝色{color[ffff]}{[0001|ffff]}～
086	关闭设置画面！
087	来！\n进入游戏画面看看效果吧！
088	哦哦～～！\n人的颜色不一样了～！
089	终于能够分清是人是鬼了！
089000	还有……既然是“捉迷藏”，\n那么当{[0001|1b00]}{color[0400]}鬼捉住{color[ffff]}{[0001|ffff]}逃跑的人时，\n总该有个结果吧！
090	请尝试用{[0001|1b00]}{color[0400]}摇杆{color[ffff]}{[0001|ffff]}与{[0001|1b00]}{color[0400]}键{color[ffff]}{[0001|ffff]}让鬼动起来，\n去和{[0001|1b00]}{color[0400]}逃跑的人发生碰撞{color[ffff]}{[0001|ffff]}！
091	……\n什么都没有发生。
092	没错！要想让碰撞有个结果，\n需要进行{[0001|1b00]}{color[0400]}编程{color[ffff]}{[0001|ffff]}。
093	因此！让我们来编程实现\n当鬼碰撞人时会将人{[0001|1b00]}{color[0400]}破坏{color[ffff]}{[0001|ffff]}的机制！
094	让我们直奔程序画面！
095	请选中扮演{[0001|1b00]}{color[0400]}鬼{color[ffff]}{[0001|ffff]}的人小节点……
096	打开设置画面！
097	开启{color[0400]}{[0001|1b00]}状态{[0001|ffff]}{color[ffff]}中的“{color[0400]}{[0001|1b00]}能破坏{[0001|ffff]}{color[ffff]}”！
098	关闭设置画面～
099	然后选择扮演{[0001|1b00]}{color[0400]}逃跑的人{color[ffff]}{[0001|ffff]}的人小节点。
100	打开设置画面……
101	对这个人小节点，\n请开启{color[0400]}{[0001|1b00]}状态{[0001|ffff]}{color[ffff]}中的“{color[0400]}{[0001|1b00]}能损坏{[0001|ffff]}{color[ffff]}”。
102	关闭设置画面。
103	这样当{[0001|1b00]}{color[0400]}鬼{color[ffff]}{[0001|ffff]}碰撞人时，\n{[0001|1b00]}{color[0400]}就会将人破坏{color[ffff]}{[0001|ffff]}了！
104	快进入游戏画面试试看吧！
105	请用{[0001|1b00]}{color[0400]}摇杆{color[ffff]}{[0001|ffff]}和{[0001|1b00]}{color[0400]}键\n{color[ffff]}{[0001|ffff]}让{[0001|1b00]}{color[0400]}鬼{color[ffff]}{[0001|ffff]}动起来，和{[0001|1b00]}{color[0400]}逃跑的人{color[ffff]}{[0001|ffff]}碰撞！
106	干得漂亮！\n{[0001|1b00]}{color[0400]}鬼{color[ffff]}{[0001|ffff]}成功地{[0001|1b00]}{color[0400]}破坏了人{color[ffff]}{[0001|ffff]}～
106-01	{[0001|1b00]}{color[0400]}人发生损坏{color[ffff]}{[0001|ffff]}就意味着鬼捉住了人……\n因此{[0001|1b00]}{color[0400]}鬼获得胜利{color[ffff]}{[0001|ffff]}！
107	这样一来\n就能两个人一起玩捉迷藏了～～！
108	如果在人损坏之后想重新游玩，\n就请按{[0001|1b00]}{color[0400]}重来键{color[ffff]}{[0001|ffff]}。
108-01	这样游戏就会从头开始了！
109	如果没有疑问，\n就前往程序画面吧～
110	好……这样一来～～～～
111	第4步就完成了！
112a	恭喜——
112b	耶～！
112c	转呀转——
112d	恭喜恭喜！
113	这次我们制作了鬼，\n并将二人对战化为现实～！
113-01	捉迷藏游戏也已逐渐成型～！
113-02	不过……你觉不觉得目前\n鬼显得过于强势，游戏有失公平……？
114	所以我们要在下个步骤中\n编程设计{[0001|1b00]}{color[0400]}后续机关{color[ffff]}{[0001|ffff]}～～！
115	那么！让我们在下个步骤再会～！
Lesson_Chase_04.msbt
000	欢迎光临！
001	第1课终于进入后半程了！
002	先回顾上次的内容吧。
003	使用{[0001|1b00]}{color[0400]}摇杆{color[ffff]}{[0001|ffff]}和{[0001|1b00]}{color[0400]}键\n{color[ffff]}{[0001|ffff]}可以让{[0001|1b00]}{color[0400]}逃跑的人{color[ffff]}{[0001|ffff]}动起来。
004	使用{[0001|1b00]}{color[0400]}摇杆{color[ffff]}{[0001|ffff]}和{[0001|1b00]}{color[0400]}键\n{color[ffff]}{[0001|ffff]}可以让{[0001|1b00]}{color[0400]}鬼{color[ffff]}{[0001|ffff]}动起来。
005	请让{[0001|1b00]}{color[0400]}鬼{color[ffff]}{[0001|ffff]}动起来，{[0001|1b00]}{color[0400]}与人碰撞{color[ffff]}{[0001|ffff]}。
006	鬼碰撞人之后，将人损坏了！
007	设计成这样，捉迷藏游戏\n已经可以正常游玩……
008	不过……\n鬼是不是有点太强了？
009	只有人会输，没有鬼会输的情况，\n这不公平。
010	所以我们要让\n{[0001|1b00]}{color[0400]}能够破坏人与鬼的球体{color[ffff]}{[0001|ffff]}\n在这个场地内滚动。
010-01	这无疑会使捉迷藏更加刺激！
011	好！让我们前往程序画面开始编程～
012	要想让球体在场地内滚动……
013	就要叫出{[0001|1b00]}{color[0400]}发射物体小节点{color[ffff]}{[0001|ffff]}了！
014	请依次选择{[0001|1b00]}{color[0400]}物体{color[ffff]}{[0001|ffff]}。
015	{color[0400]}{[0001|1b00]}放出、消除、引力{[0001|ffff]}{color[ffff]}。
016	{[0001|1b00]}{color[0400]}发射物体{color[ffff]}{[0001|ffff]}。
017	{[0001|1b00]}{color[0400]}10个{color[ffff]}{[0001|ffff]}。
018	啊？\n谁啊你～～？
019	找我干啥！！？
020	……你说啥～～？\n想让我帮忙编程制作游戏～～？
021	我以为是谁～～\n原来是游戏程序员啊～～！\n你倒是早说嘛！！
022	当然没问题，\n有事儿叫我！
023	人不错嘛，\n{[0001|1b00]}{color[0400]}发射物体小节点{color[ffff]}{[0001|ffff]}。
025	那就不客气了，\n将{[0001|1b00]}{color[0400]}发射物体小节点{color[ffff]}{[0001|ffff]}移至上方吧。
026	先去游戏画面确认一下～
027	啊！\n有球体发射出来了！
028	这就是{[0001|1b00]}{color[0400]}发射物体小节点{color[ffff]}{[0001|ffff]}的力量！
add000	不过……\n这球体也太大了。
add001	前往程序画面调整吧！
add002	选中{[0001|1b00]}{color[0400]}发射物体小节点{color[ffff]}{[0001|ffff]}……
add003	缩小至蓝框大小。
add004	没问题！
add005	去看看发生了什么变化吧！
add006	哦哦～！\n球体变小了！
029	但是……\n我们希望球体能在场地中\n滚动得更加顺畅～
030	为使球体能够顺畅滚动，\n在人的上方附近搭个{[0001|1b00]}{color[0400]}屋顶{color[ffff]}{[0001|ffff]}吧！
031	好，前往程序画面！
032	先选中这个{[0001|1b00]}{color[0400]}物体小节点{color[ffff]}{[0001|ffff]}……
033	复制！
034	将所复制的物体小节点\n放在右上方。
035	旋转！
036	恰到好处！
037	既然如此，\n顺便在左侧也搭个屋顶吧～
038	再次选中{[0001|1b00]}{color[0400]}物体小节点{color[ffff]}{[0001|ffff]}……
039	复制！
040	请移至左上方～
041	然后～旋转！
042	完美！
043	好！\n去游戏画面确认一下效果！
044	在人的上方搭好屋顶了～！
053	不过……\n球体因为发射{[0001|1b00]}{color[0400]}力度{color[ffff]}{[0001|ffff]}过猛\n而无法顺畅滚动。
054	在程序画面中\n调节发射力度吧！
055	选中{[0001|1b00]}{color[0400]}发射物体小节点{color[ffff]}{[0001|ffff]}……
056	打开设置画面。
057	将{[0001|1b00]}{color[0400]}发射速度{color[ffff]}{[0001|ffff]}设为{[0001|1b00]}{color[0400]}4.00{color[ffff]}{[0001|ffff]}。
058	关闭设置画面。
059	好！\n该去确认啦～～！
060	嗯……\n感觉虽然力度合适了……
061	但随即就会被下一个球体击中，\n一下子就损坏了。
061000	必须延长球体的{[0001|1b00]}{color[0400]}发射间隔{color[ffff]}{[0001|ffff]}才行。
062	再修改一下程序吧！
063	选中{[0001|1b00]}{color[0400]}发射物体小节点{color[ffff]}{[0001|ffff]}！
064	打开设置画面！
065	这次将{[0001|1b00]}{color[0400]}发射间隔（秒）{color[ffff]}{[0001|ffff]}设为{[0001|1b00]}{color[0400]}7.00{color[ffff]}{[0001|ffff]}。
065-01	这样一来，\n前后两个球体的发射{color[0400]}{[0001|1b00]}间隔\n{[0001|ffff]}{color[ffff]}就变成{[0001|1b00]}{color[0400]}7秒{color[ffff]}{[0001|ffff]}了！
066	关闭设置画面！
067	确认效果！
067000	因为{[0001|1b00]}{color[0400]}发射间隔延长{color[ffff]}{[0001|ffff]}……\n球体要稍微过一会儿才会发射。
067001	请稍等片刻……
068	啊！发射了！
068000	球体的滚动丝般顺滑～！
069	看到此情此景，忍不住\n想在反方向也如法炮制了吧！
070	好，让我们进入程序画面\n开始编程！
071	选中{[0001|1b00]}{color[0400]}发射物体小节点{color[ffff]}{[0001|ffff]}……
072	复制！
073	哦！？怎么着？\n就这么离不开我～～？
074	真来劲啊！！！\n看我的吧！！！
075	把这个{[0001|1b00]}{color[0400]}发射物体小节点{color[ffff]}{[0001|ffff]}放在左边。
075-01	然后～！ \n让球体得以向{color[0400]}{[0001|1b00]}左{[0001|ffff]}{color[ffff]}发射。
076	打开设置画面！
077	选择{[0001|1b00]}{color[0400]}发射方向{color[ffff]}{[0001|ffff]}的按键！
078	请选择{[0001|1b00]}{color[0400]}X-{color[ffff]}{[0001|ffff]}～
079	关闭设置画面。
080	那么！\n现在的游戏画面是怎样一番景象呢？
080000	……\n请稍等片刻。
081	现在球体能向左右两边发射了～！
082	我们成功让场地内滚动着\n{[0001|1b00]}{color[0400]}一接触就会损坏的球体{color[ffff]}{[0001|ffff]}！
083	不过……\n还有点小问题。
084	请尝试用{[0001|1b00]}{color[0400]}摇杆{color[ffff]}{[0001|ffff]}和{[0001|1b00]}{color[0400]}键{color[ffff]}{[0001|ffff]}来移动{[0001|1b00]}{color[0400]}鬼{color[ffff]}{[0001|ffff]}，\n使之{[0001|1b00]}{color[0400]}与球体接触{color[ffff]}{[0001|ffff]}。
085	即使接触到球体，\n鬼也{[0001|1b00]}{color[0400]}不会损坏{color[ffff]}{[0001|ffff]}！
086	让我们进行编程，\n让{[0001|1b00]}{color[0400]}鬼{color[ffff]}{[0001|ffff]}在接触到球体后也会{[0001|1b00]}{color[0400]}损坏{color[ffff]}{[0001|ffff]}。
087	选中扮演鬼的人小节点……
088	打开设置画面！
089	请{color[0400]}{[0001|1b00]}开启{[0001|ffff]}{color[ffff]}{[0001|1b00]}状态{[0001|ffff]}中的“{color[0400]}{[0001|1b00]}能损坏{[0001|ffff]}{color[ffff]}”！
090	关闭设置画面～～
091	好了！\n去游戏画面中确认一下效果！
092	请移动鬼并使之与球体接触！
093	在与球体接触之后，\n鬼也损坏了～！
093-01	危险的球体四处滚动……\n人与鬼在闪避的同时斗智斗勇！
093-02	真是一款紧张刺激的游戏～！
102	如果没有疑问，\n就前往程序画面吧～
103	那么～～～\n这样一来～～～～！
104	第5步就完成了！！
105a	哎哟哟哟哟！
105b	挺像样啊！
106	这次我们使用{[0001|1b00]}{color[0400]}发射物体小节点\n{color[ffff]}{[0001|ffff]}为捉迷藏游戏制作了机关！
107	在下个步骤当中，\n要编程设计的是能够让我们\n反复游玩捉迷藏游戏的机制！
108	那么让我们在下个步骤再会～！
Lesson_Chase_05.msbt
000	你来啦！
000-01	我们的捉迷藏游戏\n即将进入白热化阶段！
000-02	首先……\n回顾一下上次的内容。
000-03	请稍等……
001	上次我们让场地内滚动着\n{[0001|1b00]}{color[0400]}一接触就会损坏的球体{color[ffff]}{[0001|ffff]}，\n营造了紧张刺激的氛围！
006	可以说……\n游戏已经基本完成了……
007	而这次！我们编程的目标是\n提升玩家体验。
008	现在～\n当鬼或人损坏后……
009	如果想再玩一次，\n就必须亲手按下重来键才能{[0001|1b00]}{color[0400]}重来{color[ffff]}{[0001|ffff]}。
010	这多多少少……\n显得有点麻烦～对吧～！
011	因此让我们来编程实现\n当人或鬼损坏时\n游戏会{[0001|1b00]}{color[0400]}自动重来{color[ffff]}{[0001|ffff]}的机制。
012	来！\n让我们直奔程序画面！
013	先叫出负责监测{[0001|1b00]}{color[0400]}人损坏情况{color[ffff]}{[0001|ffff]}的小节点。
014	那就是……\n{[0001|1b00]}{color[0400]}物体损坏时小节点{color[ffff]}{[0001|ffff]}。
015	请依次选择{[0001|1b00]}{color[0400]}输入{color[ffff]}{[0001|ffff]}。
016	{[0001|1b00]}{color[0400]}游戏内的变化{color[ffff]}{[0001|ffff]}。
017	{[0001|1b00]}{color[0400]}物体损坏时{color[ffff]}{[0001|ffff]}！
017-01	嗨！\n找我有事吗？
018	怎么了？\n莫非是有事想问我吗？
019	我想了解人损坏与否的情况！
020	原来如此，我明白了。
021	那么只要在我的设置当中更改\n“{[0001|1b00]}{color[0400]}要检查什么？{color[ffff]}{[0001|ffff]}”的内容就好了。
022	好，让我们打开\n{[0001|1b00]}{color[0400]}物体损坏时小节点{color[ffff]}{[0001|ffff]}的设置画面吧～
023	接着打开这个{[0001|1b00]}“{color[0400]}要检查什么？{color[ffff]}{[0001|ffff]}”。
024	可在此画面中设置\n{[0001|1b00]}{color[0400]}要检查的损坏对象{color[ffff]}{[0001|ffff]}！
025	请{[0001|1b00]}{color[0400]}关闭立方体{color[ffff]}{[0001|ffff]}、{[0001|1b00]}{color[0400]}圆柱体{color[ffff]}{[0001|ffff]}、{[0001|1b00]}{color[0400]}球体{color[ffff]}{[0001|ffff]}……
026	并将{[0001|1b00]}{color[0400]}人{color[ffff]}{[0001|ffff]}设为{[0001|1b00]}{color[0400]}开启{color[ffff]}{[0001|ffff]}！
027	关闭当前画面～
028	再关闭设置画面！
029	不错不错，\n设置成功。
030	这样一来，\n就将{[0001|1b00]}{color[0400]}人的损坏{color[ffff]}{[0001|ffff]}纳入检查对象了。
030-01	请放宽心继续编程吧。
031	……那么，\n将物体损坏时小节点移至左边。
032	接下来需要叫出\n能让游戏重新开始的小节点……
033	{[0001|1b00]}{color[0400]}重来小节点{color[ffff]}{[0001|ffff]}！
034	依次选择{[0001|1b00]}{color[0400]}输出{color[ffff]}{[0001|ffff]}。
035	{[0001|1b00]}{color[0400]}重来、结束、切换{color[ffff]}{[0001|ffff]}。
036	{[0001|1b00]}{color[0400]}重来游戏{color[ffff]}{[0001|ffff]}。
036-01	呼……
037	唉……\n真想重新来过……
038	怎么了？
039	昨天以为周围没人，\n就摇头晃脑地哼起了歌……
039-01	等到回过神来，\n才发现有一大群小节点围在身边……\n我哼的歌全都被他们听见了……
040	唉……\n真想重新来过……
042	……请将重来小节点移至右边……
043	使其与{[0001|1b00]}{color[0400]}物体损坏时小节点{color[ffff]}{[0001|ffff]}连接。
044	好了！这样一来，{[0001|1b00]}{color[0400]}当人损坏时\n游戏会重来的机制{color[ffff]}{[0001|ffff]}就此大功告成！
045	让我们去确认一下效果～～
046	请移动{[0001|1b00]}{color[0400]}人或鬼{color[ffff]}{[0001|ffff]}，\n使其中任意一方{[0001|1b00]}{color[0400]}损坏{color[ffff]}{[0001|ffff]}～！
047	游戏{[0001|1b00]}{color[0400]}在人损坏后自动重来{color[ffff]}{[0001|ffff]}了！
048	不过……\n从损坏到重来几乎没有间隔……
049	要是能稍微间隔一会儿就好了。
050	在程序画面中通过编程\n{[0001|1b00]}{color[0400]}制造间隔{color[ffff]}{[0001|ffff]}吧！
051	请先选中连接在{[0001|1b00]}{color[0400]}物体损坏时小节点{color[ffff]}{[0001|ffff]}与\n{[0001|1b00]}{color[0400]}重来小节点{color[ffff]}{[0001|ffff]}之间的{[0001|1b00]}{color[0400]}线{color[ffff]}{[0001|ffff]}。
052	然后按下这个按键{[0001|1b00]}{color[0400]}将线删除{color[ffff]}{[0001|ffff]}。
053	接下来就要～～\n叫出{[0001|1b00]}{color[0400]}计时小节点{color[ffff]}{[0001|ffff]}了！
054	依次选择{[0001|1b00]}{color[0400]}中间{color[ffff]}{[0001|ffff]}。
055	{[0001|1b00]}{color[0400]}计时{color[ffff]}{[0001|ffff]}！
055-01	……唔？
056	怎么？\n找我有什么事？
057	希望你能帮我们\n一起编程制作游戏！
058	唔……原来是这样……
059	帮忙是没有问题……\n但不提前预约我会很为难的。
060	当然，我主观上愿意帮忙，\n但万一本来有别的安排\n不就不好办了吗？
061	正因为我想助你一臂之力，\n所以才希望你事先做好细致规划……
062	……万分抱歉。
063	能理解就好。
064	那么～～～！
065	请连接{[0001|1b00]}{color[0400]}计时小节点\n{color[ffff]}{[0001|ffff]}与{[0001|1b00]}{color[0400]}物体损坏时小节点{color[ffff]}{[0001|ffff]}～～！
066	然后～\n连接{[0001|1b00]}{color[0400]}计时小节点{color[ffff]}{[0001|ffff]}与{[0001|1b00]}{color[0400]}重来小节点{color[ffff]}{[0001|ffff]}！
067	这样一来，在人损坏之后\n{[0001|1b00]}{color[0400]}到游戏重来之前{color[ffff]}{[0001|ffff]}就会产生{[0001|1b00]}{color[0400]}一定间隔{color[ffff]}{[0001|ffff]}了！
068	去游戏画面确认一下吧！
069	移动人或鬼将其破坏～！
070	在损坏之后{[0001|1b00]}{color[0400]}间隔了一会儿{color[ffff]}{[0001|ffff]}，\n游戏重新开始了～
070-01	时间间隔恰到好处！
071	如果没有疑问，\n就前往程序画面吧～
072	那么，\n这样一来～～～～
073	第6步就完成了！！！
074a	恭喜！
074b	干得好。
074c	……恭喜你～
075-01	好的！下个步骤终于就是\n制作捉迷藏游戏最后的步骤了！
076	我们在最后一步中，\n要为这款游戏注入\n{[0201]}的个性！
077	回头见！\n请期待最后的步骤～！
Lesson_Chase_06.msbt
000	{[0201]}！\n这一时刻终于来临了！
001	我们将迎来捉迷藏游戏\n最后的步骤。
002	先来回顾一下至今为止的内容吧。
003	使用{[0001|1b00]}{color[0400]}摇杆{color[ffff]}{[0001|ffff]}和{[0001|1b00]}{color[0400]}键{color[ffff]}{[0001|ffff]}可以让{[0001|1b00]}{color[0400]}逃跑的人{color[ffff]}{[0001|ffff]}动起来，\n使用{[0001|1b00]}{color[0400]}摇杆{color[ffff]}{[0001|ffff]}和{[0001|1b00]}{color[0400]}键{color[ffff]}{[0001|ffff]}可以让{[0001|1b00]}{color[0400]}鬼{color[ffff]}{[0001|ffff]}动起来。
004	与滚动的{color[0400]}{[0001|1b00]}球体{[0001|ffff]}{color[ffff]}碰撞就会出局！
005	那么……\n我们的捉迷藏游戏已经近乎完成……
006	不过最后还想请{[0201]}\n亲手为这款游戏缀以{[0001|1b00]}{color[0400]}画龙点睛{color[ffff]}{[0001|ffff]}的一笔！
007	来！\n让我们前往程序画面～
007-01	那么～接下来……
008	有请{[0201]}\n施展无限创意，\n让{[0001|1b00]}{color[0400]}场地的色彩{color[ffff]}{[0001|ffff]}面目一新吧！
010	例如可以选中这个{[0001|1b00]}{color[0400]}物体小节点{color[ffff]}{[0001|ffff]}……
011	然后打开设置画面。
012	接着打开{[0001|1b00]}{color[0400]}颜色{color[ffff]}{[0001|ffff]}……
013	你一定知道可以在这里更改物体的颜色吧！
014	现在的颜色是{[0001|1b00]}{color[0400]}棕色{color[ffff]}{[0001|ffff]}……
015	让我们把它改成{[0001|1b00]}{color[0400]}黑色{color[ffff]}{[0001|ffff]}。
016	关闭设置画面～
017	去游戏画面中确认一下效果！
018	你看！\n正中央的落脚点变成{[0001|1b00]}{color[0400]}黑色{color[ffff]}{[0001|ffff]}了！
019	请像这样{[0001|1b00]}{color[0400]}随心改变{color[ffff]}{[0001|ffff]}场地的色彩吧！
020	先前往程序画面。
021	那接下来\n就是{[0201]}的自由时间了！
022	{[0001|1b00]}{color[0400]}所有物体小节点的颜色\n{color[ffff]}{[0001|ffff]}均可{[0001|1b00]}{color[0400]}自由更改{color[ffff]}{[0001|ffff]}……
023	请{[0201]}\n按自己的喜好尽情挥洒吧！
023-01	不但已经可以{[0001|1b00]}{color[0400]}移动程序画面{color[ffff]}{[0001|ffff]}……
023-02	更可通过这个按键{[0001|1b00]}{color[0400]}撤销操作{color[ffff]}{[0001|ffff]}！
024	如果觉得“就是它了！”的话，\n请在确认过游戏画面之后……
025	按下{[0001|1b00]}{color[0400]}完成键{color[ffff]}{[0001|ffff]}吧。
026	那么～～～
027	编程开始！！
027000	哦！\n终于完成了吗！
027001	那么！\n请展示你亲手编程制作的游戏！
028	哦哦～～～！\n感觉相当不错～～～！
028001	原来如此～\n有意保持了原汁原味啊……！
029	接下来我宣布～～～
030	捉迷藏游戏大功告成了！！
031	太棒了～～～！
032	好！\n尽管仍沉浸在喜悦当中，\n还是让我们先前往程序画面。
098	竟然能够将至今讲解的内容完美掌握……
099	如我所料……\n{[0201]}无疑是编程的天才！
100	那么……\n让我们将这款捉迷藏游戏\n加入{[0001|1b00]}{color[0400]}游戏一览{color[ffff]}{[0001|ffff]}当中吧～！
101	先返回菜单～
Reset	……你还会制作游戏呀，\n真了不起～！
Timer	嗯，\n第一次就有这么出色的表现。
Break	你还挺厉害的嘛！
Gen	哇哦～～\n够给力的啊！\n你这家伙～～～
Camera	{[0201]}，\n好厉害～～～
Stick	转呀转——
Human	嗨！\n恭喜你完成游戏！
Button	请指教！\n恭喜你获得了新的进步！
Lesson_Intro.msbt
000	你似乎需要帮助是吧！
001	啊，请不要那么紧张！
002	我叫{[0001|1b00]}{color[0400]}鲍伯{color[ffff]}{[0001|ffff]}。
003	{[0201]}，\n你是在因为这个游戏\n无法过关而发愁对吧？
004	按下键却无法跳跃，\n所以拿不到苹果……
005	其实……\n这个游戏……
006	尚未完成！！
007	以目前这个状态，\n就算花一辈子都无法过关！！
008	……啊！\n请别生气！
009	只要进入游戏{[0001|1b00]}{color[0400]}幕后{color[ffff]}{[0001|ffff]}，\n很快就能完成它！
010	那就让我们快进入游戏幕后吧～～
011	请按下这个按键。
012	哦～？\n这不是鲍伯博士嘛～～！\n早上好！
013	……你好。
014	转呀转——\n鲍伯博士来啦——
015	欢迎来到游戏幕后！\n{[0201]}！
016	……我知道了！\n看到他们……你一定很好奇吧？
017	他们是名为{[0001|1b00]}{color[0400]}小节点{color[ffff]}{[0001|ffff]}的生物！
018	在Nintendo Switch中，\n生活着各种各样的{color[0400]}{[0001|1b00]}小节点{[0001|ffff]}{color[ffff]}。
019	在这个{[0001|1b00]}{color[0400]}程序画面{color[ffff]}{[0001|ffff]}中叫出小节点，\n使他们相互连接的话……
020	就能够进行游戏{[0001|1b00]}{color[0400]}编程{color[ffff]}{[0001|ffff]}了！\n是不是很神奇！
021	而使用小节点们实施{[0001|1b00]}{color[0400]}编程{color[ffff]}{[0001|ffff]}的系统……
022	称为{[0001|1b00]}{color[0400]}小节点车库{color[ffff]}{[0001|ffff]}！
024	刚才那个尚未完成的游戏，\n也是在小节点车库实施{[0001|1b00]}{color[0400]}编程{color[ffff]}{[0001|ffff]}的！
025	事不宜迟！\n就让我们使用小节点车库来完成游戏吧！
026	……咦？\n为什么一脸茫然呢？
027	要由{[0201]}\n通过{[0001|1b00]}{color[0400]}编程{color[ffff]}{[0001|ffff]}来完成这款游戏哦！
028	不必担心！\n要做的事就是实现\n{[0001|1b00]}{color[0400]}用键让人跳跃{color[ffff]}{[0001|ffff]}而已！
029	只要将这个{[0001|1b00]}{color[0400]}按键小节点{color[ffff]}{[0001|ffff]}的\n{[0001|1b00]}{color[0400]}输出端口{color[ffff]}{[0001|ffff]}……
030	与{[0001|1b00]}{color[0400]}人小节点{color[ffff]}{[0001|ffff]}的\n{[0001|1b00]}{color[0400]}跳跃端口{color[ffff]}{[0001|ffff]}连接就可以了。
030000	请指教！\n我是{[0001|1b00]}{color[0400]}按键小节点{color[ffff]}{[0001|ffff]}！
030000-01	你按下按键的情况……\n我全都一清二楚！\n我按按按按按按按按！！！
030001	我是{color[0400]}{[0001|1b00]}人小节点{[0001|ffff]}{color[ffff]}～\n请多关照哦！
030002	游戏画面中不是有个人吗？\n让他得以显示和移动的就是我！
031_t	来！请配合我的动作，在画面上\n{color[0400]}{[0001|1b00]}进行点触同时拖动把线连接起来{[0001|ffff]}{color[ffff]}！
031_s	来！请和我一起在{color[0400]}{[0001|1b00]}按住键的同时\n用摇杆来移动指针把线连接起来{[0001|ffff]}{color[ffff]}！
031_jr	来！请和我一起在{color[0400]}{[0001|1b00]}按住键的同时\n通过倾斜Joy-Con(R)来移动指针\n把线连接起来{[0001|ffff]}{color[ffff]}！
031_jl	来！请和我一起在{color[0400]}{[0001|1b00]}按住键的同时\n通过倾斜Joy-Con(L)来移动指针\n把线连接起来{[0001|ffff]}{color[ffff]}！
031_m	来！请配合我的动作，\n{color[0400]}{[0001|1b00]}在点击并长按的同时移动鼠标\n把线连接起来{[0001|ffff]}{color[ffff]}！
032	这样一来，\n{color[0400]}{[0001|1b00]}用键让人跳跃{[0001|ffff]}{color[ffff]}的程序就完成了！
033	现在游戏应该可以过关了！
034	来！\n返回游戏画面\n实际游玩一下吧！
035	恭喜过关～！！
036	通过{[0201]}的编程，\n游戏顺利完成了！
036-01	好了，让我们再次前往程序画面！
037	……感觉如何？
038	通过编程制作游戏……\n是不是很有趣～？
039	直觉告诉我……\n{[0201]}拥有编程的天赋。
040	……你一定意犹未尽，\n还想尝试编程制作更多游戏吧？
041	那么……\n愿意光临由我鲍伯执教的\n{[0001|1b00]}{color[0400]}附带导航的课堂{color[ffff]}{[0001|ffff]}吗！？
042	像刚才那样跟随我的{[0001|1b00]}{color[0400]}导航{color[ffff]}{[0001|ffff]}指引，\n编程制作各种各样的游戏，\n从中积累经验……
043	终极目标是……\n获得{color[0400]}{[0001|1b00]}独立编程制作游戏{[0001|ffff]}{color[ffff]}的能力！
044	请告诉我！\n愿意光临由我鲍伯执教的\n{[0001|1b00]}{color[0400]}附带导航的课堂{color[ffff]}{[0001|ffff]}吗！？
044000	是
044001	否
045	这就对了！！
046	那就让我们去看看……
047	在附带导航的课堂中要制作的游戏吧！
048	这可不太合适吧！\n如果你的天赋就此埋没，\n将是编程业界的一大损失啊！
Lesson_SecretRoom_00.msbt
000	欢迎光临～！\n{[0201]}。
001	欢迎来到{color[0400]}{[0001|1b00]}解谜房间{[0001|ffff]}{color[ffff]}！
002	{color[0400]}{[0001|1b00]}解谜房间{[0001|ffff]}{color[ffff]}和过去的游戏稍有区别……
003	是需要开动脑筋破解谜题的游戏～！
004	我们将首次以{color[0400]}{[0001|1b00]}3D空间{[0001|ffff]}{color[ffff]}作为舞台……
005	主角在遍布神秘物品的房间里……
006	为寻找线索而逡巡……
007	他最终……能否破解谜题，\n将宝藏收入囊中呢！？
008	……\n不觉得很有趣吗～～～？
009	那就让我们打开\n解谜房间的大门吧～
09-01	首先需要创建作为解谜舞台的房间。
010	请切换成{[0001|1b00]}{color[0400]}俯瞰视角{color[ffff]}{[0001|ffff]}。
011	没问题！
013	那么！\n我们从铺设房间{[0001|1b00]}{color[0400]}地板{color[ffff]}{[0001|ffff]}入手！
014	啊……
015	你一定在想……\n游戏画面中原有的平面\n不就是地板嘛！
016	呵呵！\n从我们铺设房间地板时起，\n{[0001|1b00]}{color[0400]}这个房间的谜题就已经开始浮现{color[ffff]}{[0001|ffff]}了哦！
017	请叫出{[0001|1b00]}{color[0400]}立方体{color[ffff]}{[0001|ffff]}物体小节点\n并将其放大。
018	然后打开设置。
019	开启{[0001|1b00]}状态{[0001|ffff]}中的“{color[0400]}{[0001|1b00]}能看见{[0001|ffff]}{color[ffff]}”、“{color[0400]}{[0001|1b00]}能接触{[0001|ffff]}{color[ffff]}”～
020	将{[0001|1b00]}颜色{[0001|ffff]}设为{[0001|1b00]}{color[0400]}黄绿色{color[ffff]}{[0001|ffff]}！
021	关闭设置吧～
022	“你迈开步伐，走进了一间奇妙的房间，\n房间内弥漫着诡异的气息……”
023	……你好，我是地板，\n稳稳地承载了你的第一步。
024	在旁边继续增设地板！
025	{[0001|1b00]}{color[0400]}复制{color[ffff]}{[0001|ffff]}物体小节点放在旁边～
026	打开设置。
027	将{[0001|1b00]}颜色{[0001|ffff]}设为{[0001|1b00]}{color[0400]}黑色{color[ffff]}{[0001|ffff]}。
028	没问题！\n关闭设置吧～
029	“这个房间里一定有\n笼罩在黑暗中的密室……”
030	……你好，\n我是在谜题真相大白之前\n不会现身的密室地板。
031	没错！密室！
032	破解谜题{[0001|1b00]}{color[0400]}发现密室{color[ffff]}{[0001|ffff]}\n就是这个游戏的目的！
032-01	放在旁边的黑色地板\n就是密室的地板。
033	那么！\n让我们看看做好的地板吧～
034	不同颜色的地板排列在一起～！
035	黄绿色的地板\n是作为解谜舞台的房间地板……
036	黑色的地板\n则是密室地板！
040	接下来有请\n负责破解谜题的主角\n站上这块地板～
042	请叫出{[0001|1b00]}{color[0400]}人小节点{color[ffff]}{[0001|ffff]}！
043	“你循着朋友留下的地图，\n来到了这个房间。”
044	有我解谜，真相终将大白！
045	切换成{[0001|1b00]}{color[0400]}水平视角{color[ffff]}{[0001|ffff]}……
046	将人小节点移动到地板上。
047	然后打开设置～
048	请将{[0001|1b00]}动作{[0001|ffff]}设为{[0001|1b00]}{color[0400]}拳击{color[ffff]}{[0001|ffff]}！
049	无可挑剔～\n关闭设置吧。
050	{color[0400]}{[0001|1b00]}拳击{[0001|ffff]}{color[ffff]}将成为\n这款游戏中的关键动作～
051	请返回{color[0400]}{[0001|1b00]}俯瞰视角{[0001|ffff]}{color[ffff]}。
052	接下来要实现人的{color[0400]}{[0001|1b00]}前后左右移动{[0001|ffff]}{color[ffff]}……\n使其能够探索房间内的每一个角落！
054	叫出{[0001|1b00]}{color[0400]}L摇杆上下方向{color[ffff]}{[0001|ffff]}的{color[0400]}{[0001|1b00]}摇杆小节点{[0001|ffff]}{color[ffff]}\n放在蓝框处。
055	然后叫出{[0001|1b00]}{color[0400]}L摇杆左右方向{color[ffff]}{[0001|ffff]}的\n{color[0400]}{[0001|1b00]}摇杆小节点{[0001|ffff]}{color[ffff]}排列在下方。
056	请将{[0001|1b00]}{color[0400]}上下方向{color[ffff]}{[0001|ffff]}的摇杆小节点\n连接到人小节点的{[0001|1b00]}{color[0400]}前后端口{color[ffff]}{[0001|ffff]}。
057	将{[0001|1b00]}{color[0400]}左右方向{color[ffff]}{[0001|ffff]}的摇杆小节点\n连接到人小节点的{[0001|1b00]}{color[0400]}左右端口{color[ffff]}{[0001|ffff]}！
058	“你环顾四周，\n在房间里转了一圈……”
059	转呀转——\n转动摇杆就能来回走动哦——
060	接下来要加入{color[0400]}{[0001|1b00]}拳击{[0001|ffff]}{color[ffff]}功能！
061	叫出{[0001|1b00]}{color[0400]}{color[ffff]}{[0001|ffff]}的{color[0400]}{[0001|1b00]}按键小节点\n{[0001|ffff]}{color[ffff]}放在蓝框处～
062	将{[0001|1b00]}{color[0400]}{color[ffff]}{[0001|ffff]}的按键小节点\n连接到人小节点的{[0001|1b00]}{color[0400]}动作端口{color[ffff]}{[0001|ffff]}。
063	“迅雷不及掩耳……！\n漫不经心地挥出的拳头\n划破了寂静……”
064	请指教！就算只能打中空气，\n连续出拳壮壮声势也好！！\n我按按按按按按按按！！！
065	让我们去看看人的动作\n有什么变化吧～
066	请用摇杆和键让人动起来。
067	人可以自由走动\n并使出拳击了！！
069	探究谜题真相的主角\n至此大功告成！
071	不过……\n你觉不觉得从正上方角度\n观看游戏画面不太方便呢～？
073	因此为了让这个解谜舞台\n显示出更加理想的效果……
074	让我们对{color[0400]}{[0001|1b00]}照相机{[0001|ffff]}{color[ffff]}编程加以调整！
075	为了显示出理想的效果，\n需要从{color[0400]}{[0001|1b00]}斜上方{[0001|ffff]}{color[ffff]}对房间与人实施拍摄。
075-01	不过……我们熟悉的游戏画面小节点\n无法通过那么复杂的角度进行拍摄。
076	因此我们这次\n就让游戏画面小节点歇歇，\n请出新的小节点登场亮相！
077	请从{[0001|1b00]}物体{[0001|ffff]} {[0001|0500]}{[0001|ffff]} {[0001|1b00]}游戏画面和照相机{[0001|ffff]} {[0001|0500]}{[0001|ffff]} {[0001|1b00]}{color[0400]}照相机{color[ffff]}{[0001|ffff]}当中\n叫出{color[0400]}{[0001|1b00]}照相机小节点{[0001|ffff]}{color[ffff]}。
078	……轮到我了啊。
079	……什么工作？\n说来听听。
080	我想从斜上方拍摄房间与人！
081	……明白了，\n交给我。
082	那么！\n请先切换成{[0001|1b00]}{color[0400]}水平视角{color[ffff]}{[0001|ffff]}！
083	然后将照相机小节点\n移至比人更高的位置。
084	照相机小节点{color[0400]}{[0001|1b00]}将化身为照相机\n{[0001|ffff]}{color[ffff]}拍摄游戏画面，因此要像这样\n将其{color[0400]}{[0001|1b00]}放在想要实施拍摄的地点{[0001|ffff]}{color[ffff]}。
085	让我们去看看拍摄现场\n现在是什么样子吧～
086	哦哦！
087	在游戏画面中所见的风景\n与俯瞰时完全不同了～！
089	因为照相机小节点被放在高处，\n所以才会显示出这样的效果。
090	不过……\n这个角度似乎还不够理想～
091	希望能多显示些右边的场景，\n再进行一下调整吧～
092	旋转照相机小节点\n可以{color[0400]}{[0001|1b00]}改变照相机的方向{[0001|ffff]}{color[ffff]}哦！
093	请先切换成{[0001|1b00]}{color[0400]}俯瞰视角{color[ffff]}{[0001|ffff]}。
094	然后将照相机小节点{[0001|1b00]}{color[0400]}向右旋转{color[ffff]}{[0001|ffff]}！
095	来！\n让我们确认一下……\n显示情况有什么变化！
096	现在能拍到\n更靠右边的区域了！
098	没错，照相机小节点的位置与方向\n将直接决定{color[0400]}{[0001|1b00]}显示游戏画面的\n照相机的位置与朝向{[0001|ffff]}{color[ffff]}！
100	看这个角度……\n让照相机再向下倾斜一些\n拍摄效果可能会更好～
101	向下倾斜照相机吧～
102	要想使照相机{[0001|1b00]}{color[0400]}上下{color[ffff]}{[0001|ffff]}倾斜\n或{[0001|1b00]}{color[0400]}具体{color[ffff]}{[0001|ffff]}调整角度，\n需要更改设置。
103	请打开照相机小节点的\n设置画面。
104	将{[0001|1b00]}X轴旋转{[0001|ffff]}设为{[0001|1b00]}{color[0400]}4.00°{color[ffff]}{[0001|ffff]}。
104-01	将{[0001|1b00]}Y轴旋转{[0001|ffff]}设为{[0001|1b00]}{color[0400]}17.00°{color[ffff]}{[0001|ffff]}～
105	没问题！\n请关闭设置。
106	让我们看看效果吧～
107	完美的角度！！！
108	现在只能看见地板，\n所以你可能不太明白好在哪里……
109	但这正是我计算得出的理想角度！
110	对照相机的角度确认完毕后，\n就前往程序画面吧～
111	那么～～～这样一来～～～～～
112	第1步就完成了！！！
113	恭喜——
114	……恭喜。
115	恭喜恭喜。
116	恭喜了。
117	这次我们进行了主角、\n照相机以及房间地板的编程！
119	在下个步骤中我们将继续\n制作墙壁、窗户还有天花板，\n以构建一间完整的房间！
120	“房间紧锁，唯有光线能够透过窗户进入……\n窗外景色可望而不可即，此时此刻你有何感想……”
121	“未完待续……”
122	那么让我们在下个步骤再会～
Lesson_SecretRoom_01.msbt
000	欢迎来到解谜房间的第2步！
001	上次我们进行了{[0001|1b00]}{color[0400]}地板{color[ffff]}{[0001|ffff]}、\n{[0001|1b00]}{color[0400]}人{color[ffff]}{[0001|ffff]}以及{[0001|1b00]}{color[0400]}照相机{color[ffff]}{[0001|ffff]}的编程。
002	先简单回顾一下吧。
003	黄绿色的地板是\n解谜舞台的房间地板。
004	黑色的地板是\n将在谜题真相大白后\n出现的{color[0400]}{[0001|1b00]}密室{[0001|ffff]}{color[ffff]}的地板。
005	当按下{[0001|1b00]}{color[0400]}键{color[ffff]}{[0001|ffff]}时人会使出拳击！
006	现在这里还只有地板，\n徒有房间的虚名～
007	这次我们要进行施工……不，编程，\n使其成为名副其实的{[0001|1b00]}{color[0400]}房间{color[ffff]}{[0001|ffff]}！
008	让我们前往程序画面！
009	先从对面那面墙壁着手吧。
010	选中这个物体小节点……
011	{[0001|1b00]}{color[0400]}复制{color[ffff]}{[0001|ffff]}！
012	将他变扁，移动到房间对面。
013	接下来请切换成{[0001|1b00]}{color[0400]}水平视角{color[ffff]}{[0001|ffff]}！
014	调节到墙壁合适的高度。
015	然后打开设置。
016	将{[0001|1b00]}颜色{[0001|ffff]}设为{[0001|1b00]}{color[0400]}白色{color[ffff]}{[0001|ffff]}～
017	没问题，\n请关闭设置。
018	“精心粉刷过的墙壁\n虽经年累月仍洁白如初。”
019	我是这面墙壁的一部分。
020	快亲眼看看墙壁的样子吧。
021	对面出现了墙壁的一部分～！
023	我们要让这边形成一面\n有窗户的墙壁～！
024	来！\n让我们继续编程！
025	选中墙壁的物体小节点～
026	复制！
027	放到上方。
028	{color[0400]}{[0001|1b00]}复制{[0001|ffff]}{color[ffff]}，拉伸成瘦高形状，\n移至左侧～
029	请再次{[0001|1b00]}{color[0400]}复制{color[ffff]}{[0001|ffff]}并移至右侧～
030	另外要在旁边\n制作密室的墙壁！
031	{color[0400]}{[0001|1b00]}复制{[0001|ffff]}{color[ffff]}物体小节点移至右侧！
032	因为是密室的墙壁，\n给这面墙壁换个颜色吧～
033	请打开设置……
034	将{[0001|1b00]}颜色{[0001|ffff]}设为{[0001|1b00]}{color[0400]}黑色{color[ffff]}{[0001|ffff]}。
035	关闭设置吧。
038	现在让我们去\n实际看看墙壁的样子。
039	墙壁完成了！\n上面开着像窗户一样的洞。
040	已经越来越有……\n房间的模样了。
041	为了让这个洞有窗户的感觉～
042	嵌一个十字形的窗棂进去吧！
043	先选中这个物体小节点～～
044	复制！
045	将其拉伸成纵向的\n细长形状作为窗棂～
046	{[0001|1b00]}{color[0400]}复制{color[ffff]}{[0001|ffff]}后拉伸成\n横向的细长形状～
047	“窗户已被钉死，\n看来无法从这里进出。”
048	……窗户营造了外界的概念。
049	好了！去欣赏一下\n我们做好的窗户吧～！
050	哦哦～！\n名副其实！！
051	加上窗棂后，\n一下子就有窗户的感觉了！
053	这样一来！\n对面的墙壁大功告成！
055	接下来，我们要让{color[0400]}{[0001|1b00]}阳光{[0001|ffff]}{color[ffff]}\n从窗户照射进来，给房间\n带来良好的光照～
056	叫出{color[0400]}{[0001|1b00]}空间小节点{[0001|ffff]}{color[ffff]}吧。
057	请打开空间小节点的设置。
058	打开{color[0400]}{[0001|1b00]}空间的光线{[0001|ffff]}{color[ffff]}～
058-01	可以调节{color[0400]}{[0001|1b00]}太阳的方位{[0001|ffff]}{color[ffff]}及{color[0400]}{[0001|1b00]}太阳的高度\n{[0001|ffff]}{color[ffff]}来改变{color[0400]}{[0001|1b00]}阳光照射角度{[0001|ffff]}{color[ffff]}。
059	为使阳光照进房间，\n请将{[0001|1b00]}太阳的方位{[0001|ffff]}设为{color[0400]}{[0001|1b00]}0{[0001|ffff]}{color[ffff]}，\n将{[0001|1b00]}太阳的高度{[0001|ffff]}设为{color[0400]}{[0001|1b00]}40{[0001|ffff]}{color[ffff]}～
060	准确到位。\n请关闭设置。
061	“阳光在房间中央\n映照出了窗户的形状。”
062	这就是……\n太阳的力量……
063	让我们去看看太阳带来的变化吧～
064	地面的窗影清晰可见！
067	……气氛真不错啊～！
068	来！\n一鼓作气完成其他墙壁的编程吧！
069-00	接下来要制作\n房间左右两侧的墙壁。
069	请切换成{[0001|1b00]}{color[0400]}俯瞰视角{color[ffff]}{[0001|ffff]}。
071	选中这面墙壁的物体小节点～
072	复制！
073	放在房间左侧。
074	继续{[0001|1b00]}{color[0400]}复制{color[ffff]}{[0001|ffff]}并移至\n与密室的分界线处～
075	再次选中左侧的墙壁～
076	复制！
077	放在密室右侧。
079	请打开这个\n物体小节点的设置……
080	将{[0001|1b00]}颜色{[0001|ffff]}设为{[0001|1b00]}{color[0400]}黑色{color[ffff]}{[0001|ffff]}。
081	关闭设置。
082	好，让我们去看看墙壁吧！
083	左侧、右侧，以及密室，\n都有了墙壁！
084	左右两侧的墙壁大功告成！
085	已经非常有房间的感觉了～
086	尽管现在可以窥见一小部分密室……
087	但我们会在下个步骤中将密室藏好的，\n所以先不必在意，继续安心编程吧～
089	接下来要制作天花板了！
090	选择地板的物体小节点～
091	复制！
092	使其足以覆盖整个房间～
093	切换成{[0001|1b00]}{color[0400]}水平视角{color[ffff]}{[0001|ffff]}～
094	将其放在房间顶部！
095	“‘这天花板不会掉下来吧……’\n你的脑海里不禁浮现出一丝隐忧。”
096	{[0001|1b00]}状态{[0001|ffff]}中的“{color[0400]}{[0001|1b00]}能移动{[0001|ffff]}{color[ffff]}”已{color[0400]}{[0001|1b00]}关闭{[0001|ffff]}{color[ffff]}，\n因此不必担心天花板发生坠落。
097	请打开设置。
100	将{[0001|1b00]}颜色{[0001|ffff]}设为{[0001|1b00]}{color[0400]}白色{color[ffff]}{[0001|ffff]}！
101	关闭设置～！
102	好！让我们去看看\n装好天花板的房间吧！
103	天花板覆盖了整个房间！
105	这样一来就不怕下雨了！
107	房间至此大功……
108	……尚未告成。
109	正如{[0201]}所尝试的……
110	将人移至我们眼前时，\n人从房间里消失了。
111	请试着将人移至我们眼前。
112	人从房间里消失了……
113	请尝试向房间对面移动，\n看看人能否重新出现～
114	人没有重新出现……
115	其实……\n人已经从照相机拍不到的地方\n掉到地板范围外了。
118	因此！\n为了防止这种情况发生，\n需要在眼前也增设墙壁！
119	请切换成{[0001|1b00]}{color[0400]}俯瞰视角{color[ffff]}{[0001|ffff]}。
120	选中墙壁的物体小节点～
121	复制！
122	拉伸成扁平形状\n放在我们眼前这一侧作为墙壁！
123	好了！去看看效果！
124	……
125	什么都看不见！！！
126	……有墙壁矗立在眼前，\n当然什么都看不见了～
127	为了能够看见房间内部的情况，\n让我们隐藏墙壁吧！
128	选中眼前的墙壁～
129	打开设置！
130	{color[0400]}{[0001|1b00]}关闭{[0001|ffff]}{color[ffff]}{[0001|1b00]}状态{[0001|ffff]}中的“{color[0400]}{[0001|1b00]}能看见{[0001|ffff]}{color[ffff]}”。
131	没问题～\n请关闭设置。
132	这次一定行！
135	现在可以看清\n房间内的情况了！
136	请将人移至眼前。
137	因为有一面看不见的墙壁，\n已经没有掉下去的危险了！
139	现在总算可以正式宣告！\n房间的制作大功告成了！！
140	在房间里随意逛逛，\n逛够了就返回程序画面吧～
141	那么～～～这样一来～～～～～
142	第2步就完成了！！！
143	恭喜竣工。
144	恭喜了。
145	建成了不错的房间。
146	祝福之光令满室生辉……！
148	这次我们制作了墙壁、窗户，以及天花板，\n完成了对整个房间的编程作业！
149	在下个步骤当中，我们将对{[0001|1b00]}{color[0400]}隐藏门{color[ffff]}{[0001|ffff]}……
150	还有为谜题增色的\n{[0001|1b00]}{color[0400]}可疑的物体{color[ffff]}{[0001|ffff]}实施编程！
151	“木箱、电视、墙壁机关……\n你需要对这些谜题发起挑战……”
152	“未完待续……”
153	那么让我们在下个步骤再会～
Lesson_SecretRoom_02.msbt
000	欢迎来到解谜房间的第3步！
001	上次我们完成了\n用作解谜舞台的{[0001|1b00]}{color[0400]}房间{color[ffff]}{[0001|ffff]}！
003	而从这次开始，我们将编程\n制作各种解谜必不可少的{[0001|1b00]}{color[0400]}机关{color[ffff]}{[0001|ffff]}！
004	来！\n抓紧时间进入程序画面！
005	首先要编程制作的是……
006	将在一切谜题真相大白时开启的\n{[0001|1b00]}{color[0400]}隐藏门{color[ffff]}{[0001|ffff]}！
011	首先来制作{[0001|1b00]}{color[0400]}门{color[ffff]}{[0001|ffff]}吧！
012	选中墙壁的物体小节点～
013	复制！
014	放在稍远一点的位置。
014-01	这个物体小节点将作为{[0001|1b00]}{color[0400]}门{color[ffff]}{[0001|ffff]}使用！
014-02	那么……\n我们希望这扇门能在\n{color[0400]}{[0001|1b00]}谜题真相大白时自动开启{[0001|ffff]}{color[ffff]}。
014-03	要让门开启\n需要使用新的特殊连接！
014-04	请从{[0001|1b00]}物体{[0001|ffff]} {[0001|0500]}{[0001|ffff]} {[0001|1b00]}连接零件{[0001|ffff]} {[0001|0500]}{[0001|ffff]} {[0001|1b00]}自由滑动连接\n{[0001|ffff]}当中叫出{[0001|1b00]}{color[0400]}自由滑动连接小节点{color[ffff]}{[0001|ffff]}。
014-06	什么事？
014-07	哦……想让隐藏门开启是吧。
014-08	只要把我{color[0400]}{[0001|1b00]}夹在中间进行连接{[0001|ffff]}{color[ffff]}，\n就能{color[0400]}{[0001|1b00]}自由移动{[0001|ffff]}{color[ffff]}所连接的对象了。
014-09	之后你自己弄吧。
014-10	我们的最终目标是\n让隐藏门{color[0400]}{[0001|1b00]}自动{[0001|ffff]}{color[ffff]}开启……
014-11	在这个步骤中暂且\n{color[0400]}{[0001|1b00]}用摇杆{[0001|ffff]}{color[ffff]}让隐藏门开启吧！
014-12	先将自由滑动连接小节点\n{[0001|1b00]}{color[0400]}连接{color[ffff]}{[0001|ffff]}到墙壁的物体小节点！
015	再打开门的物体小节点的\n设置……
016	开启{[0001|1b00]}状态{[0001|ffff]}中的“{color[0400]}{[0001|1b00]}能看见{[0001|ffff]}{color[ffff]}”、“{color[0400]}{[0001|1b00]}能移动{[0001|ffff]}{color[ffff]}”。
017	然后！请在{[0001|1b00]}{color[0400]}连接面{color[ffff]}{[0001|ffff]}当中\n将“{[0001|1b00]}自己的连接面{[0001|ffff]}”设为{[0001|1b00]}{color[0400]}Z-{color[ffff]}{[0001|ffff]}，\n将“{[0001|1b00]}连接对象的连接面{[0001|ffff]}”设为{[0001|1b00]}{color[0400]}Z+{color[ffff]}{[0001|ffff]}。
018	关闭设置～
019	然后将门的物体小节点\n{[0001|1b00]}{color[0400]}连接{color[ffff]}{[0001|ffff]}到自由滑动连接小节点！
019-01	如此{color[0400]}{[0001|1b00]}门就会与旁边的墙壁\n处于粘在一起{[0001|ffff]}{color[ffff]}的状态了！
019-02	接下来，我们要使{color[0400]}{[0001|1b00]}摇杆{[0001|ffff]}{color[ffff]}\n能够操作这扇门移动～
019-03	请叫出{[0001|1b00]}{color[0400]}R摇杆上下方向{color[ffff]}{[0001|ffff]}的\n{color[0400]}{[0001|1b00]}摇杆小节点{[0001|ffff]}{color[ffff]}放在蓝框处。
019-04	将摇杆小节点与……\n自由滑动连接小节点的\n{[0001|1b00]}{color[0400]}Z端口{color[ffff]}{[0001|ffff]}进行连接。
019-05	好！\n先去确认一下～！
019-0501	密室被隐藏起来了！
019-06	然后……\n尝试上下推动{[0001|1b00]}{color[0400]}摇杆{color[ffff]}{[0001|ffff]}……
019-07	隐藏门……移动了！
019-09	因为连接着{color[0400]}{[0001|1b00]}Z端口{[0001|ffff]}{color[ffff]}，\n所以门在Z方向……\n也就是房间的纵深方向上移动了～
019-10	下次让门在房间的左右方向……\n也就是X方向上移动看看吧～
019-11	请叫出{[0001|1b00]}{color[0400]}R摇杆左右方向{color[ffff]}{[0001|ffff]}的\n{color[0400]}{[0001|1b00]}摇杆小节点{[0001|ffff]}{color[ffff]}放在蓝框处。
019-12	将左右方向的摇杆小节点与……\n自由滑动连接小节点的{[0001|1b00]}{color[0400]}X端口{color[ffff]}{[0001|ffff]}进行连接。
019-13	这样一来，\n门也能够在X方向上移动了～！
019-14	让我们去确认一下！
019-15	请尝试上下左右转动{[0001|1b00]}{color[0400]}摇杆{color[ffff]}{[0001|ffff]}。
019-16	墙壁随之向前后左右移动了～！
019-20	能让连接对象在{color[0400]}{[0001|1b00]}不同方向上自由移动\n{[0001|ffff]}{color[ffff]}正是{color[0400]}{[0001|1b00]}自由滑动连接小节点{[0001|ffff]}{color[ffff]}的专长！
019-21	不过……
019-2101	隐藏门与人和墙壁都不会发生接触。
019-22	这固然使其便于朝各个方向开启～
019-23	但如此一来就有可能\n被人直接闯进密室！
019-24	因此需要设置看不见的墙壁，\n使人无法进入密室！
019-25	来！\n前往程序画面！
021	选中墙壁的物体小节点～
022	复制！
023	放在与密室重合的位置。
024	打开设置～
025	仅开启{[0001|1b00]}状态{[0001|ffff]}中的“{color[0400]}{[0001|1b00]}能接触{[0001|ffff]}{color[ffff]}”。
026	好的，\n请关闭设置。
027	“咚咚……\n墙壁受到敲击，发出轻微的回声……\n看来里面应该有一间密室。”
028	阻止人进入密室的\n是我这面{color[0400]}{[0001|1b00]}看不见的墙壁{[0001|ffff]}{color[ffff]}。
029	而你看见的是身为{color[0400]}{[0001|1b00]}门{[0001|ffff]}{color[ffff]}的我。
030	实际确认一下吧！
034	请前往密室所在的右侧内部。
036	完美碰壁！
037	那么，隐藏门的制作\n到此先告一段落！
038	请前往程序画面～
078	隐藏门先这样放一放……
079	如果有兴致，\n就请把摇杆尽情转起来吧！
080	热烈欢迎转一转——
081	转呀转——\n转呀转转呀转——
084	接下来……
085	让我们来放置\n能够吸引玩家解谜的{[0001|1b00]}{color[0400]}可疑的物体{color[ffff]}{[0001|ffff]}！
086	从{[0001|1b00]}四边形时尚物体{[0001|ffff]}中\n叫出{[0001|1b00]}{color[0400]}箱子{color[ffff]}{[0001|ffff]}的{color[0400]}{[0001|1b00]}时尚物体小节点{[0001|ffff]}{color[ffff]}，\n放在房间角落～
087	请切换成{[0001|1b00]}{color[0400]}水平视角{color[ffff]}{[0001|ffff]}。
088	放在地板上方。
095	“房间角落里放着一个\n布满灰尘的巨大木箱。”
096	啊～调查的冲动难以抵挡！
097	♥潘多拉的魔盒♥
098	打开{[0001|1b00]}箱子{[0001|ffff]}的时尚物体小节点的设置。
099	开启{[0001|1b00]}状态{[0001|ffff]}中的“{color[0400]}{[0001|1b00]}能看见{[0001|ffff]}{color[ffff]}”、\n“{color[0400]}{[0001|1b00]}能接触{[0001|ffff]}{color[ffff]}”、“{color[0400]}{[0001|1b00]}能损坏{[0001|ffff]}{color[ffff]}”～
100	请关闭设置！
101	命中注定会被破坏……\n我的命运就如同梦幻泡影一般。
102	我们把破坏箱子的操作\n放在下个步骤～……
103	先去确认一下箱子的模样吧～！
103-00	不折不扣的……木箱。
103-01	放在房间的角落里\n自然十分显眼～
103-04	那就继续放置\n其他可疑的物体吧～！
103-05	接下来是电视！
104	从{[0001|1b00]}四边形时尚物体{[0001|ffff]}中叫出\n{[0001|1b00]}{color[0400]}电视{color[ffff]}{[0001|ffff]}的{[0001|1b00]}{color[0400]}时尚物体小节点{color[ffff]}{[0001|ffff]}放在窗下～
105	请切换成{[0001|1b00]}{color[0400]}俯瞰视角{color[ffff]}{[0001|ffff]}。
106	移至墙壁附近～
113	“这个播放着黑白影像的箱子，\n似乎是很久以前的电视……”
114	令人陶醉的复古风♥
117	这台电视正是用来\n营造神秘氛围的小道具！
118	营造氛围……\n这可是时尚物体小节点的专业领域♥
119	固定电视，使之无法移动。
120	请打开{[0001|1b00]}电视{[0001|ffff]}的时尚物体小节点的设置。
121	{color[0400]}{[0001|1b00]}关闭{[0001|ffff]}{color[ffff]}{[0001|1b00]}状态{[0001|ffff]}中的“{color[0400]}{[0001|1b00]}能移动{[0001|ffff]}{color[ffff]}”。
122	好的！\n请关闭设置。
122-01	那就让我们去看看电视吧～！
122-02	四四方方的，\n好可爱！
122-03	电视的设置至此完成！
122-04	好！\n让我们再来设置\n最后一个解谜装置吧～！
125	将{color[0400]}{[0001|1b00]}按键{[0001|ffff]}{color[ffff]}与{color[0400]}{[0001|1b00]}数字方块{[0001|ffff]}{color[ffff]}进行组合，\n来制作一个解谜装置。
126	从{color[0400]}{[0001|1b00]}装置按键{[0001|ffff]}{color[ffff]}着手编程吧。
127	请叫出{color[0400]}{[0001|1b00]}圆柱体物体小节点\n{[0001|ffff]}{color[ffff]}放在右侧墙壁处。
128	切换成{[0001|1b00]}{color[0400]}水平视角{color[ffff]}{[0001|ffff]}～
129	缩小他，\n放在触手可及的高度！
130	旋转一下！
131	请打开设置。
132	开启{[0001|1b00]}状态{[0001|ffff]}中的“{color[0400]}{[0001|1b00]}能看见{[0001|ffff]}{color[ffff]}”、“{color[0400]}{[0001|1b00]}能接触{[0001|ffff]}{color[ffff]}”。
133	并将{[0001|1b00]}颜色{[0001|ffff]}更改为{[0001|1b00]}{color[0400]}粉红色{color[ffff]}{[0001|ffff]}！
134	关闭设置吧～
135	“墙上嵌着一枚按键，\n仿佛正在呼唤你按下去。”
136	……你好，\n不用顾虑，请按按我。
137	最后要制作的是{color[0400]}{[0001|1b00]}数字方块{[0001|ffff]}{color[ffff]}。
138	切换成{[0001|1b00]}{color[0400]}俯瞰视角{color[ffff]}{[0001|ffff]}～
139	叫出{[0001|1b00]}{color[0400]}带数字物体小节点{color[ffff]}{[0001|ffff]}，\n与墙上的按键重叠放置。
140	再切换成{[0001|1b00]}{color[0400]}水平视角{color[ffff]}{[0001|ffff]}……
141	将其缩小后放在按键上方。
142	请打开设置。
143	开启{[0001|1b00]}状态{[0001|ffff]}中的“{color[0400]}{[0001|1b00]}能看见{[0001|ffff]}{color[ffff]}”、“{color[0400]}{[0001|1b00]}能接触{[0001|ffff]}{color[ffff]}”～
144	将颜色设为{[0001|1b00]}{color[0400]}淡蓝色{color[ffff]}{[0001|ffff]}。
145	将{[0001|1b00]}显示方向{[0001|ffff]}设为{[0001|1b00]}{color[0400]}X-{color[ffff]}{[0001|ffff]}。
146	没问题，\n请关闭设置。
147	“淡蓝色的方块嵌在按键上方，\n砖块上的数字00赫然入目。”
148	我身上显示的数字\n将成为本次解谜的{color[0400]}{[0001|1b00]}关键要素{[0001|ffff]}{color[ffff]}。
150	没错！
151	我们将在后续步骤中\n对{color[0400]}{[0001|1b00]}这一关键要素{[0001|ffff]}{color[ffff]}实施编程，\n敬请期待！
154	那么！\n既然墙壁上的装置已设置完成，\n让我们去看看吧！
155	这……
156	真是不容忽视的装置啊……！
158	好，这样一来！\n可疑的物体就都设置完成了！
159	究竟隐藏着怎样的谜题呢……\n好期待啊！
161	让我们前往程序画面吧～
162	那么～～～这样一来～～～～～
163	第3步就完成了！！！
164	有两下子啊。
165	♥高端大气的家装♥
166	♥恭喜你啦～♥
167	恭喜你。
168	这次编程设计的是隐藏门，\n以及各种可疑的物体！
170	在下个步骤中，\n我们将通过编程实现\n用拳击来破坏神秘的木箱！
172	“那个木箱里一定隐藏着什么秘密……\n你听从直觉的召唤，握紧了拳头……”
173	“未完待续……”
174	那么让我们在下个步骤再会～
Lesson_SecretRoom_03.msbt
000	欢迎光临～
001	上次我们编程设计了{[0001|1b00]}{color[0400]}隐藏门{color[ffff]}{[0001|ffff]}，\n以及各种{[0001|1b00]}{color[0400]}可疑的物体{color[ffff]}{[0001|ffff]}。
002	这次的目的是将可疑的物体之一——\n{color[0400]}{[0001|1b00]}箱子{[0001|ffff]}{color[ffff]}～～
003	用{color[0400]}{[0001|1b00]}拳击{[0001|ffff]}{color[ffff]}破坏得四分五裂！
004	我们即将{color[0400]}{[0001|1b00]}用拳击破坏的箱子{[0001|ffff]}{color[ffff]}～\n就在这里！
005	……终于要迎来这一刻了。
008	既然要破坏物体……\n就叫出{[0001|1b00]}{color[0400]}破坏物体小节点\n{color[ffff]}{[0001|ffff]}并放在房间外吧。
009	请打开设置。
010	{color[0400]}{[0001|1b00]}关闭{[0001|ffff]}{color[ffff]}{[0001|1b00]}状态{[0001|ffff]}中的“{color[0400]}{[0001|1b00]}能看见{[0001|ffff]}{color[ffff]}”……
011	在“{color[0400]}{[0001|1b00]}要破坏什么？{[0001|ffff]}{color[ffff]}”当中仅选择{[0001|1b00]}{color[0400]}箱子{color[ffff]}{[0001|ffff]}～
012	准确到位，\n关闭设置吧～
013	“察觉到木箱非同寻常的你\n开始寻找破坏它的手段。”
014	呵呵呵……破坏吧……\n不择手段地破坏吧……
015	将破坏物体小节点{[0001|1b00]}{color[0400]}连接{color[ffff]}{[0001|ffff]}到\n{[0001|1b00]}箱子{[0001|ffff]}的时尚物体小节点。
015-01	这样一来，\n破坏物体小节点就与箱子如影随形了！
015-02	接下来编程实现\n{color[0400]}{[0001|1b00]}当人对箱子使出拳击时\n{[0001|ffff]}{color[ffff]}箱子会损坏的机制吧～
016	首先，要想判断\n拳击{color[0400]}{[0001|1b00]}是否命中了箱子{[0001|ffff]}{color[ffff]}……
017	需要将{color[0400]}{[0001|1b00]}接触感应器{[0001|ffff]}{color[ffff]}粘在人前面。
018	叫出{color[0400]}{[0001|1b00]}接触感应器小节点{[0001|ffff]}{color[ffff]}，\n放在稍远的位置。
019	打开设置。
020	{color[0400]}{[0001|1b00]}关闭{[0001|ffff]}{color[ffff]}{[0001|1b00]}状态{[0001|ffff]}中的“{color[0400]}{[0001|1b00]}能看见{[0001|ffff]}{color[ffff]}”～
021	请在{[0001|1b00]}{color[0400]}连接面{color[ffff]}{[0001|ffff]}当中\n将“{[0001|1b00]}自己的连接面{[0001|ffff]}”设为{[0001|1b00]}{color[0400]}Z+{color[ffff]}{[0001|ffff]}，\n将“{[0001|1b00]}连接对象的连接面{[0001|ffff]}”设为{[0001|1b00]}{color[0400]}Z-{color[ffff]}{[0001|ffff]}。
022	关闭当前画面～
023	在“{[0001|1b00]}要检查什么？{[0001|ffff]}”当中仅选择{[0001|1b00]}{color[0400]}箱子{color[ffff]}{[0001|ffff]}！
024	关闭设置～
025	接下来！\n将接触感应器小节点\n{[0001|1b00]}{color[0400]}连接{color[ffff]}{[0001|ffff]}到人小节点。
026	“嘎吱……当我的手碰到木箱时，\n它发出了快要破碎的声响。”
027	噫……要检查人的前面\n有没有箱子对吧。
028	下面要检查是否使出了拳击。
029	使出拳击就意味着按下{color[0400]}{[0001|1b00]}键{[0001|ffff]}{color[ffff]}对吧。
030	要检查是否按下了键，\n请叫出{[0001|1b00]}{color[0400]}{color[ffff]}{[0001|ffff]}的{color[0400]}{[0001|1b00]}按键小节点{[0001|ffff]}{color[ffff]}放在蓝框中。
031	“你凝视着自己的拳头，\n直觉告诉你说不定能够打碎这个木箱……”
032	请指教！\n我会告诉你键有没有被按下……\n也就是是否使出了拳击哦！
033	当接触感应器小节点与按键小节点\n{color[0400]}{[0001|1b00]}两者同时输出信号{[0001|ffff]}{color[ffff]}之际……
034	就说明人正在{color[0400]}{[0001|1b00]}向箱子使出拳击{[0001|ffff]}{color[ffff]}！
035	请叫出{[0001|1b00]}{color[0400]}AND小节点{color[ffff]}{[0001|ffff]}放在蓝框处，\n以检查两者是否在同时输出信号。
036	将{[0001|1b00]}{color[0400]}接触感应器小节点{color[ffff]}{[0001|ffff]}与\nAND小节点的{[0001|1b00]}{color[0400]}输入1端口{color[ffff]}{[0001|ffff]}进行连接。
037	将{[0001|1b00]}{color[0400]}按键小节点{color[ffff]}{[0001|ffff]}与\nAND小节点的{[0001|1b00]}{color[0400]}输入2端口{color[ffff]}{[0001|ffff]}进行连接。
039	接着～！\n请将AND小节点的{[0001|1b00]}{color[0400]}输出端口\n{color[ffff]}{[0001|ffff]}连接到{[0001|1b00]}{color[0400]}破坏物体小节点{color[ffff]}{[0001|ffff]}！
040	人前方有箱子，没问题！\n人已使出拳击，没问题！
041	当接收到两者的信号时，\n我就会向破坏物体小节点发送信号！
041-01	这样一来当对箱子使出拳击时，\n就会将箱子破坏！
042	那就让我们尝试破坏箱子吧！
043	请使用键{[0001|1b00]}{color[0400]}对箱子使出拳击{color[ffff]}{[0001|ffff]}。
045	只用一拳！\n箱子就灰飞烟灭了！
046	就连拳击手都要甘拜下风！！
047	不过只用一拳就能破坏箱子……\n这样游戏未免太没有难度了……
049	因此！\n我们要编程实现\n箱子{color[0400]}{[0001|1b00]}受到3次拳击才会损坏{[0001|ffff]}{color[ffff]}的机制！
050	首先要能够统计\n{color[0400]}{[0001|1b00]}已对箱子使出了几次拳击{[0001|ffff]}{color[ffff]}！
052	既然要统计数字！\n就请叫出{color[0400]}{[0001|1b00]}计数小节点{[0001|ffff]}{color[ffff]}放在蓝框中！
053	打开设置。
054	将{[0001|1b00]}开始时的计数值{[0001|ffff]}设为{[0001|1b00]}{color[0400]}3{color[ffff]}{[0001|ffff]}。
055	将{[0001|1b00]}模式{[0001|ffff]}设为{[0001|1b00]}{color[0400]}范围限制{color[ffff]}{[0001|ffff]}。
056	将{[0001|1b00]}计数的时机{[0001|ffff]}更改为{[0001|1b00]}{color[0400]}从0改变时{color[ffff]}{[0001|ffff]}～
056-01	这样一来当对箱子使出拳击时，\n就会以3、2、1、0的顺序倒数了！
057	关闭设置。
058	“咔嚓……这一拳的确有效果……\n估计再打2拳就能破坏它了……”
059	3、2、1、0，\n要这样数对吧。
060	那么请连接我的\n{[0001|1b00]}{color[0400]}减少端口{color[ffff]}{[0001|ffff]}哦。
061	那么～\n{[0001|1b00]}{color[0400]}删除{color[ffff]}{[0001|ffff]}连接在AND小节点与\n破坏物体小节点之间的{color[0400]}{[0001|1b00]}线{[0001|ffff]}{color[ffff]}。
062	并将AND小节点的{color[0400]}{[0001|1b00]}输出端口{[0001|ffff]}{color[ffff]}与\n计数小节点的{color[0400]}{[0001|1b00]}减少端口{[0001|ffff]}{color[ffff]}进行连接。
063	对箱子使出拳击时\n计数递减的机制就此大功告成。
064	接下来！\n我们要通过编程\n在计数{color[0400]}{[0001|1b00]}归零时{[0001|ffff]}{color[ffff]}破坏箱子！
065	请叫出{[0001|1b00]}{color[0400]}＝{color[ffff]}{[0001|ffff]}的{color[0400]}{[0001|1b00]}比较小节点{[0001|ffff]}{color[ffff]}放在蓝框处。
066	再叫出{color[0400]}{[0001|1b00]}常数小节点{[0001|ffff]}{color[ffff]}放在蓝框处。
067	请打开常数小节点的设置。
068	将“{[0001|1b00]}要输出什么数值？{[0001|ffff]}”设为{[0001|1b00]}{color[0400]}0.00{color[ffff]}{[0001|ffff]}。
069	请关闭设置。
070	将{color[0400]}{[0001|1b00]}计数小节点{[0001|ffff]}{color[ffff]}与\n比较小节点的{color[0400]}{[0001|1b00]}输入1端口{[0001|ffff]}{color[ffff]}进行连接～
071	将{color[0400]}{[0001|1b00]}常数小节点{[0001|ffff]}{color[ffff]}与\n比较小节点的{color[0400]}{[0001|1b00]}输入2端口{[0001|ffff]}{color[ffff]}进行连接～～
072	将比较小节点的{[0001|1b00]}{color[0400]}输出端口{color[ffff]}{[0001|ffff]}与\n{[0001|1b00]}{color[0400]}破坏物体小节点{color[ffff]}{[0001|ffff]}进行连接！
073	“这是最后一击了……\n拳风过处，木箱化为齑粉。”
074	我想知道！\n我想知道计数的结果{[0001|1b00]}{color[0400]}是否为0{color[ffff]}{[0001|ffff]}！
075	这样一来，当人对箱子使出3次拳击后，\n箱子就会损坏了～
076	来！确认的时间到了！
077	请使用键对箱子使出3次拳击。
078	干得漂亮！
080	现在箱子在{color[0400]}{[0001|1b00]}受到3次拳击后会损坏了{[0001|ffff]}{color[ffff]}～
081	{color[0400]}{[0001|1b00]}破坏箱子{[0001|ffff]}{color[ffff]}的机制就此大功……\n其实还没告成。
082	问题在于……\n拳击打在箱子上时\n没有任何反馈～！
089	为受到拳击的箱子添加反应，\n给人以{color[0400]}{[0001|1b00]}“箱子即将损坏！”{[0001|ffff]}{color[ffff]}的感觉吧！
090	那么！\n前往程序画面！
091	首先为{color[0400]}{[0001|1b00]}箱子受到拳击\n{[0001|ffff]}{color[ffff]}添加{color[0400]}{[0001|1b00]}听觉上的反应{[0001|ffff]}{color[ffff]}吧～
092	请选择{[0001|1b00]}{color[0400]}播放音效{color[ffff]}{[0001|ffff]}，\n来叫出{color[0400]}{[0001|1b00]}播放声音小节点\n{[0001|ffff]}{color[ffff]}放在蓝框处～
093	打开设置。
094	请在{[0001|1b00]}撞击{[0001|ffff]}中选择{[0001|1b00]}{color[0400]}中度撞击{color[ffff]}{[0001|ffff]}。
095	没问题，\n关闭设置吧～
096	请将{[0001|1b00]}{color[0400]}AND小节点{color[ffff]}{[0001|ffff]}与\n播放声音小节点的{[0001|1b00]}{color[0400]}播放端口{color[ffff]}{[0001|ffff]}进行连接。
097	想为箱子受到拳击\n添加{color[0400]}{[0001|1b00]}反应{[0001|ffff]}{color[ffff]}是吧？
098	“砰！”\n我要～～播放～～声音喽～～～～～～♪
100	去听听效果吧～
101	请使用键破坏箱子。
103	清脆响亮～！
104	现在对箱子使出拳击能获得反馈了。
105	还不够！\n再添加些{color[0400]}{[0001|1b00]}视觉{[0001|ffff]}{color[ffff]}上的反馈吧！
106	让箱子在受到拳击时冒烟吧。
107	请叫出{[0001|1b00]}{color[0400]}烟雾{color[ffff]}{[0001|ffff]}的{color[0400]}{[0001|1b00]}特效小节点{[0001|ffff]}{color[ffff]}放在蓝框处。
108	打开设置！
109	将{[0001|1b00]}特效出现的位置{[0001|ffff]}改为{[0001|1b00]}{color[0400]}空间{color[ffff]}{[0001|ffff]}～
110	请{color[0400]}{[0001|1b00]}关闭{[0001|ffff]}{color[ffff]}{[0001|1b00]}状态{[0001|ffff]}中的“{color[0400]}{[0001|1b00]}能看见{[0001|ffff]}{color[ffff]}”。
111	没问题，\n关闭设置吧。
112	你好啊～～～
116	连灰带烟冒出来～！\n毕竟箱子……灰飞烟灭了嘛～！
117	……那么！\n请将特效小节点{[0001|1b00]}{color[0400]}连接{color[ffff]}{[0001|ffff]}到\n箱子的时尚物体小节点。
118	并将{[0001|1b00]}{color[0400]}AND小节点{color[ffff]}{[0001|ffff]}与{[0001|1b00]}{color[0400]}特效小节点{color[ffff]}{[0001|ffff]}进行连接。
119	这样一来，\n当箱子受到拳击时烟雾就会出现了！
120	去看看效果吧！
121	使用键破坏箱子。
122	拳击一出，烟雾升腾！
125	{color[0400]}{[0001|1b00]}“箱子即将损坏！”{[0001|ffff]}{color[ffff]}的感觉出来了！
127	至此！\n{color[0400]}{[0001|1b00]}用拳击破坏箱子{[0001|ffff]}{color[ffff]}的机制宣告完成！
128	返回之前的画面吧。
129	那么～～～这样一来～～～～～
130	第4步就完成了！！！
131	呵呵呵……\n毁灭的艺术。
132	哦哦～\n恭喜恭喜恭喜你～♪
133	可喜可贺。
134	♥高端大气的拳击♥
136	在这一步中我们实现了\n通过3次拳击破坏箱子～
137	在下个步骤中，\n我们将对隐藏在\n箱子后面的{color[0400]}{[0001|1b00]}暗号{[0001|ffff]}{color[ffff]}实施编程！
139	“在灰飞烟灭的箱子后面……\n发现了暗藏玄机的暗号……\n又一道谜题横亘在你的面前……”
140	“未完待续……”
141	那么让我们在下个步骤再会～
Lesson_SecretRoom_04.msbt
000	你终于来了！\n{[0201]}。
001	上次我们编程实现了\n{[0001|1b00]}{color[0400]}用拳击破坏箱子{color[ffff]}{[0001|ffff]}的机制。
002	其实这个箱子……
003	是为了隐藏{[0001|1b00]}{color[0400]}暗号{color[ffff]}{[0001|ffff]}而存在的！
004	因此这次的内容是\n要对解谜的关键要素——\n藏在箱子后面的{[0001|1b00]}{color[0400]}暗号{color[ffff]}{[0001|ffff]}实施编程！
005	让我们前往程序画面！
006	这次要制作的暗号是～～
007	利用{color[0400]}{[0001|1b00]}骰子的特性{[0001|ffff]}{color[ffff]}构建的暗号！
008	首先从{[0001|1b00]}四边形时尚物体{[0001|ffff]}中叫出\n{[0001|1b00]}{color[0400]}骰子{color[ffff]}{[0001|ffff]}的{color[0400]}{[0001|1b00]}时尚物体小节点{[0001|ffff]}{color[ffff]}放在箱子后面。
009	切换成{[0001|1b00]}{color[0400]}水平视角{color[ffff]}{[0001|ffff]}吧。
010	请调整到合适的高度。
011	打开设置～
012	开启{[0001|1b00]}状态{[0001|ffff]}中的“{color[0400]}{[0001|1b00]}能看见{[0001|ffff]}{color[ffff]}”、“{color[0400]}{[0001|1b00]}能接触{[0001|ffff]}{color[ffff]}”。
013	没问题，\n请关闭设置。
014	“打碎木箱之后，\n你看到有骰子贴在后面的墙壁上……”
015	可疑～～～\n太可疑了～！！
017	一共要安放3颗骰子！
018	{[0001|1b00]}{color[0400]}复制{color[ffff]}骰子{[0001|ffff]}的时尚物体小节点\n放在斜下方。
019	再次{[0001|1b00]}{color[0400]}复制{color[ffff]}{[0001|ffff]}后继续向下摆放～
020	恰到好处！
021	去看看效果吧！
022	按下键用拳击破坏箱子。
023	有3颗骰子贴在墙壁上！
024	而骰子的点数全都是{color[0400]}{[0001|1b00]}2{[0001|ffff]}{color[ffff]}～
025	这样是不足以构成暗号的，\n因此我们要更改骰子的点数！
026	只要更改时尚物体的朝向，\n就可以改变骰子的点数了！
027	选中这个时尚物体小节点～
028	打开设置～
029	请将{[0001|1b00]}旋转{[0001|ffff]}的{[0001|1b00]}{color[0400]}Y轴{color[ffff]}{[0001|ffff]}设为{[0001|1b00]}{color[0400]}180.00°{color[ffff]}{[0001|ffff]}。
030	关闭设置。
031	然后轮到这个时尚物体小节点了～
032	打开设置～
033	这次将{[0001|1b00]}旋转{[0001|ffff]}的{[0001|1b00]}{color[0400]}Y轴{color[ffff]}{[0001|ffff]}设为{[0001|1b00]}{color[0400]}90.00°{color[ffff]}{[0001|ffff]}。
034	请关闭设置。
035	最后轮到这个时尚物体小节点～
036	打开设置～
037	将{[0001|1b00]}旋转{[0001|ffff]}的{[0001|1b00]}{color[0400]}X轴{color[ffff]}{[0001|ffff]}更改为{[0001|1b00]}{color[0400]}90.00°{color[ffff]}{[0001|ffff]}！
038	关闭设置！
039	这样一来，骰子的点数\n应该就各不相同了！
040	让我们去看看发生了什么变化吧！
041	请按下键\n用拳击将箱子打个粉碎！
042	骰子的点数跟刚才不一样了～！
043	5……3……1……
044	只有这些线索\n还是无法让人理解暗号的含义！
046	让我们继续编程制作后续暗号～
047	接下来为暗号\n增设一个立方体！
048	请叫出{[0001|1b00]}{color[0400]}立方体{color[ffff]}{[0001|ffff]}物体小节点\n并放在蓝框处。
049	切换成{[0001|1b00]}{color[0400]}俯瞰视角{color[ffff]}{[0001|ffff]}～
050	调整纵深方向上的位置。
051	打开设置～
052	将{[0001|1b00]}状态{[0001|ffff]}更改为“{color[0400]}{[0001|1b00]}能看见{[0001|ffff]}{color[ffff]}”、“{color[0400]}{[0001|1b00]}能接触{[0001|ffff]}{color[ffff]}”。
053	没问题，\n请关闭设置。
054	“贴在最上面的骰子\n遭到磨损，无法看清点数。”
055	调节为同样大小后放在一起，\n让我看起来也像骰子一样。
056	接下来切换成{[0001|1b00]}{color[0400]}水平视角{color[ffff]}{[0001|ffff]}～
057	{[0001|1b00]}{color[0400]}复制{color[ffff]}{[0001|ffff]}物体小节点并放在蓝框处。
058	请打开设置。
059	将{[0001|1b00]}颜色{[0001|ffff]}……变为{[0001|1b00]}{color[0400]}淡蓝色{color[ffff]}{[0001|ffff]}！
060	没问题，\n关闭设置吧～
061	“骰子旁边贴着淡蓝色的方块……\n似乎在哪里看到过这个颜色……”
062	或许{[0001|1b00]}{color[0400]}颜色具有特定含义{color[ffff]}{[0001|ffff]}吧。
063	好，暗号就此大功告成。
064	去看看这是个什么暗号吧！
065	用键破坏箱子！
067	这就是藏在箱子后面的{color[0400]}{[0001|1b00]}暗号{[0001|ffff]}{color[ffff]}！
068	……
069	怎么样？\n你知道……暗号的答案了吗？
070	我们将在下个步骤\n公布{[0001|1b00]}{color[0400]}暗号的答案{color[ffff]}{[0001|ffff]}……
071	请在公布答案前\n挑战自行破解暗号吧！
077	如果暗号确认完毕，\n就返回程序画面吧。
078	那么～～～这样一来～～～～～
079	第5步就完成了！！！
080	♥高端大气的配置♥
081	♥恭喜～♥
082	我说不定知道答案。
083	我想知道答案。
084	这次我们通过组合骰子与立方体\n制作了暗号～！
086	在下个步骤中，我们将就\n{[0001|1b00]}{color[0400]}墙壁装置的机关{color[ffff]}{[0001|ffff]}实施编程！
087	也将隆重公布{color[0400]}{[0001|1b00]}暗号的答案{[0001|ffff]}{color[ffff]}！！
088	“只要按下按键，数字就会增加……\n如果在此输入暗号的答案会发生什么？\n你对破解暗号发起了挑战……”
089	“未完待续……”
090	那么让我们在下个步骤再会～
Lesson_SecretRoom_05.msbt
000	你终于来了！\n{[0201]}。
001	上次我们编程制作了\n{[0001|1b00]}{color[0400]}隐藏的暗号{color[ffff]}{[0001|ffff]}。
002	按下键用拳击破坏箱子吧。
003	没错！\n是用骰子组成的暗号！
004	你知道暗号的答案了吗？
005	这次我们要来编程实现\n当按下墙上的按键时\n{[0001|1b00]}{color[0400]}墙壁的装置{color[ffff]}{[0001|ffff]}上的数字会增加……
006	以及{[0001|1b00]}{color[0400]}判定{color[ffff]}{[0001|ffff]}这个数字\n是否为正确答案的机制！
012	那就让我们前往程序画面吧～！
014	既然要计数……\n请叫出{[0001|1b00]}{color[0400]}计数小节点{color[ffff]}{[0001|ffff]}置于蓝框处～
015	请打开设置。
016	将{[0001|1b00]}模式{[0001|ffff]}设为{[0001|1b00]}{color[0400]}循环{color[ffff]}{[0001|ffff]}。
017	将{[0001|1b00]}计数范围{[0001|ffff]}设为{[0001|1b00]}{color[0400]}0{color[ffff]}{[0001|ffff]}至{[0001|1b00]}{color[0400]}100{color[ffff]}{[0001|ffff]}～
018	将{[0001|1b00]}计数的时机{[0001|ffff]}更改为{[0001|1b00]}{color[0400]}从0改变时{color[ffff]}{[0001|ffff]}。
019	没问题，\n请关闭设置～
020	“哔……当你按下墙上的按键时，\n装置显示的数字变成了01。”
021	我会统计按键次数。
022	连接{[0001|1b00]}{color[0400]}计数小节点{color[ffff]}{[0001|ffff]}与\n{[0001|1b00]}{color[0400]}带数字物体小节点{color[ffff]}{[0001|ffff]}。
023	接下来要检查人是否对墙上的按键……\n即{color[0400]}{[0001|1b00]}圆柱体{[0001|ffff]}{color[ffff]}使出了拳击。
024	既然想检查{color[0400]}{[0001|1b00]}人的前面是否存在圆柱体{[0001|ffff]}{color[ffff]}～
025	叫出{[0001|1b00]}{color[0400]}接触感应器小节点{color[ffff]}{[0001|ffff]}置于蓝框处。
026	打开设置～
027	{color[0400]}{[0001|1b00]}关闭{[0001|ffff]}{color[ffff]}{[0001|1b00]}状态{[0001|ffff]}中的“{color[0400]}{[0001|1b00]}能看见{[0001|ffff]}{color[ffff]}”。
028	请在{[0001|1b00]}{color[0400]}连接面{color[ffff]}{[0001|ffff]}当中\n将“{[0001|1b00]}自己的连接面{[0001|ffff]}”设为{[0001|1b00]}{color[0400]}Z+{color[ffff]}{[0001|ffff]}，\n将“{[0001|1b00]}连接对象的连接面{[0001|ffff]}”设为{[0001|1b00]}{color[0400]}Z-{color[ffff]}{[0001|ffff]}。
029	关闭详细画面吧～
030	在“{[0001|1b00]}要检查什么？{[0001|ffff]}”当中仅选择{[0001|1b00]}{color[0400]}圆柱体{color[ffff]}{[0001|ffff]}。
031	完全正确，\n关闭设置吧。
032	将接触感应器小节点\n{[0001|1b00]}{color[0400]}连接{color[ffff]}{[0001|ffff]}到人小节点。
033	接下来～\n要检查{color[0400]}{[0001|1b00]}有没有使出拳击{[0001|ffff]}{color[ffff]}。
034	叫出{[0001|1b00]}{color[0400]}{color[ffff]}{[0001|ffff]}的按键小节点放在蓝框处。
035	需要检查{color[0400]}{[0001|1b00]}接触感应器小节点{[0001|ffff]}{color[ffff]}与\n{color[0400]}{[0001|1b00]}按键小节点两者{[0001|ffff]}{color[ffff]}是否同时输出信号！
036	请叫出{[0001|1b00]}{color[0400]}AND小节点{color[ffff]}{[0001|ffff]}放在蓝框处。
037	将{color[0400]}{[0001|1b00]}接触感应器小节点{[0001|ffff]}{color[ffff]}与\nAND小节点的{color[0400]}{[0001|1b00]}输入1端口{[0001|ffff]}{color[ffff]}进行连接。
038	将{color[0400]}{[0001|1b00]}按键小节点{[0001|ffff]}{color[ffff]}与\nAND小节点的{color[0400]}{[0001|1b00]}输入2端口{[0001|ffff]}{color[ffff]}进行连接～
039	最后将AND小节点的{[0001|1b00]}{color[0400]}输出端口\n{color[ffff]}{[0001|ffff]}连接到计数小节点的{[0001|1b00]}{color[0400]}增加端口{color[ffff]}{[0001|ffff]}！
040	“哔、哔、哔……\n每按下一次按键，装置的数字就会增加。”
043	这样一来！\n当按下墙上的按键时，\n装置的数字就会增加了！
044	去确认一下\n装置能否正常运作吧。
045	请用键使出拳击\n按下{color[0400]}{[0001|1b00]}墙上的按键{[0001|ffff]}{color[ffff]}。
046	没问题！\n只要按下按键，墙壁装置的数字就会增加！
047	不过……\n因为缺乏实际按下的感触，\n按键成功与否令人难以确定～
048	希望能在按下按键时\n发出声音！
049	那就去添加声音吧～
050	从{[0001|1b00]}{color[0400]}播放音效{color[ffff]}{[0001|ffff]}当中叫出\n{color[0400]}{[0001|1b00]}播放声音小节点{[0001|ffff]}{color[ffff]}置于蓝框处～
051	请打开播放声音小节点的设置！
052	选择{[0001|1b00]}系统音效{[0001|ffff]}当中的{[0001|1b00]}{color[0400]}点击{color[ffff]}{[0001|ffff]}。
053	没问题，\n请关闭设置。
054	将{[0001|1b00]}{color[0400]}AND小节点{color[ffff]}{[0001|ffff]}与\n播放声音小节点的{[0001|1b00]}{color[0400]}播放端口{color[ffff]}{[0001|ffff]}进行连接。
055	这样一来在按下按键时\n就会有声音响起了！
056	那就让我们再次按下按键吧。
057	请用键按下墙壁装置～！
058	哔哔哔～
059	一旦有了声音，\n光是这样按来按去就很有意思了！
060	那么这个装置……\n究竟有什么用呢……
061	其实这是用来\n输入暗号答案的装置！
062	因此，接下来我们终于\n要对{[0001|1b00]}{color[0400]}暗号正误判定{color[ffff]}{[0001|ffff]}的机制\n进行编程了！
063	如果你还不知道暗号的答案……\n现在就是你破解暗号的最后机会！
064	如果你做好了被剧透答案的准备，\n就进入程序画面吧！
065	下面让我们开始对\n{[0001|1b00]}{color[0400]}正误判定的机制{color[ffff]}{[0001|ffff]}进行编程吧。
066	要想判定正误，也就是要比较\n{color[0400]}{[0001|1b00]}装置上的数字和暗号的答案\n是否一致{[0001|ffff]}{color[ffff]}……
068	所以请叫出{[0001|1b00]}{color[0400]}＝{color[ffff]}{[0001|ffff]}的{color[0400]}{[0001|1b00]}比较小节点\n{[0001|ffff]}{color[ffff]}放在蓝框处！
069	再叫出{color[0400]}{[0001|1b00]}常数小节点{[0001|ffff]}{color[ffff]}放在蓝框处。
069-01	将这个常数小节点设置为\n{color[0400]}{[0001|1b00]}暗号答案的数值{[0001|ffff]}{color[ffff]}！
070	如果你已有直面真相的决心，\n就请打开设置。
074	那么……\n请将“{[0001|1b00]}要输出什么数值？{[0001|ffff]}”设为{[0001|1b00]}{color[0400]}26.00{color[ffff]}{[0001|ffff]}。
075	也就是说……\n暗号的答案……\n就是{color[0400]}{[0001|1b00]}26{[0001|ffff]}{color[ffff]}！
076	之后我会向你说明原理的，\n现在先集中注意力编程吧～
077	那么！\n请关闭设置。
078	“那个暗号所指的结果无疑是26……\n你笃定地将数字输入装置。”
079	26是吧？\n遵命。暗号的答案是26。
080	将{[0001|1b00]}{color[0400]}计数小节点{color[ffff]}{[0001|ffff]}与\n比较小节点的{[0001|1b00]}{color[0400]}输入1端口{color[ffff]}{[0001|ffff]}进行连接～
081	将{[0001|1b00]}{color[0400]}常数小节点{color[ffff]}{[0001|ffff]}与\n比较小节点的{[0001|1b00]}{color[0400]}输入2端口{color[ffff]}{[0001|ffff]}进行连接。
084	接下来要在回答正确时\n{color[0400]}{[0001|1b00]}播放声音{[0001|ffff]}{color[ffff]}。
085	从{[0001|1b00]}{color[0400]}播放音效{color[ffff]}{[0001|ffff]}当中叫出\n{color[0400]}{[0001|1b00]}播放声音小节点{[0001|ffff]}{color[ffff]}置于蓝框处～
086	请将比较小节点的{[0001|1b00]}{color[0400]}输出端口{color[ffff]}{[0001|ffff]}与\n播放声音小节点的{[0001|1b00]}{color[0400]}播放端口{color[ffff]}{[0001|ffff]}进行连接。
087	“装置中传出铃声的脆响……\n仿佛是在向你献上祝福……”
089	叮咚――――――！！！
090	这样一来当装置上的数字为26时，\n就会响起回答正确的音效了！
091	下面就去确认一下吧～\n还有，我会向你说明破解暗号的原理！
092	请用键使出拳击按下墙上的按键，\n使装置上的数字变成{[0001|1b00]}{color[0400]}26{color[ffff]}{[0001|ffff]}。
093	叮咚！
096	这样就可以{color[0400]}{[0001|1b00]}判定{[0001|ffff]}{color[ffff]}暗号的{color[0400]}{[0001|1b00]}正误{[0001|ffff]}{color[ffff]}了！
098	你一定已经等不及了吧！\n下面我就来{color[0400]}{[0001|1b00]}说明破解暗号的原理{[0001|ffff]}{color[ffff]}～！
099	请破坏箱子。
100	先请仔细观察这个{color[0400]}{[0001|1b00]}暗号的形状{[0001|ffff]}{color[ffff]}。
102	其实这是全面展示骰子的……展开图！
107	未显示点数的白色部分\n隐藏着1个数字。
108	{color[0400]}{[0001|1b00]}淡蓝色部分{[0001|ffff]}{color[ffff]}则隐藏着{color[0400]}{[0001|1b00]}2个{[0001|ffff]}{color[ffff]}数字。
109	而装置的{color[0400]}{[0001|1b00]}淡蓝色方块{[0001|ffff]}{color[ffff]}上面\n也有2位数字。
110	就是说！只要将\n{color[0400]}{[0001|1b00]}隐藏在暗号淡蓝色部分的数字\n{[0001|ffff]}{color[ffff]}输入装置就可以了！
113	那么，淡蓝色部分的数字\n究竟是哪两个呢！？
114	我们能够看见的有1、3、5三个数字，\n那么看不见的就是……\n{color[0400]}{[0001|1b00]}2、4、6{[0001|ffff]}{color[ffff]}当中的某两个了。
116	因此只要利用{color[0400]}{[0001|1b00]}骰子的某一特性{[0001|ffff]}{color[ffff]}，\n就能将各个面的点数全部推理出来！
118	其实骰子有一个特性……\n那就是其相对的两个面的\n点数之和必然是{color[0400]}{[0001|1b00]}7{[0001|ffff]}{color[ffff]}。
119	{color[0400]}{[0001|1b00]}1{[0001|ffff]}{color[ffff]}的对面是{color[0400]}{[0001|1b00]}6{[0001|ffff]}{color[ffff]}，\n{color[0400]}{[0001|1b00]}2{[0001|ffff]}{color[ffff]}的对面是{color[0400]}{[0001|1b00]}5{[0001|ffff]}{color[ffff]}，\n{color[0400]}{[0001|1b00]}3{[0001|ffff]}{color[ffff]}的对面是{color[0400]}{[0001|1b00]}4{[0001|ffff]}{color[ffff]}。
120	如果把展开图重新拼成骰子，\n这里是{color[0400]}{[0001|1b00]}3{[0001|ffff]}{color[ffff]}的对面～
121	因此点数应当是{color[0400]}{[0001|1b00]}4{[0001|ffff]}{color[ffff]}。
122	这里是{color[0400]}{[0001|1b00]}5{[0001|ffff]}{color[ffff]}的对面～
123	因此点数应当是{color[0400]}{[0001|1b00]}2{[0001|ffff]}{color[ffff]}……
124	而这里是{color[0400]}{[0001|1b00]}1{[0001|ffff]}{color[ffff]}的对面～
125	点数自然就是{color[0400]}{[0001|1b00]}6{[0001|ffff]}{color[ffff]}了！
126	所以～\n淡蓝色部分的两个数字是{color[0400]}{[0001|1b00]}2{[0001|ffff]}{color[ffff]}和{color[0400]}{[0001|1b00]}6{[0001|ffff]}{color[ffff]}！
128	也就是说正确答案就是{color[0400]}{[0001|1b00]}26{[0001|ffff]}{color[ffff]}！！
129	以上就是破解暗号的原理～～
130	{[0201]}，\n当你请别人玩这个游戏时，\n也可以志得意满地讲给他们听哦！
131	不过……在这个程序中，\n即使{color[0400]}{[0001|1b00]}不破坏箱子{[0001|ffff]}{color[ffff]}直接输入26，\n也会被判定为正确答案。
133	{color[0400]}{[0001|1b00]}没有发现暗号{[0001|ffff]}{color[ffff]}，就碰巧给出正确答案，\n这样未免太扫兴了～
138	因此让我们将{color[0400]}{[0001|1b00]}破坏箱子{[0001|ffff]}{color[ffff]}设为\n答案会被判定为正确的{color[0400]}{[0001|1b00]}前提{[0001|ffff]}{color[ffff]}吧～
139	首先要设法检查{color[0400]}{[0001|1b00]}箱子损坏{[0001|ffff]}{color[ffff]}与否。
140	这是我们在第4步中\n制作的破坏箱子的程序。
141	这个比较小节点会在\n{color[0400]}{[0001|1b00]}箱子损坏后持续输出信号{[0001|ffff]}{color[ffff]}～～
142	因此可以用来\n检查{color[0400]}{[0001|1b00]}箱子损坏{[0001|ffff]}{color[ffff]}与否！
143	请叫出{color[0400]}{[0001|1b00]}无线传送入口小节点{[0001|ffff]}{color[ffff]}放在蓝框处。
144	连接{[0001|1b00]}{color[0400]}比较小节点{color[ffff]}{[0001|ffff]}与{[0001|1b00]}{color[0400]}无线传送入口小节点{color[ffff]}{[0001|ffff]}。
145	这里是入口A，\n负责报告箱子损坏与否！\n请讲！
146	请叫出{color[0400]}{[0001|1b00]}无线传送出口小节点{[0001|ffff]}{color[ffff]}放在蓝框处。
147	这里是出口A，\n负责报告箱子损坏与否！\n请讲！
148	这样就可以\n检查{color[0400]}{[0001|1b00]}箱子损坏{[0001|ffff]}{color[ffff]}的情况了！
150	接下来！\n让我们{color[0400]}{[0001|1b00]}检查{[0001|ffff]}{color[ffff]}“箱子是否损坏”以及\n“装置的数字是否为26”{color[0400]}{[0001|1b00]}这两个条件{[0001|ffff]}{color[ffff]}！
151	请叫出{color[0400]}{[0001|1b00]}AND小节点{[0001|ffff]}{color[ffff]}放在蓝框处。
152	删除这条线。
153	再见！
154	将{[0001|1b00]}{color[0400]}无线传送出口小节点{color[ffff]}{[0001|ffff]}与\nAND小节点的{[0001|1b00]}{color[0400]}输入2端口{color[ffff]}{[0001|ffff]}进行连接。
155	负责检查{color[0400]}{[0001|1b00]}装置上的数字是否为26{[0001|ffff]}{color[ffff]}的\n是这个比较小节点～
156	因此要将比较小节点的{[0001|1b00]}{color[0400]}输出端口{color[ffff]}{[0001|ffff]}与\nAND小节点的{[0001|1b00]}{color[0400]}输入1端口{color[ffff]}{[0001|ffff]}进行连接。
157	装置是否为26，没问题！\n箱子是否损坏，没问题！
158	如果两边都收到信号，\n就会判定回答正确！
160	那么……\n请将AND小节点的{[0001|1b00]}{color[0400]}输出端口{color[ffff]}{[0001|ffff]}与\n播放声音小节点的{[0001|1b00]}{color[0400]}播放端口{color[ffff]}{[0001|ffff]}进行连接。
161	这样一来，\n应该只有在破坏箱子之后\n才能得到回答正确的判定了！
162	亲眼看看效果吧～
163	请在{color[0400]}{[0001|1b00]}不破坏箱子{[0001|ffff]}{color[ffff]}的前提下，\n按下墙壁的装置{color[0400]}{[0001|1b00]}26次{[0001|ffff]}{color[ffff]}。
164	我说过了，{color[0400]}{[0001|1b00]}不要破坏箱子{[0001|ffff]}{color[ffff]}……
164-01	请重来一遍。
165	没问题，\n什么都没有发生！
167	可以请你重来一次吗？
168	这次请在{color[0400]}{[0001|1b00]}破坏箱子之后{[0001|ffff]}{color[ffff]}，\n按下墙壁的装置26次。
169	我们听到了回答正确的音效！
173	至此！！{color[0400]}{[0001|1b00]}\n解谜部分{[0001|ffff]}{color[ffff]}就全部完成了！！！
174	前往程序画面！
175	那么～～～这样一来～～～～～
176	第6步就完成了！！！
177	恭喜你，\n又完成了一步。
178	恭……恭喜你！
179	我更关心……\n破解谜题后会发生什么！
180	♫恭喜～恭喜～恭喜你～～～～～♪
181	这次我们通过编程\n让向墙上的装置输入暗号成为可能！
184	而在下个步骤中！\n我们终于要编程实现在解开谜题后\n{[0001|1b00]}{color[0400]}开启隐藏门的机制{color[ffff]}{[0001|ffff]}！
185	“墙壁一分为二，\n密室沉重的大门缓缓打开……\n你咽了口口水，紧张地注视着它的动静……”
186	“未完待续……”
187	那么让我们在下个步骤再会～
Lesson_SecretRoom_06.msbt
000	欢迎来到……\n解谜房间的第7步。
001	上次我们编程制作了\n{color[0400]}{[0001|1b00]}墙壁装置的机关{[0001|ffff]}{color[ffff]}。
005	而这次……！\n我们将编程实现\n让隐藏门{[0001|1b00]}{color[0400]}自动打开的机制{color[ffff]}{[0001|ffff]}！
006	现在，隐藏门\n是通过摇杆来操作的～
007	我们要让门{color[0400]}{[0001|1b00]}在谜题真相大白后\n能够自动开启{[0001|ffff]}{color[ffff]}！
008	在谜题破解之际，\n让门先向{color[0400]}{[0001|1b00]}内侧移动{[0001|ffff]}{color[ffff]}……
009	然后{color[0400]}{[0001|1b00]}向侧面滑动{[0001|ffff]}{color[ffff]}打开……\n这样的{color[0400]}{[0001|1b00]}两段动作组合\n{[0001|ffff]}{color[ffff]}就是我们的目标～！
010	那么，让我们开始编程吧！
011	先和连接着自由滑动连接小节点的\n{color[0400]}{[0001|1b00]}摇杆小节点{[0001|ffff]}{color[ffff]}们告别吧。
012	请和{[0001|1b00]}{color[0400]}左右方向的摇杆小节点{color[ffff]}{[0001|ffff]}说再见。
013	还有{[0001|1b00]}{color[0400]}上下方向的摇杆小节点{color[ffff]}{[0001|ffff]}，拜拜～
014	要让门在谜题真相大白之时……\n也就是满足“{color[0400]}{[0001|1b00]}箱子损坏{[0001|ffff]}{color[ffff]}”和“{color[0400]}{[0001|1b00]}装置的数字\n与暗号的答案一致{[0001|ffff]}{color[ffff]}”这两个条件时开始移动！
014-01	这种情况下输出信号的\n是这个{color[0400]}{[0001|1b00]}AND小节点{[0001|ffff]}{color[ffff]}……
015	因此要在这个{color[0400]}{[0001|1b00]}AND小节点\n输出信号时让门移动{[0001|ffff]}{color[ffff]}！
017	这会是一个比较复杂的程序，\n因此我们要使用{color[0400]}{[0001|1b00]}无线传送{[0001|ffff]}{color[ffff]}。
018	请叫出{color[0400]}{[0001|1b00]}无线传送入口小节点{[0001|ffff]}{color[ffff]}放在蓝框处。
019	打开设置～
020	请将{[0001|1b00]}传送ID{[0001|ffff]}设为{[0001|1b00]}{color[0400]}B{color[ffff]}{[0001|ffff]}。
021	没问题，\n关闭设置。
022	然后请连接{[0001|1b00]}{color[0400]}AND小节点{color[ffff]}{[0001|ffff]}与\n{[0001|1b00]}{color[0400]}无线传送入口小节点{color[ffff]}{[0001|ffff]}。
023	这里是入口B，\n负责报告“谜题真相大白”！\n请讲！
024	接下来要为门的移动编程，\n请移动至空白区域。
025	请叫出{color[0400]}{[0001|1b00]}无线传送出口小节点{[0001|ffff]}{color[ffff]}放在蓝框处。
026	打开设置。
027	请将{[0001|1b00]}传送ID{[0001|ffff]}设为{[0001|1b00]}{color[0400]}B{color[ffff]}{[0001|ffff]}。
028	没问题，\n关闭设置吧！
029	这里是出口B，\n负责报告“谜题真相大白”！\n请讲！
030	那么，\n首先编程让隐藏门向{color[0400]}{[0001|1b00]}内侧{[0001|ffff]}{color[ffff]}……\n也就是{color[0400]}{[0001|1b00]}X方向{[0001|ffff]}{color[ffff]}移动吧！
032	叫出{[0001|1b00]}{color[0400]}计数小节点{color[ffff]}{[0001|ffff]}移至蓝框处。
033	打开设置～
034	将{[0001|1b00]}模式{[0001|ffff]}设为{[0001|1b00]}{color[0400]}范围限制{color[ffff]}{[0001|ffff]}。
035	将{[0001|1b00]}计数范围{[0001|ffff]}设为{[0001|1b00]}{color[0400]}0{color[ffff]}{[0001|ffff]}至{[0001|1b00]}{color[0400]}60{color[ffff]}{[0001|ffff]}。
036	没问题，\n关闭设置吧。
037	将{[0001|1b00]}{color[0400]}无线传送出口小节点{color[ffff]}{[0001|ffff]}与\n计数小节点的{[0001|1b00]}{color[0400]}增加端口{color[ffff]}{[0001|ffff]}进行连接。
038	我会从0数到60。
039	然后将{color[0400]}{[0001|1b00]}计数所得的数值\n{[0001|ffff]}{color[ffff]}转换成隐藏门移动的{color[0400]}{[0001|1b00]}距离{[0001|ffff]}{color[ffff]}～
040	叫出{[0001|1b00]}{color[0400]}映射小节点{color[ffff]}{[0001|ffff]}置于蓝框处。
041	……要打开\n……隐藏门是吗～？
042	毫不留情地曝光他人的秘密……\n呵呵呵……你真蛮不讲理～
043	……呃～\n打开设置吧。
044	请将{[0001|1b00]}输入范围{[0001|ffff]}设为{[0001|1b00]}{color[0400]}0.00{color[ffff]}{[0001|ffff]}至{[0001|1b00]}{color[0400]}60.00{color[ffff]}{[0001|ffff]}～
045	将{[0001|1b00]}输出范围{[0001|ffff]}设为{[0001|1b00]}{color[0400]}0.00{color[ffff]}{[0001|ffff]}至{[0001|1b00]}{color[0400]}0.30{color[ffff]}{[0001|ffff]}。
046	没问题，\n关闭设置吧。
047	将计数小节点的{[0001|1b00]}{color[0400]}输出端口{color[ffff]}{[0001|ffff]}\n连接到映射小节点的{[0001|1b00]}{color[0400]}输入端口{color[ffff]}{[0001|ffff]}。
048	这样一来，计数小节点统计的数值\n就能转换成隐藏门的移动距离了！
049	将转换结果传递给\n{[0001|1b00]}{color[0400]}自由滑动连接小节点{color[ffff]}{[0001|ffff]}吧～
050	叫出{[0001|1b00]}{color[0400]}无线传送入口小节点\n{color[ffff]}{[0001|ffff]}并移至映射小节点旁边。
051	打开设置。
052	请将{[0001|1b00]}传送ID{[0001|ffff]}设为{[0001|1b00]}{color[0400]}X{color[ffff]}{[0001|ffff]}。
052-01	因为该无线传送是用于实现{[0001|1b00]}{color[0400]}X方向{color[ffff]}{[0001|ffff]}上的移动，\n所以将{[0001|1b00]}传送ID{[0001|ffff]}设为{[0001|1b00]}{color[0400]}X{color[ffff]}{[0001|ffff]}以便一目了然！
052-02	建议以汉语拼音或英文首字母\n来设置{color[0400]}{[0001|1b00]}传送ID以便区分{[0001|ffff]}{color[ffff]}！
053	关闭设置吧。
054	请连接{[0001|1b00]}{color[0400]}映射小节点\n{color[ffff]}{[0001|ffff]}与{[0001|1b00]}{color[0400]}无线传送入口小节点{color[ffff]}{[0001|ffff]}。
055	这里是入口X，\n负责报告转换后的距离！\n请讲！
056	叫出{color[0400]}{[0001|1b00]}无线传送出口小节点{[0001|ffff]}{color[ffff]}放在蓝框处～
057	打开设置！
058	将{[0001|1b00]}传送ID{[0001|ffff]}设为{[0001|1b00]}{color[0400]}X{color[ffff]}{[0001|ffff]}。
059	好了～\n请关闭设置。
060	这里是出口X，\n负责报告转换后的距离！\n请讲！
061	将无线传送出口小节点与\n自由滑动连接小节点的{[0001|1b00]}{color[0400]}X端口{color[ffff]}{[0001|ffff]}进行连接。
068-00	这样一来当谜题真相大白后，\n门就会向X方向移动了！
068	去实际看看门是如何移动的吧～
069	请在破坏箱子后\n将墙壁装置的数字设为26。
070	如果一下子按太多次导致数字超过26，\n请按“重来”，或继续按键\n循环一圈后再停在26即可。
073	隐藏门稍微移动了一点！
075	还早着呢……！\n这只相当于热身而已！
076	我们接下来还要编程\n让门向侧面滑动！
077	前往程序画面～
078	在继续编程之前……
079	我们发现每次确认时\n都要将数字输入装置，\n未免过于繁琐……
080	因此我们要想办法让{color[0400]}{[0001|1b00]}门\n{[0001|ffff]}{color[ffff]}在游戏开始后{color[0400]}{[0001|1b00]}立即移动{[0001|ffff]}{color[ffff]}！
081	请叫出{[0001|1b00]}{color[0400]}常数小节点{color[ffff]}{[0001|ffff]}放在蓝框处。
082	将{[0001|1b00]}{color[0400]}常数小节点{color[ffff]}{[0001|ffff]}与\n计数小节点的{[0001|1b00]}{color[0400]}增加端口{color[ffff]}{[0001|ffff]}进行连接。
082-01	你好！我会始终不变地\n向计数小节点发送同一个信号！
082-02	这样一来在游戏开始后，\n门就会立即移动以便于确认了！
083	这就是……\n{color[0400]}{[0001|1b00]}用心程度决定开发效率{[0001|ffff]}{color[ffff]}……！
084	让我们看看发生了什么变化吧。
085	门立即动起来了！
086	这样一定能提升开发效率！
087	那就让我们继续编程吧。
088	接下来要编程让隐藏门\n在Z方向上移动……\n也就是{[0001|1b00]}{color[0400]}向侧面滑动{color[ffff]}{[0001|ffff]}！
089	我们想让隐藏门\n{color[0400]}{[0001|1b00]}先向内侧移动后{[0001|ffff]}{color[ffff]}，再向侧面移动～
090	因此先要检查门是否已经向内侧移动。
091	请叫出{[0001|1b00]}{color[0400]}＝{color[ffff]}{[0001|ffff]}的{color[0400]}{[0001|1b00]}比较小节点{[0001|ffff]}{color[ffff]}放在蓝框处。
092	再叫出{[0001|1b00]}{color[0400]}常数小节点{color[ffff]}{[0001|ffff]}放在蓝框处！
093	打开设置～
094	将“{[0001|1b00]}要输出什么数值？{[0001|ffff]}”设为{[0001|1b00]}{color[0400]}60.00{color[ffff]}{[0001|ffff]}。
095	好的～\n请关闭设置。
096	将计数小节点的{[0001|1b00]}{color[0400]}输出端口{color[ffff]}{[0001|ffff]}与\n比较小节点的{[0001|1b00]}{color[0400]}输入1端口{color[ffff]}{[0001|ffff]}进行连接。
097	将这边的{[0001|1b00]}{color[0400]}常数小节点{color[ffff]}{[0001|ffff]}与\n比较小节点的{[0001|1b00]}{color[0400]}输入2端口{color[ffff]}{[0001|ffff]}进行连接～
098	计数小节点究竟是否已经数到60？\n我真的很想知道！！
100	那么让我们来编程实现\n{color[0400]}{[0001|1b00]}向侧面滑动的动作{[0001|ffff]}{color[ffff]}吧。
101	请叫出{[0001|1b00]}{color[0400]}计数小节点{color[ffff]}{[0001|ffff]}放在蓝框处。
102	打开设置。
103	将{[0001|1b00]}模式{[0001|ffff]}设为{[0001|1b00]}{color[0400]}范围限制{color[ffff]}{[0001|ffff]}。
104	将{[0001|1b00]}计数范围{[0001|ffff]}设为{[0001|1b00]}{color[0400]}0{color[ffff]}{[0001|ffff]}至{[0001|1b00]}{color[0400]}180{color[ffff]}{[0001|ffff]}。
104-01	之前的计数小节点的计数范围是0至60，\n因此本次计数将耗费之前的{[0001|1b00]}{color[0400]}3倍时间{color[ffff]}{[0001|ffff]}。
105	关闭设置吧。
106	将比较小节点的{[0001|1b00]}{color[0400]}输出端口{color[ffff]}{[0001|ffff]}与\n计数小节点的{[0001|1b00]}{color[0400]}增加端口{color[ffff]}{[0001|ffff]}进行连接。
107	我会从0数到180。
108	我会在那位计数小节点\n{[0001|1b00]}{color[0400]}计数完成后{color[ffff]}{[0001|ffff]}再开始计数。
110	下面将{color[0400]}{[0001|1b00]}计数所得的数值\n{[0001|ffff]}{color[ffff]}转换成移动{color[0400]}{[0001|1b00]}距离{[0001|ffff]}{color[ffff]}吧。
111	叫出{[0001|1b00]}{color[0400]}映射小节点{color[ffff]}{[0001|ffff]}，\n放在计数小节点旁边！
112	打开设置。
113	请将{[0001|1b00]}输入范围{[0001|ffff]}设为{[0001|1b00]}{color[0400]}0.00{color[ffff]}{[0001|ffff]}至{[0001|1b00]}{color[0400]}180.00{color[ffff]}{[0001|ffff]}～
114	将{[0001|1b00]}输出范围{[0001|ffff]}设为{[0001|1b00]}{color[0400]}-3.20{color[ffff]}{[0001|ffff]}至{[0001|1b00]}{color[0400]}0.00{color[ffff]}{[0001|ffff]}。
115	然后请按下{color[0400]}{[0001|0500]}{[0001|ffff]}{color[ffff]}键{[0001|1b00]}{color[0400]}反转{color[ffff]}{[0001|ffff]}映射的方向！
117	这样一来，当输入为{color[0400]}{[0001|1b00]}0.00{[0001|ffff]}{color[ffff]}时，输出为{color[0400]}{[0001|1b00]}0.00{[0001|ffff]}{color[ffff]}；\n当输入为{color[0400]}{[0001|1b00]}180.00{[0001|ffff]}{color[ffff]}时，输出为{color[0400]}{[0001|1b00]}-3.20{[0001|ffff]}{color[ffff]}。
119	关闭设置吧。
120	接下来，请将计数小节点的{[0001|1b00]}{color[0400]}输出端口{color[ffff]}{[0001|ffff]}\n连接到映射小节点的{[0001|1b00]}{color[0400]}输入端口{color[ffff]}{[0001|ffff]}。
121	啊～～\n秘密很快就要曝光了～～
122	将转换结果传递给\n{[0001|1b00]}{color[0400]}自由滑动连接小节点{color[ffff]}{[0001|ffff]}吧。
123	请叫出{[0001|1b00]}{color[0400]}无线传送入口小节点{color[ffff]}{[0001|ffff]}放在旁边！
124	打开设置……
125	因为传送的是Z方向上的移动情况，\n所以请将{[0001|1b00]}传送ID{[0001|ffff]}设为{[0001|1b00]}{color[0400]}Z{color[ffff]}{[0001|ffff]}以便一目了然。
126	不错，\n关闭设置吧。
127	然后请连接{[0001|1b00]}{color[0400]}映射小节点{color[ffff]}{[0001|ffff]}与\n{[0001|1b00]}{color[0400]}无线传送入口小节点{color[ffff]}{[0001|ffff]}。
128	这里是入口Z，\n负责报告Z方向的距离！\n请讲！
129	请叫出{[0001|1b00]}{color[0400]}无线传送出口小节点\n{color[ffff]}{[0001|ffff]}放在蓝框处。
130	打开设置～
131	将{[0001|1b00]}传送ID{[0001|ffff]}设为{[0001|1b00]}{color[0400]}Z{color[ffff]}{[0001|ffff]}。
132	没问题！\n关闭设置！
133	这里是出口Z，\n负责报告Z方向的距离！\n请讲！
134	将无线传送出口小节点与\n自由滑动连接小节点的{[0001|1b00]}{color[0400]}Z端口{color[ffff]}{[0001|ffff]}进行连接。
135	“门缓缓地开始移动，\n仿佛是在凸显密室的存在感……”
136	啊，门的移动编程完成了？
137	那就去游戏画面中欣赏一下\n我工作的英姿如何？
138	好！这就去看看吧！
142	万无一失！\n现在隐藏门会自动打开了～～！
144	两段式开法！\n好有型～～！！
145	请在尽情体验之后\n前往程序画面。
146	那么～～～这样一来～～～～～
147	第7步就完成了！！！
148	真有两下子啊。
149	恭喜啦～
150	恭喜你！\n请讲。
151	恭喜你，又完成了一步。
152	这次～\n我们编程实现了让隐藏门\n有型地自动打开的机制～
153	在下个步骤中，\n我们还要让隐藏门\n移动的架势{[0001|1b00]}{color[0400]}更加有型{color[ffff]}{[0001|ffff]}！
154	一定要为解谜设计一个\n完美的谢幕动作～！
155	“齿轮发出巨响，房间随之震颤……\n你即将亲眼目睹……\n门完全打开的瞬间……”
156	“未完待续……”
157	那么让我们在下个步骤再会～
Lesson_SecretRoom_07.msbt
000	你来了！\n{[0201]}。
001	上次我们编程实现了\n让隐藏门{color[0400]}{[0001|1b00]}自动打开的机制{[0001|ffff]}{color[ffff]}。
005	这次我们将让门打开的架势变得更加有型，\n为迎接解谜闭幕的时刻奏响最强乐章！！
006	高潮即将到来！\n让我们前往程序画面！
007	首先要在{color[0400]}{[0001|1b00]}隐藏门\n完全打开之时{[0001|ffff]}{color[ffff]}让特效出现。
009	隐藏门完全打开之时……\n就是这个{color[0400]}{[0001|1b00]}计数小节点{[0001|ffff]}{color[ffff]}数到{color[0400]}{[0001|1b00]}180{[0001|ffff]}{color[ffff]}之时！
010	请叫出{[0001|1b00]}{color[0400]}＝{color[ffff]}{[0001|ffff]}的{color[0400]}{[0001|1b00]}比较小节点{[0001|ffff]}{color[ffff]}放在蓝框处。
011	再叫出{[0001|1b00]}{color[0400]}常数小节点{color[ffff]}{[0001|ffff]}置于蓝框处。
012	打开设置～
013	将“{[0001|1b00]}要输出什么数值？{[0001|ffff]}”设为{[0001|1b00]}{color[0400]}180.00{color[ffff]}{[0001|ffff]}。
014	请关闭设置。
015	将计数小节点的{[0001|1b00]}{color[0400]}输出端口{color[ffff]}{[0001|ffff]}与\n比较小节点的{[0001|1b00]}{color[0400]}输入1端口{color[ffff]}{[0001|ffff]}进行连接……
016	将{[0001|1b00]}{color[0400]}常数小节点{color[ffff]}{[0001|ffff]}与\n比较小节点的{[0001|1b00]}{color[0400]}输入2端口{color[ffff]}{[0001|ffff]}进行连接。
017	“……当这扇沉重的门停下时，\n房间里究竟会发生什么呢？”
019	会发生什么呢！？
020	那么，就为门完全打开之时添加特效吧！
021	叫出{[0001|1b00]}{color[0400]}拉炮{color[ffff]}{[0001|ffff]}的特效小节点置于蓝框处。
022	将比较小节点的{[0001|1b00]}{color[0400]}输出端口{color[ffff]}{[0001|ffff]}与\n{[0001|1b00]}{color[0400]}特效小节点{color[ffff]}{[0001|ffff]}进行连接。
024	让门完全打开的那一瞬间\n嗨起来是吧？
025	好！大家一起唱！\n小兔儿乖乖～～\n把门儿开开～～～！！
026	……不开不开我不开～～
027	好！让我们去看看\n在门完全打开的瞬间会发生什么吧～！
028	噼里啪啦～！
029	在门完全打开之时\n响起了拉炮声～！
031	真喜庆啊！
032	但是……\n这还远远不够！
033	如果隐藏门……\n能够开得更有气势……就好了！
037	为开门添加音效，\n让气氛更加热烈吧！
038	目标是要在\n{[0001|1b00]}{color[0400]}门打开的过程中{color[ffff]}{[0001|ffff]}发出声音。
039	在门打开的过程中……换言之\n就是{color[0400]}{[0001|1b00]}在门尚未完全开启时{[0001|ffff]}{color[ffff]}播放声音。
040	这个{color[0400]}{[0001|1b00]}比较小节点{[0001|ffff]}{color[ffff]}将在\n{[0001|1b00]}{color[0400]}门完全开启时{color[ffff]}{[0001|ffff]}输出信号……
041	因此要连接{color[0400]}{[0001|1b00]}NOT小节点{[0001|ffff]}{color[ffff]}，{color[0400]}{[0001|1b00]}\n使之在门尚未完全打开时{[0001|ffff]}{color[ffff]}输出信号！
042	请叫出{color[0400]}{[0001|1b00]}NOT小节点{[0001|ffff]}{color[ffff]}放在蓝框处。
043	将比较小节点的{[0001|1b00]}{color[0400]}输出端口{color[ffff]}{[0001|ffff]}与\nNOT小节点的{[0001|1b00]}{color[0400]}输入端口{color[ffff]}{[0001|ffff]}进行连接。
044	从{[0001|1b00]}{color[0400]}播放音效{color[ffff]}{[0001|ffff]}当中叫出\n{color[0400]}{[0001|1b00]}播放声音小节点{[0001|ffff]}{color[ffff]}放在蓝框处。
045	打开设置。
046	请在{[0001|1b00]}机器{[0001|ffff]}中选择{[0001|1b00]}{color[0400]}齿轮{color[ffff]}{[0001|ffff]}。
047	好！\n关闭设置吧。
048	将{[0001|1b00]}{color[0400]}NOT小节点{color[ffff]}{[0001|ffff]}与\n播放声音小节点的{[0001|1b00]}{color[0400]}播放端口{color[ffff]}{[0001|ffff]}进行连接。
049	“铁齿与铁齿啮合的声音\n令整个房间为之震颤……”
050	低沉的怒吼声……\n……我也会为你发出哦。
051	让我们去听听是什么样的声音吧！
052	这声音……令人颤抖。
053	将大门开启的沉重感展露无遗！
056	不过……\n其实这个音效程序并不完善。
057	返回程序画面确认一下吧。
058	和用于确认门的移动情况的\n常数小节点{color[0400]}{[0001|1b00]}告别{[0001|ffff]}{color[ffff]}吧。
059	拜拜！
059-01	这样一来就回到了\n{color[0400]}{[0001|1b00]}在谜题真相大白之后{[0001|ffff]}{color[ffff]}，\n{color[0400]}{[0001|1b00]}门才会开启{[0001|ffff]}{color[ffff]}的状态。
060	现在我们去看看会发生什么～
061	门明明没在移动，\n但却一直能听到齿轮的声音……
063	我们通过编程实现的是\n{color[0400]}{[0001|1b00]}在门尚未完全开启时{[0001|ffff]}{color[ffff]}发出音效……
064	但{color[0400]}{[0001|1b00]}谜题真相大白之前\n{[0001|ffff]}{color[ffff]}同样属于“门尚未完全开启时”……\n所以音效才会响个不停！
066	因此我们要修正这个问题，\n使音效不会{color[0400]}{[0001|1b00]}在谜题真相大白之前{[0001|ffff]}{color[ffff]}响起～
067	请先删除这条线。
068	删除！
068-01	呼……\n安静下来了……
068-02	那么就将声音响起的条件修改为\n{color[0400]}{[0001|1b00]}谜题已真相大白{[0001|ffff]}{color[ffff]}且{[0001|1b00]}{color[0400]}门尚未完全开启{color[ffff]}{[0001|ffff]}吧 ！
069	这就需要对“{color[0400]}{[0001|1b00]}谜题是否已真相大白{[0001|ffff]}{color[ffff]}”以及\n“{[0001|1b00]}{color[0400]}门是否完全开启{color[ffff]}{[0001|ffff]}”{[0001|1b00]}{color[0400]}两者{color[ffff]}{[0001|ffff]}进行检查！
070	既然要检查两项内容……\n请叫出{[0001|1b00]}{color[0400]}AND小节点{color[ffff]}{[0001|ffff]}放在蓝框处。
071	在{color[0400]}{[0001|1b00]}谜题已真相大白{[0001|ffff]}{color[ffff]}时\n输出信号的是……
072	请{color[0400]}{[0001|1b00]}复制{[0001|ffff]}{color[ffff]}这个{[0001|1b00]}{color[0400]}无线传送出口小节点{color[ffff]}{[0001|ffff]}。
073	复制！
074	请将其放在蓝框处。
075	将NOT小节点的{[0001|1b00]}{color[0400]}输出端口{color[ffff]}{[0001|ffff]}与\nAND小节点的{[0001|1b00]}{color[0400]}输入1端口{color[ffff]}{[0001|ffff]}进行连接。
076	将{[0001|1b00]}{color[0400]}无线传送出口小节点{color[ffff]}{[0001|ffff]}与\nAND小节点的{[0001|1b00]}{color[0400]}输入2端口{color[ffff]}{[0001|ffff]}进行连接。
077	门是否完全开启，没问题！\n谜题是否已真相大白，没问题！
078	当两边都没问题时，\n就代表门正在移动！
079	将这个{[0001|1b00]}{color[0400]}AND小节点{color[ffff]}{[0001|ffff]}连接到\n播放声音小节点的{[0001|1b00]}{color[0400]}播放端口{color[ffff]}{[0001|ffff]}。
080	这样一来，{color[0400]}{[0001|1b00]}只有在门正在移动时{[0001|ffff]}{color[ffff]}，\n音效才会响起了！
081	去确认一下吧！
082	没听见齿轮的声音！
084	接下来！请先破坏箱子，\n再将墙壁装置的数字设为26。
085	如果一下子按了太多次，\n请按“重来”，或继续按键\n循环一圈后再停在26即可。
086	……
087	万无一失！
088	现在只有在门正在移动时\n声音才会响起了！
089	至此！\n{color[0400]}{[0001|1b00]}隐藏门{[0001|ffff]}{color[ffff]}宣告完成！！！
090	请前往程序画面。
091	那么～～～这样一来～～～～～
092	第8步就完成了！！！
093	恭喜啦～
094	恭喜你！
095	不可喜不可贺～\n嘿嘿嘿。
096	恭喜恭喜恭喜你～♪
097	这次我们为隐藏门打开的动作\n添加了特效和音效！
099	下个步骤将是\n制作这款游戏的{[0001|1b00]}{color[0400]}最后一步{color[ffff]}{[0001|ffff]}！
100	尽管谜题已真相大白，\n密室之门也已打开……
101	但本该出现的{[0001|1b00]}{color[0400]}重要的东西{color[ffff]}{[0001|ffff]}\n到哪儿去了……？
102	没错！\n那就是密室里的{[0001|1b00]}{color[0400]}宝藏{color[ffff]}{[0001|ffff]}！！！
103	至于那是什么宝藏，\n决定权在于{[0201]}！
104	请先开始思考\n要放置什么样的宝藏吧！
105	“谜题真相大白，密室之门洞开……\n被隐藏的宝藏……终于、终于\n即将出现在你眼前……”
106	“未完待续……”
107	那么让我们在下个步骤再会～
Lesson_SecretRoom_08.msbt
000	欢迎光临！！\n{[0201]}。
002	这次我们终于将迎来\n{[0001|1b00]}{color[0400]}解谜房间{color[ffff]}{[0001|ffff]}的大结局……\n也就是最后一个步骤！
003	让我们来编程设计\n{[0001|1b00]}{color[0400]}BGM{color[ffff]}{[0001|ffff]}与{[0001|1b00]}{color[0400]}隐藏的宝藏{color[ffff]}{[0001|ffff]}，\n为这次的解谜画上句号吧！
004	事不宜迟！\n快进入程序画面吧！
005	首先是BGM……
007	我们要为{color[0400]}{[0001|1b00]}解谜时{[0001|ffff]}{color[ffff]}与{color[0400]}{[0001|1b00]}真相大白后{[0001|ffff]}{color[ffff]}\n安排不同的BGM！
008	就从{color[0400]}{[0001|1b00]}解谜时{[0001|ffff]}{color[ffff]}的BGM开始编程吧。
009	叫出{[0001|1b00]}{color[0400]}BGM小节点{color[ffff]}{[0001|ffff]}放在蓝框处。
009-01	这个NOT小节点会在\n门尚未完全开启时输出信号……
010	因此请将这个{color[0400]}{[0001|1b00]}NOT小节点{[0001|ffff]}{color[ffff]}\n连接到BGM小节点的{[0001|1b00]}{color[0400]}播放端口{color[ffff]}{[0001|ffff]}。
012	耶！\n真相难寻谜成堆，\n为题消得人憔悴！
013	看你能否解暗号，\n成功之日变富豪！
013-01	解谜时的{color[0400]}{[0001|1b00]}乐曲{[0001|ffff]}{color[ffff]}……\n就先保持原本的设置吧。
014	接下来是谜题真相大白后，\n也就是{color[0400]}{[0001|1b00]}找到宝藏时{[0001|ffff]}{color[ffff]}的BGM。
015	叫出{[0001|1b00]}{color[0400]}BGM小节点{color[ffff]}{[0001|ffff]}放在蓝框处。
015-01	在门完全开启后，\n这个{color[0400]}{[0001|1b00]}比较小节点{[0001|ffff]}{color[ffff]}就会输出信号……
016	所以我们将比较小节点与\nBGM小节点的{[0001|1b00]}{color[0400]}播放端口{color[ffff]}{[0001|ffff]}进行连接。
018	耶！\n解开了千古之谜，\n成就感无与伦比！
019	宝藏到手爽歪歪，\n全都归我真痛快！
020	为了能清楚地分辨出\n两首BGM发生了切换～
021	为第2个BGM小节点\n设置不同的乐曲吧！
022	请打开上方的BGM小节点的设置。
023	将{[0001|1b00]}乐曲{[0001|ffff]}设为{color[0400]}{[0001|1b00]}勇敢{[0001|ffff]}{color[ffff]}。
024	没问题！\n关闭设置。
025	好，让我们去确认一下\nBGM的切换情况！
027	请在破坏箱子后\n将墙上装置的数字设为26以破解谜题。
029	切换成不同的乐曲了！
030	像往常一样，\n稍后会给{[0201]}时间\n随自己的喜好选择乐曲～
031	现在我们先就其他内容\n继续编程吧～
032	那么接下来！\n终于要开始制作{[0001|1b00]}{color[0400]}隐藏的宝藏{color[ffff]}{[0001|ffff]}了！
033	叫出并放大{[0001|1b00]}{color[0400]}材质小节点\n{color[ffff]}{[0001|ffff]}以制作宝藏。
034	请切换成{[0001|1b00]}{color[0400]}水平视角{color[ffff]}{[0001|ffff]}～
035	将他移至地板上方。
036	然后请返回{[0001|1b00]}{color[0400]}俯瞰视角{color[ffff]}{[0001|ffff]}。
037	“静静地躺在密室里的，\n就是你寻觅已久的、\n梦寐以求的宝藏。”
038	请画出你心目中的宝藏。
039	你的宝藏可以\n不拘于任何外观上的限制。
041	其实材质小节点\n即使{color[0400]}{[0001|1b00]}不{[0001|ffff]}{color[ffff]}与其他物体{color[0400]}{[0001|1b00]}连接{[0001|ffff]}{color[ffff]}也可以使用！
042	让我们画一张画以便确认～
043	请打开设置。
044	密室的墙壁是黑色的，\n因此用亮色来画会更吸引眼球哦。
045	那就请随便画点什么～
046	请在画好之后关闭设置。
047	让我们去看看\n是什么样的画吧。
048	请打开隐藏门！
050	在密室中发现了\n{[0201]}的画作！
051	宝藏就是这样亮相的！
052	返回之前的画面吧。
054	“你跨越艰难险阻获得宝藏后\n离开了房间……”
055	“这个奇妙的房间究竟是谁\n出于什么目的制作的呢……？”
056	“尽管仍怀有未解的疑问……\n但不知为何，你心中的激动久久不能平息。\n——完”
057	究竟找到了怎样的宝藏呢？
058	好了！接下来是\n{[0201]}自由设计\n“解谜房间”的时间！
059	让什么样的宝藏在密室中等待，\n全凭{[0201]}决定！
060	你会选择金银财宝、爱吃的食物，\n还是神秘的艺术作品呢！？
061	此外，两首BGM\n也请{[0201]}自由选择！
062	如果BGM和宝藏都定下来了……
063	就请按下{color[0400]}{[0001|1b00]}完成键{[0001|ffff]}{color[ffff]}吧！
064	那么～～～
065	编程开始！！
066	终于完成了吗！！
067	那就请前往游戏画面\n看看效果吧！
069	来！请解开谜题！
070	原来如此～\n你选择了这样的BGM和宝藏啊！
071	找到宝藏的人一定会很开心吧！
072	原来如此，有意保持原样……
073	这也不失为一种\n引人深思的谜题！
074	这样一来……
075	解谜房间就大功告成了！！
076	了不起～～～！
077	来！\n让我们前往程序画面！！
078	请指教！\n这次拳击动作可是大显身手了！
079	得心应手地利用时尚物体\n营造神秘感的编程技术……\n♥给你满分1亿分♥
080	这座建筑足以作为推理小说的舞台，\n连专业建筑师都会为之震惊。
081	嗯，\n有两下子啊。
082	要是想提升打击感，\n请随时找我哦～～
083	解谜真开心！
084	唔……做得不错。
085	你利用无线传送超越了空间的限制！\n真了不起！\n请讲！
086	这个{[0001|1b00]}{color[0400]}谜题{color[ffff]}{[0001|ffff]}只看外表已经足够复杂，\n而你竟能编写程序将其化为现实……
087	{[0201]}，\n世上说不定没有你解决不了的谜题……
088	真是惊为天人！！
089	那就将这个解谜房间\n也加入游戏一览当中吧～
090	让我们先返回菜单～
Lesson_Shooting_00.msbt
000	{[0201]}，\n你终于来了～
001	我们已经上完了两堂课……
002	你对游戏编程是不是\n也已经小有心得了～？
003	这次我们想请{[0201]}\n制作的游戏是～
004	ALIEN SHOOTING！！！！
005	在浩瀚无尽的宇宙中……
005_00	……打倒拦路的外星人并向前挺进！
006	我们将制作这样一款\n{[0001|1b00]}{color[0400]}画面横向滚动的射击游戏{color[ffff]}{[0001|ffff]}～～！！
007	来！进入程序画面！
008	这就有请主角……\n{[0001|1b00]}{color[0400]}UFO小节点{color[ffff]}{[0001|ffff]}登场！
008_00	依次选择{[0001|1b00]}{color[0400]}物体{color[ffff]}{[0001|ffff]}。
008_01	{[0001|1b00]}{color[0400]}角色{color[ffff]}{[0001|ffff]}。
008_02	{[0001|1b00]}{color[0400]}UFO{color[ffff]}{[0001|ffff]}。
009_00	你好～～
010	哎呀～～\n你就是传说中的程序员吧～～
011	哇～好一双程序员的眼睛～
012	怎么说呢～\n仿佛能用眼力来制作游戏～
013	这是我个人对你的印象～
014	……那么～
014_00	让我们去游戏画面看看……\n叫出UFO小节点后发生了什么变化～～
015	{[0001|1b00]}{color[0400]}UFO{color[ffff]}{[0001|ffff]}悬浮在空中～！
016	我们这次要设计的是……\n{[0001|1b00]}{color[0400]}横向前进的射击游戏{color[ffff]}{[0001|ffff]}……
017	因此请让UFO{[0001|1b00]}{color[0400]}面向右侧{color[ffff]}{[0001|ffff]}！
018	前往程序画面。
019	那么！
020	请{[0001|1b00]}{color[0400]}选中UFO小节点{color[ffff]}{[0001|ffff]}，打开{[0001|1b00]}{color[0400]}设置{color[ffff]}{[0001|ffff]}。
022	首先……\n将{[0001|1b00]}Y轴旋转{[0001|ffff]}设为{[0001|1b00]}{color[0400]}Y轴：-90.00°{color[ffff]}{[0001|ffff]}。
022_00	然后，\n为使UFO{[0001|1b00]}{color[0400]}保持向右的状态{color[ffff]}{[0001|ffff]}……
023	将{[0001|1b00]}转向速度{[0001|ffff]}设为{[0001|1b00]}{color[0400]}0.00{color[ffff]}{[0001|ffff]}。
023_00	没问题！\n关闭设置！
023_01	呵呵呵～我知道\n该往哪个方向前进啦～～
024	去游戏画面确认一下吧！
025	UFO面向右侧了～
026	{[0001|1b00]}{color[0400]}向右侧前进的UFO{color[ffff]}{[0001|ffff]}准备就绪……
027	接下来，我们要让UFO动起来～
028	前往程序画面！
029	叫出{[0001|1b00]}{color[0400]}摇杆小节点{color[ffff]}{[0001|ffff]}以操纵UFO。
030	请从{[0001|1b00]}输入{[0001|ffff]} {[0001|0500]}{[0001|ffff]} {[0001|1b00]}推动摇杆{[0001|ffff]}\n{[0001|0500]}{[0001|ffff]} {[0001|1b00]}L摇杆{[0001|ffff]} {[0001|0500]}{[0001|ffff]} {[0001|1b00]}左右{[0001|ffff]}\n当中叫出{[0001|1b00]}{color[0400]}摇杆小节点{color[ffff]}{[0001|ffff]}。
031	{[0201]}，\n我们又见面了——
032	这次也要转一转摇杆吗——？
033	那么……请将{[0001|1b00]}{color[0400]}摇杆小节点\n{color[ffff]}{[0001|ffff]}连接到{[0001|1b00]}{color[0400]}UFO小节点{color[ffff]}{[0001|ffff]}的{[0001|1b00]}{color[0400]}左右端口{color[ffff]}{[0001|ffff]}。
034	总感觉～～\n好像能动起来了～～
035	确认一下吧！
036	请用{[0001|1b00]}{color[0400]}摇杆{color[ffff]}{[0001|ffff]}使UFO{[0001|1b00]}{color[0400]}左右{color[ffff]}{[0001|ffff]}移动！
037	移动～～
038	接下来……\n还要让他能够上下移动。
039	请从{[0001|1b00]}输入{[0001|ffff]} {[0001|0500]}{[0001|ffff]} {[0001|1b00]}推动摇杆\n{[0001|ffff]}{[0001|0500]}{[0001|ffff]} {[0001|1b00]}L摇杆{[0001|ffff]} {[0001|0500]}{[0001|ffff]} {[0001|1b00]}{color[0400]}上下{color[ffff]}\n{[0001|ffff]}当中叫出{[0001|1b00]}{color[0400]}上下{color[ffff]}{[0001|ffff]}方向的{[0001|1b00]}{color[0400]}摇杆小节点{color[ffff]}{[0001|ffff]}。
041	你好——
042	上下方向也要转一转是吗——？
043_00	那么……请将{[0001|1b00]}{color[0400]}上下{color[ffff]}{[0001|ffff]}方向的{[0001|1b00]}{color[0400]}摇杆小节点{color[ffff]}{[0001|ffff]}\n连接到{[0001|1b00]}{color[0400]}UFO小节点{color[ffff]}{[0001|ffff]}的{[0001|1b00]}{color[0400]}上下端口{color[ffff]}{[0001|ffff]}。
044	天衣无缝～～
045	去确认一下吧～～
046	请用摇杆控制UFO向{[0001|1b00]}{color[0400]}上下{color[ffff]}{[0001|ffff]}移动！
047	成功动起来了～～！
048	这样一来！\n就能够随意操作UFO了！
049	在尽情浮游之后，\n就前往程序画面吧～
050	接下来……我们要明确这款射击游戏的\n{[0001|1b00]}{color[0400]}游戏画面观看方式{color[ffff]}{[0001|ffff]}。
051	从{[0001|1b00]}物体{[0001|ffff]} {[0001|0500]}{[0001|ffff]} {[0001|1b00]}游戏画面和照相机{[0001|ffff]} {[0001|0500]}{[0001|ffff]} {[0001|1b00]}{color[0400]}游戏画面\n{color[ffff]}{[0001|ffff]}当中叫出{[0001|1b00]}{color[0400]}游戏画面小节点{color[ffff]}{[0001|ffff]}。
052	请将游戏画面小节点\n放大到与蓝框重合的大小。
053	{[0201]}～情况怎么样～～！？
054	好的～！好的～！\n这块地盘归{[0001|1b00]}{color[0400]}游戏画面{color[ffff]}{[0001|ffff]}是吧～！
055	那么！\n让我们去看看游戏画面！
055_00	这样一来……\n游戏画面的观看方式就定下来了！
056	射击游戏的舞台已准备就绪……
058	接下来～\n让我们为UFO增设{[0001|1b00]}{color[0400]}炮筒{color[ffff]}{[0001|ffff]}！
059	前往程序画面。
060	使用{[0001|1b00]}{color[0400]}物体小节点{color[ffff]}{[0001|ffff]}制作{[0001|1b00]}{color[0400]}炮筒{color[ffff]}{[0001|ffff]}。
061	请从{[0001|1b00]}物体{[0001|ffff]} {[0001|0500]}{[0001|ffff]} {[0001|1b00]}简单物体{[0001|ffff]} {[0001|0500]}{[0001|ffff]} {[0001|1b00]}{color[0400]}圆柱体\n{color[ffff]}{[0001|ffff]}当中叫出{[0001|1b00]}{color[0400]}物体小节点{color[ffff]}{[0001|ffff]}。
062	请将其缩小一些后\n放在UFO小节点旁边～
062_00	……你好，\n我要扮演炮筒是吧。
062_01	请{[0001|1b00]}{color[0400]}旋转{color[ffff]}{[0001|ffff]}这个{[0001|1b00]}{color[0400]}物体小节点{color[ffff]}{[0001|ffff]}，\n使之成为能横向发射的炮筒。
062_02	请打开{[0001|1b00]}{color[0400]}物体小节点{color[ffff]}{[0001|ffff]}的{[0001|1b00]}{color[0400]}设置{color[ffff]}{[0001|ffff]}。
062_03	在{[0001|1b00]}状态{[0001|ffff]}的设置当中仅{color[0400]}{[0001|1b00]}开启\n{[0001|ffff]}{color[ffff]}“{color[0400]}{[0001|1b00]}能看见{[0001|ffff]}{color[ffff]}”、“{color[0400]}{[0001|1b00]}能移动{[0001|ffff]}{color[ffff]}”、“{color[0400]}{[0001|1b00]}能损坏{[0001|ffff]}{color[ffff]}”。
062_04	没问题！\n请关闭设置。
062_05	去游戏画面确认一下吧！
062_06	啊～～～～！
062_07	炮筒掉下去了……
062_16	啊……如果没看到，\n请按下重来键哦。
062_08	仔细想想……在重力作用下\n{[0001|1b00]}{color[0400]}物体会坠落是天经地义{color[ffff]}{[0001|ffff]}的。
062_09	UFO情况特殊，{[0001|1b00]}{color[0400]}不受重力影响{color[ffff]}{[0001|ffff]}，\n因而不会坠落……
062_10	而物体自然难逃重力的束缚……
062_11	因此！\n让我们通过设置，\n使物体同样{[0001|1b00]}{color[0400]}免受重力影响{color[ffff]}{[0001|ffff]}吧！
062_11_00	前往程序画面！
062_12	请选中{[0001|1b00]}{color[0400]}圆柱体物体小节点{color[ffff]}{[0001|ffff]}，打开{[0001|1b00]}{color[0400]}设置{color[ffff]}{[0001|ffff]}。
062_13	选择{[0001|1b00]}{color[0400]}材料{color[ffff]}{[0001|ffff]}……
062_14	选择{[0001|1b00]}{color[0400]}无重力{color[ffff]}{[0001|ffff]}。
062_15	没问题！\n请关闭设置。
063	去看看效果吧～
063_00	炮筒悬浮在空中了～
063_01	然而还有问题……\n请尝试使用{[0001|1b00]}{color[0400]}摇杆{color[ffff]}{[0001|ffff]}移动UFO……
063_02	没错……\nUFO一旦移动就会{[0001|1b00]}{color[0400]}把炮筒丢下{color[ffff]}{[0001|ffff]}……！
063_03	必须将UFO与炮筒粘在一起才行。
064	那就让我们返回程序画面吧～
064_00	为使UFO与炮筒密不可分……
064_01	需要{[0001|1b00]}{color[0400]}连接{color[ffff]}{[0001|ffff]}物体小节点与UFO小节点！
065	请将{[0001|1b00]}{color[0400]}物体小节点{color[ffff]}{[0001|ffff]}的{[0001|1b00]}{color[0400]}连接端口{color[ffff]}{[0001|ffff]}\n连接到{[0001|1b00]}{color[0400]}UFO小节点{color[ffff]}{[0001|ffff]}的{[0001|1b00]}{color[0400]}连接端口{color[ffff]}{[0001|ffff]}！
065_00	粘在一起了！
065_01	哇～\n连～上～啦～
065_02	这样一来，就能将物体小节点\n{[0001|1b00]}{color[0400]}连接{color[ffff]}{[0001|ffff]}在UFO小节点身上了。
066	只要像这样{[0001|1b00]}{color[0400]}连接{color[ffff]}{[0001|ffff]}小节点，\n就能{[0001|1b00]}{color[0400]}使物体粘在一起{color[ffff]}{[0001|ffff]}了！
067	那就让我们去看看……\n{[0001|1b00]}{color[0400]}连接{color[ffff]}{[0001|ffff]}之后的UFO与炮筒的变化吧！
067_00	这……！
067_01	像武士的发髻……
067_01_00	……嗯，\n先不要在意发型……
067_01_01	像刚才那样{[0001|1b00]}{color[0400]}使用摇杆移动UFO{color[ffff]}{[0001|ffff]}吧。
067_01_02	干得漂亮！！
067_01_03	在{[0001|1b00]}{color[0400]}连接{color[ffff]}{[0001|ffff]}之后……\n炮筒和UFO成功粘在了一起～！
067_01_04	那接下来……
067_01_05	如今炮筒指向了{[0001|1b00]}{color[0400]}上方{color[ffff]}{[0001|ffff]}……
067_02	所以，我们来设法\n让炮筒粘在UFO正面吧～
067_03	返回程序画面～
067_04	请选中{[0001|1b00]}{color[0400]}圆柱体物体小节点{color[ffff]}{[0001|ffff]}，\n打开{[0001|1b00]}{color[0400]}设置{color[ffff]}{[0001|ffff]}。
067_05	然后打开{[0001|1b00]}{color[0400]}连接面{color[ffff]}{[0001|ffff]}～
067_05_01	可以在{[0001|1b00]}{color[0400]}连接面{color[ffff]}{[0001|ffff]}的设置当中\n设置要让物体的{[0001|1b00]}{color[0400]}哪个面粘在哪个面上{color[ffff]}{[0001|ffff]}！
067_06	“{[0001|1b00]}自己的连接面{[0001|ffff]}”{[0001|1b00]}{color[0400]}保持Y-即可{color[ffff]}{[0001|ffff]}。
067_07	将“{[0001|1b00]}{color[0400]}连接对象的连接面{color[ffff]}{[0001|ffff]}”设为{[0001|1b00]}{color[0400]}Z-{color[ffff]}{[0001|ffff]}。
067_08	完全正确！\n请关闭详细画面。
067_08_00	再关闭设置～
067_09	在正确设置{[0001|1b00]}{color[0400]}连接面{color[ffff]}{[0001|ffff]}之后，\n炮筒应该粘在{[0001|1b00]}{color[0400]}UFO正面{color[ffff]}{[0001|ffff]}了……！
067_10	让我们去看看吧！
067_11	哦哦……！
067_12	炮筒成功粘在UFO正面了！
067_13	请使用摇杆移动UFO～
067_14_01	炮筒牢牢地粘在上面同步移动！
068	主角UFO就此大功告成～！
069	让我们返回程序画面吧～～
070	那么～～这样一来～～
071	第1步就完成了～！
072	恭喜你！
072_00	恭～喜～你～
072_01	干得不错～！你最棒了～！
072_02	恭喜了。
073	这次是{[0001|1b00]}{color[0400]}连接{color[ffff]}{[0001|ffff]}技术的首次登场！
074	只要使用小节点身上的{[0001|1b00]}{color[0400]}连接端口{color[ffff]}{[0001|ffff]}……
075	就能使物体和物体{[0001|1b00]}{color[0400]}粘在一起{color[ffff]}{[0001|ffff]}了～
076	那么，在下个步骤中……
077	我们要让炮筒{[0001|1b00]}{color[0400]}发射炮弹{color[ffff]}{[0001|ffff]}～
078	本次讲解到此结束！\n敬请期待下个步骤～～！
Lesson_Shooting_01.msbt
000	你回来了～\n{[0201]}！
001	我们在上节课中\n使用摇杆让UFO动了起来……
001_00	并将物体小节点{[0001|1b00]}{color[0400]}连接{color[ffff]}{[0001|ffff]}在UFO小节点上，\n成功设置了炮筒～～！
001_01	这样一来，\n身为主角的UFO就准备就绪了！
002	在这个步骤中，\n我们将制作射击游戏不可或缺的……
003	{[0001|1b00]}{color[0400]}发射炮弹的机制{color[ffff]}{[0001|ffff]}～～
004	下面请前往程序画面！
005	要想发射炮弹，\n需要叫出{color[0400]}{[0001|1b00]}发射物体小节点{[0001|ffff]}{color[ffff]}！
006	请从{[0001|1b00]}物体{[0001|ffff]} {[0001|0500]}{[0001|ffff]} {[0001|1b00]}放出、消除、引力\n{[0001|ffff]}{[0001|0500]}{[0001|ffff]} {[0001|1b00]}发射物体{[0001|ffff]} {[0001|0500]}{[0001|ffff]} {[0001|1b00]}10个\n{[0001|ffff]}当中叫出{[0001|1b00]}{color[0400]}发射物体小节点{color[ffff]}{[0001|ffff]}！
008	什么，慢着！！\n听说你在做射击游戏！？
010	那不就轮到我出场了嘛！！
010_00	你就放一万个心吧！！
012	那么，请缩小发射物体小节点，\n放在蓝框处。
011_00	身材再小……
011_01	也能挑起大梁～～～！
011_02	哇～全靠你了～
012_00	先进入游戏画面看一眼吧。
012_01	小小的炮弹脱膛而出！
012_02	不过……\n请使用摇杆移动UFO看看。
012_03_00	我们看到一旦UFO移动位置，\n{[0001|1b00]}{color[0400]}炮弹就不是从炮筒发射出来{color[ffff]}{[0001|ffff]}了～
012_04	没错！\n要想保证{[0001|1b00]}{color[0400]}炮弹从炮筒发射{color[ffff]}{[0001|ffff]}……\n需要进行{[0001|1b00]}{color[0400]}连接{color[ffff]}{[0001|ffff]}！
012_05	既然如此～～\n让我们去{[0001|1b00]}{color[0400]}连接{color[ffff]}{[0001|ffff]}吧！！
014	请将{[0001|1b00]}{color[0400]}发射物体小节点\n连接{color[ffff]}{[0001|ffff]}到{[0001|1b00]}{color[0400]}物体小节点{color[ffff]}{[0001|ffff]}！
014_00	喂！物体小节点！\n你……给我搭把手。
014_01	好的。
015	让我们看看效果！
016_00	炮弹射向{color[0400]}{[0001|1b00]}下方{[0001|ffff]}{color[ffff]}了……
017	先不去管它，\n请用摇杆移动UFO！
018	现在炮弹的发射位置\n会随着UFO移动了～
018_00	那么接下来，我们要让炮弹\n能够{color[0400]}{[0001|1b00]}从炮筒前端向右{[0001|ffff]}{color[ffff]}发射！
019	前往程序画面！
022	请选择{[0001|1b00]}{color[0400]}发射物体小节点{color[ffff]}{[0001|ffff]}，\n打开设置。
023	然后打开{[0001|1b00]}{color[0400]}连接面{color[ffff]}{[0001|ffff]}。
024	请将“{[0001|1b00]}{color[0400]}自己的连接面{color[ffff]}{[0001|ffff]}”设为{[0001|1b00]}{color[0400]}X-{color[ffff]}{[0001|ffff]}。
025	将“{[0001|1b00]}{color[0400]}连接对象的连接面{color[ffff]}{[0001|ffff]}”设为{[0001|1b00]}{color[0400]}Y+{color[ffff]}{[0001|ffff]}。
025-01	这样一来，\n炮弹就能从炮筒前端发射了。
026	好，请关闭当前画面……
026_00	再关闭设置。
027_00	去游戏画面确认一下吧！
028	哦哦～～！\n正合心意～！
029	炮弹从{[0001|1b00]}{color[0400]}炮筒前端{color[ffff]}{[0001|ffff]}发射出来了！
030	那么！\n请使用摇杆移动UFO！
031	一切～～～顺利！！！
032	{[0001|1b00]}{color[0400]}发射炮弹的UFO{color[ffff]}{[0001|ffff]}就此大功告成！！
033	那接下来……要实现的是\n{[0001|1b00]}{color[0400]}炮弹在按下按键时发射{color[ffff]}{[0001|ffff]}的机制！
034	前往程序画面！
036	请从{[0001|1b00]}输入{[0001|ffff]} {[0001|0500]}{[0001|ffff]} {[0001|1b00]}按下按键{[0001|ffff]} {[0001|0500]}{[0001|ffff]} {[0001|1b00]}{[0001|ffff]}\n当中叫出{color[0400]}{[0001|1b00]}按键小节点{[0001|ffff]}{color[ffff]}！
038	然后连接{[0001|1b00]}{color[0400]}发射物体小节点\n{color[ffff]}{[0001|ffff]}与{[0001|1b00]}{color[0400]}按键小节点{color[ffff]}{[0001|ffff]}～
038-01	这样一来，\n在按下键时就能发射炮弹了！
039	请指教！我会制造枪林弹雨哦！！\n砰砰砰砰砰砰砰砰！！！
040	嘿！你小子～～～\n挺起劲啊！！！
041	好！\n去游戏画面确认一下吧！
042	那么！\n请按下{[0001|1b00]}{color[0400]}键{color[ffff]}{[0001|ffff]}！
043	成功{[0001|1b00]}{color[0400]}发射炮弹{color[ffff]}{[0001|ffff]}～！
044	接下来请尝试{[0001|1b00]}{color[0400]}按住键{color[ffff]}{[0001|ffff]}。
045	炮弹的发射节奏好慢啊……
046	如果按住键时\n能够{[0001|1b00]}{color[0400]}连续发射{color[ffff]}{[0001|ffff]}炮弹就好了！
047	前往程序画面吧。
048	请打开{[0001|1b00]}{color[0400]}发射物体小节点{color[ffff]}{[0001|ffff]}的{[0001|1b00]}{color[0400]}设置{color[ffff]}{[0001|ffff]}。
051	将{[0001|1b00]}{color[0400]}发射间隔{color[ffff]}{[0001|ffff]}设为{[0001|1b00]}{color[0400]}0.10{color[ffff]}{[0001|ffff]}以实现连发！
052	请关闭设置。
055	去游戏画面确认一下～
056	请{[0001|1b00]}{color[0400]}按住键{color[ffff]}{[0001|ffff]}。
057	实现连续发射了～～！！
058	不过……\n还有一处需要注意的地方……！
059	请再次按下{color[0400]}{color[ffff]}{[0001|1b00]}{color[0400]}键{color[ffff]}{[0001|ffff]}发射炮弹。
060	炮弹在发射之后会{[0001|1b00]}{color[0400]}越落越低{color[ffff]}{[0001|ffff]}……
061	炮弹不能直线飞行，\n有种提不起劲的感觉～！
062	去程序画面进行设置，\n让炮弹发射后能够直线飞行吧！
065	要想让炮弹直线飞行，\n就必须消除{[0001|1b00]}{color[0400]}重力{color[ffff]}{[0001|ffff]}对炮弹的影响！
066	因此让我们干脆\n{[0001|1b00]}{color[0400]}消除这个世界的重力{color[ffff]}{[0001|ffff]}吧！
067	要想控制重力！\n就请叫出{[0001|1b00]}{color[0400]}减少重力小节点{color[ffff]}{[0001|ffff]}！
068	请选择{color[0400]}{[0001|1b00]}输出{[0001|ffff]}{color[ffff]}。
068_00	{color[0400]}{[0001|1b00]}改变空间{[0001|ffff]}{color[ffff]}。
069	最后选择{[0001|1b00]}{color[0400]}减少重力{color[ffff]}{[0001|ffff]}，\n来叫出{[0001|1b00]}{color[0400]}减少重力小节点{color[ffff]}{[0001|ffff]}！
071	有人叫我了～\n你好～
072	只要将信号输入\n这个{[0001|1b00]}{color[0400]}减少重力小节点{color[ffff]}{[0001|ffff]}……
072_00	就可以消除这个世界的重力哦～
072_00-01	为了向减少重力小节点输入信号，\n让我们叫出{[0001|1b00]}{color[0400]}常数小节点{color[ffff]}{[0001|ffff]}！
072_01	请从{[0001|1b00]}输入{[0001|ffff]} {[0001|0500]}{[0001|ffff]} {[0001|1b00]}{color[0400]}常数{color[ffff]}{[0001|ffff]}当中\n叫出{[0001|1b00]}{color[0400]}常数小节点{color[ffff]}{[0001|ffff]}。
071_00	我是常数小节点，我有一颗……\n即使失去重力也始终不变的专一之心！
074	那么！请将{[0001|1b00]}{color[0400]}常数小节点{color[ffff]}{[0001|ffff]}\n连接到{[0001|1b00]}{color[0400]}减少重力小节点{color[ffff]}{[0001|ffff]}。
075	{[0001|1b00]}{color[0400]}1{color[ffff]}{[0001|ffff]}，是吧？\n明白，我会守常不变地输出1。
076	来～请大家在这个世界\n体验漂浮的感觉吧～～～
077	让我们去看看效果～
078	请按下{[0001|1b00]}{color[0400]}键发射炮弹{color[ffff]}{[0001|ffff]}。
080	炮弹笔直地～～～～～～\n发射出来了～！！！
080-01	这才叫射击游戏嘛～！
081	请在尽情发射炮弹后\n前往程序画面！
082	那么～～这样一来～～
083	第2步就完成了～！
084	恭喜你。
084_00	无重力～好轻松～～
084_01	请指教！不停地按键吧！
084_02	哟！干得漂亮啊！
085	这次我们编程实现了\n{[0001|1b00]}{color[0400]}让UFO发射炮弹{color[ffff]}{[0001|ffff]}的机制！
086	又向着游戏完成迈进了一小步！
088	我们将在下个步骤中制作场地～
089	那么！\n我会在第3步静候你的到来！
Lesson_Shooting_02.msbt
000	欢迎你！\n{[0201]}。
001	ALIEN SHOOTING的第3步\n即将揭开序幕～～！
002	上次我们借助{[0001|1b00]}{color[0400]}连接{color[ffff]}{[0001|ffff]}\n实现了从炮筒发射炮弹……
003	并通过{[0001|1b00]}{color[0400]}消除重力\n{color[ffff]}{[0001|ffff]}让炮弹得以直线飞行！
004	既然炮弹已经成功发射……
005	你一定很想用这些炮弹\n尽情消灭敌人吧～？
006	所以我们这次……
007	就来放置敌人和墙壁，\n制作{[0001|1b00]}{color[0400]}游戏场地{color[ffff]}{[0001|ffff]}！
008	编程开始！！
009	首先，让我们先来改变{[0001|1b00]}{color[0400]}世界的氛围{color[ffff]}{[0001|ffff]}，\n使之更符合射击游戏的风格！
010	既然要改变世界的氛围……
011	请从{[0001|1b00]}物体{[0001|ffff]} {[0001|0500]}{[0001|ffff]} {[0001|1b00]}空间\n{[0001|ffff]}当中叫出{[0001|1b00]}{color[0400]}空间小节点{color[ffff]}{[0001|ffff]}。
013	你想改变这个世界……\n……对吗？
014	请打开{[0001|1b00]}{color[0400]}空间小节点{color[ffff]}{[0001|ffff]}的{[0001|1b00]}{color[0400]}设置{color[ffff]}{[0001|ffff]}。
015	将{[0001|1b00]}{color[0400]}空间的形状{color[ffff]}{[0001|ffff]}设为“{[0001|1b00]}{color[0400]}无{color[ffff]}{[0001|ffff]}”。
016	接下来将{[0001|1b00]}{color[0400]}空间的光线{color[ffff]}{[0001|ffff]}……
017	设为{[0001|1b00]}{color[0400]}宇宙{color[ffff]}{[0001|ffff]}。
018	没问题！\n关闭当前画面……
019	再关闭设置。
020	……你的世界，\n广袤无垠。
021	那么！让我们一睹为快！
022	啊～～！\n浩瀚的宇宙……！！
023	一下子就有了\nALIEN SHOOTING的味道！
024	要是再有{color[0400]}{[0001|1b00]}敌方外星人{[0001|ffff]}{color[ffff]}来袭，\n不就更加身临其境了吗～？
027	那好！\n进入程序画面～
028	事不宜迟，这就让敌人登场亮相吧！
029	请从{[0001|1b00]}物体{[0001|ffff]} {[0001|0500]}{[0001|ffff]} {[0001|1b00]}时尚物体{[0001|ffff]}\n{[0001|0500]}{[0001|ffff]} {[0001|1b00]}圆形时尚物体{[0001|ffff]} {[0001|0500]}{[0001|ffff]} {[0001|1b00]}外星人{[0001|ffff]}\n当中叫出{[0001|1b00]}{color[0400]}时尚物体小节点{color[ffff]}{[0001|ffff]}。
030	粉红的躯体潜藏在漆黑的宇宙中……
031	魔幻的敌人♥外星人！\n……魅力无穷！
033	请打开{[0001|1b00]}{color[0400]}时尚物体小节点{color[ffff]}{[0001|ffff]}的{[0001|1b00]}{color[0400]}设置{color[ffff]}{[0001|ffff]}。
034	仅{color[0400]}{[0001|1b00]}开启{[0001|ffff]}{color[ffff]}{[0001|1b00]}状态{[0001|ffff]}中的“{color[0400]}{[0001|1b00]}能看见{[0001|ffff]}{color[ffff]}”、“{color[0400]}{[0001|1b00]}能接触{[0001|ffff]}{color[ffff]}”、\n“{color[0400]}{[0001|1b00]}能损坏{[0001|ffff]}{color[ffff]}”、“{color[0400]}{[0001|1b00]}能破坏{[0001|ffff]}{color[ffff]}”。
036	然后将{[0001|1b00]}旋转{[0001|ffff]}的{[0001|1b00]}{color[0400]}Y轴{color[ffff]}{[0001|ffff]}设为{[0001|1b00]}{color[0400]}90.00°{color[ffff]}{[0001|ffff]}，\n改变外星人的朝向。
037	没问题！
038	那就让我们去看看外星人吧！
039	魔幻的敌人——外星人登场……！
040	快试试看\n我们现在有没有办法消灭外星人！
041	为再次确认能否消灭外星人，\n请按下{[0001|1b00]}{color[0400]}重来键{color[ffff]}{[0001|ffff]}！
042	请使用{[0001|1b00]}{color[0400]}键{color[ffff]}{[0001|ffff]}向外星人发射炮弹！
043	干得漂亮！\n成功消灭了外星人～！
044	既然已消灭外星人……\n请按下{[0001|1b00]}{color[0400]}重来键{color[ffff]}{[0001|ffff]}。
045	这次请操纵{[0001|1b00]}{color[0400]}UFO撞向外星人{color[ffff]}{[0001|ffff]}。
04502	哎呀……不小心把外星人消灭了，\n按下{[0001|1b00]}{color[0400]}重来键{color[ffff]}{[0001|ffff]}吧。
04503	请操纵{[0001|1b00]}{color[0400]}UFO撞向外星人{color[ffff]}{[0001|ffff]}。
046	无敌的UFO……\n即使接触到外星人也毫发无损！
047	这未免显得UFO过于强悍～！！
049	因此需要进行设置，\n让UFO在{[0001|1b00]}{color[0400]}接触外星人时会损坏{color[ffff]}{[0001|ffff]}。
050	前往程序画面。
051	请打开UFO小节点的{[0001|1b00]}{color[0400]}设置{color[ffff]}{[0001|ffff]}。
052	{color[0400]}{[0001|1b00]}开启{[0001|ffff]}{color[ffff]}{[0001|1b00]}状态{[0001|ffff]}中的“{color[0400]}{[0001|1b00]}能损坏{[0001|ffff]}{color[ffff]}”。
053	请关闭设置。
054	呵呵呵～\n一旦撞上～外星人～\n会粉身碎骨的哦～
056	确认一下效果吧！
057	操纵UFO{[0001|1b00]}{color[0400]}接触外星人{color[ffff]}{[0001|ffff]}试试看！
05702	哎呀……不小心把外星人消灭了，\n按下{[0001|1b00]}{color[0400]}重来键{color[ffff]}{[0001|ffff]}吧。
05703	操纵UFO{[0001|1b00]}{color[0400]}接触外星人{color[ffff]}{[0001|ffff]}试试看！
058	一瞬之间～粉身碎骨～～！
059	{[0001|1b00]}{color[0400]}敌方外星人{color[ffff]}{[0001|ffff]}至此大功告成！
061	感觉只有一个敌人还不够过瘾，\n虽然还{[0001|1b00]}{color[0400]}想追加敌人{color[ffff]}{[0001|ffff]}……
062	但在那之前……\n请按下{[0001|1b00]}{color[0400]}重来键{color[ffff]}{[0001|ffff]}。
063	请再次使用{[0001|1b00]}{color[0400]}键发射几枚炮弹{color[ffff]}{[0001|ffff]}。
06302	啊～～UFO损坏了，\n请按下{[0001|1b00]}{color[0400]}重来键{color[ffff]}{[0001|ffff]}～
06303	请使用{[0001|1b00]}{color[0400]}键发射几枚炮弹{color[ffff]}{[0001|ffff]}。
064	{[0001|1b00]}{color[0400]}射出的炮弹{color[ffff]}{[0001|ffff]}无止境地向前飞去……
065	炮弹会一直飞到{color[0400]}{[0001|1b00]}画面的尽头{[0001|ffff]}{color[ffff]}，\n无论在前方设置多少敌人，\n向前飞去的炮弹都会{color[0400]}{[0001|1b00]}消灭这些敌人{[0001|ffff]}{color[ffff]}。
066	因此！！
067	需要摆放{[0001|1b00]}{color[0400]}墙壁{color[ffff]}{[0001|ffff]}组成路线……
068	让射出的炮弹{[0001|1b00]}{color[0400]}在击中墙壁时损坏{color[ffff]}{[0001|ffff]}。
069	前往程序画面吧～
070	请从{[0001|1b00]}物体{[0001|ffff]} {[0001|0500]}{[0001|ffff]} {[0001|1b00]}简单物体{[0001|ffff]} {[0001|0500]}{[0001|ffff]} {[0001|1b00]}立方体{[0001|ffff]}\n当中叫出{[0001|1b00]}{color[0400]}物体小节点{color[ffff]}{[0001|ffff]}。
071	请参照蓝框将其放大。
072	打开{[0001|1b00]}{color[0400]}物体小节点{color[ffff]}{[0001|ffff]}的{[0001|1b00]}{color[0400]}设置{color[ffff]}{[0001|ffff]}……
073	仅{color[0400]}{[0001|1b00]}开启{[0001|ffff]}{color[ffff]}{[0001|1b00]}状态{[0001|ffff]}中的\n“{color[0400]}{[0001|1b00]}能看见{[0001|ffff]}{color[ffff]}”、“{color[0400]}{[0001|1b00]}能接触{[0001|ffff]}{color[ffff]}”、“{color[0400]}{[0001|1b00]}能破坏{[0001|ffff]}{color[ffff]}”。
074	因为{color[0400]}{[0001|1b00]}关闭{[0001|ffff]}{color[ffff]}了“{color[0400]}{[0001|1b00]}能损坏{[0001|ffff]}{color[ffff]}”，\n所以这面墙壁被炮弹击中也不会损坏。
075	而{color[0400]}{[0001|1b00]}外星人{[0001|ffff]}{color[ffff]}在中弹后会损坏，\n因此不妨将两者设置为{color[0400]}{[0001|1b00]}不同颜色{[0001|ffff]}{color[ffff]}。
076	请打开{[0001|1b00]}{color[0400]}颜色{color[ffff]}{[0001|ffff]}……
077	设置为{[0001|1b00]}{color[0400]}蓝色{color[ffff]}{[0001|ffff]}。
078	没问题！\n关闭设置。
079	前往游戏画面！
080	{[0001|1b00]}{color[0400]}墙壁{color[ffff]}{[0001|ffff]}完成了！
082	请使用{[0001|1b00]}{color[0400]}键{color[ffff]}{[0001|ffff]}对准{[0001|1b00]}{color[0400]}墙壁发射炮弹{color[ffff]}{[0001|ffff]}！
08202	啊～～UFO损坏了，\n请按下{[0001|1b00]}{color[0400]}重来键{color[ffff]}{[0001|ffff]}～
08203	请使用{[0001|1b00]}{color[0400]}键{color[ffff]}{[0001|ffff]}对准{[0001|1b00]}{color[0400]}墙壁发射炮弹{color[ffff]}{[0001|ffff]}！
083	炮弹在击中墙壁后损坏了！
084	只要用这样的墙壁组成路线，\n炮弹就不会无止境地飞行了！
085	那么，我们还想……\n交给{[0001|1b00]}{color[0400]}墙壁{color[ffff]}{[0001|ffff]}另一项任务。
086	请操纵UFO向{color[0400]}{[0001|1b00]}游戏画面之外{[0001|ffff]}{color[ffff]}前进。
08602	啊～～UFO损坏了，\n请按下{[0001|1b00]}{color[0400]}重来键{color[ffff]}{[0001|ffff]}～
08603	请操纵UFO向{color[0400]}{[0001|1b00]}游戏画面之外{[0001|ffff]}{color[ffff]}前进。
087	没错……\nUFO会{color[0400]}{[0001|1b00]}飞出游戏画面{[0001|ffff]}{color[ffff]}！
088	要是画面中没有了UFO，\n游戏就无法进行了……
089	让我们通过编程\n使UFO无法飞出游戏画面吧！
090	设置{[0001|1b00]}{color[0400]}看不见的墙壁{color[ffff]}{[0001|ffff]}，\n使UFO{[0001|1b00]}{color[0400]}无法飞出游戏画面{color[ffff]}{[0001|ffff]}。
091	请从{[0001|1b00]}物体{[0001|ffff]} {[0001|0500]}{[0001|ffff]} {[0001|1b00]}简单物体{[0001|ffff]} {[0001|0500]}{[0001|ffff]} {[0001|1b00]}立方体{[0001|ffff]}\n当中叫出{[0001|1b00]}{color[0400]}物体小节点{color[ffff]}{[0001|ffff]}。
092	请参照蓝框放大物体小节点，\n放在蓝框处。
093	打开物体小节点的设置……
094	仅{color[0400]}{[0001|1b00]}开启{[0001|ffff]}{color[ffff]}{[0001|1b00]}状态{[0001|ffff]}中的“{color[0400]}{[0001|1b00]}能接触{[0001|ffff]}{color[ffff]}”。
095	没问题，\n关闭设置。
096	……你好，\n没人能看见我。
097	{color[0400]}{[0001|1b00]}复制{[0001|ffff]}{color[ffff]}这个物体小节点……
098	移至画面下方的蓝框处。
099	……你好，\n虽然没人能看见我，但我仍然会尽职尽责。
100	再复制物体小节点最后一次……
102	拉伸为{[0001|1b00]}{color[0400]}瘦高～形状{color[ffff]}{[0001|ffff]}，\n置于蓝框处！！
103	……你好，\n想到没人能看见我，我反而觉得浑身轻松。
104	接下来\n我们要{[0001|1b00]}{color[0400]}往画面右侧制作场地{color[ffff]}{[0001|ffff]}……
105	因此有这3面看不见的墙壁\n就够了～！
106	去看看效果～
107	那么！请操纵UFO飞向{color[0400]}{[0001|1b00]}游戏画面之外{[0001|ffff]}{color[ffff]}！
10702	啊～～UFO损坏了，\n请按下{[0001|1b00]}{color[0400]}重来键{color[ffff]}{[0001|ffff]}～
10703	请操纵UFO飞向{color[0400]}{[0001|1b00]}游戏画面之外{[0001|ffff]}{color[ffff]}！
108	因为前进方向没有墙壁，\n所以UFO能够飞出{color[0400]}{[0001|1b00]}画面之外{[0001|ffff]}{color[ffff]}。
109	{[0001|1b00]}{color[0400]}请向画面上、下、左任一方向{color[ffff]}{[0001|ffff]}前进！\n如果迷路了就请按下“重来”吧。
110	哦……！
111	撞上{[0001|1b00]}{color[0400]}看不见的墙壁{color[ffff]}{[0001|ffff]}了……！
116	再也不用担心迷路了！
117	那么！最后一步……
118	让我们来编程实现\n{color[0400]}{[0001|1b00]}当UFO损坏后游戏会重来的机制{[0001|ffff]}{color[ffff]}吧！
119	前往程序画面！
120	请从{[0001|1b00]}输出{[0001|ffff]} {[0001|0500]}{[0001|ffff]} {[0001|1b00]}重来、结束、切换{[0001|ffff]}\n{[0001|0500]}{[0001|ffff]} {[0001|1b00]}重来游戏{[0001|ffff]}当中叫出{[0001|1b00]}{color[0400]}重来小节点{color[ffff]}{[0001|ffff]}。
122	然后从{[0001|1b00]}中间{[0001|ffff]} {[0001|0500]}{[0001|ffff]} {[0001|1b00]}计时\n{[0001|ffff]}当中叫出{[0001|1b00]}{color[0400]}计时小节点{color[ffff]}{[0001|ffff]}。
124	接下来从{[0001|1b00]}输入{[0001|ffff]} {[0001|0500]}{[0001|ffff]} {[0001|1b00]}游戏内的变化{[0001|ffff]}\n{[0001|0500]}{[0001|ffff]} {[0001|1b00]}物体损坏时{[0001|ffff]}当中叫出{[0001|1b00]}{color[0400]}物体损坏时小节点{color[ffff]}{[0001|ffff]}！
125	打开{[0001|1b00]}{color[0400]}物体损坏时小节点{color[ffff]}{[0001|ffff]}的{color[0400]}{[0001|1b00]}设置{[0001|ffff]}{color[ffff]}。
126	打开“{color[0400]}{[0001|1b00]}要检查什么？{[0001|ffff]}{color[ffff]}”……
127	仅将{[0001|1b00]}{color[0400]}UFO{color[ffff]}{[0001|ffff]}设为{color[0400]}{[0001|1b00]}开启{[0001|ffff]}{color[ffff]}。
128	没问题！\n关闭当前画面……
129	关闭设置。
130	好的好的，\n检查UFO损坏与否是吧？
130-01	交给我吧！
132	那么请将{[0001|1b00]}{color[0400]}物体损坏时小节点{color[ffff]}{[0001|ffff]}\n连接到{[0001|1b00]}{color[0400]}计时小节点{color[ffff]}{[0001|ffff]}。
133	再将{[0001|1b00]}{color[0400]}计时小节点{color[ffff]}{[0001|ffff]}\n连接到{[0001|1b00]}{color[0400]}重来小节点{color[ffff]}{[0001|ffff]}！
134	这样一来，\n{color[0400]}{[0001|1b00]}当UFO损坏后游戏会重来的机制\n{[0001|ffff]}{color[ffff]}就做好了！
135	去确认一下吧。
136	那么，\n请接触{[0001|1b00]}{color[0400]}外星人{color[ffff]}{[0001|ffff]}或{[0001|1b00]}{color[0400]}墙壁{color[ffff]}{[0001|ffff]}以破坏UFO！
137	干得漂亮！！\n游戏顺利{[0001|1b00]}{color[0400]}重来{color[ffff]}{[0001|ffff]}了！
138	{color[0400]}{[0001|1b00]}当UFO损坏后游戏会重来{[0001|ffff]}{color[ffff]}的机制\n宣告完成～～！
139	我们该返回了～～
140	那么～～这样一来～～
141	第3步就完成了～！
142	你那出众的格调……\n在漆黑的宇宙中闪耀♥
143	状态不错。
144	呵呵～堪称完美～～
145	……深奥的世界。
146	这次我们通过放置{color[0400]}{[0001|1b00]}外星人{[0001|ffff]}{color[ffff]}与{[0001|1b00]}{color[0400]}墙壁{color[ffff]}{[0001|ffff]}，\n初步制作了场地！
149	下次就让我们对这片场地\n加以大幅扩展吧！
150	敬请期待～～！
Lesson_Shooting_03.msbt
000	{[0201]}，\n欢迎回来！
001_00	眼前是广袤无垠的宇宙……\n藏在黑暗中的外星人正伺机而动……
001_01	不知之后会发生什么，\n真令人激动不已～～！
002	这个步骤将是上次的延续……
003	我们要继续制作{[0001|1b00]}{color[0400]}场地{color[ffff]}{[0001|ffff]}～
004	这就进入程序画面吧！
006	首先要增加{color[0400]}{[0001|1b00]}敌方外星人{[0001|ffff]}{color[ffff]}的数量～
007-00	请选中{color[0400]}{[0001|1b00]}时尚物体小节点{[0001|ffff]}{color[ffff]}……
007	然后{[0001|1b00]}{color[0400]}复制时尚物体小节点{color[ffff]}{[0001|ffff]}。
008	置于右侧蓝框处！
009	很好！\n就按这个节奏来！
010	{[0001|1b00]}{color[0400]}复制{color[ffff]}{[0001|ffff]}刚才放下的\n{[0001|1b00]}{color[0400]}时尚物体小节点{color[ffff]}{[0001|ffff]}……
011	置于{[0001|1b00]}{color[0400]}下方{color[ffff]}{[0001|ffff]}蓝框处……
012	再次{[0001|1b00]}{color[0400]}复制{color[ffff]}{[0001|ffff]}……
013	置于{[0001|1b00]}{color[0400]}右上方{color[ffff]}{[0001|ffff]}蓝框处！
014	{[0001|1b00]}{color[0400]}复制{color[ffff]}{[0001|ffff]}。
015	置于{[0001|1b00]}{color[0400]}下方{color[ffff]}{[0001|ffff]}蓝框处。
016	{[0001|1b00]}{color[0400]}还要{color[ffff]}{[0001|ffff]}放置{[0001|1b00]}{color[0400]}4个{color[ffff]}{[0001|ffff]}敌人哦～
017	{[0001|1b00]}{color[0400]}复制时尚物体小节点{color[ffff]}{[0001|ffff]}……
018	置于正中央蓝框处……
019	{[0001|1b00]}{color[0400]}复制{color[ffff]}{[0001|ffff]}。
020	置于{[0001|1b00]}{color[0400]}右侧{color[ffff]}{[0001|ffff]}蓝框处……！
021	继续{[0001|1b00]}{color[0400]}复制{color[ffff]}{[0001|ffff]}……
022	置于{[0001|1b00]}{color[0400]}右上方{color[ffff]}{[0001|ffff]}蓝框处……
023	最后一个了！\n{[0001|1b00]}{color[0400]}复制{color[ffff]}{[0001|ffff]}……
024	置于{[0001|1b00]}{color[0400]}下方{color[ffff]}{[0001|ffff]}蓝框处！！
025	放了这么多啊！
026	接下来……\n再增设{[0001|1b00]}{color[0400]}墙壁{color[ffff]}{[0001|ffff]}构建路线吧！
027	请{[0001|1b00]}{color[0400]}复制物体小节点{color[ffff]}{[0001|ffff]}。
028	稍微缩小一些后置于蓝框处。
029	再{[0001|1b00]}{color[0400]}复制{color[ffff]}{[0001|ffff]}这个{[0001|1b00]}{color[0400]}物体小节点{color[ffff]}{[0001|ffff]}……
030	置于{[0001|1b00]}{color[0400]}下方{color[ffff]}{[0001|ffff]}蓝框处！
031	最后再{[0001|1b00]}{color[0400]}复制{color[ffff]}{[0001|ffff]}一次……
032	稍微放大一些后置于右侧蓝框处！
033	辛苦了！
035	最后再做两面{[0001|1b00]}{color[0400]}看不见的墙壁{color[ffff]}{[0001|ffff]}吧。
036	请{[0001|1b00]}{color[0400]}复制{color[ffff]}{[0001|ffff]}这个{[0001|1b00]}{color[0400]}物体小节点{color[ffff]}{[0001|ffff]}。
038	置于{[0001|1b00]}{color[0400]}右侧{color[ffff]}{[0001|ffff]}蓝框处。
039	再{[0001|1b00]}{color[0400]}复制{color[ffff]}{[0001|ffff]}一次……
040	置于{[0001|1b00]}{color[0400]}下方{color[ffff]}{[0001|ffff]}蓝框处。
041	没问题！\n场地变大了！
042	去看看效果吧！
043	……
044	看不见我们刚刚\n苦心打造的场地～～～～！！
046	因为我们制作的场地\n在{[0001|1b00]}{color[0400]}游戏画面之外{color[ffff]}{[0001|ffff]}，\n所以看不见是当然的……
049	所以我们来想办法\n让扩大后的场地能够映入眼帘吧！
050	{[0001|1b00]}{color[0400]}选中游戏画面小节点{color[ffff]}{[0001|ffff]}……
051	放大并移动{[0001|1b00]}{color[0400]}游戏画面小节点{color[ffff]}{[0001|ffff]}，\n使之能够容纳整个场地！
052	让我们再去看看吧！
052_00	场地一览无余～！
053	但这样一来，一切都缩小了，\n变得有些{[0001|1b00]}{color[0400]}不方便游玩{color[ffff]}{[0001|ffff]}……
055	而且如果继续{color[0400]}{[0001|1b00]}扩大场地{[0001|ffff]}{color[ffff]}，\n终究又会超过画面所能容纳的范围。
056	因此！我们这次……
057	要使游戏画面能够{[0001|1b00]}{color[0400]}自动滚动{color[ffff]}{[0001|ffff]}！
058	这样就可以放心地\n尽情扩大场地了！
060	开始对滚动实施编程吧！
064	先将{[0001|1b00]}{color[0400]}游戏画面小节点{color[ffff]}{[0001|ffff]}恢复到{[0001|1b00]}{color[0400]}原本大小{color[ffff]}{[0001|ffff]}，\n并移动到场地的{color[0400]}{[0001|1b00]}初始位置{[0001|ffff]}{color[ffff]}。
066	要使游戏画面自动滚动，\n需要向{[0001|1b00]}{color[0400]}游戏画面小节点{color[ffff]}{[0001|ffff]}的{[0001|1b00]}{color[0400]}X端口{color[ffff]}{[0001|ffff]}输入信号！
067	{[0001|1b00]}{color[0400]}游戏画面{color[ffff]}{[0001|ffff]}会根据接收到的信号\n相应向{[0001|1b00]}{color[0400]}右侧{color[ffff]}{[0001|ffff]}移动！
068	从{[0001|1b00]}输入{[0001|ffff]} {[0001|0500]}{[0001|ffff]} {[0001|1b00]}常数{[0001|ffff]}当中叫出{[0001|1b00]}{color[0400]}常数小节点{color[ffff]}{[0001|ffff]}吧！
070	即使画面不断向前滚动，\n我也仍保持始终不变的专一之心……\n我就是常数小节点！
071	接下来请从{[0001|1b00]}中间{[0001|ffff]} {[0001|0500]}{[0001|ffff]} {[0001|1b00]}旗标、计数、随机{[0001|ffff]}\n{[0001|0500]}{[0001|ffff]} {[0001|1b00]}计数{[0001|ffff]}当中叫出{[0001|1b00]}{color[0400]}计数小节点{color[ffff]}{[0001|ffff]}。
075	将{[0001|1b00]}{color[0400]}常数小节点{color[ffff]}{[0001|ffff]}连接到\n{[0001|1b00]}{color[0400]}计数小节点{color[ffff]}{[0001|ffff]}的{[0001|1b00]}{color[0400]}增加端口{color[ffff]}{[0001|ffff]}。
076	计数的数值不断增加……
077	计数小节点的{[0001|1b00]}{color[0400]}增加端口{color[ffff]}{[0001|ffff]}会{[0001|1b00]}{color[0400]}持续接收到{color[ffff]}{[0001|ffff]}\n常数小节点{[0001|1b00]}{color[0400]}输入的信号{color[ffff]}{[0001|ffff]}……
078	因此计数小节点的数值\n将会持续猛增。
079	请将该{[0001|1b00]}{color[0400]}计数小节点{color[ffff]}{[0001|ffff]}连接到\n{[0001|1b00]}{color[0400]}游戏画面小节点{color[ffff]}{[0001|ffff]}的{[0001|1b00]}{color[0400]}X端口{color[ffff]}{[0001|ffff]}。
080	这样一来，\n游戏画面{[0001|1b00]}{color[0400]}横向自动\n滚动的机制{color[ffff]}{[0001|ffff]}就完成了！
063	让画面滚动起来是吧～！\n没～问～题！
080_00	让我们去看看效果吧！
081	哇哦～～～～～～！
082	滚动得风驰电掣～～～～！！！
083	就算再怎么努力，\n恐怕也跟不上这种速度。
082_01	啊……用力过猛……\n跑到不该来的地方了。
082_02	游戏空间并非无穷无尽……\n其实是存在尽头的。
082_04	那么！让我们在程序画面中\n减缓滚动的速度吧。
084	既然问题是滚动过快……\n要采取的措施就是{[0001|1b00]}{color[0400]}调节速度{color[ffff]}{[0001|ffff]}。
085	为此需要对{color[0400]}{[0001|1b00]}计数小节点\n输出的数值{[0001|ffff]}{color[ffff]}进行{color[0400]}{[0001|1b00]}调节{[0001|ffff]}{color[ffff]}，\n之后再输入游戏画面小节点。
086	要想调节输出数值的大小！\n就要请{[0001|1b00]}{color[0400]}映射小节点{color[ffff]}{[0001|ffff]}出马了！
087	请选择{[0001|1b00]}{color[0400]}中间{color[ffff]}{[0001|ffff]}。
088	{[0001|1b00]}{color[0400]}转换{color[ffff]}{[0001|ffff]}。
089	最后选择{color[0400]}{[0001|1b00]}映射{[0001|ffff]}{color[ffff]}，叫出{color[0400]}{[0001|1b00]}映射小节点{[0001|ffff]}{color[ffff]}！
089_00	你是谁……？
091	什么……？\n鲍伯博士为你……\n实施一对一的教学～～～～～？
093	这难道是～～\n恋爱的预兆～～～～～～？？
093_00	……我来介绍一下～\n{[0001|1b00]}{color[0400]}映射小节点{color[ffff]}{[0001|ffff]}……
093_01	是个能将{[0001|1b00]}{color[0400]}输入的数值\n转换成其他数值{color[ffff]}{[0001|ffff]}的小节点。
094	请打开{[0001|1b00]}{color[0400]}映射小节点{color[ffff]}{[0001|ffff]}的{[0001|1b00]}{color[0400]}设置{color[ffff]}{[0001|ffff]}。
094-01	可以在{color[0400]}{[0001|1b00]}输入范围{[0001|ffff]}{color[ffff]}与{color[0400]}{[0001|1b00]}输出范围{[0001|ffff]}{color[ffff]}中\n设置如何调节所接收到的数值！
095	请将{color[0400]}{[0001|1b00]}输入范围{[0001|ffff]}{color[ffff]}设为{color[0400]}{[0001|1b00]}0.00{[0001|ffff]}{color[ffff]}～{[0001|1b00]}{color[0400]}60.00{color[ffff]}{[0001|ffff]}。
096	将{color[0400]}{[0001|1b00]}输出范围{[0001|ffff]}{color[ffff]}设为{color[0400]}{[0001|1b00]}0.00{[0001|ffff]}{color[ffff]}～{[0001|1b00]}{color[0400]}1.00{color[ffff]}{[0001|ffff]}。
097-01	这样一来，映射小节点就会将\n接收到的{[0001|1b00]}{color[0400]}0.00～60.00{color[ffff]}{[0001|ffff]}的数值\n{[0001|1b00]}{color[0400]}转换{color[ffff]}{[0001|ffff]}成{[0001|1b00]}{color[0400]}0.00～1.00{color[ffff]}{[0001|ffff]}进行输出了。
097	关闭设置。
098	那么，删除之前连接在{color[0400]}{[0001|1b00]}计数小节点{[0001|ffff]}{color[ffff]}与\n{color[0400]}{[0001|1b00]}游戏画面小节点{[0001|ffff]}{color[ffff]}之间的{color[0400]}{[0001|1b00]}线{[0001|ffff]}{color[ffff]}……
099	将{[0001|1b00]}{color[0400]}计数小节点{color[ffff]}{[0001|ffff]}连接到{[0001|1b00]}{color[0400]}映射小节点{color[ffff]}{[0001|ffff]}！
100	然后将{[0001|1b00]}{color[0400]}映射小节点{color[ffff]}{[0001|ffff]}连接到\n{[0001|1b00]}{color[0400]}游戏画面小节点{color[ffff]}{[0001|ffff]}的{[0001|1b00]}{color[0400]}X端口{color[ffff]}{[0001|ffff]}。
101	滚动速度的调节至此大功告成！
102	去游戏画面确认一下吧！
103	滚动速度慢下来了！
104	目前的速度\n对玩家来说应该恰到好处！
105_000	不妨按下{[0001|1b00]}{color[0400]}重来键{color[ffff]}{[0001|ffff]}重来一次……
105_031	尝试实际游玩，感受一下滚动速度吧！
105_032	没能跟上画面的滚动是吧……
105_033	请按下{color[0400]}{[0001|1b00]}重来键{[0001|ffff]}{color[ffff]}重新开始。
105_034	在推动{[0001|1b00]}{color[0400]}摇杆{color[ffff]}{[0001|ffff]}前进的同时进行游戏，\n跟上画面滚动的速度～
105_035	太棒了！
105_036	成功避开了墙壁与外星人，\n到达了场地尽头！
105_037	还有一点小问题尚未确认，\n请按下{color[0400]}{[0001|1b00]}重来键{[0001|ffff]}{color[ffff]}。
105_038	请全速撞向墙壁！
105_039	UFO损坏了。
105_040	UFO目前{[0001|1b00]}{color[0400]}设置为\n接触到任何物体都会损坏{color[ffff]}{[0001|ffff]}～
105_041	因此在撞上墙壁后粉身碎骨了。
105_042	这样难度未免高了点……
105_043	在程序画面中进行设置，\n让UFO即使撞上墙壁也能够完好无损吧！
105_001	啊……\nUFO在撞上{[0001|1b00]}{color[0400]}墙壁{color[ffff]}{[0001|ffff]}后损坏了。
105_002	UFO目前{[0001|1b00]}{color[0400]}设置为\n接触到任何物体都会损坏{color[ffff]}{[0001|ffff]}，\n因此在撞上墙壁后粉身碎骨了……
105_003	这样难度未免高了点……
105_004	在程序画面中进行设置，\n让UFO即使撞上墙壁也能够完好无损吧！
105_007	请打开{[0001|1b00]}{color[0400]}UFO小节点{color[ffff]}{[0001|ffff]}的{[0001|1b00]}{color[0400]}设置{color[ffff]}{[0001|ffff]}。
105_007-01	暂时{color[0400]}{[0001|1b00]}关闭{[0001|ffff]}{color[ffff]}{[0001|1b00]}状态{[0001|ffff]}中的“{color[0400]}{[0001|1b00]}能损坏{[0001|ffff]}{color[ffff]}”。
105_008	然后按下“{color[0400]}{[0001|1b00]}能损坏{[0001|ffff]}{color[ffff]}”旁边的{[0001|1b00]}{color[0400]}小按键{color[ffff]}{[0001|ffff]}，\n打开“{[0001|1b00]}{color[0400]}能损坏{color[ffff]}{[0001|ffff]}”的{[0001|1b00]}{color[0400]}详细设置{color[ffff]}{[0001|ffff]}。
105_009	可以在这里具体设置\nUFO{[0001|1b00]}{color[0400]}接触到什么会导致损坏{color[ffff]}{[0001|ffff]}。
105_015	请仅将{[0001|1b00]}{color[0400]}外星人{color[ffff]}{[0001|ffff]}设为{color[0400]}{[0001|1b00]}开启{[0001|ffff]}{color[ffff]}。
105_015-01	这样UFO就{color[0400]}{[0001|1b00]}只有\n在接触到外星人时{[0001|ffff]}{color[ffff]}才会损坏了！
105_016	关闭当前画面。
105_017	再关闭设置。
105_018	这样一来～即使接触墙壁或炮弹～\n也不会损坏了～～
105_019	就相当于～～\n提高了防御力～～～
105_021	那么！\n去游戏画面确认一下吧！
105_022	请先撞向{[0001|1b00]}{color[0400]}外星人{color[ffff]}{[0001|ffff]}！
105_023	UFO接触到外星人时会损坏。
105_024	接下来请撞向{[0001|1b00]}{color[0400]}墙壁{color[ffff]}{[0001|ffff]}！
105_025	UFO接触到墙壁也毫发无损！
105_026	这样UFO就{[0001|1b00]}{color[0400]}只有\n在接触到外星人时{color[ffff]}{[0001|ffff]}才会损坏了！
106	如果没有疑问，\n就返回程序画面吧～！
107	那么～～这样一来～～
108	第4步就完成了～！
109	这就是……爱的力量……♥
109_00	你的努力我看在眼里！！
109_01	无可挑剔！
109_02	{[0201]}，\n恭喜啦～～！
110	这次我们实现了\n游戏画面{color[0400]}{[0001|1b00]}自动滚动的机制{[0001|ffff]}{color[ffff]}……
111	游戏场地从而变得更加开阔！
112	这个步骤稍微有点漫长……
113	但{[0201]}\n还是坚持到了最后～～！
114	让我们在下个步骤中也一起加油吧！
116	那么，我会在下个步骤\n静候你的到来～！
Lesson_Shooting_04.msbt
000	{[0201]}，\n欢迎来到第5步！
001	……哎呀，就在我说话时，\n游戏画面也在不停地越走越远～
002	在课堂教学当中若游戏画面{[0001|1b00]}{color[0400]}自动滚动{color[ffff]}{[0001|ffff]}，\n将会{[0001|1b00]}{color[0400]}不便于我们确认游戏画面{color[ffff]}{[0001|ffff]}……
003	因此要在这个步骤中来实现\n{color[0400]}{[0001|1b00]}停止自动滚动的机制{[0001|ffff]}{color[ffff]}！
011	前往程序画面～！
012	在编程停止自动滚动前，\n先要做一些{[0001|1b00]}{color[0400]}准备工作{color[ffff]}{[0001|ffff]}……
014	首先我们要通过编程\n让画面仅在{[0001|1b00]}{color[0400]}按下键期间滚动{color[ffff]}{[0001|ffff]}！
015	请从{[0001|1b00]}输入{[0001|ffff]} {[0001|0500]}{[0001|ffff]} {[0001|1b00]}按下按键{[0001|ffff]} {[0001|0500]}{[0001|ffff]} {[0001|1b00]}{[0001|ffff]}当中\n叫出{[0001|1b00]}{color[0400]}按键小节点{color[ffff]}{[0001|ffff]}。
017	请指教！\n食指用力！！！
018-00	然后，请选中{color[0400]}{[0001|1b00]}常数小节点{[0001|ffff]}{color[ffff]}……
018	再按下这个按键，\n和常数小节点{color[0400]}{[0001|1b00]}告别{[0001|ffff]}{color[ffff]}。
021	取而代之将{[0001|1b00]}{color[0400]}按键小节点{color[ffff]}{[0001|ffff]}连接到\n{[0001|1b00]}{color[0400]}计数小节点{color[ffff]}{[0001|ffff]}的{[0001|1b00]}{color[0400]}增加端口{color[ffff]}{[0001|ffff]}～
022	这样一来，\n{[0001|1b00]}{color[0400]}游戏画面就会\n仅在按下键期间滚动{color[ffff]}{[0001|ffff]}了！
023	去看看效果吧！
024	{[0001|1b00]}{color[0400]}若不按下键{color[ffff]}{[0001|ffff]}，\n画面就不会自动向前滚动。
024_00	按下{[0001|1b00]}{color[0400]}键{color[ffff]}{[0001|ffff]}看看。
024_01	画面动起来了～！
025	成功使画面{[0001|1b00]}{color[0400]}仅在按下键期间滚动{color[ffff]}{[0001|ffff]}了！
026	但这样一来……\n{[0001|1b00]}{color[0400]}如果不一直按着按键就无法游玩{color[ffff]}{[0001|ffff]}了。
028	因此我们在这里反其道而行之，\n对程序进行改造，来实现\n仅在{color[0400]}{[0001|1b00]}按下按键期间停止画面滚动{[0001|ffff]}{color[ffff]}！
029	前往程序画面！
030	那么，让我们设法实现与刚才{color[0400]}{[0001|1b00]}相反{[0001|ffff]}{color[ffff]}的机制……
031	让画面{[0001|1b00]}{color[0400]}仅在按下键期间停止{color[ffff]}{[0001|ffff]}滚动！
031-01	换言之，\n就是让画面仅在{color[0400]}{[0001|1b00]}未按下{[0001|ffff]}{color[ffff]}键期间{color[0400]}{[0001|1b00]}滚动{[0001|ffff]}{color[ffff]}。
032	为了编程实现\n{color[0400]}{[0001|1b00]}仅在未按下期间产生效果{[0001|ffff]}{color[ffff]}的机制，\n就要请{[0001|1b00]}{color[0400]}NOT小节点{color[ffff]}{[0001|ffff]}出马了！
033	请选择{color[0400]}{[0001|1b00]}中间{[0001|ffff]}{color[ffff]}。
034	{[0001|1b00]}{color[0400]}逻辑{color[ffff]}{[0001|ffff]}。
035	最后选择{[0001|1b00]}{color[0400]}NOT{color[ffff]}{[0001|ffff]}，叫出{[0001|1b00]}{color[0400]}NOT小节点{color[ffff]}{[0001|ffff]}。
037	不不不，\n我不是NOT小节点哦～
037-01	我才不会帮你呢～
038	这个{[0001|1b00]}{color[0400]}NOT小节点{color[ffff]}{[0001|ffff]}……
039	只会在{[0001|1b00]}{color[0400]}没有信号输入的情况下\n输出{color[ffff]}{[0001|ffff]}信号……
039_00	反之……在{[0001|1b00]}{color[0400]}有信号输入的情况下\n{color[ffff]}{[0001|ffff]}则{[0001|1b00]}{color[0400]}不会输出{color[ffff]}{[0001|ffff]}信号。
040	是个爱唱反调的小节点。
041	嘿嘿！\n我从不撒谎哦。
042	那么，请删除连接在{color[0400]}{[0001|1b00]}按键小节点{[0001|ffff]}{color[ffff]}与\n{color[0400]}{[0001|1b00]}计数小节点{[0001|ffff]}{color[ffff]}之间的{color[0400]}{[0001|1b00]}线{[0001|ffff]}{color[ffff]}……
044	然后用线将{[0001|1b00]}{color[0400]}按键小节点\n{color[ffff]}{[0001|ffff]}与{[0001|1b00]}{color[0400]}NOT小节点{color[ffff]}{[0001|ffff]}进行连接……
045	你好！请指教！
046	不不不！再见啦～！
047	将{[0001|1b00]}{color[0400]}NOT小节点{color[ffff]}{[0001|ffff]}连接到\n{[0001|1b00]}{color[0400]}计数小节点{color[ffff]}{[0001|ffff]}的{[0001|1b00]}{color[0400]}增加端口{color[ffff]}{[0001|ffff]}。
047-01	这样一来画面就将\n{color[0400]}{[0001|1b00]}仅在未按下{[0001|ffff]}{color[ffff]}键{color[0400]}{[0001|1b00]}期间滚动{[0001|ffff]}{color[ffff]}，{color[0400]}{[0001|1b00]}\n并在按下期间停止滚动{[0001|ffff]}{color[ffff]}！
049	那就去看看效果吧！
050	画面在未按下期间\n会自动滚动了！
051	那么，请按住{[0001|1b00]}{color[0400]}键{color[ffff]}{[0001|ffff]}试试！
052	干得漂亮～～！\n滚动停止了！
053	这样一来，\n就能让{[0001|1b00]}{color[0400]}游戏画面停止滚动{color[ffff]}{[0001|ffff]}，\n从而实施确认了～
053_01	在尽情体验一番{[0001|1b00]}{color[0400]}自动滚动{color[ffff]}{[0001|ffff]}\n走走停停的感觉之后……
054	前往程序画面！
055	那么～～这样一来～～
056	第5步就完成了～！
057	恭喜你！
057_00	嘿嘿！干得一点也不漂亮！
057_01	真出色。
057_02	干得不错～～！
058	我们在这个步骤中编程实现了\n{color[0400]}{[0001|1b00]}使游戏画面停止滚动的机制{[0001|ffff]}{color[ffff]}！
060	于是游戏编程的操作\n变得更加便捷了！
061	我们将在下个步骤中\n继续编写游戏的后续程序。
062	下次要制作\n比外星人还要{[0001|1b00]}{color[0400]}厉害的障碍物{color[ffff]}{[0001|ffff]}哦～
063	敬请期待～～！
Lesson_Shooting_05.msbt
000	{[0201]}，\n你终于来了～～！
001	请快快按住{[0001|1b00]}{color[0400]}键{color[ffff]}{[0001|ffff]}看看会发生什么。
108	滚动戛然而止了！！
109	我们上次制作的内容就是\n这样一个{color[0400]}{[0001|1b00]}停止自动滚动的机制{[0001|ffff]}{color[ffff]}！
002	这样在需要确认的时候就方便多了～
003	这次要在利用该功能的同时……
003-01	编程制作新的机关～
004	来！前往程序画面！
006	首先要制作{[0001|1b00]}{color[0400]}后续场地{color[ffff]}{[0001|ffff]}！
007	请{[0001|1b00]}{color[0400]}复制时尚物体小节点{color[ffff]}{[0001|ffff]}。
009	将所复制的时尚物体小节点\n移动到{[0001|1b00]}{color[0400]}右上方{color[ffff]}{[0001|ffff]}的蓝框处。
010	{[0001|1b00]}{color[0400]}复制{color[ffff]}{[0001|ffff]}刚才移动的{[0001|1b00]}{color[0400]}时尚物体小节点{color[ffff]}{[0001|ffff]}……
011	移至{color[0400]}{[0001|1b00]}下方{[0001|ffff]}{color[ffff]}蓝框处。
012	再{color[0400]}{[0001|1b00]}复制{[0001|ffff]}{color[ffff]}1个……
013	移至蓝框处！
013_00	再{color[0400]}{[0001|1b00]}复制{[0001|ffff]}{color[ffff]}1个……
013_01	移至{color[0400]}{[0001|1b00]}右上方{[0001|ffff]}{color[ffff]}蓝框处！
013_02	最后一次{color[0400]}{[0001|1b00]}复制{[0001|ffff]}{color[ffff]}……
013_03	移至{color[0400]}{[0001|1b00]}右下方{[0001|ffff]}{color[ffff]}蓝框处！
013_04	这样敌方外星人就全都放好了！
014	接下来要制作{[0001|1b00]}{color[0400]}墙壁{color[ffff]}{[0001|ffff]}～
016	{[0001|1b00]}{color[0400]}复制物体小节点{color[ffff]}{[0001|ffff]}。
018	放大后置于蓝框处！
019	再{[0001|1b00]}{color[0400]}复制{color[ffff]}{[0001|ffff]}1个{[0001|1b00]}{color[0400]}物体小节点{color[ffff]}{[0001|ffff]}……
020	这次缩小后置于蓝框处……
023	恰到好处！
024	最后还要制作{[0001|1b00]}{color[0400]}看不见的墙壁{color[ffff]}{[0001|ffff]}。
025	请{[0001|1b00]}{color[0400]}复制物体小节点{color[ffff]}{[0001|ffff]}。
027	移至{color[0400]}{[0001|1b00]}右侧{[0001|ffff]}{color[ffff]}蓝框处……
028	继续{color[0400]}{[0001|1b00]}复制{[0001|ffff]}{color[ffff]}……
029	移至{[0001|1b00]}{color[0400]}下方{color[ffff]}{[0001|ffff]}蓝框处～
031	没问题！\n去确认吧～！
031_00	尝试游玩游戏，一直推进到\n刚刚制作的场地为止！
031_01	再来一次！\n尝试游玩游戏，一直推进到\n刚刚制作的场地为止！
032	这里就是刚刚制作的场地……！\n感觉不错啊～！
033	那么……\n{color[0400]}{[0001|1b00]}场地越做越长{[0001|ffff]}{color[ffff]}……
034	推进到新完成的位置\n所需的时间随之增加……
035	因此！\n让我们临时移动\n{[0001|1b00]}{color[0400]}游戏的起始位置{color[ffff]}{[0001|ffff]}吧！
036	前往程序画面！
039	请{[0001|1b00]}{color[0400]}选中游戏画面小节点{color[ffff]}{[0001|ffff]}……
040	并将其移动到新完成的场地附近。
040_01	然后{[0001|1b00]}{color[0400]}选中UFO小节点{color[ffff]}{[0001|ffff]}……
040_02	也移动他。
041	那么！\n去游戏画面中确认一下吧！
042	起始位置发生变化了～！
043	这样就能够\n快速确认新完成的场地了！
044	那么！\n就在这片场地中编程\n制作新的机关吧～！
045	让我们进入这个步骤的核心部分！
046	制作{[0001|1b00]}{color[0400]}会旋转的障碍物{color[ffff]}{[0001|ffff]}！
047	先叫出{[0001|1b00]}{color[0400]}旋转物体小节点{color[ffff]}{[0001|ffff]}。
047_00	请选择{color[0400]}{[0001|1b00]}物体{[0001|ffff]}{color[ffff]}。
047_01	{color[0400]}{[0001|1b00]}特殊物体{[0001|ffff]}{color[ffff]}。
047_02	{color[0400]}{[0001|1b00]}旋转物体{[0001|ffff]}{color[ffff]}。
047_03	最后选择{[0001|1b00]}{color[0400]}圆柱体{color[ffff]}{[0001|ffff]}，\n叫出{[0001|1b00]}{color[0400]}旋转物体小节点{color[ffff]}{[0001|ffff]}！
050	嚯嚯嚯……找我是吗～
051	旋转是我的招牌动作～～♪
051-01	顾名思义，{[0001|1b00]}{color[0400]}旋转物体小节点{color[ffff]}{[0001|ffff]}能让\n{[0001|1b00]}{color[0400]}会旋转的物体{color[ffff]}{[0001|ffff]}出现在游戏画面当中！
049	那么，将{[0001|1b00]}{color[0400]}旋转物体小节点\n{color[ffff]}{[0001|ffff]}拉伸成瘦高形状放在蓝框处。
052	打开{[0001|1b00]}{color[0400]}旋转物体小节点{color[ffff]}{[0001|ffff]}的{[0001|1b00]}{color[0400]}设置{color[ffff]}{[0001|ffff]}。
052_00	因其{[0001|1b00]}{color[0400]}可用炮弹破坏{color[ffff]}{[0001|ffff]}，\n所以与外星人设为相同颜色。
052_01	请打开{[0001|1b00]}{color[0400]}颜色{color[ffff]}{[0001|ffff]}的设置……
052_02	将其设为{[0001|1b00]}{color[0400]}粉红色{color[ffff]}{[0001|ffff]}。
052_03	关闭设置。
053	那么！登场的会是什么样的物体呢……\n进入游戏画面一探究竟吧～～
054	我们看到了一个{[0001|1b00]}{color[0400]}粉红色的圆柱体{color[ffff]}{[0001|ffff]}～！
054_00	只要用{[0001|1b00]}{color[0400]}键{color[ffff]}{[0001|ffff]}使画面{[0001|1b00]}{color[0400]}停止滚动{color[ffff]}{[0001|ffff]}，\n就便于确认情况了！
055	光是把旋转物体小节点摆在那里，\n物体是不会旋转的。
056	我们要通过编程\n使粉红色的圆柱体得以正常{[0001|1b00]}{color[0400]}旋转{color[ffff]}{[0001|ffff]}。
058	要想使物体旋转，\n首先要叫出{[0001|1b00]}{color[0400]}常数小节点{color[ffff]}{[0001|ffff]}。
058_00	请从{[0001|1b00]}输入{[0001|ffff]} {[0001|0500]}{[0001|ffff]} {[0001|1b00]}常数{[0001|ffff]}当中叫出{[0001|1b00]}{color[0400]}常数小节点{color[ffff]}{[0001|ffff]}。
059	打开{[0001|1b00]}{color[0400]}常数小节点{color[ffff]}{[0001|ffff]}的{[0001|1b00]}{color[0400]}设置{color[ffff]}{[0001|ffff]}。
060	我们的目标是将\n“{[0001|1b00]}要输出什么数值？{[0001|ffff]}”设为{[0001|1b00]}{color[0400]}0.20{color[ffff]}{[0001|ffff]}。\n但因为这个数值较为精细……
060_00	我们不直接在滑动条上拖动滑块，{[0001|1b00]}\n{[0001|ffff]}而是使用{[0001|1b00]}{color[0400]}数字键盘{color[ffff]}{[0001|ffff]}输入数值！
060_01	请按下这个按键，\n使用{[0001|1b00]}{color[0400]}数字键盘{color[ffff]}{[0001|ffff]}将数值设为{[0001|1b00]}{color[0400]}0.20{color[ffff]}{[0001|ffff]}。
061	没问题！\n关闭设置！
062	然后请将{[0001|1b00]}{color[0400]}常数小节点{color[ffff]}{[0001|ffff]}连接到\n{[0001|1b00]}{color[0400]}旋转物体小节点{color[ffff]}{[0001|ffff]}的{[0001|1b00]}{color[0400]}Z轴端口{color[ffff]}{[0001|ffff]}！
062-01	这样一来粉红色的圆柱体\n就能旋转起来了！
063	去确认一下吧！
064	粉红色的圆柱体\n转起来了～～！！
065	只要像这样向{color[0400]}{[0001|1b00]}旋转物体小节点输入信号{[0001|ffff]}{color[ffff]}，\n物体就能够旋转起来了！
066	既然设置了这么一个\n会旋转的障碍物……
067	就在此基础上\n用{[0001|1b00]}{color[0400]}连接{color[ffff]}{[0001|ffff]}增强气势吧。
068	前往程序画面！
069	请先从{[0001|1b00]}物体{[0001|ffff]} {[0001|0500]}{[0001|ffff]} {[0001|1b00]}简单物体{[0001|ffff]} {[0001|0500]}{[0001|ffff]} {[0001|1b00]}圆柱体{[0001|ffff]}当中\n叫出{[0001|1b00]}{color[0400]}物体小节点{color[ffff]}{[0001|ffff]}。
071	请将物体小节点稍微放大一些。
071_00	打开{color[0400]}{[0001|1b00]}物体小节点{[0001|ffff]}{color[ffff]}的设置。
071_01	打开{color[0400]}{[0001|1b00]}颜色{[0001|ffff]}{color[ffff]}……
071_02	和旋转物体同样设为{color[0400]}{[0001|1b00]}粉红色{[0001|ffff]}{color[ffff]}！
071_02-01	接下来请打开{color[0400]}{[0001|1b00]}连接面{[0001|ffff]}{color[ffff]}，\n设置要让他们如何粘在一起！
071_02-02	将“{color[0400]}{[0001|1b00]}自己的连接面{[0001|ffff]}{color[ffff]}”设为{color[0400]}{[0001|1b00]}X+{[0001|ffff]}{color[ffff]}！
071_02-03	关闭当前画面……
071_03	关闭设置！
072	那么！请将这个{[0001|1b00]}{color[0400]}物体小节点{color[ffff]}{[0001|ffff]}\n{[0001|1b00]}{color[0400]}连接{color[ffff]}{[0001|ffff]}到{[0001|1b00]}{color[0400]}旋转物体小节点{color[ffff]}{[0001|ffff]}！
073	翩翩～起舞～♪\n和我一起跳舞吧～～！
074	你好。
076	那么！\n让我们去看看效果吧～！
077	哦哦～！\n两个物体粘在一起旋转了！
078	在此基础上再增加1个\n粘在一起的物体吧！
079	前往程序画面！
080	请{[0001|1b00]}{color[0400]}复制物体小节点{color[ffff]}{[0001|ffff]}。
082	将其移动到蓝框处。
082-01	请打开这个{[0001|1b00]}{color[0400]}物体小节点{color[ffff]}{[0001|ffff]}的{[0001|1b00]}{color[0400]}设置{color[ffff]}{[0001|ffff]}。
082-02	打开{[0001|1b00]}{color[0400]}连接面{color[ffff]}{[0001|ffff]}……
082-03	为使其粘在与前者相对的另一面，\n请将“{[0001|1b00]}{color[0400]}连接对象的连接面{color[ffff]}{[0001|ffff]}”设为{[0001|1b00]}{color[0400]}Y-{color[ffff]}{[0001|ffff]}！
082-04	关闭当前画面。
082-05	关闭设置画面。
083	来！请将这个{[0001|1b00]}{color[0400]}物体小节点\n连接{color[ffff]}{[0001|ffff]}到{[0001|1b00]}{color[0400]}旋转物体小节点{color[ffff]}{[0001|ffff]}！
084	我将会旋转起来。
085	嚯嚯嚯～～～\n舞会即将开始～～♪
092	去看看效果吧！
096	哦哦～～～～！\n气势十足的障碍物登场～！
096_00	只要像这样善用{[0001|1b00]}{color[0400]}连接{color[ffff]}{[0001|ffff]}，\n就能够制作出{[0001|1b00]}{color[0400]}形状复杂的物体{color[ffff]}{[0001|ffff]}了！
096_00_00	在宣告大功告成之前……
096_00_01	请先按下{[0001|1b00]}{color[0400]}重来键{color[ffff]}{[0001|ffff]}。
096_00_02	请操纵UFO{color[0400]}{[0001|1b00]}撞向会旋转的障碍物{[0001|ffff]}{color[ffff]}！
096_00_03	果然……！\nUFO没有损坏！
096_00_04	让UFO在接触到\n会旋转的障碍物时{[0001|1b00]}{color[0400]}损坏{color[ffff]}{[0001|ffff]}吧！
096_01	前往程序画面！
096_01_00	请打开UFO小节点的{[0001|1b00]}{color[0400]}设置{color[ffff]}{[0001|ffff]}。
096_01_01	我们要让UFO不仅在接触外星人时{color[0400]}{[0001|1b00]}损坏{[0001|ffff]}{color[ffff]}，\n在接触障碍物……\n也就是{[0001|1b00]}{color[0400]}圆柱体{color[ffff]}{[0001|ffff]}时也会{color[0400]}{[0001|1b00]}损坏{[0001|ffff]}{color[ffff]}。
096_01_02	在{[0001|1b00]}状态{[0001|ffff]}中打开\n“{color[0400]}{[0001|1b00]}能损坏{[0001|ffff]}{color[ffff]}”{color[0400]}{[0001|1b00]}的详细设置{[0001|ffff]}{color[ffff]}……
096_01_03	将{[0001|1b00]}{color[0400]}圆柱体{color[ffff]}{[0001|ffff]}设为{color[0400]}{[0001|1b00]}开启{[0001|ffff]}{color[ffff]}。
096_01_04	关闭当前画面……
096_01_05	关闭设置。
096_01_06	去确认一下吧！
096_01_07	请接触会旋转的障碍物！
096_01_08	UFO损坏了～～！
096_02	至此……！\n{[0001|1b00]}{color[0400]}会旋转的障碍物{color[ffff]}{[0001|ffff]}正式完成！
097	尽情欣赏之后\n就返回程序画面吧～！
098	那么～～这样一来～～
099	第6步就完成了～！
100	多么优雅的一步啊～～♪
100_00	……转得漂亮。
100_01	太好了。
100_02	恭喜你！
101	这次我们编程制作了\n{[0001|1b00]}{color[0400]}会旋转的障碍物{color[ffff]}{[0001|ffff]}！
102	将物体{[0001|1b00]}{color[0400]}连接{color[ffff]}{[0001|ffff]}起来，\n就可以随心所欲地为物体造型……
103	更可通过{[0001|1b00]}{color[0400]}连接旋转物体小节点{color[ffff]}{[0001|ffff]}，\n让{[0001|1b00]}{color[0400]}形状复杂的物体旋转{color[ffff]}{[0001|ffff]}起来！
104	在下个步骤中我们会\n把这次所学知识用于实践！
105	让我们来制作{[0001|1b00]}{color[0400]}会旋转的敌人{color[ffff]}{[0001|ffff]}吧！
106	那么，我会在下个步骤\n静候你的到来～！
Lesson_Shooting_06.msbt
000	你来了！\n{[0201]}！
001	场地的制作即将迎来高潮部分……
002	这次要用上次完成的\n{color[0400]}{[0001|1b00]}会旋转的障碍物{[0001|ffff]}{color[ffff]}……
003	来制作最终BOSS……\n也就是{[0001|1b00]}{color[0400]}会旋转的敌人{color[ffff]}{[0001|ffff]}～
004	那就让我们一边旋转……
005	一边进入游戏幕后的世界吧～！
006	先来制作最后的场地。
007	增设敌方外星人吧。
008	请{[0001|1b00]}{color[0400]}复制时尚物体小节点{color[ffff]}{[0001|ffff]}。
010	将所复制的时尚物体小节点\n放在{[0001|1b00]}{color[0400]}上方{color[ffff]}{[0001|ffff]}的蓝框处！
011	继续{color[0400]}{[0001|1b00]}复制{[0001|ffff]}{color[ffff]}……
012	移至蓝框处……
013	{color[0400]}{[0001|1b00]}复制{[0001|ffff]}{color[ffff]}。
014	移至蓝框处……
015	{color[0400]}{[0001|1b00]}复制{[0001|ffff]}{color[ffff]}……
016	移至蓝框处……！
017	最后再{color[0400]}{[0001|1b00]}复制{[0001|ffff]}{color[ffff]}一次……
018	移至蓝框处！
020-01	外星人增殖完毕！
021	接下来还要增设{[0001|1b00]}{color[0400]}墙壁{color[ffff]}{[0001|ffff]}。
022	请{[0001|1b00]}{color[0400]}复制{color[ffff]}{[0001|ffff]}这个{color[0400]}{[0001|1b00]}物体小节点{[0001|ffff]}{color[ffff]}！
024	缩小后置于{color[0400]}{[0001|1b00]}右下方{[0001|ffff]}{color[ffff]}蓝框处！
025	{color[0400]}{[0001|1b00]}复制{[0001|ffff]}{color[ffff]}……
026	{[0001|1b00]}{color[0400]}拉伸成瘦高形状{color[ffff]}{[0001|ffff]}移至蓝框处。
027	以相同方法增设{[0001|1b00]}{color[0400]}看不见的墙壁{color[ffff]}{[0001|ffff]}。
028	请{[0001|1b00]}{color[0400]}复制{color[ffff]}{[0001|ffff]}这个{color[0400]}{[0001|1b00]}物体小节点{[0001|ffff]}{color[ffff]}！
030	移至{color[0400]}{[0001|1b00]}右侧{[0001|ffff]}{color[ffff]}蓝框处。
031	再{color[0400]}{[0001|1b00]}复制{[0001|ffff]}{color[ffff]}一次，
032	移至{color[0400]}{[0001|1b00]}下方{[0001|ffff]}{color[ffff]}蓝框处。
033	恰到好处！
034	为便于快速确认这部分场地……
035	这次也请{[0001|1b00]}{color[0400]}选中游戏画面小节点{color[ffff]}{[0001|ffff]}……
036	移动他来调整起始位置。
037	再{color[0400]}{[0001|1b00]}选中{[0001|ffff]}{color[ffff]}UFO小节点……
038	也移动到蓝框处～
039	没问题！
040	前往游戏画面！
041	新的场地制作完成～！
042	下面来制作最后的大型机关……
043	{[0001|1b00]}{color[0400]}会旋转的敌人{color[ffff]}{[0001|ffff]}吧！
044	前往程序画面！
047	请先复制{[0001|1b00]}{color[0400]}时尚物体小节点{color[ffff]}{[0001|ffff]}！
049	既然要作为最终BOSS……\n请将其放大后放在蓝框处！
050	打开这个{[0001|1b00]}{color[0400]}时尚物体小节点{color[ffff]}{[0001|ffff]}的{color[0400]}{[0001|1b00]}设置{[0001|ffff]}{color[ffff]}……
051	将{[0001|1b00]}旋转{[0001|ffff]}的{[0001|1b00]}Y轴{[0001|ffff]}设为{[0001|1b00]}{color[0400]}0.00°{color[ffff]}{[0001|ffff]}。
052	并{color[0400]}{[0001|1b00]}开启{[0001|ffff]}{color[ffff]}{[0001|1b00]}状态{[0001|ffff]}中的“{[0001|1b00]}{color[0400]}能移动{color[ffff]}{[0001|ffff]}”。
053	没问题～
054	那就让我们去一睹……\nBOSS的庐山真面目吧！
055	出现了～～！\n巨大的……外星人！！
056	真不错！\n这才是最终BOSS的气场～
057	还要确认{[0001|1b00]}{color[0400]}能否用炮弹\n消灭{color[ffff]}{[0001|ffff]}BOSS……
058	因此请按下{[0001|1b00]}{color[0400]}重来键{color[ffff]}{[0001|ffff]}重来一次。
059	发射炮弹消灭{[0001|1b00]}{color[0400]}巨大的外星人{color[ffff]}{[0001|ffff]}吧！
060	干得漂亮！\n被消灭的场面也魄力十足！！
061	接下来，我们终于……
062	要让这个敌人转起来了～\n前往程序画面！
063	{[0001|1b00]}{color[0400]}外星人{color[ffff]}{[0001|ffff]}是{[0001|1b00]}{color[0400]}无法自行旋转的{color[ffff]}{[0001|ffff]}……
064	因此要借助上次也曾登场的\n{[0001|1b00]}{color[0400]}旋转物体小节点{color[ffff]}{[0001|ffff]}的力量～
065	请从{[0001|1b00]}物体{[0001|ffff]} {[0001|0500]}{[0001|ffff]} {[0001|1b00]}特殊物体{[0001|ffff]}\n{[0001|0500]}{[0001|ffff]} {[0001|1b00]}旋转物体{[0001|ffff]} {[0001|0500]}{[0001|ffff]} {[0001|1b00]}立方体{[0001|ffff]}当中\n叫出{[0001|1b00]}{color[0400]}旋转物体小节点{color[ffff]}{[0001|ffff]}！
066	嚯嚯嚯～～～♪\n{[0201]}，\n我们又见面了～～
069	请打开{[0001|1b00]}{color[0400]}旋转物体小节点{color[ffff]}{[0001|ffff]}的{[0001|1b00]}{color[0400]}设置{color[ffff]}{[0001|ffff]}……
070	仅{color[0400]}{[0001|1b00]}开启{[0001|ffff]}{color[ffff]}{[0001|1b00]}状态{[0001|ffff]}中的“{color[0400]}{[0001|1b00]}能移动{[0001|ffff]}{color[ffff]}”。
071	关闭设置。
072	嚯嚯嚯～\n让我隐身了是吧～～～～
073	即使从观众眼前消失～～\n我也会将旋转进行到底～～♪
075	要想旋转起来……\n需要接收{[0001|1b00]}{color[0400]}常数小节点{color[ffff]}{[0001|ffff]}输入的数值。
076	请从{[0001|1b00]}输入{[0001|ffff]} {[0001|0500]}{[0001|ffff]} {[0001|1b00]}常数{[0001|ffff]}当中叫出{[0001|1b00]}{color[0400]}常数小节点{color[ffff]}{[0001|ffff]}。
078	打开{[0001|1b00]}{color[0400]}常数小节点{color[ffff]}{[0001|ffff]}的{[0001|1b00]}{color[0400]}设置{color[ffff]}{[0001|ffff]}……
079	将{[0001|1b00]}“要输出什么数值？”{[0001|ffff]}设为{[0001|1b00]}{color[0400]}0.30{color[ffff]}{[0001|ffff]}。
080	完全正确！\n请关闭设置。
081	{[0001|1b00]}{color[0400]}0.30{color[ffff]}{[0001|ffff]}是吧。\n遵命，我会守常不变地输出{[0001|1b00]}{color[0400]}0.30{color[ffff]}{[0001|ffff]}。
082	然后请将{[0001|1b00]}{color[0400]}常数小节点{color[ffff]}{[0001|ffff]}连接到\n{[0001|1b00]}{color[0400]}旋转物体小节点{color[ffff]}{[0001|ffff]}的{[0001|1b00]}{color[0400]}Z轴端口{color[ffff]}{[0001|ffff]}。
083	我将献上优雅的旋转……\n以回报你的期待～
085	那么！请将{[0001|1b00]}{color[0400]}时尚物体小节点\n连接{color[ffff]}{[0001|ffff]}到{color[0400]}{[0001|1b00]}旋转物体小节点{[0001|ffff]}{color[ffff]}！
086	在宇宙中旋转……何其美妙的宿命♥
086-01	这样一来，巨大的外星人\n就能够旋转起来了！
087	去确认一下吧～
088	转得虎虎生风～～～～～～～！
089	魄力不言而喻……！
090	最终BOSS……\n{[0001|1b00]}{color[0400]}会旋转的敌人{color[ffff]}{[0001|ffff]}大功告成～～！
091	你可以尽情欣赏敌人旋转的样子～～\n不过还请在看得头晕之前……
092	返回程序画面吧～～！
130	那么～～这样一来～～
131	第7步就完成了～！
132	多么美妙的旋转～♪
133	恭喜了。
134	恭喜你。
135	无可挑剔♥
136	称职的最终BOSS——\n{[0001|1b00]}{color[0400]}会旋转的巨大敌人{color[ffff]}{[0001|ffff]}大功告成～！！
137	只要与{[0001|1b00]}状态{[0001|ffff]}中的“{[0001|1b00]}{color[0400]}能看见{color[ffff]}{[0001|ffff]}”{color[0400]}{[0001|1b00]}关闭{[0001|ffff]}{color[ffff]}后的\n{[0001|1b00]}{color[0400]}旋转物体小节点连接{color[ffff]}{[0001|ffff]}……
138	{[0001|1b00]}{color[0400]}无法自行旋转的物体{color[ffff]}{[0001|ffff]}\n也变得{[0001|1b00]}{color[0400]}能够旋转{color[ffff]}{[0001|ffff]}了～～！
139	那么……在下个步骤当中，\n我们终于要对{[0001|1b00]}{color[0400]}终点{color[ffff]}{[0001|ffff]}实施编程了！
140	敬请期待下个步骤～～！
Lesson_Shooting_07.msbt
000	{[0201]}，\n欢迎你的到来～！
001	在之前的步骤中\n我们已经基本完成了场地的制作……
004	这次要制作的是……！\n{[0001|1b00]}{color[0400]}终点的机制{color[ffff]}{[0001|ffff]}！
005	去吧……向终点进发！\n编程开始！
006	在对{[0001|1b00]}{color[0400]}终点的机制{color[ffff]}{[0001|ffff]}进行编程前……
007	我们先来增设{[0001|1b00]}{color[0400]}看不见的墙壁{color[ffff]}{[0001|ffff]}。
008	请{[0001|1b00]}{color[0400]}复制{color[ffff]}{[0001|ffff]}这个{color[0400]}{[0001|1b00]}物体小节点{[0001|ffff]}{color[ffff]}！
010	将其移动到右侧～
012	再{[0001|1b00]}{color[0400]}复制{color[ffff]}{[0001|ffff]}一次……
013	移至{color[0400]}{[0001|1b00]}下方{[0001|ffff]}{color[ffff]}！！
015	为了让玩家明白这里就是{[0001|1b00]}{color[0400]}终点{color[ffff]}{[0001|ffff]}……
016	想办法在这里{[0001|1b00]}{color[0400]}显示终点字样{color[ffff]}{[0001|ffff]}吧！
017	请从{[0001|1b00]}物体{[0001|ffff]} {[0001|0500]}{[0001|ffff]} {[0001|1b00]}特殊物体{[0001|ffff]} {[0001|0500]}{[0001|ffff]} {[0001|1b00]}{color[0400]}带注释物体{color[ffff]}{[0001|ffff]}当中\n叫出{[0001|1b00]}{color[0400]}带注释物体小节点{color[ffff]}{[0001|ffff]}。
018	化为清风的注释，\n承载着你的心意，\n传递给每一个人。
019	将这个{color[0400]}{[0001|1b00]}带注释物体小节点\n{[0001|ffff]}{color[ffff]}横向拉伸至可容纳注释内容……
020	打开{[0001|1b00]}{color[0400]}带注释物体小节点{color[ffff]}{[0001|ffff]}的{[0001|1b00]}{color[0400]}设置{color[ffff]}{[0001|ffff]}。
021	请按下{[0001|1b00]}{color[0400]}编辑{color[ffff]}{[0001|ffff]}键输入{color[0400]}{[0001|1b00]}“终点”{[0001|ffff]}{color[ffff]}！
022	是否已输入{color[0400]}{[0001|1b00]}“终点”{[0001|ffff]}{color[ffff]}？
023	是
024	否
025	那么请输入{color[0400]}{[0001|1b00]}“终点”{[0001|ffff]}{color[ffff]}。
026	接着，\n请仅{color[0400]}{[0001|1b00]}开启{[0001|ffff]}{color[ffff]}{[0001|1b00]}状态{[0001|ffff]}中的“{color[0400]}{[0001|1b00]}能看见{[0001|ffff]}{color[ffff]}”。
027	之后，打开{color[0400]}{[0001|1b00]}颜色{[0001|ffff]}{color[ffff]}……
028	设为和谐融入宇宙背景的……\n{color[0400]}{[0001|1b00]}黑色{[0001|ffff]}{color[ffff]}吧。
029	至于{color[0400]}{[0001|1b00]}文字颜色{[0001|ffff]}{color[ffff]}……
030	为了在宇宙中也能清晰可辨……\n设为{color[0400]}{[0001|1b00]}白色{[0001|ffff]}{color[ffff]}。
032	最后！{[0001|1b00]}\n{[0001|ffff]}请将{[0001|1b00]}位置{[0001|ffff]}的{[0001|1b00]}Z{[0001|ffff]}设为{[0001|1b00]}{color[0400]}1.00m{color[ffff]}{[0001|ffff]}！
033	没问题！\n关闭设置吧。
034	终点象征着开始而非结束。
035	终点正是你的起点。
037	……那么！\n让我们去看看{[0001|1b00]}{color[0400]}终点显示{color[ffff]}{[0001|ffff]}的情况吧！
038	前进至{[0001|1b00]}{color[0400]}终点显示{color[ffff]}{[0001|ffff]}的位置……
039	这里就是终点！
040	既然终点位置已定……
043	就让我们在这里设计\n当UFO抵达终点时会显示的{[0001|1b00]}{color[0400]}终点特效{color[ffff]}{[0001|ffff]}吧！
045	用炫酷的特效\n为突破了漫长的场地，\n终于抵达终点的UFO贺喜！
047	为了获取UFO{[0001|1b00]}{color[0400]}已抵达终点的信息{color[ffff]}{[0001|ffff]}……\n先叫出{[0001|1b00]}{color[0400]}接触感应器小节点{color[ffff]}{[0001|ffff]}！
049	请选择{[0001|1b00]}{color[0400]}物体{color[ffff]}{[0001|ffff]}。
050	{[0001|1b00]}{color[0400]}感应器{color[ffff]}{[0001|ffff]}。
051	最后选择{[0001|1b00]}{color[0400]}接触感应器{color[ffff]}{[0001|ffff]}，\n叫出{[0001|1b00]}{color[0400]}接触感应器小节点{color[ffff]}{[0001|ffff]}！
052	噫……！\n怎、怎么了～～？？
053	啊……\n原来是游戏程序员……\n请不要吓我嘛～～
055	接触感应器小节点的作用是\n在游戏画面中放置{[0001|1b00]}{color[0400]}感应器{color[ffff]}{[0001|ffff]}，\n{[0001|1b00]}{color[0400]}探测有无与什么物体发生接触{color[ffff]}{[0001|ffff]}。
056	首先将{color[0400]}{[0001|1b00]}接触感应器小节点{[0001|ffff]}{color[ffff]}拉伸成瘦高形状，\n以确保UFO能够接触到他。
057	然后打开{[0001|1b00]}{color[0400]}接触感应器小节点{color[ffff]}{[0001|ffff]}的{[0001|1b00]}{color[0400]}设置{color[ffff]}{[0001|ffff]}……
058	打开“{[0001|1b00]}{color[0400]}要检查什么？{color[ffff]}{[0001|ffff]}”。
059	当其中设为{color[0400]}{[0001|1b00]}开启{[0001|ffff]}{color[ffff]}的物体与感应器接触时，\n接触感应器小节点就会{color[0400]}{[0001|1b00]}输出信号{[0001|ffff]}{color[ffff]}了。
060	仅将{[0001|1b00]}{color[0400]}UFO{color[ffff]}{[0001|ffff]}设为{[0001|1b00]}{color[0400]}开启{color[ffff]}{[0001|ffff]}。
061	没问题！\n请关闭详细设置……
062	再关闭设置。
063	噫……\nUFO要撞过来了……！？
065	那么为了便于确认，\n照例选中{[0001|1b00]}{color[0400]}游戏画面小节点{color[ffff]}{[0001|ffff]}……
066	将其移动到终点附近。
067	再{[0001|1b00]}{color[0400]}选中UFO小节点{color[ffff]}{[0001|ffff]}……
068	也移动他！
069	好了，去游戏画面\n确认接触感应器的情况吧！
072	这里的白色网格线就是{[0001|1b00]}{color[0400]}接触感应器{color[ffff]}{[0001|ffff]}。
073	当UFO与感应器接触即为抵达终点！
075	那么，\n让我们隐藏白色网格线吧～！
076	前往程序画面！
077	请打开{[0001|1b00]}{color[0400]}接触感应器小节点{color[ffff]}{[0001|ffff]}的{[0001|1b00]}{color[0400]}设置{color[ffff]}{[0001|ffff]}。
078	{color[0400]}{[0001|1b00]}关闭状态{[0001|ffff]}{color[ffff]}中的“{color[0400]}{[0001|1b00]}能看见{[0001|ffff]}{color[ffff]}”。
079	关闭设置。
080	去确认一下效果吧！
081	准确到位！\n感应器的白线消失了。
082	下面让我们正式对{[0001|1b00]}{color[0400]}终点特效\n{color[ffff]}{[0001|ffff]}实施编程吧！
084	前往程序画面！
101	添加声音与特效\n来庆祝成功抵达终点吧～！
103	首先从{[0001|1b00]}输出{[0001|ffff]} {[0001|0500]}{[0001|ffff]} {[0001|1b00]}播放声音{[0001|ffff]} {[0001|0500]}{[0001|ffff]} {[0001|1b00]}播放音效{[0001|ffff]}当中\n叫出{[0001|1b00]}{color[0400]}播放声音小节点{color[ffff]}{[0001|ffff]}！
104	恭喜你～～～\n抵达终点喽～～～♪
106	请打开{[0001|1b00]}{color[0400]}播放声音小节点{color[ffff]}{[0001|ffff]}的{[0001|1b00]}{color[0400]}设置{color[ffff]}{[0001|ffff]}。
107	打开{[0001|1b00]}效果音乐{[0001|ffff]}……
108	选择{[0001|1b00]}{color[0400]}非常开心{color[ffff]}{[0001|ffff]}！
108-01	不错嘛，好欢快的声音！\n名副其实！
109	关闭当前画面……
110	再关闭设置～
111	将{[0001|1b00]}{color[0400]}接触感应器小节点{color[ffff]}{[0001|ffff]}连接到\n{[0001|1b00]}{color[0400]}播放声音小节点{color[ffff]}{[0001|ffff]}的{[0001|1b00]}{color[0400]}播放端口{color[ffff]}{[0001|ffff]}。
112	交给我吧～～♪
113	噫……！！
113-01	这样一来，\n当UFO接触到接触感应器时，\n就会响起声音了～！
114	接下来还要叫出{color[0400]}{[0001|1b00]}特效小节点{[0001|ffff]}{color[ffff]}，\n在抵达终点时燃放烟花！
115	请从{[0001|1b00]}物体{[0001|ffff]} {[0001|0500]}{[0001|ffff]} {[0001|1b00]}特殊物体{[0001|ffff]}\n{[0001|0500]}{[0001|ffff]} {[0001|1b00]}特效{[0001|ffff]} {[0001|0500]}{[0001|ffff]} {[0001|1b00]}烟花{[0001|ffff]}当中叫出{[0001|1b00]}{color[0400]}特效小节点{color[ffff]}{[0001|ffff]}！
120	你好啊～{[0201]}！\n制作游戏辛苦了。
121	又一款游戏制作完成……\n所以大家准备一起放烟花庆功对吧～！
122	……什么，原来不是制作完成，\n而是抵达终点的烟花啊！！
123	请将{[0001|1b00]}{color[0400]}接触感应器小节点\n{color[ffff]}{[0001|ffff]}连接到{[0001|1b00]}{color[0400]}特效小节点{color[ffff]}{[0001|ffff]}。
123-01	经此一举！\n当UFO接触到接触感应器时，\n不仅会响起声音，还会燃放烟花！
128	那就去确认一下吧～～
129	请操纵UFO华丽抵达终点！！
130	抵达——————终点！！
131	{[0001|1b00]}{color[0400]}烟花特效{color[ffff]}{[0001|ffff]}与{[0001|1b00]}{color[0400]}终点音效{color[ffff]}{[0001|ffff]}\n都得以完美展示了～～！
132	最后让我们按照惯例……\n制作{[0001|1b00]}{color[0400]}抵达终点后游戏重来的机制{color[ffff]}{[0001|ffff]}。
134	前往程序画面吧～
135	请从{[0001|1b00]}输出{[0001|ffff]} {[0001|0500]}{[0001|ffff]} {[0001|1b00]}重来、结束、切换{[0001|ffff]}\n{[0001|0500]}{[0001|ffff]} {[0001|1b00]}重来游戏{[0001|ffff]}当中叫出{[0001|1b00]}{color[0400]}重来小节点{color[ffff]}{[0001|ffff]}。
136	唉……真想重新来过……
137	……怎么了？
138	我有一天睡午觉时……
140	好像在梦中大喊……\n“本大爷是世界之王！！”来着……
141	哎呀……\n羞死人了……真想重新来过……
143	……呃～\n让我们言归正传！
144	请从{[0001|1b00]}中间{[0001|ffff]} {[0001|0500]}{[0001|ffff]} {[0001|1b00]}计时{[0001|ffff]}当中叫出{[0001|1b00]}{color[0400]}计时小节点{color[ffff]}{[0001|ffff]}。
145	请长话短说。
146	毕竟时间不是无穷无尽的，\n无意义地浪费时间简直罪无可恕。
173	古人云，“一寸光阴一寸金”，时间就是金钱，\n所谓“寸金难买寸光阴”，足以证明时间的宝贵。\n因此能否合理而有效地利用时间是决定生产效率的……
147	好！那我们长话短说！\n请打开计时小节点的{[0001|1b00]}{color[0400]}设置{color[ffff]}{[0001|ffff]}～！
148	将“{[0001|1b00]}在几秒后输出{[0001|ffff]}”设为{[0001|1b00]}{color[0400]}6.00{color[ffff]}{[0001|ffff]}。
149	没问题！\n请关闭设置！
151	好了！\n连接{[0001|1b00]}{color[0400]}接触感应器小节点\n{color[ffff]}{[0001|ffff]}与{[0001|1b00]}{color[0400]}计时小节点{color[ffff]}{[0001|ffff]}……
152	再连接{[0001|1b00]}{color[0400]}计时小节点\n{color[ffff]}{[0001|ffff]}与{[0001|1b00]}{color[0400]}重来小节点{color[ffff]}{[0001|ffff]}……
153	这样{[0001|1b00]}{color[0400]}抵达终点后重来的机制\n{color[ffff]}{[0001|ffff]}就大功告成了！
154	那么！\n去游戏画面确认一下吧！
157	请操纵UFO抵达终点！
157-01	请稍等……
158	游戏{[0001|1b00]}{color[0400]}重来{color[ffff]}{[0001|ffff]}了～～！
159	至此{[0001|1b00]}{color[0400]}终点的机制{color[ffff]}{[0001|ffff]}宣告完成！
160	请前往程序画面～！
161	那么～～这样一来～～
162	第8步就完成了～！
163	恭喜恭喜恭喜你～～♪
164	开个庆功会吧～～！！
165	你想说的话……\n已经随风飘到大家心中了哦。
166	恭……恭喜你～！
167	这次我们通过编程……\n设计了{[0001|1b00]}{color[0400]}终点的机制{color[ffff]}{[0001|ffff]}与{[0001|1b00]}{color[0400]}特效{color[ffff]}{[0001|ffff]}！
169	剩下的步骤……就只有{[0001|1b00]}{color[0400]}2个{color[ffff]}{[0001|ffff]}了！！
170	在下个步骤中……\n我们将制作射击游戏中\n不可或缺的{[0001|1b00]}{color[0400]}得分显示{color[ffff]}{[0001|ffff]}！
172	敬请期待～！！！
Lesson_Shooting_08.msbt
000	你终于来了！\n{[0201]}。
001	上次我们制作了{[0001|1b00]}{color[0400]}终点的机制{color[ffff]}{[0001|ffff]}！
002	就此宣告游戏完成……\n……其实也不为过……
003	但我们不妨再尝试一项挑战！
004	那就是本次要编程的内容……\n为游戏添加{[0001|1b00]}{color[0400]}得分显示{color[ffff]}{[0001|ffff]}！
005	此外！
006	如果在消灭所有敌人的\n前提下抵达终点……\n还要显示“{[0001|1b00]}{color[0400]}完美！{color[ffff]}{[0001|ffff]}”字样！
008	让我们前往程序画面！
009	首先从{[0001|1b00]}{color[0400]}得分显示{color[ffff]}{[0001|ffff]}开始编程。
010	要统计{[0001|1b00]}{color[0400]}所消灭的外星人数量\n{color[ffff]}{[0001|ffff]}并{[0001|1b00]}{color[0400]}显示在画面中{color[ffff]}{[0001|ffff]}哦！
011	首先从{[0001|1b00]}输入{[0001|ffff]} {[0001|0500]}{[0001|ffff]} {[0001|1b00]}游戏内的变化{[0001|ffff]}\n{[0001|0500]}{[0001|ffff]} {[0001|1b00]}物体损坏时{[0001|ffff]}当中叫出{[0001|1b00]}{color[0400]}物体损坏时小节点{color[ffff]}{[0001|ffff]}。
012	怎么着？\n这次要统计外星人的损坏数量吗？
013	你可真是个\n破坏物体爱好者啊～
015	那么，请打开{[0001|1b00]}{color[0400]}物体损坏时小节点{color[ffff]}{[0001|ffff]}的{[0001|1b00]}{color[0400]}设置{color[ffff]}{[0001|ffff]}。
016	打开“{[0001|1b00]}{color[0400]}要检查什么？{color[ffff]}{[0001|ffff]}”……
017	仅将{[0001|1b00]}{color[0400]}外星人{color[ffff]}{[0001|ffff]}设为{[0001|1b00]}{color[0400]}开启{color[ffff]}{[0001|ffff]}。
018	请关闭当前画面……
019	再关闭设置！
021	接下来请从{[0001|1b00]}中间{[0001|ffff]} {[0001|0500]}{[0001|ffff]} {[0001|1b00]}旗标、计数、随机{[0001|ffff]}\n{[0001|0500]}{[0001|ffff]} {[0001|1b00]}计数{[0001|ffff]}当中叫出{[0001|1b00]}{color[0400]}计数小节点{color[ffff]}{[0001|ffff]}。
023	然后请将{[0001|1b00]}{color[0400]}物体损坏时小节点{color[ffff]}{[0001|ffff]}与\n{[0001|1b00]}{color[0400]}计数小节点{color[ffff]}{[0001|ffff]}的{[0001|1b00]}{color[0400]}增加端口{color[ffff]}{[0001|ffff]}进行连接。
024	{[0001|1b00]}{color[0400]}如果外星人损坏了{color[ffff]}{[0001|ffff]}，\n我会告诉你的！
025	那么，我会统计\n外星人的损坏数量。
026	最后请从{[0001|1b00]}物体{[0001|ffff]} {[0001|0500]}{[0001|ffff]} {[0001|1b00]}特殊物体{[0001|ffff]} {[0001|0500]}{[0001|ffff]} {[0001|1b00]}带数字物体{[0001|ffff]}\n当中叫出{[0001|1b00]}{color[0400]}带数字物体小节点{color[ffff]}{[0001|ffff]}。
027	请向我输入想要显示的数字哦。
028	请打开{[0001|1b00]}{color[0400]}带数字物体小节点{color[ffff]}{[0001|ffff]}的{[0001|1b00]}{color[0400]}设置{color[ffff]}{[0001|ffff]}。
029	仅{color[0400]}{[0001|1b00]}开启{[0001|ffff]}{color[ffff]}{[0001|1b00]}状态{[0001|ffff]}中的“{color[0400]}{[0001|1b00]}能看见{[0001|ffff]}{color[ffff]}”。
030	接下来打开{color[0400]}{[0001|1b00]}颜色{[0001|ffff]}{color[ffff]}……
031	设为{color[0400]}{[0001|1b00]}黑色{[0001|ffff]}{color[ffff]}吧。
032	至于{color[0400]}{[0001|1b00]}文字颜色{[0001|ffff]}{color[ffff]}……
033	设为{color[0400]}{[0001|1b00]}白色{[0001|ffff]}{color[ffff]}。
036	没问题！
037	将{[0001|1b00]}{color[0400]}计数小节点{color[ffff]}{[0001|ffff]}连接到\n{[0001|1b00]}{color[0400]}带数字物体小节点{color[ffff]}{[0001|ffff]}。
038	{[0001|1b00]}{color[0400]}显示所消灭的外星人数量{color[ffff]}{[0001|ffff]}就好了吧？
041	好！\n按说应该进入游戏画面确认了……
042	但在那之前还有个问题！
043	若不消灭敌人，\n{[0001|1b00]}{color[0400]}得分的数字将始终为0{color[ffff]}{[0001|ffff]}……
044	因此请{[0001|1b00]}{color[0400]}选中游戏画面小节点{color[ffff]}{[0001|ffff]}……
045	{[0001|1b00]}{color[0400]}移动{color[ffff]}{[0001|ffff]}到{color[0400]}{[0001|1b00]}存在敌人的区域{[0001|ffff]}{color[ffff]}以消灭敌人。
046	再{[0001|1b00]}{color[0400]}选中UFO小节点{color[ffff]}{[0001|ffff]}……
047	也{color[0400]}{[0001|1b00]}移动{[0001|ffff]}{color[ffff]}到蓝框处。
048	好了，去看看效果吧！
049	一边消灭敌人，\n一边向终点进发吧！
050	{[0001|1b00]}{color[0400]}消灭的外星人数量{color[ffff]}{[0001|ffff]}成功显示出来了～！
051	但是……单纯显示数字，\n别人可能{[0001|1b00]}{color[0400]}不明白这个数字代表什么{color[ffff]}{[0001|ffff]}。
052	让我们通过注释添加说明吧～
053	要想通过注释\n说明数字代表{[0001|1b00]}{color[0400]}得分{color[ffff]}{[0001|ffff]}……
054	请{[0001|1b00]}{color[0400]}复制带注释物体小节点{color[ffff]}{[0001|ffff]}！
058	将其稍微缩小一些后\n放在带数字物体小节点旁边！
062	请打开{[0001|1b00]}{color[0400]}带注释物体小节点{color[ffff]}{[0001|ffff]}的{[0001|1b00]}{color[0400]}设置{color[ffff]}{[0001|ffff]}……
063	按下编辑并输入{[0001|1b00]}{color[0400]}“得分”{color[ffff]}{[0001|ffff]}。
064	是否已输入{[0001|1b00]}{color[0400]}“得分”{color[ffff]}{[0001|ffff]}？
065	是
066	否
067	请输入{[0001|1b00]}{color[0400]}“得分”{color[ffff]}{[0001|ffff]}。
069	然后将{[0001|1b00]}位置{[0001|ffff]}的{[0001|1b00]}Z{[0001|ffff]}设为{[0001|1b00]}{color[0400]}0.00m{color[ffff]}{[0001|ffff]}。
070	完全正确！\n请关闭设置。
071	那就去确认一下吧！
072	那么！\n一边消灭外星人……\n一边向终点进发吧！
074	现在一看便知，数字代表的是{[0001|1b00]}{color[0400]}得分{color[ffff]}{[0001|ffff]}！
075	不过……
077	还没抵达终点，\n{[0001|1b00]}{color[0400]}得分就一览无余{color[ffff]}{[0001|ffff]}了……
078	因此我们要通过编程……\n使{[0001|1b00]}{color[0400]}得分在抵达终点之后才会出现{color[ffff]}{[0001|ffff]}！
079	前往程序画面！
081	首先让我们将得分显示\n移出游戏画面可见的范围。
083	将{[0001|1b00]}{color[0400]}带注释物体小节点\n{color[ffff]}{[0001|ffff]}放到游戏画面外。
084	再将{[0001|1b00]}{color[0400]}带数字物体小节点{color[ffff]}{[0001|ffff]}也\n移动到他旁边。
084-01	这样一来，\n在游戏画面中就看不到得分了。
084-02	接下来要在抵达终点之后\n将该得分{color[0400]}{[0001|1b00]}传送{[0001|ffff]}{color[ffff]}至游戏画面中！
086	为了一并传送{[0001|1b00]}{color[0400]}带注释物体{color[ffff]}{[0001|ffff]}与{[0001|1b00]}{color[0400]}带数字物体{color[ffff]}{[0001|ffff]}……
088	请将{[0001|1b00]}{color[0400]}带数字物体小节点\n连接{color[ffff]}{[0001|ffff]}到{[0001|1b00]}{color[0400]}带注释物体小节点{color[ffff]}{[0001|ffff]}。
090	接着请打开{[0001|1b00]}{color[0400]}带数字物体小节点{color[ffff]}{[0001|ffff]}的{[0001|1b00]}{color[0400]}设置{color[ffff]}{[0001|ffff]}……
091	打开{color[0400]}{[0001|1b00]}连接面{[0001|ffff]}{color[ffff]}。
092	将“{color[0400]}{[0001|1b00]}自己的连接面{[0001|ffff]}{color[ffff]}”设为{color[0400]}{[0001|1b00]}X-{[0001|ffff]}{color[ffff]}。
093	将“{color[0400]}{[0001|1b00]}连接对象的连接面{[0001|ffff]}{color[ffff]}”设为{color[0400]}{[0001|1b00]}X+{[0001|ffff]}{color[ffff]}。
093-01	这样一来，带数字物体就会\n粘在带注释物体的{[0001|1b00]}{color[0400]}右侧{color[ffff]}{[0001|ffff]}了！
094	请关闭当前画面。
095	关闭设置！
096	那么！\n让我们来编程{color[0400]}{[0001|1b00]}传送得分显示{[0001|ffff]}{color[ffff]}吧！
097	请从{[0001|1b00]}物体{[0001|ffff]} {[0001|0500]}{[0001|ffff]} {[0001|1b00]}放出、消除、引力{[0001|ffff]}\n{[0001|0500]}{[0001|ffff]} {[0001|1b00]}传送物体{[0001|ffff]} {[0001|0500]}{[0001|ffff]} {[0001|1b00]}{color[0400]}入口{color[ffff]}{[0001|ffff]}当中叫出\n{[0001|1b00]}{color[0400]}传送物体入口小节点{color[ffff]}{[0001|ffff]}！
099	呜呼，欲使游戏得分显隐自如……
100	吾将不吝相助。
100-01	那么，请将传送物体入口小节点放在\n与带注释物体小节点略微重合的位置。
102	接着请从{[0001|1b00]}物体{[0001|ffff]} {[0001|0500]}{[0001|ffff]} {[0001|1b00]}放出、消除、引力{[0001|ffff]}\n{[0001|0500]}{[0001|ffff]} {[0001|1b00]}传送物体{[0001|ffff]} {[0001|0500]}{[0001|ffff]} {[0001|1b00]}{color[0400]}出口{color[ffff]}{[0001|ffff]}当中叫出\n{[0001|1b00]}{color[0400]}传送物体出口小节点{color[ffff]}{[0001|ffff]}！
104	呜呼，\n得分无疑将穿越时空，\n降临至吾所在之处。
108	然后请打开{[0001|1b00]}{color[0400]}传送物体出口小节点{color[ffff]}{[0001|ffff]}的{[0001|1b00]}{color[0400]}设置{color[ffff]}{[0001|ffff]}。
109	{color[0400]}{[0001|1b00]}关闭{[0001|ffff]}{color[ffff]}{[0001|1b00]}状态{[0001|ffff]}中的“{color[0400]}{[0001|1b00]}能看见{[0001|ffff]}{color[ffff]}”。
110	将{[0001|1b00]}位置{[0001|ffff]}的{[0001|1b00]}Z{[0001|ffff]}设为{[0001|1b00]}{color[0400]}1.00m{color[ffff]}{[0001|ffff]}。
111	没问题！\n关闭设置！
113	接下来！\n请连接{[0001|1b00]}{color[0400]}接触感应器小节点{color[ffff]}{[0001|ffff]}与\n{[0001|1b00]}{color[0400]}传送物体入口小节点{color[ffff]}{[0001|ffff]}！
114	这样一来在抵达终点之后，\n得分就会被{color[0400]}{[0001|1b00]}传送{[0001|ffff]}{color[ffff]}到游戏画面中了！
115	去游戏画面确认一下吧！
116	向终点进发～\n瞄准！开火！！
118	抵达终点之后，得分出现了～！！
119	接下来要更进一步……
120	仅在{color[0400]}{[0001|1b00]}消灭全部外星人{[0001|ffff]}{color[ffff]}时\n让“{[0001|1b00]}{color[0400]}完美{color[ffff]}{[0001|ffff]}”字样出现在游戏画面中！
121	前往程序画面！
122	和得分相同，要想让“完美”出现，\n也要借助{color[0400]}{[0001|1b00]}传送{[0001|ffff]}{color[ffff]}的力量～！
123	请先{[0001|1b00]}{color[0400]}复制带注释物体小节点{color[ffff]}{[0001|ffff]}。
124	将所复制的{[0001|1b00]}{color[0400]}带注释物体小节点\n{color[ffff]}{[0001|ffff]}稍微放大一点，放在下方。
125	请打开这个{[0001|1b00]}{color[0400]}带注释物体小节点{color[ffff]}{[0001|ffff]}的{[0001|1b00]}{color[0400]}设置{color[ffff]}{[0001|ffff]}……
126	按下{[0001|1b00]}编辑{[0001|ffff]}输入{[0001|1b00]}{color[0400]}“完美！”{color[ffff]}{[0001|ffff]}。
127	是否已输入{[0001|1b00]}{color[0400]}“完美！”{color[ffff]}{[0001|ffff]}？
128	是
129	否
130	请输入{[0001|1b00]}{color[0400]}“完美！”{color[ffff]}{[0001|ffff]}。
131	接下来打开{[0001|1b00]}{color[0400]}文字颜色{color[ffff]}{[0001|ffff]}……
132	设为醒目的{[0001|1b00]}{color[0400]}黄色{color[ffff]}{[0001|ffff]}吧。
133	没问题！\n请关闭设置！
134	然后请{[0001|1b00]}{color[0400]}复制传送物体入口小节点{color[ffff]}{[0001|ffff]}。
136	呜呼，此番大获全胜，\n欲诉诸文字纪念……\n亦无不可。
138	将所复制的传送物体入口小节点\n放在与带注释物体小节点\n略微重合的位置～
139	请打开传送物体入口小节点的{[0001|1b00]}{color[0400]}设置{color[ffff]}{[0001|ffff]}。
140	将{[0001|1b00]}传送ID{[0001|ffff]}设为{[0001|1b00]}{color[0400]}B{color[ffff]}{[0001|ffff]}。
141	关闭设置。
144	同样{[0001|1b00]}{color[0400]}复制传送物体出口小节点{color[ffff]}{[0001|ffff]}。
145	放在得分显示位置的上方～
149	呜呼，\n已连接{[0001|1b00]}{color[0400]}入口B{color[ffff]}{[0001|ffff]}之亚空间……
150	呜呼，\n亚空间之{[0001|1b00]}{color[0400]}出口{color[ffff]}{[0001|ffff]}似已{[0001|1b00]}{color[0400]}确定{color[ffff]}{[0001|ffff]}……
151	这样一来，传送“完美”字样的\n准备工作已经就绪！
152	那么，接下来要编程设置\n在何种情况下显示“完美”……\n也就是{[0001|1b00]}{color[0400]}达成完美的条件{color[ffff]}{[0001|ffff]}。
153	达成完美的条件是\n{[0001|1b00]}{color[0400]}消灭所有外星人……\n即消灭20个外星人{color[ffff]}{[0001|ffff]}。
154	{color[0400]}{[0001|1b00]}所消灭的外星人数量{[0001|ffff]}{color[ffff]}是由\n{[0001|1b00]}{color[0400]}计数小节点{color[ffff]}{[0001|ffff]}负责统计的。
155	是的，我在统计。
156	我们的目标是在{[0001|1b00]}{color[0400]}计数小节点的\n数值变为20时传送物体{color[ffff]}{[0001|ffff]}……
157	因此请从{[0001|1b00]}中间{[0001|ffff]} {[0001|0500]}{[0001|ffff]} {[0001|1b00]}比较{[0001|ffff]} {[0001|0500]}{[0001|ffff]} {[0001|1b00]}＝{[0001|ffff]}当中\n叫出{[0001|1b00]}{color[0400]}比较小节点{color[ffff]}{[0001|ffff]}！
159	你一定很想知道……\n是否已消灭20个外星人对吧！
160	接下来请从{[0001|1b00]}输入{[0001|ffff]} {[0001|0500]}{[0001|ffff]} {[0001|1b00]}常数{[0001|ffff]}当中\n叫出{[0001|1b00]}{color[0400]}常数小节点{color[ffff]}{[0001|ffff]}。
162	打开常数小节点的设置。
163	为比较是否已消灭20个外星人……\n需要将“{[0001|1b00]}要输出什么数值？{[0001|ffff]}”设为{[0001|1b00]}{color[0400]}20.00{color[ffff]}{[0001|ffff]}。
164	没问题！
165	{[0001|1b00]}{color[0400]}20.00{color[ffff]}{[0001|ffff]}是吧。\n遵命，我会守常不变地输出{[0001|1b00]}{color[0400]}20.00{color[ffff]}{[0001|ffff]}。
166	请将{[0001|1b00]}{color[0400]}计数小节点{color[ffff]}{[0001|ffff]}连接到\n{[0001|1b00]}{color[0400]}比较小节点{color[ffff]}{[0001|ffff]}的{[0001|1b00]}{color[0400]}输入1端口{color[ffff]}{[0001|ffff]}。
167	将{[0001|1b00]}{color[0400]}常数小节点{color[ffff]}{[0001|ffff]}连接到\n{[0001|1b00]}{color[0400]}比较小节点{color[ffff]}{[0001|ffff]}的{[0001|1b00]}{color[0400]}输入2端口{color[ffff]}{[0001|ffff]}。
170	这样一来，当{color[0400]}{[0001|1b00]}消灭20个外星人{[0001|ffff]}{color[ffff]}……\n也就是达成{color[0400]}{[0001|1b00]}完美{[0001|ffff]}{color[ffff]}的条件时，\n比较小节点就会输出信号！
171	最后将{[0001|1b00]}{color[0400]}比较小节点{color[ffff]}{[0001|ffff]}连接到\n{[0001|1b00]}{color[0400]}传送物体入口小节点{color[ffff]}{[0001|ffff]}，这样一来……
173	虽然看似已经实现目标……\n但其实还有一点小问题。
174	现在，在{color[0400]}{[0001|1b00]}消灭20个外星人的瞬间{[0001|ffff]}{color[ffff]}，\n“完美”字样就会出现。
175	就让“完美”与得分\n同样在{color[0400]}{[0001|1b00]}抵达终点时{[0001|ffff]}{color[ffff]}出现吧！
176	{[0001|1b00]}{color[0400]}消灭了20个外星人{color[ffff]}{[0001|ffff]}，\n且{[0001|1b00]}{color[0400]}UFO抵达终点{color[ffff]}{[0001|ffff]}……
177	我们要制作\n在同时{[0001|1b00]}{color[0400]}满足这2个条件时{color[ffff]}{[0001|ffff]}，\n“完美”字样才会出现的机制。
179	为此～\n需要使用{[0001|1b00]}{color[0400]}AND小节点{color[ffff]}{[0001|ffff]}！
180	请选择{[0001|1b00]}{color[0400]}中间{color[ffff]}{[0001|ffff]}。
181	{[0001|1b00]}{color[0400]}逻辑{color[ffff]}{[0001|ffff]}。
182	最后选择{[0001|1b00]}{color[0400]}AND{color[ffff]}{[0001|ffff]}，\n叫出{[0001|1b00]}{color[0400]}AND小节点{color[ffff]}{[0001|ffff]}。
183	右边没问题！左边没问题！\n我是AND小节点！
184	我只有在2个输入端口{[0001|1b00]}{color[0400]}全都没问题{color[ffff]}{[0001|ffff]}的情况下\n才会输出信号！
185	{[0001|1b00]}{color[0400]}AND小节点{color[ffff]}{[0001|ffff]}仅在2个输入端口{[0001|1b00]}\n{color[0400]}全都{color[ffff]}{[0001|ffff]}有信号输入时才会{[0001|1b00]}{color[0400]}输出信号{color[ffff]}{[0001|ffff]}。
188	请将{[0001|1b00]}{color[0400]}比较小节点{color[ffff]}{[0001|ffff]}连接到\n{[0001|1b00]}{color[0400]}AND小节点{color[ffff]}{[0001|ffff]}的{[0001|1b00]}{color[0400]}输入2端口{color[ffff]}{[0001|ffff]}。
189	没问题没问题！\n{[0001|1b00]}{color[0400]}消灭20个外星人\n{color[ffff]}{[0001|ffff]}……是{[0001|1b00]}{color[0400]}第1个条件{color[ffff]}{[0001|ffff]}对吧。
191	然后将{[0001|1b00]}{color[0400]}接触感应器小节点{color[ffff]}{[0001|ffff]}连接到\n{[0001|1b00]}{color[0400]}AND小节点{color[ffff]}{[0001|ffff]}的{[0001|1b00]}{color[0400]}输入1端口{color[ffff]}{[0001|ffff]}！
192	嚯嚯！\n{[0001|1b00]}{color[0400]}抵达终点{color[ffff]}{[0001|ffff]}……是{[0001|1b00]}{color[0400]}第2个条件{color[ffff]}{[0001|ffff]}对吧。
193	接下来请将{[0001|1b00]}{color[0400]}AND小节点\n{color[ffff]}{[0001|ffff]}连接到{[0001|1b00]}{color[0400]}传送物体入口小节点{color[ffff]}{[0001|ffff]}！
194	这样一来！\n在{color[0400]}{[0001|1b00]}消灭20个外星人{[0001|ffff]}{color[ffff]}并且{color[0400]}{[0001|1b00]}抵达终点{[0001|ffff]}{color[ffff]}时……
194-01	{color[0400]}{[0001|1b00]}“完美”字样出现的机制\n{[0001|ffff]}{color[ffff]}就大功告成了！
195	尽管迫不及待地想确认成果……
196	但消灭全部20个外星人\n哪有那么容易呢～～！？
199	那就放宽达成完美的条件……\n以供{[0001|1b00]}{color[0400]}确认时专用{color[ffff]}{[0001|ffff]}吧。
201	请打开{[0001|1b00]}{color[0400]}常数小节点{color[ffff]}{[0001|ffff]}的{color[0400]}{[0001|1b00]}设置{[0001|ffff]}{color[ffff]}。
202	将“{[0001|1b00]}要输出什么数值？{[0001|ffff]}”更改为{[0001|1b00]}{color[0400]}3.00{color[ffff]}{[0001|ffff]}。
202-01	这样一来，\n消灭{color[0400]}{[0001|1b00]}不多不少3个{[0001|ffff]}{color[ffff]}外星人时，\n“完美”字样就会出现了。
203	关闭设置吧～
205	下面让我们前去确认\n“完美”的显示是否正常！
206	消灭{[0001|1b00]}{color[0400]}不多不少3个{color[ffff]}{[0001|ffff]}外星人并抵达终点，\n以{[0001|1b00]}{color[0400]}显示“完美”字样{color[ffff]}{[0001|ffff]}！
207	“完美”字样出现了～！
208	请消灭{[0001|1b00]}{color[0400]}不多不少3个{color[ffff]}{[0001|ffff]}外星人哦！\n再尝试一次吧！
209	别灰心！\n消灭{[0001|1b00]}{color[0400]}不多不少3个{color[ffff]}{[0001|ffff]}外星人\n以{[0001|1b00]}{color[0400]}显示“完美”{color[ffff]}{[0001|ffff]}吧！
210	既然已确认完毕，\n就改回原来的达成条件吧～
213	请打开常数小节点的{color[0400]}{[0001|1b00]}设置{[0001|ffff]}{color[ffff]}。
214	将“{[0001|1b00]}要输出什么数值？{[0001|ffff]}”改回{[0001|1b00]}{color[0400]}20.00{color[ffff]}{[0001|ffff]}。
215	没问题！\n关闭设置！
217	再让游戏画面与UFO也返回原位吧。
218	请选中{[0001|1b00]}{color[0400]}游戏画面小节点{color[ffff]}{[0001|ffff]}……
219	{[0001|1b00]}{color[0400]}移动{color[ffff]}{[0001|ffff]}到游戏起始位置。
221	接下来{[0001|1b00]}{color[0400]}选中UFO小节点{color[ffff]}{[0001|ffff]}……
222	同样放到{[0001|1b00]}{color[0400]}起始位置{color[ffff]}{[0001|ffff]}！
223	这样一来，\n就能够从头开始进行游戏了。
224	那么！！\n让我们在游戏画面中确认……\n目前为止ALIEN SHOOTING的制作成果吧！
226	虽然略有难度，\n但请尽可能达成完美！
229	干得漂亮～～～～～～！！！！
231	{[0201]}，\n你的游戏技术同样一流！！
232	别灰心……！\n向着{[0001|1b00]}{color[0400]}完美{color[ffff]}{[0001|ffff]}挑战……再试一次！
233	够难的吧，\n请再次进行确认！
235	好！前往程序画面！
267	那么～～这样一来～～
268	第9步就完成了～！
269	可喜可贺！
270	没问题没问题！状态绝佳！
271	与过去相比，\n可谓突飞猛进！
272	堪称完美。
273	这次我们制作了{[0001|1b00]}{color[0400]}得分显示{color[ffff]}{[0001|ffff]}……
274	以及利用{[0001|1b00]}{color[0400]}AND小节点\n显示“完美”字样{color[ffff]}{[0001|ffff]}的机制！
275	下次将迎来最后的步骤……！
276	这最后一步\n将由{[0201]}亲手完成……！
277	请将{[0201]}自己的气质\n融入这款游戏！
278	那么！我会在下个步骤\n静候你的到来～！
Lesson_Shooting_09.msbt
000	{[0201]}，\n欢迎回来～！
001	那么！我们终于来到了\n最后的步骤～～～～！
002	在这次的最后一步中……
003	请{[0201]}用亲手绘制的{[0001|1b00]}{color[0400]}画作{color[ffff]}{[0001|ffff]}，\n让UFO焕然一新～～！
004	那么～\n请尽情享受最后的步骤吧～
005	既然要{[0001|1b00]}{color[0400]}作画{color[ffff]}{[0001|ffff]}……\n就需要叫出{[0001|1b00]}{color[0400]}材质小节点{color[ffff]}{[0001|ffff]}！
007	请选择{[0001|1b00]}{color[0400]}物体{color[ffff]}{[0001|ffff]}。
008	{[0001|1b00]}{color[0400]}特殊物体{color[ffff]}{[0001|ffff]}。
009	最后选择{[0001|1b00]}{color[0400]}材质{color[ffff]}{[0001|ffff]}，\n叫出{[0001|1b00]}{color[0400]}材质小节点{color[ffff]}{[0001|ffff]}！
011	你好，\n{[0201]}。
012	你的画作是世上独一无二的作品。
014	请随心所欲地画吧。
017	要想将{[0001|1b00]}{color[0400]}画作贴到UFO上面{color[ffff]}{[0001|ffff]}……
018	就请将{[0001|1b00]}{color[0400]}材质小节点\n连接{color[ffff]}{[0001|ffff]}到{[0001|1b00]}{color[0400]}UFO小节点{color[ffff]}{[0001|ffff]}。
019	恰到好处！
020	然后请打开{[0001|1b00]}{color[0400]}材质小节点{color[ffff]}{[0001|ffff]}的{[0001|1b00]}{color[0400]}设置{color[ffff]}{[0001|ffff]}。
021	接着打开{[0001|1b00]}粘贴面{[0001|ffff]}。
022	我们要在这里设置\n将画作{[0001|1b00]}{color[0400]}贴在连接对象{color[ffff]}{[0001|ffff]}的{[0001|1b00]}{color[0400]}哪个面上{color[ffff]}{[0001|ffff]}。
023	请仅将{[0001|1b00]}{color[0400]}X中央{color[ffff]}{[0001|ffff]}设为{[0001|1b00]}{color[0400]}开启{color[ffff]}{[0001|ffff]}。
024	关闭当前画面……
024-01	那就让我们试着画点什么吧！
024-02	请暂且将{color[0400]}{[0001|1b00]}画笔颜色{[0001|ffff]}{color[ffff]}设为黄色……
024-03	然后在这片区域画点什么～
027	不妨画颗{[0001|1b00]}{color[0400]}星星{color[ffff]}{[0001|ffff]}吧～
028	请在画好后关闭设置！
029	那么！\n让我们去游戏画面看看吧！
030	UFO……变成了你刚才所画的画作～～！
031	只要像这样使用{[0001|1b00]}{color[0400]}材质小节点{color[ffff]}{[0001|ffff]}，\n就能让自己的画作出现在游戏画面中了！
051	接下来……！\n为游戏添加{[0001|1b00]}{color[0400]}BGM{color[ffff]}{[0001|ffff]}吧！
052	音乐起♪
053	请从{[0001|1b00]}输出{[0001|ffff]} {[0001|0500]}{[0001|ffff]} {[0001|1b00]}播放BGM{[0001|ffff]}当中\n叫出{[0001|1b00]}{color[0400]}BGM小节点{color[ffff]}{[0001|ffff]}！
055	耶！\n你的音乐超炫酷，\n你的火力气势足。
056	横扫强敌倍儿爽，\n长驱直入敢称王！
058	耶！\n请从{[0001|1b00]}输入{[0001|ffff]} {[0001|0500]}{[0001|ffff]} {[0001|1b00]}常数{[0001|ffff]}当中叫出{[0001|1b00]}{color[0400]}常数小节点{color[ffff]}{[0001|ffff]}。
061	请将{[0001|1b00]}{color[0400]}常数小节点{color[ffff]}{[0001|ffff]}连接到\n{[0001|1b00]}{color[0400]}BGM小节点{color[ffff]}{[0001|ffff]}的{[0001|1b00]}{color[0400]}播放端口{color[ffff]}{[0001|ffff]}～
063	好！\n然后打开{[0001|1b00]}{color[0400]}BGM小节点{color[ffff]}{[0001|ffff]}的{color[0400]}{[0001|1b00]}设置{[0001|ffff]}{color[ffff]}。
064	打开{[0001|1b00]}{color[0400]}乐曲{color[ffff]}{[0001|ffff]}……
065	将{[0001|1b00]}{color[0400]}乐曲{color[ffff]}{[0001|ffff]}设为{[0001|1b00]}{color[0400]}勇敢{color[ffff]}{[0001|ffff]}。
066	音乐铿锵有力，的确名副其实～！
067	关闭设置……
068	去游戏画面确认一下吧！
069	哦哦～！\n听到BGM了！
070	无论前路上如何强敌环伺……\n我都将勇往直前！！
071	真是一支催人奋进的乐曲～
072	设置至此全部完成！
073	返回程序画面吧～
074	好！！\n那么接下来……
075	是{[0201]}自由发挥的时间～～！
076	除了{[0001|1b00]}{color[0400]}BGM小节点{color[ffff]}{[0001|ffff]}，\n你还可以随心更改{color[0400]}{[0001|1b00]}材质小节点{[0001|ffff]}{color[ffff]}的{[0001|1b00]}{color[0400]}画{color[ffff]}{[0001|ffff]}……
078	以及UFO的{[0001|1b00]}{color[0400]}炮筒{color[ffff]}{[0001|ffff]}和{color[0400]}{[0001|1b00]}炮弹的颜色{[0001|ffff]}{color[ffff]}……
080	请大胆发挥，\n打造{[0201]}专属的\nALIEN SHOOTING吧～！
081	如果觉得“就是它了！”的话……\n就请按下{[0001|1b00]}{color[0400]}完成键{color[ffff]}{[0001|ffff]}！
082	那么……\n编程开始！！！
086	终于……！！期待已久的游戏终于完成了！
088	那么，快去游戏画面中\n展示一下成果吧！
089	尝试游玩已完成的ALIEN SHOOTING，\n成功抵达{color[0400]}{[0001|1b00]}终点{[0001|ffff]}{color[ffff]}吧！！
090	这就是……\n{[0201]}亲手打造的\nALIEN SHOOTING！！
091	在维持原汁原味的基础上完成收尾，\n同样展示出了{[0201]}的个性！
092	那么……\n这样一来～～～
093	ALIEN SHOOTING大功告成！！
098	那么……\n让我们前往程序画面！！
101	恭喜～～\n完工啦～～～
102	嘿嘿！\n这游戏看起来一点也不好玩～
103	推动你如此努力的……是爱的力量吧。\n呵呵呵呵～
104	你的画作，\n将你独有的魅力展现无遗。
105	{[0201]}～\n你已经堪称～～～\n超级程序员了吧～～～
106	嚯嚯嚯～～～♪\n这款游戏让人不禁\n翩翩起舞～～～♪
107	噫……好厉害！！
108	技术没问题！恒心没问题！
116	ALIEN SHOOTING的制作……\n终于完美收官了！
117	虽然这一课的步骤繁多……\n对我们来说是一段漫长的旅程……
118	但{[0201]}不负众望，\n驾轻就熟地一路走到了最后～～！！
122	那就将这款ALIEN SHOOTING\n也加入游戏一览当中吧！
123	让我们先返回菜单～！
LogiConTpb_Main.msbt
TrimMark	…
NodeLabel_Constant	常数
NodeLabel_ButtonPressed	按键
NodeLabel_StickTilted	摇杆
NodeLabel_IsTouch	点触屏幕
NodeLabel_PlzTouchPosition	点触位置
NodeLabel_IntegratedSurfaceUpward	正面朝上
NodeLabel_IntegratedAxisAngle	倾斜
NodeLabel_IntegratedSwinged	摇晃
NodeLabel_IntegratedRotationSpeed	转动速度
NodeLabel_OnStart	开始时
NodeLabel_PlzObjBreakCount	物体损坏时
NodeLabel_FoundIrMarker	动作感应IR摄像头
NodeLabel_Calculation	计算
NodeLabel_Comparison	比较
NodeLabel_And	AND
NodeLabel_Not	NOT
NodeLabel_Atan	将位置转换成角度
NodeLabel_Trigonometric	将角度转换成位置
NodeLabel_AngleDistance	角度差
NodeLabel_Random	随机
NodeLabel_Mapping	映射
NodeLabel_Quantization	数字化
NodeLabel_Trigger	从0改变时
NodeLabel_SquareRoot	平方根
NodeLabel_PlzAbsoluteValue	绝对值
NodeLabel_PlzNegation	＋－反转
NodeLabel_Flag	旗标
NodeLabel_TpbCounter	计数
NodeLabel_WireWarpIn	无线传送入口
NodeLabel_WireWarpOut	无线传送出口
NodeLabel_Comment	个人笔记
NodeLabel_Timer	计时
NodeLabel_Spoit	滴管
NodeLabel_PlzIntegratedEffect	特效
NodeLabel_TpbPlaySound	播放声音
NodeLabel_TpbPlayBgm	BGM
NodeLabel_Vibrate	振动
NodeLabel_PlzGravity	减少重力
NodeLabel_PlzPlaySpeed	停止时间
NodeLabel_PlzReset	重来
NodeLabel_PlzExit	结束游戏
NodeLabel_PlzChangeFile	切换游戏
NodeLabel_Gauge	显示标示
NodeLabel_Move2d	显示2D标示
NodeLabel_AlwaysOn	一直显示标示
NodeLabel_EmitIrLed	让红外线灯亮起来
NodeLabel_PlzHead	头部
NodeLabel_PlzHand	手部
NodeLabel_TpbPuzzleClear	解开谜题
NodeLabel_PlzHuman	人
NodeLabel_PlzCar	汽车
NodeLabel_PlzUfo	UFO
NodeLabel_PlzRigid	物体
NodeLabel_PlzFancyRigid	时尚物体
NodeLabel_PlzCommentRigid	带注释物体
NodeLabel_PlzScoreRigid	带数字物体
NodeLabel_PlzTexture	材质
NodeLabel_PlzJointSlider	滑动连接
NodeLabel_PlzJointFreeSlider	自由滑动连接
NodeLabel_PlzJointHinge	铰链连接
NodeLabel_PlzRope	绳子连接
NodeLabel_PlzTouchSensor	接触感应器
NodeLabel_PlzBrokenSensor	损坏感应器
NodeLabel_PlzBreakSensor	破坏时感应器
NodeLabel_PlzGrabSensor	被抓感应器
NodeLabel_PlzPositionSensor	位置感应器
NodeLabel_PlzSpeedSensor	速度感应器
NodeLabel_PlzAccelerationSensor	加速度感应器
NodeLabel_PlzAngleSensor	角度感应器
NodeLabel_PlzRotationSensor	转动速度感应器
NodeLabel_PlzMoveRigid	移动物体
NodeLabel_PlzRotateRigid	旋转物体
NodeLabel_PlzStretchRigid	弹性物体
NodeLabel_PlzPullForce	引力
NodeLabel_PlzGeneratorFew	发射物体（1个）
NodeLabel_PlzGeneratorMiddle	发射物体（10个）
NodeLabel_PlzGeneratorMany	发射物体（100个）
NodeLabel_BindCommander	破坏物体
NodeLabel_PlzObjWarpEnter	传送物体入口
NodeLabel_PlzObjWarpExit	传送物体出口
NodeLabel_PlzEasyCamera	游戏画面
NodeLabel_PlzTpsCamera	照相机
NodeLabel_PlzCameraPosition	照相机位置
NodeLabel_PlzCameraLookAt	照相机焦点
NodeLabel_PlzCameraDirection	照相机方向
NodeLabel_PlzCameraAngle	照相机视角
NodeLabel_PlzFieldConfig	空间
NodeLabelFull_ConstantNode	常数小节点
NodeLabelFull_ButtonPressedNode	按键小节点
NodeLabelFull_StickTiltedNode	摇杆小节点
NodeLabelFull_IntegratedAxisAngleNode	倾斜小节点
NodeLabelFull_OnStartNode	开始时小节点
NodeLabelFull_PlzObjBreakCountNode	物体损坏时小节点
NodeLabelFull_CalculationNode	计算小节点
NodeLabelFull_ComparisonNode	比较小节点
NodeLabelFull_AndNode	AND小节点
NodeLabelFull_NotNode	NOT小节点
NodeLabelFull_MappingNode	映射小节点
NodeLabelFull_FlagNode	旗标小节点
NodeLabelFull_TpbCounterNode	计数小节点
NodeLabelFull_WireWarpInNode	无线传送入口小节点
NodeLabelFull_WireWarpOutNode	无线传送出口小节点
NodeLabelFull_CommentNode	个人笔记小节点
NodeLabelFull_TimerNode	计时小节点
NodeLabelFull_PlzIntegratedEffectNode	特效小节点
NodeLabelFull_TpbPlaySoundNode	播放声音小节点
NodeLabelFull_TpbPlayBgmNode	BGM小节点
NodeLabelFull_PlzGravityNode	减少重力小节点
NodeLabelFull_PlzResetNode	重来小节点
NodeLabelFull_PlzHumanNode	人小节点
NodeLabelFull_PlzCarNode	汽车小节点
NodeLabelFull_PlzUfoNode	UFO小节点
NodeLabelFull_PlzRigidNode	物体小节点
NodeLabelFull_PlzFancyRigidNode	时尚物体小节点
NodeLabelFull_PlzCommentRigidNode	带注释物体小节点
NodeLabelFull_PlzScoreRigidNode	带数字物体小节点
NodeLabelFull_PlzTextureNode	材质小节点
NodeLabelFull_PlzJointSingleAxisSliderNode	滑动连接小节点
NodeLabelFull_PlzJointSliderNode	自由滑动连接小节点
NodeLabelFull_PlzJointHingeNode	铰链连接小节点
NodeLabelFull_PlzTouchSensorNode	接触感应器小节点
NodeLabelFull_PlzBrokenSensorNode	损坏感应器小节点
NodeLabelFull_PlzPositionSensorNode	位置感应器小节点
NodeLabelFull_PlzMoveRigidNode	移动物体小节点
NodeLabelFull_PlzRotateRigidNode	旋转物体小节点
NodeLabelFull_PlzGeneratorNode	发射物体小节点
NodeLabelFull_PlzBindCommanderNode	破坏物体小节点
NodeLabelFull_PlzObjWarpEnterNode	传送物体入口小节点
NodeLabelFull_PlzObjWarpExitNode	传送物体出口小节点
NodeLabelFull_PlzEasyCamera	游戏画面小节点
NodeLabelFull_PlzTpsCamera	照相机小节点
NodeLabelFull_PlzFieldConfigNode	空间小节点
InputMenu	输入
NodeCreatorMenu_Constant	常数
NodeCreatorMenu_ButtonPressed	按下按键
NodeCreatorMenu_ButtonMask_A	
NodeCreatorMenu_ButtonMask_B	
NodeCreatorMenu_ButtonMask_X	
NodeCreatorMenu_ButtonMask_Y	
NodeCreatorMenu_ButtonMask_L	
NodeCreatorMenu_ButtonMask_R	
NodeCreatorMenu_ButtonMask_ZL	
NodeCreatorMenu_ButtonMask_ZR	
NodeCreatorMenu_StickTilted	推动摇杆
ControllerSideMenuForStickTilted_L	L摇杆
ControllerSideMenuForStickTilted_R	R摇杆
TouchMenu	触摸屏
NodeCreatorMenu_IsTouch	点触屏幕
NodeCreatorMenu_PlzTouchPosition	点触位置
MotionMenu	动作感应
NodeCreatorMenu_IntegratedSwinged	摇晃
NodeCreatorMenu_IntegratedAxisAngle	倾斜
NodeCreatorMenu_IntegratedSurfaceUpward	正面朝上
NodeCreatorMenu_IntegratedRotationSpeed	转动
NodeCreatorMenu_FoundIrMarker	动作感应IR摄像头
PlzInputMenu	游戏内的变化
NodeCreatorMenu_PlzObjBreakCount	物体损坏时
NodeCreatorMenu_OnStart	开始时
MediumMenu	中间
CalculationMenu	计算（＋－×÷）
NodeCreatorMenu_Calculation_Add	＋
NodeCreatorMenu_Calculation_Sub	－
NodeCreatorMenu_Calculation_Mul	×
NodeCreatorMenu_Calculation_Div	÷
ConversionMenu	转换
NodeCreatorMenu_Mapping	映射
NodeCreatorMenu_Quantization	数字化
NodeCreatorMenu_SquareRoot	平方根（√）
NodeCreatorMenu_PlzAbsoluteValue	绝对值（将－转换为＋）
NodeCreatorMenu_PlzNegation	＋－反转
NodeCreatorMenu_Trigger	从0改变时
AngleMenu	计算角度
NodeCreatorMenu_Atan	将位置转换成角度
NodeCreatorMenu_Trigonometric	将角度转换成位置
NodeCreatorMenu_AngleDistance	角度差
LogicMenu	逻辑
NodeCreatorMenu_And	AND
NodeCreatorMenu_Not	NOT
CounterMenu	{[0001|1b00]}旗标、计数、随机{[0001|ffff]} 
NodeCreatorMenu_Flag	旗标
NodeCreatorMenu_TpbCounter	计数
NodeCreatorMenu_Random	随机
NodeCreatorMenu_Timer	计时
NodeCreatorMenu_Spoit	滴管
EditMenu	程序整理
NodeCreatorMenu_WireWarpIn	无线传送：入口
NodeCreatorMenu_WireWarpOut	无线传送：出口
NodeCreatorMenu_Comment	个人笔记
OutputMenu	输出
NodeCreatorMenu_PlaySoundScale	播放声音
PlaySeMenu	播放音效
PlayInstrumentMenu	播放乐器声
NodeCreatorMenu_TpbPlayBgm	播放BGM
NodeCreatorMenu_Vibrate	使之振动
PlzWorldMenu	改变空间
NodeCreatorMenu_PlzGravity	减少重力
NodeCreatorMenu_PlzPlaySpeed	停止时间
SequenceMenu	重来、结束、切换
NodeCreatorMenu_PlzReset	重来游戏
NodeCreatorMenu_PlzExit	结束游戏
NodeCreatorMenu_PlzChangeFile	切换游戏
PlzEtcMenu	其他
DisplayMenu	显示标示
NodeCreatorMenu_Gauge_Move	移动
NodeCreatorMenu_Gauge_Stretch	伸长
NodeCreatorMenu_Gauge_Line	线条
NodeCreatorMenu_Gauge_Rotate	旋转
NodeCreatorMenu_Gauge_Pie	饼图
NodeCreatorMenu_Gauge_Alpha	透明度
NodeCreatorMenu_Gauge_Flash	闪烁
NodeCreatorMenu_Move2d	显示2D标示
NodeCreatorMenu_AlwaysOn	一直显示标示
NodeCreatorMenu_EmitIrLed	让红外线灯亮起来
PlzObjMenu	物体
PlzCharacterMenu	角色
NodeCreatorMenu_PlzHuman	人
NodeCreatorMenu_PlzCar	汽车
NodeCreatorMenu_PlzUfo	UFO
PlzGeneralObjMenu	简单物体
PlzFancyObjMenu	时尚物体
PlzFancyObjPage_00	四边形时尚物体
PlzFancyObjPage_01	圆形时尚物体
PlzFancyObjPage_02	圆柱体时尚物体
PlzFancyObjPage_03	各种时尚物体
PlzSpecialObjMenu	特殊物体
PlzMoveRigidMenu	移动物体
PlzRotateRigidMenu	旋转物体
PlzStretchRigidMenu	弹性物体
PlzEffectMenu	特效
NodeCreatorMenu_PlzCommentRigid	带注释物体
NodeCreatorMenu_PlzScoreRigid	带数字物体
NodeCreatorMenu_PlzTexture	材质
PlzSensorMenu	感应器
NodeCreatorMenu_PlzTouchSensor	接触感应器
NodeCreatorMenu_PlzBrokenSensor	损坏感应器
NodeCreatorMenu_PlzBreakSensor	破坏时感应器
NodeCreatorMenu_PlzGrabSensor	被抓感应器
NodeCreatorMenu_PlzPositionSensor	位置感应器
NodeCreatorMenu_PlzSpeedSensor	速度感应器
NodeCreatorMenu_PlzAccelerationSensor	加速度感应器
NodeCreatorMenu_PlzAngleSensor	角度感应器
NodeCreatorMenu_PlzRotationSensor	转动速度感应器
PlzJointMenu	连接零件
PlzJointSliderMenu	滑动连接
PlzJointSliderXMenu	X轴滑动
PlzJointSliderYMenu	Y轴滑动
PlzJointSliderZMenu	Z轴滑动
NodeCreatorMenu_PlzJointFreeSlider	自由滑动连接
PlzJointHingeMenu	铰链连接
PlzJointHingeXMenu	X轴铰链
PlzJointHingeYMenu	Y轴铰链
PlzJointHingeZMenu	Z轴铰链
NodeCreatorMenu_PlzRope	绳子连接
PlzLiveObjMenu	放出、消除、引力
PlzGeneratorMenu	发射物体
NodeCreatorMenu_PlzGeneratorFew	1个
NodeCreatorMenu_PlzGeneratorMiddle	10个
NodeCreatorMenu_PlzGeneratorMany	100个
NodeCreatorMenu_BindCommander	破坏物体
PlzObjWarpMenu	传送物体
NodeCreatorMenu_PlzObjWarpEnter	传送物体：入口
NodeCreatorMenu_PlzObjWarpExit	传送物体：出口
NodeCreatorMenu_PlzPullForce	引力
NodeCreatorMenu_PlzFieldConfig	空间
PlzCameraMenu	游戏画面和照相机
NodeCreatorMenu_PlzEasyCamera	游戏画面
NodeCreatorMenu_PlzTpsCamera	照相机
PlzCameraDetailMenu	照相机详细设置
NodeCreatorMenu_PlzCameraPosition	照相机位置
NodeCreatorMenu_PlzCameraLookAt	照相机焦点
NodeCreatorMenu_PlzCameraDirection	照相机方向
NodeCreatorMenu_PlzCameraAngle	照相机视角
PlzPlayerSettingMenu	玩家设置
NodeCreatorMenu_PlzHead	头部
NodeCreatorMenu_PlzHandRight	右手
NodeCreatorMenu_PlzHandLeft	左手
PortLabel_ConstantNode_01	常数
PortLabel_ButtonPressedNode_01	是否按下
PortLabel_StickTiltedNode_01	推动幅度
PortLabel_IsTouchNode_01	有无点触
PortLabel_TouchPositionNode_01	X
PortLabel_TouchPositionNode_02	Y
PortLabel_IntegratedSwingedNode_01	摇晃力道
PortLabel_IntegratedSurfaceUpwardNode_01	朝上幅度
PortLabel_IntegratedAxisAngleNode_01	倾斜角度
PortLabel_IntegratedAxisAngleNode_02	Y重置
PortLabel_IntegratedRotationSpeedNode_01	转动速度
PortLabel_OnStartNode_01	有无开始
PortLabel_PlzObjBreakCountNode_01	损坏数量
PortLabel_FoundIrMarkerNode_01	照到的数量
PortLabel_CalculationNode_01	输入1
PortLabel_CalculationNode_02	输入2
PortLabel_CalculationNode_03	计算结果
PortLabel_ComparisonNode_01	输入1
PortLabel_ComparisonNode_02	输入2
PortLabel_ComparisonNode_03	比较结果
PortLabel_AndNode_01	输入1
PortLabel_AndNode_02	输入2
PortLabel_AndNode_03	输出
PortLabel_NotNode_01	输入
PortLabel_NotNode_02	输出
PortLabel_AtanNode_01	横向位置
PortLabel_AtanNode_02	纵向位置
PortLabel_AtanNode_03	角度
PortLabel_TrigonometricNode_01	角度
PortLabel_TrigonometricNode_02	横向位置
PortLabel_TrigonometricNode_03	纵向位置
PortLabel_AngleDistanceNode_01	角度1
PortLabel_AngleDistanceNode_02	角度2
PortLabel_AngleDistanceNode_03	差
PortLabel_IntegerRandomNode_01	？
PortLabel_IntegerRandomNode_02	随机数值
PortLabel_IntegerRandomNode_03	重置
PortLabel_MappingNode_01	输入
PortLabel_MappingNode_02	输出
PortLabel_QuantizationNode_01	输入
PortLabel_QuantizationNode_02	输出
PortLabel_TriggerNode_01	输入
PortLabel_TriggerNode_02	是否改变
PortLabel_SquareRootNode_01	输入
PortLabel_SquareRootNode_02	输出
PortLabel_AbsoluteValueNode_01	输入
PortLabel_AbsoluteValueNode_02	输出
PortLabel_NegationNode_01	输入
PortLabel_NegationNode_02	输出
PortLabel_FlagNode_01	开启
PortLabel_FlagNode_02	关闭
PortLabel_FlagNode_03	旗标是否开启
PortLabel_TpbCounterNode_01	增加
PortLabel_TpbCounterNode_02	减少
PortLabel_TpbCounterNode_03	重置
PortLabel_TpbCounterNode_04	计数值
PortLabel_WireWarpInNode_01	入口
PortLabel_WireWarpOutNode_01	出口
PortLabel_TimerNode_01	输入
PortLabel_TimerNode_02	输出
PortLabel_SpoitNode_01	标示量
PortLabel_PlzIntegratedEffectNode_03	出现
PortLabel_TpbPlaySoundNode_02	播放
PortLabel_TpbPlaySoundNode_03	音量
PortLabel_TpbPlaySoundNode_04	音高
PortLabel_TpbPlayBgmNode_01	播放
PortLabel_TpbPlayBgmNode_02	音量
PortLabel_TpbPlayBgmNode_03	速度
PortLabel_VibrateNode_01	振动强度
PortLabel_PlzGravityNode_01	减少量
PortLabel_PlzPlaySpeedNode_01	停止量
PortLabel_PlzResetNode_01	重来
PortLabel_PlzExitNode_01	结束
PortLabel_PlzChangeFileNode_01	切换
PortLabel_PlzChangeFileNode_02	切换前的信号
PortLabel_GaugeNode_01	输入
PortLabel_Move2dNode_01	X
PortLabel_Move2dNode_02	Y
PortLabel_Move2dNode_03	滴管结果
PortLabel_EmitIrLedNode_01	亮起来
PortLabel_PlzHandNode_02	抓住
PortLabel_PlzHandNode_03	前后
PortLabel_TpbPuzzleClearNode_01	解开
PortLabel_PlzHumanNode_03	前后
PortLabel_PlzHumanNode_04	左右
PortLabel_PlzHumanNode_05	跳跃
PortLabel_PlzHumanNode_06	动作
PortLabel_PlzCarNode_03	加速
PortLabel_PlzCarNode_04	方向盘
PortLabel_PlzCarNode_05	跳跃
PortLabel_PlzUfoNode_03	前后
PortLabel_PlzUfoNode_04	左右
PortLabel_PlzUfoNode_05	上下
PortLabel_PlzScoreRigidNode_03	数值
PortLabel_PlzTextureNode_02	能看见
PortLabel_PlzJointSingleAxisSliderNode_03	滑动量
PortLabel_PlzJointSliderNode_03	X
PortLabel_PlzJointSliderNode_04	Y
PortLabel_PlzJointSliderNode_05	Z
PortLabel_PlzJointHingeNode_03	旋转量
PortLabel_PlzTouchSensorNode_02	接触的数量
PortLabel_PlzBrokenSensorNode_02	有无损坏
PortLabel_PlzBreakSensorNode_02	破坏数量
PortLabel_PlzGrabSensorNode_02	是否被抓住
PortLabel_PlzPositionSensorNode_02	X
PortLabel_PlzPositionSensorNode_03	Y
PortLabel_PlzPositionSensorNode_04	Z
PortLabel_PlzSpeedSensorNode_02	X
PortLabel_PlzSpeedSensorNode_03	Y
PortLabel_PlzSpeedSensorNode_04	Z
PortLabel_PlzAccelerationSensorNode_02	X
PortLabel_PlzAccelerationSensorNode_03	Y
PortLabel_PlzAccelerationSensorNode_04	Z
PortLabel_PlzAngleSensorNode_02	X轴
PortLabel_PlzAngleSensorNode_03	Y轴
PortLabel_PlzAngleSensorNode_04	Z轴
PortLabel_PlzRotationSensorNode_02	X轴
PortLabel_PlzRotationSensorNode_03	Y轴
PortLabel_PlzRotationSensorNode_04	Z轴
PortLabel_PlzMoveRigidNode_03	X
PortLabel_PlzMoveRigidNode_04	Y
PortLabel_PlzMoveRigidNode_05	Z
PortLabel_PlzRotateRigidNode_03	X轴
PortLabel_PlzRotateRigidNode_04	Y轴
PortLabel_PlzRotateRigidNode_05	Z轴
PortLabel_PlzStretchRigidNode_02	X
PortLabel_PlzStretchRigidNode_03	Y
PortLabel_PlzStretchRigidNode_04	Z
PortLabel_PlzPullForceNode_02	力道
PortLabel_PlzGeneratorFewNode_02	发射
PortLabel_PlzGeneratorNode_02	发射
PortLabel_PlzGeneratorManyNode_02	发射
PortLabel_PlzBindCommanderNode_02	破坏
PortLabel_PlzObjWarpEnterNode_02	传送
PortLabel_PlzEasyCamera_02	X
PortLabel_PlzEasyCamera_03	Y
PortLabel_PlzEasyCamera_04	Z
PortLabel_PlzTpsCamera_03	上下
PortLabel_PlzTpsCamera_04	水平
PortLabel_PlzTpsCamera_05	重置
PortLabel_PlzCameraPositionNode_03	X
PortLabel_PlzCameraPositionNode_04	Y
PortLabel_PlzCameraPositionNode_05	Z
PortLabel_PlzCameraLookAtNode_03	X
PortLabel_PlzCameraLookAtNode_04	Y
PortLabel_PlzCameraLookAtNode_05	Z
PortLabel_PlzCameraDirectionNode_01	上下
PortLabel_PlzCameraDirectionNode_02	水平
WarpIdLabel_A	A
WarpIdLabel_B	B
WarpIdLabel_C	C
WarpIdLabel_D	D
WarpIdLabel_E	E
WarpIdLabel_F	F
WarpIdLabel_G	G
WarpIdLabel_H	H
WarpIdLabel_I	I
WarpIdLabel_J	J
WarpIdLabel_K	K
WarpIdLabel_L	L
WarpIdLabel_M	M
WarpIdLabel_N	N
WarpIdLabel_O	O
WarpIdLabel_P	P
WarpIdLabel_Q	Q
WarpIdLabel_R	R
WarpIdLabel_S	S
WarpIdLabel_T	T
WarpIdLabel_U	U
WarpIdLabel_V	V
WarpIdLabel_W	W
WarpIdLabel_X	X
WarpIdLabel_Y	Y
WarpIdLabel_Z	Z
DigitalAnalogSwitchLabel	输出
DigitalAnalogSwitch_Digital	数字
DigitalAnalogSwitch_Analog	模拟
TrigHoldSwitchLabel_ButtonPressedNode	输出的时机
TrigHoldSwitch_Trig_ButtonPressedNode	按下时
TrigHoldSwitch_Hold_ButtonPressedNode	按下后持续
TrigHoldSwitchLabel_IsTouchNode	输出的时机
TrigHoldSwitch_Trig_IsTouchNode	点触时
TrigHoldSwitch_Hold_IsTouchNode	点触后持续
TrigHoldSwitchLabel_TpbCounterNode	计数的时机
TrigHoldSwitch_Trig_TpbCounterNode	从0改变时
TrigHoldSwitch_Hold_TpbCounterNode	不为0时持续
TrigHoldSwitchLabel_IntegerRandomNode	更新数值的时机
TrigHoldSwitch_Trig_IntegerRandomNode	从0改变时
TrigHoldSwitch_Hold_IntegerRandomNode	不为0时持续
TrigHoldSwitchLabel_PlzIntegratedEffectNode	特效出现的时机
TrigHoldSwitch_Trig_PlzIntegratedEffectNode	从0改变时
TrigHoldSwitch_Hold_PlzIntegratedEffectNode	不为0时持续
TrigHoldSwitchLabel_PlzTouchSensorNode	输出的时机
TrigHoldSwitch_Trig_PlzTouchSensorNode	接触时
TrigHoldSwitch_Hold_PlzTouchSensorNode	接触后持续
TrigHoldSwitchLabel_PlzGrabSensorNode	输出的时机
TrigHoldSwitch_Trig_PlzGrabSensorNode	被抓住时
TrigHoldSwitch_Hold_PlzGrabSensorNode	被抓住后持续
SizeSlider	大小
SliderAdjusterDec	＜
SliderAdjusterInc	＞
ThresholdSliderRange	范围
ConstantNumSliderLabel	要输出什么数值？
Hint_Constant_00_Subject	小提示
Hint_Constant_00	・“常数”的意思就是“固定不变的数”。\n・当设置为1.00时就会持续输出1.00。
ButtonMask_L_Any	
ButtonMask_R_Any	
ButtonMask_LR_Any	
ButtonMask_A	
ButtonMask_B	
ButtonMask_X	
ButtonMask_Y	
ButtonMask_Up	
ButtonMask_Left	
ButtonMask_Right	
ButtonMask_Down	
ButtonMask_L	
ButtonMask_R	
ButtonMask_ZL	
ButtonMask_ZR	
ButtonMask_LS_Btn	
ButtonMask_RS_Btn	
ButtonMask_L_SL	(L)
ButtonMask_L_SR	(L)
ButtonMask_R_SL	(R)
ButtonMask_R_SR	(R)
Hint_StickTilted_00_Subject	小提示
Hint_StickTilted_00	根据“输出”和“范围”的设置，\n将实际推动摇杆的幅度转换后输出。
ControllerSide_L	Joy-Con(L)
ControllerSide_R	Joy-Con(R)
ControllerSide_Handheld	{[0001|1600]}{[0001|ffff]}
ControllerSide_Auto	自动
ControllerStickSide_L	L摇杆
ControllerStickSide_R	R摇杆
AutoMenu	自动
ConsoleMenu	主机
ControllerIndex_1	1
ControllerIndex_2	2
ControllerIndex_3	3
ControllerIndex_4	4
Surface_XPlus	左
Surface_XMinus	右
Surface_YPlus	前
Surface_YMinus	后
Surface_ZPlus	上
Surface_ZMinus	下
ControllerDirection_Up	上
ControllerDirection_Down	下
ControllerDirection_Left	左
ControllerDirection_Right	右
ControllerSwingDirectionRadioButtonLabel	反应的方向
ControllerSwingDirection_Any	全部
ControllerSwingDirection_XPlus	X＋
ControllerSwingDirection_XMinus	X－
ControllerSwingDirection_YPlus	Y＋
ControllerSwingDirection_YMinus	Y－
ControllerSwingDirection_ZPlus	Z＋
ControllerSwingDirection_ZMinus	Z－
Axis_X	{[0001|1e00]}X{[0001|ffff]}
Axis_Y	{[0001|1e00]}Y{[0001|ffff]}
Axis_Z	{[0001|1e00]}Z{[0001|ffff]}
Axis_Any	全部
RotationDirectionRadioButtonLabel	反应的方向
RotationDirection_Plus	＋
RotationDirection_Minus	－
RotationDirection_Any	{[0001|1600]}±{[0001|ffff]}
ControllerDirection_Any	全部
ControllerDirection_LeftRight	左右
ControllerDirectionSwitchLabel	反应的方向
ControllerDirection_UpDown	上下
ControllerIndex_Any	自动
ControllerIndex_Handheld	{[0001|1600]}{[0001|ffff]}
ControllerIndexSwitchForIrLabel	手柄编号
ControllerIndexSwitchLabel	手柄编号
Hint_IntegratedAxisAngle_00_Subject	小提示
Hint_IntegratedAxisAngle_00	当模式设置为转动角度模式时，\n能在-180°～180°的范围内输出Joy-Con和Nintendo Switch主机的角度。
ControllerSideSwitchLabel	是哪个手柄？
ControllerSideSwitchWithHandheldAutoLabel	要检查哪个？
ControllerStickSideSwitchLabel	是哪个摇杆？
Hint_ControllerSurface_00_Subject	小提示
Hint_ControllerSurface_00	朝上幅度越大，输出的数值越大。
ControllerSurfaceRadioButtonLabel	正面
Hint_ControllerSwinged_00_Subject	小提示
Hint_ControllerSwinged_00	摇晃速度越快，输出的数值越大。
TouchTargetSwitchLabel	要在点触哪里时输出？
TouchTarget_Anywhere	任意位置
TouchTarget_ThisNode	这个小节点
Hint_IsTouch_00_Subject	小提示
Hint_IsTouch_00	当选择“这个小节点”时，会仅在点触这个小节点后才给出反应。\n如果摆放在可以于游戏画面中点触的位置，就能制作出根据不同点触位置给出不同反应的游戏。
Hint_PlzTouchPosition_00_Subject	小提示
Hint_PlzTouchPosition_00	画面正中央为X=0，Y=0；\n画面左端为X=-640，右端为X=640；\n画面下端为Y=-360，上端为Y=360。
ControllerAxisRadioButtonLabel	转动轴
ControllerAxisAngleModeSwitchLabel	模式
ControllerAxisAngleMode_Tilt	倾斜
ControllerAxisAngleMode_AxisAngle	转动角度
Hint_PlzObjBreakCountNode_00_Subject	小提示
Hint_PlzObjBreakCountNode_00	当检查对象在空间的某处损坏时，会输出数值。\n尝试搭配计数小节点，设计类似“破坏10个后过关”的程序吧。
Hint_OnStartNode_00_Subject	小提示
Hint_OnStartNode_00	仅在游戏开始的那一瞬间输出1.00。
DistanceSwitchLabel	探测范围
IrDistance_Off	关闭红外线
IrDistance_Near	近距离
IrDistance_Normal	中距离
IrDistance_Far	远距离
Hint_FoundIrMarker_00_Subject	1个手柄1种设置
Hint_FoundIrMarker_00	拥有相同手柄编号的所有动作感应IR摄像头小节点共享相同的设置。
Hint_FoundIrMarker_01_Subject	小提示
Hint_FoundIrMarker_01	无法同时使用2个以上动作感应IR摄像头或5个以上Joy-Con。
CalculationOperatorSwitchLabel	计算方法
CalculationOperator_Add	＋
CalculationOperator_AlmostEqual	≒
CalculationOperator_Div	÷
CalculationOperator_Equal	＝
CalculationOperator_Mul	×
CalculationOperator_Sub	－
CalculationOperator_Then	→
CalculationResult	计算结果
Hint_Calculation_00_Subject	小提示
Hint_Calculation_00	可以对任意2个输入值进行“加”、“减”、“乘”、“除”。
ComparisonOperatorSwitchLabel	如何比较？
ComparisonOperator_EQ	＝
ComparisonOperator_GT	＞
ComparisonOperator_LT	＜
ComparisonOperator_GE	≧
ComparisonOperator_LE	≦
Hint_ComparisonNode_00_Subject	小提示
Hint_ComparisonNode_00	・比较输入的2个数值。\n・满足设置条件的话，会输出1.00。
Hint_And_00_Subject	AND是什么意思？
Hint_And_00	“同时满足2个条件”的意思。\n也就是说当2个输入值都不为0.00时，会输出1.00。
Hint_Not_00_Subject	NOT是什么意思？
Hint_Not_00	输入值为0.00时，输出1.00。\n输入值为0.00以外时，输出0.00。
Hint_AngleDistance_00_Subject	小提示
Hint_AngleDistance_00	能够知道输入的2个角度之间距离有多远。\n试着搭配“倾斜小节点”的“转动角度模式”使用吧！
Hint_Atan_00_Subject	小提示
Hint_Atan_00	・可以计算出横向位置端口与纵向位置端口所输入的位置在(0,0)的哪个方向，用角度来表示。\n・输入端口通常会与“位置感应器”连接。（也可以用于将2个位置的输入值相减！）\n・能输出-180°～180°哦！试着与“铰链连接小节点”连接看看吧！
Hint_Trigonometric_00_Subject	小提示
Hint_Trigonometric_00	・会将输入的角度在半径为1.00的圆周上对应的位置输出。\n・说专业一点就是“横向位置是余弦（cos）”、“纵向位置是正弦（sin）”。\n・输入值代表圆周1周的度数，即0～360°。
MappingInputSliderLabel	输入范围
MappingOutputSliderLabel	输出范围
MappingClampModeSwitchLabel	范围限制
MappingClampMode_Enable	限制范围
MappingClampMode_Disable	不限制范围
Hint_Mapping_00_Subject	小提示
Hint_Mapping_00	・会将“输入范围”一一对应到“输出范围”后输出。\n・比如当输入范围为“0.00～1.00”，输出范围为“-1.00～1.00”时……“0.00就对应-1.00”，“0.50就对应0.00”，“1.00就对应1.00”。\n・如果将“{[0001|0500]}{[0001|ffff]}”设置为开启，输入与输出的对应方式就会反转。
Hint_PlzAbsoluteValue_00_Subject	小提示
Hint_PlzAbsoluteValue_00	・负数转换为正数。\n・正数保持不变。
Hint_Flag_00_Subject	旗标是什么？
Hint_Flag_00	当“开启”端口接收到0.00以外的数值时，旗标切换为开启状态。\n当“关闭”端口接收到0.00以外的数值时，旗标切换为关闭状态。\n旗标在开启状态时会输出1.00，关闭状态时会输出0.00。
Hint_Flag_01_Subject	同时输入的话会发生什么？
Hint_Flag_01	当“开启”端口和“关闭”端口同时接收到0.00以外的数值时，旗标切换为关闭状态。
CountRangeLabel	计数范围
LoopModeAllSwitchLabel	模式
LoopMode_Loop	循环
LoopMode_Single	范围限制
LoopMode_Infinite	无限制
LoopMode_Flip	来回
DefaultCountSliderLabel	开始时的计数值
Hint_Random_00_Subject	小提示
Hint_Random_00	・当“？”端口接收到信号时，就会输出“1～输出范围”之间的任意整数。\n・当“重置”端口接收到信号时，就会将输出值重置为“0”。
IntegerRandomRangeSliderLabel	输出范围
QuantizationNumSlider	要将1.00分成几份？
Hint_Quantization_00_Subject	小提示
Hint_Quantization_00	把像斜坡那样“缓慢渐进”输入的信号\n转换成像台阶那样“一阶一阶”输出的信号。
Hint_Trigger_00_Subject	小提示
Hint_Trigger_00	只有当输入值从0.00变成0.00以外的数值时才会输出1.00。
Hint_SquareRoot_00_Subject	小提示
Hint_SquareRoot_00	・计算输入值的“平方根（√）”。\n・当输入值为负数时，会输出0.00。\n・可用于计算距离等。
Hint_PlzNegation_00_Subject	小提示
Hint_PlzNegation_00	输入负数时输出正数，输入正数时输出负数。
WireWarpIDSwitchLabel	传送ID
Hint_WireWarp_00_Subject	小提示
Hint_WireWarp_00	・设置成同样的传送ID，数值就会从入口传送至出口哦！\n・熟练运用，让程序变得更加清爽整洁吧！
CommentKeyboardOk	OK
CommentKeyboardGuide	请自由做笔记。
EditCommentButton	编辑
CommentHeader_CommentNode	个人笔记
DefaultComment	个人笔记
DefaultComment_Rigid	带注释物体
TimerSlider	在几秒后输出
TimerSlider_Numpad	在几秒后输出
SustainSlider	持续输出的秒数
SustainSlider_Numpad	持续输出的秒数
Hint_Timer_00_Subject	计时是什么？
Hint_Timer_00	在输入值传递过来后，经过一段设置好的时间，将会输出1.00。
Hint_Spoit_00_Subject	小提示
Hint_Spoit_00	当滴管小节点接触到显示标示小节点和动作感应IR摄像头小节点等显示的标示时，\n会输出重叠量。
PlzIntegratedEffectType_Fireworks	烟花
PlzIntegratedEffectType_Explosion	爆炸
PlzIntegratedEffectType_Bubbles	泡泡
PlzIntegratedEffectType_Smoke	烟雾
PlzIntegratedEffectType_Cracker	拉炮
PlzIntegratedEffectType_Damage	损伤
PlzIntegratedEffectType_CountDown	倒数3秒
PlzIntegratedEffectType_Fail	失败
PlzIntegratedEffectType_Pointlight	光线
PlzEffectEmitPosType_Camera	照相机
PlzEffectEmitPosType_World	空间
PlzEffectEmitPosTypeLabel	特效出现的位置
PianoKeyMask_C	Do
PianoKeyMask_Cis	Do#
PianoKeyMask_D	Re
PianoKeyMask_Dis	Re#
PianoKeyMask_E	Mi
PianoKeyMask_F	Fa
PianoKeyMask_Fis	Fa#
PianoKeyMask_G	So
PianoKeyMask_Gis	So#
PianoKeyMask_A	La
PianoKeyMask_Ais	La#
PianoKeyMask_H	Si
PianoKeyMask_HiC	△Do
TpbPlaySoundSettingLabel	播放的声音
SeIndexRadioButtonLabel_Onetime	单次
SeIndexRadioButtonLabel_Loop	循环
SeGroupRadioButtonLabel	音效
SeGroup_Drum	打击乐
SeGroup_Whistle	鸣笛
SeGroup_Machine	机器
SeGroup_Hit	撞击
SeGroup_Comical	喜剧效果
SeGroup_System	系统音效
SeGroup_Nature	大自然
SeGroup_Animal	动物
SeGroup_Voice	人声
SeGroup_Fx	效果音
SeGroup_Jingle	效果音乐
SeIndex_Drum_01	大鼓
SeIndex_Drum_02	小鼓
SeIndex_Drum_03	小鼓滚奏
SeIndex_Drum_04	拍手
SeIndex_Drum_05	鼓边
SeIndex_Drum_06	双面钹（开）
SeIndex_Drum_07	双面钹（关）
SeIndex_Drum_08	铜钹
SeIndex_Drum_09	中音鼓（高音）
SeIndex_Drum_10	中音鼓（中音）
SeIndex_Drum_11	中音鼓（低音）
SeIndex_Drum_12	摇晃铃鼓
SeIndex_Drum_13	拍打铃鼓
SeIndex_Drum_14	牛铃（低音）
SeIndex_Drum_15	雪橇铃
SeIndex_Drum_16	太鼓
SeIndex_Drum_17	铜锣
SeIndex_Drum_18	颤音器
SeIndex_Drum_19	弹音器
SeIndex_Drum_20	库加鼓（高音）
SeIndex_Drum_21	库加鼓（低音）
SeIndex_Drum_22	大钟
SeIndex_Drum_23	风铃
SeIndex_Drum_24	竹风铃
SeIndex_Drum_25	牛铃（高音）
SeIndex_Drum_26	呼叫铃
SeIndex_Drum_27	锣
SeIndex_Whistle_01	短哨
SeIndex_Whistle_02	长哨
SeIndex_Whistle_03	汽笛喇叭
SeIndex_Whistle_04	汽车喇叭
SeIndex_Whistle_05	警笛
SeIndex_Machine_01	引擎
SeIndex_Machine_02	开关
SeIndex_Machine_03	电流
SeIndex_Machine_04	齿轮
SeIndex_Machine_05	电机
SeIndex_Machine_06	压力机
SeIndex_Machine_07	钻头
SeIndex_Machine_08	伺服电机
SeIndex_Machine_09	阀门
SeIndex_Machine_10	发射（小）
SeIndex_Machine_11	发射（大）
SeIndex_Machine_12	收银机
SeIndex_Machine_13	照相机
SeIndex_Machine_15	剪刀
SeIndex_Machine_16	打字机
SeIndex_Machine_17	直升机
SeIndex_Machine_18	订书机
SeIndex_Machine_19	时钟（滴）
SeIndex_Machine_20	时钟（答）
SeIndex_Machine_21	闹钟
SeIndex_Machine_22	开门
SeIndex_Machine_23	关门
SeIndex_Hit_01	轻微撞击
SeIndex_Hit_02	中度撞击
SeIndex_Hit_03	强烈撞击
SeIndex_Hit_04	防护
SeIndex_Hit_05	弹开
SeIndex_Hit_06	金属
SeIndex_Hit_07	水泥
SeIndex_Hit_08	玻璃
SeIndex_Hit_09	岩石
SeIndex_Hit_10	球
SeIndex_Hit_11	切割
SeIndex_Comical_01	弹跳2
SeIndex_Comical_02	弹跳3
SeIndex_Comical_03	爆炸
SeIndex_Comical_04	大爆炸
SeIndex_Comical_05	摇头
SeIndex_Comical_06	猛击
SeIndex_Comical_07	重重地弹起
SeIndex_Comical_08	砸到头
SeIndex_Comical_09	抱怨
SeIndex_Comical_10	黏糊
SeIndex_Comical_11	拔瓶塞
SeIndex_Comical_12	不停地拔瓶塞
SeIndex_Comical_13	轻轻地弹起
SeIndex_Comical_14	弹跳4
SeIndex_Comical_15	清脆声
SeIndex_Comical_16	缩放
SeIndex_Comical_17	失败
SeIndex_Comical_18	成功
SeIndex_Comical_19	诡异
SeIndex_Comical_21	上升
SeIndex_Comical_22	下降
SeIndex_Comical_23	错愕
SeIndex_Comical_24	咚咚锵
SeIndex_Comical_25	弹跳1
SeIndex_System_01	叮咚
SeIndex_System_02	噗
SeIndex_System_03	哔哟
SeIndex_System_04	点击
SeIndex_System_05	哔哔哔哔
SeIndex_System_06	无法操作
SeIndex_System_07	启动
SeIndex_System_08	移动
SeIndex_System_09	小决定
SeIndex_System_10	取消
SeIndex_System_11	大决定
SeIndex_System_12	奇怪的移动
SeIndex_System_13	奇怪的小决定
SeIndex_System_14	奇怪的取消
SeIndex_System_15	奇怪的大决定
SeIndex_System_16	灵光一闪
SeIndex_System_17	开机声
SeIndex_System_18	叮
SeIndex_System_19	金币
SeIndex_System_20	奇怪的无法操作
SeIndex_System_21	错误
SeIndex_System_22	信息
SeIndex_System_23	噗噗
SeIndex_Nature_01	火焰
SeIndex_Nature_02	风声（小）
SeIndex_Nature_03	风声（大）
SeIndex_Nature_04	布料
SeIndex_Nature_05	风声（中）
SeIndex_Nature_06	嘎吱作响的木头
SeIndex_Nature_07	绷紧的绳子
SeIndex_Nature_08	水声（小）
SeIndex_Nature_09	水声（大）
SeIndex_Nature_10	岩浆
SeIndex_Nature_11	泥巴
SeIndex_Nature_12	泡泡
SeIndex_Animal_01	狮子
SeIndex_Animal_02	小鸟
SeIndex_Animal_03	马
SeIndex_Animal_04	驴子
SeIndex_Animal_05	小狗
SeIndex_Animal_06	青蛙
SeIndex_Animal_07	鸡
SeIndex_Animal_08	蟋蟀
SeIndex_Animal_09	狼
SeIndex_Animal_10	乌鸦
SeIndex_Animal_11	大象
SeIndex_Animal_12	鸭子
SeIndex_Voice_01	喝！（男）
SeIndex_Voice_02	喝！（女）
SeIndex_Voice_03	机器人
SeIndex_Voice_04	说话声
SeIndex_Voice_05	现场直播
SeIndex_Voice_09	人群的笑声
SeIndex_Voice_10	婴儿的笑声
SeIndex_Voice_11	害怕（男）
SeIndex_Voice_12	惊吓（男）
SeIndex_Voice_13	害怕（女）
SeIndex_Voice_14	惊吓（女）
SeIndex_Voice_15	鼓劲（短）
SeIndex_Voice_16	鼓劲（长）
SeIndex_Voice_17	邪恶的笑声
SeIndex_Voice_18	惊叹声
SeIndex_Voice_19	哈欠声
SeIndex_Voice_20	鼾声
SeIndex_Voice_21	和声
SeIndex_Voice_22	耶～！
SeIndex_Voice_23	欢呼
SeIndex_Voice_24	嘘声
SeIndex_Voice_25	受伤（男）
SeIndex_Voice_26	受伤（女）
SeIndex_Voice_27	兴高采烈（男）
SeIndex_Voice_28	兴高采烈（女）
SeIndex_Fx_02	电吉他延音
SeIndex_Fx_03	冲击
SeIndex_Fx_04	可疑
SeIndex_Fx_07	变身魔法
SeIndex_Fx_08	防御魔法
SeIndex_Fx_09	回复魔法
SeIndex_Fx_10	力量提升
SeIndex_Fx_11	邪恶魔法
SeIndex_Fx_12	鼓掌
SeIndex_Fx_13	激光
SeIndex_Fx_14	砰
SeIndex_Fx_15	唱针刮擦声
SeIndex_Fx_16	噗哟
SeIndex_Fx_17	咚
SeIndex_Fx_18	吸入
SeIndex_Fx_19	力量下降
SeIndex_Fx_21	锵
SeIndex_Fx_22	心跳声
SeIndex_Fx_23	DJ打碟
SeIndex_Jingle_01	开心
SeIndex_Jingle_02	非常开心
SeIndex_Jingle_03	伤心
SeIndex_Jingle_04	非常伤心
SeIndex_Jingle_05	胜利
SeIndex_Jingle_06	败北
SeIndex_Jingle_07	噔噔！
SeIndex_Jingle_08	获得
SeIndex_Jingle_09	撒花
SeIndex_Jingle_10	锵锵！
TimbreRadioButtonLabel	乐器
Timbre_Bando	俊雄先生
Timbre_Piano	钢琴
Timbre_Cat	猫
Timbre_Organ	管风琴
Timbre_Fem	姐姐
Timbre_GuiterAcoustic	木吉他
Timbre_GuiterElectric	电吉他
Timbre_Recorder	竖笛
Timbre_Trumpet	小号
Timbre_Violin	小提琴
Timbre_Harp	竖琴
Timbre_Bell	铃铛
Timbre_Fc	Famicom
Timbre_ViolinStaccato	小提琴（跳弓）
Timbre_GuiterMute	吉他闷音
TpbPlayBgmPortPreviewLabel	参数
BgmNumberRadioButtonLabel	乐曲
BgmNumber_01	散步
BgmNumber_02	小跳步
BgmNumber_03	踏实
BgmNumber_04	向阳处
BgmNumber_05	勇敢
BgmNumber_06	紧迫
BgmNumber_07	雀跃
BgmNumber_08	十万火急
BgmNumber_09	祭典
BgmNumber_10	环境音
BgmNumber_11	竞争
BgmPartIndexRadioButtonLabel_Melody	旋律
BgmPartIndexRadioButtonLabel_Harmony1	主伴奏
BgmPartIndexRadioButtonLabel_Harmony2	副伴奏
BgmPartIndexRadioButtonLabel_Rhythm	节奏
BgmPartIndex_NoSound	静音
BgmPartIndex_01_Melody_1	小提琴
BgmPartIndex_01_Melody_2	竖笛
BgmPartIndex_01_Melody_3	轻快感合成器
BgmPartIndex_01_Harmony1_1	钢琴
BgmPartIndex_01_Harmony1_2	木吉他
BgmPartIndex_01_Harmony1_3	铃铛合成器
BgmPartIndex_01_Harmony2_1	钟琴
BgmPartIndex_01_Harmony2_2	回音合成器
BgmPartIndex_01_Harmony2_3	怀旧感合成器
BgmPartIndex_01_Rhythm_1	流行乐
BgmPartIndex_01_Rhythm_2	进行曲
BgmPartIndex_01_Rhythm_3	爵士乐
BgmPartIndex_02_Melody_1	单簧管
BgmPartIndex_02_Melody_2	长号
BgmPartIndex_02_Melody_3	木琴
BgmPartIndex_02_Harmony1_1	班卓琴
BgmPartIndex_02_Harmony1_2	吉他与管风琴
BgmPartIndex_02_Harmony1_3	管风琴合成器
BgmPartIndex_02_Harmony2_1	弹跳合成器
BgmPartIndex_02_Harmony2_2	管钟合成器
BgmPartIndex_02_Harmony2_3	玩具喇叭
BgmPartIndex_02_Rhythm_1	传统爵士乐
BgmPartIndex_02_Rhythm_2	雷鬼乐
BgmPartIndex_02_Rhythm_3	6/8拍进行曲
BgmPartIndex_03_Melody_1	怀旧感合成器
BgmPartIndex_03_Melody_2	钢琴
BgmPartIndex_03_Melody_3	管风琴
BgmPartIndex_03_Harmony1_1	卡林巴琴
BgmPartIndex_03_Harmony1_2	木吉他
BgmPartIndex_03_Harmony1_3	踏板效果器与吉他
BgmPartIndex_03_Harmony2_1	喜剧效果合成器
BgmPartIndex_03_Harmony2_2	铺底音色合成器
BgmPartIndex_03_Harmony2_3	吹奏乐
BgmPartIndex_03_Rhythm_1	Famicom
BgmPartIndex_03_Rhythm_2	巴萨诺瓦音乐
BgmPartIndex_03_Rhythm_3	放克音乐
BgmPartIndex_04_Melody_1	流行乐合成器
BgmPartIndex_04_Melody_2	口风琴
BgmPartIndex_04_Melody_3	小提琴
BgmPartIndex_04_Harmony1_1	反转管风琴
BgmPartIndex_04_Harmony1_2	木吉他
BgmPartIndex_04_Harmony1_3	唱片
BgmPartIndex_04_Harmony2_1	哈
BgmPartIndex_04_Harmony2_2	嘟
BgmPartIndex_04_Harmony2_3	啊——
BgmPartIndex_04_Rhythm_1	迷幻电子乐
BgmPartIndex_04_Rhythm_2	乡村音乐
BgmPartIndex_04_Rhythm_3	大提琴
BgmPartIndex_05_Melody_1	小号与圆号
BgmPartIndex_05_Melody_2	电吉他旋律
BgmPartIndex_05_Melody_3	正弦声波
BgmPartIndex_05_Harmony1_1	长号
BgmPartIndex_05_Harmony1_2	吉他伴奏
BgmPartIndex_05_Harmony1_3	锯齿声波
BgmPartIndex_05_Harmony2_1	弦乐器
BgmPartIndex_05_Harmony2_2	管风琴
BgmPartIndex_05_Harmony2_3	三角声波
BgmPartIndex_05_Rhythm_1	大号与打击乐器
BgmPartIndex_05_Rhythm_2	摇滚乐
BgmPartIndex_05_Rhythm_3	杂音
BgmPartIndex_06_Melody_1	惊悚音效合成器
BgmPartIndex_06_Melody_2	木管乐器与木琴
BgmPartIndex_06_Melody_3	铜管乐旋律
BgmPartIndex_06_Harmony1_1	拨弦演奏
BgmPartIndex_06_Harmony1_2	弦乐器
BgmPartIndex_06_Harmony1_3	混乱的弦乐
BgmPartIndex_06_Harmony2_1	惊悚的和声
BgmPartIndex_06_Harmony2_2	反转合成器
BgmPartIndex_06_Harmony2_3	混乱的铜管乐
BgmPartIndex_06_Rhythm_1	电子乐
BgmPartIndex_06_Rhythm_2	打击乐
BgmPartIndex_06_Rhythm_3	混乱的打击乐
BgmPartIndex_07_Melody_1	锯齿声波
BgmPartIndex_07_Melody_2	矩形声波
BgmPartIndex_07_Melody_3	手风琴
BgmPartIndex_07_Harmony1_1	信号音节
BgmPartIndex_07_Harmony1_2	合成器与铃铛
BgmPartIndex_07_Harmony1_3	钢琴
BgmPartIndex_07_Harmony2_1	吹奏乐合成器
BgmPartIndex_07_Harmony2_2	酸爵士
BgmPartIndex_07_Harmony2_3	慢吉他
BgmPartIndex_07_Rhythm_1	放克音乐
BgmPartIndex_07_Rhythm_2	电子乐
BgmPartIndex_07_Rhythm_3	轻摇滚
BgmPartIndex_08_Melody_1	弦乐器与木琴
BgmPartIndex_08_Melody_2	音节合成器
BgmPartIndex_08_Melody_3	怪声合成器
BgmPartIndex_08_Harmony1_1	喜剧效果合成器
BgmPartIndex_08_Harmony1_2	电子琴
BgmPartIndex_08_Harmony1_3	班卓琴
BgmPartIndex_08_Harmony2_1	军号
BgmPartIndex_08_Harmony2_2	木吉他
BgmPartIndex_08_Harmony2_3	交响打击乐
BgmPartIndex_08_Rhythm_1	定音鼓
BgmPartIndex_08_Rhythm_2	鼓与贝司
BgmPartIndex_08_Rhythm_3	混乱的鼓与贝司
BgmPartIndex_09_Melody_1	手风琴
BgmPartIndex_09_Melody_2	长笛与小提琴
BgmPartIndex_09_Melody_3	篠笛
BgmPartIndex_09_Harmony1_1	电吉他
BgmPartIndex_09_Harmony1_2	木吉他
BgmPartIndex_09_Harmony1_3	三味线
BgmPartIndex_09_Harmony2_1	单簧管
BgmPartIndex_09_Harmony2_2	钢琴
BgmPartIndex_09_Harmony2_3	口哨
BgmPartIndex_09_Rhythm_1	波尔卡舞曲
BgmPartIndex_09_Rhythm_2	爱尔兰音乐
BgmPartIndex_09_Rhythm_3	太鼓
BgmPartIndex_10_Melody_1	小鸟
BgmPartIndex_10_Melody_2	虫
BgmPartIndex_10_Melody_3	人
BgmPartIndex_10_Harmony1_1	微风
BgmPartIndex_10_Harmony1_2	强风
BgmPartIndex_10_Harmony1_3	雷雨
BgmPartIndex_10_Harmony2_1	实验室
BgmPartIndex_10_Harmony2_2	城市
BgmPartIndex_10_Harmony2_3	大海
BgmPartIndex_10_Rhythm_1	水滴
BgmPartIndex_10_Rhythm_2	恐惧
BgmPartIndex_10_Rhythm_3	宇宙
BgmPartIndex_11_Melody_1	音节合成器
BgmPartIndex_11_Melody_2	SFC吹奏乐
BgmPartIndex_11_Melody_3	吹奏乐旋律
BgmPartIndex_11_Harmony1_1	管风琴
BgmPartIndex_11_Harmony1_2	SFC吉他
BgmPartIndex_11_Harmony1_3	圆号
BgmPartIndex_11_Harmony2_1	迷幻合成器
BgmPartIndex_11_Harmony2_2	SFC打击乐
BgmPartIndex_11_Harmony2_3	单簧管
BgmPartIndex_11_Rhythm_1	欧陆节拍
BgmPartIndex_11_Rhythm_2	SFC摇滚乐
BgmPartIndex_11_Rhythm_3	进行曲
VibrationFrequencySlider	频率
Hint_PlzGravityNode_00_Subject	小提示
Hint_PlzGravityNode_00	・输入-1.00～1.00，可以改变重力的大小。\n・试着输入1.00，感受像太空空间一样无重力的环境吧！
Hint_PlzPlaySpeedNode_00_Subject	小提示
Hint_PlzPlaySpeedNode_00	・输入0.00～1.00，可以改变时间的流逝速度！\n・输入1.00，会变为时间几乎停止的状态。\n・时间停止只会影响“物体”的动作，“计时”等不会停止。
PlzResetTypeSwitchLabel	重来的特效
PlzResetType_Type1	普通
PlzResetType_Type2	闪烁
PlzResetType_Type3	圆形
Hint_PlzResetNode_00_Subject	小提示
Hint_PlzResetNode_00	收到输入时，游戏就会从头开始。
Hint_PlzExitNode_00_Subject	小提示
Hint_PlzExitNode_00	收到输入时，就会结束游戏返回菜单。
GaugeModeSwitchLabel	显示方式
GaugeMode_Move	移动
GaugeMode_Stretch	伸长
GaugeMode_Line	线条
GaugeMode_Rotate	旋转
GaugeMode_Pie	饼图
GaugeMode_Alpha	透明度
GaugeMode_Flash	闪烁
Hint_Gauge_00_Subject	小提示
Hint_Gauge_00	选择“移动”后，试着改变小节点的形状吧！
Hint_AlwaysOn_00_Subject	小提示
Hint_AlwaysOn_00	请试着搭配“显示2D标示小节点”使用。
SpoitModeSwitchLabel	滴管反应
SpoitMode_Enable	可以使用滴管
SpoitMode_Disable	不可使用滴管
SpoitShapeSwitchLabel	滴管的形状
SpoitShape_Sphere	圆形
SpoitShape_Obb	长方形
Hint_Move2d_00_Subject	小提示
Hint_Move2d_00	通过输入数值来移动的●也能够对其他小节点的标示使用滴管。
Hint_EmitIrLed_00_Subject	小提示
Hint_EmitIrLed_00	可以点亮动作感应IR摄像头的红外线灯！
Hint_EmitIrLed_01_Subject	这难不成……
Hint_EmitIrLed_01	可以配合电路设计发挥作用……？
Hint_EmitIrLed_02_Subject	小提示
Hint_EmitIrLed_02	无法同时使用2个以上动作感应IR摄像头或5个以上Joy-Con。
Hint_PlzHeadNode_00_Subject	小提示
Hint_PlzHeadNode_00	将物体与这个小节点连接，就能将物体粘在镜头上。
PlzHandTriggerModeSwitchLabel	模式
PlzHandTriggerMode_Hold	按住按键
PlzHandTriggerMode_Toggle	按键切换
PlzHandHoldModeSwitchLabel	握法
PlzHandHoldMode_AsIs	保持原样
PlzHandHoldMode_Snap	紧贴手部
Hint_PlzHandHoldMode_00_Subject	小提示
Hint_PlzHandHoldMode_00	・设置为“保持原样”的话，物体会停留在被抓住的地方；设置为“紧贴手部”的话，会被吸引到手边。\n・比如设置为“紧贴手部”＋“发射速度＝10”的话，就能轻松将物体吸引到手边并投掷了。\n・当“紧贴手部”抓住物体的位置过近时，就试着调节一下“连接距离”吧。
PlzHandRotateBaseSwitchLabel	旋转基准
PlzHandRotateBase_Wrist	手腕
PlzHandRotateBase_elbow	手肘
PlzHandRotateBase_shoulder	肩膀
Hint_PlzHandRotateBase_00_Subject	小提示
Hint_PlzHandRotateBase_00	・设置让“Joy-Con的角度”和“游戏中手的哪一个部位”相对应。\n・设为“手腕”的话，会在手边小幅度移动，设为“肩膀”的话，会以肩膀为中心大幅度移动。
PlzHandBindDistanceSliderLabel	连接距离
Hint_PlzHandNode_00_Subject	手的方向有点怪？按下摇杆重置方向吧！
Hint_PlzHandNode_00	陀螺仪感应器的方向有时会发生偏移……\n遇到困难时，可以通过“将Joy-Con对准照相机正面并按下摇杆”重置，要记住哦！
Hint_PlzHandNode_01_Subject	想从一开始就拿到手上！
Hint_PlzHandNode_01	将物体连接到这个小节点上，就可以实现从一开始就是抓住的状态！
Hint_PlzHandNode_02_Subject	你的惯用手是哪只？
Hint_PlzHandNode_02	选Joy-Con(R)就要用右手操作，选Joy-Con(L)就要用左手操作哦。
Hint_PlzHandNode_03_Subject	如果“抓住”端口有输入，就可以抓住设置为“能抓住”的“物体”！
Hint_PlzHandNode_03	如果设置为“按住按键”，会在有输入的期间抓住。\n如果设置为“按键切换”，输入一次就会一直抓住。
Hint_PlzHandNode_04_Subject	抓住后能做什么？
Hint_PlzHandNode_04	・如果“前后”端口有输入，就可以前后调节所抓住物体的位置。\n・如果设置了“发射速度”，就可以在松手时发射物体。
PlzHumanActionSwitchLabel	动作
PlzHumanActionType_Yeah	欢呼
PlzHumanActionType_Punch	拳击
PlzHumanActionType_Kick	脚踢
PlzHumanActionType_Turn	转圈
Hint_PlzHumanAction_00_Subject	小提示
Hint_PlzHumanAction_00	・当动作端口接收到“1.00”时，就会做出指定动作。\n・比如同时做出“拳击”和“发射物体”的动作就很有画面感！\n・秘技：输入“2.00”、“3.00”、“4.00”、“5.00”的话，就可以无视设置来指定动作。
PlzCharacterSpeedSliderLabel	移动速度
PlzCharacterJumpSliderLabel	跳跃力
PlzCharacterAngularVelocityRatioLabel	转向速度
PlzUfoHorizontalSpeedSliderLabel	水平速度
PlzUfoHorizontalSpeedDetail	水平速度
PlzUfoVerticalSpeedSliderLabel	垂直速度
PlzUfoVerticalSpeedDetail	垂直速度
PlzShapeSwitchLabel	物体的形状
PlzShapeType_Box	立方体
PlzShapeType_Cylinder	圆柱体
PlzShapeType_Sphere	球体
PlzAttributeCheckBoxLabel	状态
PlzAttribute_Visible	能看见
PlzAttribute_Hittable	能接触
PlzAttribute_Movable	能移动
PlzAttribute_BreakableSelf	能损坏
PlzAttribute_BreakableOther	能破坏
PlzAttribute_NoBreakableOther	不能破坏
BreakableDetailButtonLabel	…
PlzAttributeOtherButtonLabel	其他
PlzMaterialReactionSwitchLabel	接触/损坏时，要播放声音吗？
PlzMaterialReaction_Sound	播放
PlzMaterialReaction_NoSound	不播放
PlzGrabbableSwitchLabel	能用手部小节点抓住吗？
PlzGrabbable_Enable	能抓住
PlzGrabbable_Disable	不能抓住
PlzColorTypeSwitchLabel	颜色
PlzFontColorTypeSwitchLabel	文字颜色
PlzColorType_Auto	自动
PlzColorType_Blue	蓝色
PlzColorType_Red	红色
PlzColorType_Green	绿色
PlzColorType_Yellow	黄色
PlzColorType_LightBlue	淡蓝色
PlzColorType_Pink	粉红色
PlzColorType_YellowGreen	黄绿色
PlzColorType_Orange	橙色
PlzColorType_Purple	紫色
PlzColorType_Brown	棕色
PlzColorType_White	白色
PlzColorType_Black	黑色
Hint_PlzColorType_00_Subject	小提示
Hint_PlzColorType_00	・选择喜爱的颜色，让一切更缤纷！\n・设置为“自动”时，会根据“能损坏”和“能破坏”的设置自动切换颜色。
PlzMaterialSwitchLabel	材料
PlzMaterial_General	普通
PlzMaterial_Bouncy	跳弹弹
PlzMaterial_Slippery	滑溜溜
PlzMaterial_Floaty	轻飘飘
PlzMaterial_ZeroGravity	无重力
Hint_PlzMaterial_00_Subject	小提示
Hint_PlzMaterial_00	・设置为“跳弹弹”，就会像橡胶一样弹来弹去，不容易滑动。\n・设置为“滑溜溜”，就会像冰一样哧溜滑动。\n・设置为“轻飘飘”，就会像气球一样飘起来。\n・设置为“无重力”，就会变成无视重力的神奇材料。
PlzBindTypeSwitchLabel	连接强度
PlzBindTypeSwitchDetail	连接强度
PlzBindType_Hard	普通
PlzBindType_Soft	弹弹
PlzBindType_Ball	180°旋转
Hint_PlzBindType_00_Subject	小提示
Hint_PlzBindType_00	・如果选择“弹弹”，就会像弹簧一样柔软地粘上去。\n・如果选择“180°旋转”，就会在半个球的范围内旋转。
PlzBindModeSwitchLabel	连接面
PlzBindModeSwitchDetail	连接面
PlzBindMode_Auto	自动
PlzBindMode_Manual	详细
PlzBindMode_Separator	 ▶ 
PlzBindPositionSwitchLabel_Child	自己的连接面
PlzBindPositionSwitchLabel_Parent	连接对象的连接面
PlzBindPosition_Center	中央
PlzBindPosition_XPlus	X＋
PlzBindPosition_XMinus	X－
PlzBindPosition_XPlane	X中央
PlzBindPosition_YPlus	Y＋
PlzBindPosition_YMinus	Y－
PlzBindPosition_YPlane	Y中央
PlzBindPosition_ZPlus	Z＋
PlzBindPosition_ZMinus	Z－
PlzBindPosition_ZPlane	Z中央
Hint_PlzBindMode_00_Subject	设置为“自动”就意味着……
Hint_PlzBindMode_00	排列物体时，会在靠近的面上自动连接。
Hint_PlzBindMode_01_Subject	设置为“详细”就意味着……
Hint_PlzBindMode_01	可以自行设置要将“当前物体的哪个面”连接到“连接对象物体的哪个面”。
PlzObjSizeSlider	大小
PlzObjSizeSliderXDetail	大小：X
PlzObjSizeSliderXPrefix	X: 
PlzObjSizeSliderXPostfix	 m
PlzObjSizeSliderYDetail	大小：Y
PlzObjSizeSliderYPrefix	Y: 
PlzObjSizeSliderYPostfix	 m
PlzObjSizeSliderZDetail	大小：Z
PlzObjSizeSliderZPrefix	Z: 
PlzObjSizeSliderZPostfix	 m
PlzObjPosSlider	位置
PlzObjPosSliderXDetail	位置：X
PlzObjPosSliderXPrefix	X: 
PlzObjPosSliderXPostfix	 m
PlzObjPosSliderYDetail	位置：Y
PlzObjPosSliderYPrefix	Y: 
PlzObjPosSliderYPostfix	 m
PlzObjPosSliderZDetail	位置：Z
PlzObjPosSliderZPrefix	Z: 
PlzObjPosSliderZPostfix	 m
PlzObjRotationZSlider	Y轴旋转
RotationZSliderDetail	Y轴旋转
RotationZSliderPrefix	Y轴：
RotationZSliderPostfix	°
PlzObjPitchSlider	X轴旋转
PitchSliderDetail	X轴旋转
PitchSliderPrefix	X轴：
PitchSliderPostfix	°
RollSliderDetail	Z轴旋转
RollSliderPrefix	Z轴：
RollSliderPostfix	°
PlzObjRotationSlider	旋转
PlzMoveBaseSwitchLabel	移动基准
PlzMoveBase_World	空间
PlzMoveBase_Local	局部
PlzMoveBase_Camera	照相机
Hint_PlzMoveBase_00_Subject	小提示
Hint_PlzMoveBase_00	“空间”：以空间的方向为基准移动。\n“局部”：以此物体的方向为基准移动（物体旋转的话，移动方向也会变化）。\n“照相机”：以照相机注视的方向为基准移动（Z+会朝着深处，X+会朝着右边）。
PlzMoveRigidVelocityModeLabel	模式
PlzMoveRigidVelocityMode_Acceleration	加速度
PlzMoveRigidVelocityMode_Velocity	速度
Hint_PlzMoveRigidVelocityMode_00_Subject	小提示
Hint_PlzMoveRigidVelocityMode_00	“加速度”：输入值会不断被累加到速度上，使物体的速度越来越快。\n“速度”：物体的移动速度与输入值保持一致。
PlzRotateBaseSwitchLabel	旋转基准
Hint_PlzRotateBase_00_Subject	小提示
Hint_PlzRotateBase_00	“空间”：以空间的方向为基准旋转。\n“局部”：以此物体的方向为基准旋转。\n“照相机”：以照相机注视的方向为基准旋转。
PlzSelectAxis_Center	中心
PlzSelectAxis_XPlus	X＋
PlzSelectAxis_XMinus	X－
PlzSelectAxis_YPlus	Y＋
PlzSelectAxis_YMinus	Y－
PlzSelectAxis_ZPlus	Z＋
PlzSelectAxis_ZMinus	Z－
PlzFancySkinSwitchLabel	外观
PlzFancyKindType_Dice	骰子
PlzFancyKindType_WoodBox	箱子
PlzFancyKindType_Container	集装箱
PlzFancyKindType_Panel	面板
PlzFancyKindType_TreasureBox	宝箱
PlzFancyKindType_TV	电视
PlzFancyKindType_JoyConR	Joy-Con(R)
PlzFancyKindType_JoyConL	Joy-Con(L)
PlzFancyKindType_Soccer	足球
PlzFancyKindType_Golf	高尔夫球
PlzFancyKindType_Balloon	气球
PlzFancyKindType_Apple	苹果
PlzFancyKindType_Turnip	甜菜根
PlzFancyKindType_Fish	鱼
PlzFancyKindType_Kedamaru	毛球
PlzFancyKindType_BzkEnemy	外星人
PlzFancyKindType_Doll01	胡子大叔
PlzFancyKindType_Doll02	啦啦队女孩
PlzFancyKindType_Doll03	潜水员
PlzFancyKindType_Doll04	人鱼
PlzFancyKindType_Doll05	机器人
PlzFancyKindType_Doll06	魔女
PlzFancyKindType_Doll07	雪人
PlzFancyKindType_Doll08	相扑选手
PlzFancyKindType_Ring	圆环
PlzFancyKindType_Arrow	箭头
PlzFancyKindType_Missile	导弹
PlzFancyKindType_Pencil	铅笔
PlzFancyKindType_Tuna	鲔鱼
PlzFancyKindType_Chick	幼鸟
PlzFancyKindType_Hippo	河马
PlzFancyKindType_Bear	小熊
PlzScoreRigidIntegerDigit	整数位数
PlzScoreRigidDecimalDigit	小数位数
PlzCommentRigidDirectionSwitchLabel	显示方向
CommentHeader_PlzCommentRigidNode	显示的注释
CommentRigidKeyboardGuide	请输入要显示的注释。
CommentRigidKeyboardLineNumOver	“带注释物体”最多只能输入2行注释。
CommentRigidKeyboardOk	OK
TextureSurfaceMaskLabel	粘贴面
EditColorDescriptionLabel	可根据喜好自由编辑调色板的颜色！
PaintCanvasEditColorWindowLabel	调色板
ResetColorButton	重置
PaintGuide_DetailLabel	模板
PaintGuide_00	无模板
PaintGuide_01	七段显示器
PaintGuide_02	人（前后）
PaintGuide_03	人（侧面）
PaintGuide_04	汽车
PaintGuide_05	UFO
PaintGuide_06	3×3
PaintGuide_07	4×4
PaintGuide_08	圆形
PaintGuide_09	内凹
PaintGuide_10	正六边形
PaintGuide_11	球
PaintGuide_12	砖块
PaintGuide_13	人字铺
PaintGuide_14	亮晶晶
PaintGuide_15	木纹
PaintGuide_16	头部（正面）
PaintGuide_17	头部（背面）
PaintGuide_18	头部（侧面）
PaintGuide_19	脸部（轮廓）
PaintGuide_20	青蛙
PaintGuide_21	问号
PaintGuide_22	感叹号
PaintGuide_23	钥匙
PaintGuide_24	钥匙孔
PaintGuide_25	旗子
PaintGuide_26	肉垫
PaintGuide_27	手部
PaintGuide_28	五角星
PaintGuide_29	爱心
PaintGuide_30	音符
Hint_PaintGuide_00_Subject	小提示
Hint_PaintGuide_00	可以用喜欢的颜色按照模板勾勒线条、填充轮廓线的内部或是外部，甚至无视模板随意发挥也没问题。\n多多尝试也许就能闪现画画的灵感！
PlzJointSliderAxisSelectSwitchLabel	滑动的移动基准
PlzJointSliderAxisChoiceSwitchLabel	滑动的移动输入
Hint_PlzJointSliderNode_00_Subject	小提示
Hint_PlzJointSliderNode_00	・连接起来的物体会在设置好的范围内自由移动。\n・也可以根据输入来控制位置，输入1.00就会移动1.00m。
Hint_PlzJointFreeSliderNode_00_Subject	自由滑动连接小节点和普通的滑动连接小节点不一样……
Hint_PlzJointFreeSliderNode_00	・可以将连接的物体按“X、Y、Z三个方向”移动。\n・如果没有输入，就会固定在那个地方。\n・把“滑动的移动输入”设置为关闭的话，连接的物体就可以在那个方向上自由移动。\n・因为无法设置“滑动范围”，所以物体可以移动到任何地方。
PlzJointHingeAxisSwitchLabel	铰链的旋转基准
Hint_PlzJointHingeNode_00_Subject	小提示
Hint_PlzJointHingeNode_00	・连接起来的物体会在设置好的范围内自由旋转。\n・如果收到输入，就可以控制角度。输入“10”就会旋转“10°”！
PlzRopeHardnessSliderLabel	绳子的结实度
PlzRopeLengthSliderLabel	绳子的长度
Hint_PlzRopeNode_00_Subject	小提示
Hint_PlzRopeNode_00	・用绳子将物体与物体连接起来！\n・上下两个端口都要连接，绳子才会出现。\n・秘技：当绳子状态中的“能接触”设置为关闭时……\n　连接在绳子两端的物体就能相互接触。
PlzSensorShapeSwitchLabel	感应器的形状
PlzCheckTargetCheckBoxLabel	要检查什么？
PlzCheckTarget_Field	空间
PlzCheckTarget_Box	立方体
PlzCheckTarget_Cylinder	圆柱体
PlzCheckTarget_Sphere	球体
PlzCheckTarget_Human	人
PlzCheckTarget_Car	汽车
PlzCheckTarget_Ufo	UFO
PlzCheckTarget_Player	头部及手部
PlzCheckTarget_All	全部
PlzCheckTarget_None	无
PlzCheckTarget_Separator	，
Hint_PlzTouchSensorNode_00_Subject	小提示
Hint_PlzTouchSensorNode_00	・这个感应器与检查对象的物体接触时，会输出接触物体的个数。\n・例如，与3个物体同时接触时，就会输出3.00。\n・“头部”和“手部”也可以作为检查对象！多多尝试看看吧。
Hint_PlzBrokenSensorNode_00_Subject	小提示
Hint_PlzBrokenSensorNode_00	・一定要和其他小节点连接使用！\n・该感应器在与之连接的物体损坏时，就会输出1.00。
Hint_PlzBreakSensorNode_00_Subject	小提示
Hint_PlzBreakSensorNode_00	・一定要和其他小节点连接使用！\n・该感应器在与之连接的物体破坏了什么东西时，就会输出破坏物体的数量。
Hint_PlzGrabSensorNode_00_Subject	小提示
Hint_PlzGrabSensorNode_00	・该感应器在与之连接的物体被抓住时，就会输出1.00。\n・如果没有连接任何物体，该感应器会在自身被抓住时输出1.00。
PlzSensorBindBaseSwitchLabel	感应器基准
PlzSensorBindBase_Local_PlzPositionSensorNode	初始位置
PlzSensorBindBase_Local_PlzAngleSensorNode	初始角度
Hint_PlzSensorBindBase_00_Subject	小提示
Hint_PlzSensorBindBase_00	“空间”：以感应器在空间内的所在地为基准输出位置。\n“初始位置”：输出感应器与初始位置相比移动了多少。\n“照相机”：以感应器在照相机视野内的所在地为基准输出位置。
Hint_PlzSensorBindBase_01_Subject	小提示
Hint_PlzSensorBindBase_01	“空间”：以空间的方向为基准输出。\n“局部”：以该感应器的方向为基准输出。\n“照相机”：以照相机注视的方向为基准输出。
Hint_PlzSensorBindBase_02_Subject	小提示
Hint_PlzSensorBindBase_02	“空间”：以空间的方向为基准输出。\n“初始角度”：输出感应器与初始角度相比旋转了多少。\n“照相机”：以照相机注视的方向为基准输出。
Hint_PlzPositionSensorNode_00_Subject	小提示
Hint_PlzPositionSensorNode_00	・会输出感应器中心的“位置”。\n・要和其他小节点连接使用！
Hint_PlzSpeedSensorNode_00_Subject	小提示
Hint_PlzSpeedSensorNode_00	・会输出感应器中心的“速度”。\n・要和其他小节点连接使用！
Hint_PlzAccelerationSensorNode_00_Subject	小提示
Hint_PlzAccelerationSensorNode_00	・会输出感应器中心的“加速度”。\n・要和其他小节点连接使用！
Hint_PlzAngleSensorNode_00_Subject	小提示
Hint_PlzAngleSensorNode_00	・会输出感应器中心的“角度”。\n・要和其他小节点连接使用！
Hint_PlzRotationSensorNode_00_Subject	小提示
Hint_PlzRotationSensorNode_00	・会输出感应器中心的“转动速度”。\n・要和其他小节点连接使用！
Hint_PlzMoveRigidNode_00_Subject	小提示
Hint_PlzMoveRigidNode_00	・根据输入，物体会产生“移动力量”。
Hint_PlzRotateRigidNode_00_Subject	小提示
Hint_PlzRotateRigidNode_00	・根据输入，物体会产生“旋转力量”。\n・输入1.00，就会以每秒1圈的速度旋转。\n・可以在“旋转基准”中更改施加力量的基准。
Hint_PlzStretchRigidNode_00_Subject	小提示
Hint_PlzStretchRigidNode_00	・输入1.00，就会伸长1.00m！\n・发生变化的只是外观，不会接触到其他物体或损坏。
PlzPullForceDirectionSwitchLabel	引力位置
PlzPullForceTargetSwitchLabel	要吸引什么？
Hint_PlzPullForceNode_00_Subject	小提示
Hint_PlzPullForceNode_00	・如果输入正数，会吸引物体！\n・如果输入负数，会弹开物体！\n・只有在设置好的“物体的形状”范围内才会产生力的作用。
PlzGenerateeDirectionSwitchLabel	发射方向
PlzGenerateeSpeedSliderLabel	发射速度
PlzGenerateeSpeedDetail	发射速度
PlzGenerateeIntervalSliderLabel	发射间隔（秒）
PlzGenerateeIntervalDetail	发射间隔（秒）
Hint_PlzGenerateeNode_00_Subject	小提示
Hint_PlzGenerateeNode_00	・接收到输入时，就能发射设置好的物体！\n・如果什么都没连接到输入端口，则会根据“发射间隔”自动发射。
PlzBindCommanderSwitchLabel	要破坏什么？
Hint_PlzBindCommanderNode_00_Subject	小提示
Hint_PlzBindCommanderNode_00	・设置好的“物体的形状”会将接触到的“破坏对象”破坏。\n・有信号连接到输入端口时，就可以切换能破坏/不能破坏。\n・只要发生接触，甚至能将连接在一起的物体破坏。
PlzObjWarpWarpIdSwitchLabel	传送ID
PlzObjWarpWarpTargetCheckBoxLabel	要传送什么？
PlzObjWarpLaunchStyleSwitchLabel	传送姿态
PlzObjWarpLaunchStyle_AsIs	维持原样
PlzObjWarpLaunchStyle_Tightly	重置
Hint_PlzObjWarpEnter_00_Subject	小提示
Hint_PlzObjWarpEnter_00	・会将接触到传送入口的物体传送到相同ID的传送出口。\n・如果没有相同ID的传送出口，接触到的物体就会消失。\n・有信号连接到输入端口时，就会仅在输入0.00以外的数值时传送！\n・发生传送时会把连接在一起的物体一并传送。\n・请注意，能够传送的物体“1帧只有1个”。
Hint_PlzObjWarpExit_00_Subject	小提示
Hint_PlzObjWarpExit_00	・接触到相同ID传送入口的物体，会从这个出口的“中心”出现。\n・虽然能够设置数个相同ID的传送入口，但是相同ID的出口只能设置1个。
Hint_PlzObjWarpLaunchStyle_00_Subject	小提示
Hint_PlzObjWarpLaunchStyle_00	・如果设置“维持原样”，就会和进入入口时维持相同的速度与方向从出口出来。\n・如果设置“重置”，就会重置进入入口时的速度与方向，再从出口出来。\n・只有在设置为“重置”时，才可以调整“发射方向”、“发射速度”。
PlzViewTypeLabel	视角
PlzViewType_LookDown	俯瞰视角
PlzViewType_Front	水平视角
Hint_PlzEasyCameraNode_00_Subject	小提示
Hint_PlzEasyCameraNode_00	被这个小节点圈住的范围即为游戏画面。
Hint_PlzTpsCameraNode_00_Subject	小提示
Hint_PlzTpsCameraNode_00	・可以不进行连接，使用第一人称视角的照相机。\n・也可以在进行连接后，把“偏移距离”设置为0以外的数值，变成第三人称视角的照相机。\n・如果端口接收到输入，还可以旋转照相机的角度。
PlzCameraFollowTypeLabel	角色Y轴旋转追踪
PlzCameraFollowType_NotFollow	关闭
PlzCameraFollowType_Follow	开启
PlzCameraTraceSpeedHSliderLabel	水平追踪率
PlzCameraTraceSpeedVSliderLabel	垂直追踪率
PlzCameraAngleSliderLabel	照相机视角
PlzCameraBindOffsetSliderLabel	偏移距离
PlzCameraBindOffsetSliderXDetail	偏移距离：X
PlzCameraBindOffsetSliderXPrefix	X: 
PlzCameraBindOffsetSliderXPostfix	 m
PlzCameraBindOffsetSliderYDetail	偏移距离：Y
PlzCameraBindOffsetSliderYPrefix	Y: 
PlzCameraBindOffsetSliderYPostfix	 m
PlzCameraBindOffsetSliderZDetail	偏移距离：Z
PlzCameraBindOffsetSliderZPrefix	Z: 
PlzCameraBindOffsetSliderZPostfix	 m
Hint_PlzCameraPositionNode_00_Subject	小提示
Hint_PlzCameraPositionNode_00	・照相机会被设置在小节点的所在位置。
Hint_PlzCameraPositionNode_01_Subject	小提示
Hint_PlzCameraPositionNode_01	・接收到输入时，可以偏移“位置”！\n・虽然有点难，但还请多多尝试各种各样的照相机操作。
Hint_PlzCameraLookAtNode_00_Subject	小提示
Hint_PlzCameraLookAtNode_00	・照相机会聚焦在小节点的所在位置。
Hint_PlzCameraLookAtNode_01_Subject	小提示
Hint_PlzCameraLookAtNode_01	・接收到输入时，可以偏移“位置”！\n・虽然有点难，但还请多多尝试各种各样的照相机操作。
Hint_PlzCameraDirectionNode_00_Subject	小提示
Hint_PlzCameraDirectionNode_00	・根据输入，可以移动照相机的方向。\n・当存在“照相机焦点”小节点时，以该小节点为基准移动照相机的方向。
Hint_PlzCameraViewAngleNode_00_Subject	小提示
Hint_PlzCameraViewAngleNode_00	・如果把视角调小……就会放大画面，显示范围会变窄。\n・如果把视角调大……就会缩小画面，显示范围会变宽。
PlzFieldShapeSwitchLabel	空间的形状
PlzFieldShapeType_None	无
PlzFieldShapeType_Floor	平面
PlzFieldShapeType_Dome	半球体
PlzFieldShapeType_Box	立方体
PlzFieldShapeType_Cylinder	圆柱体
PlzFieldShapeType_Sphere	球体
PlzFieldSkinSwitchLabel	空间的外观
PlzFieldSkinType_Normal	普通
PlzFieldSkinType_Grass	草坪
PlzFieldSkinType_Tile	瓷砖
PlzFieldSkinType_Iron	金属
PlzFieldSkinType_Sand	沙
PlzFieldLightSwitchLabel	空间的光线
PlzFieldLightType_Noon	白天
PlzFieldLightType_Evening	傍晚
PlzFieldLightType_Night	黑夜
PlzFieldLightType_Dark	漆黑
PlzFieldLightType_Space	宇宙
PlzFieldLightLongitudeLabel	太阳的方位
PlzFieldLightLatitudeLabel	太阳的高度
PlzFieldMaterialSwitchLabel	空间的材料
PlzFieldBreakableThresholdSliderLabel	空间中物体的损坏速度
PlzFieldBreakableThresholdSliderLabel_Numpad	空间中物体的损坏速度
Hint_PlzFieldLight_00_Subject	小提示
Hint_PlzFieldLight_00	・设置为“漆黑”时，真的没有一丝光亮。\n・把特效小节点的“光线”设置到“空间”的话，就能照亮世界。
PlzObjectSkinSwitchLabel	物体的外观
PlzObjectSkinType_Normal	普通
PlzObjectSkinType_Metal	金属
PlzObjectSkinType_Neon	霓虹
PlzChangeFileToModeSwitchLabel	切换方法
PlzChangeFileToMode_Keyword	关键词
PlzChangeFileToMode_Return	返回切换前的游戏
CommentHeader_PlzChangeFileNode_To	切换对象的关键词
CommentHeader_PlzChangeFileNode_ThisFile	当前游戏的关键词
PlzChangeFileFadeTypeSwitchLabel	切换的外观
PlzChangeFileFadeType_WithTitle	有标题
PlzChangeFileFadeType_WithoutTitle	无标题
ChangeFileKeyToKeyboardOk	OK
ChangeFileKeyToKeyboardHeader	切换对象的关键词
ChangeFileKeyToKeyboardGuide	请输入关键词
ChangeFileKeyThisFileKeyboardOk	OK
ChangeFileKeyThisFileKeyboardHeader	当前游戏的关键词
ChangeFileKeyThisFileKeyboardGuide	请输入关键词
Hint_TpbPuzzleClearNode_00_Subject	小提示
Hint_TpbPuzzleClearNode_00	这个小节点接收到信号后将会……？
DecimalPoint	.
ToggleSignButtonLabel	{[0001|0100]}{[0001|ffff]}
BackspaceButtonLabel	←删除一个
ClearButtonLabel	全部删除
CancelButtonLabel	取消
ApplyButtonLabel	OK
SaveAsKeyboardOk	OK
SaveAsKeyboardHeader	为游戏添加标题并保存
SaveAsKeyboardGuide	用简练的标题概括你的游戏吧！
LocalPasswordSetKeyboardOk	OK
LocalPasswordSetKeyboardHeader	请设置密码
LocalPasswordSetKeyboardSubText	若不设置密码，则该游戏无需密码即可获取。
LocalPasswordSetKeyboardGuide	输入4位数字
LocalPasswordCheckKeyboardOk	OK
LocalPasswordCheckKeyboardHeader	该游戏需要密码方可获取。
LocalPasswordCheckKeyboardGuide	输入4位数字
LocalPasswordCheckKeyboardMissmatch	密码错误
ShareCodeKeyboardOk	OK
ShareCodeKeyboardHeader	请输入游戏ID或程序员ID
ShareCodeKeyboardGuide	输入首字母为G或P的ID
ShareCodeKeyboardInvalidId	ID错误
UgcReportReasonKeyboardOk	OK
UgcReportReasonKeyboardGuide	请填写举报原因
PropertyWindowPrefix	设置 - 
Dialog_MaxNode_Body	最多只能叫出512个小节点。
Dialog_MaxNode_Button	OK
Dialog_MaxWire_Body	最多只能连接1024条线。
Dialog_MaxWire_Button	OK
Dialog_MaxComment_Body	最多只能叫出24个\n个人笔记小节点。
Dialog_MaxComment_Button	OK
Dialog_MaxIrMarker_Body	无法叫出更多\n使用动作感应IR摄像头的小节点。
Dialog_MaxIrMarker_Button	OK
Dialog_MaxBgm_Body	最多只能叫出4个\nBGM小节点。
Dialog_MaxBgm_Button	OK
Dialog_Common_Button	OK
Dialog_MaxPlzFieldConfig_Body	最多只能叫出1个\n空间小节点。
Dialog_MaxCameraPosition_Body	最多只能叫出1个\n照相机位置小节点。
Dialog_MaxCameraDirection_Body	最多只能叫出1个\n照相机方向小节点。
Dialog_MaxCameraLookAt_Body	最多只能叫出1个\n照相机焦点小节点。
Dialog_MaxCameraAngle_Body	最多只能叫出1个\n照相机视角小节点。
Dialog_MaxPlzGeneratorFew_Body	最多只能叫出64个\n发射物体小节点（1个）。
Dialog_MaxPlzGeneratorMiddle_Body	最多只能叫出16个\n发射物体小节点（10个）。
Dialog_MaxPlzGeneratorMany_Body	最多只能叫出2个\n发射物体小节点（100个）。
Dialog_MaxPlzFancyRigid_Body	最多只能叫出32个\n时尚物体小节点。
Dialog_MaxPlzHuman_Body	最多只能叫出8个\n人小节点。
Dialog_MaxPlzCar_Body	最多只能叫出8个\n汽车小节点。
Dialog_MaxPlzUfo_Body	最多只能叫出8个\nUFO小节点。
Dialog_MaxPlzHead_Body	最多只能叫出1个\n头部小节点。
Dialog_MaxPlzHand_Body	最多只能叫出8个\n手部小节点。
Dialog_MaxCommentRigid_Body	最多只能叫出8个\n带注释物体小节点。
Dialog_NoVacancyObjWarpId_Body	传送物体出口小节点的\n传送ID用完了，\n因此无法叫出更多。
Dialog_MaxPlzRope_Body	最多只能叫出8个\n绳子连接小节点。
Dialog_MaxPlzTexture_Body	最多只能叫出128个\n材质小节点。
Dialog_MaxPlzObj_Body	无法叫出更多物体小节点。
Dialog_MaxPlzChangeFile_Body	最多只能叫出8个\n切换游戏小节点。
Dialog_MaxPlzEasyCamera_Body	最多只能叫出1个\n游戏画面小节点。
Dialog_MaxPlzTpsCamera_Body	最多只能叫出1个\n照相机小节点。
Dialog_IrreconcilableEasyCamera_Body	无法与游戏画面小节点共存。
Dialog_IrreconcilableTpsCamera_Body	无法与照相机小节点共存。
Dialog_IrreconcilableCameraDetail_Body	无法与照相机详细设置相关的小节点共存。
TvInputModeConfigSwitchLabel	TV模式的操作
HandheldInputModeConfigSwitchLabel	掌上模式与桌面模式的操作
InputModeConfig_Touch	点触
InputModeConfig_StickPointer	摇杆指针
InputModeConfig_GyroPointer	陀螺仪指针
HardKeyShortcutConfigSwitchLabel	画布操作的快捷键
HardKeyShortcutConfig_Enable	使用
HardKeyShortcutConfig_Disable	停用
CanvasScrollConfigSwitchLabel	上下反转移动画布的操作
CanvasScrollConfig_Enable	反转
CanvasScrollConfig_Disable	默认
CanvasZoomConfigSwitchLabel	上下反转缩放画布的操作
CanvasZoomConfig_Enable	反转
CanvasZoomConfig_Disable	默认
Lesson_00_00_CommentRigid_00	　　去拿苹果！　　
Lesson_00_00_CommentRigid_01	　　　 移动　　　\n　　　 跳跃　　　
TpbPlaySoundSettingSeparater_Property	・
TpbPlaySoundSettingSeparater_Node	・
Lyt_Common.msbt
Dialog_Common_Button1	OK
Dialog_Common_Button2	取消
Dialog_LastStepReEnter_Body	要开始进行最后的步骤吗？\n\n这个步骤结束时，\n会覆盖掉之前做好的游戏。\n\n如果想保留之前做好的游戏，\n请先在自由编程当中复制它。
Dialog_LastStepReEnter_Button1	开始
Dialog_GuidebookOpen_Body	已新增小节点指南。
Dialog_PlazaExitConfirmLesson_Body	若在中途结束，\n下次将从该步骤的初始状态重新开始。\n\n确定要结束吗？
Dialog_PlazaExitConfirmLesson_Button1	结束
Dialog_PlazaExitConfirmLessonLast_Body	编程中的数据会被保存，\n下次可以从保存的位置继续编程。\n\n要保存并结束吗？
Dialog_PlazaExitConfirmLessonLast_Button1	保存并结束
Dialog_PlazaExitConfirmGuidebook_Body	若在中途结束，\n下次将从该小节点指南的初始状态重新开始。\n\n确定要结束吗？
Dialog_PlazaExitConfirmGuidebook_Button1	结束
Dialog_PlazaExitConfirmHint_Body	要结束小节点指南，\n返回谜题吗？
Dialog_PlazaExitConfirmHint_Button1	返回谜题
Dialog_PlazaExitConfirmPuzzle_Body	若在中途结束，\n下次将从该谜题的初始状态重新开始。\n\n确定要结束吗？
Dialog_PlazaExitConfirmPuzzle_Button1	结束
Dialog_MyGameOptionConfirmDelete_Body	确定要删除吗？
Dialog_MyGameOptionConfirmDelete_Button1	确定删除
Dialog_MyGameOptionConfirmDelete_Button2	还是算了
Dialog_PuzzleHintConfirm_Body	要退出谜题，\n复习小节点指南吗？\n\n已对谜题作出的更改将不会被保存。
Dialog_PuzzleHintConfirm_Button1	阅读小节点指南
Dialog_PuzzleSkipConfirm_Body	如果实在解不开这道谜题，\n可以跳过谜题，直接过关。\n\n要跳过谜题吗？
Dialog_PuzzleSkipConfirm_Button1	跳过解不开的谜题
Dialog_PuzzleSkipConfirm_Button2	不跳过，继续努力
Dialog_PuzzleResetConfirm_Body	要重新开始这道谜题吗？
Dialog_PuzzleResetConfirm_Button1	重新开始
Dialog_FinalStepResetConfirm_Body	如果重新开始这个步骤，\n程序将恢复到这个步骤的初始状态。\n\n确定要重新开始吗？
Dialog_FinalStepResetConfirm_Button1	重新开始
Dialog_LockedLesson_Body	循序渐进地完成每一堂课吧。\n　　　　　　　　——鲍伯
Dialog_LockedLesson_Button1	知道了
Dialog_InternetUploadConfirm_Body	要在互联网上发布游戏吗？\n\n游戏一经发布，任何人均可\n通过输入游戏ID游玩你的游戏，\n或对其进行改编并发布。
Dialog_InternetUploadConfirm_Button1	发布
Dialog_LocalUploadConfirm_Body	要向附近的人发布游戏吗？\n\n他人可对你发布的游戏\n进行改编并发布至互联网。
Dialog_LocalUploadConfirm_Button1	发布
Dialog_UgcReportConfirm_Body	将举报内容中含有\n违反“Nintendo Account使用条款”的游戏。\n\n该举报将发送至任天堂，而不是游戏发布者。
Dialog_UgcReportConfirm_Button1	OK
Dialog_ServerDeleteConfirm_Body	要删除已发布的游戏吗？\n\n删除后他人将无法获取该游戏。\n\n他人已下载到本地的游戏不会被删除。
Dialog_ServerDeleteConfirm_Button1	删除
Dialog_UgcReportDone_Body	已举报
Dialog_UgcReportDoneAndDelete_Body	已举报。\n\n将从你的保存数据中删除该游戏。
Dialog_MaxLocalFileDownload_Body	可保存的游戏数量已达上限。\n\n若想获取新的游戏，\n请删除自己制作或已获取的游戏。
Dialog_MaxLocalFileDownloadSelf_Body	可保存的游戏数量已达上限。\n\n若想下载新的游戏，\n请删除自己制作或已获取的游戏。
Dialog_MaxLocalFileCopy_Body	可保存的游戏数量已达上限。\n\n若想复制游戏，\n请删除自己制作或已获取的游戏。
Dialog_MaxLocalFileNew_Body	可保存的游戏数量已达上限。\n\n若想创建新的游戏，\n请删除自己制作或已获取的游戏。
Dialog_MaxInternetUploadFile_Body	可发布的游戏数量已达上限。\n\n若想发布新的游戏，\n请删除已发布的游戏。
Dialog_LocalUploadEndConfirm_Body	要结束发布吗？
Dialog_LocalUploadEndConfirm_Button1	结束
Dialog_SetTitleRequest_Body	为游戏添加标题吧！
Dialog_NotFoundAuthorCode_Body	未找到程序员。
Dialog_NotFoundGameCode_Body	未找到游戏。
Dialog_InternetDownloadContinueConfirm_Body	要继续从该程序员处获取游戏吗？
Dialog_InternetDownloadContinueConfirm_Button1	获取
Dialog_InternetDownloadContinueConfirm_Button2	结束
Dialog_InternetDownloadGameMenuExitConfirm_Body	要结束获取游戏吗？
Dialog_InternetDownloadGameMenuExitConfirm_Button1	结束
Dialog_InternetDownloadGameInfoExitConfirm_Body	要退出该游戏的获取\n并返回自由编程画面吗？
Dialog_InternetDownloadGameInfoExitConfirm_Button1	返回自由编程画面
Dialog_GoAlbumConfirm_Body	拍摄当前画面截图并显示在  相册中。\n\n将该截图上传至SNS，\n与朋友们分享游戏ID与程序员ID吧。\n\n要拍摄截图并打开  相册吗？
Dialog_GoAlbumConfirm_Button1	是
Dialog_GoAlbumConfirm_Button2	否
Dialog_ForceMyGameMenuOpenConfirm_Body	已输入强行开启自由编程的特殊指令。\n\n按照正常流程，自由编程\n会在完成第1课的游戏后开启。\n建议按顺序接受教学。\n\n要开启自由编程吗？
Dialog_ForceMyGameMenuOpenConfirm_Button1	开启
Dialog_ForceMyGameMenuOpenFinalConfirm_Body	确定要开启吗？
Dialog_ForceMyGameMenuOpenFinalConfirm_Button1	确定开启
Dialog_NetworkError_Other_Body	发生连接错误。
Dialog_NetworkError_DisconnectFromHost_Body	与发布对象之间的连接已中断。
Dialog_NetworkError_BadConnection_Body	连接已中断。\n\n您的连接环境可能不够稳定。\n\n若问题无法解决，\n请查阅Nintendo Switch官方网站支持页面。\nhttps://www.nintendo.co.jp/support/switch/
Dialog_BrokenData_Body	数据已损坏。
Dialog_DisableUpload_Body	发布游戏的功能已停止服务。\n感谢您一直以来的支持。\n\n已发布的游戏仍然可以继续获取。
Dialog_SaveDataTransfer_Body	发现体验版的保存数据。\n是否要继承？
Dialog_SaveDataTransfer_Button1	是
Dialog_SaveDataTransfer_Button2	否
Tpb_PlazaPlayUI-L_BtnPause-T_Text_00	暂停
Tpb_PlazaPlayUI-L_BtnRetry-T_00	长按
Tpb_PlazaEditUI-L_BtnPause-T_Text_00	暂停
Pause_End	结束
Pause_Back_to_Puzzle	返回谜题
Pause_Reset_Puzzle	重新开始
Pause_Reset_FinalLesson	重新开始这个步骤
Tpb_PlazaPauseMenu-L_BtnBacklog-T_Text_00	对话记录
Tpb_PlazaPauseMenu-L_BtnSet-T_Text_00	操作设置
Tpb_PlazaPauseMenu-L_BtnRef-T_Text_00	小百科
Tpb_PlazaPauseMenu-L_BtnHint-T_Text_00	复习小节点指南
Tpb_PlazaPauseMenu-T_NodeLabel	小节点
Tpb_PlazaPauseMenu-T_WireLabel	线
Tpb_PlazaPauseMenuT_SubTitle_Lesson	第{[fa00|000000cd]}课\n第{[fa01|010000cd]}步
Tpb_PlazaPauseMenuT_SubTitle_Puzzle	小测验\n{[fa00|000000cd]}-{[fa01|010000cd]}
Tpb_PlazaPauseMenuT_SubTitle_PuzzleIntro	第一次小测验
Tpb_PlazaPauseMenuT_SubTitle_PuzzleExtra	附加小测验{[fa01|010000cd]}
Tpb_PlazaPauseMenuT_SubTitle_Guidebook	小节点指南
Tpb_PlazaPauseMenuT_SubTitle_MyGame	自由编程
Tpb_PlazaBacklog-L_Cnt-L_Cnt_00-T_Text_01_Image	查看图片
Tpb_PlazaBacklog-L_Cnt-L_Cnt_00-T_Text_01_Movie	查看视频
Tpb_PlazaBacklogOpenCnt-L_Footer-L_Btn_02-T_Text_00	再看一次
Tpb_PlazaBacklogOpenCnt-L_Footer-L_Btn_01-T_Text_00	返回
Tpb_GuidebookMenu-L_Footer-L_Btn_00-T_Text_00	确定
Tpb_GuidebookMenu-L_Footer-L_Btn_01-T_Text_00	返回
Tpb_PlazaPauseMenu-L_Footer-L_Btn_00-T_Text_00	确定
Tpb_PlazaPauseMenu-L_Footer-L_Btn_01-T_Text_00	关闭
Tpb_MyGameMenu-L_Footer-L_Btn_00-T_Text_00	确定
Tpb_MyGameMenu-L_Footer-L_Btn_01-T_Text_00	返回
Tpb_MyGameMenu-L_Footer-L_Btn_02-T_Text_00	选项
Tpb_PlazaEditConfig-L_Footer-L_Btn_00-T_Text_00	确定
Tpb_PlazaEditConfig-L_Footer-L_Btn_01-T_Text_00	关闭
Tpb_PlazaBacklog-L_Footer-L_Btn_00-T_Text_00	确定
Tpb_PlazaBacklog-L_Footer-L_Btn_01-T_Text_00	关闭
Tpb_CourseMenu-L_Footer-L_Btn_00-T_Text_00	确定
Tpb_CourseMenu-L_Footer-L_Btn_01-T_Text_00	返回
Tpb_LessonMenu-L_Footer-L_Btn_00-T_Text_00	确定
Tpb_LessonMenu-L_Footer-L_Btn_01-T_Text_00	返回
Tpb_MyGameMenuOption-L_Footer-L_Btn_00-T_Text_00	确定
Tpb_MyGameMenuOption-L_Footer-L_Btn_01-T_Text_00	关闭
Tpb_PuzzleMenu-L_Footer-L_Btn_00-T_Text_00	确定
Tpb_PuzzleMenu-L_Footer-L_Btn_01-T_Text_00	返回
Tpb_TopMenu-L_Footer-L_Btn_00-T_Text_00	确定
Tpb_Balloon-L_Movie_00-L_Footer-L_Btn_00-T_Text_00	下一步
Tpb_Balloon-L_Movie_00-L_Footer-L_Btn_01-T_Text_00	再看一次
Tpb_MyGameMenuOption-T_Header	无标题
Tpb_MyGameMenuOption-L_TitleName-T_Text	添加游戏标题
Tpb_MyGameMenuOption-L_Lock-T_Text	锁定
Tpb_MyGameMenuOption-L_Copy-T_Text	复制
Tpb_MyGameMenuOption-L_Delete-T_Text	删除
Tpb_MyGameMenuOption-L_NodeStatus-T_Label	小节点
Tpb_MyGameMenuOption-L_WireStatus-T_Label	线
Tpb_MyGameMenuOption-L_NodeStatus-T_Status_00	{[fa02|000000cd]}/{[fa02|010000cd]}
Tpb_MyGameMenuOption-L_Lock-On	开启
Tpb_MyGameMenuOption-L_Lock-Off	关闭
Tpb_PlazaInsertTitle-T_Guidebook	小节点指南
Tpb_PlazaInsertTitle-T_Puzzle_00	小测验{[fa00|000000cd]}-{[fa01|010000cd]}
Tpb_PlazaInsertTitle-T_Puzzle_Intro	第一次小测验
Tpb_PlazaInsertTitle-T_Puzzle_Extra	附加小测验{[fa01|010000cd]}
Tpb_EventLessonClear-T_Date	{[fa0b|000000cd]}/{[fa09|010000cd]}/{[fa09|020000cd]}
Tpb_EventLessonClear-T_01	程序员
Tpb_EventLessonClear-T_UserName	{[0201]}
Tpb_EventPuzzleClear-T_00	全部过关！
Tpb_EventLessonAllClear-T_Text	7课附带导航的课堂至此全部结束。\n恭喜你跨出了作为程序员的第一步。\n希望从今往后你能依靠自己的力量，\n不断做出更多只属于你的游戏！
Tpb_EventLessonAllClear-T_UserName	{[0201]}
Tpb_EventLessonAllClear-T_00	完成所有课堂！
Tpb_EventLessonAllClear-T_01	鲍伯＆爱丽丝
Tpb_EventLessonAllClear-T_Date	{[fa0b|000000cd]}/{[fa09|010000cd]}/{[fa09|020000cd]}
Tpb_TopMenu-L_CourseMenu_00-T_Text_00	附带导航的课堂
Tpb_TopMenu-L_MyGameMenu_00-T_Text_00	自由编程
Tpb_MyGameMenu-T_Header	自由编程
Tpb_MyGameMenu-L_BtnNewFile-T_Text	创建新游戏
Tpb_MyGameMenu-L_BtnCntMenu_00-T_Text_00	小节点指南
Tpb_CourseMenu-T_Header_00	附带导航的课堂
Tpb_CourseMenu-T_TimeLabel	预计所需时间
Tpb_CourseMenu-T_TimeRequired_01	约40分钟
Tpb_CourseMenu-T_TimeRequired_02	约50分钟
Tpb_CourseMenu-T_TimeRequired_03	约70分钟
Tpb_CourseMenu-T_TimeRequired_04	约80分钟
Tpb_CourseMenu-T_TimeRequired_05	约80分钟
Tpb_CourseMenu-T_TimeRequired_06	约60分钟
Tpb_CourseMenu-T_TimeRequired_07	约90分钟
Tpb_CourseMenu-L_BtnCntMenu-T_Text_00	小节点指南
Tpb_CourseMenu-T_Lesson_Lesson	第{[fa00|000000cd]}课
Tpb_CourseMenu-T_Clear	过关
Tpb_CourseMenu-T_CheckPointClear	过关
Tpb_CourseMenu-T_Extra	完成{[fa02|000000cd]}％
Tpb_LessonMenu-T_Header	第{[fa00|000000cd]}课
Tpb_LessonMenu-T_StepNum	第{[fa01|000000cd]}步
Tpb_LessonMenu-L_BtnCntMenu-T_Text_00	小节点指南
Tpb_LessonMenu-L_Steps_00-T_StepNumLocked	{[fa01|000000cd]}
Tpb_GuidebookMenu-T_SideTitle	出场小节点
Tpb_GuidebookMenu-T_SideOthers	其他
Tpb_PuzzleMenu-L_BtnCntMenu-T_Text_00	小节点指南
Tpb_PuzzleMenu-L_Puzzle_00-T_PuzzleNum	{[fa00|000000cd]}
Tpb_PuzzleMenuExtra-L_Footer-L_Btn_00-T_Text_00	确定
Tpb_PuzzleMenuExtra-L_Footer-L_Btn_01-T_Text_00	返回
Tpb_PuzzleMenuExtra-L_CntList_00-L_Puzzle_00-T_PuzzleNum	{[fa01|000000cd]}
Tpb_Reticle2D_00-L_GyroDpd_00-BtnL	
Tpb_Reticle2D_00-L_GyroDpd_00-BtnR	
Tpb_Reticle2D_00-L_GyroDpd_00-Cal_L	需要修正{[0001|1e00]}{[0001|ffff]}Joy-Con(L)的陀螺仪。\n请放在平坦的地方，并保持静止。
Tpb_Reticle2D_00-L_GyroDpd_00-Cal_R	需要修正{[0001|1e00]}{[0001|ffff]}Joy-Con(R)的陀螺仪。\n请放在平坦的地方，并保持静止。
Tpb_ErrorCollision	大量的物体重叠配置，\n正在消除物体之间重叠的状况……
Tpb_ErrorFrameRate	●
Tpb_ErrorObjVanish	▲
Tpb_PlazaEditConfig-T_Header	操作设置
Tpb_PlazaPauseMenu-L_BtnName-T_Text_00	添加游戏标题
Tpb_PlazaBtnFinish-L_Finish_00-T_Text_00	完成
Tpb_GuidebookMenu-L_BtnCntMenu-T_Text_00	小节点指南
Tpb_MyGameMenuOption-T_Lock	在开始编辑前请先复制这个游戏。
Tpb_PlazaBacklog-T_Tag	对话记录
Tpb_MyGameMenuOption-T_EditDateLabel	更新时间
Tpb_MyGameMenuOption-T_EditDate	{[fa0b|000000cd]}/{[fa09|010000cd]}/{[fa09|020000cd]} {[fa09|030000cd]}:{[fa09|040000cd]}
Tpb_PlazaInsertClear-T_00	过关
Tpb_PuzzleMenu-L_Puzzle_00-T_Pass	跳过
Tpb_GameInfo-L_Footer-L_Btn_01-T_Text_00	返回
Tpb_GameInfo-L_Footer-L_Btn_01-T_Text_00_End	结束
Tpb_GameInfo-L_Footer-L_Btn_01-T_Text_00_Stop	退出
Tpb_GameInfo-L_Footer-L_Btn_00-T_Text_00	确定
Tpb_LocalGameMenu-L_Footer-L_Btn_02-T_Text_00	重新搜索
Tpb_LocalGameMenu-L_Footer-L_Btn_01-T_Text_00	返回
Tpb_LocalGameMenu-L_Footer-L_Btn_00-T_Text_00	确定
Tpb_LocalGameMenu-T_Search_00	在附近找到了发布中的游戏。
ReportKind_00	个人信息、交友信息
ReportKind_01	暴力内容
ReportKind_02	违反公序良俗的内容
ReportKind_03	污言秽语、寻衅滋事
ReportKind_04	包含盈利、宣传目的
ReportKind_05	色情内容
ReportKind_07	其他不正当的行为
Tpb_MyGameMenu-L_BtnGetFile-T_Text	获取
Tpb_MyGameMenu-L_BtnShareFile-T_Text	发布
Tpb_MyGameMenu-L_BtnExtract-T_Text	筛选
Tpb_MyGameMenu-L_BtnExtract-T_Text_All	所有游戏（{[fa01|000000cd]}）
Tpb_MyGameMenu-L_BtnExtract-T_Text_Favorite	收藏（{[fa01|000000cd]}）
Tpb_UploadGameSelect-L_Footer-L_Btn_01-T_Text_00	返回
Tpb_UploadGameSelect-L_Footer-L_Btn_00-T_Text_00	确定
Tpb_UploadGameSelect-T_Explain_00	要发布哪一款游戏？
Tpb_UgcReportSelect-L_Footer-L_Btn_01-T_Text_00	返回
Tpb_UgcReportSelect-L_Footer-L_Btn_00-T_Text_00	确定
Tpb_UgcReportSelect-T_ReasonForReporting	请选择举报类型
Tpb_UgcReportConfirm-T_Header_00	要按上述内容进行举报吗？
Tpb_UgcReportConfirm-L_Footer-L_Btn_02-T_Text_00	放大要举报的画面
Tpb_UgcReportConfirm-L_Footer-L_Btn_01-T_Text_00	返回
Tpb_UgcReportConfirm-L_Footer-L_Btn_00-T_Text_00	确定
Tpb_MethodSelect-L_Footer-L_Btn_01-T_Text_00	返回
Tpb_MethodSelect-L_Footer-L_Btn_00-T_Text_00	确定
Tpb_MethodSelect-L_Btn_00-T_Text_Upload	发布至互联网
Tpb_MethodSelect-L_Btn_01-T_Text_Upload	发布给附近的人
Tpb_MethodSelect-L_Btn_00-T_Text_Download	从互联网上获取
Tpb_MethodSelect-L_Btn_01-T_Text_Download	从附近的人处获取
ReportKind_NotSet	请选择举报类型
Tpb_InternetGameMenu-L_Footer-L_Btn_02-T_Text_00	重新搜索
Tpb_InternetGameMenu-L_Footer-L_Btn_01-T_Text_00	结束
Tpb_InternetGameMenu-L_Footer-L_Btn_01-T_Text_00-Back	返回
Tpb_InternetGameMenu-L_Footer-L_Btn_00-T_Text_00-Other	确定
Tpb_InternetGameMenu-L_Footer-L_Btn_00-T_Text_00-Self	确定
Tpb_PlazaPauseMenu-L_BtnReport-T_Text	举报
Tpb_InternetGameMenu-T_NoItem_00	尚未发布任何游戏
Tpb_MyGameMenuOption-L_Fav-T_Text	收藏
Tpb_MyGameMenuOption-L_Fav-T_Status-On	开启
Tpb_MyGameMenuOption-L_Fav-T_Status-Off	关闭
Tpb_MyGameMenuOption-L_AuthorID-T_Text	获取该程序员的游戏
Tpb_InternetGameMenu-L_BtnCntMenu-L_Cnt_00-L_AuthorID-T_Label	游戏ID
Tpb_InternetGameMenu-L_BtnCntMenu-L_Cnt_00-T_Report	已举报
Tpb_InternetGameMenu-L_Header-T_Title-Self	{[0802]}所发布的游戏
Tpb_InternetGameMenu-L_Header-T_Title-Other	{[0801]}所发布的游戏
Tpb_InternetGameMenu-L_Header-T_AuthorID_00	程序员ID
Tpb_Header-L_Header-T_Header_Upload	{[0001|1b00]}发布{[0001|ffff]}
Tpb_Header-L_Header-T_Header_InternetUpload	{[0001|1b00]}发布至互联网{[0001|ffff]}
Tpb_Header-L_Header-T_Header_LocalUpload	{[0001|1b00]}发布给附近的人{[0001|ffff]}
Tpb_Header-L_Header-T_Header_Download	{[0001|1b00]}获取{[0001|ffff]}
Tpb_Header-L_Header-T_Header_InternetDownload	{[0001|1b00]}从互联网上获取{[0001|ffff]}
Tpb_Header-L_Header-T_Header_LocalDownload	{[0001|1b00]}从附近的人处获取{[0001|ffff]}
Tpb_Header-L_Header-T_Header_InternetGameSelf	{[0001|1b00]}已发布的游戏{[0001|ffff]}
Tpb_Header-L_Header-T_Header_UgcReport	{[0001|1b00]}举报{[0001|ffff]}
Tpb_LocalGameMenu-L_BtnCntMenu-Author	程序员
Tpb_LocalGameMenu-T_NoItem_00	在附近未找到发布中的游戏。
Tpb_GameInfo-L_GameCard-T_EditDate	更新时间
Tpb_GameInfo-L_GameCard-T_EditDate_Str	{[fa0b|000000cd]}/{[fa09|010000cd]}/{[fa09|020000cd]} {[fa09|030000cd]}:{[fa09|040000cd]}
Tpb_GameInfo-L_GameCard-T_NodeStatus	小节点
Tpb_GameInfo-L_GameCard-T_NodeStatus_Str	{[fa02|000000cd]}/{[fa02|010000cd]}
Tpb_GameInfo-L_GameCard-T_WireStatus	线
Tpb_GameInfo-L_GameCard-T_GameID	游戏ID
Tpb_GameInfo-L_GameCard-T_Author	程序员
Tpb_GameInfo-L_GameCard-L_Btn_Upload-T_Text_Internet	{[0001|1b00]}发布至互联网{[0001|ffff]}
Tpb_GameInfo-L_GameCard-L_Btn_Upload-T_Text_Local	发布给附近的人
Tpb_GameInfo-L_GameCard-L_Btn_Get-T_Text_InternetGet	从互联网上获取
Tpb_GameInfo-L_GameCard-L_Btn_Get-T_Text_InternetHave	已拥有
Tpb_GameInfo-L_GameCard-L_Btn_Get-T_Text_LocalGet	从附近的人处获取
Tpb_GameInfo-L_GameCard-L_Btn_Get-T_Text_LocalHave	已拥有
Tpb_Waiting-L_Indicator_00-T_Waiting_00-Uploading	正在上传……
Tpb_Waiting-L_Indicator_00-T_Waiting_00-Downloading	正在下载……
Tpb_Waiting-L_Indicator_00-T_Waiting_00-LocalDownloadPreparing	正在准备下载……
Tpb_Waiting-L_Indicator_00-T_Waiting_00-LocalDownloading	正在下载……
Tpb_Waiting-L_Indicator_00-T_Waiting_00-UgcReportSending	正在发送举报内容……
Tpb_Waiting-L_Indicator_00-T_Waiting_00-UploadGameDeleting	正在删除……
Tpb_Waiting-T_Waiting_00-InternetConnecting	正在连接……
Tpb_Waiting-T_Waiting_00-AuthorCodeSearching	正在搜索程序员……
Tpb_Waiting-T_Waiting_00-GameCodeSearching	正在搜索游戏……
Tpb_Waiting-T_Waiting_00-LocalSearching	正在搜索附近发布中的游戏……
Tpb_Waiting-T_Waiting_00-ReSearching	正在重新搜索……
Tpb_MyGameMenu-No_Game	无游戏
Tpb_MyGameMenu-No_Game_Favorite	尚未收藏游戏
Tpb_InternetGameMenu-L_BtnCntMenu-L_Cnt_00-T_Download	已拥有
Tpb_GameInfo-Password_Edit	设置
Tpb_GameInfo-Password_Reset	重置
Tpb_UgcReportConfirm-L_BtnOk-T_Text	举报
Tpb_UgcReportConfirm-T_LabelKind	举报类型
Tpb_UgcReportConfirm-T_LabelReason	举报原因
Tpb_MethodSelect-L_BtnShareList-T_Title	已发布的游戏
Tpb_MyGameMenu-T_LabelSlot	游戏数量
Tpb_MyGameMenu-T_NumSlot	{[fa01|000000cd]}/{[fa01|010000cd]}
Tpb_UploadGameSelect-T_NoItem_00	尚无任何游戏
Tpb_UgcReportConfirm-T_LabelThumbnail	要举报的画面
Tpb_GameInfo-L_GameCard-T_ArrangeStr	改编作品
Tpb_GameInfo-L_GameCard-L_BtnShare-T_Text	分享至SNS
Tpb_GameInfo-L_GameCard-L_BtnEnd-T_Text	结束
Tpb_GameInfo-L_BtnUgcReport-T_Text	举报
Tpb_MyGameMenuOption-T_ArrangeLabel	改编作品
Tpb_MyGameMenuOption-T_GameIDLabel	游戏ID
Tpb_MyGameMenuOption-T_AuthorLabel	程序员
Tpb_MyGameMenuOption-T_AuthorIDLabel	程序员ID
Tpb_GameInfo-L_Password-T_Password_00	密码
Tpb_GameInfo-Password_Non	无
Tpb_GameInfo-L_GameCard-L_BtnAuthorID-T_Text	进入游戏一览
Tpb_GameInfo-L_BtnShare-T_Text	分享至SNS
Tpb_GameInfo-L_BtnDownload-T_Text	下载
Tpb_GameInfo-L_BtnDelete-T_Text	删除
Tpb_GameInfo-L_Loading-T_text_00	正在发布……
Tpb_GameInfo-Download_Num	{[fa00|000000cd]}人正在下载……
Tpb_GameInfo-Download_Waiting	正在等待他人下载……
Tpb_Waiting-L_Indicator_00-T_Finish_00-CompleteUploading	已发布
Tpb_Waiting-L_Indicator_00-T_Finish_00-CompleteDownloading	已下载
Tpb_Waiting-L_Indicator_00-T_Finish_00-CompleteLocalDownloading	已下载
Tpb_Waiting-L_Indicator_00-T_Finish_00-CompleteUploadGameDeleting	已删除
Tpb_TopMenu-T_c	© Nintendo
NodeChat.msbt
ConstantNode	坚持不懈地做下去！\n这才是重中之重！
StickTiltedNode	转呀转——\n尽情揉搓摇杆吧。
ButtonPressedNode	请指教！\n{[0201]}！\n打起精神来吧！
IsTouchNode	怎么了？\n如果觉得累了，\n可以摸摸我哦。
TouchPositionNode	{[0201]}，\n记住，编程之际要沉着冷静。
IntegratedSurfaceUpwardNode	如果不知如何是好，\n总之就先做起来试试！
IntegratedAxisAngleNode	呵……\n如果编程编累了，\n做个瑜伽放松一下如何？
IntegratedSwingedNode	嘿呀～～！
IntegratedRotationSpeedNode	既然在本程序中叫出该小节点\n会形成上述机制，那么若在此之前\n先将那个机制……嗯嗯……
OnStartNode	要开始喽！
PlzObjBreakCountNode	是你啊，{[0201]}！\n编程的进展如何！？
FoundIrMarkerNode	呵，{[0201]}……\n有活儿了吗？\n我可不便宜啊。
CalculationNode	高性能的我一旦出马，\n高品质游戏水到渠成。
ComparisonNode	真想知道……\n{[0201]}会做出怎样的游戏！
AndNode	没问题没问题！{[0201]}，\n认真检查也是非常重要的！
NotNode	好期待快点玩到\n你做的游戏啊……才怪！
AtanNode	我对角度以外的东西不感兴趣，\n你就不能在游戏里多加点角度元素吗？
TrigonometricNode	我……有点令人费解是吧。\n对不起……\n要是我能变得更加通俗易懂就好了。
AngleDistanceNode	承蒙惠顾！\n今后若需计算角度，\n也请交由我们专业人士负责！
IntegerRandomNode	这程序堪称鬼斧神工啊～～！\n尽管我不知道它是个什么程序～！
MappingNode	呵呵呵呵～！你究竟～\n想用这程序达到什么目的呢～？
QuantizationNode	{[0201]}，\n这游戏真棒，\n正合我胃口，五星好评。
TriggerNode	……\n我在集中精神……不要和我说话。
SquareRootNode	唔……\n总感觉心里有点什么事～
AbsoluteValueNode	耶！\n难得有机会编编程序～！\n积极乐观地上吧！
NegationNode	准备反转！\n向右转！
FlagNode	呼噜……
TpbCounterNode	若遭遇挫折，\n请反复尝试。
WireWarpInNode	这里是入口！\n{[0201]}结束休息，\n已然回归。请讲。
WireWarpOutNode	这里是出口！\n据观察，{[0201]}的编程活动\n正在按部就班进行。请讲。
CommentNode	距离完成\n　用时长短\n　　由你做主。
TimerNode	唔……\n休息固然无妨，\n然而时间也在飞速流逝。
SpoitNode	尊敬的客户，请务必使用\n本公司出品的标示。
TpbPlaySoundNode	{[0201]}～～～～\n加油啊～～♪
TpbPlayBgmNode	耶！\n编程造就游戏，\n你就是游戏世界的王者。
VibrateNode	我的天啊～～～♪\n不、不慌不忙～～♪\n稳、稳、稳步推进吧～～♪
PlzGravityNode	我想让这款游戏～\n变得更轻盈～
PlzPlaySpeedNode	你竟知晓构建自然法则的秘术……\n并能够驱使掌管时空的神明……\n呵，让我们共创永恒的未来吧。
PlzResetNode	……呵，\n若实在不行，不妨推倒重来。
PlzExitNode	虽然想永远留在游戏世界当中……\n但也终究要回到现实世界才行。
PlzChangeFileNode	呼……休息好了吗……？\n切换心情是很重要的……
GaugeNode	你好，{[0201]}，\n请指示。
Move2dNode	{[0201]}！\n让我们不断发起新的挑战吧！
AlwaysOnNode	……你好，\n那个……\n你是{[0201]}吧？
EmitIrLedNode	你有事吗？\n看什么看？\n我是你能随便看的吗？
PlzHumanNode	嗨！\n{[0201]}，\n你看起来状态不错啊！
PlzCarNode	滴滴叭叭呜～\n今天这车怎么开好呢？
PlzUfoNode	总觉得～这款游戏～～\n有点神作的意思啊～
PlzRigidNode	……你好。\n疲劳之时休息也很重要。
PlzFancyRigidNode	{[0201]}做的游戏……\n真让我迫不及待♥
PlzCommentRigidNode	就用语言的力量，\n把你想通过游戏表达的一切……\n传遍世界吧。
PlzScoreRigidNode	你回来了，{[0201]}。\n接下来也继续加油！
PlzTextureNode	你独一无二的作品，\n令我望眼欲穿。
PlzIntegratedEffectNode	来来来～！\n看我让{[0201]}的游戏\n热火朝天嗨起来～～
PlzJointSingleAxisSliderNode	{[0201]}……！\n在编程完成之前，\n我绝对不会离开！
PlzJointSliderNode	这么快就回来了～？\n我这还没歇够呢～
PlzJointHingeNode	哈啰！\n骨碌骨碌～让我们尽情旋舞吧～！
PlzRopeNode	呵呵呵呵呵……\n请永远爱惜……\n自己做的游戏哦～
PlzTouchSensorNode	噫！\n……是{[0201]}啊，\n请别吓我行不行～
PlzBrokenSensorNode	是！\n在{[0201]}离开的这段时间，\n我一直在认真守护着游戏！
PlzBreakSensorNode	还不够……差得远呢！\n我想看到更华丽的毁灭瞬间！
PlzGrabSensorNode	……谁在抓我？\n呀！被抓住了！
PlzPositionSensorNode	辛苦了！\n观察位置的工作包在我身上！
PlzSpeedSensorNode	{[0201]}！\n快做游戏嘛！
PlzAccelerationSensorNode	拖泥带水没有任何意义！\n重要的是爆发力！是灵感的闪光！
PlzAngleSensorNode	注意挺胸抬头。\n正确的姿势让编程事半功倍。
PlzRotationSensorNode	轴不能偏……\n无论是编程还是华丽的旋转，\n轴心稳定都至关重要。
PlzMoveRigidNode	如何？热身做到位了吗？\n运动前的拉伸非常重要哦！
PlzRotateRigidNode	嚯嚯嚯……\n我由衷期待\n优雅游戏的诞生哦！
PlzStretchRigidNode	想让游戏更好玩？\n包在我身上！\n我会让一切充满乐趣！
PlzPullForceNode	{[0201]}！\n让我们合力完成这款游戏吧！
PlzGeneratorFewNode	哟哟～\n感觉不错啊～～
PlzGeneratorNode	只要你我齐心协力～～\n任何游戏都做得出来～～！
PlzGeneratorManyNode	好啊～～！！！\n我要尽情发射喽～～！！！！
PlzBindCommanderNode	呵呵呵……\n既然你这么说，我要开始破坏喽……
PlzObjWarpEnterNode	呜呼……\n欲成游戏，\n活用吾力。
PlzObjWarpExitNode	呜呼。\n既已唤我前来，\n完成指日可待。
PlzEasyCamera	{[0201]}～～\n你的企划堪称完美～！\n拍摄就包在我身上！
PlzTpsCamera	……照相机的事你尽管放心。
PlzCameraPositionNode	我是决定照相机位置的负责人！\n我会为你拍摄至美的景色！
PlzCameraLookAtNode	东看西看～～～\n值得关注的情景无处不在……
PlzCameraDirectionNode	{[0201]}！\n看这边！这边这边！！
PlzCameraViewAngleNode	视角一变则印象迥异……\n这就是推理小说的感觉……
PlzFieldConfigNode	……任何时候\n都不要背弃自己的信念。
PlzHeadNode	唔……要如何实现你的游戏理念……\n真让人头疼。
PlzHandNode	{[0201]}！\n如果你需要帮助，\n我会全力以赴！
PuzzleName.msbt
ButtonAndHuman	让人跳跃起来
StickAndHuman	用摇杆让人移动起来
EasyCamera	游戏画面小节点拍摄的地方
Attribute	物体的状态
Attribute01	看不见的物体
Shoot	疯狂的发射物体小节点
MovableRigid	让移动物体移动起来
Calc	用计算导出结果
Counter	计数的数值
Compare	比较结果
Warp	传送方法
UFO	UFO！拜托你了！
Joint	塑造形状的连接
DetailAttribute	防止人被破坏
Not	用NOT小节点叫停！
And	AND的意思
Hinge	制作斜坡
Slider	刚刚好的范围
Flag	起床了！旗标小节点！
Punch	为拳头注入力量
Position	你的位置
Camera	照相机小节点拍摄的地方
FreeJoint00	自由操纵物体
FreeJoint01	承受重力的自由
TriplePunch	3拳破坏
TriplePunch01	平面的耐久度
Car	加速与倒车
FancyLabel	分辨的方法
WinOrLose	判定胜负
Start	禁止抢跑
AutoDrive	制作自动驾驶程序
RopeWalk	走钢丝
HangedApple	悬空的苹果
LightInDark	点亮漆黑
Command	秘密的隐藏指令
PinBall	制作弹珠台
Or	避开双面夹击！
NotInt	NOT的含义
AndInt	AND的含义
MultiWire	受欢迎的端口
SignConvert	是＋还是－
AutoDoor	芝麻开门！
Material	材料决定成败
JointAxis	戳戳看！
ConnectDir	哪只手是右手？
RandomBox	概率0.1%
AntiGravityApple	让苹果掉下去
Replusion	斥力
RotateXYZ	如何旋转？
TeamCamera	照相机小队
WarpShield	完成亚空间反转护盾！
MoveTouchPos	走向点触位置！
AutoBind	嵌进去！
Passcode	解析密码
OverSpeed_01	胆大心细
HatenaBox	？方块
UfoCatcher	UFO！抓稳了！
PhaseShift	错开时机
LinkedGear	左右一起骨碌骨碌
AnalogClock	下午茶
FreeJoint_Ex	配送苹果
StepGenerator	高墙对面
ShootCursor	瞄准射击！
ScreenEdge	画面边缘的亚空间
Invisible	挖掘苹果
Kedamaru	来吧！毛球！
KickBall	瞄准射门！
DoubleControl	我是右，你是下
BecomeSmall	变小！
ChargePunch	蓄力挥拳！
Fireworks	烟花庆典
MushButton	10秒试炼
PhantomApple	幻影苹果
GhostWarp	鬼屋
Logic	AND与NOT的迷宫
BadMaze	解开谜题的阻碍是思维定式
GimmickSlope	机关重重
TimerBridge_00	架桥
TimerBridge_01	架桥：困难模式
IntroAgain	去拿苹果！
PuzzleClear	谜题的真相
Puzzle_Camera.msbt
000	关于这个问题，\n我有一点点补充说明。
001	请前往程序画面。
002	在这个问题中可以切换视角。
003	合理切换视角并解开谜题吧。
Puzzle_Common.msbt
Hint000	你似乎遇到难题了。
Hint001	你是否愿意暂时停止解谜，\n复习一下小节点指南？
Hint002	是
Hint003	否
Hint004	那么请前往小节点指南。
Hint005	你想尽量靠自己的力量解开谜题……\n这份毅力十分可贵。
Hint006	任何时候都可以按下暂停，\n去复习小节点指南。
Hint007	只要你愿意，\n欢迎随时查阅小节点指南哦。
Puzzle_Intro.msbt
000	{[0201]}，\n欢迎挑战{color[0400]}{[0001|1b00]}谜题{[0001|ffff]}{color[ffff]}。
001	在这里……\n将通过谜题测试你有没有\n透彻理解小节点车库的基本。
002	当这个人{[0001|1b00]}{color[0400]}获得苹果{color[ffff]}{[0001|ffff]}即宣告解开谜题。
003	那么，该怎么做\n才能获得苹果呢？
004	如果就这样维持现状，\n无论过多久也无法使人移动，\n更不用说获得苹果。
005	因此为了让人能获得苹果……
006	你需要亲手实施{color[0400]}{[0001|1b00]}编程{[0001|ffff]}{color[ffff]}。
007	来，前往{[0001|1b00]}{color[0400]}程序画面{color[ffff]}{[0001|ffff]}。
008	不过，在尝试解开谜题之际，\n编程的操作并非毫无限制。
009	在这个问题当中，\n只能{[0001|1b00]}{color[0400]}连接按键小节点{color[ffff]}{[0001|ffff]}与{[0001|1b00]}{color[0400]}人小节点{color[ffff]}{[0001|ffff]}。
010	那么，该怎么做\n才能让人获得苹果呢？
011	如果编程完成了，\n就进入{color[0400]}{[0001|1b00]}游戏画面{[0001|ffff]}{color[ffff]}进行确认吧。
012	如果没有成功，\n可以返回程序画面重新编程。
013	要说的就这些。\n接下来请加油吧！
Puzzle_MovableRigid.msbt
Puzzle_MoveTouchPos.msbt
000	关于该问题有一点补充说明。
001	请点触画面。
002	橙色圆柱体\n会移动到{color[0400]}{[0001|1b00]}所点触的位置{[0001|ffff]}{color[ffff]}。
003	请按下摇杆调出陀螺仪指针……\n再按下键。
004	橙色圆柱体\n会移动到{color[0400]}{[0001|1b00]}陀螺仪指针的位置{[0001|ffff]}{color[ffff]}。
005	请按下摇杆调出陀螺仪指针……\n再按下键。
006	橙色圆柱体\n会移动到{color[0400]}{[0001|1b00]}陀螺仪指针的位置{[0001|ffff]}{color[ffff]}。
007	请用鼠标点击任意位置。
008	橙色圆柱体\n会移动到{color[0400]}{[0001|1b00]}所点击的位置{[0001|ffff]}{color[ffff]}。
009	请按下摇杆调出陀螺仪指针……\n再按下键。
010	橙色圆柱体\n会移动到{color[0400]}{[0001|1b00]}陀螺仪指针的位置{[0001|ffff]}{color[ffff]}。
011	画面中的人……\n正在一个劲往右上方向移动。
012	想办法实现对人的灵活操作，\n并解开谜题吧。
Puzzle_StickAndHuman.msbt
000000	为了帮你加深印象，\n容我再次说明{color[0400]}{[0001|1b00]}谜题{[0001|ffff]}{color[ffff]}内容。
000	{color[0400]}{[0001|1b00]}当人获得苹果{[0001|ffff]}{color[ffff]}即宣告解开谜题。
001	为此需要在程序画面中实施{color[0400]}{[0001|1b00]}编程{[0001|ffff]}{color[ffff]}。
001-01	不过，{color[0400]}{[0001|1b00]}编程{[0001|ffff]}{color[ffff]}的操作并非毫无限制。
002	在这个问题当中，\n只允许对连接在{color[0400]}{[0001|1b00]}摇杆小节点\n{[0001|ffff]}{color[ffff]}与{color[0400]}{[0001|1b00]}人小节点{[0001|ffff]}{color[ffff]}之间的线加以更改。
002-01	注意观察小节点头上冒出的{color[0400]}{[0001|1b00]}气泡{[0001|ffff]}{color[ffff]}，\n即可大致了解哪些地方可以更改。
003	谜题共有5道……\n加油解开全部谜题吧。
Sequence_CourseFinish.msbt
000	恭喜你完成了\n附带导航的课堂～～～～～！！！！！
001	至此，教学终于全部结束！
002	辛苦你了！
002-01	{[0201]}，\n现在你拥有了\n独立编程制作游戏的能力。
003	不过，{[0201]}，\n这并不是终点！
004	而是{color[0400]}{[0001|1b00]}程序员{[0001|ffff]}{color[ffff]}生涯的第一步！
005	今后你要以{color[0400]}{[0001|1b00]}程序员{[0001|ffff]}{color[ffff]}的身份\n用自己的力量编程打造属于自己的游戏。
006	若将游戏编程喻为千里之行，\n{[0201]}无疑才刚刚上路。
007	我迫不及待地想看到\n{[0201]}编程制作的游戏！
008	来！\n让我们开始游戏编程吧！
Sequence_Intro_Course_00.msbt
000	在附带导航的课堂中，\n我们一共要制作7款游戏！
001	第1课是简单的双人对战游戏……\n{[0001|1b00]}{color[0400]}二人对战！捉迷藏大战{color[ffff]}{[0001|ffff]}！
002	第2课要制作的是充分利用\nNintendo Switch功能的{[0001|1b00]}{color[0400]}滚滚球{color[ffff]}{[0001|ffff]}……
003	第3课要制作的是画面会自动滚动的\n射击游戏——{[0001|1b00]}{color[0400]}ALIEN SHOOTING{color[ffff]}{[0001|ffff]}！
004	第4课是要制作的是\n借助跳跃与拳击向终点进发的\n{[0001|1b00]}{color[0400]}GO！GO！运动竞技{color[ffff]}{[0001|ffff]}。
005	第5课的内容是3D解谜游戏——\n{[0001|1b00]}{color[0400]}解谜房间{color[ffff]}{[0001|ffff]}！
006	第6课要制作的是\n与自动驾驶的汽车竞速的游戏——\n如火如荼的{[0001|1b00]}{color[0400]}刺激赛车{color[ffff]}{[0001|ffff]}～
007	而在最后的第7课中，\n目标是制作3D动作游戏——\n{[0001|1b00]}{color[0400]}3D运动竞技空间{color[ffff]}{[0001|ffff]}！
008	在编程制作这些\n不同类型的游戏的过程中……
009	让{[0201]}掌握\n独立进行游戏编程的能力！
010	那么……\n我将在第1课中静候你的到来。
011	请务必光临哦～
012	我是鲍伯！\n让我们稍后再会！
100	……等一下，\n{[0201]}。
101	你好，初次见面，\n我的名字是{[0001|1b00]}{color[0400]}爱丽丝{color[ffff]}{[0001|ffff]}。
102	刚才那个小不点是{[0001|1b00]}{color[0400]}鲍伯{color[ffff]}{[0001|ffff]}，\n我是{[0001|1b00]}{color[0400]}爱丽丝{color[ffff]}{[0001|ffff]}……
103	请记住我们哦。
104	{[0201]}……\n你刚才虽然让尚未完成的游戏\n运作了起来……
105	但应该还不理解它运作的原理吧？
106	嗯，毕竟是初来乍到，\n也不能要求过高。
107	不过……{[0001|1b00]}{color[0400]}理解原理\n{color[ffff]}{[0001|ffff]}是独立制作游戏的重中之重。
108	我们为此准备了{[0001|1b00]}{color[0400]}小测验{color[ffff]}{[0001|ffff]}……
109	请在进入第1课之前\n先来参加{[0001|1b00]}{color[0400]}小测验{color[ffff]}{[0001|ffff]}吧。
110	我在那里等你哦。
Sequence_Intro_Puzzle_00.msbt
000	你来了……\n{[0201]}。
001	还记得我吗，我是{[0001|1b00]}{color[0400]}爱丽丝{color[ffff]}{[0001|ffff]}。
001-01	这里是{color[0400]}{[0001|1b00]}小测验{[0001|ffff]}{color[ffff]}的现场。
002	为确认你对编程{color[0400]}{[0001|1b00]}理解与否{[0001|ffff]}{color[ffff]}，\n我想请你在这里破解{color[0400]}{[0001|1b00]}谜题{[0001|ffff]}{color[ffff]}。
003	……话虽如此，\n在你毫无准备的情况下\n抛给你解谜的任务未免强人所难……
Sequence_Intro_Puzzle_01.msbt
000	我们为你准备了\n{[0001|1b00]}{color[0400]}小节点指南{color[ffff]}{[0001|ffff]}。
000-01	可以在{[0001|1b00]}{color[0400]}小节点指南{color[ffff]}{[0001|ffff]}中\n找到使用小节点实施编程的具体说明。
001	按下这个按键\n打开{color[0400]}{[0001|1b00]}小节点指南一览{[0001|ffff]}{color[ffff]}。
002	先阅读一下这个小节点指南，\n了解{[0001|1b00]}{color[0400]}小节点车库的基本{color[ffff]}{[0001|ffff]}吧。
Sequence_Intro_Puzzle_02.msbt
000000	你是否已经完全掌握了\n{color[0400]}{[0001|1b00]}小节点车库的基本{[0001|ffff]}{color[ffff]}？
000	那就请按下键\n关闭小节点指南一览……
001	下面……我将通过{[0001|1b00]}{color[0400]}谜题{color[ffff]}{[0001|ffff]}\n检查你有没有真正掌握\n{[0001|1b00]}{color[0400]}小节点车库的基本{color[ffff]}{[0001|ffff]}。
003	请从这里\n挑战解开{[0001|1b00]}{color[0400]}谜题{color[ffff]}{[0001|ffff]}。
Sequence_Intro_Puzzle_03.msbt
000	了不起，\n你的确完全掌握了\n小节点车库的基本。
001	今后我还会像这样\n利用课间时间……
002	通过{[0001|1b00]}{color[0400]}小测验{color[ffff]}{[0001|ffff]}检查你是否完全掌握了\n{[0001|1b00]}{color[0400]}小节点车库{color[ffff]}{[0001|ffff]}及{[0001|1b00]}{color[0400]}小节点{color[ffff]}{[0001|ffff]}们的知识。
003	今后{[0001|1b00]}{color[0400]}小节点指南{color[ffff]}{[0001|ffff]}的内容\n也将逐渐变得更加丰富……
004	如果有不明白或想知道的内容，\n可以尝试翻阅{[0001|1b00]}{color[0400]}小节点指南{color[ffff]}{[0001|ffff]}哦。
005	那就请放心大胆地进入{[0001|1b00]}{color[0400]}第1课{color[ffff]}{[0001|ffff]}吧。
Sequence_LessonFinish_01.msbt
000	恭喜你！\n二人对战！捉迷藏大战……{[0001|1b00]}{color[0400]}开发完成{color[ffff]}{[0001|ffff]}～！！
001	{[0001|1b00]}{color[0400]}开发完成{color[ffff]}{[0001|ffff]}意味着……\n游戏正式制作完成！！！
002	这是我们开发完成的首款游戏……\n其纪念意义不言而喻，\n这就把它加入{[0001|1b00]}{color[0400]}游戏一览{color[ffff]}{[0001|ffff]}当中吧～！
Sequence_LessonFinish_02.msbt
000	恭喜你！\n滚滚球{color[0400]}{[0001|1b00]}开发完成{[0001|ffff]}{color[ffff]}～！
000-01	第2款游戏这么快就开发完成了！\n我们的课堂教学一帆风顺～！
001	那就将这款滚滚球\n加入游戏一览当中吧！
Sequence_LessonFinish_03.msbt
000	恭喜你！\nALIEN SHOOTING\n也已顺利{color[0400]}{[0001|1b00]}开发完成{[0001|ffff]}{color[ffff]}～
001	你是不是也逐渐开始\n找到编程的感觉了呢？
002	万变不离其宗！总之一定要\n尝试制作各种不同的游戏！
003	那么，{[0201]}，\n把第3款游戏也加入游戏一览当中吧～
Sequence_LessonFinish_04.msbt
000	恭喜你！\nGO！GO！运动竞技\n{color[0400]}{[0001|1b00]}开发完成{[0001|ffff]}{color[ffff]}～～！！
001	至此，附带导航的课堂\n进度也已如期过半！
002	{[0201]}的成长\n完全超乎我的想象，\n真令人惊喜不已！
003	在课堂的后半程，\n还请再接再厉～！
004	那么，就将GO！GO！运动竞技\n加入游戏一览当中吧。
Sequence_LessonFinish_05.msbt
000	解谜房间顺利{color[0400]}{[0001|1b00]}开发完成{[0001|ffff]}{color[ffff]}！
001	尽管这一课难度较高，\n但你还是成功坚持到了最后！
002	{[0201]}的成长……\n令我难以置信！
003	那就将完成的游戏\n加入游戏一览当中吧～！
Sequence_LessonFinish_06.msbt
000	刺激赛车{color[0400]}{[0001|1b00]}开发完成{[0001|ffff]}{color[ffff]}，\n可喜～可贺啊～～～！！
001	你竟能紧跟我的步伐坚持到现在……\n真了不起！
003	如我所料，\n{[0201]}的确拥有编程的天赋！
004	那么！\n将完成的作品\n加入游戏一览当中吧！
Sequence_LessonFinish_07.msbt
000	恭喜你，{[0201]}！\n你的游戏开发完成了～～～～！！！！
000-01	恭喜你，{[0201]}！\n你的游戏开发完成了～～～～！！！！
001	{[0201]}终于能够\n独立编程制作游戏了。
002	{[0201]}，\n真了不起！
003	那就让我们将这款\n真正由{[0201]}编程制作的游戏……
004	加入游戏一览当中吧！
Sequence_LessonReFinish.msbt
000	那么！\n让我们把它加入游戏一览当中～
Sequence_MyGameRe.msbt
Lesson01	要覆盖之前制作的\n{[0001|1b00]}{color[0400]}二人对战！捉迷藏大战{color[ffff]}{[0001|ffff]}吗？
Lesson02	要覆盖之前制作的\n{[0001|1b00]}{color[0400]}滚滚球{color[ffff]}{[0001|ffff]}吗？
Lesson03	要覆盖之前制作的\n{[0001|1b00]}{color[0400]}ALIEN SHOOTING{color[ffff]}{[0001|ffff]}吗？
Lesson04	要覆盖之前制作的\n{[0001|1b00]}{color[0400]}GO！GO！运动竞技{color[ffff]}{[0001|ffff]}吗？
Lesson05	要覆盖之前制作的\n{[0001|1b00]}{color[0400]}解谜房间{color[ffff]}{[0001|ffff]}吗？
Lesson06	要覆盖之前制作的\n{[0001|1b00]}{color[0400]}刺激赛车{color[ffff]}{[0001|ffff]}吗？
001	是
002	否
003	那么我会用新制作的游戏\n覆盖原来的游戏～！
004	明白了！\n那么我会保留之前制作的游戏！
005	这就是你新制作的游戏，\n请务必体验一番！
Sequence_MyGameRe_07.msbt
000	要覆盖{[0201]}\n之前在第7课中制作的游戏吗？
001	是
002	否
003	明白了！\n那么我会用新的游戏\n覆盖原来的游戏！
004	为这款新游戏取个名字吧。
005	请按下键打开{color[0400]}{[0001|1b00]}选项{[0001|ffff]}{color[ffff]}！
006	然后选择{color[0400]}{[0001|1b00]}添加游戏标题{[0001|ffff]}{color[ffff]}，\n为游戏命名吧！
007	确定要使用这个标题吗？
008	是
009	否
010	那么，请按下键\n关闭当前画面。
011	那就请再次选择{color[0400]}{[0001|1b00]}添加游戏标题{[0001|ffff]}{color[ffff]}，\n为游戏命名吧！
012	不愧是起名专家。
013	没错～！\n一看就是{[0201]}的手笔！
014	别忘了请大家玩玩这款新游戏哦～
015	还是想保留之前制作的游戏吧？\n我也有同感。
016	既然如此，请务必在选项中\n选择“复制”进行备份！
017	然后就可以放心大胆地覆盖了！
018	只要再次来到第7课的第7步……
019	就能找到刚才制作的游戏了！
020	如果觉得可以覆盖了，\n就到第7课的第7步来找我吧。
021	随时静候你的到来～！
Sequence_MyGame_01.msbt
000	这就是{[0201]}编程制作的游戏！
001	这样一来，\n我们就能随时玩到\n{[0201]}的游戏了！
002	啊……你一定想知道\n这里是什么地方对吧？
003	这里是{[0001|1b00]}{color[0400]}自由编程{color[ffff]}{[0001|ffff]}的\n{[0001|1b00]}{color[0400]}游戏一览画面{color[ffff]}{[0001|ffff]}！
004	用一句话说，\n就是{[0201]}{[0001|1b00]}{color[0400]}制作的游戏的陈列室{color[ffff]}{[0001|ffff]}。
005	而且～\n说到{[0001|1b00]}{color[0400]}自由编程{color[ffff]}{[0001|ffff]}，顾名思义……
006	只要按下这个按键，\n我们即可{[0001|1b00]}{color[0400]}从零开始编程{color[ffff]}{[0001|ffff]}制作游戏。
007	不过，{[0201]}\n毕竟刚开始接触编程……
008	所以有可能遭遇挫折，\n但即便如此也请不要灰心哦。
009	如今，充满纪念意义的\n首款游戏已经可以游玩了……
010	请务必和身边的亲朋好友\n一起玩玩看！
011	尽情游玩之后，就请按照计划\n进入{[0001|1b00]}{color[0400]}附带导航的课堂第2课{color[ffff]}{[0001|ffff]}！
012	那么，让我们在下一堂课再会～
Sequence_MyGame_02.msbt
000	已将{[0001|1b00]}{color[0400]}滚滚球{color[ffff]}{[0001|ffff]}加入游戏一览当中了。
001	这是一款充分利用了\nNintendo Switch功能的游戏……
002	请务必分享给身边的亲朋好友游玩，\n并请他们谈谈感想！
003	对游戏编程而言，\n倾听玩家反馈也是不可或缺的一环！
004	那么，我会在第3课\n静候你的到来……
005	请一定不要缺席哦～
Sequence_MyGame_03.msbt
000	在ALIEN SHOOTING中，\n不仅可以进行得分的比拼……
001	更可以欣赏到\n{[0201]}亲手绘制的画作\n在游戏画面中的活跃表现！
002	因此请务必分享给\n身边的亲朋好友游玩哦！
003	大家一定会乐在其中的！
004	上完下一堂课，\n整个附带导航的课堂进度也将过半！
005	那么，让我们第4课再会～
100	{[0201]}，\n等一下。
101	{[0201]}，\n我想告诉你一件事。
102	你可曾想过……\n{[0001|1b00]}{color[0400]}改造{color[ffff]}{[0001|ffff]}自己在课堂上制作的游戏？
103	只要使用{color[0400]}{[0001|1b00]}键{[0001|ffff]}{color[ffff]}打开{color[0400]}{[0001|1b00]}选项{[0001|ffff]}{color[ffff]}……
104	选择“{color[0400]}{[0001|1b00]}复制{[0001|ffff]}{color[ffff]}”即可{color[0400]}{[0001|1b00]}复制游戏{[0001|ffff]}{color[ffff]}。
106	可以对复制后的游戏\n加以自由改造，\n不妨挑战一下哦。
107	好了，接下来请自由行动吧。
Sequence_MyGame_04.msbt
000	由{[0201]}编程制作的游戏\n也越来越多了～
001	时隔多日再次游玩自己过去的作品，\n一定可以体会到新的乐趣！
002	也请将这次制作的动作游戏\n分享给身边的亲朋好友游玩哦！
003	我会在第5课静候你的到来！
Sequence_MyGame_05.msbt
000	这次制作的解谜房间……\n它的乐趣就在于分享给他人游玩！
001	因此请务必让身边的\n亲朋好友玩玩看哦～
002	真想赶快看到……\n他们在找到你所制作的宝藏时\n会有怎样的反应！
003	那么，我会在第6课静候你的到来！
004	附带导航的课堂内容也已所剩无几！\n还请跟上我的步伐学习到最后～！
Sequence_MyGame_06.msbt
000	请一定要让身边的亲朋好友\n也玩玩看这款刺激赛车哦！
001	当然……关于秘技还请保密。
002	好！\n下次就将迎来最后一课了！
003	在最后一课中，\n也请跟随我的导航指引，\n将游戏编程进行到底～
004	我先走一步，\n在第7课静候你的到来……
005	请在尽情体验刺激赛车之后，\n到第7课找我吧！
Sequence_MyGame_07.msbt
000	{[0201]}！\n这就是你制作的游戏！
001	机会难得，\n就由{[0201]}\n为这款游戏添加{color[0400]}{[0001|1b00]}标题{[0001|ffff]}{color[ffff]}吧。
002	好主意！
003	请按下{color[0400]}{[0001|1b00]}键{[0001|ffff]}{color[ffff]}打开选项。
004	然后选择{color[0400]}{[0001|1b00]}添加游戏标题{[0001|ffff]}{color[ffff]}，\n为你的游戏命名吧！
005	确定要使用这个标题吗？
yes	是
no	否
006	那么请按下键关闭当前画面！
006b	那就请再次选择{color[0400]}{[0001|1b00]}添加游戏标题{[0001|ffff]}{color[ffff]}，\n为你的游戏命名！
007	嗯！\n这个标题很有{[0201]}的风格。
008	好厉害！\n标题完美地概括了游戏内容！
009	那么，请务必将这款\n{[0201]}独立制作的游戏……
010	分享给身边的亲朋好友游玩，\n并请他们谈谈感想！
011	对游戏编程而言，\n倾听玩家反馈也是不可或缺的一环。
012	我们会在附带导航的课堂\n静候你的到来。
013	请在尽情体验自己的作品之后光临哦。
014	那么稍后再会！
Sequence_PuzzleFinish_01.msbt
000	嗯，看来你已经逐渐\n对小节点们有所认识了。
001	要想通过小节点车库\n实施游戏编程……
002	深入理解小节点们的知识\n十分重要。
004	小节点……是一种生活在\nNintendo Switch中的神奇生物。
006	小节点车库是\n可以与他们直接接触\n并实施编程的工具。
008	通过{[0001|1b00]}{color[0400]}小节点指南{color[ffff]}{[0001|ffff]}以及{color[0400]}{[0001|1b00]}谜题\n{[0001|ffff]}{color[ffff]}加深对小节点们的理解吧。
010	那么下次再会。
Sequence_PuzzleFinish_02.msbt
000	很好很好，\n看来你已经充分地理解了。
001	停下脚步思考，\n准确把握现状，\n是编程的重中之重。
004	{[0201]}，\n请在参考小节点指南与解开谜题的过程中，\n不断加深对小节点们的理解吧。
005	……那么，下次小测验再会。
Sequence_PuzzleFinish_03.msbt
000	{[0201]}，\n看来你已经对小节点车库\n有相当程度的了解了。
001	那么不妨挑战一下改造游戏吧。
002	一开始可能会遭遇失败，\n发生程序错误而无法正常运行……
003	但没关系，失败是成功之母，\n遇见程序错误是\n迈向正确理解的第一步。
004	尽管在失败中熟悉编程吧。
005	如果遇到不懂的问题，\n也可以参考{color[0400]}{[0001|1b00]}小节点指南{[0001|ffff]}{color[ffff]}。
006	那么，下次小测验再会。
Sequence_PuzzleFinish_04.msbt
000	了不起，\n{[0201]}。
001	你对小节点车库的认识\n已经愈发专业了。
002	只要这样坚持下去，\n我想，你能够独立编程的时刻终将到来……
005	{[0201]}，\n要不断积累编程的知识哦。
006	那么，下次小测验再会。
Sequence_PuzzleFinish_05.msbt
000	……干得漂亮。
001	竟能将这次的谜题也全部解开……
002	{[0201]}，\n你的成长……\n令我难以置信。
004	……
005	那么，下次小测验再会。
Sequence_PuzzleFinish_06.msbt
000	恭喜过关。
001	{[0201]}，\n你已经充分理解了\n小节点车库的知识。
002	如今你应该具备了\n独立编程制作游戏的能力。
003	……
004	……对了，\n{[0201]}。
005	下次就是鲍伯的最后一课了吧？
006	……我要不要也去听一次呢？
007	那么，最后一课再见。
Sequence_PuzzleFinish_07.msbt
000	……没想到，\n你竟然能解开所有谜题。
001	{[0201]}，\n你的编程能力深不可测。
004	如今你全身上下\n都流露出程序员的气质。
005	你的才华熠熠生辉，{[0201]}。
002	放手去做吧，{[0201]}。\n今后请继续善加利用这份能力，\n多多制作你独创的新游戏哦！
003	感谢你的一路陪伴！
Sequence_PuzzleStart_01.msbt
000	……你好。
001	第1课已经结束了吧？
002	……咦？\n难道你忘了还有小测验？
003	小测验将会通过谜题的形式……
004	确认你是否充分理解了小节点的知识……\n可不要忘记哦。
004-01	这次一共有5道谜题。
005	就从这道谜题开始挑战吧。
Sequence_PuzzleStart_02.msbt
000	你好，\n{[0201]}。
001	我们这次也将通过谜题……
002	确认你是否充分理解了\n小节点车库及小节点们的知识。
002-01	如果遇到解不开的谜题，\n不妨复习一下{color[0400]}{[0001|1b00]}小节点指南{[0001|ffff]}{color[ffff]}整理思路哦。
003	那么，\n请从感兴趣的谜题开始挑战吧。
Sequence_PuzzleStart_03.msbt
000	你来了，\n{[0201]}。
001	已经挑战过改造游戏了吗？
002	独立思考和勇敢尝试是编程的关键。
003	认真思考、反复尝试，\n努力解开这次的谜题吧。
Sequence_PuzzleStart_04.msbt
000	欢迎光临，\n{[0201]}。
001	小测验的进度也终于过半。
002	请集中精力挑战谜题吧。
Sequence_PuzzleStart_05.msbt
000	辛苦了，\n{[0201]}。
001	{[0201]}，\n这次制作的游戏\n是不是相当有难度？
001-01	……因此，我在小测验中\n也准备了较难的谜题。
002	如果能解开这些谜题，\n说明你的编程能力也有了长足进步。
003	这次也请加油。
Sequence_PuzzleStart_06.msbt
000	……你好，\n{[0201]}。
001	一路走来，在小测验中\n请{[0201]}挑战了\n形形色色的谜题……
002	……而这次小测验环节即将画上句号。
003	请全神贯注地……\n挑战最后的小测验吧。
Sequence_PuzzleStart_07.msbt
000	你好。
001	……没想到在课堂结束后\n还会遇到小测验是吗？
002	这里是为学完了每一课的你\n特别安排的小测验。
003	其中准备的复杂谜题\n恐怕连你这个毕业生也难以招架……
004	请务必鼓起勇气挑战看看。
007	那么，还请继续加油。
Sequence_Share_Download.msbt
00	{[0201]}，我就知道你会来。
01	在这里可以{color[0400]}{[0001|1b00]}获取{[0001|ffff]}{color[ffff]}你的朋友所制作的游戏。
02	选择这个选项，就可以获取\n{color[0400]}{[0001|1b00]}附近的朋友{[0001|ffff]}{color[ffff]}所发布的游戏……
03	如果你加入了Nintendo Switch Online，\n更可以通过这个选项\n获取朋友们发布在{color[0400]}{[0001|1b00]}互联网上{[0001|ffff]}{color[ffff]}的游戏。
04	要想从互联网上获取游戏，\n就请输入朋友告诉你的\n{color[0400]}{[0001|1b00]}游戏ID{[0001|ffff]}{color[ffff]}或者{color[0400]}{[0001|1b00]}程序员ID{[0001|ffff]}{color[ffff]}吧。
05	万一发现包含不正当内容的游戏，\n请通过{color[0400]}{[0001|1b00]}举报键{[0001|ffff]}{color[ffff]}进行举报。
06	回头见。
Sequence_Share_Manage.msbt
Sequence_Share_Report.msbt
Sequence_Share_Upload.msbt
00	{[0201]}，欢迎光临。
01	你可以在这里向朋友\n{color[0400]}{[0001|1b00]}发布自己制作的游戏{[0001|ffff]}{color[ffff]}。
02	选择这个选项，就可以\n向{color[0400]}{[0001|1b00]}附近的朋友{[0001|ffff]}{color[ffff]}发布自己制作的游戏……
03	如果你加入了Nintendo Switch Online，\n更可以通过这个选项\n在{color[0400]}{[0001|1b00]}互联网上{[0001|ffff]}{color[ffff]}发布你的游戏。
04	只要将发布时得到的{color[0400]}{[0001|1b00]}游戏ID{[0001|ffff]}{color[ffff]}告诉你的朋友，\n对方就能通过{color[0400]}{[0001|1b00]}游戏ID获取{[0001|ffff]}{color[ffff]}你的游戏了。
05	但在发布游戏之际，\n需要注意以下几点。
0501	啊，接下来的内容\n请{color[0400]}{[0001|1a00]}与监护人或成年人{[0001|ffff]}{color[ffff]}一起阅读哦。
0502	因为这些内容非常重要，\n请一定要理解透彻。
06	首先——
07	发布在互联网上的游戏\n将{color[0400]}{[0001|1b00]}向全世界{[0001|ffff]}{color[ffff]}公开{color[0400]}{[0001|1b00]}游戏标题与你的名字{[0001|ffff]}{color[ffff]}。
08	其次——
09	禁止发布包含{color[0400]}{[0001|1b00]}不正当内容{[0001|ffff]}{color[ffff]}的游戏。
10	例如，\n包含非法内容、个人信息、\n侵犯他人权利的内容……
11	发出强烈闪烁光线的内容、\n以及其他会使他人产生不适的内容……\n请不要公开这样的游戏哦。
12	第三——
13	上述包含不正当内容的游戏\n会因违反“Nintendo Account使用条款”而被{[0001|1b00]}{color[0400]}删除{color[ffff]}{[0001|ffff]}。
14	最后——
15	系统{[0001|1b00]}将会自动{color[0400]}删除{color[ffff]}{[0001|ffff]}长期{color[0400]}{[0001|1b00]}无人下载{[0001|ffff]}{color[ffff]}的{[0001|1b00]}游戏。{[0001|ffff]}
16	以上就是注意事项，\n明白了吗？
17	明白了
18	不明白
19	那么我会再次说明\n发布游戏时的注意事项。
20	好，这样就没问题了。
21	可在这里查看或删除已发布的游戏。
22	回头见。
StepName.msbt
Chase_00	让人移动起来吧！
Chase_01	制作平面和墙壁吧！
Chase_02	制作场地吧！
Chase_03	制作鬼吧！
Chase_04	让球体滚动吧！
Chase_05	制作自动重来的构造吧！
Chase_06	最后一步
BallRoll_00	制作俯瞰视角的游戏吧！
BallRoll_01	倾斜让球滚动吧！
BallRoll_02	制作场地吧！
BallRoll_03	来数苹果吧！
BallRoll_04	制作过关效果吧！
BallRoll_05	让它玩起来更顺手吧！
BallRoll_06	制作传送点吧！
BallRoll_07	最后一步
Shooting_00	用UFO出击吧！
Shooting_01	让UFO发射炮弹吧！
Shooting_02	制作场地吧！
Shooting_03	让游戏画面\n滚动起来吧！
Shooting_04	停止滚动吧！
Shooting_05	制作会旋转的障碍物吧！
Shooting_06	制作会旋转的敌人吧！
Shooting_07	制作终点吧！
Shooting_08	制作得分显示和\n“完美”的程序吧！
Shooting_09	游戏的最后一步！
2DAction_00	让游戏画面\n跟着人移动吧！
2DAction_01	制作敌人吧！
2DAction_02	让它掉落后会损坏吧！
2DAction_03	制作跷跷板的机关吧！
2DAction_04	制作可以推动的箱子吧！
2DAction_05	制作会移动的落脚点吧！
2DAction_06	让人拿起道具后\n就变得可以使出拳击！
2DAction_07	制作BOSS吧！
2DAction_08	制作终点吧！
2DAction_09	最后一步
SecretRoom_00	窥探解谜舞台的照相机
SecretRoom_01	藏有宝藏的房间
SecretRoom_02	隐藏门与可疑的物体
SecretRoom_03	破坏神秘木箱的方法
SecretRoom_04	被隐藏的暗号
SecretRoom_05	墙壁的装置与暗号的秘密
SecretRoom_06	会动的隐藏门
SecretRoom_07	嘎吱作响的齿轮
SecretRoom_08	被隐藏的宝藏
CarRace_00	让汽车跑起来吧！
CarRace_01	制作终点吧！
CarRace_02	判定胜负吧！
CarRace_03	制作赛道吧！
CarRace_04	来自动驾驶吧！
CarRace_05	3！2！1！GO！
CarRace_06	好狡猾哦？隐藏的传送点！
CarRace_07	最后一步
3DAction_00	让人移动起来吧！
3DAction_01	让它掉落后会损坏吧！
3DAction_02	最初的场地特殊机关！
3DAction_03	开关的场地特殊机关！
3DAction_04	制作敌人吧！
3DAction_05	制作终点吧！
3DAction_06	初次当程序员的第一步
