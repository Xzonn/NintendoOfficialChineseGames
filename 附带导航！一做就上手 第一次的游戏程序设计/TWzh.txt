Ending.msbt
000	那麼，請容我再次介紹\n程式設計中不可或缺的小節點們！
001-00	嗨！
001-01	轉轉～
002-00	哎呀！\n你的表情變得很有自信呢。
003-00	{[0201]}，\n我好想看看你製作的遊戲喔！
004-00	嗯……\n我很看好你喔。
005-00	跨出第一步\n　成為未知世界的\n　　一名創造者
006-00	從今以後也～～♪
006-01	請多多指教Yeah！
007-00	啊啊……\n{[0201]}好厲害啊……
008-00	之後也拜託你囉！
009-00	……嗨。\n之後也要麻煩你了。
010-00	接下來就輪到你上場了。\n用自己的雙手製作遊戲，\n盡情地畫出心中的圖案……
010-01	哎呀～～！恭喜你吶！\n{[0201]}！
011-01	哦～{[0201]}\n終於可以自由地發揮創意啦。
012-00	咿……！\n你不要嚇我啦……
013-00	來吧！\n我們一邊設計程式，\n一邊來做深蹲！
014-00	哦哦～\n{[0201]}！\n我們是一輩子的朋友喔！！
015-00	{[0201]}！\n你就是那顆明日之星！
016-00	……你做得不錯嘛。
017-00	你完成了一件大事呢……
Inter00	接下來要介紹\n沒有出現在課堂上的小節點們。
018-00	嘿呀～～！
019-00	YO！{[0201]}！\n交給我們吧！
020-00	請別忘記我們喔！
021-00	快樂的時光總有結束的一天……
022-00	呵呵……\n我們可還沒到退休的時候喔！
023-00	哈哈……\n讓你瞧瞧感應器的奧妙吧。
024-00	{[0201]}，\n請好好地愛惜遊戲喔～
025-00	我們合起來就是……
025-01	照相機戰隊！
026-00	真是令人頭痛。
End00	今後也要……
End01	繼續使用小節點們的力量，\n盡情地設計出各種遊戲喔！
GameDefaultName.msbt
01	二人對戰！捉迷藏大戰
02	滾滾球
03	ALIEN SHOOTING
04	GO! GO! 運動競技
05	解謎房間
06	刺激賽車
07	{[0201]}的遊戲
GuidebookName.msbt
Basic	小節點車庫的基本
StickAndHuman	用操控搖桿移動人的原理
Compare	用比較小節點判定條件！
GameCamera	遊戲畫面小節點的工作
Attribute	物件狀態的基本
BreakAndRetry	物件損壞時\n自動讓遊戲重來的原理
Shot	大鬧一場！發射物件小節點
ViewChange	切換視角與遊戲空間的方向
AxisAngle	轉來轉去的傾斜小節點
MoveRigid	跑吧！可移動物件小節點
Calculation	高性能？計算小節點
Count	計算損壞物件數量的原理
Warp	幻覺！？傳送物件
Ufo	不明飛行小節點：UFO小節點
Scroll	讓遊戲畫面捲動的原理
AdvancedBreakProperties	能破壞、會損壞的詳細設定
Not	愛唱反調的NOT小節點
And	沒問題沒問題！AND小節點
MoveFancyRigid	時尚物件小節點教教你！\n最新的穿搭技術
ConnectGameCamera	讓遊戲畫面跟上來的原理
FallAndBreak	掉落後就會損壞的原理
HingeRotate	來跳舞吧！鉸鍊連接小節點
HingeSlide	偏移吧！滑動連接小節點
OnOffFlag	開啟？關閉？旗標小節點
PunchAndBreak	用出拳破壞物件的原理
FreeSlide	自由自在的傢伙\n自由滑動連接小節點
BreakCounter	出拳3次就會損壞的原理
ThirdPersonCamera	照相機小節點的神技
CarNode	嗖嗖嗖！汽車小節點
DifferentCollision	將物件分別處理的原理
JudgeWinOrLose	勝負判定程式的原理
AutoPilot	自動駕駛程式的原理
PrintDebug	用附數字物件小節點除錯！？
CountDown	倒數程式的原理
Connection	連接的基本
RotateRigid	轉圈圈吧♪\n可轉動物件小節點
Guidebook_AdvancedBreakProperties.msbt
000	{[0201]}，\n你好。
001	這裡有人、球體和立方體……
001-01	在他們的狀態選項中，\n{color[0400]}{[0001|1d00]}能破壞{[0001|ffff]}{color[ffff]}、{color[0400]}{[0001|1d00]}會損壞{[0001|ffff]}{color[ffff]}被設定為{color[0400]}{[0001|1d00]}開啟{[0001|ffff]}{color[ffff]}。
001-02	你可以用{color[0400]}{[0001|1d00]}操控搖桿{[0001|ffff]}{color[ffff]}和{color[0400]}{[0001|1d00]}鍵{[0001|ffff]}{color[ffff]}來操作人，\n試著讓人接觸球體跟立方體吧。
001-03	現在不論是哪個物件，\n只要相互接觸就會破壞對方……
002	我們要改成{color[0400]}{[0001|1d00]}讓人能推動球體{[0001|ffff]}{color[ffff]}……
002-01	再讓人推動的{color[0400]}{[0001|1d00]}球體能破壞立方體{[0001|ffff]}{color[ffff]}。
010	到程式設計畫面裡試看看吧！
011	嗨！\n{[0201]}！
011-01	……嗯。\n你想讓人能推動球體啊。
011-02	利用{[0001|1d00]}{color[0400]}狀態{color[ffff]}{[0001|ffff]}就可以辦到囉。
011-03	……
011-04	你應該已經知道做法了吧？
011-05	看來我們得秀一手了呢，\n{[0201]}。
011-06	先來選擇{[0001|1d00]}球體{[0001|ffff]}物件小節點……
011-07	打開設定，\n更改{[0001|1d00]}狀態{[0001|ffff]}吧。
011-08	首先，為了讓球體變得不會損壞……
011-09	把{color[0400]}{[0001|1d00]}會損壞{[0001|ffff]}{color[ffff]}設定為{color[0400]}{[0001|1d00]}關閉{[0001|ffff]}{color[ffff]}。
011-10	然後，為了讓球體不要破壞人……
011-11	把{color[0400]}{[0001|1d00]}能破壞{[0001|ffff]}{color[ffff]}設定為{color[0400]}{[0001|1d00]}關閉{[0001|ffff]}{color[ffff]}。
011-12	這樣人應該就能推動球體了。
011-13	關閉設定畫面……
057	在遊戲畫面中確認看看吧。
058	讓人接觸球體，\n試看看能不能推動他。
059	可以推動球體了。
060	不過……\n球體接觸到立方體後，\n卻不能破壞他……
060-00	當兩者接觸時，\n我們想讓球體破壞掉立方體。
060-01	……可是，\n要是將球體狀態的{color[0400]}{[0001|1d00]}能破壞{[0001|ffff]}{color[ffff]}設定為{color[0400]}{[0001|1d00]}開啟{[0001|ffff]}{color[ffff]}，\n{color[0400]}{[0001|1d00]}人又會被破壞了{[0001|ffff]}{color[ffff]}。
060-02	雖然也能透過更改人的{[0001|1d00]}狀態{[0001|ffff]}\n讓人不被破壞……
061	但這次我要教你的是\n{color[0400]}{[0001|1d00]}不更改人的狀態也能做到的方法{[0001|ffff]}{color[ffff]}。
062	我們到程式設計畫面去吧。
078	……嗨。\n你想讓球體不破壞人，\n{color[0400]}{[0001|1d00]}只破壞立方體{[0001|ffff]}{color[ffff]}嗎？
078-01	那麼有一個好方法喔。
078-02	……
078-03	做到了嗎？
078-04	……要說明就說清楚一點啦。
078-05	{[0201]}，\n來選擇{[0001|1d00]}球體{[0001|ffff]}物件小節點……
078-06	打開設定畫面。
078-07	請看{color[0400]}{[0001|1d00]}能破壞{[0001|ffff]}{color[ffff]}旁邊的那個小{color[0400]}{[0001|1d00]}按鍵{[0001|ffff]}{color[ffff]}。
088	這個按鍵可以打開\n{color[0400]}{[0001|1d00]}能破壞的詳細設定{[0001|ffff]}{color[ffff]}。
089	按下這個按鍵，\n打開{color[0400]}{[0001|1d00]}能破壞的詳細設定{[0001|ffff]}{color[ffff]}看看吧。
090	在詳細設定中，\n你可以指定{color[0400]}{[0001|1d00]}要破壞什麼物件{[0001|ffff]}{color[ffff]}。
091	我們只想破壞立方體……\n將{color[0400]}{[0001|1d00]}立方體{[0001|ffff]}{color[ffff]}設定為{color[0400]}{[0001|1d00]}開啟{[0001|ffff]}{color[ffff]}吧。
091-01	這麼一來，\n球體應該就{color[0400]}{[0001|1d00]}只會破壞立方體{[0001|ffff]}{color[ffff]}了。
092	關閉詳細設定。
093	接著關閉設定。
095	在遊戲畫面中確認看看吧。
096	讓人推動球體……\n把球體推向立方體。
097	就算人接觸到球體，\n{color[0400]}{[0001|1d00]}人也不會損壞{[0001|ffff]}{color[ffff]}……
098	而當球體接觸到立方體時，\n{color[0400]}{[0001|1d00]}立方體則會損壞{[0001|ffff]}{color[ffff]}。
099	現在球體{color[0400]}{[0001|1d00]}只會破壞立方體{[0001|ffff]}{color[ffff]}了。
103	接下來，我們再花點工夫……
104	讓球體接觸到立方體時……\n{color[0400]}{[0001|1d00]}球體{[0001|ffff]}{color[ffff]}本身也{color[0400]}{[0001|1d00]}會損壞{[0001|ffff]}{color[ffff]}吧。
104-01	如果只是把球體狀態的\n{color[0400]}{[0001|1d00]}會損壞{[0001|ffff]}{color[ffff]}設定為{color[0400]}{[0001|1d00]}開啟{[0001|ffff]}{color[ffff]}的話，\n球體接觸到人時就會損壞……
104-02	把他設定成\n{color[0400]}{[0001|1d00]}只有在接觸到立方體時{[0001|ffff]}{color[ffff]}才會損壞吧。
105	到程式設計畫面去吧。
109	……嗯。\n你想讓球體只有在接觸到\n立方體時才會損壞嗎？
110-01	……
110-02	就算我不說明，\n你也知道大致上該怎麼做了吧？
110-03	來吧，{[0201]}。\n雖然你可能已經知道了，\n但還是跟著我做一遍吧。
111	選擇{[0001|1d00]}球體{[0001|ffff]}物件小節點。
112	打開設定。
112-01	請看{[0001|1d00]}會損壞{[0001|ffff]}旁邊的那個小按鍵。
113	這就是能打開{color[0400]}{[0001|1d00]}會損壞的詳細設定{[0001|ffff]}{color[ffff]}的按鍵。
114	打開會損壞的詳細設定。
114-01	在{color[0400]}{[0001|1d00]}會損壞的詳細設定{[0001|ffff]}{color[ffff]}中，\n你可以指定球體\n{color[0400]}{[0001|1d00]}在接觸到什麼物件時會損壞{[0001|ffff]}{color[ffff]}。
115	為了讓球體只在\n接觸到立方體時損壞……
116	把{color[0400]}{[0001|1d00]}立方體{[0001|ffff]}{color[ffff]}設定為{color[0400]}{[0001|1d00]}開啟{[0001|ffff]}{color[ffff]}吧。
117	關閉詳細設定。
118	接著關閉設定。
119	在遊戲畫面中確認看看吧。
120	讓人推動球體……\n使球體接觸立方體看看吧。
121	……球體跟立方體都損壞了。
122	人接觸到球體時，\n人跟球體都不會損壞。
125	這樣就能讓人推動球體\n來破壞立方體了。
126	讓我們到程式設計畫面去吧。
127	就是這樣，\n只要使用{color[0400]}{[0001|1d00]}狀態的詳細設定{[0001|ffff]}{color[ffff]}……
128	就能設計出能破壞、\n會損壞等複雜的結構。
129	……嗯。\n你可得好好運用這些知識，\n將來要成為一位超級程式設計師喔。
Guidebook_And.msbt
000	……你好。
002	試著{color[0400]}{[0001|1d00]}同時{[0001|ffff]}{color[ffff]}按下\n{[0001|1d00]}{color[0400]}鍵{color[ffff]}{[0001|ffff]}跟{[0001|1d00]}{color[0400]}鍵{color[ffff]}{[0001|ffff]}吧。
003	{[0001|1d00]}{color[0400]}煙火{color[ffff]}{[0001|ffff]}發射了。
004	{[0001|1d00]}{color[0400]}只按下鍵{color[ffff]}{[0001|ffff]}或{[0001|1d00]}{color[0400]}只按下鍵{color[ffff]}{[0001|ffff]}，\n{[0001|2000]}煙火{[0001|ffff]}都不會發射。
005	只有{[0001|1d00]}{color[0400]}同時按下兩個按鍵{color[ffff]}{[0001|ffff]}，\n煙火才會發射……
006	這次就是要說明這種結構的原理。
007	那麼，讓我們到{[0001|2000]}程式設計畫面{[0001|ffff]}去吧。
008	{[0201]}！\n你好你好～！
010	你很想知道{[0001|1d00]}{color[0400]}同時按下鍵{color[ffff]}{[0001|ffff]}和{[0001|1d00]}{color[0400]}鍵{color[ffff]}{[0001|ffff]}\n就會{[0001|1d00]}{color[0400]}發射煙火{color[ffff]}{[0001|ffff]}的原理對不對？
011	這點小事～\n交給我們來吧！
012	我們會全面地！完美地！\n告訴你其中的一點點奧秘！
013	……喂！\n只教一點點嗎～！\n這也太沒意思了吧～～～～～！！
014	……\n……
015	{[0001|1d00]}{color[0400]}當2個按鍵被同時按下時{color[ffff]}{[0001|ffff]}……\n{[0001|1d00]}{color[0400]}AND小節點{color[ffff]}{[0001|ffff]}就會告訴我們喔。
016	右邊沒問題！左邊沒問題！\nOK！
017	{[0201]}，你好。\n我是{[0001|1d00]}{color[0400]}AND小節點{color[ffff]}{[0001|ffff]}。
018	沒問題沒問題！\n我{[0001|1d00]}{color[0400]}只會在兩邊都OK的時候{color[ffff]}{[0001|ffff]}\n才會輸出訊號！
019	{[0001|1d00]}{color[0400]}AND{color[ffff]}{[0001|ffff]}就是「{[0001|1d00]}{color[0400]}和{color[ffff]}{[0001|ffff]}」的意思。
020	我身上有{color[0400]}{[0001|1d00]}2個輸入端{[0001|ffff]}{color[ffff]}……
021	只有在{color[0400]}{[0001|1d00]}上面的端口{[0001|ffff]}{color[ffff]}和\n{color[0400]}{[0001|1d00]}下面的端口都被輸入{[0001|ffff]}{color[ffff]}時……
022	我才會{color[0400]}{[0001|1d00]}輸出訊號{[0001|ffff]}{color[ffff]}喔！
025	嗨！\n{[0001|1d00]}{color[0400]}當鍵被按下時{color[ffff]}{[0001|ffff]}，\n我就會送出訊號！
026	哦！\n{[0001|1d00]}{color[0400]}當鍵被按下時{color[ffff]}{[0001|ffff]}……\n這就是第一個條件呢。
028	嗨！\n我是{[0001|1d00]}{color[0400]}鍵{color[ffff]}{[0001|ffff]}！
029	哦！\n第二個條件就是\n{[0001|1d00]}{color[0400]}當鍵被按下時{color[ffff]}{[0001|ffff]}呢。
030	輸入1，沒問題！\n輸入2，沒問題！\nOK！
031	我要向{[0001|1d00]}{color[0400]}特效小節點{color[ffff]}{[0001|ffff]}\n送出{[0001|1d00]}{color[0400]}訊號{color[ffff]}{[0001|ffff]}囉！
032	然後我就會轟隆～一聲\n發射出{[0001|1d00]}{color[0400]}煙火{color[ffff]}{[0001|ffff]}喔！
033	這就是{[0001|1d00]}{color[0400]}同時按下鍵和鍵時\n會發射出煙火{color[ffff]}{[0001|ffff]}的原理喔！
034	那麼，{[0201]}。\n你要不要試著更改一下{[0001|1d00]}{color[0400]}按鍵{color[ffff]}{[0001|ffff]}啊？
035	我幫你多叫一個\n{[0001|1d00]}{color[0400]}按鍵小節點{color[ffff]}{[0001|ffff]}出來喔。
036	嗨！\n當{[0001|1d00]}{color[0400]}鍵{color[ffff]}{[0001|ffff]}被按下時，\n想要我通知你嗎？
037	來更改{[0001|1d00]}{color[0400]}AND小節點{color[ffff]}{[0001|ffff]}的輸入條件吧。
038	刪除與{[0001|1d00]}{color[0400]}鍵{color[ffff]}{[0001|ffff]}連接的{[0001|1d00]}{color[0400]}配對線{color[ffff]}{[0001|ffff]}。
039	改以{[0001|1d00]}{color[0400]}鍵{color[ffff]}{[0001|ffff]}的按鍵小節點連接。
040	哦！第二個條件要改成\n{[0001|1d00]}{color[0400]}當鍵被按下時{color[ffff]}{[0001|ffff]}……對嗎？
041	當{color[0400]}{[0001|1d00]}鍵和鍵{[0001|ffff]}{color[ffff]}兩邊都沒問題時，\n我就會輸出訊號喔！
043	來看看{[0001|2000]}遊戲畫面{[0001|ffff]}吧。
044	試著{[0001|1d00]}{color[0400]}同時{color[ffff]}{[0001|ffff]}按下\n{[0001|1d00]}{color[0400]}鍵{color[ffff]}{[0001|ffff]}和{[0001|1d00]}{color[0400]}鍵{color[ffff]}{[0001|ffff]}。
045	{[0001|2000]}煙火發射。{[0001|ffff]}
047	這就表示{[0001|1d00]}{color[0400]}AND小節點{color[ffff]}{[0001|ffff]}在\n鍵和鍵{[0001|1d00]}{color[0400]}同時按下{color[ffff]}{[0001|ffff]}時發出了訊號。
048	回到{[0001|2000]}程式設計畫面{[0001|ffff]}吧。
049	你回來了喔！
051	另外還有一點～\n如果你使用2個{[0001|1d00]}{color[0400]}AND小節點{color[ffff]}{[0001|ffff]}的話……
052	還能把發出{[0001|1d00]}{color[0400]}訊號{color[ffff]}{[0001|ffff]}的條件\n{[0001|1d00]}{color[0400]}增加為3個{color[ffff]}{[0001|ffff]}喔～！
056	那麼，我就讓另一個{[0001|1d00]}{color[0400]}AND小節點{color[ffff]}{[0001|ffff]}登場吧。
057	沒問題沒問題！\n要設定為什麼條件？
057-01	首先，把連接{color[0400]}{[0001|1d00]}AND小節點{[0001|ffff]}{color[ffff]}和\n{color[0400]}{[0001|1d00]}特效小節點{[0001|ffff]}{color[ffff]}的配對線刪除。
058	然後，把{[0001|1d00]}{color[0400]}AND小節點{color[ffff]}{[0001|ffff]}連接到\n新登場的{[0001|1d00]}{color[0400]}AND小節點{color[ffff]}{[0001|ffff]}的{[0001|1d00]}輸入1端口{[0001|ffff]}。
059	接下來，把{[0001|1d00]}{color[0400]}鍵{color[ffff]}{[0001|ffff]}的\n按鍵小節點也連過來。
060	哦！\n你想將{[0001|1d00]}{color[0400]}當AND小節點輸出訊號時{color[ffff]}{[0001|ffff]}和\n{[0001|1d00]}{color[0400]}當鍵被按下時{color[ffff]}{[0001|ffff]}這兩種情況設定為條件啊。
061	輸出沒問題！
062	我還是會跟之前一樣，\n{[0001|1d00]}{color[0400]}當鍵和鍵被同時按下時{color[ffff]}{[0001|ffff]}，\n我才會送出{[0001|2000]}訊號{[0001|ffff]}喔。
086	最後，把新登場的{[0001|1d00]}{color[0400]}AND小節點{color[ffff]}{[0001|ffff]}和\n{[0001|1d00]}{color[0400]}特效小節點{color[ffff]}{[0001|ffff]}連接起來。
064	這麼一來，\n就得同時按住{[0001|1d00]}{color[0400]}鍵和鍵{color[ffff]}{[0001|ffff]}\n再按下{[0001|1d00]}{color[0400]}鍵{color[ffff]}{[0001|ffff]}……
065	也就是說，要{color[0400]}{[0001|1d00]}同時按下\n鍵、鍵和鍵這3個按鍵{[0001|ffff]}{color[ffff]}，\n煙火才會發射。
071	到{[0001|2000]}遊戲畫面{[0001|ffff]}去吧。
072	試著同時按下\n{[0001|1d00]}{color[0400]}、和{color[ffff]}{[0001|ffff]}這3個按鍵吧。
073	{[0001|2000]}煙火{[0001|ffff]}發射了。
074	只{[0001|1d00]}{color[0400]}按下2個按鍵{color[ffff]}{[0001|ffff]}\n是{[0001|1d00]}{color[0400]}無法讓煙火發射{color[ffff]}{[0001|ffff]}的。
076	配合{[0001|1d00]}{color[0400]}AND小節點{color[ffff]}{[0001|ffff]}的使用，\n就可以增加輸出{[0001|1d00]}{color[0400]}訊號{color[ffff]}{[0001|ffff]}的條件。
077	回到{[0001|2000]}程式設計畫面{[0001|ffff]}吧。
078	輸入1，沒問題！
079	輸入2，沒問題！
080	煙火，沒問題喔！
081	{[0201]}！\n你可要好好利用{[0001|1d00]}{color[0400]}AND小節點{color[ffff]}{[0001|ffff]}\n設計出「沒問題！」的完美程式喔～
082	那下次見啦！
Guidebook_Attribute.msbt
000	……你好。
001	現在遊戲畫面上\n有一個{[0001|1d00]}{color[0400]}藍色立方體{color[ffff]}{[0001|ffff]}……
002	他掉落到{[0001|1d00]}{color[0400]}平面{color[ffff]}{[0001|ffff]}上了。
003	如果想再看一遍，\n就按下{[0001|1d00]}{color[0400]}重來鍵{color[ffff]}{[0001|ffff]}吧。
004	這次我們來試看看\n讓這個{[0001|1d00]}{color[0400]}物件變得不會掉落{color[ffff]}{[0001|ffff]}。
005	那麼，我們到{[0001|1d00]}{color[0400]}程式設計畫面{color[ffff]}{[0001|ffff]}去吧。
006	……嗨。
007	{[0201]}，\n你好啊。
008	找我有什麼事嗎？
009	……這樣啊。\n你想知道{[0001|1d00]}{color[0400]}讓物件不會掉落{color[ffff]}{[0001|ffff]}的方法啊。
010	利用{[0001|1d00]}{color[0400]}狀態{color[ffff]}{[0001|ffff]}就可以辦到囉。
011	……
012	做到了嗎？
013	……你這樣說明，\n誰聽得懂啊。
014	……嗯。\n不好意思，\n我不太會說話。
015	打開我的設定後，\n試著把{[0001|1d00]}{color[0400]}狀態{color[ffff]}{[0001|ffff]}中的{[0001|1d00]}{color[0400]}能移動{color[ffff]}{[0001|ffff]}\n設定為{[0001|1d00]}{color[0400]}關閉{color[ffff]}{[0001|ffff]}吧。
016	謝謝你的說明。
017	那我們趕緊來\n試看看更改{color[0400]}{[0001|1d00]}狀態{[0001|ffff]}{color[ffff]}吧。
018	先按下{[0001|1d00]}{color[0400]}設定鍵{color[ffff]}{[0001|ffff]}。
019	這邊就是{[0001|1d00]}{color[0400]}狀態{color[ffff]}{[0001|ffff]}。
020	就跟字面上的意思一樣，\n在這邊可以設定{[0001|1d00]}{color[0400]}物件的狀態{color[ffff]}{[0001|ffff]}。
021	總之……\n先照著物件小節點說的，\n試著把{[0001|1d00]}{color[0400]}能移動{color[ffff]}{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}關閉{color[ffff]}{[0001|ffff]}吧。
022	關閉設定畫面……
023	在遊戲畫面中確認看看吧。
024	物件{[0001|1d00]}{color[0400]}變得不會掉落了{color[ffff]}{[0001|ffff]}。
025	剛才我們在物件小節點的設定畫面，\n把{[0001|1d00]}{color[0400]}狀態{color[ffff]}{[0001|ffff]}中的{[0001|1d00]}{color[0400]}能移動{color[ffff]}{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}關閉{color[ffff]}{[0001|ffff]}了……
026	正是因為{[0001|1d00]}{color[0400]}關閉{color[ffff]}{[0001|ffff]}了{[0001|1d00]}{color[0400]}能移動{color[ffff]}{[0001|ffff]}，\n物件才不再移動……\n也就{[0001|1d00]}{color[0400]}變得不會掉落了{color[ffff]}{[0001|ffff]}。
027	那麼讓我們回到程式設計畫面裡，\n把{[0001|1d00]}{color[0400]}能移動{color[ffff]}{[0001|ffff]}再次設定為{[0001|1d00]}{color[0400]}開啟{color[ffff]}{[0001|ffff]}，\n看看會發生什麼變化吧。
028	打開物件小節點的設定。
029	把剛才關閉的{[0001|1d00]}{color[0400]}能移動{color[ffff]}{[0001|ffff]}\n再次設定為{[0001|1d00]}{color[0400]}開啟{color[ffff]}{[0001|ffff]}。
030	關閉畫面。
031	再確認一次看看吧。
032	因為{[0001|1d00]}{color[0400]}開啟{color[ffff]}{[0001|ffff]}了{[0001|1d00]}{color[0400]}能移動{color[ffff]}{[0001|ffff]}，\n物件變得能夠移動……
033	也就{[0001|1d00]}{color[0400]}變回會掉落{color[ffff]}{[0001|ffff]}的狀態了。
034	所以，我們只要更改{[0001|1d00]}{color[0400]}狀態{color[ffff]}{[0001|ffff]}，\n就能讓物件變得不會掉落囉。
035	回到程式設計畫面吧。
036	……你回來啦。
037	更改{[0001|1d00]}{color[0400]}狀態{color[ffff]}{[0001|ffff]}後，\n物件就變得不會掉落了吧。
039	{[0001|1d00]}{color[0400]}狀態{color[ffff]}{[0001|ffff]}裡還有很多其他項目喔。
040	……
041	要試著更改一下其他{[0001|1d00]}{color[0400]}狀態{color[ffff]}{[0001|ffff]}嗎？
042	……想要別人改的話，\n你就直說嘛。
043	{[0201]}，\n來看看其他{color[0400]}{[0001|1d00]}狀態{[0001|ffff]}{color[ffff]}吧。
044	打開設定畫面。
045	這次把{[0001|1d00]}{color[0400]}能接觸{color[ffff]}{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}關閉{color[ffff]}{[0001|ffff]}。
046	關閉設定畫面。
047	猜看看會發生什麼事？
048	物件{[0001|1d00]}{color[0400]}穿過平面{color[ffff]}{[0001|ffff]}掉下去了。
100	只要把{color[0400]}{[0001|1d00]}能接觸{[0001|ffff]}{color[ffff]}設定為{color[0400]}{[0001|1d00]}關閉{[0001|ffff]}{color[ffff]}，\n物件就{[0001|1d00]}{color[0400]}不會接觸到任何東西{color[ffff]}{[0001|ffff]}。
051	我們再多做一些嘗試吧。
052	那麼首先……
053	我就讓另一個{[0001|1d00]}{color[0400]}物件小節點{color[ffff]}{[0001|ffff]}\n在這裡登場吧。
112	……你好。\n我是{[0001|1d00]}{color[0400]}球體{color[ffff]}{[0001|ffff]}。
118	這麼一來，\n平面上就有一個球體……
119	而{[0001|1d00]}{color[0400]}立方體{color[ffff]}{[0001|ffff]}將會朝著球體，\n從上方掉落下去。
114	來看看變成怎樣了吧。
115	立方體{[0001|1d00]}{color[0400]}也穿過球體{color[ffff]}{[0001|ffff]}，\n直直地掉落下去了。
116	也就是說只要把{[0001|1d00]}{color[0400]}能接觸{color[ffff]}{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}關閉{color[ffff]}{[0001|ffff]}，\n物件就會{[0001|1d00]}{color[0400]}穿過所有東西{color[ffff]}{[0001|ffff]}。
117	讓我們到{[0001|1d00]}{color[0400]}程式設計畫面{color[ffff]}{[0001|ffff]}去吧。
056	接下來……\n來看看{[0001|1d00]}{color[0400]}物件與物件接觸時{color[ffff]}{[0001|ffff]}會發生什麼事吧。
057	打開設定畫面。
058	把{[0001|1d00]}{color[0400]}能接觸{color[ffff]}{[0001|ffff]}重新設定為{[0001|1d00]}{color[0400]}開啟{color[ffff]}{[0001|ffff]}。
059	按下關閉鍵。
060	{[0001|1d00]}{color[0400]}立方體{color[ffff]}{[0001|ffff]}與{[0001|1d00]}{color[0400]}球體{color[ffff]}{[0001|ffff]}之間會發生什麼事呢？
061	因為我們把{[0001|1d00]}{color[0400]}能接觸{color[ffff]}{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}開啟{color[ffff]}{[0001|ffff]}……
062	掉落的立方體沒有穿過球體，\n而是{[0001|1d00]}{color[0400]}在接觸後損壞了{color[ffff]}{[0001|ffff]}。
063	物件在互相接觸後{[0001|1d00]}{color[0400]}損壞了{color[ffff]}{[0001|ffff]}……\n這也是一種{[0001|1d00]}{color[0400]}狀態{color[ffff]}{[0001|ffff]}喔。
064	到{[0001|1d00]}{color[0400]}程式設計畫面{color[ffff]}{[0001|ffff]}裡看看吧。
065	打開{[0001|1d00]}{color[0400]}設定畫面{color[ffff]}{[0001|ffff]}。
066	試著把{[0001|1d00]}{color[0400]}會損壞{color[ffff]}{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}關閉{color[ffff]}{[0001|ffff]}吧。
067	關閉畫面。
068	這樣掉落下來的{[0001|1d00]}{color[0400]}立方體{color[ffff]}{[0001|ffff]}的狀態中，\n{[0001|1d00]}{color[0400]}會損壞{color[ffff]}{[0001|ffff]}就被設定為{[0001|1d00]}{color[0400]}關閉{color[ffff]}{[0001|ffff]}了。
069	他們會變成怎樣呢？
070	掉落下來的{[0001|1d00]}{color[0400]}立方體{color[ffff]}{[0001|ffff]}接觸到{[0001|1d00]}{color[0400]}球體{color[ffff]}{[0001|ffff]}後……
071	立方體{[0001|1d00]}{color[0400]}沒有損壞{color[ffff]}{[0001|ffff]}，\n只有球體損壞了。
071-01	也就是說只要把{[0001|1d00]}{color[0400]}會損壞{color[ffff]}{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}關閉{color[ffff]}{[0001|ffff]}，\n物件就會{[0001|1d00]}{color[0400]}變得不會損壞{color[ffff]}{[0001|ffff]}。
072	接下來試看看\n更改立方體的{[0001|1d00]}狀態{[0001|ffff]}，\n讓球體{[0001|1d00]}{color[0400]}不會損壞{color[ffff]}{[0001|ffff]}吧。
073	該怎樣做才不會損壞呢？\n試著思考一下吧。
074	讓我們再次打開{[0001|1d00]}{color[0400]}設定畫面{color[ffff]}{[0001|ffff]}。
075	把{[0001|1d00]}{color[0400]}能破壞{color[ffff]}{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}關閉{color[ffff]}{[0001|ffff]}。
076	關閉畫面。
077	來確認看看吧。
078	這次球體也{[0001|1d00]}{color[0400]}變得不會損壞了{color[ffff]}{[0001|ffff]}。
079	因為立方體狀態的{[0001|1d00]}{color[0400]}能破壞{color[ffff]}{[0001|ffff]}被設定為{[0001|1d00]}{color[0400]}關閉{color[ffff]}{[0001|ffff]}，\n所以也就{[0001|1d00]}{color[0400]}不會破壞{color[ffff]}{[0001|ffff]}接觸到的球體囉。
080	接下來要說明最後一個狀態。
081	跟之前一樣打開設定。
082	試著把{[0001|1d00]}{color[0400]}能看見{color[ffff]}{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}關閉{color[ffff]}{[0001|ffff]}。
083	關閉畫面。
084	到{[0001|1d00]}{color[0400]}遊戲畫面{color[ffff]}{[0001|ffff]}裡看看吧。
085	{[0001|1d00]}{color[0400]}立方體{color[ffff]}{[0001|ffff]}消失了……
086	其實立方體並沒有消失……\n他之所以會{[0001|1d00]}{color[0400]}變得看不見{color[ffff]}{[0001|ffff]}，\n是因為{[0001|1d00]}{color[0400]}狀態{color[ffff]}{[0001|ffff]}中的{[0001|1d00]}{color[0400]}能看見{color[ffff]}{[0001|ffff]}被設定為{[0001|1d00]}{color[0400]}關閉{color[ffff]}{[0001|ffff]}了。
087	為了確認這一點，\n我們先到{[0001|1d00]}{color[0400]}程式設計畫面{color[ffff]}{[0001|ffff]}去吧。
088	打開設定……
089	把{[0001|1d00]}{color[0400]}能破壞{color[ffff]}{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}開啟{color[ffff]}{[0001|ffff]}。
090	關閉畫面。
091	來看看會變成什麼樣子吧。
092	哇～\n{[0001|1d00]}{color[0400]}球體損壞了{color[ffff]}{[0001|ffff]}。
093	也就是說，{[0001|1d00]}{color[0400]}看不見的立方體接觸到{color[ffff]}{[0001|ffff]}\n球體並破壞了他。
094	雖然我們看不見立方體，\n但他{[0001|1d00]}{color[0400]}的確存在於遊戲畫面裡{color[ffff]}{[0001|ffff]}。
095	{[0001|1d00]}{color[0400]}狀態{color[ffff]}{[0001|ffff]}的說明就到此為止了。
096	我們回到{[0001|1d00]}{color[0400]}程式設計畫面{color[ffff]}{[0001|ffff]}吧。
097	……你回來啦。
098	只要更改{[0001|1d00]}{color[0400]}狀態{color[ffff]}{[0001|ffff]}的設定，\n就能改變{[0001|1d00]}{color[0400]}物件的動作{color[ffff]}{[0001|ffff]}喔。
099	……連我自己都覺得這功能很方便呢。\n你可要牢牢記住喔。
Guidebook_AutoPilot.msbt
00.00.Alice	……{[0201]}，你好。
00.01.Alice	這次我會逐步為你解說\n汽車的自動駕駛程式。
00.02.Alice	現在遊戲畫面上\n有一輛汽車對吧。
00.03.Alice	用{[0001|1d00]}{color[0400]}鍵{color[ffff]}{[0001|ffff]}就能讓汽車前進，\n試著開動他吧。
00.04.Alice	汽車一靠近牆壁\n就會自動向右轉。
00.05.Alice	你覺得是什麼樣的程式\n讓汽車做出這種動作呢？
00.06.Alice	讓我們到程式設計畫面\n確認一下吧。
01.00.Car	嗖嗖嗖！\n我是汽車小節點！
01.01.Camera	……你好。
01.02.Camera	今天的工作是\n追著汽車小節點拍攝啊……\n……包在我身上。
01.03.Button	嗨！\n我們又見面了呢，{[0201]}。\n這次我會負責傳達鍵的情況！
01.04.RigidWall	……嗨。\n我是物件小節點，\n是一道棕色的牆壁。
01.05.RigidWall	我們排列在一起\n就成了賽道。
01.06.SensorL	你好，{[0201]}。\n有什麼可以幫到你嗎？
01.07.SensorL	什麼！？\n你想了解汽車的\n{[0001|1d00]}{color[0400]}自動駕駛程式{color[ffff]}{[0001|ffff]}嗎！？
01.08.SensorL	好吧！\n就讓我們來為你說明吧。
01.09.SensorL	首先請看這裡。\n我正{[0001|1d00]}{color[0400]}連接在汽車小節點的正面{color[ffff]}{[0001|ffff]}。
01.10.Car	緊緊地黏在我的正前方呢！
01.11.Button	我負責把訊號輸出到\n汽車小節點的{color[0400]}{[0001|1d00]}油門端口{[0001|ffff]}{color[ffff]}，\n讓玩家可以用鍵來移動汽車！
01.12.RigidWall	然後當汽車接近我的時候……
01.13.SensorL	因為我正連接在\n汽車小節點的正面……
01.14.Car	所以{[0001|1d00]}{color[0400]}接觸感應器會碰到牆壁{color[ffff]}{[0001|ffff]}！
01.15.SensorL	我要確認的物件是{[0001|1d00]}{color[0400]}立方體{color[ffff]}{[0001|ffff]}，\n所以碰到立方體……也就是{[0001|1d00]}{color[0400]}接觸到牆壁時，\n就會輸出數值為1.00的訊號{color[ffff]}{[0001|ffff]}。
01.16.Car	當我的{color[0400]}{[0001|1d00]}方向盤端口{[0001|ffff]}{color[ffff]}\n接收到{[0001|1d00]}{color[0400]}1.00{color[ffff]}{[0001|ffff]}的訊號時，\n汽車就會{[0001|1d00]}{color[0400]}向右轉{color[ffff]}{[0001|ffff]}！
01.18.Car	接著當汽車右轉後～
01.19.SensorL	接觸感應器就會{[0001|1d00]}{color[0400]}離開牆邊{color[ffff]}{[0001|ffff]}，\n訊號也就不會再被輸出。
01.20.Button	也就是說，只要汽車的{[0001|1d00]}{color[0400]}正面沒有牆壁{color[ffff]}{[0001|ffff]}，\n汽車就會{[0001|1d00]}{color[0400]}直線前進{color[ffff]}{[0001|ffff]}！
01.21.Alice	百聞不如一見……\n把接觸感應器小節點設定為{[0001|1d00]}{color[0400]}能看見{color[ffff]}{[0001|ffff]}，\n來實際確認一下吧。
01.22.Alice	選擇接觸感應器小節點……
01.23.Alice	打開設定畫面。
01.24.Alice	把{[0001|1d00]}狀態{[0001|ffff]}中的{[0001|1d00]}{color[0400]}能看見{color[ffff]}{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}開啟{color[ffff]}{[0001|ffff]}。
01.25.Alice	順便也確認一下\n{color[0400]}{[0001|1d00]}要確認什麼？{[0001|ffff]}{color[ffff]}吧。
01.26.Alice	顯示的是{[0001|1d00]}{color[0400]}立方體{color[ffff]}{[0001|ffff]}呢……\n也就是說，{[0001|1d00]}{color[0400]}目前被設定為會確認牆壁{color[ffff]}{[0001|ffff]}。
01.28.Alice	那麼，先關閉設定畫面。
01.29.Alice	到遊戲畫面確認看看吧。
02.00.Alice	出現在汽車正面的圓柱體框框\n就是{[0001|1d00]}{color[0400]}接觸感應器{color[ffff]}{[0001|ffff]}。
02.01.Alice	當這個圓柱體接觸到牆壁時，\n汽車就會向右轉。
02.02.Alice	用{[0001|1d00]}{color[0400]}鍵{color[ffff]}{[0001|ffff]}開動汽車，\n看看他轉彎時的情況吧。
02.03.Alice	當圓柱體接觸到牆壁時，\n汽車就會向右轉對吧？
02.04.Alice	另外，如果你想從起點再試一次，\n只要重來就可以了。
02.05.Alice	如果覺得已經確認清楚了，\n就回到程式設計畫面吧。
03.00.Car	怎麼樣？\n有看到我用帥氣的甩尾\n避開牆壁嗎！？
03.01.Button	帥是很帥啦，\n但你砰的一聲撞到下一面牆啦！
03.02.Car	嗚……\n我{[0001|1d00]}{color[0400]}現在只能向右轉{color[ffff]}{[0001|ffff]}啊……
03.03.SensorL	咿……說的也是啦。\n真想讓他變得也能向左轉呢。
03.04.SensorL	不過……\n我只能確認自己有沒有\n接觸到牆壁……
03.04-01.SensorL	沒辦法告訴他\n應該向左還是向右轉……
03.05.Alice	那麼，我們該怎麼做\n才能讓他可以判定{[0001|1d00]}{color[0400]}向左還是向右轉{color[ffff]}{[0001|ffff]}呢？
03.06.Alice	雖然接觸感應器小節點\n只能確認{[0001|1d00]}{color[0400]}有沒有接觸到牆壁{color[ffff]}{[0001|ffff]}……
03.09.Alice	但只要把{[0001|1d00]}{color[0400]}2個{color[ffff]}{[0001|ffff]}接觸感應器\n{[0001|1d00]}{color[0400]}一左一右地分別連接{color[ffff]}{[0001|ffff]}在\n汽車正面的話……
03.10.Alice	{[0001|1d00]}{color[0400]}兩邊的感應器就能接觸到不同方向的牆壁{color[ffff]}{[0001|ffff]}，\n接著再由接觸到的感應器來判定\n要向左還是向右轉就可以了。
03.11.Alice	那麼，我們就先來決定\n接觸感應器小節點的位置吧。
03.12.Alice	把接觸感應器小節點\n暫時先移動到左邊。
03.13.Alice	再用複製叫出另一個\n相同設定的接觸感應器小節點吧。
03.14.SensorR	哇……！\n不要突然就叫我出來啊～
03.15.Alice	把第2個接觸感應器小節點移動到右邊。
03.16.Alice	好了，接下來就是要將他們\n{[0001|1d00]}{color[0400]}一左一右地{color[ffff]}{[0001|ffff]}連接在汽車正面……
03.17.Alice	你覺得該怎麼做，\n才能把物件連接在汽車的斜前方呢？
03.18.Alice	這次我們用讓物件小節點\n夾在中間的方法來連接吧。
03.19.RigidBall	……嗨。\n我是{[0001|1d00]}{color[0400]}球體{color[ffff]}{[0001|ffff]}物件小節點。
03.21.RigidBall	那麼我就連接到\n汽車小節點的{color[0400]}{[0001|1d00]}正面{[0001|ffff]}{color[ffff]}吧。
03.21-01.Alice	只要把接觸感應器小節點\n連接到這個物件小節點的{color[0400]}{[0001|1d00]}左右{[0001|ffff]}{color[ffff]}方……
03.21-02.Alice	接觸感應器應該就能\n{[0001|1d00]}{color[0400]}連接在汽車的斜前方{color[ffff]}{[0001|ffff]}了。
03.22.Alice	那麼，選擇左邊的接觸感應器小節點和\n汽車小節點之間連接的配對線。
03.23.Alice	解除配對線。
03.24.Alice	重新連接到球體物件小節點上。
03.25.Alice	選擇左邊的接觸感應器小節點……
03.26.Alice	打開設定畫面。
03.29.Alice	更改連接面的設定，\n讓他連接在\n球體物件小節點的{color[0400]}{[0001|1d00]}左邊{[0001|ffff]}{color[ffff]}吧。
03.31.Alice	把{[0001|1d00]}{color[0400]}自己的連接面{color[ffff]}{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}X+{color[ffff]}{[0001|ffff]}。
03.32.Alice	把{[0001|1d00]}{color[0400]}連接對象的連接面{color[ffff]}{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}X-{color[ffff]}{[0001|ffff]}。
03.33.Alice	好了，關閉這個畫面。
03.34.Alice	接著關閉設定畫面。
03.35.SensorR	接下來就是要設定我的連接了呢。
03.36.Alice	選擇右邊的接觸感應器小節點……
03.37.Alice	打開設定畫面。
03.38.Alice	我們也來設定一下這邊的{[0001|1d00]}連接面{[0001|ffff]}吧。
03.39.Alice	這邊的接觸感應器小節點\n是要連接到球體物件小節點{color[0400]}{[0001|1d00]}右邊{[0001|ffff]}{color[ffff]}……
03.40.Alice	把{[0001|1d00]}{color[0400]}自己的連接面{color[ffff]}{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}X-{color[ffff]}{[0001|ffff]}。
03.41.Alice	把{[0001|1d00]}{color[0400]}連接對象的連接面{color[ffff]}{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}X+{color[ffff]}{[0001|ffff]}。
03.42.Alice	好了，關閉這個畫面吧。
03.43.Alice	接著關閉設定畫面。
03.44.Alice	好，現在先來確認一下\n接觸感應器是怎樣\n連接到汽車上的吧。
03.45.Alice	那麼，到遊戲畫面去吧。
04.00.Alice	汽車的{[0001|1d00]}{color[0400]}正面{color[ffff]}{[0001|ffff]}連接著{[0001|1d00]}{color[0400]}球體{color[ffff]}{[0001|ffff]}，\n而球體的{[0001|1d00]}{color[0400]}左右兩邊{color[ffff]}{[0001|ffff]}則連接著{[0001|1d00]}{color[0400]}接觸感應器{color[ffff]}{[0001|ffff]}。
04.02.Alice	用{[0001|1d00]}{color[0400]}鍵{color[ffff]}{[0001|ffff]}開動汽車，\n觀察2個接觸感應器\n是如何接觸牆壁的吧。
04.03.Alice	左邊的接觸感應器\n接觸到牆壁了對吧？
04.04.Alice	然後因為汽車向右轉，\n使右邊的感應器不會\n接觸到牆壁而繼續行駛。
04.05.Alice	我們先{[0001|1d00]}{color[0400]}重來{color[ffff]}{[0001|ffff]}一次。\n這次仔細觀察一下汽車轉彎後\n接近下一道牆壁時的情況吧。
04.06.Alice	有看到右邊的接觸感應器\n接觸到牆壁了嗎？
04.07.Alice	那麼，我們就來更改一下設定，\n讓右邊的接觸感應器\n在接觸到牆壁時能讓汽車向左轉吧。
04.08.Alice	回到程式設計畫面。
05.00.SensorR	怎麼樣？\n你有確認到我們的位置了嗎？
05.03.Button	雖然接觸感應器小節點\n已經成功連接到左右邊了……\n但好像還是會撞上右邊的牆壁啊！
05.04.Alice	那麼，我們就來設計一個程式，\n讓{[0001|1d00]}{color[0400]}汽車{color[ffff]}{[0001|ffff]}可以配合感應器\n來決定{[0001|1d00]}{color[0400]}該左轉還是右轉{color[ffff]}{[0001|ffff]}。
05.06.Car	只要把{[0001|1d00]}{color[0400]}負數傳送到\n我的方向盤端口，\n我就會向左轉{color[ffff]}{[0001|ffff]}喔！
05.08.SensorL	咿……也就是說，\n當我產生反應時，\n就要向{[0001|1d00]}方向盤端口{color[0400]}傳達正數{color[ffff]}{[0001|ffff]}……
05.09.SensorR	咿……那當我產生反應時，\n就要向{[0001|1d00]}方向盤端口{color[0400]}傳達負數{color[ffff]}{[0001|ffff]}吧。
05.10.Alice	那麼，你覺得該怎樣才能做到呢？
05.11.Alice	這次我們就試著用\n{[0001|1d00]}{color[0400]}減法{color[ffff]}{[0001|ffff]}來設計程式吧。
05.12.Alice	首先選擇左邊的接觸感應器小節點\n與汽車小節點的{color[0400]}{[0001|1d00]}方向盤端口{[0001|ffff]}{color[ffff]}\n之間連接的配對線……
05.13.Alice	解除這條配對線。
05.14.Alice	然後叫出{[0001|1d00]}{color[0400]}計算小節點{color[ffff]}{[0001|ffff]}。
05.15.Calculator	我跟以前一樣，\n仍然是一台高性能的計算機。
05.16.Calculator	你想計算減法嗎？\n對我來說小菜一碟。
05.17.Alice	用配對線連接起來，\n讓左邊的接觸感應器小節點的輸出訊號\n與右邊的接觸感應器小節點的輸出訊號{color[0400]}{[0001|1d00]}相減{[0001|ffff]}{color[ffff]}……
05.18.Alice	然後讓計算結果傳達到\n汽車小節點的方向盤端口。
05.19.SensorL	這麼一來，\n當只有左邊的接觸感應器\n接觸到牆壁時……
05.20.Calculator	1.00 - 0.00等於{[0001|1d00]}{color[0400]}1.00{color[ffff]}{[0001|ffff]}！
05.21.SensorR	而當只有右邊的接觸感應器\n接觸到牆壁時……
05.22.Calculator	0.00 - 1.00等於{[0001|1d00]}{color[0400]}-1.00{color[ffff]}{[0001|ffff]}！
05.23.RigidBall	……也會有兩邊的接觸感應器小節點\n都沒有接觸到牆壁的情況發生喔。
05.24.Calculator	那就是0.00 - 0.00等於{[0001|1d00]}{color[0400]}0.00{color[ffff]}{[0001|ffff]}！
05.25.Camera	原來如此……\n那麼兩個接觸感應器小節點\n都接觸到牆壁時該怎麼計算？
05.26.Calculator	1.00 - 1.00，所以等於{[0001|1d00]}{color[0400]}0.00{color[ffff]}{[0001|ffff]}！
05.27.Alice	{[0001|1d00]}{color[0400]}只有左邊的感應器{color[ffff]}{[0001|ffff]}接觸到時，輸出值是{[0001|1d00]}{color[0400]}1.00{color[ffff]}{[0001|ffff]}，\n{[0001|1d00]}{color[0400]}只有右邊的感應器{color[ffff]}{[0001|ffff]}接觸到時，輸出值是{[0001|1d00]}{color[0400]}-1.00{color[ffff]}{[0001|ffff]}，\n{[0001|1d00]}{color[0400]}上面兩種情況之外{color[ffff]}{[0001|ffff]}，輸出值都是{[0001|1d00]}{color[0400]}0.00{color[ffff]}{[0001|ffff]}。
05.27-01.Alice	換句話說，\n左邊的感應器接觸到物件時，汽車就會向右轉，\n右邊的感應器接觸到物件時，汽車就會向左轉。
05.28.Alice	我們到遊戲畫面實際確認一下吧。
06.01.Alice	用{[0001|1d00]}{color[0400]}鍵{color[ffff]}{[0001|ffff]}開動汽車，\n並仔細觀察接觸感應器和\n汽車的動作吧。
06.02.Alice	當汽車接近牆壁時，\n就會{[0001|1d00]}{color[0400]}朝與牆壁相反的方向{color[ffff]}{[0001|ffff]}轉彎對吧？
06.03.Alice	讓汽車行駛一段時間，\n好好確認一下他的動作吧。
06.04.Alice	那麼，\n我們回到程式設計畫面去吧。
07.00.Car	怎麼樣？\n我的駕駛技術很帥氣吧！
07.01.SensorL	咿……！汽車現在能向左右轉，\n順利地避開牆壁了……
07.02.SensorR	咿……但要說是自動駕駛的話，\n感覺還差了點什麼……
07.03.Camera	……畢竟{[0001|1d00]}{color[0400]}油門是手動的{color[ffff]}{[0001|ffff]}嘛。
07.04.Button	可是按鍵沒辦法自動按下啊！
07.05.Car	只要把{[0001|1d00]}{color[0400]}正數{color[ffff]}{[0001|ffff]}傳達到\n我的{[0001|1d00]}{color[0400]}油門端口{color[ffff]}{[0001|ffff]}，\n我就會一直前進喔！
07.06.Alice	那麼我們就用{[0001|1d00]}{color[0400]}常數小節點{color[ffff]}{[0001|ffff]}\n來代替按鍵小節點的工作吧。
07.07.Constant	我是常數小節點。\n數值是{color[0400]}{[0001|1d00]}1.00{[0001|ffff]}{color[ffff]}對吧，我知道了。
07.08.Button	好，那之後就交給你囉！\n{[0201]}，下次見啦！
07.09.Constant	我會代替按鍵小節點，\n{[0001|1d00]}{color[0400]}持續向油門端口\n傳達1.00這個數值{color[ffff]}{[0001|ffff]}。
07.10.Alice	這樣油門也變成自動了。
07.11.Alice	到遊戲畫面確認看看吧。
08.00.Alice	……
08.01.Alice	即使完全不做任何操作，\n汽車也會自動避開牆壁行駛。
08.02.Alice	這樣自動駕駛程式\n就順利完成了。
08.03.Alice	你可以多觀察幾次汽車的動作。\n滿意了就回到程式設計畫面吧。
09.00.Car	哇～！\n變成全自動了耶～
09.01.Calculator	厲害喔。\n這性能跟我有得比呢！
09.02.Alice	……汽車的自動駕駛程式雖然可能有點難懂，\n但你應該已經明白其中的原理了吧……？
09.06.SensorR	咿……就是……\n當接觸感應器接觸到牆壁時，\n我就會向{[0001|1d00]}{color[0400]}方向盤端口{color[ffff]}{[0001|ffff]}發送訊號……
09.07.Car	然後汽車就會轉彎！
09.08.SensorL	要是有2個我們這樣的\n接觸感應器小節點……
09.09.SensorR	就能依據是哪一邊接觸到牆壁，\n來判定{[0001|1d00]}{color[0400]}該向左轉還是右轉{color[ffff]}{[0001|ffff]}！
09.10.Calculator	然後，只要使用{color[0400]}{[0001|1d00]}減法{[0001|ffff]}{color[ffff]}，\n就能計算出適當的數值\n輸入到方向盤。
09.11.Constant	而我常數小節點則會\n持續輸出固定的數值，\n非常適合拿來讓{color[0400]}{[0001|1d00]}油門自動化{[0001|ffff]}{color[ffff]}。
09.13.Alice	這個自動化的技巧也能\n用來讓敵人自己行動，\n要記住喔。
09.14.Alice	那麼我們就在這裡結束吧。
09.15.Car	嗖嗖嗖！\n下次見囉。
09.16.Camera	自動化……這也是時代的潮流嗎……？
Guidebook_AxisAngle.msbt
000	{[0201]}，你好。
001	有人在畫面上呢。
002_a	這個人被設計為會配合\nNintendo Switch的{[0001|1d00]}{color[0400]}左右傾斜{color[ffff]}{[0001|ffff]}而移動。
003_a	把Nintendo Switch保持在水平位置\n然後試看看{[0001|1d00]}{color[0400]}左右傾斜{color[ffff]}{[0001|ffff]}吧。
002_b	這個人被設計為會配合\nJoy-Con的{[0001|1d00]}{color[0400]}左右傾斜{color[ffff]}{[0001|ffff]}而移動。
003_b	把Joy-Con保持在水平位置\n然後試看看{[0001|1d00]}{color[0400]}左右傾斜{color[ffff]}{[0001|ffff]}吧。
004	……傾斜讓人移動了。
005	就是這樣，這次我會為你解說\n{[0001|1d00]}{color[0400]}利用傾斜讓人移動的程式{color[ffff]}{[0001|ffff]}。
006	好，讓我們到程式設計畫面吧。
007	就是你讓我傾斜的嗎？
008	你好～我是{[0001|1d00]}{color[0400]}傾斜小節點{color[ffff]}{[0001|ffff]}。
009	我對Nintendo Switch和Joy-Con的\n傾斜方向瞭如指掌。
010	比起繃緊神經直直地拿著……
011	讓他自然地傾斜會更好喔。
012	我的職責就是把傾斜方向\n傳達給其他小節點。
013	把左右傾斜的方向傳達給\n人小節點的就是我喔。
014	請多指教……
015	嗨！我是人小節點。
016	我從傾斜小節點那裡\n接收到訊號後……
017	就讓人左右移動了喔！
018	只要使用傾斜小節點……
019	就能取代操控搖桿和按鍵……\n以{[0001|1d00]}{color[0400]}傾斜{color[ffff]}{[0001|ffff]}來{[0001|1d00]}{color[0400]}輸入{color[ffff]}{[0001|ffff]}。
020	……你問我是怎麼知道傾斜方向的？
022	Nintendo Switch裡面\n藏有{[0001|1d00]}{color[0400]}能感應動作的感應器{color[ffff]}{[0001|ffff]}……
023	所以我才能知道傾斜方向喔。
024	你可以在我的設定裡確認\n朝哪個方向傾斜了多少時\n會發送訊號喔。
025	選擇傾斜小節點。
026	打開設定。
027	傾斜小節點的{[0001|1d00]}{color[0400]}模式{color[ffff]}{[0001|ffff]}有2種，\n分別是{[0001|1d00]}{color[0400]}傾斜{color[ffff]}{[0001|ffff]}和{[0001|1d00]}{color[0400]}轉動角度{color[ffff]}{[0001|ffff]}。
028	在{[0001|1d00]}{color[0400]}傾斜{color[ffff]}{[0001|ffff]}模式中，\n傾斜的幅度會轉換為{[0001|1d00]}{color[0400]}0.00～1.00的訊號{color[ffff]}{[0001|ffff]}輸出。
029	而在{[0001|1d00]}{color[0400]}轉動角度{color[ffff]}{[0001|ffff]}模式中，\n則會直接依照傾斜的{[0001|1d00]}{color[0400]}角度{color[ffff]}{[0001|ffff]}輸出。
030	想用傾斜取代\n操控搖桿或按鍵時……
031	只要使用{color[0400]}{[0001|1d00]}傾斜{[0001|ffff]}{color[ffff]}{[0001|1d00]}模式{[0001|ffff]}就可以了。
032	在{[0001|1d00]}傾斜{[0001|ffff]}模式中，\n可以利用這個{[0001|1d00]}{color[0400]}範圍{color[ffff]}{[0001|ffff]}來設定\n{[0001|1d00]}{color[0400]}傾斜幅度{color[ffff]}{[0001|ffff]}與輸出{[0001|1d00]}{color[0400]}訊號值高低之間的關聯{color[ffff]}{[0001|ffff]}。
033	把{[0001|1d00]}範圍{[0001|ffff]}的上限{[0001|1d00]}{color[0400]}調高{color[ffff]}{[0001|ffff]}的話，\n就需要大幅度傾斜\n才能輸出高數值的訊號……
034	把{[0001|1d00]}範圍{[0001|ffff]}的上限{[0001|1d00]}{color[0400]}調低{color[ffff]}{[0001|ffff]}的話，\n就算是稍微傾斜，\n也會輸出高數值的訊號。
035	試著把{[0001|1d00]}範圍{[0001|ffff]}的上限{[0001|1d00]}{color[0400]}調低{color[ffff]}{[0001|ffff]}……\n調成{[0001|1d00]}{color[0400]}0.10{color[ffff]}{[0001|ffff]}吧。
036	關閉設定。
037	傾斜反應的上限現在是{[0001|1d00]}0.10{[0001|ffff]}，\n也就是說……
038	……能傳達10倍靈敏度的傾斜喔。
039	只要稍微傾斜就能\n輸出高數值了。
040	把傾斜的靈敏度調高後，\n人的動作會變成怎樣呢？
041	到遊戲畫面確認看看吧。
042	試著用左右傾斜讓人移動看看。
043	如果看不見人了，\n就按下重來鍵吧。
044	現在只是稍微傾斜也能讓人移動了。
044-01	就像這樣，你可以在{color[0400]}{[0001|1d00]}範圍{[0001|ffff]}{color[ffff]}設定裡\n調整{color[0400]}{[0001|1d00]}傾斜與輸出數值的對應關係{[0001|ffff]}{color[ffff]}。
045	回到程式設計畫面吧。
046	現在只要稍微傾斜\n就能快速地移動呢！
047	接下來更改{[0001|1d00]}{color[0400]}傾斜方向{color[ffff]}{[0001|ffff]}看看吧。
048	選擇傾斜小節點。
049	打開設定。
050	傾斜方向……
051	可以在{[0001|1d00]}{color[0400]}轉動軸{color[ffff]}{[0001|ffff]}中設定。
052	轉動軸分為{[0001|1d00]}{color[0400]}X、Y、Z{color[ffff]}{[0001|ffff]}這3種。
053	傾斜動作的中心稱為軸，\n以不同的{[0001|1d00]}{color[0400]}軸作為中心轉動的動作{color[ffff]}{[0001|ffff]}\n就是傾斜方向。
054	現在的{[0001|1d00]}轉動軸{[0001|ffff]}是{[0001|1d00]}{color[0400]}Z{color[ffff]}{[0001|ffff]}，\n代表是{[0001|1d00]}{color[0400]}左右{color[ffff]}{[0001|ffff]}傾斜。
055	把{[0001|1d00]}轉動軸{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}X{color[ffff]}{[0001|ffff]}，\n就能用{[0001|1d00]}{color[0400]}前後方向{color[ffff]}{[0001|ffff]}的傾斜來操作了。
056	試看看把{[0001|1d00]}{color[0400]}轉動軸{color[ffff]}{[0001|ffff]}更改為{[0001|1d00]}{color[0400]}X{color[ffff]}{[0001|ffff]}。
057	試著想像X軸是一根鐵棒……
058	往前轉動就是X軸轉動。
059	關閉設定。
060	傾斜方向是X軸……\n變成了前後轉動……
061	試著配合傾斜方向\n讓人前後移動吧。
062	選擇配對線。
063	刪除。
064	重新連接到人小節點的{color[0400]}{[0001|1d00]}前後端口{[0001|ffff]}{color[ffff]}。
065	我要傳達前後的傾斜囉……
066	張開雙手……\n擺出X軸的姿勢！
067	好興奮喔……！
068	前後傾斜能不能讓人移動呢……
069	讓我們到遊戲畫面確認看看吧。
121	因為把轉動軸設定為{[0001|1d00]}{color[0400]}X軸{color[ffff]}{[0001|ffff]}……\n{[0001|1d00]}{color[0400]}前後傾斜{color[ffff]}{[0001|ffff]}時人就會移動了喔。
070	試看看用前後傾斜讓人移動。
071	如果看不見人了，\n就重來吧。
072	現在只要前後傾斜\n就能讓人前後移動了。
073	回到程式設計畫面。
074	前後傾斜真的讓我移動了！
075	成功用傾斜讓人\n可以前後左右移動了呢。
076	傾斜可是很深奧的喔……
077	不只是取代操控搖桿\n讓人移動……
078	還可以把傾斜當成按鍵使用，\n讓人出拳。
079	是{[0001|1d00]}{color[0400]}子彈拳{color[ffff]}{[0001|ffff]}喔！
080	子彈拳……！
118	來設計子彈拳的程式吧。
119	選擇傾斜小節點。
081	打開設定。
082	把{[0001|1d00]}轉動軸{[0001|ffff]}更改為{[0001|1d00]}{color[0400]}Y{color[ffff]}{[0001|ffff]}。
083	Y軸轉動的方式就像\n轉動汽車方向盤時的樣子。
085	把{[0001|1d00]}{color[0400]}輸出{color[ffff]}{[0001|ffff]}更改為{[0001|1d00]}{color[0400]}數位{color[ffff]}{[0001|ffff]}吧。
086	把{[0001|1d00]}輸出{[0001|ffff]}更改為{[0001|1d00]}數位{[0001|ffff]}的話，\n就只會輸出{[0001|1d00]}{color[0400]}0或1的訊號{color[ffff]}{[0001|ffff]}。
087	這樣就能做到\n像按鍵的{color[0400]}{[0001|1d00]}開關切換{[0001|ffff]}{color[ffff]}一樣輸出訊號。
088	把{[0001|1d00]}範圍{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}0.05{color[ffff]}{[0001|ffff]}到{[0001|1d00]}{color[0400]}1.00{color[ffff]}{[0001|ffff]}吧。
089	這樣只要傾斜{[0001|1d00]}0.05{[0001|ffff]}以上，\n就會輸出訊號。
090	關閉設定。
091	雖然這樣就完成了傾斜的設定……
092	但這樣轉來轉去的，\n有時候會讓人搞不清楚水平位置呢。
093	傾斜Nintendo Switch時，\n有可能會讓{[0001|1d00]}{color[0400]}基準位置逐漸偏離{color[ffff]}{[0001|ffff]}。
094	傾斜Joy-Con時，\n有可能會讓{[0001|1d00]}{color[0400]}基準位置逐漸偏離{color[ffff]}{[0001|ffff]}。
095	為了應付這種情況發生，\n我們要將程式設計成\n可以用鍵來{[0001|1d00]}{color[0400]}重置{color[ffff]}{[0001|ffff]}傾斜基準。
096	選擇{[0001|1d00]}{color[0400]}輸入{color[ffff]}{[0001|ffff]}。
097	選擇{[0001|1d00]}{color[0400]}按下按鍵{color[ffff]}{[0001|ffff]}。
098	選擇{[0001|1d00]}{color[0400]}鍵{color[ffff]}{[0001|ffff]}。
099	嗨！
101	把按鍵小節點連接到\n傾斜小節點的{[0001|1d00]}{color[0400]}Y重置端口{color[ffff]}{[0001|ffff]}。
102	這樣就能用鍵來\n重置傾斜了。
103	選擇配對線。
104	刪除。
105	把傾斜小節點連接到\n人小節點的{color[0400]}{[0001|1d00]}動作端口{[0001|ffff]}{color[ffff]}。
106	這樣子彈拳的程式\n就設計完成了。
107	到遊戲畫面確認看看吧。
108_a	首先，把Nintendo Switch{[0001|1d00]}{color[0400]}水平地拿著{color[ffff]}{[0001|ffff]}……\n再用鍵重置傾斜。
108_b	首先，把Joy-Con{[0001|1d00]}{color[0400]}水平地拿著{color[ffff]}{[0001|ffff]}……\n再用鍵重置傾斜。
109	像操控汽車方向盤一樣，\n左右轉動就能出拳。
110	向左右轉動，\n一、二！
111	成功出拳了呢。
112	回到程式設計畫面。
113	利用傾斜……\n可以讓人移動、出拳……
114	即使是{[0001|1d00]}{color[0400]}按鍵以外的操作{color[ffff]}{[0001|ffff]}也能讓遊戲動起來。
115	這就是傾斜的程式。
116	傾斜的秘密就在於{[0001|1d00]}{color[0400]}能感應動作的感應器{color[ffff]}{[0001|ffff]}。
117	歡迎你也來到\n傾斜的扭曲世界……
Guidebook_Basic.msbt
000	接下來，我會教你\n{[0001|1d00]}{color[0400]}小節點車庫的基本{color[ffff]}{[0001|ffff]}。
001	這個畫面叫作{[0001|1d00]}{color[0400]}遊戲畫面{color[ffff]}{[0001|ffff]}……
002	就跟字面的意思一樣，\n設計好的{[0001|1d00]}{color[0400]}遊戲{color[ffff]}{[0001|ffff]}會在這個畫面裡運作。
003	現在這裡有一個{[0001|1d00]}{color[0400]}人{color[ffff]}{[0001|ffff]}。
004	請你試著按下{[0001|1d00]}{color[0400]}鍵{color[ffff]}{[0001|ffff]}。
005	人跳躍了。
006	這個人為什麼會跳躍呢……？
007	我會講解其中的原理，\n帶你認識{[0001|1d00]}{color[0400]}小節點車庫的基本{color[ffff]}{[0001|ffff]}。
008	那麼，我們去遊戲的後台……\n也就是{[0001|1d00]}{color[0400]}程式設計畫面{color[ffff]}{[0001|ffff]}吧。
009	啊，是剛才遇見的\n程式設計師耶～
010	嗨！\n你叫{[0201]}對吧？
011	還請多多關照！
012	這裡是{[0001|1d00]}{color[0400]}程式設計畫面{color[ffff]}{[0001|ffff]}。
013	是我們使用小節點們\n{[0001|1d00]}{color[0400]}設計遊戲程式{color[ffff]}{[0001|ffff]}的地方。
014	我們會盡力協助你\n設計遊戲程式喔～！
015	這裡的每個小節點\n都有著各自的{color[0400]}{[0001|1d00]}職責{[0001|ffff]}{color[ffff]}。
016	我是{[0001|1d00]}{color[0400]}按鍵小節點{color[ffff]}{[0001|ffff]}，\n負責監視控制器的{[0001|1d00]}{color[0400]}按鍵{color[ffff]}{[0001|ffff]}喲！
017	我是{[0001|1d00]}{color[0400]}人小節點{color[ffff]}{[0001|ffff]}，\n負責讓{[0001|1d00]}{color[0400]}人{color[ffff]}{[0001|ffff]}出現在遊戲畫面喔。
018	剛才在遊戲畫面上看到的人，\n正是出自這個{[0001|1d00]}{color[0400]}人小節點{color[ffff]}{[0001|ffff]}之手。
019	欸嘿嘿嘿～\n要稱讚我喔！
020	人小節點會依照他在\n程式設計畫面的所在{color[0400]}{[0001|1d00]}位置{[0001|ffff]}{color[ffff]}……
021	來改變{[0001|1d00]}{color[0400]}人在遊戲畫面上出現的位置{color[ffff]}{[0001|ffff]}。
022	譬如說，把我移動到\n這個畫面的右方的話……
023	遊戲畫面上的人\n也會出現在畫面的右方！
024	來試看看吧。
025	抓住這個人小節點，\n把他移動到{[0001|1d00]}{color[0400]}藍色框框{color[ffff]}{[0001|ffff]}裡。
026	遊戲畫面會變成什麼樣子呢？
027	我們去遊戲畫面看看吧。
028	你看，人跑到比剛才更{color[0400]}{[0001|1d00]}右方{[0001|ffff]}{color[ffff]}的位置了。
029	也就是說……程式設計畫面也是\n一個{[0001|1d00]}{color[0400]}用來布置{color[ffff]}{[0001|ffff]}物件和角色的{[0001|1d00]}{color[0400]}地方{color[ffff]}{[0001|ffff]}，\n那裡的東西會出現在遊戲畫面上。
030	我們回程式設計畫面\n繼續接下來的講解吧。
031	此外，程式設計畫面還可以{[0001|1d00]}{color[0400]}捲動{color[ffff]}{[0001|ffff]}。
032	剛才是因為怕妨礙到說明，\n我才讓畫面變得無法捲動……
033_t	我已經暫時開放捲動功能了，\n請試著{[0001|1d00]}{color[0400]}用兩指點觸畫面不放{color[ffff]}{[0001|ffff]}\n並上下左右移動看看吧。
033_s	我已經暫時開放捲動功能了，\n請試著推動操控搖桿，\n{[0001|1d00]}{color[0400]}移動游標到畫面外看看{color[ffff]}{[0001|ffff]}。
033_jr	我已經暫時開放捲動功能了，\n請試著上下左右推動{color[0400]}{[0001|1d00]}操控搖桿{[0001|ffff]}{color[ffff]}看看。
033_jl	我已經暫時開放捲動功能了，\n請試著上下左右推動{color[0400]}{[0001|1d00]}操控搖桿{[0001|ffff]}{color[ffff]}看看。
033_m	我已經暫時開放捲動功能了，\n請試著{[0001|1d00]}{color[0400]}點擊左鍵不放{color[ffff]}{[0001|ffff]}\n並上下左右移動滑鼠看看。
034	你看，畫面捲動了。
035_t	接下來，請試著用兩指\n點觸畫面不放並{[0001|1d00]}{color[0400]}開合手指{color[ffff]}{[0001|ffff]}看看。
035_s	接下來，請試著{[0001|1d00]}{color[0400]}按住鍵或鍵\n並上下推動操控搖桿{color[ffff]}{[0001|ffff]}看看。
035_jr	接下來，請試著{[0001|1d00]}{color[0400]}按住鍵\n並上下推動操控搖桿{color[ffff]}{[0001|ffff]}看看。
035_jl	接下來，請試著{[0001|1d00]}{color[0400]}按住鍵\n並上下推動操控搖桿{color[ffff]}{[0001|ffff]}看看。
072	接下來，請試著{[0001|1d00]}{color[0400]}上下轉動滑鼠的滾輪{color[ffff]}{[0001|ffff]}，\n或點擊程式設計畫面下方的{color[0400]}{[0001|1d00]}－{[0001|ffff]}{color[ffff]}或{color[0400]}{[0001|1d00]}＋{[0001|ffff]}{color[ffff]}看看。
036	就像這樣……\n你可以透過這個操作縮放畫面。
037	在小節點指南裡，\n畫面的移動會影響講解，\n所以之後我都會把畫面鎖定住……
038	不過當你自己設計程式時，\n這會是個很有用的小技巧……\n可不要忘記了喔。
039	那麼，我要把畫面移動回去囉。
040	讓你久等了。
041	我們回歸正題，\n來說說{[0001|1d00]}{color[0400]}人跳躍的原理{color[ffff]}{[0001|ffff]}吧。
042	在遊戲畫面中，\n{[0001|1d00]}{color[0400]}當你按下鍵時人就會跳躍{color[ffff]}{[0001|ffff]}……
043	那是因為我……
044	還有我之間連接著{[0001|1d00]}{color[0400]}配對線{color[ffff]}{[0001|ffff]}！
045	這就是{[0001|1d00]}{color[0400]}配對線{color[ffff]}{[0001|ffff]}。
046	{[0201]}，\n你剛才也有連接配對線吧？
047	我正在監視控制器的\n{[0001|1d00]}{color[0400]}鍵是否有被按下{color[ffff]}{[0001|ffff]}……
048	然後！當鍵被按下時！\n我就會馬上{[0001|1d00]}{color[0400]}透過配對線{color[ffff]}{[0001|ffff]}\n傳送{[0001|1d00]}{color[0400]}訊號{color[ffff]}給人小節點喔{[0001|ffff]}！
049	沒錯～我正在接收訊號～
050	所謂的{[0001|1d00]}{color[0400]}訊號{color[ffff]}{[0001|ffff]}……\n你可以先簡單理解為他是\n{[0001|1d00]}{color[0400]}配對線中流動的電子信息{color[ffff]}{[0001|ffff]}。
051	然後，你仔細看看配對線\n連接在我身上的哪個地方～
052	上面寫著{[0001|1d00]}{color[0400]}跳躍{color[ffff]}{[0001|ffff]}對吧？
053	當這個{color[0400]}{[0001|1d00]}跳躍端口{[0001|ffff]}{color[ffff]}接收到{[0001|1d00]}{color[0400]}訊號{color[ffff]}{[0001|ffff]}時，\n我就會讓遊戲畫面中的人{[0001|1d00]}{color[0400]}跳躍{color[ffff]}{[0001|ffff]}。
054	就是這樣！\n多虧了我們的努力，\n才能讓人在按下鍵時跳躍喔！
055	我們來複習一下。
056	{[0001|1d00]}{color[0400]}按鍵小節點{color[ffff]}{[0001|ffff]}會\n監視控制器的{[0001|1d00]}{color[0400]}鍵{color[ffff]}{[0001|ffff]}\n是否有被按下。
057	當鍵被按下時，\n按鍵小節點就會\n透過{[0001|1d00]}{color[0400]}配對線{color[ffff]}{[0001|ffff]}傳送{[0001|1d00]}{color[0400]}訊號{color[ffff]}{[0001|ffff]}。
058	而當人小節點身上的\n{color[0400]}{[0001|1d00]}跳躍端口{[0001|ffff]}{color[ffff]}接收到訊號時，\n他就會讓人跳躍……
059	弄清楚原理後，\n就會發現其實很簡單吧？
059-00	那麼，請你試著{[0001|1d00]}{color[0400]}解除配對線{color[ffff]}{[0001|ffff]}，\n看看他們會變成什麼樣子吧。
059-01	選擇配對線……
059-02	按下這個按鍵\n來刪除配對線。
059-03	好，去遊戲畫面看看\n會變成什麼樣子吧。
059-04	試著按下{[0001|1d00]}{color[0400]}鍵{color[ffff]}{[0001|ffff]}。
059-05	嗯……\n怎麼按都不會跳躍呢。
059-06	解除配對線後，\n就算按下鍵，\n人也不會跳躍。
059-07	去程式設計畫面吧。
059-08	到底發生什麼事？沒有了配對線，\n我就不能傳送訊號給人小節點喲！
059-09	沒錯，在沒有連接配對線的情況下，\n就算我們按下鍵，按鍵小節點的\n{[0001|1d00]}{color[0400]}訊號也無法傳送到{color[ffff]}{[0001|ffff]}人小節點那裡去。
059-10	所以按下鍵後人也不會跳躍。
059-11	那麼，請你用配對線重新連接\n{color[0400]}{[0001|1d00]}按鍵小節點{[0001|ffff]}{color[ffff]}和{color[0400]}{[0001|1d00]}人小節點的跳躍端口{[0001|ffff]}{color[ffff]}。
059-12	哇～！\n這樣我又可以接收到\n按鍵小節點的訊號了！
060	在小節點車庫裡，\n你可以像這樣{[0001|1d00]}{color[0400]}透過連接\n小節點們{color[ffff]}{[0001|ffff]}來設計遊戲程式。
061	這可是最基本的知識，\n你要記住喔。
062	那麼……\n我們再去遊戲畫面確認一次吧。
063	請按下{[0001|1d00]}{color[0400]}鍵{color[ffff]}{[0001|ffff]}讓人跳躍。
064	現在小節點們\n正在後台工作……\n維持著程式的運作。
065	……只要明白了箇中原理，\n看待事物的角度也會有所不同。
065-01	……這正是程式設計的有趣之處……
066	……那麼，\n我們去程式設計畫面吧。
067	{[0201]}！\n如何？有稍微了解我們一些了嗎？
068	以後你在設計遊戲程式時，\n應該也會經常用到我們喔……
069	之後也要請你多多關照囉！
070	之後也要請你多多關照啦！
Guidebook_BreakAndRetry.msbt
000	……你好。
001	遊戲畫面上可以看到\n{[0001|1d00]}{color[0400]}人{color[ffff]}{[0001|ffff]}和{[0001|1d00]}{color[0400]}立方體{color[ffff]}{[0001|ffff]}。
002	你可以用{[0001|1d00]}{color[0400]}操控搖桿{color[ffff]}{[0001|ffff]}移動人。\n試著讓人接觸{[0001|1d00]}{color[0400]}立方體{color[ffff]}{[0001|ffff]}，將他{[0001|1d00]}{color[0400]}破壞{color[ffff]}{[0001|ffff]}吧。
004	{[0001|1d00]}{color[0400]}立方體{color[ffff]}{[0001|ffff]}損壞後……\n過一陣子就會自動{[0001|1d00]}{color[0400]}重來{color[ffff]}{[0001|ffff]}。
005	只要{[0001|1d00]}{color[0400]}破壞立方體{color[ffff]}{[0001|ffff]}，\n遊戲就會{[0001|1d00]}{color[0400]}重來{color[ffff]}{[0001|ffff]}……
008	這就是本次\n要解說的程式。
009	到{[0001|1d00]}{color[0400]}程式設計畫面{color[ffff]}{[0001|ffff]}去吧。
010	哎呀～！\n這不是{[0201]}嗎～！
011	怎麼啦，你找我們有事嗎？
012	原來如此！\n你想了解{[0001|1d00]}{color[0400]}立方體損壞後就會重來{color[ffff]}{[0001|ffff]}的程式啊！
013	……這個程式很難耶，\n你聽了也不會懂吧……
014	喂喂！才沒那回事！\n{[0201]}這麼厲害，一定能懂的！
015	……你說的對。\n{[0201]}的話，\n應該沒問題……
016	我說了很失禮的話呢……\n啊啊……\n真想重說一遍……
017	好，\n就讓我好好教你一番。
018	……他們好像願意教我們。
019	那麼，\n就先跟你介紹這個程式的全貌！
020	首先是我！\n{[0001|1d00]}{color[0400]}物件損壞時小節點{color[ffff]}{[0001|ffff]}！
021	我的作用是……\n{[0001|1d00]}{color[0400]}當立方體損壞時{color[ffff]}{[0001|ffff]}，\n就會輸出{[0001|1d00]}{color[0400]}訊號{color[ffff]}{[0001|ffff]}。
022	如你所見，我是{[0001|1d00]}{color[0400]}計時器小節點{color[ffff]}{[0001|ffff]}。
023	我接收到{[0001|1d00]}{color[0400]}訊號{color[ffff]}{[0001|ffff]}後，\n{[0001|1d00]}{color[0400]}會先等1秒{color[ffff]}{[0001|ffff]}，\n再把{[0001|1d00]}{color[0400]}訊號{color[ffff]}{[0001|ffff]}傳送給重來小節點。
024	……我是{[0001|1d00]}{color[0400]}重來小節點{color[ffff]}{[0001|ffff]}。
025	我接收到{[0001|1d00]}{color[0400]}訊號{color[ffff]}{[0001|ffff]}後，\n就會{[0001|1d00]}{color[0400]}讓遊戲重來{color[ffff]}{[0001|ffff]}。\n……就是這樣。
026	{[0001|1d00]}{color[0400]}物件損壞時小節點{color[ffff]}{[0001|ffff]}、\n{[0001|1d00]}{color[0400]}計時器小節點{color[ffff]}{[0001|ffff]}和\n{[0001|1d00]}{color[0400]}重來小節點{color[ffff]}{[0001|ffff]}……
027	{[0001|1d00]}{color[0400]}3種小節點{color[ffff]}{[0001|ffff]}\n依序完成他們的工作。
028	怎麼樣？\n原理很簡單吧！
029	那麼，\n接下來就把我們的工作內容，\n說明得更清楚一點吧！
030	首先是我！\n{[0001|1d00]}{color[0400]}物件損壞時小節點{color[ffff]}{[0001|ffff]}……
031	如果遊戲畫面中{[0001|1d00]}{color[0400]}有物件損壞{color[ffff]}{[0001|ffff]}，\n我就會傳送{[0001|1d00]}{color[0400]}訊號{color[ffff]}{[0001|ffff]}給其他小節點，\n讓他們知道這件事！
033	透過這條{[0001|1d00]}{color[0400]}配對線{color[ffff]}{[0001|ffff]}\n將{[0001|1d00]}{color[0400]}訊號{color[ffff]}{[0001|ffff]}傳送給其他小節點。
034	這裡需要注意的是……\n如果{[0001|1d00]}{color[0400]}我正在確認的物件{color[ffff]}{[0001|ffff]}沒有損壞，\n我就不會輸出訊號！
035	至於你想要我確認的物件……\n可以從我的{[0001|1d00]}{color[0400]}設定畫面{color[ffff]}{[0001|ffff]}中選擇！
036	選擇{[0001|1d00]}{color[0400]}物件損壞時小節點{color[ffff]}{[0001|ffff]}。
037	打開設定畫面……
038	試著按下{[0001|1d00]}{color[0400]}要確認什麼？{color[ffff]}{[0001|ffff]}。
039	在這裡可以選擇要確認什麼……\n也就是選擇{[0001|1d00]}{color[0400]}什麼物件損壞時{color[ffff]}{[0001|ffff]}會輸出訊號。
040	現在選擇的是{[0001|1d00]}{color[0400]}立方體{color[ffff]}{[0001|ffff]}。
041	試著把{[0001|1d00]}{color[0400]}立方體{color[ffff]}{[0001|ffff]}的選項設定為{[0001|1d00]}{color[0400]}關閉{color[ffff]}{[0001|ffff]}。
042	如此一來，就會變成\n{[0001|1d00]}{color[0400]}沒有物件要確認{color[ffff]}{[0001|ffff]}的狀態。
043	關閉這個畫面。
044	關閉設定畫面。
045	那麼，\n在{[0001|1d00]}{color[0400]}遊戲畫面{color[ffff]}{[0001|ffff]}中確認看看吧。
046	再次用{[0001|1d00]}{color[0400]}操控搖桿{color[ffff]}{[0001|ffff]}移動人，\n破壞{[0001|1d00]}{color[0400]}立方體{color[ffff]}{[0001|ffff]}。
047	……遊戲變得不會{[0001|1d00]}{color[0400]}重來{color[ffff]}{[0001|ffff]}了。
051	回到{[0001|1d00]}{color[0400]}程式設計畫面{color[ffff]}{[0001|ffff]}吧。
052	怎麼樣？\n遊戲沒有重來吧？
053	有這樣的結果也很正常。\n因為我{[0001|1d00]}{color[0400]}沒有在確認損壞的物件{color[ffff]}{[0001|ffff]}呀～
123	即使有立方體損壞，\n我也不會發出{[0001|1d00]}{color[0400]}訊號{color[ffff]}{[0001|ffff]}……
122	{[0001|1d00]}{color[0400]}重來小節點{color[ffff]}{[0001|ffff]}沒有收到訊號，\n遊戲自然也就不會重來囉！
054	好寂寞啊……\n我最喜歡的就是{[0001|1d00]}{color[0400]}物件損壞的瞬間{color[ffff]}{[0001|ffff]}啊……
055	{[0201]}，\n你可以再變更一次我的設定嗎？
056	那就再選擇他一次吧。
057	打開設定畫面。
058	打開{[0001|1d00]}{color[0400]}要確認什麼？{color[ffff]}{[0001|ffff]}的畫面。
059	這次把{[0001|1d00]}{color[0400]}球體{color[ffff]}{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}開啟{color[ffff]}{[0001|ffff]}。
060	關閉這個畫面。
061	按下關閉鍵。
115	這樣就能確認到{[0001|1d00]}{color[0400]}球體{color[ffff]}{[0001|ffff]}是否損壞……\n……不過，遊戲裡並沒有{[0001|1d00]}{color[0400]}球體{color[ffff]}{[0001|ffff]}。
116	讓{[0001|1d00]}{color[0400]}球體物件小節點{color[ffff]}{[0001|ffff]}登場吧。
119	……喲。\n我是{[0001|1d00]}{color[0400]}球體{color[ffff]}{[0001|ffff]}。
062	到{[0001|1d00]}{color[0400]}遊戲畫面{color[ffff]}{[0001|ffff]}去吧。
063	用{[0001|1d00]}{color[0400]}操控搖桿{color[ffff]}{[0001|ffff]}移動人，\n將{[0001|1d00]}{color[0400]}球體{color[ffff]}{[0001|ffff]}破壞。
065	因為現在確認的是\n{[0001|1d00]}{color[0400]}球體有沒有損壞{color[ffff]}{[0001|ffff]}……
066	所以{[0001|1d00]}{color[0400]}球體損壞的時候{color[ffff]}{[0001|ffff]}，\n遊戲就會重來。
068	但小節點{[0001|1d00]}{color[0400]}沒有在確認右邊的立方體{color[ffff]}{[0001|ffff]}，\n所以即使破壞他，{[0001|1d00]}{color[0400]}遊戲也不會重來{color[ffff]}{[0001|ffff]}。
069	如果你有興趣的話，就確認看看吧。
070	來，回到{[0001|1d00]}{color[0400]}程式設計畫面{color[ffff]}{[0001|ffff]}吧。
071	歡迎回來！\n你有確認到遊戲{[0001|1d00]}{color[0400]}重來{color[ffff]}{[0001|ffff]}的樣子吧！
072	能看到{[0001|1d00]}{color[0400]}球體{color[ffff]}{[0001|ffff]}損壞的瞬間，\n我也很滿足喔！
073	想要{[0001|1d00]}{color[0400]}在某個物件損壞時{color[ffff]}{[0001|ffff]}，\n{[0001|1d00]}{color[0400]}讓某件事情發生的話{color[ffff]}{[0001|ffff]}，\n就派我上場吧。
074	……咳咳。
075	還沒輪到我嗎？\n好像已經超出設定的時間了……
076	好好好，對不起啦。\n接下來就交棒給你囉。
121	嗯。\n那我就長話短說吧。
077	我的名字是{[0001|1d00]}{color[0400]}計時器小節點{color[ffff]}{[0001|ffff]}。
078	我的工作是\n{[0001|1d00]}{color[0400]}依照設定好的時間等待{color[ffff]}{[0001|ffff]}。
079	就這樣。
080	等一下、等一下。\n這可是難得的機會耶！！\n你也說得清楚一點嘛。
081	你還是……\n重新說明一下比較好吧……
082	唔……真拿你沒辦法。\n那我就破例為你詳細地解說一下吧。
083	我的任務是{[0001|1d00]}{color[0400]}在接收到訊號後{color[ffff]}{[0001|ffff]}，\n{[0001|1d00]}{color[0400]}把訊號傳送給別的小節點{color[ffff]}{[0001|ffff]}。
084	只不過在傳送訊號之前，\n要{[0001|1d00]}{color[0400]}等待一段設定好的時間{color[ffff]}{[0001|ffff]}。
085	{[0201]}，\n你可以來看看{[0001|1d00]}{color[0400]}設定時間{color[ffff]}{[0001|ffff]}的地方。
086	選擇{[0001|1d00]}{color[0400]}計時器小節點{color[ffff]}{[0001|ffff]}。
087	打開設定畫面。
088	這裡的{[0001|1d00]}{color[0400]}在幾秒後輸出{color[ffff]}{[0001|ffff]}，\n可以設定要等待多久再輸出訊號。
089	現在是{[0001|1d00]}1.00{[0001|ffff]}秒。
090	試著把這裡\n改成{[0001|1d00]}{color[0400]}5.00{color[ffff]}{[0001|ffff]}看看。
091	關閉設定畫面。
092	唔，\n設定成{[0001|1d00]}5.00{[0001|ffff]}了嗎……
093	好吧，凡事都得試過才知道。\n你就確認看看吧。
094	……去{[0001|1d00]}{color[0400]}遊戲畫面{color[ffff]}{[0001|ffff]}看看吧。
095	試著破壞左邊的{[0001|1d00]}{color[0400]}球體{color[ffff]}{[0001|ffff]}。
096	……
097	呼～
098	因為計時器被設定為{[0001|1d00]}5.00{[0001|ffff]}秒，\n所以花了一些時間才讓遊戲重來……
099	這樣你應該就能了解\n計時器小節點的作用了吧？
100	那麼，\n回到{[0001|1d00]}{color[0400]}程式設計畫面{color[ffff]}{[0001|ffff]}吧。
101	你明白我的工作了吧？
102	想要{[0001|1d00]}{color[0400]}隔一段時間後讓某件事發生{color[ffff]}{[0001|ffff]}時，\n就叫上我吧。
103	那麼……\n最後是我……{[0001|1d00]}{color[0400]}重來小節點{color[ffff]}{[0001|ffff]}。
104	我的工作是\n接收到{[0001|1d00]}{color[0400]}訊號{color[ffff]}{[0001|ffff]}後，\n{[0001|1d00]}{color[0400]}讓遊戲重來{color[ffff]}{[0001|ffff]}。
105	……就這樣。
106	啊啊……這工作實在太不起眼了。\n我好想重生成別的小節點，\n負責一些更重要的工作……
107	喂喂！\n你可是很有用的啊，\n給我振作一點！
108	沒有{[0001|1d00]}{color[0400]}你{color[ffff]}{[0001|ffff]}的話，\n遊戲就不能{[0001|1d00]}{color[0400]}重複遊玩{color[ffff]}{[0001|ffff]}了啊！
109	你得好好理解一下自己的重要性。
110	……嗯。\n謝謝你們。
111	所以說，{[0201]}……\n由我們3人合力建構出的……
112	{[0001|1d00]}{color[0400]}有物件損壞時讓遊戲重來的系統{color[ffff]}{[0001|ffff]}，\n你都清楚了嗎？
113	我們能在各種場合起到很大的作用。
114	……記得用看看喔。
Guidebook_BreakCounter.msbt
00.00.Alice	……你好，\n{[0201]}。
00.01.Alice	遊戲畫面上可以看到{[0001|1d00]}{color[0400]}人{color[ffff]}{[0001|ffff]}，\n他的右邊放著{[0001|1d00]}{color[0400]}附數字物件{color[ffff]}{[0001|ffff]}。
00.13.Alice	試著用{color[0400]}{[0001|1d00]}操控搖桿左右移動{[0001|ffff]}{color[ffff]}人，\n然後按下{color[0400]}{[0001|1d00]}鍵{[0001|ffff]}{color[ffff]}向附數字物件{[0001|1d00]}{color[0400]}出拳{color[ffff]}{[0001|ffff]}。
00.14.Alice	……一出拳，\n數字就從0變成1了。
00.15.Alice	讓我們到程式設計畫面裡，\n去看看其中是什麼原理吧。
01.00.Number	你好，\n{[0201]}。
01.00-01.Number	你想知道為什麼\n人向附數字物件{color[0400]}{[0001|1d00]}一出拳，\n數字就會從0變成1{[0001|ffff]}{color[ffff]}，對吧！
01.01.Number	附數字物件上顯示的數字，\n是{[0001|1d00]}{color[0400]}AND小節點{color[ffff]}{[0001|ffff]}輸出過來的。
01.02.And	哎呀呀！\n這不是{[0201]}嗎！
01.03.And	我只有在兩邊的輸入都沒問題的時候，\n才會輸出1.00。
01.03-01.And	而輸入訊號給我的小節點是……
01.04.Button	嗨！\n第一個是我！
01.05.Button	只要按下{color[0400]}{[0001|1d00]}鍵{[0001|ffff]}{color[ffff]}，\n我就會傳送訊號給AND小節點喲！
01.08.Button	同時……\n我也會傳送訊號給人小節點！
01.09.Human	沒錯！\n我請他將訊號\n傳送到我的{color[0400]}{[0001|1d00]}動作端口{[0001|ffff]}{color[ffff]}。
01.10.Human	收到訊號後，\n我就會做{color[0400]}{[0001|1d00]}出拳{[0001|ffff]}{color[ffff]}的動作。
01.12.Human	喝！哈！
01.13.Sensor	咿……！
01.15.Sensor	真是的～\n不要嚇我啦～
01.16.Sensor	啊……\n我是傳送訊號給AND小節點的\n另一個小節點。
01.17.Sensor	我和人小節點{color[0400]}{[0001|1d00]}連接{[0001|ffff]}{color[ffff]}在一起……\n緊貼在{color[0400]}{[0001|1d00]}人的正面{[0001|ffff]}{color[ffff]}，\n確認人{color[0400]}{[0001|1d00]}有沒有接觸到立方體{[0001|ffff]}{color[ffff]}。
01.17-01.Sensor	在遊戲畫面上，\n人的前面有一個白色的框框對吧？
01.17-02.Sensor	那個框框{[0001|1d00]}{color[0400]}接觸到立方體{color[ffff]}{[0001|ffff]}的時候，\n我就會輸出訊號。
01.18.Number	因為我的{[0001|1d00]}物件的形狀{[0001|ffff]}是{[0001|1d00]}{color[0400]}立方體{color[ffff]}{[0001|ffff]}……
01.21.Sensor	{[0001|1d00]}{color[0400]}接觸到附數字物件時{color[ffff]}{[0001|ffff]}，\n我就會傳送訊號給AND小節點。
01.22.And	然後，\n上面的輸入……就沒問題了！
01.26.Button	而我也會在\n按下{color[0400]}{[0001|1d00]}鍵{[0001|ffff]}{color[ffff]}的時候傳送訊號喲！
01.27.Sensor	也就是說，\n當我{[0001|1d00]}{color[0400]}接觸到附數字物件時{color[ffff]}{[0001|ffff]}\n按下{color[0400]}{[0001|1d00]}鍵{[0001|ffff]}{color[ffff]}的話……
01.28.And	上面沒問題！下面沒問題！\n輸出1.00！
01.28-01.Number	就這樣，我接收到1.00的訊號，\n數字也從0變成了1。
01.29.Human	同一時間……\n人也做出了{[0001|1d00]}{color[0400]}出拳的動作{color[ffff]}{[0001|ffff]}……
01.30.Number	所以看起來才會像是\n因為人向附數字物件出拳，\n數字才從{[0001|1d00]}{color[0400]}0變成了1{color[ffff]}{[0001|ffff]}。
01.31.Number	這樣你清楚了嗎？
01.33.Button	不過，拳頭接觸到物件時\n只會改變物件顯示的數字……\n這樣總感覺不是很過癮啊！
01.34.Human	畢竟是揮拳嘛，\n還是會想要破壞物件呢！
01.35.Number	這樣的話，只要把附數字物件\n設計為{[0001|1d00]}{color[0400]}接觸到拳頭時會損壞{color[ffff]}{[0001|ffff]}，\n看起來應該就會像是被拳頭打壞的囉。
01.37.And	嗯嗯！\n這需要{[0001|1d00]}{color[0400]}有能力破壞物件{color[ffff]}{[0001|ffff]}的\n小節點幫忙呢！
01.38.Alice	那就叫{[0001|1d00]}{color[0400]}破壞物件小節點{color[ffff]}{[0001|ffff]}出來吧。
01.39.Destroy	呵呵呵……\n你說……你想要破壞{[0001|1d00]}{color[0400]}立方體{color[ffff]}{[0001|ffff]}？
01.40.Destroy	那麼我就如你所願……\n破壞掉{color[0400]}{[0001|1d00]}接觸到我的立方體{[0001|ffff]}{color[ffff]}吧……\n呵呵呵……
01.41.Sensor	咿……\n破壞物件小節點，\n你{[0001|1d00]}{color[0400]}只能在人出拳的時候{color[ffff]}{[0001|ffff]}破壞喔！
01.43.Destroy	呵呵呵……真拿你沒辦法……\n那麼，把那個條件傳送給我吧……
01.44.Destroy	動作不快一點的話……\n我可能就會把他破壞掉了……\n呵呵呵……
01.45.Alice	那我們就趕快來設計\n{[0001|1d00]}{color[0400]}破壞物件小節點的發動條件{color[ffff]}{[0001|ffff]}吧。
01.46.Alice	把配對線從{color[0400]}{[0001|1d00]}AND小節點的輸出端{[0001|ffff]}{color[ffff]}\n連接到{color[0400]}{[0001|1d00]}破壞物件小節點的破壞端口{[0001|ffff]}{color[ffff]}。
01.47.Alice	這樣{color[0400]}{[0001|1d00]}當拳頭接觸到立方體時{[0001|ffff]}{color[ffff]}，\n附數字物件就會損壞了。
01.48.Alice	那麼，\n我們到遊戲畫面確認看看吧。
02.02.Alice	試著用{color[0400]}{[0001|1d00]}操控搖桿左右移動{[0001|ffff]}{color[ffff]}人，\n然後按下{color[0400]}{[0001|1d00]}鍵{[0001|ffff]}{color[ffff]}向附數字物件出拳。
02.03.Alice	立方體損壞了。
02.04.Alice	雖然實際上破壞立方體的\n是破壞物件小節點……
02.05.Alice	但是看起來就像人出拳\n破壞了附數字物件……對吧？
02.06.Alice	按下{color[0400]}{[0001|1d00]}重來{[0001|ffff]}{color[ffff]}，\n再試一次看看。
02.07.00.Alice	當接觸到拳頭時，\n附數字物件就會損壞。
02.07.01.Alice	那麼，我們回去程式設計畫面吧。
03.00.Destroy	呵呵呵……\n壞得真徹底呢……
03.03.Button	可是……\n才揮一拳就壞掉，\n感覺太沒意思了喲！
03.04.Sensor	破壞物件小節點，\n你有辦法讓自己\n多揮個幾拳才破壞物件嗎？
03.05.Destroy	……\n你的意思……是叫我……\n……手下留情嗎？
03.05-01.Sensor	咿～！
03.06.Destroy	是破壞還是不破壞……\n你自己選一個吧……呵呵。
03.07.Number	那麼，等立方體{color[0400]}{[0001|1d00]}接觸到幾拳後{[0001|ffff]}{color[ffff]}，\n再傳送訊號給破壞物件小節點怎麼樣？
03.08.And	哦！這樣的話只要讓我計算\n{[0001|1d00]}{color[0400]}訊號輸出的次數{color[ffff]}{[0001|ffff]}就可以了吧！
03.09.Alice	那我們就把程式設計為\n{[0001|1d00]}{color[0400]}出拳3次就會損壞{color[ffff]}{[0001|ffff]}吧。
03.10.Alice	先選擇由AND小節點連接到\n破壞物件小節點的配對線……
03.11.Alice	刪除這條配對線。
03.12.Alice	接著選擇連接著\n附數字物件小節點的配對線……
03.13.Alice	把他刪除掉。
03.14.Alice	說到計算次數……\n就得請出{[0001|1d00]}{color[0400]}計數器小節點{color[ffff]}{[0001|ffff]}了。
03.15.Counter	要數數的話，\n請交給我吧。
03.15-01.Counter	到目前為止，\n破壞物件小節點\n一共說了17次「呵」。
03.15-02.Destroy	……呵呵\n我看……\n……就選你吧？
03.15-03.Sensor	咿～～！
03.16.Counter	要計算AND小節點\n{color[0400]}{[0001|1d00]}輸出1.00的次數{[0001|ffff]}{color[ffff]}啊。\n了解！
03.16-01.Alice	也就是說……\n他會幫我們計算\n{[0001|1d00]}{color[0400]}人向附數字物件出拳的次數{color[ffff]}{[0001|ffff]}。
03.17.Number	我來顯示計數器小節點的數值吧。
03.22.Alice	那麼，接著我們來設計程式，\n讓{color[0400]}{[0001|1d00]}計數器小節點的輸出和3做比較{[0001|ffff]}{color[ffff]}吧。
03.23.Alice	叫出{[0001|1d00]}{color[0400]}常數小節點{color[ffff]}{[0001|ffff]}和\n{[0001|1d00]}{color[0400]}比較小節點{color[ffff]}{[0001|ffff]}……
03.24.Constant	我是常數小節點。\n數值是3.00對吧，我知道了。\n我會輸出3.00。
03.25.Compare	嗨，{[0201]}。\n我是比較小節點！
03.26.Compare	把常數小節點的輸出……
03.27.Compare	還有計數器小節點的輸出\n連接到比較小節點……
03.28.Compare	他們是{color[0400]}{[0001|1d00]}一樣{[0001|ffff]}{color[ffff]}的嗎？\n真令人在意！你說對不對？
03.28-01.Compare	如果{color[0400]}{[0001|1d00]}一樣{[0001|ffff]}{color[ffff]}的話，\n我就會輸出訊號！
03.28-01.Alice	也就是說，{[0001|1d00]}{color[0400]}向附數字物件出拳3次後{color[ffff]}{[0001|ffff]}，\n比較小節點就會輸出訊號。
03.29.Alice	最後，把{color[0400]}{[0001|1d00]}比較小節點的輸出端{[0001|ffff]}{color[ffff]}\n連接到{color[0400]}{[0001|1d00]}破壞物件小節點的破壞端口{[0001|ffff]}{color[ffff]}吧。
03.30.Alice	這樣一來，\n{[0001|1d00]}{color[0400]}出拳3次就會損壞{color[ffff]}{[0001|ffff]}的程式就完成了。
03.31.Alice	到遊戲畫面確認一下吧。
04.00.Alice	附數字物件上顯示著\n{[0001|1d00]}{color[0400]}接觸到拳頭的次數{color[ffff]}{[0001|ffff]}。
04.01.Alice	試著用{color[0400]}{[0001|1d00]}操控搖桿左右移動{[0001|ffff]}{color[ffff]}人，\n然後按下{color[0400]}{[0001|1d00]}鍵{[0001|ffff]}{color[ffff]}向附數字物件出拳{[0001|1d00]}{color[0400]}3次{color[ffff]}{[0001|ffff]}。
04.02.Alice	立方體在第3次出拳時損壞了。
04.03.Alice	試著在腦中想像一下，\n在我們剛剛設計的程式中，\n小節點們是怎麼運作的……
04.04.Alice	然後按下{color[0400]}{[0001|1d00]}重來{[0001|ffff]}{color[ffff]}，\n再試一次看看。
04.05.00.Alice	當接觸到第3拳時，\n附數字物件就會損壞。
04.05.01.Alice	那麼，我們回去程式設計畫面吧。
05.00.Number	如何？\n我看起來……\n變得比較堅固了吧。
05.02.Alice	……雖然這次的講解\n對你來說可能有些困難……
05.03.Alice	不過……這樣一來你應該可以了解\n出拳3次後物件就會損壞的程式原理了吧。
05.04.Sensor	把接觸感應器\n連接在人小節點的正面……
05.07.And	如果用來出拳的輸入和\n接觸感應器小節點的反應\n兩邊都沒問題的話，就輸出訊號……
05.08.Counter	而我會計算AND小節點\n輸出的訊號次數……
05.09.Constant	如果等於3.00\n物件就會損壞！
05.10.Number	意思就是說，\n如果接觸到3次拳頭，\n破壞物件小節點就會破壞物件。
05.12.Alice	只要將幾個小節點組合起來，\n就能做出這麼複雜的程式結構。
05.13.Alice	那麼今天就講到這裡。
05.14.Human	再見囉。
05.15.Destroy	呵呵……\n呵呵呵呵……\n……呵呵呵呵呵呵。
05.16.Counter	加上剛才說的，\n你總共說了31次「呵」。
Guidebook_Calculation.msbt
002	嗯……\n一個向右移動的箱子……
003	這個箱子被設計成\n以{color[0400]}{[0001|1d00]}秒速1.00m{[0001|ffff]}{color[ffff]}的速度移動。
004	這次我們要試著用{color[0400]}{[0001|1d00]}計算{[0001|ffff]}{color[ffff]}的方式，\n改變這個箱子的移動速度。
005	走吧，到程式設計畫面去。
006	你好！\n{[0201]}！\n你是來運動的嗎！？
009	我叫{[0001|1d00]}{color[0400]}常數小節點{color[ffff]}{[0001|ffff]}。\n接收到{color[0400]}{[0001|1d00]}1.00{[0001|ffff]}{color[ffff]}、1.00。
009-001	正在向{[0001|1d00]}{color[0400]}可移動物件小節點{color[ffff]}{[0001|ffff]}\n傳送1.00。
010	因為常數小節點持續向\n可移動物件小節點輸入{[0001|1d00]}{color[0400]}1.00{color[ffff]}{[0001|ffff]}……\n箱子才會以{[0001|1d00]}{color[0400]}秒速1.00m{color[ffff]}{[0001|ffff]}的速度移動。
011	難得來運動，\n{[0201]}也覺得\n這種速度不夠過癮吧！？
011-01	再快一點！\n把速度調快一點！！
011-02	雖然我們也可以直接調高\n常數小節點的數值來加快速度……
011-03	但這次就來試看看用{[0001|1d00]}{color[0400]}計算小節點{color[ffff]}{[0001|ffff]}來\n改變輸入到可移動物件小節點的數值吧。
011-0301	首先，選擇連接常數小節點和\n可移動物件小節點的配對線……
011-0302	刪除。
011-04	然後，\n叫出{[0001|1d00]}{color[0400]}計算小節點{color[ffff]}{[0001|ffff]}。
020	我是{color[0400]}{[0001|1d00]}計算小節點{[0001|ffff]}{color[ffff]}。
021	我搭載了四則運算裝置，\n是一台高性能的計算機。
022	四則運算……\n指的就是{[0001|1d00]}{color[0400]}＋ － × ÷{color[ffff]}{[0001|ffff]}。
023	我有{color[0400]}{[0001|1d00]}2個{[0001|ffff]}{color[ffff]}輸入端……
024	只要從端口輸入數值給我……
025	我就會利用2個數值進行計算。
026	計算結果會從這邊輸出。
028	我只需要一瞬間\n就能完成計算。
029	……因為我是高性能計算機。
030	也就是說，你可以\n{color[0400]}{[0001|1d00]}用2個數值進行計算{[0001|ffff]}{color[ffff]}囉。
031	沒錯。
032	現在我的計算方法……\n被設定為{color[0400]}{[0001|1d00]}加法{[0001|ffff]}{color[ffff]}。
033	那麼，我們就輸入\n2個常數給計算小節點，\n讓他用{[0001|1d00]}{color[0400]}加法{color[ffff]}{[0001|ffff]}算看看吧。
033-03	我再叫出1個常數小節點。
033-04	你好，\n我會輸出4.00、4.00。
034	把上面的常數小節點\n連接到{[0001|1d00]}{color[0400]}上面的輸入端{color[ffff]}{[0001|ffff]}。
035	輸出1.00。\n是1.00喔。
036	把下面的常數小節點\n連接到{[0001|1d00]}{color[0400]}下面的輸入端{color[ffff]}{[0001|ffff]}。
037	輸出4.00。\n是4.00喔。
038	偵測到輸入了2個數值。\n開始計算。
039	1.00 + 4.00 = {color[0400]}{[0001|1d00]}5.00{[0001|ffff]}{color[ffff]}……
040	把計算小節點的輸出\n連接到可移動物件小節點的{[0001|1d00]}{color[0400]}X端口{color[ffff]}{[0001|ffff]}。
042	這樣一來，\n{color[0400]}{[0001|1d00]}2個數字加起來的結果{[0001|ffff]}{color[ffff]}，\n就會{color[0400]}{[0001|1d00]}變成物件的移動速度{[0001|ffff]}{color[ffff]}。
043	到遊戲畫面確認看看\n變成什麼樣了吧？
044	……速度變得比剛才快了。
045	想再看一次的話，\n就按下{[0001|1d00]}{color[0400]}重來{color[ffff]}{[0001|ffff]}吧。
046	1.00 + 4.00 = 5.00……\n所以箱子是以\n{color[0400]}{[0001|1d00]}秒速5.00m{[0001|ffff]}{color[ffff]}的速度移動。
047	來試看看其他的計算方法吧。
048	哎呀～！盡情地奔跑果然很舒服呢！！
048-01	{[0201]}，\n你也一起來奔跑吧！！
049	算完加法……\n接著來算{[0001|1d00]}{color[0400]}減法{color[ffff]}{[0001|ffff]}吧。
050	可以從我的設定\n更改{color[0400]}{[0001|1d00]}計算方法{[0001|ffff]}{color[ffff]}。
051	選擇計算小節點。
052	選擇設定。
053	{[0001|1d00]}計算方法共有{[0001|ffff]}{color[0400]}4種{color[ffff]}，\n分別為{[0001|1d00]}{color[0400]}＋ － × ÷{color[ffff]}{[0001|ffff]}。
054	試著把{[0001|1d00]}計算方法{[0001|ffff]}更改為{[0001|1d00]}{color[0400]}－{color[ffff]}{[0001|ffff]}。
055	關閉設定。
056	將以{[0001|1d00]}{color[0400]}減法{color[ffff]}{[0001|ffff]}進行計算。
057	1.00 - 4.00 = {[0001|1d00]}{color[0400]}-3.00{color[ffff]}{[0001|ffff]}……
058	也就是說，計算結果的{[0001|1d00]}{color[0400]}-3.00{color[ffff]}{[0001|ffff]}\n會被輸入到可移動物件小節點。
059	輸入{[0001|1d00]}{color[0400]}負數{color[ffff]}{[0001|ffff]}時箱子會如何動作，\n我們到遊戲畫面確認看看吧。
060	……箱子向左邊移動了。
061	現在的算式是……\n1.00 - 4.00 = {[0001|1d00]}{color[0400]}-3.00{color[ffff]}{[0001|ffff]}。
062	箱子變成以{color[0400]}{[0001|1d00]}秒速-3.00m{[0001|ffff]}{color[ffff]}的速度移動了。
063	速度是{[0001|1d00]}{color[0400]}負數{color[ffff]}{[0001|ffff]}時，\n物件會向{[0001|1d00]}{color[0400]}反方向{color[ffff]}{[0001|ffff]}移動喔。
064	回到程式設計畫面吧。
064-01	哎呀～！\n向反方向跑的感覺也很新鮮呢～！
065	到目前為止，\n我們都是用常數小節點來計算……
066	接下來，試著以{color[0400]}{[0001|1d00]}操控搖桿輸入{[0001|ffff]}{color[ffff]}的\n計算方法來移動物件吧。
067	換掉常數小節點……
068	改叫出{color[0400]}{[0001|1d00]}操控搖桿小節點{[0001|ffff]}{color[ffff]}。
069	你好～
070	操控搖桿的動作\n也可以計算嗎！？
071	就像常數小節點\n透過{color[0400]}{[0001|1d00]}訊號{[0001|ffff]}{color[ffff]}傳送{color[0400]}{[0001|1d00]}數值{[0001|ffff]}{color[ffff]}那樣……
072	操控搖桿小節點在傳送訊號時，\n也會把{[0001|1d00]}{color[0400]}操控搖桿的動作{color[ffff]}{[0001|ffff]}以{[0001|1d00]}{color[0400]}數值{color[ffff]}的形式{[0001|ffff]}傳送出去。
073	沒有推動操控搖桿時是0.00……
074	推動一點點時是0.20……
075	再推動一些時是0.50……
076	推到底時是1.00～
077	就像這樣，以{[0001|1d00]}{color[0400]}數值的大小{color[ffff]}{[0001|ffff]}\n來表示操控搖桿的推動幅度。
078	也就是說，配對線裡傳送的\n{[0001|1d00]}{color[0400]}訊號其實就是數值{color[ffff]}{[0001|ffff]}。
080	把操控搖桿小節點的輸出端和\n計算小節點{color[0400]}{[0001|1d00]}上面的輸入端{[0001|ffff]}{color[ffff]}連接起來。
081	接收到操控搖桿動作的訊號了。
082	訊號就是數值……
083	只要是數值，\n我就能計算。
083-01	……因為我是高性能計算機。
084	那麼，這次就試著\n用操控搖桿輸入的數值\n算看看{[0001|1d00]}{color[0400]}乘法{color[ffff]}{[0001|ffff]}吧。
084-01	首先，將常數小節點的\n輸出數值調為{[0001|1d00]}{color[0400]}1.00{color[ffff]}{[0001|ffff]}。
085	選擇常數小節點。
086	選擇設定。
087	把常數設定為{color[0400]}{[0001|1d00]}1.00{[0001|ffff]}{color[ffff]}。
088	關閉設定。
138	接下來，\n我們要把{[0001|1d00]}計算方法{[0001|ffff]}更改為{color[0400]}{[0001|1d00]}×{[0001|ffff]}{color[ffff]}。
089	選擇計算小節點。
090	打開設定。
091	把{[0001|1d00]}計算方法{[0001|ffff]}更改為{[0001|1d00]}{color[0400]}×{color[ffff]}{[0001|ffff]}。
092	關閉設定。
093	將計算{color[0400]}{[0001|1d00]}操控搖桿的推動幅度×1.00{[0001|ffff]}{color[ffff]}。
094	任何數字乘以{[0001|1d00]}{color[0400]}1.00 {color[ffff]}{[0001|ffff]}，\n計算結果都{[0001|1d00]}{color[0400]}不會改變{color[ffff]}{[0001|ffff]}。
096	也就是說，物件的動作應該\n會和操控搖桿小節點直接連接\n可移動物件小節點的時候一樣。
097	到遊戲畫面確認看看動作吧。
098	試著用操控搖桿\n左右移動箱子。
099	操控搖桿被推到底的時候，\n移動速度是{[0001|1d00]}{color[0400]}秒速1.00m{color[ffff]}{[0001|ffff]}。
100	記住現在這個速度喔。
101	回到程式設計畫面。
137	那麼，我們就來利用計算，\n讓透過操控搖桿移動的箱子變得更快吧。
102	你覺得應該怎麼做才好呢？
103	輸入到可移動物件小節點的數值越大，\n物件的移動速度就會變得越快……
103-01	試著把操控搖桿小節點輸出的數值……\n調為{[0001|1d00]}{color[0400]}3倍{color[ffff]}{[0001|ffff]}吧。
104	選擇常數小節點……
105	打開設定。
106	調為{color[0400]}{[0001|1d00]}3.00{[0001|ffff]}{color[ffff]}。
107	關閉設定。
108	{color[0400]}{[0001|1d00]}操控搖桿的推動幅度×3.00{[0001|ffff]}{color[ffff]}……\n也就是說，要把操控搖桿的推動幅度變為3倍。
109	好了，到遊戲畫面\n確認看看變得如何。
110	試著用操控搖桿\n移動看看箱子。
111	移動速度變快了。
112	因為我們把操控搖桿小節點\n輸出的數值調為3倍，\n所以箱子以{[0001|1d00]}{color[0400]}3倍的速度{color[ffff]}{[0001|ffff]}移動了。
113	回到程式設計畫面。
114	最後……\n我們來試著用{[0001|1d00]}{color[0400]}除法{color[ffff]}{[0001|ffff]}計算看看。
115	選擇計算小節點。
116	選擇設定。
117	把{[0001|1d00]}計算方法{[0001|ffff]}更改為{[0001|1d00]}{color[0400]}÷{color[ffff]}{[0001|ffff]}。
118	關閉設定。
119	將計算{color[0400]}{[0001|1d00]}操控搖桿的推動幅度÷3.00{[0001|ffff]}{color[ffff]}。
120	你覺得將訊號除以3.00之後，\n物件的{[0001|1d00]}{color[0400]}速度{color[ffff]}{[0001|ffff]}會有什麼改變？
121	到遊戲畫面確認看看吧。
122	用操控搖桿移動箱子……
123	……箱子的動作變～慢～了。
124	因為我們把操控搖桿小節點\n輸出的數值除以{[0001|1d00]}{color[0400]}3.00{color[ffff]}{[0001|ffff]}……
125	速度也變成了\n平常的{[0001|1d00]}{color[0400]}3分之1{color[ffff]}{[0001|ffff]}……
126	像這樣使用計算小節點，\n將操控搖桿小節點\n輸出的數值變大或變小……
126-01	就能讓箱子的動作\n變快或變慢。
127	回去程式設計畫面。
128	{[0001|1d00]}{color[0400]}訊號{color[ffff]}{[0001|ffff]}其實就是{[0001|1d00]}{color[0400]}數值{color[ffff]}{[0001|ffff]}……
129	數值可以相加或相乘……\n進行各種計算。
130	而操控搖桿小節點\n輸出的也是{[0001|1d00]}{color[0400]}數值{color[ffff]}{[0001|ffff]}。
131	所以我們可以透過計算\n來改變他的大小。
132	不論是什麼訊號，\n我都能加減乘除……\n運用自如！
133	……因為我是高性能計算機！！
134	那麼～\n你能計算出\n我現在在想什麼嗎～？
135	……那種事情，\n身為高性能計算機的我\n也無法計算……
Guidebook_CarNode.msbt
00.00.Alice	……{[0201]}，你好。
00.01.Alice	現在遊戲畫面上\n停了一輛{[0001|1d00]}{color[0400]}汽車{color[ffff]}{[0001|ffff]}。
00.02.Alice	這輛汽車被設計成可以用{[0001|1d00]}{color[0400]}鍵{color[ffff]}{[0001|ffff]}開動，\n試著駕駛看看吧。
00.03.Alice	按下鍵，\n汽車就會向前行駛。
00.04.Alice	這次我要解說的程式，\n就是像這樣以控制器操控汽車。
00.05.Alice	那麼到程式設計畫面去吧。
01.00.Button	嗨！\n我們又見面了，{[0201]}。
01.01.StickL	你好～
01.02.Camera	……請多指教。
01.03.Car	嗖嗖嗖！\n{[0201]}，\n今天有什麼事嗎？
01.04.Car	什麼？你想了解如何用控制器\n讓{[0001|1d00]}{color[0400]}汽車{color[ffff]}{[0001|ffff]}可以轟隆隆地向前跑嗎？
01.05.Camera	這次似乎跟照相機沒什麼關係，\n那我就靜靜地專心拍{[0001|1d00]}{color[0400]}汽車小節點{color[ffff]}{[0001|ffff]}好了。
01.06.Button	那麼就讓我們來解說吧！
01.07.Button	首先，我會透過配對線\n把{[0001|1d00]}{color[0400]}鍵{color[ffff]}{[0001|ffff]}的情況傳達給{[0001|1d00]}{color[0400]}汽車小節點{color[ffff]}{[0001|ffff]}。
01.08.Car	你的訊號完美地傳達到\n我的{[0001|1d00]}{color[0400]}油門端口{color[ffff]}{[0001|ffff]}囉。
01.09.Car	鍵被按下時，\n油門端口會接收到{[0001|1d00]}{color[0400]}1.0{color[ffff]}{[0001|ffff]}這個數值……
01.10.Car	然後我就會轟隆隆地加速！
01.11.Button	那如果一直按著鍵，\n你就會越來越快嗎？
01.12.Car	最大速度是由我的設定中的\n{[0001|1d00]}{color[0400]}移動速度{color[ffff]}{[0001|ffff]}來決定的喔。
01.13.Alice	那麼，選擇{[0001|1d00]}{color[0400]}汽車小節點{color[ffff]}{[0001|ffff]}吧。
01.14.Alice	打開設定畫面看看。
01.15.Alice	在這邊可以設定{[0001|1d00]}{color[0400]}移動速度{color[ffff]}{[0001|ffff]}……
01.16.Alice	試著把他設定為上限值的{[0001|1d00]}{color[0400]}2.00{color[ffff]}{[0001|ffff]}看看。
01.17.Alice	關閉設定畫面。
01.18.Alice	到遊戲畫面確認看看會變成怎樣吧。
02.00.Alice	試著用{[0001|1d00]}{color[0400]}鍵{color[ffff]}{[0001|ffff]}加速看看。
02.01.Alice	比剛才更快了呢。
02.02.Alice	你可以像這樣\n{[0001|1d00]}{color[0400]}調整汽車的行駛速度{color[ffff]}{[0001|ffff]}。
02.03.Alice	對了，如果汽車從地面邊界掉下去的話，\n只要重來就能再試一遍。
02.04.Alice	那麼，我們回到程式設計畫面吧。
03.00.Car	嗖嗖嗖！\n你看到我的駕駛神技了嗎？
03.01.StickL	一旦汽車開始行駛，\n好像就{[0001|1d00]}{color[0400]}不能馬上停下來{color[ffff]}{[0001|ffff]}呢～
03.02.Car	你們仔細看看我的{[0001|1d00]}油門{[0001|ffff]}端口。
03.03.Car	有{[0001|1d00]}{color[0400]}{color[ffff]}{[0001|ffff]}的標誌對吧？
03.04.Car	只要把{[0001|1d00]}{color[0400]}負數{color[ffff]}{[0001|ffff]}傳達到油門端口，\n我就能夠{[0001|1d00]}{color[0400]}向後跑{color[ffff]}{[0001|ffff]}喔。
03.05.Button	可是我只能傳達{[0001|1d00]}{color[0400]}0或1{color[ffff]}{[0001|ffff]}的數值喲！
03.06.StickL	我可以傳達{[0001|1d00]}{color[0400]}-1.00到1.00{color[ffff]}{[0001|ffff]}的數值喔～
03.07.Alice	那我就叫出另一個\n操控搖桿小節點，\n讓他來一起幫忙吧。
03.08.StickR	轉轉～\n{[0201]}，我來幫忙了～\n我會傳達{[0001|1d00]}{color[0400]}上下推動操控搖桿{color[ffff]}{[0001|ffff]}的情況～
03.09.Alice	選擇連接在按鍵小節點和\n汽車小節點之間的配對線。
03.10.Alice	解除。
03.11.Alice	把新登場的操控搖桿小節點的{[0001|1d00]}{color[0400]}輸出端{color[ffff]}{[0001|ffff]}\n連接到汽車小節點的{[0001|1d00]}{color[0400]}油門端口{color[ffff]}{[0001|ffff]}。
03.12.Alice	好，到遊戲畫面來確認\n會變成怎樣吧。
04.00.Alice	試著{[0001|1d00]}{color[0400]}上下推動操控搖桿{color[ffff]}{[0001|ffff]}\n來移動汽車看看。
04.01.Alice	現在我們只要更改{[0001|1d00]}{color[0400]}操控搖桿{color[ffff]}{[0001|ffff]}的推動方向，\n就可以倒車行駛了。
04.02.Alice	雖然沒有剎車專用的端口……
04.03.Alice	但只要向後加速，\n就能{[0001|1d00]}{color[0400]}作為剎車使用{color[ffff]}{[0001|ffff]}了。
04.04.Alice	話說回來，\n你有發現{[0001|1d00]}{color[0400]}左右推動操控搖桿{color[ffff]}{[0001|ffff]}\n也能操控方向盤嗎？
04.05.Alice	{[0001|1d00]}{color[0400]}上下推動操控搖桿{color[ffff]}{[0001|ffff]}能操控油門，\n{[0001|1d00]}{color[0400]}左右推動操控搖桿{color[ffff]}{[0001|ffff]}能操控方向盤，\n試看看吧。
04.06.Alice	{[0001|1d00]}{color[0400]}左右推動操控搖桿{color[ffff]}{[0001|ffff]}能轉彎對吧？
04.07.Alice	那麼，我們回程式設計畫面\n去確認方向盤的構造吧。
05.00.Car	怎麼樣？\n不論你想前進還是倒車，{[0001|1d00]}{color[0400]}右轉{color[ffff]}{[0001|ffff]}還是{[0001|1d00]}{color[0400]}左轉{color[ffff]}{[0001|ffff]}，\n一切都是隨心所欲，對吧？
05.01.StickL	方向盤的操作是這樣的～
05.02.StickL	首先我會把{[0001|1d00]}{color[0400]}左右推動操控搖桿{color[ffff]}{[0001|ffff]}的情況\n傳達給汽車小節點～
05.03.Car	我從{[0001|1d00]}{color[0400]}方向盤端口{color[ffff]}{[0001|ffff]}接收到訊號後，\n就會讓汽車轉彎。
05.04.Car	你看，{[0001|1d00]}方向盤{[0001|ffff]}端口上不是有{[0001|1d00]}{color[0400]}{color[ffff]}{[0001|ffff]}的標誌嗎？
05.05.Car	這表示我的方向盤在\n接收到{[0001|1d00]}{color[0400]}正數{color[ffff]}{[0001|ffff]}時會向{[0001|1d00]}{color[0400]}右{color[ffff]}{[0001|ffff]}轉，\n接收到{[0001|1d00]}{color[0400]}負數{color[ffff]}{[0001|ffff]}時會向{[0001|1d00]}{color[0400]}左{color[ffff]}{[0001|ffff]}轉喔。
05.06.StickL	輕輕推動操控搖桿\n還能轉比較小的彎～
05.07.Camera	……無論左轉右轉，我都會跟到底。
05.08.StickR	不過，當汽車停下來時，\n不管怎樣操控方向盤，\n好像都不能改變汽車的方向呢～
05.09.Car	嗚……
05.10.Car	就算用方向盤改變了車輪方向，\n如果那一刻{[0001|1d00]}{color[0400]}汽車沒有在移動的話{color[ffff]}{[0001|ffff]}，\n就{[0001|1d00]}{color[0400]}沒辦法轉彎{color[ffff]}{[0001|ffff]}……
05.11.Button	原來如此，因為只改變了車輪方向，\n所以倒車時轉彎的方向才會是相反的啊！
05.12.Button	話說回來，有沒有工作給我做啊！？
05.13.Button	太閒了喲！\n來做深蹲好了！\n哼！哼！
05.14.Car	看看我身體最下面的輸入端！\n別說是深蹲了，\n我還能夠{[0001|1d00]}{color[0400]}跳躍{color[ffff]}{[0001|ffff]}喔！
05.15.Button	你要做深蹲跳嗎！？\n這種高強度的訓練正合我意！\n我來幫你喲！哼！哼！
05.16.Alice	那麼，我們就用按鍵小節點\n讓汽車小節點做出深蹲……
05.17.Alice	……不對，是讓他跳躍起來看看吧。
05.18.Alice	把按鍵小節點的{[0001|1d00]}{color[0400]}輸出端{color[ffff]}{[0001|ffff]}\n用配對線連接到\n汽車小節點的{[0001|1d00]}{color[0400]}跳躍端口{color[ffff]}{[0001|ffff]}。
05.19.Alice	鍵比較難和操控搖桿同時操作，\n把他改成{[0001|1d00]}{color[0400]}鍵{color[ffff]}{[0001|ffff]}吧。
05.20.Alice	打開按鍵小節點的設定。
05.21.Alice	把{[0001|1d00]}{color[0400]}鍵{color[ffff]}{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}關閉{color[ffff]}{[0001|ffff]}。
05.22.Alice	把{[0001|1d00]}{color[0400]}鍵{color[ffff]}{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}開啟{color[ffff]}{[0001|ffff]}。
05.23.Alice	關閉設定畫面。
05.24.Alice	好了，到遊戲畫面確認看看吧。
06.00.Alice	{[0001|1d00]}{color[0400]}上下推動操控搖桿{color[ffff]}{[0001|ffff]}讓汽車移動。\n移動的同時試著按下{[0001|1d00]}{color[0400]}鍵{color[ffff]}{[0001|ffff]}看看。
06.01.Alice	你看，現在汽車可以{[0001|1d00]}{color[0400]}跳躍{color[ffff]}{[0001|ffff]}了。
06.02.Alice	那麼，回到程式設計畫面吧。
07.00.Car	跳跳～\n你有看到我帥氣的{[0001|1d00]}{color[0400]}跳躍{color[ffff]}{[0001|ffff]}嗎？
07.01.Button	看來你沒辦法跳得很高呢。\n你缺乏鍛鍊喲！哼！哼！
07.02.Car	我的設定中有一個叫{[0001|1d00]}{color[0400]}跳躍力{color[ffff]}{[0001|ffff]}的項目，\n你可以在那裡更改跳躍的高度喔。
07.03.Alice	那麼，來選擇汽車小節點……
07.04.Alice	打開設定畫面。
07.05.Alice	在這邊可以設定{[0001|1d00]}{color[0400]}跳躍力{color[ffff]}{[0001|ffff]}。
07.06.Alice	試著把他設定為上限值的{[0001|1d00]}{color[0400]}2.00{color[ffff]}{[0001|ffff]}看看。
07.07.Alice	關閉設定畫面。
07.08.Alice	到遊戲畫面確認一下，\n看看會變成怎樣吧。
08.00.Alice	{[0001|1d00]}{color[0400]}上下推動操控搖桿{color[ffff]}{[0001|ffff]}讓汽車移動。\n移動的同時試著按下{[0001|1d00]}{color[0400]}鍵{color[ffff]}{[0001|ffff]}跳躍看看。
08.01.Alice	現在比剛才跳得更高了。
08.02.Alice	就像這樣，\n{[0001|1d00]}{color[0400]}跳躍力是可以調整{color[ffff]}{[0001|ffff]}的。
08.03.Alice	那麼，我們到程式設計畫面去吧。
09.00.Car	跳～跳～\n我的最大馬力很厲害對吧！
09.01.StickR	原來能跳那麼高啊～
09.02.Camera	……無論跳得有多高，我都會跟到底。
09.03.Button	挺厲害的嘛！\n不過，感覺到自己的極限時，\n才是健身的真正開始喲！哼！哼！
09.05.StickL	話說回來～\n跳躍到空中時\n好像無法操控汽車呢～
09.06.Car	嗚……
09.07.Car	當車輪沒有接觸到地面時，\n{[0001|1d00]}{color[0400]}也無法讓汽車轉彎{color[ffff]}{[0001|ffff]}……
09.08.Car	所以在設定為最大馬力時，\n如果你邊移動邊跳躍的話，\n有時一不小心就會從平面的邊界掉下去……
09.10.Alice	即使在程式之中，\n也要{[0001|1d00]}{color[0400]}注意安全駕駛{color[ffff]}{[0001|ffff]}喔。
09.11.Camera	……就算是掉到地底深淵，我也會跟到底。
09.13.Alice	好了，這次的解說也告一段落了。\n你對汽車小節點的了解有加深了嗎？
09.14.Car	把正數輸入到\n油門端口就會前進。
09.15.StickR	負數就會後退～
09.16.Car	方向盤端口可以\n改變車輪方向，\n讓汽車左轉或右轉。
09.17.StickL	正數會向右轉，\n負數會向左轉喔～
09.18.Car	然後跳躍端口可以\n讓汽車高高地跳起來喔。
09.19.Button	跳躍力和移動速度\n可以在設定畫面中調整！
09.20.Alice	還有，如果車輪沒有接觸到地面，\n就不能操控汽車……要記住喔。
09.21.Alice	那麼，我們就在這裡結束吧。
09.22.Car	要帥氣地駕駛我喔！
09.23.Camera	……那麼，下次再見。
09.24.Camera	……今天也完美地完成工作了呢。
Guidebook_Compare.msbt
000-000	{[0201]}，你好。
000	這次你想了解\n{[0001|1d00]}{color[0400]}比較小節點{color[ffff]}{[0001|ffff]}嗎？
001	那麼，讓我們到程式設計畫面\n去問問比較小節點吧。
002	嗨，{[0201]}。
003	你想深入了解我嗎！？
004	你很好奇我和其他小節點\n有什麼不同對吧！
005	我呢……會比較傳送到\n{[0001|1d00]}{color[0400]}輸入端{color[ffff]}{[0001|ffff]}的{[0001|1d00]}{color[0400]}2個數值{color[ffff]}{[0001|ffff]}……
006	如果跟{[0001|1d00]}{color[0400]}條件一致{color[ffff]}{[0001|ffff]}我就會{[0001|1d00]}{color[0400]}輸出訊號{color[ffff]}{[0001|ffff]}！
006-001	現在的條件是\n{[0001|1d00]}{color[0400]}2個數值相同{color[ffff]}{[0001|ffff]}！
006-002	在設定畫面確認一下\n現在的條件吧！
006-003	{[0001|1d00]}如何比較？{[0001|ffff]}現在被設定為{[0001|1d00]}{color[0400]}＝{color[ffff]}{[0001|ffff]}。
006-004	這代表\n當{[0001|1d00]}{color[0400]}上方輸入端的數值＝下方輸入端的數值{color[ffff]}{[0001|ffff]}時，\n我就會輸出訊號。
006-005	確認好條件的話，\n就關閉設定畫面吧。
006-006	怎麼樣！？\n設定是{[0001|1d00]}＝{[0001|ffff]}對不對？
006-007	那麼……\n你一定很好奇實際連接上小節點後……\n會變成怎樣對吧！？
014	請常數小節點和特效小節點\n來幫忙測試看看吧！
015	來囉！\n我是常數小節點，\n擁有絕不動搖之心！
016	你好～\n我是特效小節點，\n擁有冷場也不會受挫之心。
017	我會好好努力，\n讓自己別唉聲歎氣。\n請你多多指教～
018	嗯～\n我會{[0001|1d00]}{color[0400]}比較2個輸入端的數值{color[ffff]}{[0001|ffff]}……
019	如果條件都滿足了，\n我就會向{[0001|1d00]}{color[0400]}特效小節點輸出訊號{color[ffff]}{[0001|ffff]}。
020	也就是說！\n{[0001|1d00]}{color[0400]}當條件一致{color[ffff]}{[0001|ffff]}時，\n我就會讓{[0001|1d00]}{color[0400]}拉炮華麗地響起{color[ffff]}{[0001|ffff]}！
021	把上方的常數小節點設定為{[0001|1d00]}{color[0400]}3.00{color[ffff]}{[0001|ffff]}……
022	下方的常數小節點也設定為{[0001|1d00]}{color[0400]}3.00 {color[ffff]}{[0001|ffff]}……
023	這種情況下，\n拉炮會響嗎？
024	先想一想答案，\n再到遊戲畫面去吧。
025	正確答案是\n{[0001|1d00]}{color[0400]}拉炮會響{color[ffff]}{[0001|ffff]}。
026	因為兩個常數小節點的{[0001|1d00]}{color[0400]}數值相同{color[ffff]}{[0001|ffff]}，\n所以滿足了條件。
027	那麼，到程式設計畫面去吧。
028	如何？\n你有猜對嗎？
029	那接下來試看看\n{[0001|1d00]}{color[0400]}更改下方常數小節點的數值{color[ffff]}{[0001|ffff]}吧！
030	選擇常數小節點。
031	打開設定畫面。
032	設定為{[0001|1d00]}{color[0400]}5.00{color[ffff]}{[0001|ffff]}。
033	關閉設定畫面。
034	這種情況下，\n拉炮會不會響呢？
035	先想一想答案，\n再到遊戲畫面去吧。
036	正確答案是\n{[0001|1d00]}{color[0400]}拉炮不會響{color[ffff]}{[0001|ffff]}。
037	因為2個常數小節點的數值\n分別為3.00和5.00，\n{[0001|1d00]}{color[0400]}兩者並不一致{color[ffff]}{[0001|ffff]}，所以無法滿足條件。
038	那麼，到程式設計畫面去吧。
039	我問你喔！
040	在2個常數小節點的數值\n{[0001|1d00]}{color[0400]}維持原狀{color[ffff]}{[0001|ffff]}的前提下……
041	如果想讓{[0001|1d00]}{color[0400]}拉炮響起{color[ffff]}{[0001|ffff]}，\n你覺得該{[0001|1d00]}{color[0400]}如何更改{color[ffff]}{[0001|ffff]}我的設定呢？
042	試著想想看吧。
043	那麼，來選擇比較小節點。
044	打開設定畫面。
045	正確答案是……
046	設定為{[0001|1d00]}{color[0400]}＜{color[ffff]}{[0001|ffff]}～
046-001	雖然設定為{[0001|1d00]}≦{[0001|ffff]}也可以，\n但這次就先用{[0001|1d00]}＜{[0001|ffff]}吧。
047	這個條件是\n當{[0001|1d00]}{color[0400]}上方輸入端的數值＜下方輸入端的數值{color[ffff]}{[0001|ffff]}時……
048	也就是說\n{[0001|1d00]}{color[0400]}下方輸入端的數值需要比{color[ffff]}{[0001|ffff]}\n{[0001|1d00]}{color[0400]}上方輸入端的數值大{color[ffff]}{[0001|ffff]}。
049	關閉設定畫面。
049-001	上方的常數小節點是{[0001|1d00]}3.00{[0001|ffff]}，\n下方的常數小節點是{[0001|1d00]}5.00{[0001|ffff]}……
049-002	所以設定為3.00＜5.00\n應該就能滿足條件。
050	來，到遊戲畫面中\n確認看看吧。
051	和我們想得一樣，\n拉炮響起了呢。
052	那麼，到程式設計畫面去吧。
053	就像這樣，\n我會比較2個數值……
054	{[0001|1d00]}{color[0400]}判定{color[ffff]}{[0001|ffff]}他們是不是跟{[0001|1d00]}{color[0400]}條件{color[ffff]}{[0001|ffff]}一致！
055	只要利用比較小節點，\n就能讓程式變得更多彩多姿。
056	譬如說……\n我們先讓下方的常數小節點退場。
057	然後……
058	讓{[0001|1d00]}{color[0400]}計數器小節點{color[ffff]}{[0001|ffff]}等\n其他小節點來代替他。
058-001	嗨！{[0201]}！
058-002	我負責計算鍵\n被按下的次數。
058-003	我會把鍵被按下的次數\n清楚地顯示在遊戲畫面中喔。
061	如果像這樣，\n把{[0001|1d00]}{color[0400]}常數3.00{color[ffff]}{[0001|ffff]}和{[0001|1d00]}{color[0400]}按下鍵的次數{color[ffff]}{[0001|ffff]}\n作{[0001|1d00]}{color[0400]}比較{color[ffff]}{[0001|ffff]}的話……
062	會變成怎樣的構造呢？
063	到遊戲畫面確認看看吧。
064	按幾下{[0001|1d00]}{color[0400]}鍵{color[ffff]}{[0001|ffff]}看看吧。
065	按下4次鍵，\n拉炮就響了。
066	也就是說……利用比較小節點，\n我們設計出按下{[0001|1d00]}{color[0400]}4次鍵{color[ffff]}{[0001|ffff]}就能\n讓{[0001|1d00]}{color[0400]}拉炮響起{color[ffff]}{[0001|ffff]}的構造了呢。
067	到程式設計畫面去吧。
068	怎麼樣？
071	不止是計數器小節點跟常數小節點，\n可以用來比較的組合可是無限多喔！
072	想成為內行的程式設計師的話，\n就試著使用我來設計判定條件吧！
Guidebook_ConnectGameCamera.msbt
000	……你好。
001	在遊戲畫面中間可以看到一個{[0001|1d00]}{color[0400]}人{color[ffff]}{[0001|ffff]}。
002	試著用{[0001|1d00]}{color[0400]}操控搖桿{color[ffff]}{[0001|ffff]}\n讓{[0001|1d00]}{color[0400]}人{color[ffff]}{[0001|ffff]}左右移動吧。
003	當{[0001|1d00]}{color[0400]}人{color[ffff]}{[0001|ffff]}移動時，\n{[0001|1d00]}{color[0400]}遊戲畫面{color[ffff]}{[0001|ffff]}也會跟著一起移動。
006	這次我要說明的程式，\n就是像這樣讓{[0001|1d00]}{color[0400]}遊戲畫面跟著人移動{color[ffff]}{[0001|ffff]}。
007	讓我們到程式設計畫面去吧。
008	咦～～？\n這不是{[0201]}嗎～！\n你辛苦了～～～
009	{[0201]}，\n你好啊！
010	嗯嗯，你想了解讓{[0001|1d00]}{color[0400]}遊戲畫面{color[ffff]}{[0001|ffff]}\n跟著{[0001|1d00]}{color[0400]}人{color[ffff]}{[0001|ffff]}一起移動的原理啊！
011	遊戲畫面之所以\n會跟著{[0001|1d00]}{color[0400]}人{color[ffff]}{[0001|ffff]}～
012	是因為{[0001|1d00]}{color[0400]}遊戲畫面小節點{color[ffff]}{[0001|ffff]}正{[0001|1d00]}{color[0400]}連接{color[ffff]}{[0001|ffff]}在\n我——也就是{[0001|1d00]}{color[0400]}人小節點{color[ffff]}{[0001|ffff]}身上喔！
013	沒錯～\n現在我的目光正緊盯著{[0001|1d00]}{color[0400]}人小節點{color[ffff]}{[0001|ffff]}呢。
014	為了把{color[0400]}{[0001|1d00]}人小節點{[0001|ffff]}{color[ffff]}在遊戲世界裡\n到處奔走的身影永遠固定在畫面中央……
015	我{[0001|1d00]}{color[0400]}遊戲畫面小節點{color[ffff]}{[0001|ffff]}\n會緊緊地{color[0400]}{[0001|1d00]}連接{[0001|ffff]}{color[ffff]}著他喔～～！
016	一旦解除{[0001|1d00]}{color[0400]}連接{color[ffff]}{[0001|ffff]}，\n遊戲畫面就會變得無法移動。\n來試看看吧！
017	選擇{[0001|1d00]}{color[0400]}連接配對線{color[ffff]}{[0001|ffff]}。
018	解除{color[0400]}{[0001|1d00]}連接{[0001|ffff]}{color[ffff]}。
018-01	那麼～\n我就暫時先不黏著人小節點吧～
019	我們來看看會變成怎樣。
020	試著讓{[0001|1d00]}{color[0400]}人{color[ffff]}{[0001|ffff]}移動看看。
021	現在就算人移動，\n遊戲畫面也不會跟上來了。
022	這表示當遊戲畫面小節點\n{color[0400]}{[0001|1d00]}沒有連接{[0001|ffff]}{color[ffff]}到人小節點身上時，\n遊戲畫面就不會移動。
023	確認好了就回去程式設計畫面吧。
024	你回來啦！\n遊戲畫面變得不會動了對吧？
025	只要重新{[0001|1d00]}{color[0400]}連接{color[ffff]}{[0001|ffff]}回去，\n遊戲畫面就會像之前一樣跟上來囉！
026	試著重新{[0001|1d00]}{color[0400]}連接{color[ffff]}{[0001|ffff]}\n{[0001|1d00]}{color[0400]}遊戲畫面小節點{color[ffff]}{[0001|ffff]}和{[0001|1d00]}{color[0400]}人小節點{color[ffff]}{[0001|ffff]}。
027	好～！\n我又要緊緊地黏著人小節點了～～！
028	{[0201]}！\n我的攝影技巧可是會讓\n人小節點變得魅力四射沒法擋喔～
030	你也試著觀察一下當{[0001|1d00]}{color[0400]}人{color[ffff]}{[0001|ffff]}移動時\n{[0001|1d00]}{color[0400]}遊戲畫面的移動方式{color[ffff]}{[0001|ffff]}吧～～！
031	來觀察一下吧。
032	用{[0001|1d00]}{color[0400]}操控搖桿{color[ffff]}{[0001|ffff]}操控{[0001|1d00]}{color[0400]}人{color[ffff]}{[0001|ffff]}的同時，\n仔細觀察遊戲畫面的動作。
033	建議讓人走走停停，\n這樣能更容易確認。
034	{[0001|1d00]}{color[0400]}遊戲畫面{color[ffff]}{[0001|ffff]}的移動\n比{[0001|1d00]}{color[0400]}人{color[ffff]}{[0001|ffff]}的移動{[0001|1d00]}{color[0400]}慢了一拍{color[ffff]}{[0001|ffff]}……
035	{[0001|1d00]}{color[0400]}看起來就像是追著人跑{color[ffff]}{[0001|ffff]}呢。\n你察覺到了嗎？
036	在{[0001|1d00]}{color[0400]}人{color[ffff]}{[0001|ffff]}停下來之後，\n遊戲畫面也會{[0001|1d00]}{color[0400]}慢一拍{color[ffff]}{[0001|ffff]}才停下來。
037	為了更明顯地看出差別，\n我們來更改追蹤方式的設定吧。
041	你可以在我的設定中\n更改{[0001|1d00]}{color[0400]}追蹤方式{color[ffff]}{[0001|ffff]}喔～！
042	{[0001|1d00]}{color[0400]}追蹤率越低{color[ffff]}{[0001|ffff]}，\n追蹤時的{[0001|1d00]}{color[0400]}動作延遲就會增加{color[ffff]}{[0001|ffff]}，有勞你囉！
043	選擇{[0001|1d00]}{color[0400]}遊戲畫面小節點{color[ffff]}{[0001|ffff]}。
044	打開設定。
045	用這個{[0001|1d00]}{color[0400]}水平追蹤率{color[ffff]}{[0001|ffff]}\n就能設定左右方向的追蹤方式。
046	追蹤率越高，延遲時間越短，\n追蹤率越低，延遲時間越長。
047	那麼，我們來設定一個\n非常低的數值……{[0001|1d00]}{color[0400]}0.05{color[ffff]}{[0001|ffff]}試看看吧。
048	關閉設定畫面。
049	在遊戲畫面中確認看看吧。
049-01	用{[0001|1d00]}{color[0400]}操控搖桿{color[ffff]}{[0001|ffff]}操控{[0001|1d00]}{color[0400]}人{color[ffff]}{[0001|ffff]}的同時，\n請仔細觀察遊戲畫面的動作。
104	你有察覺到遊戲畫面\n在{[0001|1d00]}{color[0400]}追蹤人{color[ffff]}{[0001|ffff]}的時候{[0001|1d00]}{color[0400]}產生延遲{color[ffff]}{[0001|ffff]}了嗎？
105	把{[0001|1d00]}{color[0400]}水平追蹤率{color[ffff]}{[0001|ffff]}調低，\n就能大幅增加追蹤的延遲時間。
106	這次試著把遊戲畫面\n設定為{[0001|1d00]}{color[0400]}無延遲追蹤{color[ffff]}{[0001|ffff]}吧。
107	打開{[0001|1d00]}{color[0400]}遊戲畫面小節點{color[ffff]}{[0001|ffff]}的設定。
108	把{[0001|1d00]}{color[0400]}水平追蹤率{color[ffff]}{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}1.00{color[ffff]}{[0001|ffff]}。
109	關閉設定。
110	去遊戲畫面吧。
050	用{[0001|1d00]}{color[0400]}操控搖桿{color[ffff]}{[0001|ffff]}\n操控{[0001|1d00]}{color[0400]}人{color[ffff]}{[0001|ffff]}看看吧。
051	只要把{[0001|1d00]}{color[0400]}水平追蹤率{color[ffff]}{[0001|2000]}調高{[0001|1d00]}{[0001|ffff]}{[0001|2000]}，\n{[0001|ffff]}{[0001|1d00]}{color[0400]}遊戲畫面{color[ffff]}{[0001|ffff]}在追蹤{[0001|1d00]}{color[0400]}人{color[ffff]}{[0001|ffff]}時\n就不會產生{[0001|1d00]}{color[0400]}延遲{color[ffff]}{[0001|ffff]}……
052	現在當{[0001|1d00]}{color[0400]}人{color[ffff]}{[0001|ffff]}停下來時，\n{[0001|1d00]}{color[0400]}遊戲畫面{color[ffff]}{[0001|ffff]}也會立刻停下來。
053	就像這樣，你可以透過更改{[0001|1d00]}{color[0400]}追蹤率{color[ffff]}{[0001|ffff]}\n讓{[0001|1d00]}{color[0400]}追蹤方式{color[ffff]}{[0001|ffff]}有所變化。
054	我們回到程式設計畫面吧。
055	你回來啦～～！
056	弄清楚{[0001|1d00]}{color[0400]}追蹤方式{color[ffff]}{[0001|ffff]}的變化了嗎？？
057	話說回來……
058	我想到了一個……\n能讓{[0001|1d00]}{color[0400]}人小節點{color[ffff]}{[0001|ffff]}魅力加倍的表演手法喔～！
059	我真是個天才導演啊！！！
060	那麼……\n就趕緊讓{[0001|1d00]}{color[0400]}藏寶箱{color[ffff]}{[0001|ffff]}登場吧～！！
111	我在高～高的空中登場囉♥
066	這個場景真不錯～！\n接下來只要更改\n我的{[0001|1d00]}{color[0400]}連接對象{color[ffff]}{[0001|ffff]}就完美了！
067	我也{[0001|1d00]}{color[0400]}可以跟物件小節點連接{color[ffff]}{[0001|ffff]}，\n這次要緊緊地黏著物件小節點囉～！
068	選擇與{[0001|1d00]}{color[0400]}人小節點{color[ffff]}{[0001|ffff]}之間的連接。
069	解除連接。
070	連接到剛才登場的\n{[0001|1d00]}{color[0400]}時尚物件小節點{color[ffff]}{[0001|ffff]}。
071	從天而降的美麗{[0001|1d00]}{color[0400]}藏寶箱{color[ffff]}{[0001|ffff]}……\n掉落在擁有堅定目光的人面前……
072	{[0001|1d00]}{color[0400]}人{color[ffff]}{[0001|ffff]}與{[0001|1d00]}{color[0400]}藏寶箱{color[ffff]}{[0001|ffff]}命中註定的相遇！\n感覺一場新的冒險就要開始了！！\n收視率一定會飆高～～～！
073	……去遊戲畫面看看吧。
074	現在遊戲畫面會追蹤\n掉下來的{[0001|1d00]}{color[0400]}藏寶箱{color[ffff]}{[0001|ffff]}了。
075	即使用操控搖桿讓{[0001|1d00]}{color[0400]}人{color[ffff]}{[0001|ffff]}移動，\n遊戲畫面也不會跟上來……
076	如果讓{[0001|1d00]}{color[0400]}人{color[ffff]}{[0001|ffff]}推動{[0001|1d00]}{color[0400]}藏寶箱{color[ffff]}{[0001|ffff]}，\n遊戲畫面就會跟著{[0001|1d00]}{color[0400]}藏寶箱{color[ffff]}{[0001|ffff]}一起移動。
078	我們回到程式設計畫面吧。
079	嗯……總覺得不太對～\n不行不行！！\n這樣看起來完全不像是命中註定的相遇！
080	……有了！
081	{[0201]}！\n幫我改一下{color[0400]}{[0001|1d00]}上下追蹤率{[0001|ffff]}{color[ffff]}吧！！
086	來幫他更改吧。
087	在{[0001|1d00]}{color[0400]}上下追蹤率{color[ffff]}{[0001|ffff]}中，\n你可以設定上下方向的追蹤方式。
088	試著改為{[0001|1d00]}{color[0400]}0.05{color[ffff]}{[0001|ffff]}。
089	關閉。
090	之前我們把{[0001|1d00]}{color[0400]}水平追蹤率{color[ffff]}{[0001|ffff]}調低的時候，\n{color[0400]}{[0001|1d00]}左右方向的動作{[0001|ffff]}{color[ffff]}延遲就增加了。
091	那麼……把{[0001|1d00]}{color[0400]}上下追蹤率調低{color[ffff]}{[0001|ffff]}的話，\n遊戲畫面會變成怎樣呢……？\n試著想一想吧。
092	現在遊戲畫面會{[0001|1d00]}{color[0400]}慢慢地追蹤{color[ffff]}{[0001|ffff]}\n掉落的{[0001|1d00]}{color[0400]}藏寶箱{color[ffff]}{[0001|ffff]}了。
094	這表示把{[0001|1d00]}{color[0400]}上下追蹤率{color[ffff]}{[0001|ffff]}{[0001|2000]}調低{[0001|ffff]}後，\n{[0001|1d00]}{color[0400]}上下移動{color[ffff]}{[0001|ffff]}的延遲就增加了。
095	……真是不錯的一幕。
096	……那麼，我們回到程式設計畫面吧。
097	我真是天才！這幕簡直是傑作～！\n是不是該稱讚一下我的審美眼光啊～～！？
100	{[0201]}，\n你可要好好運用我的{[0001|1d00]}{color[0400]}連接{color[ffff]}{[0001|ffff]}和{[0001|1d00]}{color[0400]}追蹤率{color[ffff]}{[0001|ffff]}……
101	拍出一場精彩的好戲喔～！
102	那麼，下次再見囉～
Guidebook_Connection.msbt
000	……{[0201]}，\n你好。
001	UFO和鮪魚……\n真是奇怪的組合。
002	你可以用操控搖桿來操控UFO。\n試著讓UFO移動看看吧。
003	……UFO的操縱沒有問題。
004	……既然都擺在面前了，\n要不要來試看看……\n……把UFO和鮪魚黏在一起啊？
005	沒錯，這次我會為你解說\n{color[0400]}{[0001|1d00]}讓物件黏在一起的方法{[0001|ffff]}{color[ffff]}。
006	那麼，我們到程式設計畫面去吧。
007	鮪魚～和UFO～\n我們有很多共通點呢～～
008	暢游大海的鮪魚與\n遨遊宇宙的UFO……\n的確很配呢……！
010	真虧你能注意到！\n♥你好有才華喔♥
011	好，\n那我就馬上來說明\n讓物件黏在一起的方法吧。
012	你來看看UFO小節點的這邊。
013	這個是{color[0400]}{[0001|1d00]}連接端口{[0001|ffff]}{color[ffff]}。
014	用這個{color[0400]}{[0001|1d00]}連接端口{[0001|ffff]}{color[ffff]}\n把小節點們{color[0400]}{[0001|1d00]}連接{[0001|ffff]}{color[ffff]}起來的話……
015	就能把物件黏到其他物件上。
018	想把兩個物件{color[0400]}{[0001|1d00]}連接{[0001|ffff]}{color[ffff]}在一起時，\n只要把物件的{color[0400]}{[0001|1d00]}下方連接端口{[0001|ffff]}{color[ffff]}……
019	連接到自己想黏住的目標，\n也就是另一個物件小節點的\n{color[0400]}{[0001|1d00]}上方連接端口{[0001|ffff]}{color[ffff]}就可以了。
021	那我們馬上來試看看\n{color[0400]}{[0001|1d00]}連接{[0001|ffff]}{color[ffff]}時尚物件小節點和\nUFO小節點吧。
022	把我們連接起來吧～～～
023	{[0201]}，\n你準備好了嗎！？
024	把時尚物件小節點的\n{color[0400]}{[0001|1d00]}下方連接端口{[0001|ffff]}{color[ffff]}連接到\nUFO小節點的{color[0400]}{[0001|1d00]}連接端口{[0001|ffff]}{color[ffff]}。
025	連接！\n鮪魚UFO！！！
027	到遊戲畫面中確認看看\n會變成怎樣吧。
028	鮪魚緊緊地黏在UFO上面了。
029	用操控搖桿讓UFO移動看看。
030	……因為緊緊地黏在一起，\n即使UFO在移動，鮪魚也不會掉下來。
032	把物件黏在一起……\n這就是{color[0400]}{[0001|1d00]}連接{[0001|ffff]}{color[ffff]}。
033	回去程式設計畫面吧。
034	在空中游泳的鮪魚……！\n真是令人驚豔的美感～～♥
037	不過，只是把鮪魚放在上面\n好像有點太平凡了……
038	我想來點更前衛的！！
039	那麼～\n要不要把鮪魚的頭……\n咚的一聲黏在UFO上面啊～～？
040	你想讓鮪魚的頭\n插在UFO的頭上喔……
040-01	天啊！！\n你真的是～♥超級有才華的♥！！！
041	那麼，我們來更改設定，\n把鮪魚的頭部黏到UFO的頭部吧。
042	選擇鮪魚的時尚物件小節點。
043	打開設定。
045	打開{color[0400]}{[0001|1d00]}連接面{[0001|ffff]}{color[ffff]}。
045-01	在這裡，你可以指定\n物件本身的{color[0400]}{[0001|1d00]}哪一面{[0001|ffff]}{color[ffff]}要與\n目標物件的{color[0400]}{[0001|1d00]}哪一面黏在一起{[0001|ffff]}{color[ffff]}。
046	設定為{color[0400]}{[0001|1d00]}自動{[0001|ffff]}{color[ffff]}的話，\n就會自動讓物件之間\n{color[0400]}{[0001|1d00]}相鄰的那一面{[0001|ffff]}{color[ffff]}黏在一起。
047	如果想自己決定物件的連接面，\n就設定為{color[0400]}{[0001|1d00]}自訂{[0001|ffff]}{color[ffff]}吧。
048	在{color[0400]}{[0001|1d00]}自己的連接面{[0001|ffff]}{color[ffff]}中，\n你可以選擇要黏在自己……\n也就是{color[0400]}{[0001|1d00]}物件本身{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1d00]}哪一面{[0001|ffff]}{color[ffff]}。
048-01	這裡是鮪魚的時尚物件小節點的設定畫面，\n所以可以指定讓{color[0400]}{[0001|1d00]}鮪魚的哪一面{[0001|ffff]}{color[ffff]}黏在UFO上。
049	鮪魚的頭部在{color[0400]}{[0001|1d00]}Z-面{[0001|ffff]}{color[ffff]}……
049-01	把{[0001|1d00]}自己的連接面{[0001|ffff]}設定為{color[0400]}{[0001|1d00]}Z-{[0001|ffff]}{color[ffff]}吧。
050	對了，我說的「面」是指\n{color[0400]}{[0001|1d00]}以物件本身為基準的面{[0001|ffff]}{color[ffff]}。
052	也就是說，\n不論鮪魚面向哪個方向……
053	鮪魚的頭部永遠都會是{color[0400]}{[0001|1d00]}Z-面{[0001|ffff]}{color[ffff]}。
055	以鮪魚為例，\n頭部是Z-，尾部是Z+。\n……要記住喔。
059-01	接著我們來看看{color[0400]}{[0001|1d00]}連接對象的連接面{[0001|ffff]}{color[ffff]}吧。
059-02	在這裡，\n你可以選擇要{color[0400]}{[0001|1d00]}黏在目標物件的哪一面{[0001|ffff]}{color[ffff]}。
059-03	現在的設定是{[0001|1d00]}{color[0400]}Y+{color[ffff]}{[0001|ffff]}……
059-04	這代表會黏在UFO的Y+面……\n也就是{color[0400]}{[0001|1d00]}上面{[0001|ffff]}{color[ffff]}。
059-05	也就是說，目前的設定已經可以\n把鮪魚的頭部黏到UFO的頭部了。
060	沒實際看過很難想像對吧。
061	關閉{[0001|1d00]}連接面{[0001|ffff]}的設定。
062	接著關閉設定畫面。
063	到遊戲畫面中看看他們是怎麼黏在一起的吧。
064	……這可真是不得了啊。
065	用操控搖桿來移動UFO看看。
066	鮪魚的頭部有好好地\n黏在UFO的頭部呢。
067	確認完後就到程式設計畫面去吧。
068	UFO的頭頂……\n插著鮪魚……
068-01	感覺很有故事呢～～♥
069	嗯……\n總覺得有點不對～
070	我覺得啊～\n應該要像是鮪魚在我背後\n用力推著我一樣～
071	我要的是這種感覺才對～～
071-01	你的意思是……\n把鮪魚的頭部插在UFO後面嗎……？
071-02	噢！\n感覺一個新的故事又要開始了……♥
072	那麼，\n來把鮪魚黏到UFO後面吧。
073	選擇時尚物件小節點。
074	打開設定。
075	打開{color[0400]}{[0001|1d00]}連接面{[0001|ffff]}{color[ffff]}的設定。
076	你可以在{color[0400]}{[0001|1d00]}連接對象的連接面{[0001|ffff]}{color[ffff]}中，\n設定要把鮪魚黏到UFO的哪一面。
077	UFO的正面是{color[0400]}{[0001|1d00]}Z-{[0001|ffff]}{color[ffff]}，\n有天線的那一面是{color[0400]}{[0001|1d00]}Y+{[0001|ffff]}{color[ffff]}。
078	要把{color[0400]}{[0001|1d00]}鮪魚黏到UFO後面{[0001|ffff]}{color[ffff]}的話……\n你覺得應該要選哪一面？
079	……答案是{color[0400]}{[0001|1d00]}Z+{[0001|ffff]}{color[ffff]}，\n也就是UFO的正面——Z-的反面。
080	把{[0001|1d00]}連接對象的連接面{[0001|ffff]}設定為{color[0400]}Z+{color[ffff]}吧。
082-01	好了，這樣就可以讓鮪魚的Z-面\n黏到UFO的Z+面了。
083	那麼，\n關閉{[0001|1d00]}連接面{[0001|ffff]}的設定。
084	接著關閉設定畫面。
086	來看看他們會怎樣黏在一起吧。
087	試著用操控搖桿移動UFO。
088	……鮪魚緊緊地咬在UFO後面……
089	……就像這樣，\n你可以在{color[0400]}{[0001|1d00]}連接面{[0001|ffff]}{color[ffff]}的設定中\n更改物件之間相黏的方式。
090	那麼，我們回到程式設計畫面吧。
091	這就是我要的～\n你不覺得很有趣嗎～～～？
092	我真是大飽眼福了……♥
096	只要利用{color[0400]}{[0001|1d00]}連接{[0001|ffff]}{color[ffff]}，\n就可以把物件組合起來，\n製作出各種不同形狀的物件。
096-01	而連接的方法是……
096-02	把物件本身的\n{color[0400]}{[0001|1d00]}下方連接端口{[0001|ffff]}{color[ffff]}……
096-03	連接到……\n目標物件的{color[0400]}{[0001|1d00]}上方連接端口{[0001|ffff]}{color[ffff]}。
097	這可是很重要的設計技巧，\n你要好好記住喔。
Guidebook_Count.msbt
002	……{[0201]}，\n你好。
003	畫面上有{[0001|1d00]}{color[0400]}藍色圓柱體{color[ffff]}{[0001|ffff]}和{[0001|1d00]}{color[0400]}紅色立方體{color[ffff]}{[0001|ffff]}……
004	另外，空中還有寫著{color[0400]}{[0001|1d00]}數字{[0001|ffff]}{color[ffff]}的\n{[0001|1d00]}{color[0400]}白色立方體{color[ffff]}{[0001|ffff]}……
005	{[0001|1d00]}{color[0400]}觀察這個數字{color[ffff]}{[0001|ffff]}的同時，\n試著用{[0001|1d00]}{color[0400]}操控搖桿{color[ffff]}{[0001|ffff]}操控人……\n來破壞所有物件吧。
006	每破壞一個物件，{[0001|1d00]}{color[0400]}數字就會增加{color[ffff]}{[0001|ffff]}。
006-01	這個白色立方體被設定為\n{[0001|1d00]}{color[0400]}會顯示損壞物件的數量{color[ffff]}{[0001|ffff]}。
007	這次我會為你解說如何像這樣\n{color[0400]}{[0001|1d00]}計算並顯示損壞物件的數量{[0001|ffff]}{color[ffff]}。
008	來，我們到程式設計畫面去吧。
009	嗨！我是{color[0400]}{[0001|1d00]}人小節點{[0001|ffff]}{color[ffff]}！\n我會到處破壞物件喔！
014	……嗨。\n我們是{color[0400]}{[0001|1d00]}物件小節點{[0001|ffff]}{color[ffff]}。
016	右邊5個是{[0001|1d00]}{color[0400]}紅色立方體{color[ffff]}{[0001|ffff]}。
017	左邊5個是{[0001|1d00]}{color[0400]}藍色圓柱體{color[ffff]}{[0001|ffff]}。
022	然後……\n負責計算損壞物件的數量，\n並將他顯示出來的就是……
023	這3個小節點。
024	喂喂！你聽說了嗎？\n人好像把所有物件都破壞光了！
026	總共有10個物件被破壞了。
027	好，請大家為破壞了\n很多物件的人小節點送上掌聲～
120	嘻嘻！
027-01	……你想了解如何{[0001|1d00]}{color[0400]}計算並顯示\n損壞物件的數量{color[ffff]}{[0001|ffff]}，對吧！
028	被人破壞掉的物件數量，\n其實是由我們3個小節點\n同心協力計算出來的喔！
029	我們會分別為你說明各自的任務……
030	你可要用心聽好，\n認真學習啊。
031	那麼，請大家……\n從左至右開始自我介紹！
032	嗨！{[0201]}！\n我是{color[0400]}{[0001|1d00]}物件損壞時小節點{[0001|ffff]}{color[ffff]}！
033	如你所知，\n當我{[0001|1d00]}{color[0400]}要確認的物件損壞時{color[ffff]}{[0001|ffff]}，\n我就會輸出訊號！
034	現在要確認的物件是\n立方體和圓柱體……！
037	我是{color[0400]}{[0001|1d00]}計數器小節點{[0001|ffff]}{color[ffff]}，\n我會計算任何數字。
037-01	我昨天總共打了12次噴嚏。
122	……每當我的{color[0400]}{[0001|1d00]}增加端口{[0001|ffff]}{color[ffff]}接收到訊號時，\n我就會{[0001|1d00]}{color[0400]}增加數值{color[ffff]}{[0001|ffff]}，並把那個{[0001|1d00]}{color[0400]}數值輸出{color[ffff]}{[0001|ffff]}。
038	就這次的情況來說……\n我會輸出{[0001|1d00]}{color[0400]}從物件損壞時小節點那裡\n接收到的訊號次數{color[ffff]}{[0001|ffff]}。
119	最後是我，{color[0400]}{[0001|1d00]}附數字物件小節點{[0001|ffff]}{color[ffff]}。
039	我的任務是……\n把計數器小節點計算出來的{[0001|1d00]}{color[0400]}數值{color[ffff]}{[0001|ffff]}\n{[0001|1d00]}{color[0400]}顯示{color[ffff]}{[0001|ffff]}在畫面上。
041	你有聽過這句話嗎？\n配對線傳達的{[0001|1d00]}{color[0400]}訊號其實就是數值{color[ffff]}{[0001|ffff]}。
042	當{color[0400]}{[0001|1d00]}訊號輸入{[0001|ffff]}{color[ffff]}到我的端口時……
043	我就會在遊戲畫面中\n顯示{[0001|1d00]}{color[0400]}訊號的數值{color[ffff]}{[0001|ffff]}！
046-01	我來總結一下……
046	當立方體和圓柱體損壞時，\n{color[0400]}{[0001|1d00]}物件損壞時小節點{[0001|ffff]}{color[ffff]}就會輸出訊號……
047	當訊號被輸入到{[0001|1d00]}{color[0400]}計數器小節點{color[ffff]}{[0001|ffff]}的端口時，\n計數器小節點會計算次數，\n並把次數轉換為訊號輸出。
048	而當{[0001|1d00]}{color[0400]}附數字物件小節點{color[ffff]}{[0001|ffff]}接收到訊號時，\n就會把那個數字顯示在畫面上。
049	沒錯！這就是\n{color[0400]}{[0001|1d00]}計算並顯示損壞物件數量的原理{[0001|ffff]}{color[ffff]}！
049-01	還有哦，你知道嗎？\n只要更改我的設定中的{[0001|1d00]}{color[0400]}要確認什麼？{color[ffff]}{[0001|ffff]}……
049-02	就可以把要確認的物件限定在一種……\n如果只想計算{[0001|1d00]}{color[0400]}立方體損壞的數量{color[ffff]}{[0001|ffff]}的話，\n我也辦得到喔！
050	那麼，我們來試看看吧。
053	選擇物件損壞時小節點……
054	打開設定。
123	現在的設定是\n正在確認{[0001|1d00]}{color[0400]}立方體{color[ffff]}和{color[0400]}圓柱體{color[ffff]}{[0001|ffff]}。
055	打開{color[0400]}{[0001|1d00]}要確認什麼？{[0001|ffff]}{color[ffff]}……
056	我們只想要確認立方體……\n把{color[0400]}{[0001|1d00]}圓柱體{[0001|ffff]}{color[ffff]}設定為{[0001|1d00]}{color[0400]}關閉{color[ffff]}{[0001|ffff]}。
057	關閉這個畫面。
058	接著關閉設定。
059	嗯嗯，我知道了。\n{[0001|1d00]}{color[0400]}只要確認立方體{color[ffff]}{[0001|ffff]}就行了對吧！
060	在遊戲畫面中確認看看吧。
061	試著破壞所有物件，\n並觀察{color[0400]}{[0001|1d00]}數字{[0001|ffff]}{color[ffff]}會有什麼變化。
062	破壞{color[0400]}{[0001|1d00]}立方體{[0001|ffff]}{color[ffff]}時，{[0001|1d00]}{color[0400]}數字會增加{color[ffff]}{[0001|ffff]}……\n但破壞{color[0400]}{[0001|1d00]}圓柱體{[0001|ffff]}{color[ffff]}時，{[0001|1d00]}{color[0400]}數字則不會增加{color[ffff]}{[0001|ffff]}。
064	就像這樣，\n小節點可以只計算\n立方體損壞的數量。
065	回到程式設計畫面。
065-01	怎麼樣！？\n變成只會計算立方體了對吧？
065-02	就像這樣，\n只要更改我們的設定，\n就能改變計算的方式。
065-03	譬如說……更改計數器小節點的{[0001|1d00]}{color[0400]}模式{color[ffff]}{[0001|ffff]}，\n就可以設計出特殊的計算方式喔。
065-04	不過在那之前……\n請先恢復物件損壞時小節點的設定。
067	選擇。
068	打開設定。
069	選擇{color[0400]}{[0001|1d00]}要確認什麼？{[0001|ffff]}{color[ffff]}。
070	把{color[0400]}{[0001|1d00]}圓柱體{[0001|ffff]}{color[ffff]}設定為{[0001|1d00]}{color[0400]}開啟{color[ffff]}{[0001|ffff]}。
071	關閉這個畫面。
072	關閉設定。
126	嗯嗯。\n恢復成會確認圓柱體的設定了呢。\n還是這樣比較好！
072-01	那麼……\n接下來我們試著更改\n計數器小節點的{[0001|1d00]}{color[0400]}模式{color[ffff]}{[0001|ffff]}吧！
072-02	{[0001|1d00]}{color[0400]}模式{color[ffff]}{[0001|ffff]}指的就是\n數值的計算方式。
072-03	我總共有{[0001|1d00]}{color[0400]}4種{color[ffff]}{[0001|ffff]}模式！
079	來看看計數器小節點的設定吧。
080	選擇。
081	打開設定。
128	這就是{color[0400]}{[0001|1d00]}模式{[0001|ffff]}{color[ffff]}。
081-01	現在被設定為{color[0400]}{[0001|1d00]}無限制{[0001|ffff]}{color[ffff]}。
081-02	就跟字面上的意思一樣，\n這個模式可以{[0001|1d00]}{color[0400]}無限制{color[ffff]}{[0001|ffff]}地計算下去。
082	那麼，我們把{[0001|1d00]}模式{[0001|ffff]}\n更改為{[0001|1d00]}{color[0400]}範圍限制{color[ffff]}{[0001|ffff]}吧。
129	設定為這個模式時，\n就能指定計算{color[0400]}{[0001|1d00]}範圍{[0001|ffff]}{color[ffff]}。
082-01	你可以在這個{color[0400]}{[0001|1d00]}計算範圍{[0001|ffff]}{color[ffff]}中\n設定你要的{color[0400]}{[0001|1d00]}範圍{[0001|ffff]}{color[ffff]}。
083	把{[0001|1d00]}計算範圍{[0001|ffff]}的上限設定為{[0001|1d00]}{color[0400]}7{color[ffff]}{[0001|ffff]}。
084	關閉設定。
085	現在我的計算範圍\n會被限制在{[0001|1d00]}{color[0400]}0到7{color[ffff]}{[0001|ffff]}。
086	到遊戲畫面中確認看看\n會怎樣計算吧。
087	試著破壞所有物件。
088	……計算到{color[0400]}{[0001|1d00]}7就停下來{[0001|ffff]}{color[ffff]}了。
089	這表示當設定為{[0001|1d00]}範圍限制{[0001|ffff]}模式時，\n小節點就{[0001|1d00]}{color[0400]}只會在設定的範圍內{color[ffff]}{[0001|ffff]}進行計算。
090	回到程式設計畫面。
091	我們也試看看其他{[0001|1d00]}模式{[0001|ffff]}吧。
092	選擇。
093	打開設定。
094	這次來試著……\n把{[0001|1d00]}模式{[0001|ffff]}更改為{color[0400]}{[0001|1d00]}循環{[0001|ffff]}{color[ffff]}看看吧。
130	{[0001|1d00]}計算範圍{[0001|ffff]}的上限維持在{[0001|1d00]}{color[0400]}7{color[ffff]}{[0001|ffff]}不變。
095	關閉設定。
096	計算模式是……{[0001|1d00]}{color[0400]}循環{color[ffff]}{[0001|ffff]}。\n範圍一樣是{[0001|1d00]}{color[0400]}0到7{color[ffff]}{[0001|ffff]}。
097	到遊戲畫面中確認看看\n會怎樣計算吧。
098	當破壞了第{[0001|1d00]}{color[0400]}7{color[ffff]}{[0001|ffff]}個物件後……
099	就會從{[0001|1d00]}{color[0400]}0{color[ffff]}{[0001|ffff]}開始重新計算。
100	循環是一種會在設定的範圍內\n{[0001|1d00]}{color[0400]}重複{color[ffff]}{[0001|ffff]}計算的模式。
101	這表示數字一旦達到了範圍的上限，\n就會{color[0400]}{[0001|1d00]}回到最初的數字{[0001|ffff]}{color[ffff]}重新計算。
102	回到程式設計畫面。
132	接下來是第4個……也是最後一個模式。
104	選擇。
105	打開設定。
106	把{[0001|1d00]}模式{[0001|ffff]}更改為{color[0400]}{[0001|1d00]}來回{[0001|ffff]}{color[ffff]}。
107	把{[0001|1d00]}計算範圍{[0001|ffff]}的上限設定為{[0001|1d00]}{color[0400]}5{color[ffff]}{[0001|ffff]}。
108	關閉設定。
133	計算模式是……{[0001|1d00]}{color[0400]}來回{color[ffff]}{[0001|ffff]}。\n範圍設定是{[0001|1d00]}{color[0400]}0到5{color[ffff]}{[0001|ffff]}。
109	到遊戲畫面中確認看看。
110	破壞5個以上的物件後……
111	每破壞一個物件，數字就會減少。
112	這表示計數器小節點在來回模式中，\n會在設定的範圍內{[0001|1d00]}{color[0400]}來來回回地{color[ffff]}{[0001|ffff]}計算。
113	回到程式設計畫面吧。
113-01	你了解4種模式的\n運作方式了嗎？
113-02	可以做到各種計算方式呢！
113-03	那麼，我們再複習一次\n計算程式的原理吧！
114	當要確認的物件損壞時……\n我就會輸出訊號！
115	我會計算接收到多少次訊號，\n然後再輸出。
116	而我會顯示接收到的數字。
117	這就是{color[0400]}{[0001|1d00]}計算損壞物件數量的原理{[0001|ffff]}{color[ffff]}。
118	因為{color[0400]}{[0001|1d00]}訊號其實就是數值{[0001|ffff]}{color[ffff]}……
136	所以不只能夠被計算，\n還能顯示在畫面上喔。
134	原理解說就到此結束！\n你可要記得好好複習喔！
Guidebook_CountDown.msbt
00.00.Alice	……你好，{[0201]}。
00.01.Alice	突然間就開始倒數，\n你可能也嚇了一跳吧……
00.02.Alice	這次要解說的程式，\n就是使用了倒數三秒特效的\n{color[0400]}{[0001|1d00]}遊戲開始場景{[0001|ffff]}{color[ffff]}。
00.03.Alice	先按下{color[0400]}{[0001|1d00]}重來{[0001|ffff]}{color[ffff]}，\n讓我們從頭再看一次吧。
00.04.Alice	倒數結束後，\n汽車就會向前跑出去。
00.06.Alice	這樣的設定非常合理。\n畢竟要是汽車在倒數結束前就跑出去，\n那可就是偷跑了。
00.07.Alice	那麼{[0201]}，\n你知道要怎麼做，\n才能不讓汽車在倒數的時候跑出去嗎？
00.08.Alice	我們到程式設計畫面\n了解一下程式的原理吧。
01.00.Start	我排第一喔！\n我叫開始時小節點！\n好耶！
01.01.Timer	……著急可辦不了大事。\n應該先制定縝密的計畫，\n然後照著計畫行事才對。
01.02.Flag	咕噥……\n……我是……旗標小節點……
01.03.Effect	你好，{[0201]}。\n今天也要炒熱氣氛喔～\n3、2、1、嘿～！！
01.04.Flag	唉……\n早安。
01.05.Flag	{[0201]}，\n你來啦。
01.06.Flag	原來如此……\n你想了解{color[0400]}{[0001|1d00]}遊戲開始場景{[0001|ffff]}{color[ffff]}的結構啊……
01.07.Flag	我知道了。\n那就讓我們來說明給你聽吧。
01.07-01.Effect	首先，讓畫面出現\n{[0001|1d00]}{color[0400]}倒數{color[ffff]}{[0001|ffff]}特效的小節點就是我！！
01.07-02.Effect	當我從{[0001|1d00]}{color[0400]}開始時小節點{color[ffff]}{[0001|ffff]}那裡\n接收到訊號後，就會開始倒數！
01.08.Start	一旦{color[0400]}{[0001|1d00]}遊戲開始{[0001|ffff]}{color[ffff]}……\n我就會……\n{color[0400]}{[0001|1d00]}發出訊號{[0001|ffff]}{color[ffff]}……喔。
01.09.Effect	{[0001|1d00]}{color[0400]}遊戲開始後{color[ffff]}{[0001|ffff]}，\n開始時小節點會\n{[0001|1d00]}{color[0400]}立刻{color[ffff]}{[0001|ffff]}傳來訊號……
01.10.Effect	這個時候……\n我就會開始倒數！
01.10-01.Timer	但你只有顯示特效，\n並沒有阻止汽車移動吧？
01.10-02.Effect	是呀！\n我的特效可不會\n影響到其他小節點喔。
01.10-03.Car	那為什麼在倒數結束前，\n汽車都不會動呢？
01.10-04.Flag	那是因為遊戲開始後，\n我還在{[0001|1d00]}{color[0400]}關閉{color[ffff]}{[0001|ffff]}的狀態。
01.10-05.Flag	在{[0001|1d00]}{color[0400]}關閉{color[ffff]}{[0001|ffff]}的狀態下，\n我{[0001|1d00]}{color[0400]}不會輸出{color[ffff]}{[0001|ffff]}訊號……
01.10-06.Car	所以訊號沒有傳到我這邊來……\n汽車也就不會動了！
01.10-07.Car	那麼，倒數結束後，\n汽車又是怎麼跑出去的呢？
01.10-08.Flag	當我被{[0001|1d00]}{color[0400]}開啟{color[ffff]}{[0001|ffff]}後，\n我就會{[0001|1d00]}{color[0400]}輸出{color[ffff]}{[0001|ffff]}訊號，\n汽車也就會向前跑了。
01.10-10.Timer	咳咳。\n而我的工作……\n就是負責開啟旗標小節點。
01.11.Timer	遊戲開始後，\n{[0001|1d00]}{color[0400]}開始時小節點{color[ffff]}{[0001|ffff]}會傳送訊號給我。
01.12.Timer	在收到輸入的訊號後，\n我會分秒不差地\n{color[0400]}{[0001|1d00]}計時3秒再輸出訊號{[0001|ffff]}{color[ffff]}。
01.13.Flag	說到3秒……
01.14.Effect	跟我{[0001|1d00]}{color[0400]}倒數的時間{color[ffff]}{[0001|ffff]}是一樣的吶～
01.15.Timer	你注意到重點了呢。
01.15-01.Timer	特效小節點和我，\n會同時接收到\n從開始時小節點傳來的訊號。
01.16.Effect	我{[0001|1d00]}{color[0400]}開始倒數{color[ffff]}{[0001|ffff]}的同時，\n計時器小節點也{[0001|1d00]}{color[0400]}開始計時{color[ffff]}{[0001|ffff]}……
01.16-01.Effect	如果{[0001|1d00]}{color[0400]}倒數結束為止所花的時間{color[ffff]}{[0001|ffff]}和\n{[0001|1d00]}{color[0400]}計時器小節點計時的時間{color[ffff]}{[0001|ffff]}一樣的話……
01.18.Timer	倒數結束時，\n我也會剛好完成計時\n並輸出訊號。
01.19.Flag	所以，倒數結束時，\n我就會被{[0001|1d00]}{color[0400]}開啟{color[ffff]}{[0001|ffff]}……
01.20.Car	訊號傳送到我這裡，\n汽車就跑出去了！
01.28.Effect	我沒有給你什麼暗號，\n你卻能把時機算得這麼準吶～
01.29.Alice	這就是這個程式的重點。
01.30.Alice	為了讓{[0001|1d00]}{color[0400]}倒數結束{color[ffff]}{[0001|ffff]}的時間點和\n{[0001|1d00]}{color[0400]}旗標小節點開啟{color[ffff]}{[0001|ffff]}的時間點一樣……
01.33.Timer	就需要我調整傳送訊號\n給旗標小節點的時機。
01.33-01.Timer	你不用跟我道謝，\n這種事對我來說太簡單了。
01.34.Alice	那麼，我們先在腦中\n重新跑一遍這個程式……
01.35.Alice	再回到遊戲畫面去看看吧。
02.00.Alice	遊戲開始的同時，\n倒數三秒的特效也會啟動……
02.01.Alice	3秒後，在倒數結束的同時，\n旗標小節點被開啟，汽車跑了出去。
02.03.Alice	了解原理後再來看遊戲，\n就能清楚地知道\n每個小節點是怎麼運作的，對吧？
02.04.Alice	如果想從頭再看一次，\n只要按下重來就可以了。
02.05.Alice	那我們回去程式設計畫面吧。
03.00.Car	嗖嗖嗖！\n你有看到我那帥氣的衝刺嗎？
03.01.Effect	倒數時那3秒的等待時間，\n讓氣氛變得更緊張刺激了吧～
03.02.Effect	果然凡事都得忍耐3秒才行。\n人家都說{[0001|1d00]}{color[0400]}冰凍三尺，非三秒之寒{color[ffff]}{[0001|ffff]}吶。
03.03.Timer	……你想說的應該是\n冰凍三尺，非一日之寒吧。
03.04.Timer	意思是說\n絕不可能在一天之內，\n就結成三尺厚的冰層……
03.05.Timer	比喻就算無法立刻看到結果，\n只要肯努力、有耐心，\n總有一天會看到成果。
03.06.Timer	結果你卻說成冰凍三尺，非三秒之寒。\n那大概連顆冰沙都結不了吧。
03.06-01.Timer	就算是搞錯也錯得太離譜了。\n你應該多增廣見聞，\n學習正確的知識。
03.07.Effect	你也不用這麼冷靜地吐嘈我吧……
03.09.Alice	好了，這次的程式解說也告一段落了。\n使用倒數三秒特效的遊戲開始場景……\n其中的原理，你都清楚了嗎？
03.10.Start	一旦遊戲開始……\n我就會……\n發出訊號……喔。
03.11.Timer	接收到訊號後，\n我會過一段時間再輸出。
03.12.Effect	倒數三秒的特效\n會剛好在3秒後結束。\n所以……
03.13.Timer	如果我的計時時間也是3秒，\n就能在倒數結束的同時輸出訊號。
03.14.Flag	然後我……\n也就是旗標小節點會被開啟……
03.15.Car	訊號傳送到我這裡後，\n汽車就會跑出去！
03.16.Alice	在這次的例子中，\n當旗標小節點被開啟時，\n汽車就會跑出去……
03.17.Alice	但隨著遊戲不同，\n旗標小節點也能\n連接到其他小節點身上。
03.18.Alice	這個技巧可以用在\n遊戲的開始場景裡，\n可別忘記囉。
03.19.Alice	那麼，今天就講到這裡。
03.20.Car	嗖嗖嗖！\n那就下次再見囉！
Guidebook_DifferentCollision.msbt
00.00.Alice	……你好，{[0201]}。
00.01.Alice	現在遊戲畫面上\n有2個人，對吧？
00.03.Alice	{[0001|1d00]}{color[0400]}左右推動操控搖桿{color[ffff]}{[0001|ffff]}可以移動藍色的人，\n你先試著讓他站到旁邊的紅色地面上吧。
00.04.Alice	就算站到紅色地面上，\n也沒有發生任何事情。
00.05.Alice	接著用同樣的方法{[0001|1d00]}{color[0400]}左右推動操控搖桿{color[ffff]}{[0001|ffff]}，\n試著讓藍色的人移動到右邊的藍色地面。
00.06.Alice	站到藍色地面上後，\n程式產生反應讓拉炮響起了。
00.08.Alice	還沒結束喔……\n{[0001|1d00]}{color[0400]}左右推動操控搖桿{color[ffff]}{[0001|ffff]}可以移動紅色的人，\n試著讓他站到旁邊的藍色地面上吧。
00.09.Alice	藍色的人站上去時程式有反應，\n紅色的人站上去卻什麼事也沒有。
00.10.Alice	接著用同樣的方法{[0001|1d00]}{color[0400]}左右推動操控搖桿{color[ffff]}{[0001|ffff]}，\n試著讓紅色的人移動到左邊的紅色地面。
00.11.Alice	站到紅色地面上後，程式產生反應。\n這次出現了衝擊特效。
00.12.Alice	看來程式被設計成只有在\n{color[0400]}{[0001|1d00]}藍色的人{[0001|ffff]}{color[ffff]}站上{color[0400]}{[0001|1d00]}藍色地面{[0001|ffff]}{color[ffff]}、\n{color[0400]}{[0001|1d00]}紅色的人{[0001|ffff]}{color[ffff]}站上{color[0400]}{[0001|1d00]}紅色地面{[0001|ffff]}{color[ffff]}時才會有反應。
00.13.Alice	……明明兩個都是人，\n反應卻不一定會出現，\n不覺得很神奇嗎？
00.14.Alice	這次要解說的技巧，就是這種\n{[0001|1d00]}{color[0400]}將同種類物件分別處理的方法{color[ffff]}{[0001|ffff]}。
00.15.Alice	那麼，我們到程式設計畫面去吧。
01.00.HumanL	你好！\n我是人小節點！
01.01.HumanR	嗨！\n我也是人小節點喔！\n我是紅色的！
01.02.RigidL	……嗨。\n我是物件小節點，\n是紅色的地面。
01.03.RigidR	……嗨，\n我是藍色的地面。
01.04.EffectL	你好，{[0201]}。
01.05.EffectR	今天要靠我們來炒熱氣氛，\n請多多指教～\n砰砰砰！！！
01.06.SensorAll	哇……！
01.07.SensorL	不要突然在人家耳邊大叫啦，\n很嚇人耶～
01.08.SensorR	啊，是{[0201]}耶。\n你今天來有什麼事嗎？
01.10.SensorL	咦？你想知道我們是{[0001|1d00]}{color[0400]}怎麼區別\n紅色的人和藍色的人{color[ffff]}{[0001|ffff]}嗎！？
01.11.SensorR	我知道了！\n那就讓我們來說明吧！
01.12.SensorL	雖然從遊戲畫面上看來，\n我們就像是對{[0001|1d00]}{color[0400]}人{color[ffff]}{[0001|ffff]}有反應……
01.13.SensorR	但其實我們\n{[0001|1d00]}{color[0400]}並沒有在確認人{color[ffff]}{[0001|ffff]}！
01.14.HumanL	如果接觸感應器\n有在確認人的話……
01.15.HumanR	因為我們都是人，\n只是顏色不同……
01.16.HumanL	所以不管是藍色還是紅色，\n只要是人他都會有反應，對吧！?
01.17.SensorR	雖然我沒有在確認人，\n但我有在確認\n{[0001|1d00]}{color[0400]}時尚物件的Joy-Con(L){color[ffff]}{[0001|ffff]}！
01.18.FancyL	哎呀，你是在說我嗎？\n還真有眼光呢♥
01.19.FancyL	我最近迷上了{[0001|1d00]}{color[0400]}Joy-Con(L){color[ffff]}{[0001|ffff]}♥
01.20.Alice	你可以在設定畫面中\n設定接觸感應器要確認什麼……
01.21.Alice	選擇右邊的\n{[0001|1d00]}{color[0400]}接觸感應器小節點{color[ffff]}{[0001|ffff]}……
01.22.Alice	試著打開設定畫面。
01.23.Alice	這裡就是設定\n{[0001|1d00]}要確認什麼？{[0001|ffff]}的地方。
01.24.Alice	看到了嗎？\n目前這裡顯示的是{[0001|1d00]}{color[0400]}Joy-Con(L){color[ffff]}{[0001|ffff]}。
01.25.Alice	如果確認好了，\n就關閉設定畫面吧。
01.26.SensorL	而我則是在確認\n{[0001|1d00]}{color[0400]}時尚物件的Joy-Con(R){color[ffff]}{[0001|ffff]}！
01.27.FancyR	雖然Joy-Con(L)也不錯，\n但{[0001|1d00]}{color[0400]}Joy-Con(R){color[ffff]}{[0001|ffff]}才是最新潮流呢！
01.28.FancyR	你看這渾圓的黑色窗戶，\n裡面藏了動感IR感應器！\n非常可愛對吧♥
01.29.Alice	這邊的接觸感應器小節點，\n我們也確認一下他的設定畫面吧。
01.30.Alice	選擇左邊的\n{[0001|1d00]}{color[0400]}接觸感應器小節點{color[ffff]}{[0001|ffff]}……
01.31.Alice	打開設定畫面。
01.32.Alice	你看，是{[0001|1d00]}{color[0400]}Joy-Con(R){color[ffff]}{[0001|ffff]}。
01.33.Alice	這裡要特別注意的重點就是……\n不管是哪一邊的接觸感應器小節點，\n{[0001|1d00]}{color[0400]}確認的都不是人，而是時尚物件{color[ffff]}{[0001|ffff]}。
01.34.Alice	那麼，關閉設定畫面。
01.35.FancyL	這形狀就像是魚板，\n簡直讓人口水直流！\n♥好有才華喔♥
01.36.FancyR	我這充滿時尚感的身姿，\n真想讓你也看一看。\n這種時候，我居然{[0001|1d00]}{color[0400]}不能被看見{color[ffff]}{[0001|ffff]}……
01.37.FancyAll	真是太過分了！
01.38.Alice	……那麼，我們就先暫時\n把時尚物件設定為{[0001|1d00]}{color[0400]}能看見{color[ffff]}{[0001|ffff]}，\n確認一下發生了什麼事吧。
01.39.Alice	選擇{[0001|1d00]}Joy-Con(L){[0001|ffff]}的\n時尚物件小節點……
01.40.Alice	打開設定畫面。
01.41.Alice	把{[0001|1d00]}狀態{[0001|ffff]}的{[0001|1d00]}{color[0400]}能看見{color[ffff]}{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}開啟{color[ffff]}{[0001|ffff]}。
01.42.Alice	關閉設定畫面。
01.43.Alice	接著設定{[0001|1d00]}Joy-Con(R){[0001|ffff]}的\n時尚物件小節點……
01.44.Alice	到設定畫面……
01.45.Alice	把{[0001|1d00]}{color[0400]}能看見{color[ffff]}{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}開啟{color[ffff]}{[0001|ffff]}。
01.46.Alice	關閉。
01.47.Alice	走吧，去遊戲畫面\n確認看看變成怎樣了。
02.00.Alice	Joy-Con(L)黏在藍色的人身上、\nJoy-Con(R)黏在紅色的人身上，對吧。
02.01.Alice	時尚物件就是\n像這樣黏在人身上。
02.02.Alice	{[0001|1d00]}{color[0400]}藍色地面{color[ffff]}{[0001|ffff]}上的接觸感應器\n只會對水藍色的{[0001|1d00]}{color[0400]}Joy-Con(L){color[ffff]}{[0001|ffff]}有反應。
02.03.Alice	{[0001|1d00]}{color[0400]}紅色地面{color[ffff]}{[0001|ffff]}上的接觸感應器\n只會對紅色的{[0001|1d00]}{color[0400]}Joy-Con(R){color[ffff]}{[0001|ffff]}有反應。
02.04.Alice	{[0001|1d00]}{color[0400]}左右推動操控搖桿{color[ffff]}{[0001|ffff]}可以移動藍色的人、\n{[0001|1d00]}{color[0400]}左右推動操控搖桿{color[ffff]}{[0001|ffff]}可以移動紅色的人……\n試著確認一下兩邊感應器的反應吧。
02.05.Alice	當人站上地面時……\n接觸感應器會接觸到{[0001|1d00]}{color[0400]}Joy-Con{color[ffff]}{[0001|ffff]}……
02.06.Alice	然後接觸感應器就會對\n時尚物件的Joy-Con產生反應……\n這樣你明白了嗎？
02.07.Alice	如果覺得已經確認清楚了，\n就回到程式設計畫面吧。
03.00.FancyR	你有好好欣賞\n我們時尚的外表了嗎？
03.02.SensorL	把時尚物件小節點設定為能看見後，\n你應該更容易了解其中的原理了吧？
03.05.SensorR	當時尚物件的Joy-Con(L)\n進到我框起來的範圍時……
03.06.SensorL	我就會傳送訊號\n給特效小節點……
03.07.EffectR	當接觸感應器的訊號\n傳到我的輸入端時……
03.08.EffectR	我就會……砰砰砰！
03.09.SensorAll	哇啊！
03.10.SensorL	你不要嚇我啦。
03.11.RigidC	有時候……
03.12.SensorAll	哇啊啊！
03.13.SensorR	你不要突然搭話啦～～
03.14.RigidC	我很抱歉。
03.15.RigidC	我是顯眼的黃綠色地面，\n坐落在地板的正中央。
03.16.RigidC	但我覺得我的作用，\n不如我的位置顯眼。
03.17.FancyL	哎呀，舞台中央可是個\n能盡情表現自己的好位置喔♥
03.18.Alice	那麼，我們就讓他像\n主角一樣閃耀起來吧。
03.19.Alice	把2個接觸感應器小節點\n都移動到黃綠色的地面上。
03.20.Alice	試著讓他變成\n不管紅色還是藍色的人站上去\n都會產生反應的地面。
03.21.RigidC	……我的責任好重大啊。
03.23.Alice	先把左邊的\n接觸感應器小節點\n移向正中央。
03.25.Alice	接著把右邊的\n接觸感應器小節點\n也移向正中央。
03.26.RigidC	兩個小節點緊緊地重疊在一起呢。\n……我好像有點開始緊張了。
03.29.RigidL	接觸感應器小節點不在上面了，\n也就是說……
03.30.RigidR	我們好像會添麻煩，\n先走一步了。
03.31.RigidC	……我覺得有點不安。
03.32.Alice	走吧，到遊戲畫面\n確認看看變成怎樣了。
04.00.Alice	在正中間的黃綠色地面上\n可以看到一個框框，\n這就是接觸感應器的確認範圍。
04.01.Alice	雖然看起來只有一個框框，\n但其實有2個接觸感應器。
04.02.Alice	試著{[0001|1a00]}{color[0400]}左右推動操控搖桿{color[ffff]}{[0001|ffff]}\n和{[0001|1a00]}{color[0400]}操控搖桿{color[ffff]}{[0001|ffff]}來移動人，\n讓他們依序站到黃綠色地面上。
04.03.Alice	當藍色的人站上去時，拉炮響起；\n當紅色的人站上去時，出現了衝擊特效……對吧？
04.04.Alice	出現了不一樣的特效……\n表示兩個接觸感應器\n都有確實地做出反應。
04.05.Alice	如果覺得已經確認清楚\n2個人有被區分出來了，\n就回到程式設計畫面吧。
05.00.SensorL	怎麼樣？
05.01.SensorR	雖然看起來只有\n1個小節點在正中間……
05.02.SensorL	但其實我們兩個都有……
05.03.SensorAll	好好地在工作！
05.05.FancyR	要展現自己的時尚，\n果然還是在舞台中央最適合呢♥
05.06.Alice	雖然現在我們為了方便說明，\n暫時把時尚物件設定為能看見……
05.07.Alice	但如果想讓畫面變得清爽，\n還是把時尚物件和感應器小節點\n隱藏起來比較好。
05.09.FancyL	怎麼這樣！\n我好不容易可以在\n舞台中央表現自己……！
05.10.RigidC	不過……\n{[0001|1d00]}{color[0400]}隱藏的外表之下擁有非凡的意義{color[ffff]}{[0001|ffff]}……\n總覺得很厲害呢！
05.11.EffectL	是啊～俗話說：\n「黑瓶子裝醬油，烏漆抹黑」嘛。
05.12.EffectR	不對不對，應該是\n「黑瓶子裝醬油，廢物利用」吧！
05.13.EffectL	你應該說「黑瓶子裝醬油，深藏不露」吧！\n是說廢物利用是怎樣啊？！\n這樣算厲害還是不厲害？！
05.13-01.EffectL	哇哈哈哈哈哈。
05.13-02.EffectR	哇哈哈哈哈哈。
05.14.Alice	……好了，解說也告一段落了。\n將同種類小節點分別處理的方法，\n你都清楚了嗎？
05.15.SensorL	我們接觸感應器小節點可以\n分別確認{color[0400]}{[0001|1d00]}不同外表的時尚物件{[0001|ffff]}{color[ffff]}。
05.18.HumanL	所以只要把{[0001|1d00]}{color[0400]}不同外觀設定的\n時尚物件小節點{color[ffff]}{[0001|ffff]}連接到我們身上……
05.19.HumanR	就能讓接觸感應器小節點\n{color[0400]}{[0001|1d00]}區分出{[0001|ffff]}{color[ffff]}我們的不同，對吧。
05.23.Alice	雖然這次我們是以人小節點為例，\n但實際運用時卻不一定要使用人。\n只要可以與時尚物件小節點連接……
05.24.Alice	就算是其他的小節點\n也可以使用這個技巧，\n你可要記住喔。
05.25.Alice	那今天就講到這裡。
05.26.HumanL	再見囉。
05.27.FancyR	……這次我就勉強當個幕後人員吧。\n不過，總有一天我會靠自己的力量……\n站上舞台的中央！
Guidebook_FallAndBreak.msbt
000	……你好。
001	你可以看到棕色的場地上有{[0001|1d00]}{color[0400]}人{color[ffff]}{[0001|ffff]}。
002	用{[0001|1d00]}{color[0400]}操控搖桿{color[ffff]}{[0001|ffff]}可以移動人，\n按下{[0001|1d00]}{color[0400]}鍵{color[ffff]}{[0001|ffff]}可以跳躍……
003	試著移動{[0001|1d00]}{color[0400]}人{color[ffff]}{[0001|ffff]}，\n讓他從場地上{[0001|1d00]}{color[0400]}掉下去{color[ffff]}{[0001|ffff]}。
004	掉下場地後，{[0001|1d00]}{color[0400]}人就損壞了{color[ffff]}{[0001|ffff]}。
005	這次要教你的就是這種\n{[0001|1d00]}{color[0400]}從場地上掉下去，人就會損壞{color[ffff]}{[0001|ffff]}的程式。
006	到程式設計畫面去看看吧。
007	啊～\n是{[0201]}～！
008	哦！\n你來啦！
009	呵呵呵……歡迎啊……
010	嗯嗯～你想知道\n{[0001|1d00]}{color[0400]}從場地上掉下去，人就會損壞{color[ffff]}{[0001|ffff]}的\n程式原理啊！？
011	我明白了！\n那我先來說明一下\n{[0001|1d00]}{color[0400]}人為什麼會損壞{color[ffff]}{[0001|ffff]}吧！
012	人之所以會損壞，\n是因為我向{[0001|1d00]}{color[0400]}破壞物件小節點{color[ffff]}{[0001|ffff]}\n傳送了訊號！
013	我是{[0001|1d00]}{color[0400]}破壞物件小節點{color[ffff]}{[0001|ffff]}……
014	你有{[0001|1d00]}{color[0400]}想要破壞的物件{color[ffff]}{[0001|ffff]}吧……？\n呵呵呵……\n你的眼神已經透露了一切。
015	那麼，我就如你所願地破壞物件吧……
016	當我接收到{[0001|1d00]}{color[0400]}訊號{color[ffff]}{[0001|ffff]}時……\n就會破壞和我{[0001|1d00]}{color[0400]}接觸的小節點{color[ffff]}{[0001|ffff]}……
017	你有看到{[0001|1d00]}{color[0400]}人小節點{color[ffff]}{[0001|ffff]}和我\n{[0001|1d00]}{color[0400]}連接{color[ffff]}{[0001|ffff]}在一起嗎……？
018	因為{[0001|1d00]}{color[0400]}我{color[ffff]}{[0001|ffff]}正{[0001|1d00]}{color[0400]}連接{color[ffff]}{[0001|ffff]}在{[0001|1d00]}{color[0400]}人小節點{color[ffff]}{[0001|ffff]}上，\n無時無刻接觸著{[0001|1d00]}{color[0400]}人{color[ffff]}{[0001|ffff]}……
019	所以當我接收到\n{[0001|1d00]}{color[0400]}比較小節點{color[ffff]}{[0001|ffff]}傳來的訊號時，\n就會將人破壞喔……
020	{[0001|1d00]}{color[0400]}接收到訊號就破壞物件{color[ffff]}{[0001|ffff]}……\n我就是這樣的小節點喔。
021	而我會在{[0001|1d00]}{color[0400]}人掉下場地時{color[ffff]}{[0001|ffff]}\n傳送訊號！
123	你問我是怎麼知道\n人掉下場地了？
124	說得也是！\n很讓人在意對吧！對吧？
022	那是因為……我會比較\n{[0001|1d00]}{color[0400]}人所在的位置高度{color[ffff]}{[0001|ffff]}和\n{[0001|1d00]}{color[0400]}場地所在的位置高度{color[ffff]}{[0001|ffff]}！
023	我請了{[0001|1d00]}{color[0400]}位置感應器小節點{color[ffff]}{[0001|ffff]}和\n{[0001|1d00]}{color[0400]}常數小節點{color[ffff]}{[0001|ffff]}來幫忙！
024	我是{[0001|1d00]}{color[0400]}位置感應器小節點{color[ffff]}{[0001|ffff]}！
025	想知道物件的{color[0400]}{[0001|1d00]}位置{[0001|ffff]}{color[ffff]}時，\n就交給我吧！
026	為了掌握{[0001|1d00]}{color[0400]}人所在的位置{color[ffff]}{[0001|ffff]}……\n我正{[0001|1d00]}{color[0400]}連接{color[ffff]}{[0001|ffff]}在{[0001|1d00]}{color[0400]}人小節點{color[ffff]}{[0001|ffff]}上！
028	你有看到我的3個{[0001|1d00]}{color[0400]}輸出端{color[ffff]}{[0001|ffff]}吧？
125	最上面的是{color[0400]}{[0001|1d00]}X{[0001|ffff]}{color[ffff]}端口！\n會輸出{color[0400]}{[0001|1d00]}人{[0001|ffff]}{color[ffff]}所在的{color[0400]}{[0001|1d00]}左右位置{[0001|ffff]}{color[ffff]}……
126	正中間的是{[0001|1d00]}{color[0400]}Y{color[ffff]}{[0001|ffff]}端口！\n會輸出{[0001|1d00]}{color[0400]}高度{color[ffff]}{[0001|ffff]}！
127	最下面的是{color[0400]}{[0001|1d00]}Z{[0001|ffff]}{color[ffff]}端口！\n會告訴我人所在的{color[0400]}{[0001|1d00]}前後位置{[0001|ffff]}{color[ffff]}！
030	現在，{[0001|1d00]}{color[0400]}比較小節點{color[ffff]}{[0001|ffff]}想要知道\n{[0001|1d00]}{color[0400]}人所在的位置高度{color[ffff]}{[0001|ffff]}……
031	所以正中間的{[0001|1d00]}{color[0400]}Y{color[ffff]}{[0001|ffff]}輸出端正和\n{[0001|1d00]}{color[0400]}比較小節點{color[ffff]}{[0001|ffff]}連接在一起。
032	我是{[0001|1d00]}{color[0400]}常數小節點{color[ffff]}{[0001|ffff]}。\n收到指示要顯示{[0001|1d00]}{color[0400]}0.00{color[ffff]}{[0001|ffff]}、{[0001|1d00]}{color[0400]}0.00{color[ffff]}{[0001|ffff]}。
033	這個{[0001|1d00]}{color[0400]}0.00{color[ffff]}{[0001|ffff]}，\n就是{[0001|1d00]}{color[0400]}場地的位置高度{color[ffff]}{[0001|ffff]}！
034	{[0001|1d00]}{color[0400]}位置感應器小節點{color[ffff]}{[0001|ffff]}、{[0001|1d00]}{color[0400]}常數小節點{color[ffff]}{[0001|ffff]}，\n謝謝你們～！
035	我就是這樣在比較\n{[0001|1d00]}{color[0400]}人{color[ffff]}{[0001|ffff]}和{[0001|1d00]}{color[0400]}場地{color[ffff]}{[0001|ffff]}的{[0001|1d00]}{color[0400]}位置高度{color[ffff]}{[0001|ffff]}……明白了嗎！？
036	現在，\n我的比較條件被設定為{[0001|1d00]}{color[0400]}＞{color[ffff]}{[0001|ffff]}……
037	當滿足{[0001|1d00]}{color[0400]}場地的位置高度＞人的位置高度{color[ffff]}{[0001|ffff]}\n這個條件時……
038	也就是{[0001|1d00]}{color[0400]}人在場地下方時{color[ffff]}{[0001|ffff]}，\n我就會傳送訊號給破壞物件小節點！
039	這就是\n{[0001|1d00]}{color[0400]}從場地上掉下去，人就會損壞{color[ffff]}{[0001|ffff]}的原理！
040	謝謝你們。
041	這個結構有點複雜……
042	我們到遊戲畫面\n重新確認一下動作吧。
043	試著讓人從場地上掉下去。
044	當{[0001|1d00]}{color[0400]}人的位置{color[ffff]}{[0001|ffff]}比{[0001|1d00]}{color[0400]}場地的位置{color[ffff]}{[0001|ffff]}\n還要低時……
045	人就會損壞。
046	沒看清楚的話，\n可以按下{[0001|1d00]}{color[0400]}重來{color[ffff]}{[0001|ffff]}多確認幾次。
047	回到程式設計畫面吧。
048	明白了嗎～？\n這就是從場地上掉落後就會損壞的原理。
049	另外……\n只要更改{[0001|1d00]}{color[0400]}常數小節點{color[ffff]}{[0001|ffff]}的數值，\n就能改變人{[0001|1d00]}{color[0400]}會損壞的位置高度{color[ffff]}{[0001|ffff]}！
122	記得試試看喔～
050	選擇{[0001|1d00]}{color[0400]}常數小節點{color[ffff]}{[0001|ffff]}。
051	打開設定。
052	試著把數值設定為{[0001|1d00]}{color[0400]}-2.00{color[ffff]}{[0001|ffff]}吧。
053	關閉設定。
054	{[0001|1d00]}{color[0400]}0.00 {color[ffff]}{[0001|ffff]}是場地的位置高度……
129	所以{[0001|1d00]}{color[0400]}-2.00{color[ffff]}就是{[0001|ffff]}\n{[0001|1d00]}{color[0400]}低於場地位置的地方{color[ffff]}{[0001|ffff]}。
055	到{[0001|1d00]}{color[0400]}遊戲畫面{color[ffff]}{[0001|ffff]}看看會如何變化吧。
056	試著讓人從{[0001|1d00]}{color[0400]}場地{color[ffff]}{[0001|ffff]}上掉下去。
057	人在{[0001|1d00]}{color[0400]}比剛才低的地方{color[ffff]}{[0001|ffff]}損壞了。
058	當人所在的位置高度小於{[0001|1d00]}{color[0400]}-2.00{color[ffff]}{[0001|ffff]}時……
059	就會滿足{[0001|1d00]}{color[0400]}比較小節點{color[ffff]}{[0001|ffff]}的條件。\n而比較小節點送出訊號後……\n{[0001|1d00]}{color[0400]}人就會損壞{color[ffff]}{[0001|ffff]}。
060	回到{[0001|1d00]}{color[0400]}程式設計畫面{color[ffff]}{[0001|ffff]}吧。
061	那麼，接著我們來試著\n更改一下比較的設定吧！
062	把我的比較條件\n從{[0001|1d00]}{color[0400]}＞{color[ffff]}{[0001|ffff]}更改為{[0001|1d00]}{color[0400]}＜{color[ffff]}{[0001|ffff]}看看！
063	打開比較小節點的設定。
064	把條件更改為{[0001|1d00]}{color[0400]}＜{color[ffff]}{[0001|ffff]}。
065	關閉設定畫面。
131	在遊戲畫面確認看看吧。
132	條件被更改為{[0001|1d00]}{color[0400]}＜{color[ffff]}{[0001|ffff]}後……\n人馬上就損壞了……
134	其中的原因……\n我會在程式設計畫面中為你解說。
135	現在，常數小節點的數值是{[0001|1d00]}{color[0400]}-2.00{color[ffff]}{[0001|ffff]}。
136	剛才我們把設定更改為{[0001|1d00]}{color[0400]}＜{color[ffff]}{[0001|ffff]}，\n所以比較小節點會在\n{[0001|1d00]}{color[0400]}-2.00＜人所在的位置高度{color[ffff]}{[0001|ffff]}時輸出訊號。
137	也就是說，\n當{[0001|1d00]}{color[0400]}人所在的位置高度大於-2.00{color[ffff]}{[0001|ffff]}時，\n人就會損壞。
138	{[0001|1d00]}{color[0400]}-2.00{color[ffff]}{[0001|ffff]}是{[0001|1d00]}{color[0400]}低於場地位置的地方{color[ffff]}{[0001|ffff]}。
139	場地上的人從一開始\n就已經站在高於{[0001|1d00]}{color[0400]}-2.00{color[ffff]}{[0001|ffff]}的位置，\n滿足了比較條件。
140	所以當我們一進入遊戲畫面，\n{[0001|1d00]}{color[0400]}比較小節點{color[ffff]}{[0001|ffff]}就會發出{[0001|1d00]}{color[0400]}訊號{color[ffff]}{[0001|ffff]}，\n人就損壞了。
066	那麼，我們來更改一下常數，\n試著改變損壞的條件吧。
067	打開{[0001|1d00]}{color[0400]}常數小節點{color[ffff]}{[0001|ffff]}的設定。
068	把數值更改為{[0001|1d00]}{color[0400]}2.00{color[ffff]}{[0001|ffff]}。
069	關閉設定。
070	這樣一來，人就會在\n{[0001|1d00]}{color[0400]}位置高度大於2.00時{color[ffff]}{[0001|ffff]}損壞了。
071	{[0001|1d00]}{color[0400]}2.00{color[ffff]}{[0001|ffff]}是高於場地的地方。
072	要怎麼做，人才會損壞呢？
073	到{[0001|1d00]}{color[0400]}遊戲畫面{color[ffff]}{[0001|ffff]}試看看吧。
074	我們該怎麼做，\n才能把{[0001|1d00]}{color[0400]}人{color[ffff]}{[0001|ffff]}移動到高於場地的地方呢？
075	在場地上按下{[0001|1d00]}{color[0400]}鍵{color[ffff]}{[0001|ffff]}，\n試著讓人跳躍看看。
076	{[0001|1d00]}{color[0400]}人{color[ffff]}{[0001|ffff]}一跳起來就損壞了。
128	當{[0001|1d00]}{color[0400]}人{color[ffff]}{[0001|ffff]}跳起來時，\n位置高度會大於{[0001|1d00]}{color[0400]}2.00{color[ffff]}{[0001|ffff]}，\n人也就損壞了。
077	……現在程式被設計為\n人一跳起來，自己就會損壞……
078	但我們也能把程式設計為\n人一跳起來，{[0001|1d00]}{color[0400]}別的物件就會損壞{color[ffff]}{[0001|ffff]}。
080	來試看看吧。
081	那麼，這次我們就試著……\n把程式設計為\n人一跳起來，{[0001|1d00]}{color[0400]}蘋果{color[ffff]}{[0001|ffff]}就會損壞。
082	讓{[0001|1d00]}{color[0400]}蘋果{color[ffff]}{[0001|ffff]}的{[0001|1d00]}{color[0400]}時尚物件小節點{color[ffff]}{[0001|ffff]}登場吧。
141	輪到我表現了呢♥
086	接著更改設定，\n讓{[0001|1d00]}{color[0400]}破壞物件小節點{color[ffff]}{[0001|ffff]}破壞{[0001|1d00]}{color[0400]}蘋果{color[ffff]}{[0001|ffff]}。
087	選擇{[0001|1d00]}{color[0400]}破壞物件小節點{color[ffff]}{[0001|ffff]}和\n{[0001|1d00]}{color[0400]}人小節點{color[ffff]}{[0001|ffff]}之間的{[0001|1d00]}{color[0400]}連接{color[ffff]}{[0001|ffff]}。
088	解除連接。
089	連接到{[0001|1d00]}{color[0400]}蘋果{color[ffff]}{[0001|ffff]}的{color[0400]}{[0001|1d00]}時尚物件小節點{[0001|ffff]}{color[ffff]}。
090	最後我們來更改\n{[0001|1d00]}{color[0400]}破壞物件小節點{color[ffff]}{[0001|ffff]}的設定。
091	選擇{[0001|1d00]}{color[0400]}要破壞哪個物件？{color[ffff]}{[0001|ffff]}……
130	把{[0001|1d00]}{color[0400]}人{color[ffff]}{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}關閉{color[ffff]}{[0001|ffff]}。
092	然後把{[0001|1d00]}{color[0400]}蘋果{color[ffff]}{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}開啟{color[ffff]}{[0001|ffff]}吧。
093	關閉這個畫面。
094	接著關閉設定畫面。
095	這樣一來……\n{[0001|1d00]}{color[0400]}人一跳起來，蘋果就會損壞{color[ffff]}{[0001|ffff]}了。
096	呵呵呵……接下來要破壞{[0001|1d00]}{color[0400]}蘋果{color[ffff]}{[0001|ffff]}嗎……？
097	來破壞吧……無止境地破壞……
098	……到{[0001|1d00]}{color[0400]}遊戲畫面{color[ffff]}{[0001|ffff]}去吧。
112	按下{color[0400]}{[0001|1d00]}鍵{[0001|ffff]}{color[ffff]}讓人跳起來，\n同時仔細觀察{color[0400]}{[0001|1d00]}蘋果{[0001|ffff]}{color[ffff]}的變化。
113	人一跳起來，{[0001|1d00]}{color[0400]}蘋果{color[ffff]}{[0001|ffff]}就損壞了。
114	只要像這樣改變\n{[0001|1d00]}{color[0400]}破壞物件小節點的破壞對象{color[ffff]}{[0001|ffff]}……
115	就能設計出這種\n{[0001|1d00]}{color[0400]}跳起就會破壞蘋果{color[ffff]}{[0001|ffff]}的程式。
116	回{[0001|1d00]}{color[0400]}程式設計畫面{color[ffff]}{[0001|ffff]}吧。
117	歡迎回來！
118	我們可以調整{[0001|1d00]}{color[0400]}常數小節點{color[ffff]}{[0001|ffff]}的數值，\n改變物件{[0001|1d00]}{color[0400]}損壞的位置{color[ffff]}{[0001|ffff]}……
119	也可以透過更改\n{[0001|1d00]}{color[0400]}破壞物件小節點{color[ffff]}{[0001|ffff]}的設定，\n改變他要破壞的物件……
120	在遊戲製作的路上，\n這些知識或許能幫上你的忙喔！
121	再見……你可別忘囉……\n不論時間、不分物件、不管次數，\n只要你希望，我都會幫你破壞掉。
Guidebook_FreeSlide.msbt
00.00.Alice	……你好，\n{[0201]}。
00.01.Alice	遊戲畫面上可以看到\n一個立方體被放在圓柱體上。
00.02.Alice	目前操控搖桿沒有作用……\n試著用右邊的{color[0400]}{[0001|1d00]}操控搖桿{[0001|ffff]}{color[ffff]}和{color[0400]}{[0001|1d00]}鍵{[0001|ffff]}{color[ffff]}\n來移動藍色立方體吧。
00.03.Alice	立方體保持著原本的方向，\n向前後左右和上方移動了。
00.04.Alice	這次我要介紹的就是\n能夠做出這種複雜動作的\n{[0001|1d00]}{color[0400]}自由滑動連接小節點{color[ffff]}{[0001|ffff]}。
00.05.Alice	那麼，我們到程式設計畫面去吧。
01.00.Free	……嗯，你有什麼事嗎？
01.02.Button	嗨！{[0201]}！\n你今天怎麼來了！？
01.04.Button	原來如此，你想多了解一些\n{[0001|1d00]}{color[0400]}自由滑動連接小節點{color[ffff]}{[0001|ffff]}的事情啊！
01.05.Button	喂！有人找你喲！\n自由滑動連接小節點！
01.06.Free	……我不去，\n我現在不想說話。
01.07.Button	……
01.08.Button	真拿你沒辦法！\n那我們先開始講解了喲！
01.09.Sylinder	……我是物件小節點，\n是個{color[0400]}{[0001|1d00]}圓柱體{[0001|ffff]}{color[ffff]}。\n我{[0001|1d00]}{color[0400]}不會動{color[ffff]}{[0001|ffff]}。
01.10.Cube	我是{[0001|1d00]}{color[0400]}藍色立方體{color[ffff]}{[0001|ffff]}，\n我{[0001|1d00]}{color[0400]}可以動{color[ffff]}{[0001|ffff]}。
01.12.Cube	我們{color[0400]}{[0001|1d00]}上下連接{[0001|ffff]}{color[ffff]}在一起，\n所以在遊戲畫面中，\n我看起來就像是在圓柱體的正上方。
01.13.Sylinder	但是我們並沒有直接連接在一起。
01.14.Sylinder	自由滑動連接小節點\n連接著我……
01.15.Cube	而我也連接著\n自由滑動連接小節點。
01.16.Button	也就是說，你們是把\n{[0001|1d00]}{color[0400]}自由滑動連接小節點\n夾在中間{color[ffff]}{[0001|ffff]}連接的對吧！
01.18.Free	好了，讓你們久等了。\n我的精神來了。
01.18-01.Free	機會難得，\n我就介紹一下自己吧。
01.19.Free	只要把我{color[0400]}{[0001|1d00]}夾在中間連接{[0001|ffff]}{color[ffff]}，\n物件就可以{[0001|1d00]}{color[0400]}滑動{color[ffff]}{[0001|ffff]}。
01.20.Free	你知道……滑動連接小節點嗎？\n就是像那種感覺。
01.21.Free	但和他不一樣的是～\n我有{[0001|1d00]}{color[0400]}X、Y、Z{color[ffff]}{[0001|ffff]}這3個{[0001|1d00]}{color[0400]}輸入端{color[ffff]}{[0001|ffff]}……
01.22.Free	輸入這些端口的數值，\n將會決定物件要向\nX軸、Y軸、Z軸方向{color[0400]}{[0001|1d00]}滑動多遠{[0001|ffff]}{color[ffff]}。
01.23.Free	舉例來說，\n如果向{[0001|1d00]}{color[0400]}X端口{color[ffff]}{[0001|ffff]}輸入{color[0400]}{[0001|1d00]}1.00{[0001|ffff]}{color[ffff]}，\n就能{color[0400]}{[0001|1d00]}向右滑動1.00m{[0001|ffff]}{color[ffff]}……
01.24.Free	如果向{[0001|1d00]}{color[0400]}Y端口{color[ffff]}{[0001|ffff]}輸入{[0001|1d00]}{color[0400]}1.00{color[ffff]}{[0001|ffff]}，\n就能{[0001|1d00]}{color[0400]}向上滑動1.00m{color[ffff]}{[0001|ffff]}……
01.25.Button	要是兩邊同時輸入訊號，\n也可以斜著滑動，是吧！
01.29.Free	啊，對了……\n像是「只能在-1.00到1.00之間滑動」\n之類的麻煩限制，我可沒有喔。
01.30.Free	不管是10m還是100m，\n只要照著輸入端傳來的訊號\n讓物件滑動不就好了嘛～
01.34.Free	除此之外，\n我還可以{color[0400]}{[0001|1d00]}無視{[0001|ffff]}{color[ffff]}輸入端的數值。
01.35.Free	雖然對特地輸入訊號給我的小節點很抱歉，\n但有時候就是會想無視一切，\n照自己的步調慢慢來，不是嗎？
01.36.Free	呼～雖然才說明到一半，\n但是我已經累了，\n剩下的你們隨便講講就好。
01.36-01.Free	就這樣啦。
01.37.StickH	還真是隨便啊～
01.38.Alice	真拿他沒辦法……\n我們來實際操作一下\n{color[0400]}{[0001|1d00]}無視輸入{[0001|ffff]}{color[ffff]}的設定吧。
01.40.Alice	選擇自由滑動連接小節點……
01.41.Alice	打開設定畫面。
01.42.Alice	這邊可以開啟或關閉\n{[0001|1d00]}{color[0400]}滑動的移動輸入{color[ffff]}{[0001|ffff]}。
01.43.Alice	現在{[0001|1d00]}{color[0400]}X、Y、Z全部都被設定為開啟{color[ffff]}{[0001|ffff]}，\n物件會{color[0400]}{[0001|1d00]}照著輸入{[0001|ffff]}{color[ffff]}的數值在各軸心上滑動。
01.44.Alice	首先，試著把{[0001|1d00]}{color[0400]}Y{color[ffff]}{[0001|ffff]}設定為{color[0400]}{[0001|1d00]}關閉{[0001|ffff]}{color[ffff]}。
01.45.Alice	OK，關閉設定畫面。
01.46.Alice	去遊戲畫面看看\n變得怎樣了吧。
02.00.Alice	藍色立方體掉到地上了。
02.01.Alice	因為{[0001|1d00]}{color[0400]}無視{color[ffff]}{[0001|ffff]}了{[0001|1d00]}{color[0400]}Y端口{color[ffff]}{[0001|ffff]}的輸入，\n藍色立方體{[0001|1d00]}{color[0400]}受重力影響掉了下來{color[ffff]}{[0001|ffff]}。
02.02.Alice	試著按下之前向{[0001|1d00]}Y端口{[0001|ffff]}\n輸入訊號的{color[0400]}{[0001|1d00]}鍵{[0001|ffff]}{color[ffff]}。
02.03.Alice	什麼事都沒發生吧。
02.05.Alice	輸入到{[0001|1d00]}Y端口{[0001|ffff]}的數值\n被完全地無視了。
02.06.Alice	那麼，接下來我們試著\n{color[0400]}{[0001|1d00]}上下左右推動操控搖桿{[0001|ffff]}{color[ffff]}。
02.07.Alice	物件會照著輸入，\n前後左右地移動。
02.08.Alice	在{color[0400]}{[0001|1d00]}滑動的移動輸入{[0001|ffff]}{color[ffff]}的設定裡，\n{color[0400]}{[0001|1d00]}X和Z{[0001|ffff]}{color[ffff]}還是維持在{color[0400]}{[0001|1d00]}開啟{[0001|ffff]}{color[ffff]}的狀態，\n所以立方體才會{color[0400]}{[0001|1d00]}照著輸入{[0001|ffff]}{color[ffff]}移動。
02.09.Alice	確認完動作後，\n就回到程式設計畫面吧。
03.00.Button	我有傳送鍵的動作給他耶！\n這傢伙！居然敢無視我！
03.03.Alice	接著來更改一下{color[0400]}{[0001|1d00]}Z軸{[0001|ffff]}{color[ffff]}的設定吧。
03.04.Alice	選擇自由滑動連接小節點……
03.05.Alice	打開設定畫面。
03.06.Alice	這次試著把{[0001|1d00]}{color[0400]}Z{color[ffff]}{[0001|ffff]}設定為{color[0400]}{[0001|1d00]}關閉{[0001|ffff]}{color[ffff]}。
03.07.Alice	關閉設定畫面。
03.10.Alice	另外，這次我們要透過\n讓人推動物件的方式確認動作。
03.11.Human	你好啊，\n你果然還是需要我幫忙呢！
03.12.Free	放輕鬆去做就好啦。
03.13.Alice	到遊戲畫面去確認吧。
04.00.Alice	現在應該只有X軸方向\n會照著輸入移動。
04.01.Alice	先試著用{color[0400]}{[0001|1d00]}上下左右推動操控搖桿{[0001|ffff]}{color[ffff]}和\n按下{color[0400]}{[0001|1d00]}鍵{[0001|ffff]}{color[ffff]}的方式來移動藍色立方體。
04.02.Alice	立方體只會左右移動。
04.03.Alice	那麼，接下來我們試著\n{color[0400]}{[0001|1d00]}上下左右推動操控搖桿{[0001|ffff]}{color[ffff]}，\n操控人去推動藍色立方體。
04.04.Alice	用人去推立方體，\n立方體就向前後移動了。
04.05.Alice	這是因為立方體無視了\nZ軸方向的輸入{color[0400]}{[0001|1d00]}在移動{[0001|ffff]}{color[ffff]}。
04.06.Alice	而X軸方向會照著輸入移動，\n所以即使用人去推立方體，\n立方體也不會向左右移動。
04.07.Alice	順帶一提，\n如果立方體或人從畫面中消失了，\n只要按下重來就可以重新開始。
04.08.Alice	如果覺得已經確認清楚了，\n就回到程式設計畫面吧。
05.01.StickV	我轉得這麼努力～\n發出的訊號卻被他無視了呢～
05.02.Alice	那麼，最後我們來試著\n讓自由滑動連接小節點\n無視X軸方向的輸入吧。
05.03.Alice	選擇自由滑動連接小節點……
05.04.Alice	打開設定畫面。
05.05.Alice	把{[0001|1d00]}{color[0400]}X{color[ffff]}{[0001|ffff]}設定為{color[0400]}{[0001|1d00]}關閉{[0001|ffff]}{color[ffff]}。
05.06.Alice	關閉設定畫面。
05.07.Alice	這樣輸入的數值\n就全部被無視了。
05.08.Alice	去遊戲畫面確認吧。
06.00.Alice	試著用{color[0400]}{[0001|1d00]}上下左右推動操控搖桿{[0001|ffff]}{color[ffff]}和\n按下{color[0400]}{[0001|1d00]}鍵{[0001|ffff]}{color[ffff]}的方式，看看是否能移動藍色立方體。
06.01.Alice	立方體不會動吧。
06.02.Alice	那麼，接下來試著\n{color[0400]}{[0001|1d00]}上下左右推動操控搖桿{[0001|ffff]}{color[ffff]}，\n操控人去推動藍色立方體。
06.03.Alice	用人去推立方體，\n立方體就移動了。
06.04.Alice	現在只要用人去推立方體，\n立方體就可以向前後左右移動。
06.07.Alice	如果覺得已經確認清楚了，\n就回到程式設計畫面吧。
07.01.Free	好了，我休息夠了。
07.02.Free	啊，你們已經講完啦？\n那麻煩你做個結尾吧。
07.09.Alice	……聽了這麼多關於\n自由滑動連接小節點的事情……\n你了解他是怎樣的小節點了嗎？
07.10.Free	就是讓連接在一起的物件滑動吧？\n這我當然知道啦。
07.11.Button	你還可以在{color[0400]}{[0001|1d00]}3個輸入端{[0001|ffff]}{color[ffff]}中\n詳細設定物件滑動的距離！
07.13.Free	嗯，就是這樣。\n不過依據設定的不同，\n我也可能會無視輸入的訊號就是了。
07.14.Cube	無視輸入時，\n物件可以在該方向自由地移動。
07.16.Alice	只要善用自由滑動連接小節點，\n就能做出各種複雜的動作……\n你可要好好利用喔。
07.17.Alice	那麼今天就講到這裡。
07.18.Human	再見囉。
07.19.Free	……{[0201]}，\n製作遊戲需要更自由的想像力。\n你就別想太多了，放手去做吧。
07.20.Free	雖然人家常說「別想太多」\n才是最難做到的事情……
07.21.Free	不過……{[0201]}，\n我還是很期待能看到你\n做出超乎想像的遊戲喔。
Guidebook_GameCamera.msbt
000	……你好。
001	現在遊戲畫面上\n有2個{[0001|1d00]}{color[0400]}箱子{color[ffff]}{[0001|ffff]}。
002	左邊是藍色箱子，\n右邊是紅色……
003	咦……？
004	紅色箱子\n{[0001|1d00]}{color[0400]}跑出{color[ffff]}{[0001|ffff]}遊戲畫面了……
005	我們到{[0001|1d00]}{color[0400]}程式設計畫面{color[ffff]}{[0001|ffff]}……\n看看箱子為什麼會跑出去吧。
006	哦，這不是{[0201]}嘛～
007	你好啊～～～辛苦你了～～～～
008	……嗨。
009	你有什麼事嗎？
010	這個嘛～
011	他當然是因為想知道\n{[0001|1d00]}{color[0400]}遊戲畫面小節點{color[ffff]}{[0001|ffff]}……\n也就是我的事情才來的，對吧～？
012	我會手把手地教你的，\n你就好好期待一下吧～～
013	我的工作就是\n{[0001|1d00]}{color[0400]}把其他小節點圍起來～{color[ffff]}{[0001|ffff]}
014	至於為什麼要把小節點圍起來呢～
015	這是{[0001|1d00]}{color[0400]}為了{color[ffff]}{[0001|ffff]}讓被我圍起來的小節點們\n{[0001|1d00]}{color[0400]}出現在遊戲畫面上{color[ffff]}{[0001|ffff]}～
016	剛剛{[0201]}你\n看到的{[0001|1d00]}{color[0400]}遊戲畫面{color[ffff]}{[0001|ffff]}，\n就是{[0001|1d00]}{color[0400]}我圍起來的地方{color[ffff]}{[0001|ffff]}～
017	拍得很完美吧～～？
018	可是……有物件小節點\n{[0001|1d00]}{color[0400]}跑出{color[ffff]}{[0001|ffff]}遊戲畫面了耶。
019	什麼！？到底在哪裡～？
020	……嗨，我在這裡喲。
021	找到了～～！？
022	我的工作……就是待在這裡。
023	不行、不行～\n我的工作就是要把小節點們\n{[0001|1d00]}{color[0400]}一個不漏地拍進畫面裡{color[ffff]}{[0001|ffff]}啊～！
024	{[0201]}！\n試著把跑出去的{[0001|1d00]}{color[0400]}物件小節點{color[ffff]}{[0001|ffff]}\n移動到{[0001|1d00]}{color[0400]}我的框框裡{color[ffff]}{[0001|ffff]}吧～！
063	把物件小節點移動到\n{[0001|1d00]}{color[0400]}遊戲畫面小節點的框框裡{color[ffff]}{[0001|ffff]}。
025	……我移動了。
026	那麼，我們就去確認一下吧～\nLet's go～！
064	到遊戲畫面去看看吧。
028	在{[0001|1d00]}{color[0400]}程式設計畫面{color[ffff]}{[0001|ffff]}中，\n我們把{[0001|1d00]}{color[0400]}物件小節點{color[ffff]}{[0001|ffff]}移到了\n{[0001|1d00]}{color[0400]}遊戲畫面小節點{color[ffff]}{[0001|ffff]}的框框裡……
029	現在紅色箱子已經\n{[0001|1d00]}{color[0400]}完全進到遊戲畫面{color[ffff]}{[0001|ffff]}裡了呢。
030	那麼，回到程式設計畫面去。
032	完美地拍到紅色箱子了吧～～！
033	所以說～～\n{[0001|1d00]}{color[0400]}拍攝遊戲畫面{color[ffff]}{[0001|ffff]}的事情就交給我吧！
034	然後然後～
035	能移動的可不只有{[0001|1d00]}{color[0400]}物件小節點{color[ffff]}{[0001|ffff]}～\n就連我這個{[0001|1d00]}{color[0400]}遊戲畫面也可以移動{color[ffff]}{[0001|ffff]}喔～！
036	紅色箱子的物件小節點！
037	……嗨。
038	看你那副充滿熱情的模樣……\n不讓你出出風頭實在太可惜了～！
040	{[0201]}，\n試著移動我，讓紅色箱子小節點\n{[0001|1d00]}{color[0400]}出現在遊戲畫面的中間{color[ffff]}{[0001|ffff]}吧～！
067	向右移動\n遊戲畫面小節點。
041	框框的大小也調整一下吧～
066	配合藍色框框調整大小。
042	這樣就完美了～！
043	到遊戲畫面確認看看吧。
044	紅色箱子出現在正中間，\n被{[0001|1d00]}{color[0400]}拍得很大{color[ffff]}{[0001|ffff]}。
045	只要透過{[0001|1d00]}{color[0400]}移動遊戲畫面小節點{color[ffff]}{[0001|ffff]}，\n或是{[0001|1d00]}{color[0400]}更改框框大小{color[ffff]}{[0001|ffff]}的方式……
046	我們就{[0001|1d00]}{color[0400]}能改變\n{color[ffff]}{[0001|ffff]}遊戲畫面的{[0001|1d00]}{color[0400]}拍攝方式{color[ffff]}{[0001|ffff]}。
047	不過……\n這次換看不見藍色箱子了。
048	再打開一次程式設計畫面吧。
049	歡迎回來～！
050	紅色箱子{[0001|1d00]}{color[0400]}出現在畫面中間{color[ffff]}{[0001|ffff]}了吧～～？
051	是在中間沒錯，\n但是看不到藍色箱子了。
052	因為在{[0001|1d00]}{color[0400]}遊戲畫面小節點外{color[ffff]}{[0001|ffff]}的小節點\n{[0001|1d00]}{color[0400]}不會被拍到{color[ffff]}{[0001|ffff]}，所以我們看不見藍色箱子。
053	不行不行，怎麼可以沒拍到～
054	我的工作就是要把小節點們\n一個不漏地拍進遊戲畫面裡～
055	{[0201]}，\n把跑到外面的物件小節點\n也放進我的框框裡吧～
068	把物件移到框框裡。
056	真棒～！\n這下能拍到好畫面了呢～！
057	去看看遊戲畫面吧。
058	因為2個{[0001|1d00]}{color[0400]}物件小節點{color[ffff]}{[0001|ffff]}都進了\n{[0001|1d00]}{color[0400]}遊戲畫面小節點{color[ffff]}{[0001|ffff]}的框框裡……
059	所以2個{[0001|1d00]}{color[0400]}箱子{color[ffff]}{[0001|ffff]}被拍得很大。
060	透過更改遊戲畫面小節點的設定，\n我們就{[0001|1d00]}{color[0400]}可以改變遊戲的顯示方式{color[ffff]}{[0001|ffff]}。
061	到{[0001|1d00]}{color[0400]}程式設計畫面{color[ffff]}{[0001|ffff]}去吧。
069	辛苦你了～
070	{[0201]}，只要有我在，\n你就可以盡情地改變遊戲的顯示方式～
071	要做出最棒的遊戲畫面喔～！
072	……那麼，再見囉。
Guidebook_HingeRotate.msbt
000	……你好。
001	畫面右邊有一個像是\n由球體跟立方體組合起來的物件呢……
002	這次我會為你解說\n如何讓這個{color[0400]}{[0001|1d00]}立方體\n以球體為中心轉動{[0001|ffff]}{color[ffff]}。
003	現在他們都被{color[0400]}{[0001|1d00]}固定在空中{[0001|ffff]}{color[ffff]}……\n不會轉動。
004	你可以用{[0001|1d00]}{color[0400]}操控搖桿{color[ffff]}{[0001|ffff]}移動{[0001|1d00]}{color[0400]}UFO{color[ffff]}{[0001|ffff]}，\n讓UFO接觸立方體，\n看看立方體會不會動吧。
006	確認不會轉動之後，\n就到程式設計畫面吧。
007	哈囉！{[0201]}！
008	天氣真好！！\n今天也是個適合跳舞的日子呢～！
009	沒問題～！\n你想讓物件變得會{[0001|1d00]}{color[0400]}轉來轉去{color[ffff]}{[0001|ffff]}對吧～！
010	很好！\n那我們就一起轉來轉去吧～！
011	我是{[0001|1d00]}{color[0400]}鉸鍊連接小節點{color[ffff]}{[0001|ffff]}！
012	在我左右邊的就是我的好朋友，\n他們是{[0001|1d00]}{color[0400]}物件小節點{color[ffff]}{[0001|ffff]}～！
013	……我是{[0001|1d00]}{color[0400]}球體{color[ffff]}{[0001|ffff]}。
014	……我是{[0001|1d00]}{color[0400]}立方體{color[ffff]}{[0001|ffff]}。
014-01	我正{[0001|1d00]}{color[0400]}連接{color[ffff]}{[0001|ffff]}在\n球體物件小節點上。
015	那麼～！\n我們來讓{[0001|1d00]}{color[0400]}立方體\n變得會轉來轉去{color[ffff]}{[0001|ffff]}吧！
016	第一步！\n要取消{[0001|1d00]}{color[0400]}立方體和球體的連接{color[ffff]}{[0001|ffff]}！\n把他解除掉吧～！
017	選擇{[0001|2000]}物件小節點{[0001|ffff]}之間的{[0001|1d00]}{color[0400]}連接{color[ffff]}{[0001|ffff]}……
018	{[0001|1d00]}{color[0400]}解除連接{color[ffff]}{[0001|ffff]}。
019	第二步！\n把我像三明治的餡料一樣……\n{color[0400]}{[0001|1d00]}夾在他們中間連接{[0001|ffff]}{color[ffff]}～！
020	首先……\n把{color[0400]}{[0001|1d00]}立方體物件小節點{[0001|ffff]}{color[ffff]}\n連接到鉸鍊連接小節點上。
021	再來把鉸鍊連接小節點\n連接到{color[0400]}{[0001|1d00]}球體物件小節點{[0001|ffff]}{color[ffff]}上。
022	對！\n像這樣把立方體連接到球體上，\n立方體就能{[0001|1d00]}{color[0400]}轉來轉去{color[ffff]}{[0001|ffff]}囉～
026	和物件小節點\n一起熱舞吧！
027	我們到{[0001|2000]}遊戲畫面{[0001|ffff]}中看看吧。
028	試著操控{[0001|2000]}UFO{[0001|ffff]}接觸立方體看看。
029	現在立方體變得會{[0001|1d00]}{color[0400]}轉動{color[ffff]}{[0001|ffff]}了。
030	由於{[0001|1d00]}{color[0400]}鉸鍊連接小節點{color[ffff]}{[0001|ffff]}\n夾在物件中間……
031	{[0001|1d00]}{color[0400]}與他連接的物件變得會轉動{color[ffff]}{[0001|ffff]}了。
119	而因為球體被設定為不會移動，\n所以{color[0400]}{[0001|1d00]}立方體會以球體為中心轉動{[0001|ffff]}{color[ffff]}。
032	你可以多轉幾下再回到{[0001|2000]}程式設計畫面{[0001|ffff]}。
033	嘿！{[0201]}！\n立方體變得會轉來轉去的對吧～！
035	{[0001|2000]}物件小節點{[0001|ffff]}！\n跳舞真是開心耶！
036	跳舞了。
037	轉來轉去了。
038	另外……\n不只是轉來轉去！
039	還有轉來轉去的{[0001|1d00]}{color[0400]}範圍{color[ffff]}{[0001|ffff]}！\n你也可以設定{[0001|1d00]}{color[0400]}轉動的範圍{color[ffff]}{[0001|ffff]}喔～！
040	{[0201]}，\n到我的設定中更改{[0001|1d00]}{color[0400]}範圍{color[ffff]}{[0001|ffff]}吧～！
041	打開鉸鍊連接小節點的設定。
042	這個{[0001|1d00]}{color[0400]}範圍{color[ffff]}{[0001|ffff]}可以更改物件的轉動幅度大小……\n也就是{[0001|1d00]}{color[0400]}轉動角度的範圍{color[ffff]}{[0001|ffff]}。
044	試著把左邊的滑桿設定為{[0001|1d00]}{color[0400]}-45.00{color[ffff]}{[0001|ffff]}，\n右邊的滑桿設定為{[0001|1d00]}{color[0400]}45.00{color[ffff]}{[0001|ffff]}。
046	這樣一來，\n轉來轉去的{[0001|1d00]}{color[0400]}範圍{color[ffff]}{[0001|ffff]}就縮小了……
047	變成只會{[0001|1d00]}{color[0400]}在-45°到45°\n之間的範圍轉動{color[ffff]}{[0001|ffff]}。
048	關閉設定畫面。
049	好～！\n那我們再跳一支舞吧！
050	到{[0001|2000]}遊戲畫面{[0001|ffff]}中確認看看。
051	試著接觸立方體看看。
052	在{[0001|1d00]}{color[0400]}鉸鍊連接小節點{color[ffff]}{[0001|ffff]}的設定中，\n我們把轉動角度的{[0001|1d00]}{color[0400]}範圍{color[ffff]}{[0001|ffff]}縮小了……
053	所以{[0001|2000]}立方體{[0001|ffff]}現在會\n{color[0400]}{[0001|1d00]}在轉動途中停止{[0001|ffff]}{color[ffff]}了。
054	回到程式設計畫面吧。
055	{[0001|2000]}怎麼樣！？\n變得會在轉動途中\n{color[0400]}{[0001|1d00]}停下來{[0001|2000]}{color[ffff]}了吧～！{[0001|ffff]}
056	{[0001|2000]}還有喔～！{[0001|ffff]}
057	只要把{[0001|1d00]}{color[0400]}範圍{color[ffff]}{[0001|ffff]}設定得非～常～小～
058	就能讓物件\n{[0001|1d00]}{color[0400]}斜著連接起來{color[ffff]}{[0001|ffff]}喔～
059	更改設定來試看看吧。
060	把範圍中{[0001|1d00]}{color[0400]}左邊的滑桿{color[ffff]}{[0001|ffff]}設定為\n與右邊的滑桿相同的數值{[0001|1d00]}{color[0400]}45.00{color[ffff]}{[0001|ffff]}。
061	這樣轉動{[0001|1d00]}{color[0400]}範圍{color[ffff]}{[0001|ffff]}就是\n{[0001|1d00]}{color[0400]}從45°到45°{color[ffff]}{[0001|ffff]}……
062	也就是說，只會{[0001|1d00]}{color[0400]}固定在45°{color[ffff]}{[0001|ffff]}。
063	關閉{[0001|2000]}設定畫面{[0001|ffff]}。
064	{[0001|2000]}遊戲畫面{[0001|ffff]}會變成怎麼樣呢？
065	立方體{color[0400]}{[0001|1d00]}斜著{[0001|ffff]}{color[ffff]}連接在物件上。
066	即使接觸到{[0001|2000]}UFO{[0001|ffff]}也不會轉動。
067	這是因為他的{[0001|1d00]}{color[0400]}角度被固定{color[ffff]}{[0001|ffff]}，\n所以變得不會轉動了。
068	那麼，我們回到{[0001|2000]}程式設計畫面{[0001|ffff]}吧。
069	{color[0400]}{[0001|1d00]}變得不會轉動了{[0001|ffff]}{color[ffff]}對吧～！
069-01	你說是不是很神～奇呢！
070	還沒結束喔！
071	把訊號傳送到我的{[0001|1d00]}{color[0400]}輸入端{color[ffff]}{[0001|ffff]}\n也能轉動物件喔！
072	總之～\n先重置我的{color[0400]}{[0001|1d00]}範圍{[0001|ffff]}{color[ffff]}設定！\n把我恢復原狀！
073	打開鉸鍊連接小節點的設定。
074	把左邊的滑桿調成{[0001|1d00]}{color[0400]}-180.00{color[ffff]}{[0001|ffff]}，\n右邊的滑桿調成{[0001|1d00]}{color[0400]}180.00{color[ffff]}{[0001|ffff]}。
114	先到遊戲畫面確認看看。
115	操控UFO去接觸立方體看看。
116	現在又變得會轉來轉去了。
117	回到程式設計畫面吧。
076	準備好囉！\n輪到我的好朋友！{[0001|1d00]}{color[0400]}常數小節點{color[ffff]}{[0001|ffff]}登場了～！
077	我是常數小節點，\n我絕不會被轉到頭暈眼花。
080	當我的{[0001|1d00]}{color[0400]}輸入端{color[ffff]}{[0001|ffff]}接收到訊號時～！
081	就會把{[0001|1d00]}{color[0400]}接收到的數值{color[ffff]}{[0001|ffff]}\n轉換為{color[0400]}{[0001|1d00]}角度{[0001|ffff]}{color[ffff]}讓物件轉動喔！
082	譬如說……\n打開{[0001|1d00]}{color[0400]}常數小節點{color[ffff]}{[0001|ffff]}的設定。
083	更改為{[0001|1d00]}{color[0400]}90.00{color[ffff]}{[0001|ffff]}。
084	關閉。
085	接下來，把{[0001|1d00]}90.00{[0001|ffff]}的{[0001|1d00]}{color[0400]}常數小節點{color[ffff]}{[0001|ffff]}和\n{[0001|1d00]}{color[0400]}鉸鍊連接小節點{color[ffff]}{[0001|ffff]}連接起來……
086	做得好～！\n這樣就可以讓物件{color[0400]}{[0001|1d00]}旋轉{[0001|ffff]}{color[ffff]}\n並固定在剛好{color[0400]}{[0001|1d00]}90°{[0001|ffff]}{color[ffff]}的位置了～！
087	去確認看看吧。
088	現在{[0001|1d00]}{color[0400]}立方體旋轉了90°{color[ffff]}{[0001|ffff]}。
118	這是因為鉸鍊連接小節點\n接收到{color[0400]}{[0001|1d00]}90.00{[0001|ffff]}{color[ffff]}的數值後，\n讓立方體以{color[0400]}{[0001|1d00]}90°{[0001|ffff]}{color[ffff]}連接。
089	即使操控{[0001|2000]}UFO{[0001|ffff]}去接觸立方體，\n立方體也不會轉動。
090	當鉸鍊連接小節點\n接收到訊號時會起什麼變化……\n你都清楚了吧？
091	那麼，到{[0001|1d00]}{color[0400]}程式設計畫面{color[ffff]}{[0001|ffff]}去吧。
092	你回來啦～！
110	對我來說！\n我的工作就是讓大家轉來轉去～\n這是我的天職喔～！
111	{[0201]}，\n你也跟我一起跳舞吧！！
112	那麼，下次再見了……
113	……一起轉來轉去吧。
Guidebook_HingeSlide.msbt
000	……歡迎你。
001	現在畫面上有兩個{[0001|1d00]}{color[0400]}人{color[ffff]}{[0001|ffff]}……\n還有一個藍色{[0001|1d00]}{color[0400]}立方體{color[ffff]}{[0001|ffff]}與紅色{[0001|1d00]}{color[0400]}圓柱體{color[ffff]}{[0001|ffff]}\n組合而成的物件。
002	{color[0400]}{[0001|1d00]}用操控搖桿可以移動左邊的人{[0001|ffff]}{color[ffff]}，\n{[0001|1d00]}{color[0400]}用操控搖桿則能移動右邊的人{color[ffff]}{[0001|ffff]}，\n試著操控他們接觸{[0001|2000]}立方體{[0001|ffff]}看看吧。
003	當人接觸到{[0001|2000]}立方體{[0001|ffff]}時，\n{[0001|1d00]}{color[0400]}立方體就會滑動{color[ffff]}{[0001|ffff]}。
006	這次我會為你解說像這樣\n{[0001|1d00]}{color[0400]}讓物件滑動的原理{color[ffff]}{[0001|ffff]}。
007	那麼，我們去{[0001|2000]}程式設計畫面{[0001|ffff]}吧。
008	{[0201]}！\n你還記得我嗎！\n我是{[0001|1d00]}{color[0400]}滑動連接小節點{color[ffff]}{[0001|ffff]}！！
009	什麼！\n你想了解{[0001|1d00]}{color[0400]}讓物件滑動的原理{color[ffff]}{[0001|ffff]}嗎？
010	……{[0201]}，\n沒想到你居然對我有興趣……
011	真是太感動了！！\n我超高興的！！
013	{[0001|1d00]}{color[0400]}物件之所以能夠滑動{color[ffff]}{[0001|ffff]}，\n全都是多虧了我喔！！
014	{[0201]}！\n接下來我會讓你徹底了解\n{[0001|1d00]}{color[0400]}讓物件滑動的原理{color[ffff]}{[0001|ffff]}！
015	一切都包在我身上吧！！！
016	在遊戲畫面中，\n{[0001|1d00]}{color[0400]}細長的藍色立方體{color[ffff]}{[0001|ffff]}和\n{[0001|1d00]}{color[0400]}紅色圓柱體{color[ffff]}{[0001|ffff]}連接在一起。
016-01	……我是紅色圓柱體。
016-02	……我是細長的藍色立方體。
017	連接物件時，我們一般都是讓\n{[0001|1d00]}{color[0400]}物件小節點之間互相連接{color[ffff]}{[0001|ffff]}……
018	就是像這樣連接。
019	如果不直接連接，\n而是讓我{[0001|1d00]}{color[0400]}夾在中間連接{color[ffff]}{[0001|ffff]}的話……
020	就能{[0001|1d00]}{color[0400]}讓連接的物件\n變得會滑動{color[ffff]}{[0001|ffff]}喔！！
021	像這次的情況，{[0001|1d00]}\n{[0001|ffff]}當你想把立方體連接到圓柱體時……
022	只要先把{color[0400]}{[0001|1d00]}立方體連接到我身上{[0001|ffff]}{color[ffff]}……
023	再{color[0400]}{[0001|1d00]}把我連接到圓柱體{[0001|ffff]}{color[ffff]}就行了！
024	這樣{color[0400]}{[0001|1d00]}立方體就會\n變得可以滑動{[0001|ffff]}{color[ffff]}了！！
044-01	不過……\n除了能讓物件滑動，\n我還可以做到其他事情喔！
045	{[0201]}……\n可以麻煩你……\n打開一下我的設定嗎？
046	在我的設定畫面裡\n還可以{color[0400]}{[0001|1d00]}更改滑動的範圍{[0001|ffff]}{color[ffff]}！
047	來試看看吧。
048	這邊就是{[0001|1d00]}{color[0400]}範圍{color[ffff]}{[0001|ffff]}。
049	拖動左右的滑桿，\n就可以更改{[0001|1d00]}{color[0400]}滑動的範圍{color[ffff]}{[0001|ffff]}。
050	試著把{color[0400]}{[0001|1d00]}左邊的滑桿{[0001|ffff]}{color[ffff]}調到{[0001|1d00]}{color[0400]}0.00{color[ffff]}{[0001|ffff]}吧。
051	關閉。
052	你居然特地為了我更改設定……\n真是太感謝你了！！
052-01	現在{[0001|1d00]}{color[0400]}滑動的範圍{color[ffff]}{[0001|ffff]}是\n{[0001|1d00]}{color[0400]}0.00{color[ffff]}{[0001|ffff]}～{[0001|1d00]}{color[0400]}100.00{color[ffff]}{[0001|ffff]}……
053	所以物件滑動的範圍\n被限制在中心到右邊……\n也就是說，不會{[0001|1d00]}{color[0400]}從中心滑動到左邊{color[ffff]}{[0001|ffff]}了！
054	到{[0001|2000]}遊戲畫面{[0001|ffff]}確認看看吧。
055	首先{color[0400]}{[0001|1d00]}用操控搖桿移動右邊的人{[0001|ffff]}{color[ffff]}，\n讓他接觸{[0001|2000]}立方體{[0001|ffff]}看看。
056	{[0001|1d00]}{[0001|2000]}……立方體{[0001|1d00]}{color[0400]}不會向左滑動{color[ffff]}{[0001|ffff]}。
057	接著{color[0400]}{[0001|1d00]}用操控搖桿移動左邊的人{[0001|ffff]}{color[ffff]}，\n讓他接觸{[0001|2000]}立方體{[0001|ffff]}看看。
058	立方體會{[0001|1d00]}{color[0400]}向右滑動{color[ffff]}{[0001|ffff]}。
059	由於{[0001|1d00]}{color[0400]}滑動的範圍{color[ffff]}{[0001|ffff]}被設定為\n{[0001|1d00]}{color[0400]}0.00{color[ffff]}{[0001|ffff]}～{[0001|1d00]}{color[0400]}100.00{color[ffff]}{[0001|ffff]}……
060	所以只能由最初的位置{[0001|1d00]}{color[0400]}向右滑動{color[ffff]}{[0001|ffff]}，\n而不能{[0001|1d00]}{color[0400]}向左滑動{color[ffff]}{[0001|ffff]}。
063	到{[0001|2000]}程式設計畫面{[0001|ffff]}去吧。
064	就像這樣，\n我不只能讓物件滑動，\n還可以{color[0400]}{[0001|1d00]}限制{[0001|ffff]}{color[ffff]}物件滑動的範圍！
065	{[0201]}，\n我這樣……\n應該能幫上你一點忙吧……？
066	另外……
067	如果設定一個{[0001|1d00]}{color[0400]}很～小的範圍{color[ffff]}{[0001|ffff]}，\n還能讓{[0001|1d00]}{color[0400]}物件的連接位置偏移{color[ffff]}{[0001|ffff]}！
068	來試看看吧。
069	把範圍中{color[0400]}{[0001|1d00]}左右的滑桿\n{[0001|ffff]}{color[ffff]}都調成{[0001|1d00]}{color[0400]}2.00{color[ffff]}{[0001|ffff]}。
070	這樣可移動的範圍就是\n從{[0001|1d00]}{color[0400]}2.00{color[ffff]}{[0001|ffff]}到{[0001|1d00]}{color[0400]}2.00{color[ffff]}{[0001|ffff]}……
071	也就是說……\n{color[0400]}{[0001|1d00]}被固定在2.00的位置{[0001|ffff]}{color[ffff]}了。
072	關閉設定畫面。
073	到{[0001|2000]}遊戲畫面{[0001|ffff]}中看看吧。
074	我們更改了{[0001|1d00]}{color[0400]}滑動連接小節點{color[ffff]}{[0001|ffff]}的設定，\n讓物件{color[0400]}{[0001|1d00]}固定在2.00的位置{[0001|ffff]}{color[ffff]}……
075	所以現在{[0001|2000]}立方體{[0001|ffff]}的位置\n{[0001|1d00]}{color[0400]}從正中間偏向右邊了{color[ffff]}{[0001|ffff]}。
076	即使接觸立方體，\n他也會{color[0400]}{[0001|1d00]}被固定在原處不會滑動{[0001|ffff]}{color[ffff]}。
077	我們回到{[0001|2000]}程式設計畫面{[0001|ffff]}吧。
078	還有還有！\n當我的{[0001|1d00]}{color[0400]}輸入端{color[ffff]}{[0001|ffff]}接收到訊號時……
078-01	我就能依照接收到的數值，\n{[0001|1d00]}{color[0400]}讓物件的連接位置偏移{color[ffff]}{[0001|ffff]}！
079	{[0201]}，\n麻煩你先幫我把{[0001|1d00]}{color[0400]}範圍{color[ffff]}{[0001|ffff]}設定恢復原狀！
080	打開{[0001|1d00]}{color[0400]}滑動連接小節點{color[ffff]}{[0001|ffff]}的設定。
081	把範圍調回{[0001|1d00]}{color[0400]}-100.00{color[ffff]}{[0001|ffff]}～{[0001|1d00]}{color[0400]}100.00{color[ffff]}{[0001|ffff]}。
082	關閉。
083	那麼……\n我把{[0001|1d00]}{color[0400]}常數小節點{color[ffff]}{[0001|ffff]}叫來吧！
084	要說專一我可不會輸人。\n請交給我{color[0400]}{[0001|1d00]}常數小節點{[0001|ffff]}{color[ffff]}來辦吧。
085	更改常數小節點的設定吧。
086	更改為{[0001|1d00]}{color[0400]}-2.00{color[ffff]}{[0001|ffff]}。
087	關閉。
088	{[0001|1d00]}{color[0400]}-2.00{color[ffff]}{[0001|ffff]}對吧。\n我會一直傳送{[0001|1d00]}{color[0400]}-2.00{color[ffff]}{[0001|ffff]}的訊號。
089	{[0201]}，\n可以把我和{[0001|1d00]}{color[0400]}常數小節點{color[ffff]}{[0001|ffff]}\n連接起來嗎！？
103	把他們連起來吧。
090	{[0001|2000]}常數小節點不斷{[0001|ffff]}傳送相同的數值過來……\n那專一的態度，真的太帥氣了！！
091	我也要用{[0001|1d00]}{color[0400]}接收到的數值{color[ffff]}{[0001|ffff]}，\n把物件牢牢地{[0001|1d00]}{color[0400]}固定{color[ffff]}{[0001|ffff]}起來！！
092	剛才我們{[0001|1d00]}{color[0400]}固定在2.00{color[ffff]}{[0001|ffff]}的時候，\n物件的位置{[0001|1d00]}{color[0400]}偏向右邊{color[ffff]}{[0001|ffff]}……
093	那{color[0400]}{[0001|1d00]}固定在-2.00{[0001|ffff]}{color[ffff]}的話，\n物件會偏向哪邊呢？
094	想像一下然後去看看吧。
095	{[0001|2000]}立方體{[0001|ffff]}{color[0400]}{[0001|1d00]}偏向左邊了{[0001|ffff]}{color[ffff]}。
096	由於輸入了{[0001|1d00]}{color[0400]}-2.00{color[ffff]}{[0001|ffff]}的訊號\n給滑動連接小節點，\n物件{[0001|1d00]}{color[0400]}被固定在向左偏移2.00的位置{color[ffff]}{[0001|ffff]}。
097	即使接觸到{[0001|2000]}人{[0001|ffff]}也不會滑動。
098	到{[0001|2000]}程式設計畫面{[0001|ffff]}去吧。
099	{[0201]}。\n……怎麼樣呢？
100	我會拚命努力的……！
101	當你{color[0400]}{[0001|1d00]}想讓物件滑動{[0001|ffff]}{color[ffff]}，\n或是{color[0400]}{[0001|1d00]}想讓連接位置偏移{[0001|ffff]}{color[ffff]}時……\n儘管叫上我吧！！！
102	那麼，下次再會了。
Guidebook_JudgeWinOrLose.msbt
00.00.Alice	……{[0201]}，你好。
00.01.Alice	這次要解說的是{[0001|1d00]}{color[0400]}勝負判定程式{color[ffff]}{[0001|ffff]}，\n內容雖然有些複雜，\n但我會逐步為你說明。
00.02.Alice	首先，請看畫面中{[0001|1d00]}{color[0400]}寫有數字的藍色箱子{color[ffff]}{[0001|ffff]}。
00.03.Alice	試著按下{[0001|1d00]}{color[0400]}鍵{color[ffff]}{[0001|ffff]}看看。
00.04.Alice	畫面中拉炮響起，\n數字由0變為1。
00.05.Alice	試著再按一次{[0001|1d00]}{color[0400]}鍵{color[ffff]}{[0001|ffff]}看看。
00.06.Alice	什麼事都沒發生呢。
00.07.Alice	按過一次鍵之後，\n就不會再有任何反應……
00.09.Alice	這其實是勝負判定程式中\n很重要的一部分。
00.10.Alice	我們到程式設計畫面裡看看吧。
01.00.ButtonL	嗨！\n我們又見面了，{[0201]}。
01.01.FlagL	……Zzz……\n……我是……旗標小節點……
01.02.NumberL	你好，{[0201]}。\n我是附數字物件小節點。
01.03.NumberL	我正在把旗標小節點輸出的數值\n顯示在藍色箱子上喔。
01.04.EffectL	{[0201]}，你好。\n這次也要炒熱氣氛喔～\n砰砰砰～！！
01.05.FlagL	嗯……\n咕噥咕噥……
01.06.FlagL	……Zzz……\n……{[0201]}，\n今天有什麼事嗎？咕噥……
01.07.FlagL	……Zzz……\n你想了解勝負判定程式的原理喔……\n咕噥……
01.08.FlagL	那麼，我們就先解說一下……\n當按下鍵時……\n會發生什麼事吧……
01.08-01.FlagL	不好意思，我要邊睡邊講……\n……Zzz……
01.09.FlagL	首先……\n我{[0001|1d00]}{color[0400]}一開始是在關閉狀態{color[ffff]}{[0001|ffff]}……呼嚕……
01.10.NumberL	{[0001|1d00]}{color[0400]}關閉狀態下不會輸出訊號{color[ffff]}{[0001|ffff]}，\n所以當旗標小節點關閉時，\n我就會顯示0。
01.11.ButtonL	假如在旗標小節點關閉時\n按下鍵的話……
01.12.FlagL	……呼嚕……\n我的{[0001|1d00]}{color[0400]}開啟端口就會接收到訊號，\n讓我變成開啟狀態{color[ffff]}{[0001|ffff]}……
01.13.NumberL	{[0001|1d00]}{color[0400]}開啟狀態下會輸出訊號{color[ffff]}{[0001|ffff]}，\n所以當旗標小節點開啟時，\n我就會顯示1。
01.18.FlagL	……我{[0001|1d00]}{color[0400]}一旦被開啟後，\n無論開啟端口接收到多少次訊號，\n我都會維持在開啟狀態{color[ffff]}{[0001|ffff]}……
01.19.NumberL	所以我顯示的數字也一樣，\n一旦從0變為1，\n之後就只會維持在1不變。
01.20.FlagL	……也就是說……\n我能記住{[0001|1d00]}{color[0400]}鍵有沒有被按過{color[ffff]}{[0001|ffff]}……\n咕噥咕噥……
01.21.ButtonL	不過！這樣跟勝負完全扯不上邊啊！\n我們不是要解說{[0001|1d00]}{color[0400]}勝負判定{color[ffff]}{[0001|ffff]}的原理嗎！？
01.22.Alice	那麼，接下來我們\n就讓競爭對手的隊伍登場吧。
01.23.ButtonR	嗨！\n為了跟{[0001|1d00]}鍵{[0001|ffff]}的按鍵小節點一較高下，\n我會傳達鍵的情況喲！
01.24.FlagR	……Zzz……\n……呼嚕……
01.25.EffectR	你好！我和對面那個\n會讓拉炮響起的傢伙不同……
01.26.EffectR	我會用衝擊特效\n大力大力地！！\n……向他吐槽～
01.28.NumberR	{[0201]}，你好。\n我是附數字物件小節點。
01.29.NumberR	我會把右邊的旗標小節點的狀態\n以數字的方式顯示在紅色箱子上。
01.30.Alice	左邊隊伍和新登場的右邊隊伍，\n兩隊都是由相同的小節點構成。
01.31.Alice	小節點一口氣增加了一倍呢，\n先到遊戲畫面去確認一下吧。
01.32.Alice	那麼，到遊戲畫面去吧。
02.00.Alice	畫面上多了一個\n寫有數字的紅色箱子呢。
02.01.Alice	試著按下{[0001|1d00]}{color[0400]}鍵{color[ffff]}{[0001|ffff]}看看。
02.02.Alice	畫面中出現了衝擊特效，\n紅色箱子的數字由0變為1。
02.03.Alice	試著再按一次{[0001|1d00]}{color[0400]}鍵{color[ffff]}{[0001|ffff]}看看。
02.04.Alice	按下按鍵也沒有反應對吧？
02.05.Alice	接著試看看按下{[0001|1d00]}{color[0400]}鍵{color[ffff]}{[0001|ffff]}。
02.06.Alice	這邊跟之前一樣，\n一旦按下{[0001|1d00]}{color[0400]}鍵{color[ffff]}{[0001|ffff]}後，\n就不會再有反應。
02.07.Alice	也就是說，兩個按鍵\n都只會各自反應一次。
02.08.Alice	另外，如果你想從兩個箱子\n數字為0的狀態下再試一次，\n只要按下重來就可以了。
02.09.Alice	確認好按下鍵和鍵時會發生什麼事後，\n就回到程式設計畫面吧。
03.00.NumberR	如何？
03.01.FlagR	……Zzz……\n無論是右邊的紅隊……
03.02.FlagL	……Zzz……\n還是左邊的藍隊……
03.03.NumberL	兩隊做出的反應，\n到頭來都是一樣的。
03.04.ButtonL	兩隊的條件平等！\n是值得一戰的對手！
03.05.ButtonR	好，那我們要比什麼？\n要不要來比一分鐘內\n能做多少次伏地挺身？
03.06.FlagR	……呼嚕……\n雖然我們會記住\n{[0001|1d00]}{color[0400]}按鍵有沒有被按過{color[ffff]}{[0001|ffff]}……
03.07.FlagL	但我們不太擅長計算\n按鍵被按了多少次……咕噥……
03.08.NumberL	那麼，要不要來\n{[0001|1d00]}{color[0400]}比誰能更快按下按鍵{color[ffff]}{[0001|ffff]}？
03.09.NumberR	你的意思是……\n在遊戲開始後，\n比看看{[0001|1d00]}{color[0400]}鍵和鍵誰先被按下{color[ffff]}{[0001|ffff]}對吧！
03.10.Alice	那麼，接下來就是關鍵的勝負判定了。
03.11.Alice	我們要把程式設計為\n只有先被按下的按鍵會作出反應。
03.12.Alice	由於旗標小節點會記住\n{[0001|1d00]}{color[0400]}按鍵有沒有被按過{color[ffff]}{[0001|ffff]}……\n所以我們要設計成……
03.13.Alice	在對手的按鍵被按下前……\n也就是在{[0001|1d00]}{color[0400]}對手的旗標小節點關閉{color[ffff]}{[0001|ffff]}時，\n{[0001|1d00]}{color[0400]}按下按鍵會作出反應{color[ffff]}{[0001|ffff]}。
03.14.Alice	而在對手的按鍵被先按下後……\n也就是在{[0001|1d00]}{color[0400]}對手的旗標小節點開啟{color[ffff]}{[0001|ffff]}時，\n{[0001|1d00]}{color[0400]}按下按鍵不會作出任何反應{color[ffff]}{[0001|ffff]}。
03.15.Alice	那麼，\n我們從右邊的紅隊\n開始設計吧。
03.16.Alice	選擇連接著右邊{[0001|1d00]}鍵{[0001|ffff]}的\n按鍵小節點的配對線……
03.17.Alice	暫時先解除這條配對線。
03.20.Alice	然後叫出{[0001|1d00]}{color[0400]}AND小節點{color[ffff]}{[0001|ffff]}。
03.21.AndR	沒問題沒問題！\n{[0201]}，你好！
03.22.AndR	當我身上的{[0001|1d00]}{color[0400]}兩個輸入端\n都有接收到訊號時{color[ffff]}{[0001|ffff]}，\n我就會輸出訊號喔！
03.23.Alice	我們想讓他在\n{[0001|1d00]}{color[0400]}對手的旗標小節點關閉{color[ffff]}{[0001|ffff]}且\n{[0001|1d00]}{color[0400]}按下按鍵時{color[ffff]}{[0001|ffff]}輸出訊號……
03.24.ButtonR	那我只要輸出訊號到\n其中一個端口就可以了吧！
03.25.FlagL	……咕噥……\n另一個條件是需要\n我在{[0001|1d00]}{color[0400]}關閉{color[ffff]}{[0001|ffff]}時的訊號……
03.26.FlagL	可是……呼嚕……\n我只有{[0001|1d00]}{color[0400]}在開啟時\n才會輸出訊號{color[ffff]}{[0001|ffff]}……
03.27.NumberL	就這樣連接到AND小節點的話，\n條件反而會變成要{[0001|1d00]}{color[0400]}旗標小節點開啟{color[ffff]}{[0001|ffff]}呢。
03.28.FlagR	……咕噥……\n真希望他{[0001|1d00]}{color[0400]}在關閉時{color[ffff]}{[0001|ffff]}\n也能輸出訊號……
03.29.Alice	那麼，我們就叫\n{[0001|1d00]}{color[0400]}NOT小節點{color[ffff]}{[0001|ffff]}出來吧。
03.30.NotR	嘻嘻嘻……\n我是NOT小節點……才怪～
03.31.NumberL	NOT小節點會輸出\n{[0001|1d00]}{color[0400]}與輸入訊號相反{color[ffff]}{[0001|ffff]}的訊號，\n這樣就{[0001|1d00]}{color[0400]}能在關閉時輸出訊號{color[ffff]}{[0001|ffff]}了。
03.32.NotR	我可不會自作主張地\n亂連配對線喔～
03.32-01.Flag	……呼嚕……\n這麼一來……當我{[0001|1d00]}{color[0400]}關閉{color[ffff]}{[0001|ffff]}時……
03.32-02.AndR	訊號就會輸入過來。
03.32-03.Flag	……咕噥……\n……而當我{[0001|1d00]}{color[0400]}開啟{color[ffff]}{[0001|ffff]}時……
03.32-04.AndR	訊號就不會輸入過來！
03.33.AndR	沒問題沒問題，這樣條件就能\n正常地輸入到我的兩個輸入端了。
03.35.FlagR	……當滿足兩個條件時，\n請傳送訊號給我……\n……咕噥……
03.36.Alice	這麼一來，\n{[0001|1d00]}{color[0400]}只有在鍵先於鍵被按下時{color[ffff]}{[0001|ffff]}\n才會作出反應的程式就完成了。
03.37.Alice	在遊戲畫面確認看看吧。
04.00.Alice	那麼我們開始確認吧。\n想回到起始狀態的話可以重來喔。
04.01.Alice	首先，在起始狀態下\n試著按下{[0001|1d00]}{color[0400]}鍵{color[ffff]}{[0001|ffff]}看看。
04.01.Alice_00	按下重來鍵讓遊戲重來，\n然後只按下{[0001|1d00]}{color[0400]}鍵{color[ffff]}{[0001|ffff]}。
04.02.Alice	畫面中拉炮響起，\n藍色箱子的數字變為1。
04.03.Alice	到目前為止都跟之前一樣。
04.04.Alice	接下來在藍色箱子的數字為1的情況下，\n試著按下{[0001|1d00]}{color[0400]}鍵{color[ffff]}{[0001|ffff]}看看。
04.05.Alice	……
04.06.Alice	什麼事都沒發生對吧？
04.07.Alice	因為{[0001|1d00]}{color[0400]}鍵已經先被按下去了{color[ffff]}{[0001|ffff]}，\n所以按下鍵也不會有任何反應。
04.08.Alice	也就是說，鍵……\n紅隊{[0001|1d00]}{color[0400]}被判定輸了比賽{color[ffff]}{[0001|ffff]}。
04.09.Alice	我們先{[0001|1d00]}{color[0400]}重來{color[ffff]}{[0001|ffff]}一次。
04.10.Alice	這次我們試著在起始狀態下\n先按下{[0001|1d00]}{color[0400]}鍵{color[ffff]}{[0001|ffff]}。
04.10.Alice_00	按下重來鍵讓遊戲重來，\n然後只按下{[0001|1d00]}{color[0400]}鍵{color[ffff]}{[0001|ffff]}。
04.11.Alice	畫面中出現了衝擊特效，\n紅色箱子的數字變為1。
04.12.Alice	因為{[0001|1d00]}{color[0400]}鍵先於鍵被按下{color[ffff]}{[0001|ffff]}……\n所以判定為紅隊贏了。
04.13.Alice	如果覺得已經確認清楚了，\n就回到程式設計畫面吧。
05.00.FlagL	……呼嚕……\n怎麼樣？
05.01.FlagL	依據我是開啟還是關閉……咕噥……\n也就是鍵有沒有被按過……
05.02.ButtonR	按下鍵時就會\n作出不同的反應！
05.03.NumberR	的確，現在當左邊的藍隊獲勝時，\n我們右邊的紅隊就不可能贏了……
05.04.EffectR	可是這樣對我們這隊\n也太不公平了吧？
05.05.Alice	說的沒錯。
05.06.Alice	那接下來，我們也替\n左邊的藍隊設計這種程式吧。
05.07.Alice	選擇連接著左邊{[0001|1d00]}鍵{[0001|ffff]}的\n按鍵小節點的配對線……
05.08.Alice	暫時先解除這條配對線。
05.11.Alice	接著跟剛才一樣，\n叫出AND小節點和NOT小節點。
05.12.AndL	你好，我是AND小節點。\n我負責替左邊的藍隊{[0001|1d00]}{color[0400]}判定勝負{color[ffff]}{[0001|ffff]}。
05.13.NotL	嘻嘻嘻……\n我是第2個NOT小節點……\n……才怪～
05.14.Alice	再來把配對線\n像右邊的紅隊一樣連接起來。
05.15.Alice	把右邊的旗標小節點的輸出端……
05.16.Alice	用配對線連接到\n第2個NOT小節點的輸入端的話……
05.17.Alice	會讓程式設計畫面變得有點亂……
05.18.Alice	最後就讓{[0201]}你自己\n一邊確認一邊連接看看吧。
05.19.Alice	這樣一來，\n{[0001|1d00]}{color[0400]}勝負判定程式就完成了{color[ffff]}{[0001|ffff]}。
05.20.Alice	事不宜遲，\n我們到遊戲畫面確認看看吧。
06.01.Alice	之後如果想恢復到這個\n起始狀態的話，可以按下重來喔。
06.02.Alice	那麼首先，我們在起始狀態下\n試著按下{[0001|1d00]}{color[0400]}鍵{color[ffff]}{[0001|ffff]}看看吧。
06.02.Alice_00	按下重來鍵讓遊戲重來，\n然後只按下{[0001|1d00]}{color[0400]}鍵{color[ffff]}{[0001|ffff]}。
06.03.Alice	畫面中拉炮響起，\n藍色箱子的數字變為1。
06.04.Alice	接著按下{[0001|1d00]}{color[0400]}鍵{color[ffff]}{[0001|ffff]}看看。
06.05.Alice	什麼事都沒發生對吧？
06.06.Alice	因為{[0001|1d00]}{color[0400]}鍵已經先被按下了{color[ffff]}{[0001|ffff]}……\n所以是藍隊贏、紅隊輸。
06.07.Alice	先{[0001|1d00]}{color[0400]}重來{color[ffff]}{[0001|ffff]}吧。
06.08.Alice	接下來，在起始狀態下\n試著先按下{[0001|1d00]}{color[0400]}鍵{color[ffff]}{[0001|ffff]}看看。
06.08.Alice_00	按下重來鍵讓遊戲重來，\n然後只按下{[0001|1d00]}{color[0400]}鍵{color[ffff]}{[0001|ffff]}。
06.09.Alice	畫面中出現了衝擊特效，\n紅色箱子的數字變為1。
06.10.Alice	接著按下{[0001|1d00]}{color[0400]}鍵{color[ffff]}{[0001|ffff]}看看。
06.11.Alice	你看，什麼事都沒發生吧？
06.12.Alice	這次因為{[0001|1d00]}{color[0400]}鍵已經先被按下了{color[ffff]}{[0001|ffff]}……\n所以是紅隊贏、藍隊輸。
06.13.Alice	你可以透過重來，\n以不同{[0001|1d00]}{color[0400]}順序{color[ffff]}按下{color[0400]}鍵{color[ffff]}和{color[0400]}鍵{color[ffff]}{[0001|ffff]}\n來測試各種情況。
06.14.Alice	如果覺得已經確認清楚了，\n就回到程式設計畫面吧。
07.00.FlagR	……Zzz……\n如何？
07.01.ButtonL	終於可以來場真正的比賽了！
07.02.NumberL	雖然這個程式有點複雜，\n但如果你能夠理解的話，\n就沒什麼事能難倒你了！
07.03.Alice	這次的勝負判定程式的關鍵之處，\n在於同時有{[0001|1d00]}{color[0400]}2個旗標小節點{color[ffff]}{[0001|ffff]}。
07.04.Alice	一開始2個旗標小節點都是{[0001|1d00]}{color[0400]}關閉{color[ffff]}{[0001|ffff]}的狀態……
07.05.FlagL	當左邊的藍隊獲勝時，\n{[0001|1d00]}{color[0400]}只有我會開啟{color[ffff]}{[0001|ffff]}……咕噥。
07.06.FlagR	當右邊的紅隊獲勝時，\n{[0001|1d00]}{color[0400]}只有我會開啟{color[ffff]}{[0001|ffff]}……咕噥。
07.07.AndL	而實際判定雙方隊伍勝負的……
07.08.AndR	是我們AND小節點。
07.09.NumberL	只要AND小節點們判定\n{[0001|1d00]}{color[0400]}其中一個{color[ffff]}{[0001|ffff]}旗標小節點{[0001|1d00]}{color[0400]}開啟{color[ffff]}{[0001|ffff]}……
07.10.NumberR	另一個旗標小節點\n就{[0001|1d00]}{color[0400]}不會開啟{color[ffff]}{[0001|ffff]}。
07.10-01.Alice	也就是說，在各種小節點的合作之下，\n這個程式才得以順利運作。
07.11.EffectL	雖然我們特效小節點\n與勝負判定沒有什麼直接的關係……
07.12.EffectR	但我們會熱鬧地慶祝一番，\n讓玩家清楚知道是誰贏了。
07.13.EffectL	我們可稱得上是幕後灰塵吶。
07.14.EffectR	幕後灰塵是啥鬼啦！\n我們是灰塵的話，\n早就被掃得一乾二淨了！
07.15.NotR	嘻嘻嘻……\n特效小節點總是那麼有趣呢～
07.16.EffectL	哇～！\nNOT小節點每次都覺得不好笑……\n到底哪裡出了問題啊～
07.18.Alice	……那麼這次就先講到這邊吧。
Guidebook_MoveFancyRigid.msbt
000	……你好。
001	……畫面上有一條{[0001|1d00]}{color[0400]}鮪魚{color[ffff]}{[0001|ffff]}呢。
002	試著左右推動{[0001|1d00]}{color[0400]}操控搖桿{color[ffff]}{[0001|ffff]}。
003	鮪魚動起來了。
004	這條鮪魚是{color[0400]}{[0001|1d00]}時尚物件{[0001|ffff]}{color[ffff]}，\n一般來說應該是{color[0400]}{[0001|1d00]}無法操控{[0001|ffff]}{color[ffff]}才對……
005	這次我要為你解說的內容，\n就是{color[0400]}{[0001|1d00]}讓時尚物件移動的原理{[0001|ffff]}{color[ffff]}。
006	那麼，\n我們到{[0001|2000]}程式設計畫面{[0001|ffff]}吧。
097	哎呀，\n是{[0201]}耶，\n歡迎你喔♥
007	{[0201]}！\n今天我會告訴你什麼是流行的尖端！
008	現在的潮流是……鮪魚！
009	說到鮪魚，就要突顯出\n他躍動的生命力才行……
010	所以我讓鮪魚變得會動了♥
012	至於讓鮪魚會動的秘訣，\n其實就是……
013	因為我{color[0400]}{[0001|1d00]}跟可移動物件小節點\n連接在一起{[0001|ffff]}{color[ffff]}♥
014	沒錯！\n你好！！\n我就是{[0001|1d00]}{color[0400]}可移動物件小節點{color[ffff]}{[0001|ffff]}！！！
015	{[0201]}！\n你的身體是不是變鈍了啊～？\n每天運動可是很重要的喔！
016	回到正題！\n我正在從{[0001|1d00]}{color[0400]}操控搖桿小節點{color[ffff]}{[0001|ffff]}那邊\n接收訊號！
017	轉轉～我正在傳達\n{[0001|1d00]}{color[0400]}操控搖桿的左右{color[ffff]}{[0001|ffff]}動作給他～
018	當我接收到{[0001|1d00]}{color[0400]}操控搖桿小節點{color[ffff]}{[0001|ffff]}的訊號時，\n我就會讓物件左右移動！
018-01	在我的{color[0400]}{[0001|1d00]}狀態{[0001|ffff]}{color[ffff]}中，{color[0400]}{[0001|1d00]}能看見{[0001|ffff]}{color[ffff]}被設定為{color[0400]}{[0001|1d00]}關閉{[0001|ffff]}{color[ffff]}……\n所以你在遊戲畫面裡不會看到我移動的樣子……
018-02	但我其實非常有活力喔！！\n我會在畫面裡左奔右跑呢～！！
020	然後，因為我{[0001|1d00]}{color[0400]}連接{color[ffff]}{[0001|ffff]}在\n可移動物件小節點上……
021	鮪魚才能{color[0400]}{[0001|1d00]}黏在可移動物件上{[0001|ffff]}{color[ffff]}，\n跟著他一起移動喔♥
022	沒錯！\n一起運動也是一種\n很好的鍛鍊方法喔！！
023	那麼，{[0201]}。\n為了讓可移動物件的動作能被看見……
024	請更改我的{[0001|1d00]}{color[0400]}狀態{color[ffff]}{[0001|ffff]}，\n把{color[0400]}{[0001|1d00]}能看見{[0001|ffff]}{color[ffff]}設定為{color[0400]}{[0001|1d00]}開啟{[0001|ffff]}{color[ffff]}吧！
025	那麼，我們來打開\n可移動物件小節點的設定。
026	把{[0001|1d00]}{color[0400]}狀態{color[ffff]}{[0001|ffff]}中的{[0001|1d00]}{color[0400]}能看見{color[ffff]}{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}開啟{color[ffff]}{[0001|ffff]}。
027	關閉。
028	到遊戲畫面看看吧。
029	現在你可以看到一個\n與{[0001|1d00]}{color[0400]}鮪魚{color[ffff]}{[0001|ffff]}重疊在一起的{[0001|1d00]}{color[0400]}立方體{color[ffff]}{[0001|ffff]}。
030	這個就是{[0001|1d00]}{color[0400]}可移動物件{color[ffff]}{[0001|ffff]}。
031	試著推動{[0001|1d00]}{color[0400]}操控搖桿{color[ffff]}{[0001|ffff]}看看。
032	立方體和鮪魚會{[0001|1d00]}{color[0400]}一起移動{color[ffff]}{[0001|ffff]}。
033	你現在用{[0001|1d00]}{color[0400]}操控搖桿{color[ffff]}{[0001|ffff]}操控的\n其實是{[0001|1d00]}{color[0400]}可移動物件{color[ffff]}{[0001|ffff]}。
034	{[0001|1d00]}{color[0400]}鮪魚{color[ffff]}{[0001|ffff]}只是黏在{color[0400]}{[0001|1d00]}可移動物件{[0001|ffff]}{color[ffff]}身上\n一起移動而已。
035	你並不是直接操控鮪魚本身。
036	我們到{[0001|2000]}程式設計畫面{[0001|ffff]}去吧。
037	你有看到鮪魚和{[0001|1d00]}{color[0400]}可移動物件{color[ffff]}{[0001|ffff]}\n一起移動的樣子了嗎？
038	可移動物件和鮪魚……\n他們如膠似漆地一起移動……\n這就是愛情的力量吧！簡直是飆淚大作！
039	♥好有才華喔♥
040	只要配合{[0001|1d00]}{color[0400]}可移動物件小節點{color[ffff]}{[0001|ffff]}一起使用，\n就能讓各種不同的{color[0400]}{[0001|1d00]}時尚物件{[0001|ffff]}{color[ffff]}變得會移動喔！
041	接下來，我先換一套衣服♥
042	想知道我換了什麼衣服嗎……？\n這裡就先賣個關子，\n留給你到遊戲畫面去確認吧♥
043	另外，我還請來了\n{[0001|1d00]}{color[0400]}上下方向的操控搖桿小節點{color[ffff]}{[0001|ffff]}呢！
044	轉轉～\n我會傳達{color[0400]}{[0001|1d00]}操控搖桿的上下{[0001|ffff]}{color[ffff]}動作喔～
045	剛才已經測試過左右移動，\n這次就來試試{[0001|1d00]}{color[0400]}前後{color[ffff]}{[0001|ffff]}移動吧！
046	那麼，\n{[0201]}，\n麻煩你用{[0001|1d00]}{color[0400]}連接{color[ffff]}{[0001|ffff]}讓我們能一起移動吧♥
047	把{[0001|1d00]}{color[0400]}時尚物件小節點{color[ffff]}{[0001|ffff]}\n連接到{[0001|1d00]}{color[0400]}可移動物件小節點{color[ffff]}{[0001|ffff]}。
048	好！！\n是時候活動筋骨囉！！！
049	去{[0001|2000]}遊戲畫面{[0001|ffff]}看看吧。
100	……畫面上有一位{color[0400]}{[0001|1d00]}相撲選手{[0001|ffff]}{color[ffff]}呢。
050	試著{[0001|1d00]}{color[0400]}上下{color[ffff]}{[0001|ffff]}推動{[0001|1d00]}{color[0400]}操控搖桿{color[ffff]}{[0001|ffff]}。
051	{[0001|1d00]}{color[0400]}相撲選手前後{color[ffff]}{[0001|ffff]}移動了。
052	嘿喲嘿喲……
053	就像這樣，只要把{color[0400]}{[0001|1d00]}時尚物件{[0001|ffff]}{color[ffff]}\n連接到{[0001|1d00]}{color[0400]}可移動物件小節點{color[ffff]}{[0001|ffff]}上，\n就能讓他們{color[0400]}{[0001|1d00]}變得可以移動{[0001|ffff]}{color[ffff]}。
054	回到{[0001|2000]}程式設計畫面{[0001|ffff]}吧。
056	{[0001|1d00]}{color[0400]}相撲選手{color[ffff]}{[0001|ffff]}那走路有風的雄姿……\n這就是所謂的大橫綱氣場吧！！
057	♥好有才華喔♥
058	那麼，接下來……\n畢竟{color[0400]}{[0001|1d00]}鮪魚{[0001|ffff]}{color[ffff]}是現在的潮流焦點……
059	我想讓你看到……\n一條泳姿更加生動且優雅的鮪魚……
060	有好主意了！我得換一套衣服！
061	我請來了{[0001|1d00]}{color[0400]}UFO小節點{color[ffff]}{[0001|ffff]}！
062	你好～\n我會輕飄飄地浮在空中～
063	只要把我……也就是{[0001|1d00]}鮪魚{[0001|ffff]}的\n時尚物件小節點{[0001|1d00]}{color[0400]}連接{color[ffff]}{[0001|ffff]}到{color[0400]}{[0001|1d00]}UFO小節點{[0001|ffff]}{color[ffff]}上……
064	應該就能變成一條{[0001|1d00]}{color[0400]}在空中游泳的鮪魚{color[ffff]}{[0001|ffff]}！\n這肯定能震撼全世界！
065	把{[0001|1d00]}{color[0400]}時尚物件小節點\n連接{color[ffff]}{[0001|ffff]}到{[0001|1d00]}{color[0400]}UFO小節點{color[ffff]}{[0001|ffff]}。
068	這樣鮪魚應該就能\n黏著UFO一起在空中飄浮了。
069	我們到{[0001|2000]}遊戲畫面{[0001|ffff]}裡看看吧。
070	雖然用{[0001|1d00]}{color[0400]}操控搖桿{color[ffff]}{[0001|ffff]}\n能讓鮪魚移動……
071	但{[0001|2000]}鮪魚太重了，\n沒辦法在空中飄浮呢{[0001|ffff]}。
073	回到{[0001|2000]}程式設計畫面{[0001|ffff]}吧。
074	唉呀～\n看來{color[0400]}{[0001|1d00]}鮪魚太重了，\n沒辦法在空中飄浮{[0001|ffff]}{color[ffff]}呢～
076	你可以把{[0001|1d00]}鮪魚{[0001|ffff]}的{[0001|1d00]}{color[0400]}時尚物件小節點{color[ffff]}{[0001|ffff]}的\n{[0001|1d00]}{color[0400]}材質{color[ffff]}{[0001|ffff]}更改為{[0001|1d00]}{color[0400]}無重力{color[ffff]}{[0001|ffff]}～\n這樣他就會{[0001|1d00]}{color[0400]}變得沒有重量{color[ffff]}{[0001|ffff]}囉～
077	來試試看吧。
078	選擇{[0001|1d00]}{color[0400]}材質{color[ffff]}{[0001|ffff]}。
079	更改為{[0001|1d00]}{color[0400]}無重力{color[ffff]}{[0001|ffff]}。
081	接著關閉設定。
085	到{[0001|2000]}遊戲畫面{[0001|ffff]}裡確認一下吧。
086	現在{[0001|2000]}鮪魚{[0001|ffff]}會{color[0400]}{[0001|1d00]}飄浮在空中，不會掉下來了{[0001|ffff]}{color[ffff]}。
087	試著推動{[0001|1d00]}{color[0400]}操控搖桿{color[ffff]}{[0001|ffff]}看看。
088	……鮪魚……\n……在空中游泳……
089	嗯……\n……挺有才華的呢。
090	就像這樣，\n只要把時尚物件{color[0400]}{[0001|1d00]}和UFO連接在一起{[0001|ffff]}{color[ffff]}，\n就能讓他{color[0400]}{[0001|1d00]}更自由地移動{[0001|ffff]}{color[ffff]}。
091	讓鮪魚暢泳一番後，\n就回到{[0001|2000]}程式設計畫面{[0001|ffff]}吧。
092	你回來了！
093	{[0001|1d00]}{color[0400]}鮪魚{color[ffff]}{[0001|ffff]}衝出大海……\n在空中自由自在地游泳……\n這就是……掙脫束縛的解放感……！
093-01	真是扣人心弦啊……\n♥好有才華喔♥
094	{[0201]}，\n透過這種把我和{[0001|1d00]}{color[0400]}可移動物件小節點{color[ffff]}{[0001|ffff]}\n或{[0001|1d00]}{color[0400]}UFO小節點{color[ffff]}{[0001|ffff]}連接在一起的方式……
095	只要你想……不論什麼物件，\n都能讓他自由自在地移動喔♥
Guidebook_MoveRigid.msbt
000	……你好。
001	在畫面中的黃色箱子……\n其實……
003	可以用{[0001|1d00]}{color[0400]}操控搖桿左右移動{color[ffff]}{[0001|ffff]}。\n……你試看看吧。
004	如果看不見箱子了，\n就按下{[0001|1d00]}{color[0400]}重來鍵{color[ffff]}{[0001|ffff]}吧。
005	這個箱子被設計成\n可以用操控搖桿來移動。
006	這次我要解說的，\n就是像這樣{[0001|1d00]}{color[0400]}讓物件移動的程式{color[ffff]}{[0001|ffff]}。
007	我們去程式設計畫面吧。
008	你好！\n今天有沒有揮灑汗水啊～！？
009	我是{color[0400]}{[0001|1d00]}可移動物件小節點{[0001|ffff]}{color[ffff]}！
010	哎呀～！\n運動真的是……\n超級舒服的呢！
011	你好～
012	我會把操控搖桿的\n{[0001|1d00]}{color[0400]}左右{color[ffff]}{[0001|ffff]}推動幅度作為訊號輸出～
013	可移動物件小節點\n和其他物件小節點不一樣……
014	他人如其名，\n可以{[0001|1d00]}{color[0400]}移動物件{color[ffff]}{[0001|ffff]}。
015	當我接收到訊號時……
016	就會產生……
017	{[0001|1d00]}{color[0400]}動力！！！{color[ffff]}{[0001|ffff]}
018	他身上有3個輸入端呢。
019	這3個輸入端會各自\n產生{[0001|1d00]}{color[0400]}不同方向的動力{color[ffff]}{[0001|ffff]}。
020	第1個輸入端{[0001|1d00]}{color[0400]}X{color[ffff]}{[0001|ffff]}產生的是……\n{[0001|1d00]}{color[0400]}左右移動的動力！{color[ffff]}{[0001|ffff]}
021	第2個輸入端{[0001|1d00]}{color[0400]}Y{color[ffff]}{[0001|ffff]}產生的是\n{[0001|1d00]}{color[0400]}上下移動的動力！！{color[ffff]}{[0001|ffff]}
022	然後……第3個輸入端{[0001|1d00]}{color[0400]}Z{color[ffff]}{[0001|ffff]}產生的是……\n{[0001|1d00]}{color[0400]}前後移動的動力！！！{color[ffff]}{[0001|ffff]}
023	因為現在操控搖桿小節點輸出的訊號\n正輸入到可移動物件小節點的{[0001|1d00]}X{[0001|ffff]}端口……
024	所以才能讓物件左右移動。
025	雖然左右移動也不錯……\n但難得有這麼一個運動場，\n我想要在上面自由自在地奔跑！
026	{[0201]}！\n可以請你幫我把訊號\n輸入到我的{[0001|1d00]}{color[0400]}Z{color[ffff]}{[0001|ffff]}輸入端嗎！？
027	那麼，\n我們叫另一個操控搖桿小節點出來吧。
028	請多關照～
029	我會把{[0001|1d00]}{color[0400]}上下{color[ffff]}{[0001|ffff]}推動\n操控搖桿的動作輸出喔～
030	為了讓我們能夠用\n操控搖桿{[0001|1d00]}{color[0400]}前後{color[ffff]}{[0001|ffff]}移動物件……
031	把{[0001|1d00]}上下{[0001|ffff]}方向的操控搖桿小節點的輸出端，\n連接到可移動物件小節點的{[0001|1d00]}Z{[0001|ffff]}端口吧。
032	太好了～！\n謝謝你！
033	那麼，到遊戲畫面\n試著移動物件看看吧。
034	試著用操控搖桿{[0001|1d00]}{color[0400]}前後{color[ffff]}{[0001|ffff]}移動物件。
035	如果看不見物件了，\n你可以按下{[0001|1d00]}{color[0400]}重來鍵{color[ffff]}{[0001|ffff]}。
037	物件得到了X方向和Z方向的動力，\n現在可以前後左右移動了。
038	這邊我們先重來一次……
039	這次試著{color[0400]}{[0001|1d00]}輕輕地{[0001|ffff]}{color[ffff]}\n推動操控搖桿。
040	輕推的話，物件就會慢慢地移動對吧？
041	看來操控搖桿的推動幅度\n和箱子的移動之間有某種關聯……
042	回到程式設計畫面\n去確認一下吧。
043	哎呀～！\n跑來跑去果然很舒服呢！！
044	{[0201]}，\n你要不要也來一起跑啊！？
045	剛才我們輕推操控搖桿時，\n你是慢慢地移動對吧？
046	沒錯！
047	{[0001|1d00]}{color[0400]}當訊號變小時{color[ffff]}{[0001|ffff]}，\n我的{[0001|1d00]}{color[0400]}動力也會變小{color[ffff]}{[0001|ffff]}。
048	我輸出的訊號大小會隨著\n操控搖桿的推動幅度改變喔～
049	也就是說，你可以透過操控搖桿的\n推動幅度來{[0001|1d00]}{color[0400]}控制{color[ffff]}{[0001|ffff]}物件的動力。
050	{[0201]}，\n你推動操控搖桿的力量\n會化為我的動力！！！
051	可移動物件小節點和物件小節點，\n兩者的差別就在於動力。
052	話雖如此……\n但我也是物件小節點的一分子！
053	我和物件小節點一樣，\n可以設定{[0001|1d00]}{color[0400]}形狀{color[ffff]}{[0001|ffff]}和{[0001|1d00]}{color[0400]}狀態{color[ffff]}{[0001|ffff]}喔！
054	那麼，\n我們試著把物件的形狀改成{[0001|1d00]}{color[0400]}球體{color[ffff]}{[0001|ffff]}……\n讓他變成一顆可以滾動的球吧。
055	選擇可移動物件小節點。
056	打開設定。
057	這裡和物件小節點一樣，\n可以設定{[0001|1d00]}{color[0400]}物件的形狀{color[ffff]}{[0001|ffff]}、{color[0400]}{[0001|1d00]}狀態{[0001|ffff]}{color[ffff]}和{[0001|1d00]}{color[0400]}顏色{color[ffff]}{[0001|ffff]}。
058	把{[0001|1d00]}物件的形狀{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}球體{color[ffff]}{[0001|ffff]}。
059	關閉設定。
060	好！\n我要滾動到地平線的那一邊～！
061	那麼，我們到遊戲畫面確認一下吧。
062	試著用操控搖桿讓球體移動看看。
063	如果看不見物件了，\n就按下{[0001|1d00]}{color[0400]}重來鍵{color[ffff]}{[0001|ffff]}吧。
064	箱子變為球體後，\n變得可以滾動了呢。
065	回到程式設計畫面吧。
066	雖然有點頭暈眼花……\n但滾來滾去的感覺\n真的是超級舒服呢！
067	{[0201]}，\n你要不要也來一起滾啊！？
068	……不過，速度是不是有點太快了啊？
069	是我滿溢而出的動力\n讓自己變得越來越快！
070	快成這樣……\n就連我也停不下來！！
071	……可移動物件好像\n是以動力來{[0001|1d00]}{color[0400]}加速{color[ffff]}{[0001|ffff]}。
072	我的設定中有{[0001|1d00]}{color[0400]}動作的模式{color[ffff]}{[0001|ffff]}，\n你可以試著切換看看！
073	選擇可移動物件小節點。
074	打開設定。
075	打開{[0001|1d00]}模式{[0001|ffff]}。
076	有{[0001|1d00]}{color[0400]}加速度{color[ffff]}{[0001|ffff]}和{[0001|1d00]}{color[0400]}速度{color[ffff]}{[0001|ffff]}\n這2種{[0001|1d00]}模式{[0001|ffff]}呢。
077	現在的模式是{color[0400]}{[0001|1d00]}加速度{[0001|ffff]}{color[ffff]}。
078	{[0001|1d00]}{color[0400]}加速度{color[ffff]}{[0001|ffff]}是指1秒內\n{color[0400]}{[0001|1d00]}加快了多少速度{[0001|ffff]}{color[ffff]}的意思。
079	……也就是說，\n當訊號輸入時會{color[0400]}{[0001|1d00]}變得越來越快{[0001|ffff]}{color[ffff]}。
080	另外一個模式是{color[0400]}{[0001|1d00]}速度{[0001|ffff]}{color[ffff]}。
081	{[0001|1d00]}{color[0400]}速度{color[ffff]}{[0001|ffff]}是指1秒內\n{color[0400]}{[0001|1d00]}移動了多遠{[0001|ffff]}{color[ffff]}的意思。
082	也就是說，輸入的數值會\n直接轉換為物件的移動{color[0400]}{[0001|1d00]}速度{[0001|ffff]}{color[ffff]}。
083	現在是{[0001|1d00]}{color[0400]}加速度模式{color[ffff]}{[0001|ffff]}……
084	所以動力會讓物件變得越來越快。
085	為了讓我們能夠調整速度……\n試著更改為{[0001|1d00]}{color[0400]}速度模式{color[ffff]}{[0001|ffff]}看看。
104	另外，為了避免物件隨意滾動……\n把{[0001|1d00]}物件的形狀{[0001|ffff]}設定回{color[0400]}{[0001|1d00]}立方體{[0001|ffff]}{color[ffff]}吧。
086	關閉設定。
087	你幫我把加速度模式改為\n速度模式了嗎！？
088	也就是說……\n從衝刺換成了跑步對吧！！
089	……那麼，\n我們到遊戲畫面確認看看\n物件在速度模式下的動作吧。
090	試著用操控搖桿讓箱子移動看看。
091	如果看不見物件了，\n就按下{[0001|1d00]}{color[0400]}重來鍵{color[ffff]}{[0001|ffff]}吧。
092	……現在物件變得能慢慢地移動了。
093	在速度模式下，\n{[0001|1d00]}{color[0400]}訊號的數值大小會直接轉換為速度{color[ffff]}{[0001|ffff]}。
094	和加速度模式不同，\n物件不會變得越來越快……
095	所以我們可以輕鬆地控制速度……\n這就是速度模式的特點。
096	我們回到程式設計畫面吧。
097	當你想讓物件變得越來越快時……\n就要用加速度模式！
098	而當你想控制物件的速度時……\n只要用速度模式就可以了喔！
099	也就是說，配合你想要設計的動作……
100	來切換不同模式是很重要的觀念呢。
101	當你不知道該用哪一種模式時……\n就先試著讓物件動起來看看吧！！
102	煩惱不如行動！\n這就是……程式設計的秘訣喔！
Guidebook_Not.msbt
Guidebook_NotB.msbt
00.00.Alice	……歡迎你來到戰場。
00.01.Alice	畫面正在不斷地爆炸。\n{[0201]}，\n我希望你能為這場爆炸畫上句點。
00.02.Alice	試著持續按住{color[0400]}{[0001|1d00]}鍵{[0001|ffff]}{color[ffff]}。
00.03.Alice	按住鍵時，\n爆炸停止了。
00.04.Alice	如果是按下按鍵會爆炸還可以理解，\n但現在反而是會讓爆炸停止……\n……不覺得有些不可思議嗎？
00.05.Alice	我們到程式設計畫面裡\n看看到底是怎麼一回事吧。
01.00.Button	嗨！\n{[0201]}！
01.02.Effect	我也在喔～\n{[0201]}、按鍵小節點，\n你們兩個今天也酷爆了呢～
01.03.Effect	……酷、爆？\n……殘酷、爆炸？\n……殘酷的大爆炸！？
01.04.Effect	既然露餡了就沒辦法啦！\n遊戲畫面中的爆炸……\n其實就是我的特效！
01.05.Button	你這個小節點，不管在遊戲畫面\n還是程式設計畫面都一樣很吵呢！
01.06.Button	對了，{[0201]}，\n你今天有什麼事嗎！？
01.07.Button	這樣啊！\n你想知道如何停止特效啊！！
01.08.Button	那就要讓{color[0400]}{[0001|1d00]}NOT小節點{[0001|ffff]}{color[ffff]}出場了！
01.09.Not	嘻嘻嘻……\n我是NOT小節點……才怪～
01.10.Not	這次可不關我的事，\n你們就自己去聊吧～
01.11.Effect	NOT小節點真是愛害羞吶～\n你可是今天的主角喔！
01.13.Button	真拿你沒辦法！\n那就由我們來介紹一下\nNOT小節點吧！
01.14.Button	首先，我正在把鍵的情況\n傳達到NOT小節點的輸入端！
01.15.Not	我身上沒有輸入端，也沒有輸出端喔～\n我可不會把輸入的訊號{[0001|1d00]}{color[0400]}顛倒{color[ffff]}{[0001|ffff]}過來輸出喔～\n嘻嘻嘻！
01.17.Alice	……NOT小節點，\n麻煩你安靜一會。\n你這樣只會越說越亂。
01.18.Not	真拿你有辦法，\n我也不是不可以安靜下來喔～
01.19.Button	你也太難搞了吧！
01.20.Alice	如你所見，NOT小節點就是個\n喜歡說{color[0400]}{[0001|1d00]}顛倒{[0001|ffff]}{color[ffff]}話的小節點。
01.21.Alice	他也會把從輸入端\n接收到的訊號{color[0400]}{[0001|1d00]}顛倒{[0001|ffff]}{color[ffff]}過來輸出。
01.22.Button	譬如說，\n當我{color[0400]}{[0001|1d00]}沒有輸出訊號時{[0001|ffff]}{color[ffff]}……
01.23.Alice	訊號就{color[0400]}{[0001|1d00]}不會輸入{[0001|ffff]}{color[ffff]}NOT小節點。\n此時，他會把訊號顛倒過來{color[0400]}{[0001|1d00]}輸出訊號{[0001|ffff]}{color[ffff]}。
01.24.Effect	然後那個訊號會輸入到我這裡，\n讓我轟隆轟隆地爆炸喔～！
01.25.Button	所以{color[0400]}{[0001|1d00]}沒有按住按鍵時{[0001|ffff]}{color[ffff]}\n才會一直爆炸啊！
01.27.Button	那按住按鍵時會變成怎樣！？
01.28.Alice	當有訊號{color[0400]}{[0001|1d00]}輸入時{[0001|ffff]}{color[ffff]}，\nNOT小節點會顛倒過來，\n{color[0400]}{[0001|1d00]}不會輸出{[0001|ffff]}{color[ffff]}訊號。
01.29.Effect	因為沒有訊號過來，\n我就把爆炸停下來了～
01.30.Button	所以{color[0400]}{[0001|1d00]}按住按鍵時{[0001|ffff]}{color[ffff]}\n爆炸才會停止啊！！
01.31.Not	也不能不算是這樣啦～
01.32.Alice	……他的意思是\n「就是這樣喔～」。
01.33.Alice	說詳盡一點的話就是……
01.33.Alice_00	NOT小節點在\n被輸入0.00時會輸出1.00，\n被輸入0.00{[0001|1d00]}{color[0400]}以外{color[ffff]}{[0001|ffff]}的數值時會輸出0.00。
01.34.Button	不管輸入什麼數值，\n他都只會輸出{color[0400]}{[0001|1d00]}0.00{[0001|ffff]}{color[ffff]}或{color[0400]}{[0001|1d00]}1.00{[0001|ffff]}{color[ffff]}\n其中一個數值！
01.35.Alice	在了解NOT小節點的作用後，\n我們再到遊戲畫面裡看看吧。
02.00.Alice	還是一樣這麼吵呢……
02.01.Alice	用{color[0400]}{[0001|1d00]}鍵{[0001|ffff]}{color[ffff]}來停止爆炸吧。
02.02.Alice	爆炸停止的時機，\n你確認清楚了嗎？
02.03.Alice	那麼，我們回到程式設計畫面去吧。
03.00.Not	嘻嘻嘻……\n就算你很了解我，\n我也不會高興喔～～
03.01.Effect	你不止愛害羞，\n還愛臉紅吶～～
03.02.Alice	NOT小節點永遠\n{color[0400]}{[0001|1d00]}都會做顛倒的事{[0001|ffff]}{color[ffff]}……\n你可要記好囉。
03.03.Button	{color[0400]}{[0001|1d00]}沒有{[0001|ffff]}{color[ffff]}輸入時，就{color[0400]}{[0001|1d00]}會{[0001|ffff]}{color[ffff]}輸出！\n{color[0400]}{[0001|1d00]}有{[0001|ffff]}{color[ffff]}輸入時，就{color[0400]}{[0001|1d00]}不會{[0001|ffff]}{color[ffff]}輸出！\n這樣夠清楚明白了吧！
03.04.Alice	在程式設計中，\n我們經常碰到需要使用\n「不是〇〇時就××」的情況。
03.05.Alice	此時NOT小節點就能派上用場，\n你可要牢牢記住喔。
03.06.Not	不要啦，我才不想被你記住～
03.07.Effect	別說這種違心之論啦～～\nNOT小節點你還真是愛{color[0400]}{[0001|1d00]}唱低調{[0001|ffff]}{color[ffff]}耶～
03.08.Effect	……是{color[0400]}{[0001|1d00]}唱反調{[0001|ffff]}{color[ffff]}才對吧！\n唱低調是啥鬼！\n很低調地唱歌嗎！？
03.09.Not	嘻嘻嘻！\n特效小節點總是這麼有趣呢～
03.10.Effect	哇～～！終於有人覺得好笑了！！\n這可是我生平第一次耶！！\n謝謝你啊！NOT小節點！
Guidebook_OnOffFlag.msbt
000	……你好。
001	遊戲畫面上放著\n{[0001|1d00]}{color[0400]}人{color[ffff]}{[0001|ffff]}和{[0001|1d00]}{color[0400]}水藍色的箱子{color[ffff]}{[0001|ffff]}。
002	試著按下{color[0400]}{[0001|1d00]}鍵{[0001|ffff]}{color[ffff]}。
003	按下{color[0400]}{[0001|1d00]}鍵{[0001|ffff]}{color[ffff]}後，\n{color[0400]}{[0001|1d00]}人會一邊發出聲音，\n一邊發射球體{[0001|ffff]}{color[ffff]}。
004	不用一直按著{[0001|1d00]}{color[0400]}鍵\n{color[ffff]}{[0001|ffff]}也沒有關係。
005	接著按下{[0001|1d00]}{color[0400]}鍵{color[ffff]}{[0001|ffff]}看看。
006	{[0001|2000]}……聲音和發射的動作{[0001|ffff]}都{[0001|1d00]}{color[0400]}停止了{color[ffff]}{[0001|ffff]}。
007	試試看用\n{[0001|1d00]}{color[0400]}鍵開啟{color[ffff]}{[0001|ffff]}發射，\n{[0001|1d00]}{color[0400]}鍵關閉{color[ffff]}{[0001|ffff]}發射。
008	這次要講解的就是\n像這樣{[0001|1d00]}{color[0400]}切換開關的程式{color[ffff]}{[0001|ffff]}。
009	那我們到程式設計畫面去吧。
010	{[0201]}，你好～！
011	……嗨。
012	……我們正在……
013	……排排站。
014	你好～～♪\n請問有什麼事情嗎？
016	你想知道{[0001|1d00]}{color[0400]}透過按下按鍵{color[ffff]}{[0001|ffff]}\n{[0001|1d00]}{color[0400]}來切換聲音和發射開關{color[ffff]}{[0001|ffff]}的原理啊！
017	這件事就交給我吧♪
018	我會好好地教你一番！
020	……那麼請聽我帶來的\n「切換開關之歌」。
021	為了～～\n切換～～開關～\n我們需要那個小節點～♪
022	那個名為～～\n旗標的～～小節點～～♪
023	Zzz……
024	……咦？？\n{[0001|1d00]}{color[0400]}旗標小節點{color[ffff]}{[0001|ffff]}？
025	咕噥……\n我是{[0001|1d00]}{color[0400]}旗標小節點{color[ffff]}{[0001|ffff]}……唔……
026	……我這麼用心地唱歌，\n你居然還睡得著，真是厲害啊……
101	……真拿他沒辦法，\n那我就接著教你吧♪
027	請注意看一下\n{[0001|1d00]}{color[0400]}旗標小節點{color[ffff]}{[0001|ffff]}的{[0001|1d00]}輸入端{[0001|ffff]}～♪
102	當訊號輸入到這個{color[0400]}{[0001|1d00]}開啟端口{[0001|ffff]}{color[ffff]}時～♪
103	{color[0400]}{[0001|1d00]}旗標小節點{[0001|ffff]}{color[ffff]}的狀態會變成{color[0400]}{[0001|1d00]}開啟{[0001|ffff]}{color[ffff]}～♪
104	然後旗標小節點就會\n{color[0400]}{[0001|1d00]}持續輸出{[0001|ffff]}{color[ffff]}訊號～♪
105	當訊號傳送到{color[0400]}{[0001|1d00]}關閉端口{[0001|ffff]}{color[ffff]}時，\n{color[0400]}{[0001|1d00]}旗標小節點{[0001|ffff]}{color[ffff]}的狀態會變成{color[0400]}{[0001|1d00]}關閉{[0001|ffff]}{color[ffff]}～♪
033	{color[0400]}{[0001|1d00]}訊號{[0001|ffff]}{color[ffff]}就{color[0400]}{[0001|1d00]}不會輸出{[0001|ffff]}{color[ffff]}～♪
033-01	……謝謝各位的聆聽。
107	……Zzz……
033-02	嗯……也就是說，\n旗標小節點有{[0001|1d00]}{color[0400]}開啟{color[ffff]}{[0001|ffff]}和{[0001|1d00]}{color[0400]}關閉{color[ffff]}{[0001|ffff]}2種狀態……
033-03	{[0001|1d00]}{color[0400]}開啟{color[ffff]}{[0001|ffff]}時{[0001|1d00]}{color[0400]}會{color[ffff]}{[0001|ffff]}持續{[0001|1d00]}{color[0400]}輸出{color[ffff]}{[0001|ffff]}訊號，\n{[0001|1d00]}{color[0400]}關閉{color[ffff]}{[0001|ffff]}時則{[0001|1d00]}{color[0400]}不會輸出{color[ffff]}{[0001|ffff]}訊號……\n就是這麼一回事♪
034	因為{[0001|1d00]}{color[0400]}開啟端口{color[ffff]}{[0001|ffff]}連接著\n{[0001|1d00]}{color[0400]}按鍵小節點{color[ffff]}{[0001|ffff]}……
035	當你按下{[0001|1d00]}{color[0400]}鍵{color[ffff]}{[0001|ffff]}時……\n{[0001|1d00]}{color[0400]}旗標小節點{color[ffff]}{[0001|ffff]}的狀態就會變成{[0001|1d00]}{color[0400]}開啟{color[ffff]}{[0001|ffff]}喲！
036	……Zzz……\n{[0001|1d00]}{color[0400]}開啟{color[ffff]}{[0001|ffff]}……等我起床就輸出訊號。\n……咕噥。
037	我會傳送訊號給……\n{[0001|1d00]}{color[0400]}播放聲音小節點{color[ffff]}{[0001|ffff]}……\n還有{[0001|1d00]}{color[0400]}發射物件小節點{color[ffff]}{[0001|ffff]}……唔。
038	呼！喝！！\n放馬過來吧！！！
039	訊號一傳來～\n我就會用力地把球體發射出去～～
040	因為我和{[0001|1d00]}{color[0400]}人小節點{color[ffff]}{[0001|ffff]}\n緊緊地{[0001|1d00]}{color[0400]}連接{color[ffff]}{[0001|ffff]}在一起～～
041	所以看起來就像是\n{[0001|1d00]}{color[0400]}人發射出球體{color[ffff]}{[0001|ffff]}的樣子喔！！！
044	然後，{[0001|1d00]}{color[0400]}關閉端口{color[ffff]}{[0001|ffff]}連接著\n{[0001|1d00]}{color[0400]}按鍵小節點{color[ffff]}{[0001|ffff]}……
045	嗨！\n當你按下{[0001|1d00]}{color[0400]}鍵{color[ffff]}{[0001|ffff]}時……\n{[0001|1d00]}{color[0400]}旗標小節點{color[ffff]}{[0001|ffff]}的狀態就會變成{[0001|1d00]}{color[0400]}關閉{color[ffff]}{[0001|ffff]}喲！
045-01	……Zzz……\n……如果狀態是{[0001|1d00]}{color[0400]}關閉{color[ffff]}{[0001|ffff]}……\n我就不會輸出訊號……
045-02	沒有訊號輸入的話～\n我就不會發射球體了～～
047-01	……就像這樣，\n我們可以透過\n{[0001|1d00]}{color[0400]}開啟或關閉旗標小節點{color[ffff]}{[0001|ffff]}……
047-02	來開啟或關閉聲音和發射的動作。
048	那麼，現在你應該也\n更認識旗標小節點了。
049	我們就到遊戲畫面\n重新確認一次動作吧。
050	按下{[0001|1d00]}{color[0400]}鍵{color[ffff]}{[0001|ffff]}，\n讓人發射球體並發出聲音。
051	按下{[0001|1d00]}{color[0400]}鍵{color[ffff]}{[0001|ffff]}後，\n{[0001|1d00]}{color[0400]}旗標小節點{color[ffff]}{[0001|ffff]}的狀態會變成{[0001|1d00]}{color[0400]}開啟{color[ffff]}{[0001|ffff]}……
052	旗標小節點{color[0400]}{[0001|1d00]}輸出{[0001|ffff]}{color[ffff]}訊號，\n球體被發射出去，聲音也隨之響起。
054	而按下{color[0400]}{color[ffff]}{[0001|1d00]}{color[0400]}鍵{color[ffff]}{[0001|ffff]}後，\n{[0001|1d00]}{color[0400]}旗標小節點{color[ffff]}{[0001|ffff]}的狀態會變成{[0001|1d00]}{color[0400]}關閉{color[ffff]}{[0001|ffff]}……
055	這樣的話，訊號就{[0001|1d00]}{color[0400]}不會輸出{color[ffff]}{[0001|ffff]}，\n球體會停止發射，聲音也隨之停止。
056	當你想在特定的條件下\n{[0001|1d00]}{color[0400]}發出或停止訊號{color[ffff]}{[0001|ffff]}時……
057	就使用{[0001|1d00]}{color[0400]}旗標小節點{color[ffff]}{[0001|ffff]}吧。
058	回程式設計畫面吧。
061	……咕噥。\n你了解……\n我的運作原理了嗎……？
062	只要改變連接{[0001|1d00]}{color[0400]}開啟端口{color[ffff]}{[0001|ffff]}的小節點……\n就能改變讓我開啟的{[0001|1d00]}{color[0400]}條件{color[ffff]}{[0001|ffff]}。
063	像是{[0001|1d00]}{color[0400]}拿到蘋果，{color[ffff]}{[0001|ffff]}\n{[0001|1d00]}{color[0400]}人就變得可以跳躍{color[ffff]}{[0001|ffff]}……\n之類的……嘶……
064	來試看看吧。
064-01	先和物件小節點們\n在這裡說再見。
064-02	然後，\n叫出{[0001|1d00]}{color[0400]}蘋果{color[ffff]}{[0001|ffff]}的{[0001|1d00]}{color[0400]}時尚物件小節點{color[ffff]}{[0001|ffff]}。
064-03	吃了蘋果就會跳起來……\n這不正是……\n和牛頓的蘋果相反嗎！？
064-04	真是個不按牌理出牌的設計呢……\n不愧是{[0201]}！\n好有才華喔♥
065	接著，選擇{[0001|1d00]}{color[0400]}旗標小節點{color[ffff]}{[0001|ffff]}……
066	複製他。
067	把他移到左邊去吧。
068	……Zzz……
069	接下來……\n叫出{[0001|1d00]}{color[0400]}物件損壞時小節點{color[ffff]}{[0001|ffff]}。
070	哎呀呀！\n你想知道{[0001|1d00]}{color[0400]}蘋果損壞的瞬間{color[ffff]}{[0001|ffff]}啊！？
071	這件事就交給我吧！
072	只要蘋果損壞，\n我就會輸出訊號！
075	那麼，我們把{[0001|1d00]}{color[0400]}物件損壞時小節點{color[ffff]}{[0001|ffff]}\n連接到{[0001|1d00]}{color[0400]}旗標小節點{color[ffff]}{[0001|ffff]}的{[0001|1d00]}{color[0400]}開啟端口{color[ffff]}{[0001|ffff]}。
076	這麼一來……{[0001|1d00]}{color[0400]}蘋果損壞時，\n開啟旗標小節點{color[ffff]}{[0001|ffff]}的部分就完成了。
078	下一步我們就試著{[0001|1d00]}{color[0400]}讓人可以在\n旗標小節點開啟時跳躍{color[ffff]}{[0001|ffff]}吧。
079	叫出{[0001|1d00]}{color[0400]}按鍵小節點{color[ffff]}{[0001|ffff]}和{[0001|1d00]}{color[0400]}AND小節點{color[ffff]}{[0001|ffff]}。
080	嗨！我是{[0001|1d00]}{color[0400]}鍵{color[ffff]}{[0001|ffff]}！
081	沒問題沒問題！\n我會確認{[0001|1d00]}{color[0400]}鍵的輸入\n{color[ffff]}{[0001|ffff]}還有{[0001|1d00]}{color[0400]}旗標小節點{color[ffff]}{[0001|ffff]}喔。
082	那麼，我們來設計程式吧。
083	把{[0001|1d00]}{color[0400]}旗標小節點{color[ffff]}{[0001|ffff]}和{[0001|1d00]}{color[0400]}AND小節點{color[ffff]}{[0001|ffff]}連接起來。
084	接著把{[0001|1d00]}{color[0400]}按鍵小節點{color[ffff]}{[0001|ffff]}也連接到{[0001|1d00]}{color[0400]}AND小節點{color[ffff]}{[0001|ffff]}。
085	最後……把{[0001|1d00]}{color[0400]}AND小節點{color[ffff]}{[0001|ffff]}的輸出\n連接到{[0001|1d00]}{color[0400]}人小節點{color[ffff]}{[0001|ffff]}的{[0001|1d00]}{color[0400]}跳躍端口{color[ffff]}{[0001|ffff]}。
086	這樣一來，當蘋果損壞時……\n也就是人在{[0001|1d00]}{color[0400]}拿到蘋果後，\n按下鍵就可以跳躍{color[ffff]}{[0001|ffff]}了。
087	走吧，我們到遊戲畫面去看看。
088	先試著按下{[0001|1d00]}{color[0400]}鍵{color[ffff]}{[0001|ffff]}。
089a_00	……可以的話，\n我希望你能{[0001|1d00]}{color[0400]}在拿蘋果之前\n{color[ffff]}{[0001|ffff]}先按下鍵……
089a_01	我們重來一次。
089a_02	來，{[0001|1d00]}{color[0400]}在拿蘋果之前，\n先按下鍵看看{color[ffff]}{[0001|ffff]}。
089a_03	……我說了，\n{[0001|1d00]}{color[0400]}在拿蘋果之前，先按下鍵{color[ffff]}{[0001|ffff]}。
089a_04	我們再重來一次。
089	{[0001|1d00]}{color[0400]}不拿蘋果{color[ffff]}{[0001|ffff]}的話，\n{[0001|2000]}人{[0001|ffff]}就{[0001|1d00]}{color[0400]}不能跳躍{color[ffff]}{[0001|ffff]}。
090	那麼，我們現在去拿{[0001|1d00]}{color[0400]}蘋果{color[ffff]}{[0001|ffff]}……
091	試著再按一次{[0001|1d00]}{color[0400]}鍵{color[ffff]}{[0001|ffff]}。
092	{color[0400]}{[0001|1d00]}拿到蘋果後，\n人就可以跳躍了。{[0001|ffff]}{color[ffff]}
093	……這就像是\n遊戲中常見的{[0001|1d00]}{color[0400]}道具{color[ffff]}{[0001|ffff]}……
094	取得道具後獲得能力……也就是說\n{[0001|1d00]}{color[0400]}做了某件事後，變得可以做到其他事{color[ffff]}{[0001|ffff]}。\n旗標小節點正適合製作這樣的程式。
094-01	你可要記住喔。
095	走吧，到程式設計畫面去。
096	歡迎回來～♪
097	使用{[0001|1d00]}{color[0400]}旗標小節點{color[ffff]}{[0001|ffff]}\n切換～開關～～♪
097-01	請你不要忘了～～♪
097-02	……Zzz……
097-03	……他還在睡覺。
098	……咕噥。\n居然發射出這麼多的飯糰……\n我吃不完啊……要爆炸了……嘶～
099	他在作什麼夢啊……
Guidebook_PrintDebug.msbt
00.00.Alice	……你好，{[0201]}。
00.01.Alice	遊戲畫面的左邊停著汽車，\n右邊有一條紅線。
00.02.Alice	我想把程式設計成\n當汽車開到{[0001|1d00]}{color[0400]}紅線{color[ffff]}{[0001|ffff]}時，\n畫面中會有{[0001|1d00]}{color[0400]}拉炮響起{color[ffff]}{[0001|ffff]}……
00.03.Alice	試著用{[0001|1d00]}{color[0400]}鍵{color[ffff]}{[0001|ffff]}\n讓汽車跑到紅線那邊吧。
00.04.Alice	……沒錯。\n就算汽車超過了紅線，\n也{[0001|1d00]}{color[0400]}沒有發生任何事情{color[ffff]}{[0001|ffff]}。
00.05.Alice	現在{color[0400]}{[0001|1d00]}程式{[0001|ffff]}{color[ffff]}好像{color[0400]}{[0001|1d00]}出了點問題{[0001|ffff]}{color[ffff]}，\n拉炮沒辦法順利地響起。
00.06.Alice	這次我要講解的{color[0400]}{[0001|1d00]}除錯{[0001|ffff]}{color[ffff]}，\n正是用來找出這類問題原因的方法。
00.07.Alice	那麼，我們趕快到\n程式設計畫面去看看吧。
01.00.Car	嗖嗖嗖！\n我是汽車小節點！
01.01.Rigid	……嗨。\n我是物件小節點，\n是一條紅線。
01.02.Sensor	我是位置感應器小節點。\n想知道汽車小節點的位置的話，\n就交給我吧！
01.03.Effect	你好，{[0201]}。\n今天也要炒熱氣氛喔～\n砰砰砰！！
01.04.Effect	是說，你今天來有什麼事嗎？
01.05.Effect	原來如此，\n你是來調查我不會響的原因吶。
01.06.Effect	那麼我們得先說明一下\n我在什麼樣的條件下才會響。
01.07.Car	首先，當按鍵小節點\n傳送訊號到我的{[0001|1d00]}{color[0400]}油門端口{color[ffff]}{[0001|ffff]}時，\n我就會咻——地{[0001|1d00]}{color[0400]}向右邊跑{color[ffff]}{[0001|ffff]}喔！
01.08.Sensor	我和汽車小節點\n連接在一起……
01.09.Sensor	所以可以把{[0001|1d00]}{color[0400]}汽車的現在位置{color[ffff]}……{[0001|ffff]}\n也就是汽車所在的\nX軸、Y軸、Z軸位置分別輸出。
01.10.Compare	嗨，{[0201]}。\n我是比較小節點！
01.11.Compare	我會比較\n位置感應器小節點……
01.12.Compare	還有常數小節點\n傳來的數值……
01.13.Compare	哪邊的數值比較{color[0400]}{[0001|1d00]}大{[0001|ffff]}{color[ffff]}呢……\n真令人好奇！對吧？
01.14.Constant	我是常數小節點，\n這次的數值是4.00。
01.15.Constant	當{[0001|1d00]}{color[0400]}位置感應器小節點輸出的數值{color[ffff]}{[0001|ffff]}\n大於我輸出的{[0001|1d00]}{color[0400]}4.00{color[ffff]}{[0001|ffff]}時……
01.16.Constant	我就會收到訊號吶。
01.17.Constant	4.00……\n和我的X軸{color[0400]}{[0001|1d00]}位置{[0001|ffff]}{color[ffff]}一樣。
01.19.Alice	保險起見，\n我們到設定畫面確認一下吧。
01.20.Alice	選擇物件小節點……
01.21.Alice	打開設定畫面。
01.23.Alice	確實是{color[0400]}{[0001|1d00]}X: 4.00m{[0001|ffff]}{color[ffff]}呢。
01.24.Alice	如果確認完了，\n就關閉設定畫面吧。
01.25.Effect	也就是說，\n如果汽車超過紅線的位置，\n我就會讓拉炮響起吶。
01.25-01.Car	但是……\n剛剛我跑到紅線那邊時，\n拉炮並沒有響喔。
01.26.Alice	這就表示……\n程式的某個地方出了{color[0400]}{[0001|1d00]}問題{[0001|ffff]}{color[ffff]}。
01.27.Alice	碰上這種情況時，只要我們把\n{[0001|1d00]}{color[0400]}小節點輸出的數值顯示在遊戲畫面上{color[ffff]}{[0001|ffff]}，\n就可以很容易地找出問題的原因。
01.28.Alice	那麼，就叫{[0001|1d00]}{color[0400]}附數字物件小節點{color[ffff]}{[0001|ffff]}出來\n幫忙我們一起除錯吧。
01.29.Number	你好，\n{[0201]}。
01.30.Number	請把{color[0400]}{[0001|1d00]}想要顯示數值的小節點{[0001|ffff]}{color[ffff]}的\n輸出端連接到我的輸入端吧。
01.31.Alice	現在我們知道的問題，\n只有{color[0400]}{[0001|1d00]}特效沒有如設想般響起{[0001|ffff]}{color[ffff]}。
01.32.Alice	只要從已知的問題中\n找出相關的小節點……
01.33.Alice	然後再逐一確認他們\n是否有輸出{[0001|1d00]}{color[0400]}我們設想的數值{color[ffff]}{[0001|ffff]}，\n應該就能知道原因出在哪了。
01.34.Alice	那麼我們就先來檢查看看\n輸入到特效小節點的數值……\n{[0001|1d00]}{color[0400]}比較小節點的輸出{color[ffff]}{[0001|ffff]}吧。
01.35.Alice	把比較小節點的輸出\n連接到附數字物件小節點。
01.36.Alice	OK，\n到遊戲畫面確認一下吧。
02.00.Alice	正中間的物件\n顯示著{[0001|1d00]}{color[0400]}0.00{color[ffff]}{[0001|ffff]}呢。
02.01.Alice	這就是\n{color[0400]}{[0001|1d00]}比較小節點正在輸出的數值{[0001|ffff]}{color[ffff]}。
02.02.Alice	仔細觀察這個數值的同時，\n試著按下{color[0400]}{[0001|1d00]}鍵{[0001|ffff]}{color[ffff]}讓汽車跑起來。
02.03.Alice	即使汽車超過了紅線，\n數值也還是0.00……
02.04.Alice	如果想再確認一次的話，\n就按下重來吧。
02.05.Alice	數值維持在0.00……\n也就是說，\n比較小節點{[0001|1d00]}{color[0400]}沒有輸出訊號{color[ffff]}{[0001|ffff]}。
02.06.Alice	先回到程式設計畫面吧。
03.00.Number	怎麼樣？\n我顯示的數值\n{color[0400]}{[0001|1d00]}一直是0.00{[0001|ffff]}{color[ffff]}吧？
03.01.Effect	我一～直在等訊號傳來，\n等到頭髮都白了吶。
03.01-01.Effect	咦？……不對，\n我根本就沒有頭髮吶！
03.02.Alice	看來沒有什麼特別奇怪的地方。\n接著我們來檢查一下\n{color[0400]}{[0001|1d00]}輸入到比較小節點的數值{[0001|ffff]}{color[ffff]}吧。
03.03.Constant	我會輸出4.00這個數值，\n不管發生什麼事都不會改變。
03.04.Sensor	我輸出的數值會\n{color[0400]}{[0001|1d00]}隨著汽車移動改變{[0001|ffff]}{color[ffff]}喔！
03.05.Alice	常數小節點輸出的數值\n應該是4.00沒有錯，\n我們來檢查一下{color[0400]}{[0001|1d00]}位置感應器小節點{[0001|ffff]}{color[ffff]}吧。
03.06.Sensor	要檢查我的輸出嗎？好喔！
03.08.Alice	那麼，選擇我們剛才檢查\n比較小節點輸出的那條配對線……
03.09.Alice	解除。
03.09-01.Alice	然後，把配對線連接到\n{[0001|1d00]}{color[0400]}位置感應器小節點{color[ffff]}{[0001|ffff]}的輸出。
03.10.Alice	OK，我們到遊戲畫面去確認吧。
04.00.Alice	物件顯示的數值是{[0001|1d00]}{color[0400]}0.77{color[ffff]}{[0001|ffff]}。
04.00-01.Alice	這個數值是位置感應器小節點\n輸入到比較小節點的數值。
04.00-02.Alice	也就是說，\n比較小節點正在比較這個{[0001|1d00]}{color[0400]}0.77{color[ffff]}{[0001|ffff]}\n還有常數小節點輸出的{[0001|1d00]}{color[0400]}4.00{color[ffff]}{[0001|ffff]}。
04.00-03.Alice	而比較小節點要確認的是\n位置感應器小節點的數值\n{[0001|1d00]}{color[0400]}有沒有大於4.00{color[ffff]}{[0001|ffff]}。
04.01.Alice	因為{color[0400]}{[0001|1d00]}0.77小於4.00{[0001|ffff]}{color[ffff]}，\n在數值沒有變化的情況下，\n{color[0400]}{[0001|1d00]}比較小節點不會輸出訊號{[0001|ffff]}{color[ffff]}。
04.02.Alice	那麼，仔細觀察數值的同時，\n試著按下{color[0400]}{[0001|1d00]}鍵{[0001|ffff]}{color[ffff]}讓汽車跑起來。
04.03.Alice	即使汽車移動了，\n數值還是維持在0.77……
04.04.Alice	這樣不管汽車跑了多遠，\n數值都不可能超過4.00。
04.05.Alice	所以，出問題的是和4.00比較的數值……\n也就是{[0001|1d00]}{color[0400]}位置感應器小節點輸出的數值{color[ffff]}{[0001|ffff]}。
04.06.Alice	那麼，回到程式設計畫面吧。
05.00.Number	怎麼樣？\n我顯示的數值\n{color[0400]}{[0001|1d00]}一直是0.77{[0001|ffff]}{color[ffff]}吧。
05.01.Compare	0.77沒有比4.00大嘛！你說對不對？
05.03.Effect	汽車都跑那麼遠了，\n數值卻還是不變，\n這到底是怎麼回事？
05.04.Sensor	真奇怪！\n當汽車向右邊移動時，\n我的{color[0400]}{[0001|1d00]}X{[0001|ffff]}{color[ffff]}輸出應該會跟著改變才對！
05.05.Number	嗯……{color[0400]}{[0001|1d00]}X{[0001|ffff]}{color[ffff]}……？
05.06.Number	位置感應器小節點……\n你的配對線連接在{[0001|1d00]}{color[0400]}Y端口{color[ffff]}{[0001|ffff]}，\n不是{[0001|1d00]}{color[0400]}X端口{color[ffff]}{[0001|ffff]}喔。
05.07.Sensor	真的耶！\n配對線連接在{[0001|1d00]}{color[0400]}Y端口{color[ffff]}{[0001|ffff]}！
05.08.Sensor	汽車小節點的左右位置\n得從{[0001|1d00]}{color[0400]}X端口{color[ffff]}{[0001|ffff]}輸出才行啊！
05.09.Compare	原來如此！我剛剛比較的\n{color[0400]}{[0001|1d00]}不是{[0001|ffff]}{color[ffff]}汽車小節點的{color[0400]}{[0001|1d00]}左右位置，\n而是上下位置{[0001|ffff]}{color[ffff]}啊！
05.10.Number	這下子總算弄清楚原因了呢。
05.10-01.Effect	也就是說，位置感應器小節點的\n{[0001|1d00]}{color[0400]}配對線連接到錯的端口了{color[ffff]}{[0001|ffff]}吶……！
05.11.Alice	那就來修正程式吧。
05.12.Alice	選擇從位置感應器小節點的{[0001|1d00]}{color[0400]}Y端口{color[ffff]}{[0001|ffff]}\n連接到附數字物件小節點的配對線……
05.13.Alice	解除。
05.14.Alice	接著選擇連接到\n比較小節點的配對線……
05.15.Alice	解除。
05.16.Sensor	最後只要從我的{[0001|1d00]}{color[0400]}X端口{color[ffff]}{[0001|ffff]}\n把配對線重新連接起來就可以了吧！
05.17.Alice	這樣程式就修正好了。
05.18.Alice	到遊戲畫面去確認吧。
06.00.Alice	畫面中的附數字物件\n顯示負數了。
06.02.Alice	按下{color[0400]}{[0001|1d00]}鍵{[0001|ffff]}{color[ffff]}，\n讓汽車跑起來看看。
06.03.Alice	隨著汽車移動，\n數值也不斷增加……
06.04.Alice	當數值超過4.00時，\n拉炮就響起來了。
06.05.Alice	按下{color[0400]}{[0001|1d00]}重來{[0001|ffff]}{color[ffff]}，\n再確認一次看看。
06.05-01.Alice	嗯嗯，錯誤被修正了，\n程式也能正常運作了。
06.06.Alice	如果覺得已經確認清楚了，\n就回到程式設計畫面吧。
07.00.Effect	我的拉炮怎麼樣啊？\n感覺很熱鬧吧～\n砰砰砰！！
07.01.Sensor	在連接配對線時……\n要仔細地確認端口才行呢！
07.02.Number	即使是知道原理就很簡單的問題，\n有時也很難注意到其中的原因呢。
07.03.Alice	那麼，使用附數字物件小節點……\n幫程式除錯的方法，你清楚了嗎？
07.06.Number	把想要檢查的輸出連接到我身上，\n就能在遊戲畫面中顯示他的數值。
07.07.Effect	只要依序去確認那些有問題……\n也就是與我們設想結果不同的地方……
07.08.Number	就一定能夠找出\n發生問題的原因。
07.09.Effect	就是要你別心急，慢慢來吶。\n俗話說……{[0001|1d00]}{color[0400]}欲速則不幸{color[ffff]}{[0001|ffff]}吶。
07.10.Effect	啊，應該是{[0001|1d00]}{color[0400]}欲速則不達{color[ffff]}{[0001|ffff]}才對吧！\n是誰會不幸啊！
07.11.Alice	……那麼，今天就講到這裡。
07.12.Car	嗖嗖嗖！\n那就下次再見囉！
Guidebook_PunchAndBreak.msbt
000	……你好。
001	各種顏色的{[0001|1d00]}{color[0400]}立方體{color[ffff]}{[0001|ffff]}\n在畫面中堆成了一座{[0001|1d00]}{color[0400]}小山{color[ffff]}{[0001|ffff]}。
002	試著用{[0001|1d00]}{color[0400]}操控搖桿{color[ffff]}{[0001|ffff]}移動人，\n{[0001|1d00]}{color[0400]}按下鍵向立方體出拳{color[ffff]}{[0001|ffff]}。
003	出拳後{color[0400]}{[0001|1d00]}立方體就損壞了{[0001|ffff]}{color[ffff]}。
106	試著多出幾拳吧。
004	呼～真爽快……
005	{color[0400]}{[0001|1d00]}人出拳破壞物件{[0001|ffff]}{color[ffff]}……
006	這就是我這次要講解的程式。
105	那麼，我們到程式設計畫面去吧。
007	嘿！呀～～！喔～～～～！！
008	啊，{[0201]}！\n你好～！
009	聽我說、聽我說！\n我得到了新的力量！
010	現在只要我{color[0400]}{[0001|1d00]}一出拳，\n就能破壞物件{[0001|ffff]}{color[ffff]}喔！！
011	……嗨，\n我們會被破壞掉。
012	欸嘿嘿～！我很厲害吧！！
014	我之所以能得到這股力量……
014-01	都是{[0001|1d00]}{color[0400]}按鍵小節點{color[ffff]}{[0001|ffff]}\n和{[0001|1d00]}{color[0400]}破壞物件小節點{color[ffff]}{[0001|ffff]}的功勞！
014-02	嗨！\n我會做伏地挺身，\n提高拳頭的威力！
014-03	呵呵……\n居然用拳頭來破壞……\n真厲害呢……呵呵……
015	{[0001|1d00]}{color[0400]}按鍵小節點{color[ffff]}{[0001|ffff]}接連著\n我的{[0001|1d00]}{color[0400]}動作端口{color[ffff]}{[0001|ffff]}～
016	嗨！\n按下{[0001|1d00]}{color[0400]}鍵{color[ffff]}{[0001|ffff]}時，\n我會傳送{[0001|1d00]}{color[0400]}訊號{color[ffff]}{[0001|ffff]}給{[0001|1d00]}{color[0400]}人小節點{color[ffff]}{[0001|ffff]}喲！
017	當{[0001|1d00]}{color[0400]}訊號{color[ffff]}{[0001|ffff]}傳到我的{[0001|1d00]}{color[0400]}動作端口{color[ffff]}{[0001|ffff]}時，\n我就會{[0001|1d00]}{color[0400]}做出{color[ffff]}{[0001|ffff]}設定好的{[0001|1d00]}{color[0400]}動作{color[ffff]}喔{[0001|ffff]}！
018	現在人的動作\n被設定為{[0001|1d00]}{color[0400]}出拳{color[ffff]}{[0001|ffff]}……
019	按下{[0001|1d00]}{color[0400]}鍵{color[ffff]}{[0001|ffff]}時，\n我就會{[0001|1d00]}{color[0400]}出拳{color[ffff]}{[0001|ffff]}～！
020	不過……這些設計\n只能讓人做出拳的動作，\n並{[0001|1d00]}{color[0400]}不能破壞物件{color[ffff]}{[0001|ffff]}。
021	我們需要{[0001|1d00]}{color[0400]}設計程式來破壞物件{color[ffff]}{[0001|ffff]}。
024	呵呵……
025	啊！\n{[0001|1d00]}{color[0400]}破壞物件小節點{color[ffff]}{[0001|ffff]}！
026	提到破壞物件，就少不了我……
027	{color[0400]}{[0001|1d00]}人出拳時，\n物件{[0001|ffff]}{color[ffff]}之所以{[0001|1d00]}{color[0400]}會損壞{color[ffff]}{[0001|ffff]}……
028	是因為我會破壞……\n……呵呵……{[0001|1d00]}{color[0400]}我接觸到的東西{color[ffff]}{[0001|ffff]}……
029	我{[0001|1d00]}{color[0400]}連接{color[ffff]}{[0001|ffff]}在人小節點上……\n緊緊地黏在{[0001|1d00]}{color[0400]}人的前面{color[ffff]}{[0001|ffff]}……
029-01	然後……有看到\n{color[0400]}{[0001|1d00]}按鍵小節點{[0001|ffff]}{color[ffff]}連接著我對吧？
029-02	當按鍵小節點傳來訊號時……\n也就是說……{[0001|1d00]}{color[0400]}按下鍵時{color[ffff]}{[0001|ffff]}，\n我就會破壞……正在接觸的物件。
029-03	按下鍵時……\n人會做{[0001|1d00]}{color[0400]}出拳{color[ffff]}{[0001|ffff]}的動作……
029-04	所以你會在{[0001|1d00]}{color[0400]}人出拳的同時，{color[ffff]}{[0001|ffff]}\n{[0001|1d00]}{color[0400]}破壞接觸到的物件{color[ffff]}{[0001|ffff]}吧！
029-05	……呵呵呵，\n我喜歡聰明的孩子……
041	那麼，{[0201]}，\n為了讓你也能明白其中的道理，\n就讓你看看……我工作的樣子吧……呵呵。
042	把我設定為{[0001|1d00]}{color[0400]}能看見{color[ffff]}{[0001|ffff]}吧……呵呵呵。
043	打開{[0001|1d00]}{color[0400]}破壞物件小節點{color[ffff]}{[0001|ffff]}的設定。
044	把{color[0400]}{[0001|1d00]}狀態{[0001|ffff]}{color[ffff]}中的{color[0400]}{[0001|1d00]}能看見{[0001|ffff]}{color[ffff]}設定為{[0001|1d00]}{color[0400]}開啟{color[ffff]}{[0001|ffff]}。
045	關閉設定畫面。
046	這樣你就能把我的位置……\n看得一清二楚了……呵呵。
047	看到我{color[0400]}{[0001|1d00]}破壞物件的樣子{[0001|ffff]}{color[ffff]}……\n呵呵……\n你應該會比較容易了解……
053	來吧，{[0201]}，\n順從你的本能……\n試著破壞看看……
054	來破壞看看吧。
055	你有看見{[0001|2000]}人的{[0001|ffff]}身上\n黏著{[0001|1d00]}{color[0400]}立方體的框框{color[ffff]}{[0001|ffff]}嗎？
056	這個框框會{color[0400]}{[0001|1d00]}破壞接觸到的物件{[0001|ffff]}{color[ffff]}。
057	在{color[0400]}{[0001|1d00]}框框接觸到立方體的狀態{[0001|ffff]}{color[ffff]}下，\n試著按下{color[0400]}{[0001|1d00]}鍵{[0001|ffff]}{color[ffff]}讓人出拳。
058	立方體損壞了。
059	就像這樣，當人出拳時，\n就會破壞接觸到的物件……
060	看起來就像是\n{[0001|1d00]}{color[0400]}人出拳破壞物件{color[ffff]}{[0001|ffff]}。
061	回程式設計畫面吧。
062	那麼接下來……\n就用{[0001|1d00]}{color[0400]}別的動作{color[ffff]}{[0001|ffff]}……呵呵，\n來破壞物件吧……
063	{[0001|1d00]}{color[0400]}物件小節點{color[ffff]}{[0001|ffff]}，\n改變一下你們的位置吧……
064	……收到。
065	我們改好位置了。
067	去確認看看遊戲畫面\n變成什麼樣子了吧。
068	立方體{color[0400]}{[0001|1d00]}浮在空中{[0001|ffff]}{color[ffff]}排成了一列。
068-01	人就算出拳也無法接觸到立方體。
069	接下來……我們來設計程式，\n讓人做出{color[0400]}{[0001|1d00]}從下方出拳的動作{[0001|ffff]}{color[ffff]}，\n破壞浮在空中的立方體吧。
071	到程式設計畫面去吧。
074	首先……\n來改變按下{[0001|1d00]}{color[0400]}鍵{color[ffff]}{[0001|ffff]}時，\n{color[0400]}{[0001|1d00]}人做出的動作{[0001|ffff]}{color[ffff]}吧。
075	選擇{[0001|1d00]}{color[0400]}動作{color[ffff]}{[0001|ffff]}。
076	更改為{[0001|1d00]}{color[0400]}歡呼{color[ffff]}{[0001|ffff]}。
077	關閉這個畫面。
079	去看看動作變成什麼樣子了吧。
080	在立方體的下方\n試著按下{[0001|1d00]}{color[0400]}鍵{color[ffff]}{[0001|ffff]}。
081	人的動作變成像是\n{color[0400]}{[0001|1d00]}從下方出拳{[0001|ffff]}{color[ffff]}的樣子。
081-01	不過……立方體並{color[0400]}{[0001|1d00]}沒有損壞{[0001|ffff]}{color[ffff]}。
082	這是因為……\n雖然拳頭看起來有接觸到立方體……\n但是白色框框{[0001|1d00]}{color[0400]}沒有接觸到{color[ffff]}{[0001|ffff]}立方體。
084	去程式設計畫面吧。
085	呵呵呵……\n……{[0201]}，\n你很想破壞物件吧……
086	就讓我來幫你實現……\n那滿溢而出的渴望吧……呵呵……
087	試著更改我的{[0001|1d00]}{color[0400]}連接面{color[ffff]}{[0001|ffff]}吧。
088	打開{[0001|1d00]}{color[0400]}破壞物件小節點{color[ffff]}{[0001|ffff]}的設定畫面。
089	打開{[0001|1d00]}連接面{[0001|ffff]}。
090	因為立方體在上方……\n所以我們要把{[0001|1d00]}{color[0400]}連接對象的連接面{color[ffff]}{[0001|ffff]}更改為{[0001|1d00]}{color[0400]}Y+{color[ffff]}{[0001|ffff]}，\n讓破壞物件小節點黏在{[0001|1d00]}{color[0400]}人的上方{color[ffff]}{[0001|ffff]}。
091	關閉這個畫面。
092	接著關閉這個畫面。
093	到遊戲畫面看看吧。
094	白色框框緊緊地\n黏在{[0001|1d00]}{color[0400]}人的上方{color[ffff]}{[0001|ffff]}。
095	在立方體的下方試著按下{[0001|1d00]}{color[0400]}鍵{color[ffff]}{[0001|ffff]}。
096	立方體損壞了。
097	這是因為破壞物件小節點\n現在{color[0400]}{[0001|1d00]}能接觸到{[0001|ffff]}{color[ffff]}立方體，\n立方體也就會{color[0400]}{[0001|1d00]}損壞{[0001|ffff]}{color[ffff]}了。
098	當你想要{color[0400]}{[0001|1d00]}透過人的動作\n來破壞物件{[0001|ffff]}{color[ffff]}時……
099	決定破壞物件小節點要\n{color[0400]}{[0001|1d00]}連接在哪一面{[0001|ffff]}{color[ffff]}就顯得非常重要。
100	如果確認好了，就到程式設計畫面去吧。
101	歡迎回來！
102	呵呵呵……{[0201]}，\n把我跟人的動作組合起來……
104	讓我破壞更多的東西……\n……直到永遠……呵呵。
Guidebook_RotateRigid.msbt
00.00.Alice	……你好，\n{[0201]}。
00.01.Alice	遊戲畫面上，\n有個立方體浮在空中。
00.02.Alice	{color[0400]}{[0001|1d00]}上下推動操控搖桿{[0001|ffff]}{color[ffff]}可以讓立方體動起來，\n試看看吧。
00.03.Alice	立方體向前後旋轉了。
00.04.Alice	這個立方體是{color[0400]}{[0001|1d00]}可轉動物件{[0001|ffff]}{color[ffff]}。
00.05.Alice	而這個{color[0400]}{[0001|1d00]}可轉動物件{[0001|ffff]}{color[ffff]}，\n就是我們這次要介紹的主角。
00.06.Alice	那麼，我們到程式設計畫面去吧。
01.00.Rotate	嚕啦啦～♪\n轉動就是我，我就是轉動。
01.01.Rotate	我的名字是{color[0400]}{[0001|1d00]}可轉動物件小節點{[0001|ffff]}{color[ffff]}。\n今後請你多多指教♪
01.02.Stick	轉轉～\n我會傳送操控搖桿的輸入\n給可轉動物件小節點喔～
01.03.Rotate	想要以輕快的舞步\n享受和舞伴的舞蹈，\n果然還是得要{[0001|1d00]}{color[0400]}無重力{color[ffff]}{[0001|ffff]}的{[0001|1d00]}材質{[0001|ffff]}設定啊～
01.04.Rotate	來吧，你也一起體驗看看♪\n這不受重力束縛，\n自由起舞的快樂！
01.05.Stick	轉轉～\n話說回來，{[0201]}，\n你找我們有事嗎～？
01.06.Rotate	哦？\n你想知道物件轉動的原理嗎？
01.06-01.Rotate	好！那就讓你見識一下\n我華～麗的教學身姿吧～♪
01.07.Stick	首先，我會把操控搖桿的上下動作\n傳遞給可轉動物件小節點的{color[0400]}{[0001|1d00]}X軸端口{[0001|ffff]}{color[ffff]}喔～
01.08.Rotate	{[0001|1d00]}{color[0400]}X軸{color[ffff]}{[0001|ffff]}指的就是\n像鐵棍一樣的{[0001|1d00]}{color[0400]}橫向軸{color[ffff]}{[0001|ffff]}喔。
01.09.Rotate	我會依照輸入到{[0001|1d00]}X軸端口{[0001|ffff]}的數值，\n以那根{color[0400]}{[0001|1d00]}鐵棍為軸心{[0001|ffff]}{color[ffff]}，\n骨碌碌地轉動♪
01.10.Stick	所以上下推動操控搖桿時，\n立方體就會{color[0400]}{[0001|1d00]}向前後{[0001|ffff]}{color[ffff]}轉動了喔～
01.11.Rotate	沒錯，隨著輸入的數值不同，\n可以改變{color[0400]}{[0001|1d00]}轉動方向{[0001|ffff]}{color[ffff]}和{color[0400]}{[0001|1d00]}轉動速度{[0001|ffff]}{color[ffff]}！
01.12.Stick	舉例來說……\n當你向上推動操控搖桿，\n讓我輸出{[0001|1d00]}{color[0400]}1.00{color[ffff]}{[0001|ffff]}這個數值時～
01.13.Rotate	我就會以{color[0400]}{[0001|1d00]}每秒1圈{[0001|ffff]}{color[ffff]}的速度，\n骨碌碌地{color[0400]}{[0001|1d00]}向前轉{[0001|ffff]}{color[ffff]}♪
01.14.Stick	相反地……\n當你稍微向下推動操控搖桿，\n讓我輸出{[0001|1d00]}{color[0400]}-0.50{color[ffff]}{[0001|ffff]}這個數值時～
01.15.Rotate	我就會翻身一轉！\n以{color[0400]}{[0001|1d00]}每秒半圈{[0001|ffff]}{color[ffff]}的速度，\n慢～慢～地{color[0400]}{[0001|1d00]}向後轉{[0001|ffff]}{color[ffff]}♪
01.21.Stick	那要是～\n數值輸入到其他輸入端的話，\n會怎樣旋轉呢～？
01.22.Alice	百聞不如一見，\n接下來就試著將訊號輸入{color[0400]}{[0001|1d00]}Y軸端口{[0001|ffff]}{color[ffff]}吧。
01.23.Alice	這次不要連接操控搖桿小節點，\n改成連接{color[0400]}{[0001|1d00]}常數小節點{[0001|ffff]}{color[ffff]}看看吧。
01.24.Stick	那麼下次見～
01.25.Constant	我是常數小節點。\n數值是4.00對吧，\n我知道了，4.00。
01.26.Rotate	這次的舞伴是\n常數小節點啊。\n那麼請把你的手給我吧♪
01.26-01	這個常數小節點\n會輸出{color[0400]}{[0001|1d00]}4.00{[0001|ffff]}{color[ffff]}……
01.28.Rotate	所以！\n立方體會以{[0001|1d00]}{color[0400]}Y軸{color[ffff]}{[0001|ffff]}為中心，\n以{[0001|1d00]}{color[0400]}每秒4圈的速度{color[ffff]}{[0001|ffff]}骨碌碌地轉動喔♪
01.29.Alice	去確認看看\n會怎樣旋轉吧。
02.00.Alice	立方體……\n正在以非常快的速度旋轉。
02.02.Alice	以Y軸為中心旋轉時，\n就會向這個方向轉動。
02.03.Alice	那麼，我們回到程式設計畫面去吧。
03.00.Rotate	嚕啦啦～\n優～雅的Y軸高速旋轉\n也難不倒我♪
03.04.Constant	{[0001|1d00]}{color[0400]}Y軸{color[ffff]}{[0001|ffff]}指的就是\n像鋼管舞的鋼管一樣的{color[0400]}{[0001|1d00]}縱向軸{[0001|ffff]}{color[ffff]}。
03.05.Rotate	沒錯，我就是以那根鋼管為軸心，\n骨碌碌地旋轉♪
03.08.Constant	那麼，剩下的{color[0400]}{[0001|1d00]}Z軸端口{[0001|ffff]}{color[ffff]}\n又是怎樣旋轉的呢？
03.09.Rotate	{[0001|1d00]}{color[0400]}Z軸{color[ffff]}{[0001|ffff]}是代表{[0001|1d00]}{color[0400]}前後方向的軸{color[ffff]}{[0001|ffff]}，\n所以會像時鐘的時針那樣轉動呢。
03.10.Alice	我們也來實際嘗試一下\nZ軸的旋轉方式吧。
03.11.Alice	這次試著連接\n{color[0400]}{[0001|1d00]}按鍵小節點{[0001|ffff]}{color[ffff]}。
03.12.Constant	偶爾跳個舞也挺開心的呢。\n再見囉。
03.13.Button	嗨！\n我會傳達鍵的情況喲！
03.14.Button	你想要測試\n可轉動物件小節點的Z軸轉動啊！？\n那就交給我吧！
03.19.Alice	我們趕緊去瞧瞧\n他是怎麼轉的吧。
04.00.Alice	試著按下{color[0400]}{[0001|1d00]}鍵{[0001|ffff]}{color[ffff]}。
04.01.Alice	立方體向{color[0400]}{[0001|1d00]}逆時針方向{[0001|ffff]}{color[ffff]}旋轉了。
04.02.Alice	了解旋轉方式後，\n就回程式設計畫面去吧。
05.01.Rotate	如何？
05.02.Rotate	當我的{[0001|1d00]}Z軸端口{[0001|ffff]}\n{color[0400]}{[0001|1d00]}接收到正的數值時，\n就會向逆時針方向旋轉{[0001|ffff]}{color[ffff]}。
05.03.Button	是這樣嗎！？\n我以為是因為按了鍵，\n所以才會向左邊轉喲！
05.04.Rotate	哈哈哈～♪\n很可惜，你猜錯囉。
05.06.Rotate	在跳舞的時候，\n{color[0400]}{[0001|1d00]}旋轉也是有規則的{[0001|ffff]}{color[ffff]}。
05.07.Alice	以X軸為軸心時，\n{color[0400]}{[0001|1d00]}從X-的方向看過去\n是逆時針{[0001|ffff]}{color[ffff]}旋轉……
05.07-01.Alice	以Y軸為軸心時，\n{color[0400]}{[0001|1d00]}從Y-的方向看過去\n也是逆時針{[0001|ffff]}{color[ffff]}旋轉……
05.08.Rotate	即使是向多個輸入端\n{[0001|1d00]}{color[0400]}同時輸入數值{color[ffff]}{[0001|ffff]}，\n這個規則也不會改變。
05.09.Button	等一下！\n可以同時以不同的軸心旋轉嗎！？
05.10.Rotate	哈哈哈，當然可以囉。
05.11.Alice	那麼，我們來實際嘗試一下\n以不同的軸心同時旋轉吧。
05.12.Alice	重新叫出一開始的\n操控搖桿小節點……
05.13.Stick	你好啊～{[0201]}。\n我們又見面了呢～
05.14.Rotate	很高興再見到你，\n操控搖桿小節點。
05.15.Rotate	這次的旋轉舞技有點難喔。\n不過別擔心，有我帶著你。\n讓我們一起挑戰這支舞吧♪
05.16.Stick	轉轉～\n請手下留情～
05.17.Alice	那麼，\n我們到遊戲畫面確認看看吧。
06.00.Alice	{color[0400]}{[0001|1d00]}上下推動操控搖桿{[0001|ffff]}{color[ffff]}會作出X軸轉動，\n按下{color[0400]}{[0001|1d00]}鍵{[0001|ffff]}{color[ffff]}會作出逆時針的Z軸轉動……\n試著同時作出兩種轉動吧。
06.02.Alice	多軸心的轉動混合在一起，\n就會變成這種複雜的動作。
06.03.Alice	順帶一提，\n如果想回到一開始的垂直狀態，\n只要按下重來就可以了。
06.04.Alice	如果覺得已經確認清楚了，\n就回到程式設計畫面吧。
07.00.Rotate	太～～～棒了！\n我這華麗的無重力舞蹈，\n你還滿意嗎？
07.01.Button	我已經搞不懂\n到底是怎麼轉的了！
07.02.Stick	好複雜啊～
07.03.Rotate	你們不用特意去理解\n我是如何做到\n這複雜的旋轉舞技……
07.04.Rotate	只需用心感受舞蹈之美，\n這樣就足夠了！
07.06.Alice	就像他的名字一樣，\n只要我們使用{color[0400]}{[0001|1a00]}可轉動物件小節點{[0001|ffff]}{color[ffff]}，\n就能把旋轉物件加入遊戲畫面中。
07.15.Rotate	無論何時，只要一聲呼喚，\n我都會前來成為你的舞伴，\n優～雅地帶著你翩翩起舞♪
07.16.Button	那就再見了！
Guidebook_Scroll.msbt
000	……你好，\n{[0201]}。
001	畫面邊緣的東西……\n好像只顯示了一半。
002	這是……{color[0400]}{[0001|1d00]}人{[0001|ffff]}{color[ffff]}嗎？
003	這次我們就試著讓{color[0400]}{[0001|1d00]}畫面邊緣的人{[0001|ffff]}{color[ffff]}\n完整地{color[0400]}{[0001|1d00]}顯示在畫面正中間{[0001|ffff]}{color[ffff]}吧。
004	那麼，到程式設計畫面去看看。
005	哦！\n這不是{[0201]}嗎～～？
006	{[0201]}！\n你好！
008	人在遊戲畫面上\n只顯示了一半，對吧～～～？
009	不行不行～～！\n要拍攝的話，\n就得完美地拍在中間才行～～！
009-01	所以……\n我{color[0400]}{[0001|1d00]}想要把遊戲畫面的\n拍攝範圍移動到旁邊去{[0001|ffff]}{color[ffff]}～～～！
009-02	其實呢……我有辦法可以在\n{color[0400]}{[0001|1d00]}不移動遊戲畫面小節點{[0001|ffff]}{color[ffff]}的情況下，\n把遊戲畫面的拍攝範圍移動到旁邊去喔！
009-03	給我的{color[0400]}{[0001|1d00]}X端口{[0001|ffff]}{color[ffff]}來個特寫吧！！
010	當有訊號輸入我的{color[0400]}{[0001|1d00]}X端口{[0001|ffff]}{color[ffff]}時，\n我就{color[0400]}{[0001|1d00]}可以依照輸入的數值，\n讓遊戲畫面向X方向移動{[0001|ffff]}{color[ffff]}！
011	那麼～～\n就讓{color[0400]}{[0001|1d00]}常數小節點{[0001|ffff]}{color[ffff]}登場吧～！
012	是的，\n我會幫忙移動遊戲畫面。
012-01	我會輸出{color[0400]}{[0001|1d00]}5.00{[0001|ffff]}{color[ffff]}喔。\n{color[0400]}{[0001|1d00]}5.00{[0001|ffff]}{color[ffff]}。
013	{[0201]}！\n把{[0001|1d00]}{color[0400]}常數小節點{color[ffff]}{[0001|ffff]}和\n我的{[0001|1d00]}{color[0400]}X端口{color[ffff]}{[0001|ffff]}連接在一起～～！
014	把常數小節點連接到\n遊戲畫面小節點的{color[0400]}{[0001|1d00]}X端口{[0001|ffff]}{color[ffff]}。
015	OK～！！\n這樣畫面上就會顯示\n{color[0400]}{[0001|1d00]}向X方向移動5.00m{[0001|ffff]}{color[ffff]}的地方！
017	如此一來，人應該就能\n完美地顯示在正中間了！！！
018	到遊戲畫面看看吧。
019	人被顯示在{color[0400]}{[0001|1d00]}畫面正中間{[0001|ffff]}{color[ffff]}。
020	這是因為遊戲畫面\n{color[0400]}{[0001|1d00]}向X方向移動了5.00m{[0001|ffff]}{color[ffff]}。
02100	……話說回來，\n右邊好像又拍到了些什麼……
022	……是幼鳥？
023	回程式設計畫面確認看看吧。
024	哎呀♥\n你注意到我了嗎？
025	把遊戲畫面移動到旁邊後，\n連幼鳥都被拍進去了呢♥
026	時尚物件小節點登場！\n這下畫面變得熱鬧起來了呢～！
027	我決定了！\n下個主角就決定是你！
028	看我用帥氣的拍攝手法，\n{color[0400]}{[0001|1d00]}讓幼鳥顯示在畫面正中間{[0001|ffff]}{color[ffff]}～～！
029	那麼～這次我們就請\n{color[0400]}{[0001|1d00]}操控搖桿小節點{[0001|ffff]}{color[ffff]}過來吧～！
030	轉轉～
031	只要把{color[0400]}{[0001|1d00]}操控搖桿小節點{[0001|ffff]}{color[ffff]}\n連接到我的{color[0400]}{[0001|1d00]}X端口{[0001|ffff]}{color[ffff]}……
032	{color[0400]}{[0001|1d00]}畫面{[0001|ffff]}{color[ffff]}就會隨著\n操控搖桿的動作{color[0400]}{[0001|1d00]}移動{[0001|ffff]}{color[ffff]}～！
033	把操控搖桿小節點連上配對線。
034	看一下遊戲畫面吧。
035	向右推動{color[0400]}{[0001|1d00]}操控搖桿{[0001|ffff]}{color[ffff]}。
036	隨著操控搖桿的動作，\n畫面也會向右移動。
037	不過……\n畫面只移動了一點點……
038	這樣的話看不見幼鳥呢。
039	回到程式設計畫面吧。
039-01	嗯嗯～～～\n好像有一點……\n不太順利呢～～
040	畢竟就算我們把操控搖桿向右推到底，\n操控搖桿小節點也{color[0400]}{[0001|1d00]}只能輸出到1.00{[0001|ffff]}{color[ffff]}啊～～
041	也就是說，\n畫面只會移動1.00m～～
042	這種時候……\n就要請{color[0400]}{[0001|1d00]}定位小節點{[0001|ffff]}{color[ffff]}出場囉～～！
043	哎呀……\n你叫我嗎～？
044	我叫做{color[0400]}{[0001|1d00]}定位小節點{[0001|ffff]}{color[ffff]}～
045	咦？……什麼什麼什麼？？
046	操控搖桿小節點和\n遊戲畫面小節點……\n兩人目不轉睛地盯著彼此……
047	好可疑喔……你們到底是什麼關係～～！？\n真是讓人臉紅心跳～！
048	……咦?\n你們之間什麼都沒有嗎？\n這樣啊……
050	定位小節點會幫忙\n{color[0400]}{[0001|1d00]}把輸入的數值\n轉換成其他數值{[0001|ffff]}{color[ffff]}喔！
052	來看看定位小節點的設定吧。
053	定位小節點有\n{color[0400]}{[0001|1d00]}輸出範圍{[0001|ffff]}{color[ffff]}和{color[0400]}{[0001|1d00]}輸入範圍{[0001|ffff]}{color[ffff]}\n這2種設定。
054	{[0001|1d00]}輸入範圍{[0001|ffff]}是\n{color[0400]}{[0001|1d00]}從0.00到1.00{[0001|ffff]}{color[ffff]}。
055	{[0001|1d00]}輸出範圍{[0001|ffff]}是\n{color[0400]}{[0001|1d00]}從0.00到10.00{[0001|ffff]}{color[ffff]}。
056	在目前的設定下……\n{[0001|1d00]}{color[0400]}從0.00到1.00的數值{color[ffff]}{[0001|ffff]}被輸入後，\n{[0001|1d00]}{color[0400]}會被轉換成0.00到10.00的數值{color[ffff]}{[0001|ffff]}。
057	例如……\n輸入{color[0400]}{[0001|1d00]}1.00{[0001|ffff]}{color[ffff]}時，會輸出{color[0400]}{[0001|1d00]}10.00{[0001|ffff]}{color[ffff]}。
058	輸入{color[0400]}{[0001|1d00]}0.50{[0001|ffff]}{color[ffff]}時，會輸出{color[0400]}{[0001|1d00]}5.00{[0001|ffff]}{color[ffff]}。
059	輸入{color[0400]}{[0001|1d00]}0.00{[0001|ffff]}{color[ffff]}時，一樣會輸出{color[0400]}{[0001|1d00]}0.00{[0001|ffff]}{color[ffff]}。
060	……就像這樣，\n以{[0001|1d00]}輸入範圍{[0001|ffff]}和{[0001|1d00]}輸出範圍{[0001|ffff]}為基礎，\n{color[0400]}{[0001|1d00]}轉換輸入的數值並輸出{[0001|ffff]}{color[ffff]}。
06100	那麼，關閉這個畫面。
062	選擇連接操控搖桿小節點和\n遊戲畫面小節點的配對線。
063	刪除。
064	然後，把{color[0400]}{[0001|1d00]}操控搖桿小節點{[0001|ffff]}{color[ffff]}\n連接到{color[0400]}{[0001|1d00]}定位小節點{[0001|ffff]}{color[ffff]}。
065	把{color[0400]}{[0001|1d00]}定位小節點{[0001|ffff]}{color[ffff]}的輸出\n連接到{color[0400]}{[0001|1d00]}遊戲畫面小節點的X端口{[0001|ffff]}{color[ffff]}。
066	這樣一來，當定位小節點\n接收到{color[0400]}{[0001|1d00]}從操控搖桿小節點\n輸出的0.00到1.00的數值{[0001|ffff]}{color[ffff]}時……
067	就會把他{color[0400]}{[0001|1d00]}轉換成0.00到10.00{[0001|ffff]}{color[ffff]}的數值，\n然後輸入到遊戲畫面小節點。
068	到遊戲畫面看看\n動作變得怎麼樣了吧。
069	向右推動{color[0400]}{[0001|1d00]}操控搖桿{[0001|ffff]}{color[ffff]}。
070	{color[0400]}{[0001|1d00]}移動幅度變得比剛才更大{[0001|ffff]}{color[ffff]}，\n現在能清楚地拍到幼鳥了。
071	因為{color[0400]}{[0001|1d00]}定位小節點{[0001|ffff]}{color[ffff]}把\n操控搖桿小節點輸出的\n{color[0400]}{[0001|1d00]}0.00到1.00的數值{[0001|ffff]}{color[ffff]}……
072	{color[0400]}{[0001|1d00]}轉換成0.00到10.00的數值{[0001|ffff]}{color[ffff]}，\n所以{color[0400]}{[0001|1d00]}移動幅度變大了{[0001|ffff]}{color[ffff]}。
073	話說回來……\n右邊好像還有什麼東西。
074	把他也拍進畫面裡吧。
076	不錯呢～～！\n這簡直就是操控搖桿小節點和\n定位小節點產生的化學反應啊！
07600	那麼，最後就讓你看看\n最令人感動的一幕吧～！
07601	迎向精彩大結局～\n更換角色～～！
07602	你好，{[0201]}，\n我是{color[0400]}{[0001|1d00]}計數器小節點{[0001|ffff]}{color[ffff]}。
07603	我連接著{color[0400]}{[0001|1d00]}常數小節點{[0001|ffff]}{color[ffff]}。
077	咦？什麼??\n計數器小節點……？
078	啊啊！連常數小節點也在！？\n我們三個排成一列連在一起……
079	這是段三角關係嗎～！？\n我的下場究竟會如何呢～～～！？
080	沒事、沒事。\n定位小節點，\n你冷靜一點。
081	因為常數小節點會持續\n輸入數值給計數器小節點……
081-01	所以計數器小節點的數值\n會以{color[0400]}{[0001|1d00]}每秒60次的速度{[0001|ffff]}{color[ffff]}逐漸增加。
082	而計數器小節點的輸出\n則會輸入到{color[0400]}{[0001|1d00]}定位小節點{[0001|ffff]}{color[ffff]}。
083	來看看定位小節點的設定吧。
084	{[0001|1d00]}輸入範圍{[0001|ffff]}是\n{color[0400]}{[0001|1d00]}從0.00到60.00{[0001|ffff]}{color[ffff]}。
084-01	說到{color[0400]}{[0001|1d00]}60.00{[0001|ffff]}{color[ffff]}……\n這個數字和計數器小節點\n{color[0400]}{[0001|1d00]}每秒計算出的數值{[0001|ffff]}{color[ffff]}一樣。
085	{[0001|1d00]}輸出範圍{[0001|ffff]}則是\n{color[0400]}{[0001|1d00]}從0.00到2.00{[0001|ffff]}{color[ffff]}。
086	在這個設定下，\n輸入{color[0400]}{[0001|1d00]}60.00{[0001|ffff]}{color[ffff]}時，會輸出{color[0400]}{[0001|1d00]}2.00{[0001|ffff]}{color[ffff]}。
087	輸入{color[0400]}{[0001|1d00]}30.00{[0001|ffff]}{color[ffff]}的話……\n會轉換成{color[0400]}{[0001|1d00]}1.00{[0001|ffff]}{color[ffff]}輸出。
088	剛剛是把數值變大，\n現在卻是{color[0400]}{[0001|1d00]}把數值變小{[0001|ffff]}{color[ffff]}。
088-01	而計數器小節點輸入的數值\n會以{color[0400]}{[0001|1d00]}每秒60.00的速度增加{[0001|ffff]}{color[ffff]}……
088-02	60.00會被轉換成2.00，\n也就是說……輸出的{color[0400]}{[0001|1d00]}數值\n會以每秒2.00的速度增加{[0001|ffff]}{color[ffff]}。
089	關閉設定。
089-01	把定位小節點連接到\n遊戲畫面小節點的{color[0400]}{[0001|1d00]}X端口{[0001|ffff]}{color[ffff]}。
090	那麼，當{color[0400]}{[0001|1d00]}每秒會增加2.00的數值{[0001|ffff]}{color[ffff]}\n被輸入到遊戲畫面小節點時……
091	遊戲畫面會變成怎樣呢？
092	畫面會{color[0400]}{[0001|1d00]}自動向右捲動{[0001|ffff]}{color[ffff]}。
093	因為我們使用了計數器小節點\n和定位小節點，讓輸入的{color[0400]}{[0001|1d00]}數值\n以每秒2.00的速度增加{[0001|ffff]}{color[ffff]}……
094	所以遊戲畫面會以\n{color[0400]}{[0001|1d00]}每秒2.00m{[0001|ffff]}{color[ffff]}的速度捲動。
095	好像……\n有很多物件呢……
096	回到程式設計畫面吧。
097	歡迎回來～～！！
098	嗯～～！很棒的演出！！\n有出場的小節點們\n肯定都會感動到哭吧！！
099	呵呵……\n{[0201]}也試著\n設計一下自動捲動的程式吧～～
100	謝謝你來看我們……
101	♥謝謝♥
Guidebook_Shot.msbt
000	……歡迎你。
002	畫面正中央可以看到\n{[0001|1d00]}{color[0400]}立方體{color[ffff]}{[0001|ffff]}正被不斷地{[0001|1d00]}{color[0400]}發射{color[ffff]}{[0001|ffff]}出去。
004	這次我要解說的就是\n像這樣{[0001|1d00]}{color[0400]}發射物件的原理{color[ffff]}{[0001|ffff]}。
005	那麼，我們去{[0001|1d00]}{color[0400]}程式設計畫面{color[ffff]}{[0001|ffff]}吧。
007	怎麼啦……？\n這不是{[0201]}嗎～？
008	找我有什麼事嗎～～？？
009	什麼……？\n你想了解{[0001|1d00]}{color[0400]}發射物件的原理{color[ffff]}{[0001|ffff]}～～～！？
010	真拿你沒辦法～\n既然{[0201]}都開口了，\n就讓我來教教你吧～
011	我的大名是\n{[0001|1d00]}{color[0400]}發射物件小節點{color[ffff]}{[0001|ffff]}～～～
012	我會從自己身處的位置\n{[0001|1d00]}{color[0400]}發射物件出去{color[ffff]}{[0001|ffff]}～～
013	你可以在我的設定畫面中更改\n{[0001|1d00]}{color[0400]}要發射什麼{color[ffff]}{[0001|ffff]}和{[0001|1d00]}{color[0400]}要怎樣發射{color[ffff]}{[0001|ffff]}！\n來！你試試看！
014	那麼，\n選擇{[0001|1d00]}{color[0400]}發射物件小節點{color[ffff]}{[0001|ffff]}。
015	打開設定畫面。
016	在這裡你可以更改\n{[0001|1d00]}{color[0400]}發射物件的形狀{color[ffff]}{[0001|ffff]}。
017	試著更改為{[0001|1d00]}{color[0400]}球體{color[ffff]}{[0001|ffff]}。
018	關閉設定畫面。
019	去遊戲畫面吧。
021	……現在變成\n會發射{[0001|1d00]}{color[0400]}球體{color[ffff]}{[0001|ffff]}了。
023	就像這樣，\n你可以在發射物件小節點的\n設定中更改{[0001|1d00]}{color[0400]}發射物件的形狀{color[ffff]}{[0001|ffff]}。
024	我們回{[0001|1d00]}{color[0400]}程式設計畫面{color[ffff]}{[0001|ffff]}吧。
025	你看到了嗎～～～？
026	{[0001|1d00]}{color[0400]}發射物件{color[ffff]}{[0001|ffff]}的形狀\n變了對吧～～？
027	那麼接下來……\n把發射方式也改一下吧～～！
028	譬如說……\n把{[0001|1d00]}{color[0400]}發射速度{color[ffff]}{[0001|ffff]}提高的話，\n就能咻咻咻地發射喔！
029	來試著更改一下\n{[0001|1d00]}{color[0400]}發射物件小節點{color[ffff]}{[0001|ffff]}的設定吧。
030	目前的{[0001|1d00]}{color[0400]}發射速度{color[ffff]}{[0001|ffff]}\n被設定為{[0001|1d00]}4.00{[0001|ffff]}。
031	試著將他設定為{[0001|1d00]}{color[0400]}12.00{color[ffff]}{[0001|ffff]}。
032	關閉設定畫面。
033	到遊戲畫面看看吧。
036	球體的發射速度變得很快。
038	除了{[0001|1d00]}{color[0400]}發射速度{color[ffff]}{[0001|ffff]}之外，\n還有其他可以更改發射方式的設定……
039	我們到{[0001|1d00]}{color[0400]}程式設計畫面{color[ffff]}{[0001|ffff]}\n去試看看吧。
040	打開{[0001|1d00]}{color[0400]}發射物件小節點{color[ffff]}{[0001|ffff]}的設定畫面。
041	這裡有一個叫{[0001|1d00]}{color[0400]}發射間距{color[ffff]}{[0001|ffff]}的設定。
042	這是指在發射一個物件之後，\n{[0001|1d00]}{color[0400]}距離下一次發射的時間間距{color[ffff]}{[0001|ffff]}。
101	目前被設定為{[0001|1d00]}{color[0400]}1.00{color[ffff]}{[0001|ffff]}，\n也就是說發射間距是{[0001|1d00]}{color[0400]}1秒{color[ffff]}{[0001|ffff]}。
043	那麼……把他更改為{[0001|1d00]}{color[0400]}0.10{color[ffff]}{[0001|ffff]}吧。
044	這樣發射間距就會變成{[0001|1d00]}{color[0400]}0.1秒{color[ffff]}{[0001|ffff]}。
045	關閉設定。
046	哦哦～～\n{[0201]}～～\n你把發射間距改為{[0001|1d00]}{color[0400]}0.1秒{color[ffff]}{[0001|ffff]}了嗎～～！？
047	這真有意思～～！\n看我華麗地大鬧一場！！！
049	我們來看看{[0001|1d00]}{color[0400]}遊戲畫面{color[ffff]}{[0001|ffff]}吧。
051	物件正不停地被發射出去。
052	嗯，這的確很華麗……
053	就像這樣……\n你可以透過{[0001|1d00]}{color[0400]}速度{color[ffff]}{[0001|ffff]}和{[0001|1d00]}{color[0400]}發射間距{color[ffff]}{[0001|ffff]}的設定，\n自由地更改發射方式。
055	回去{[0001|1d00]}{color[0400]}程式設計畫面{color[ffff]}{[0001|ffff]}吧。
059	怎麼樣！？\n看到那華麗的射擊了嗎……？\n我可是使盡了全力喔～～！！
060	我的其他設定還可以……\n更改{[0001|1d00]}{color[0400]}發射物件的方向{color[ffff]}{[0001|ffff]}喔～～
061	來試著更改設定吧。
062	這裡有一個叫{[0001|1d00]}{color[0400]}發射方向{color[ffff]}{[0001|ffff]}的設定。
063	目前被設定為{[0001|1d00]}{color[0400]}X+{color[ffff]}{[0001|ffff]}。
064	設定為{[0001|1d00]}{color[0400]}X+{color[ffff]}{[0001|ffff]}時，\n會{[0001|1d00]}{color[0400]}向右方發射{color[ffff]}{[0001|ffff]}物件……
065	我們試著更改為{[0001|1d00]}{color[0400]}Y+{color[ffff]}{[0001|ffff]}，\n讓物件{color[0400]}{[0001|1d00]}向上方{[0001|ffff]}{color[ffff]}發射。
067	關閉設定畫面。
068	來確認一下吧。
069	現在變成向{[0001|1d00]}{color[0400]}上{color[ffff]}{[0001|ffff]}發射了。
070	就像這樣，\n只要更改{[0001|1d00]}{color[0400]}發射方向{color[ffff]}{[0001|ffff]}……
071	就能把物件發射至\n{[0001|1d00]}{color[0400]}上下{color[ffff]}{[0001|ffff]}、{[0001|1d00]}{color[0400]}前後{color[ffff]}{[0001|ffff]}等各種方向。
072	那麼，我們回去{[0001|1d00]}{color[0400]}程式設計畫面{color[ffff]}{[0001|ffff]}吧。
073	你看到了嗎？\n……我把超大的煙火\n射到天空上囉～～～！
074	就像這樣，\n只要使用我就能{[0001|1d00]}{color[0400]}發射物件{color[ffff]}{[0001|ffff]}……
075	還能更改發射{[0001|1d00]}{color[0400]}物件的形狀{color[ffff]}{[0001|ffff]}、\n{[0001|1d00]}{color[0400]}發射速度{color[ffff]}{[0001|ffff]}、{[0001|1d00]}{color[0400]}發射間距{color[ffff]}{[0001|ffff]}還有{[0001|1d00]}{color[0400]}方向{color[ffff]}{[0001|ffff]}……
076	想改什麼都可以喔～
083	……哦哦～\n你怎麼啦～？\n居然擺出這種表情……
083-01	{[0001|1d00]}{color[0400]}「除了自動發射之外，能設計成\n按下按鍵時發射物件的程式嗎？」{color[ffff]}{[0001|ffff]}\n……你想說的話都寫在臉上了呢。
083-02	你可別小看我啊！\n這種事對我來說\n就是小菜一碟啊！！
083-03	把按鍵小節點給我帶過來！
084	那麼，我們把{[0001|1d00]}{color[0400]}按鍵小節點{color[ffff]}{[0001|ffff]}叫來吧。
087	嗨！\n你今天也很吵呢！發射物件小節點！
088	接下來……\n把按鍵小節點\n連接到我身上！
089	把{[0001|1d00]}{color[0400]}按鍵小節點{color[ffff]}{[0001|ffff]}的{[0001|1d00]}{color[0400]}輸出{color[ffff]}{[0001|ffff]}端\n連接到{[0001|1d00]}{color[0400]}發射物件小節點{color[ffff]}{[0001|ffff]}的{[0001|1d00]}{color[0400]}輸入{color[ffff]}{[0001|ffff]}端。
090	好！\n當{color[0400]}{[0001|1d00]}鍵{[0001|ffff]}{color[ffff]}被按下時，\n我就會向{[0001|1d00]}{color[0400]}發射物件小節點{color[ffff]}{[0001|ffff]}傳送{[0001|1d00]}{color[0400]}訊號{color[ffff]}喲{[0001|ffff]}！
091	我們去{[0001|1d00]}{color[0400]}遊戲畫面{color[ffff]}{[0001|ffff]}看看吧。
092	按下{[0001|1d00]}{color[0400]}鍵{color[ffff]}{[0001|ffff]}。
093	現在只要按下按鍵，\n物件就會發射出去。
093-01	就像這樣，只要把發射物件小節點\n連接到按鍵小節點，\n就能{color[0400]}{[0001|1d00]}用按鍵來發射物件{[0001|ffff]}{color[ffff]}了。
094	雖然連按按鍵\n就能{[0001|1d00]}{color[0400]}連續發射{color[ffff]}{[0001|ffff]}……
095	但你無法以快於{[0001|1d00]}{color[0400]}發射間距{color[ffff]}{[0001|ffff]}的時間\n連續發射物件，這點要注意一下。
096	我們回去{[0001|1d00]}{color[0400]}程式設計畫面{color[ffff]}{[0001|ffff]}吧。
097	嗨！\n你的手指很靈活嘛！
098	如何！？你看到了嗎！？\n這對我來說簡直是輕而易舉！
098-01	……好啦，這樣你應該\n徹～底了解我的厲害了吧？
099	所以！！\n我和{[0201]}\n從今天起就是好朋友啦！！！
100	想大鬧一場或想發射物件時～\n隨時都可以叫上我喔！
Guidebook_StickAndHuman.msbt
000	……你好。
001	現在遊戲畫面中可以看到一個{[0001|1d00]}{color[0400]}人{color[ffff]}{[0001|ffff]}。
002	試著用{[0001|1d00]}{color[0400]}操控搖桿{color[ffff]}{[0001|ffff]}\n讓他向{[0001|1d00]}{color[0400]}左右{color[ffff]}{[0001|ffff]}移動看看。
003	這次我要為你解說的就是\n{[0001|1d00]}{color[0400]}用操控搖桿讓人移動的程式{color[ffff]}{[0001|ffff]}。
004	那麼，我們去程式設計畫面吧。
005	啊～\n是{[0201]}～
006	你好！\n有什麼事嗎？
007	嗯嗯，\n你想了解{[0001|1d00]}{color[0400]}用操控搖桿\n移動人的原理{color[ffff]}{[0001|ffff]}是嗎！？
008	那麼～\n就由我們來教你吧～
009	首先從我開始說明吧。\n我是{[0001|1d00]}{color[0400]}操控搖桿小節點{color[ffff]}{[0001|ffff]}～
010	就跟字面的意思一樣～\n我會接收{[0001|1d00]}{color[0400]}Nintendo Switch控制器{color[ffff]}{[0001|ffff]}上\n{[0001|1d00]}{color[0400]}操控搖桿{color[ffff]}{[0001|ffff]}的輸入訊號……
011	然後透過{[0001|1d00]}{color[0400]}配對線{color[ffff]}{[0001|ffff]}把{[0001|1d00]}{color[0400]}操控搖桿的動作{color[ffff]}{[0001|ffff]}\n傳達給其他小節點～
012	訊號正傳到我這裡來喔！
013	我現在呢～正在傳達\n{[0001|1d00]}{color[0400]}操控搖桿的左右動作{color[ffff]}{[0001|ffff]}～
014	傳到我這裡來的訊號只有\n{[0001|1d00]}{color[0400]}操控搖桿的左右動作{color[ffff]}{[0001|ffff]}喔！
015	當然～\n不止是操控搖桿的左右動作，\n我還能傳達{[0001|1d00]}{color[0400]}操控搖桿{color[ffff]}{[0001|ffff]}或{[0001|1d00]}{color[0400]}上下{color[ffff]}{[0001|ffff]}的動作喔～
016	你可以在我的{[0001|1d00]}{color[0400]}設定畫面{color[ffff]}{[0001|ffff]}中\n更改要傳達{[0001|1d00]}{color[0400]}哪一個操控搖桿{color[ffff]}{[0001|ffff]}\n以及{[0001|1d00]}{color[0400]}哪一個方向的動作{color[ffff]}{[0001|ffff]}喔～
017	那麼，\n選擇{[0001|1d00]}{color[0400]}操控搖桿小節點{color[ffff]}{[0001|ffff]}吧。
018	打開{[0001|1d00]}{color[0400]}設定畫面{color[ffff]}{[0001|ffff]}。
019	在這個{[0001|1d00]}是哪個操控搖桿？{[0001|ffff]}中，\n你可以選擇要傳達{[0001|1d00]}{color[0400]}操控搖桿或\n操控搖桿{color[ffff]}{[0001|ffff]}的動作……
020	而在這個{[0001|1d00]}反應的方向{[0001|ffff]}中，\n你可以選擇要傳達\n{[0001|1d00]}{color[0400]}操控搖桿的哪個方向的動作{color[ffff]}{[0001|ffff]}。
021	試著選擇{[0001|1d00]}{color[0400]}是哪個操控搖桿？{color[ffff]}{[0001|ffff]}中的\n{[0001|1d00]}{color[0400]}R操控搖桿{color[ffff]}{[0001|ffff]}看看。
022	關閉設定畫面。
023	好了，到遊戲畫面裡\n確認看看會變成怎樣吧。
024	試著推動{[0001|1d00]}{color[0400]}操控搖桿{color[ffff]}{[0001|ffff]}看看。
025	你看，\n現在不是操控搖桿，\n而是{[0001|1d00]}{color[0400]}操控搖桿讓人移動了{color[ffff]}{[0001|ffff]}對吧？
026	就像這樣，\n只要{[0001|1d00]}{color[0400]}更改{color[ffff]}{[0001|ffff]}操控搖桿小節點的{[0001|1d00]}{color[0400]}設定{color[ffff]}{[0001|ffff]}，\n你就能{[0001|1d00]}{color[0400]}改變操控的方式{color[ffff]}{[0001|ffff]}。
027	那麼，\n我們去程式設計畫面吧。
028	怎麼樣～？
029	現在可以用{[0001|1d00]}{color[0400]}操控搖桿{color[ffff]}{[0001|ffff]}\n讓人移動了對吧～？
030	對了！\n我可以問一個問題嗎？
031	什麼問題～？
032	假如……\n操控搖桿小節點傳送的方向\n不是左右而是{[0001|1d00]}{color[0400]}上下{color[ffff]}{[0001|ffff]}的話會變成怎樣？
033	我有點好奇耶～！
034	這樣啊～
035	那我們就來試看看吧～
035000	……那麼，\n選擇操控搖桿小節點。
036	再次打開設定畫面。
037	選擇{[0001|1d00]}{color[0400]}反應的方向{color[ffff]}{[0001|ffff]}中的{[0001|1d00]}{color[0400]}上下{color[ffff]}{[0001|ffff]}。
038	關閉設定畫面。
039	這樣我就會把\n{[0001|1d00]}{color[0400]}操控搖桿{color[ffff]}{[0001|ffff]}的{[0001|1d00]}{color[0400]}上下動作{color[ffff]}{[0001|ffff]}\n傳達給人小節點了～
040	會變成怎麼樣呢～？
041	在遊戲畫面確認看看吧。
042	試著{[0001|1d00]}{color[0400]}上下推動操控搖桿{color[ffff]}{[0001|ffff]}看看。
043	……當我們{[0001|1d00]}{color[0400]}上下{color[ffff]}{[0001|ffff]}推動操控搖桿時，\n人卻會向{[0001|1d00]}{color[0400]}左右{color[ffff]}{[0001|ffff]}移動……
044	你覺得這是為什麼呢？
045	去程式設計畫面裡想想看吧。
046	怎麼樣～？
047	當你{[0001|1d00]}{color[0400]}上下推動操控搖桿{color[ffff]}{[0001|ffff]}時……\n{[0001|1d00]}{color[0400]}人會向左右{color[ffff]}{[0001|ffff]}移動對吧～？
048	咦？這也太奇怪了吧！？\n明明是上下推動操控搖桿，\n怎麼會變成左右移動了啊？
049	……啊！\n是這樣啊，我懂了！
050	這是因為操控搖桿小節點的\n訊號是輸入到我的{[0001|1d00]}{color[0400]}左右端口{color[ffff]}{[0001|ffff]}！
051	沒錯。
052	現在，操控搖桿的動作是\n傳達到人小節點的{[0001|1d00]}{color[0400]}左右端口{color[ffff]}{[0001|ffff]}。
053	而人小節點的{[0001|1d00]}{color[0400]}左右端口{color[ffff]}{[0001|ffff]}\n是一個會依照輸入訊號\n{[0001|1d00]}{color[0400]}讓人向左右移動{color[ffff]}{[0001|ffff]}的端口。
054	所以……\n不管操控搖桿小節點\n傳達哪一個方向的動作……
055	一旦輸入到人小節點的{[0001|1d00]}{color[0400]}左右端口{color[ffff]}{[0001|ffff]}，\n就只能讓人小節點{[0001|1d00]}{color[0400]}向左右移動{color[ffff]}{[0001|ffff]}。
056	原來如此！
057	也就是說，\n把操控搖桿小節點設定為{[0001|1d00]}{color[0400]}上下{color[ffff]}{[0001|ffff]}方向\n並連接到我的{[0001|1d00]}{color[0400]}左右端口{color[ffff]}{[0001|ffff]}的話……
058	當我們{[0001|1d00]}{color[0400]}上下推動操控搖桿{color[ffff]}{[0001|ffff]}時，\n{[0001|1d00]}{color[0400]}人就會向左右移動{color[ffff]}{[0001|ffff]}對吧！
059	那要是我們不用左右端口，\n而是連接到{[0001|1d00]}{color[0400]}前後端口{color[ffff]}{[0001|ffff]}的話，\n又會變成怎樣呢？
060	選擇這條{[0001|1d00]}{color[0400]}配對線{color[ffff]}{[0001|ffff]}。
061	按下這個按鍵來{[0001|1d00]}{color[0400]}刪除{color[ffff]}{[0001|ffff]}。
062	這次我們換成把\n{[0001|1d00]}{color[0400]}操控搖桿小節點{color[ffff]}{[0001|ffff]}連接到\n{[0001|1d00]}{color[0400]}人小節點的前後端口{color[ffff]}{[0001|ffff]}。
063	到遊戲畫面確認吧。
064	試著{[0001|1d00]}{color[0400]}上下{color[ffff]}{[0001|ffff]}推動{[0001|1d00]}{color[0400]}操控搖桿{color[ffff]}{[0001|ffff]}看看。
065	現在人會向{[0001|1d00]}{color[0400]}前後{color[ffff]}{[0001|ffff]}移動了對吧？
066	人小節點的{[0001|1d00]}{color[0400]}前後端口{color[ffff]}{[0001|ffff]}的作用，\n就是像這樣{[0001|1d00]}{color[0400]}讓人向前後移動{color[ffff]}{[0001|ffff]}。
067	那麼，我們到程式設計畫面去吧。
068	怎麼樣～？
069	只要設定好我的\n操控搖桿方向～
070	然後連接到我的\n左右端口或前後端口……
071	就能設計出各種\n千變萬化的操控方式！
074	嘿嘿嘿！\n我們是設計遊戲程式的最佳搭檔！
075	可別忘記我們喔～
Guidebook_ThirdPersonCamera.msbt
002	……{[0201]}，\n你好。
003	看來{color[0400]}{[0001|1d00]}相撲{[0001|ffff]}{color[ffff]}比賽正要開始呢。
004	不過……從正上方觀看，\n感覺實在沒什麼臨場感。
005	這種時候……\n只要移動{color[0400]}{[0001|1d00]}照相機{[0001|ffff]}{color[ffff]}就行了。
007	我們馬上到程式設計畫面\n移動照相機吧。
008	哦～！\n{[0201]}～！\n辛苦你了阿囉哈！
009	什麼什麼～？\n你想把{color[0400]}{[0001|1d00]}照相機{[0001|ffff]}{color[ffff]}調到最佳角度～？
010	別看我長得這樣，\n我也算是個照相機喔！\n這事就交給我來辦吧！
011	……話雖如此～\n其實我有一～點點不太擅長\n拍攝有躍動感的角度～
014	畢竟我只是把{[0001|1d00]}{color[0400]}圍住的範圍\n顯示到畫面上{color[ffff]}{[0001|ffff]}嘛～
019	不過沒問題！\n我會另外介紹一位\n厲害的攝影師給你！
020	他就是……\n{[0001|1d00]}{color[0400]}照相機小節點{color[ffff]}{[0001|ffff]}前輩！
026	所以前輩～～！\n之後就交給你了～～！！
027	……包在我身上。
028	我是{color[0400]}{[0001|1d00]}照相機小節點{[0001|ffff]}{color[ffff]}。
087	遊戲畫面給人的印象，\n會因為拍攝角度的不同產生極大的變化。
091	在最佳的位置，用最佳的角度\n拍下對象的身影……這就是我的工作。
091-01	照相機小節點\n和遊戲畫面小節點不同……
091-02	他是從自己所在的{color[0400]}{[0001|1d00]}位置{[0001|ffff]}{color[ffff]}，\n朝面向的{[0001|1d00]}{color[0400]}方向{color[ffff]}{[0001|ffff]}拍攝遊戲畫面。
091-03	所以照相機小節點本身的\n位置和方向都十分重要。
029	那麼，我們來觀摩一下\n照相機小節點的工作吧。
030	拍攝對象是……相撲嗎……？
031	嗯……那就讓我來拍出\n一個震撼力十足的畫面吧。
032	……首先就從{[0001|1d00]}{color[0400]}正面\n{color[ffff]}{[0001|ffff]}拍攝相撲台看看吧。
033	把照相機小節點\n移動到相撲台的正面。
034	……這位置不錯。
035	換好照相機的位置後，\n馬上{[0001|1d00]}{color[0400]}到遊戲畫面確認{color[ffff]}{[0001|ffff]}吧。
036	到遊戲畫面去確認吧。
038	照相機的角度變成了\n{[0001|1d00]}{color[0400]}從正面看過去的畫面{color[ffff]}{[0001|ffff]}。
039	雖然能清楚地看到相撲台……\n但還是不夠有震撼力。
040	回到程式設計畫面吧。
041	靠近拍攝對象，\n就能放大他在畫面中顯示的比例，\n拍出有震撼力的畫面……
042	再接近一點看看吧。
043	移動照相機小節點。
088	……這個位置如何？
044	到遊戲畫面確認看看吧。
045	畫面變得有震撼力了呢。
046	原來把照相機{color[0400]}{[0001|1d00]}靠近{[0001|ffff]}{color[ffff]}物件，\n就能{color[0400]}{[0001|1d00]}放大{[0001|ffff]}{color[ffff]}他在畫面中的比例呢。
047	物件和照相機之間的距離很不錯。
048	我們再多嘗試一些\n其他的角度吧。
049	回到程式設計畫面。
050	嗯……這次我們試看看\n{[0001|1d00]}{color[0400]}從後面{color[ffff]}{[0001|ffff]}拍攝相撲選手吧。
051	把照相機小節點\n移動到相撲選手後面。
052	決定好照相機的位置後……
053	接著就是{[0001|1d00]}{color[0400]}調整照相機的拍攝方向{color[ffff]}{[0001|ffff]}。
054	別忘了把照相機\n朝向拍攝對象喔。
055	把照相機小節點的方向\n調向相撲選手那面。
056	好，這樣如何？
057	來確認一下遊戲畫面吧。
058	現在變成從斜後方\n拍攝相撲選手的角度了。
060	就像這樣，你可以透過更改\n照相機小節點的位置和方向，\n改變他的拍攝角度。
061	不過……\n這個角度就看不到\n相撲選手的髮髻了。
062	髮髻可是很重要的。\n我們先回到程式設計畫面。
063	……嗯。\n髮髻的確很重要。
064	試著把照相機的{color[0400]}{[0001|1d00]}位置調高{[0001|ffff]}{color[ffff]}，\n從更高一點的地方拍攝吧。
065	要更改照相機的高度時，\n使用{color[0400]}{[0001|1d00]}橫向視角{[0001|ffff]}{color[ffff]}比較好喔。
066	切換{color[0400]}{[0001|1d00]}視角{[0001|ffff]}{color[ffff]}。
068	把照相機小節點\n移動到{color[0400]}{[0001|1d00]}上方{[0001|ffff]}{color[ffff]}。
069	另外也要調整照相機的拍攝{color[0400]}{[0001|1d00]}方向{[0001|ffff]}{color[ffff]}。
070	{color[0400]}{[0001|1d00]}朝下方30°{[0001|ffff]}{color[ffff]}就可以了吧。
070-01	在設定中更改{[0001|1d00]}{color[0400]}X軸轉動{color[ffff]}{[0001|ffff]}，\n就可以讓照相機向下轉動了。
072	打開設定。
073	把{[0001|1d00]}X軸轉動{[0001|ffff]}設定為{color[0400]}30.00°{color[ffff]}。
074	關閉設定。
075	好，這樣如何？
076	我們來看看會變成怎樣吧。
077	充滿臨場感的高角度！
079	現在變成{[0001|1d00]}{color[0400]}從上往下的角度{color[ffff]}{[0001|ffff]}，\n髮髻也被完整地拍進來了。
080	我們回去程式設計畫面吧。
081	……很好！\n這角度真是不錯啊。
083	只要使用照相機小節點，\n就能自由自在地調整角度。
084	……如果你想拍下美麗的畫面，\n就得多試試不同的{color[0400]}{[0001|1d00]}位置{[0001|ffff]}{color[ffff]}和{[0001|1d00]}{color[0400]}方向{color[ffff]}{[0001|ffff]}。
085	而其中的訣竅……\n就是要隨時確認遊戲畫面。
085-01	你可要好好記住喔。
086	……我們差不多\n可以開始比賽了吧♥
092	預備……開始！
Guidebook_UFO.msbt
000	……你好。
001	……有看到畫面中飄浮的物件嗎？
002	這就是{[0001|1d00]}{color[0400]}UFO{color[ffff]}{[0001|ffff]}。
003	試著用{[0001|1d00]}{color[0400]}操控搖桿{color[ffff]}{[0001|ffff]}\n左右移動UFO看看。
103	UFO輕飄飄地移動了。
004	這次我要介紹的就是{[0001|1d00]}{color[0400]}UFO{color[ffff]}{[0001|ffff]}。
005	去程式設計畫面吧。
006	{[0201]}，\n等你好久囉～～
009	剛剛我正想著要如何\n讓你多了解我一些呢～～
010	不愧是～程式設計師～\n來的時機也抓得這麼準～～
011	那麼～～\n{[0201]}～～\n就讓我來告訴你{[0001|1d00]}{color[0400]}UFO{color[ffff]}{[0001|ffff]}的事情吧～～
012	說到UFO～～\n就是要輕～～飄飄地浮在空中，\n這樣才算得上是UFO嘛～～
013	舉例來說的話～～\n{[0001|1d00]}{color[0400]}人或物件{color[ffff]}一般{[0001|ffff]}都會\n從空中{[0001|1d00]}{color[0400]}掉落到地面{color[ffff]}{[0001|ffff]}對吧～？
014	但UFO不僅不會掉落，\n還會{color[0400]}{[0001|1d00]}一直飄浮{[0001|ffff]}{color[ffff]}在空中喔～～
014-01	感覺就是\n輕飄飄又樂陶陶～～
028	另外啊～～
029	UFO之所以{[0001|1d00]}{color[0400]}能用操控搖桿{color[ffff]}{[0001|ffff]}\n輕～飄飄地{[0001|1d00]}{color[0400]}左右移動{color[ffff]}{[0001|ffff]}～
030	是因為我連接著\n{[0001|1d00]}{color[0400]}操控搖桿小節點{color[ffff]}{[0001|ffff]}～
031	轉轉～
032	{[0001|1d00]}{color[0400]}UFO小節點{color[ffff]}{[0001|ffff]}身上有\n{[0001|1d00]}{color[0400]}3個輸入端{color[ffff]}{[0001|ffff]}～
033	由上往下分別是\n{[0001|1d00]}{color[0400]}前後{color[ffff]}{[0001|ffff]}、{[0001|1d00]}{color[0400]}左右{color[ffff]}{[0001|ffff]}和{[0001|1d00]}{color[0400]}上下{color[ffff]}{[0001|ffff]}端口～
034	我現在正把{[0001|1d00]}{color[0400]}操控搖桿{color[ffff]}{[0001|ffff]}的{[0001|1d00]}{color[0400]}左右動作{color[ffff]}{[0001|ffff]}～\n傳達到他的{[0001|1d00]}{color[0400]}左右端口{color[ffff]}{[0001|ffff]}～
035	所以當你推動{[0001|1d00]}{color[0400]}操控搖桿{color[ffff]}{[0001|ffff]}時，\n就能讓{[0001|1d00]}{color[0400]}UFO{color[ffff]}{[0001|ffff]}向{[0001|1d00]}{color[0400]}左右移動{color[ffff]}{[0001|ffff]}了喔～～
036	沒錯，就是這樣～
037	{[0201]}，\n除了{[0001|1d00]}{color[0400]}左右{color[ffff]}{[0001|ffff]}移動之外～\n你要不要也試著讓UFO{[0001|1d00]}{color[0400]}上下{color[ffff]}{[0001|ffff]}移動啊～？
038	只要叫出{[0001|1d00]}{color[0400]}傳達上下動作的\n操控搖桿小節點{color[ffff]}{[0001|ffff]}～
039	再把他連接到{[0001|1d00]}{color[0400]}UFO小節點{color[ffff]}{[0001|ffff]}的{[0001|1d00]}{color[0400]}上下端口{color[ffff]}{[0001|ffff]}，\n就能讓UFO上下移動了喔～
040	那麼……\n我們把傳達{[0001|1d00]}{color[0400]}上下{color[ffff]}{[0001|ffff]}動作的\n{color[0400]}{[0001|1d00]}操控搖桿小節點{[0001|ffff]}{color[ffff]}叫出來吧。
045-01	我會傳達操控搖桿的\n上下動作喔～轉轉～
046	把他連接到UFO小節點的{[0001|1d00]}{color[0400]}上下端口{color[ffff]}{[0001|ffff]}。
047	這樣我們就會傳達\n{[0001|1d00]}{color[0400]}操控搖桿{color[ffff]}{[0001|ffff]}的{[0001|1d00]}{color[0400]}左右{color[ffff]}{[0001|ffff]}動作～
048	還有{[0001|1d00]}{color[0400]}上下{color[ffff]}{[0001|ffff]}動作喔～
049	去看看遊戲畫面吧。
050	試著隨意推動{[0001|1d00]}{color[0400]}操控搖桿{color[ffff]}{[0001|ffff]}看看。
051	現在可以{[0001|1d00]}{color[0400]}上下左右移動{color[ffff]}{[0001|ffff]}了。
052	只要連接{[0001|1d00]}{color[0400]}上下端口{color[ffff]}{[0001|ffff]}，\n就能像這樣讓UFO上下移動。
054	去程式設計畫面吧。
055	那麼～\n接下來～～～
056	試著讓UFO向其他方向移動吧～
057	你可以試著把傳達\n{[0001|1d00]}{color[0400]}上下動作的操控搖桿{color[ffff]}{[0001|ffff]}配對線～\n改為連接到UFO的{[0001|1d00]}{color[0400]}前後端口{color[ffff]}{[0001|ffff]}～
058	選擇連接著{[0001|1d00]}{color[0400]}上下端口{color[ffff]}{[0001|ffff]}的{[0001|1d00]}{color[0400]}配對線{color[ffff]}{[0001|ffff]}。
059	刪除。
060	重新連接到UFO小節點的{[0001|1d00]}{color[0400]}前後端口{color[ffff]}{[0001|ffff]}。
061	UFO的動作會變成什麼樣子呢？
062	用{[0001|1d00]}{color[0400]}操控搖桿{color[ffff]}{[0001|ffff]}來移動吧。
063	現在可以{[0001|1d00]}{color[0400]}前後左右移動{color[ffff]}{[0001|ffff]}了。
064	UFO可以向前後、左右和上下\n共{[0001|1d00]}{color[0400]}三種方向{color[ffff]}{[0001|ffff]}移動……
065	你可以配合要設計的遊戲，\n使用不同移動方向的端口。
066	回去程式設計畫面吧。
067	對了，\n{[0201]}～
068	你想讓UFO以多快的速度移動呢～～？
069	像是咻咻咻～地{[0001|1d00]}{color[0400]}快速移動{color[ffff]}{[0001|ffff]}～\n或是慢～吞吞地{[0001|1d00]}{color[0400]}緩慢移動{color[ffff]}{[0001|ffff]}～
070	UFO有很多種速度～～
071	你可以在我的設定中\n{[0001|1d00]}{color[0400]}更改速度{color[ffff]}{[0001|ffff]}喔～
072	打開{[0001|1d00]}{color[0400]}UFO小節點{color[ffff]}{[0001|ffff]}的設定。
073	在這個{[0001|1d00]}{color[0400]}水平速度{color[ffff]}{[0001|ffff]}中，\n你可以更改UFO向\n{[0001|1d00]}{color[0400]}水平方向移動的速度{color[ffff]}{[0001|ffff]}……
074	而{[0001|1d00]}{color[0400]}垂直速度{color[ffff]}{[0001|ffff]}則可以更改\n{[0001|1d00]}{color[0400]}上下方向移動的速度{color[ffff]}{[0001|ffff]}。
075	試著把{[0001|1d00]}{color[0400]}水平速度{color[ffff]}{[0001|ffff]}\n更改為{[0001|1d00]}{color[0400]}2.00{color[ffff]}{[0001|ffff]}吧。
076	關閉。
077	我們來看看UFO移動得有多快吧。
078	試著移動UFO。
079	速度變得比剛才更快了。
080	不止是{[0001|1d00]}{color[0400]}左右{color[ffff]}{[0001|ffff]}移動，\n連{[0001|1d00]}{color[0400]}前後移動{color[ffff]}{[0001|ffff]}的速度也變快了。
081	這表示更改{[0001|1d00]}{color[0400]}水平速度{color[ffff]}{[0001|ffff]}後，\n會同時影響{[0001|1d00]}{color[0400]}前後左右移動的速度{color[ffff]}{[0001|ffff]}。
082	確認好了就回去程式設計畫面吧。
083	既然都更改{[0001|1d00]}{color[0400]}水平速度{color[ffff]}{[0001|ffff]}了～
084	你一定也想改一下\n{[0001|1d00]}{color[0400]}垂直速度{color[ffff]}{[0001|ffff]}對吧～～\n咻～～～！
085	這次試著把移動速度{[0001|1d00]}{color[0400]}變慢{color[ffff]}{[0001|ffff]}吧。
086	把{color[0400]}{[0001|1d00]}垂直速度{[0001|ffff]}{color[ffff]}設定為{[0001|1d00]}{color[0400]}0.30{color[ffff]}{[0001|ffff]}。
087	關閉設定。
088	接著，把UFO從前後移動\n更改為上下移動吧。
089	選擇連接著{[0001|1d00]}{color[0400]}前後端口{color[ffff]}{[0001|ffff]}的{[0001|1d00]}{color[0400]}配對線{color[ffff]}{[0001|ffff]}。
090	刪除。
091	重新連接到{[0001|1d00]}{color[0400]}上下端口{color[ffff]}{[0001|ffff]}。
092	如此一來，\nUFO又能{[0001|1d00]}{color[0400]}上下左右移動{color[ffff]}{[0001|ffff]}了。
093	他的動作會變成怎樣呢？
094	試著用{[0001|1d00]}{color[0400]}操控搖桿{color[ffff]}{[0001|ffff]}\n{[0001|1d00]}{color[0400]}上下{color[ffff]}{[0001|ffff]}移動UFO。
095	由於我們把{[0001|1d00]}{color[0400]}垂直速度{color[ffff]}{[0001|ffff]}調低了，\nUFO的{color[0400]}{[0001|1d00]}上下移動速度{[0001|ffff]}{color[ffff]}也就變得{color[0400]}{[0001|1d00]}緩慢{[0001|ffff]}{color[ffff]}了。
097	就像這樣，你可以自由地\n設定自己想要的UFO速度。
098	回到程式設計畫面吧。
099	你回來了～～
100	我非常期待～\n看到你用輕飄飄\n又樂陶陶的UFO～～
101	製作出超好玩的遊戲喔～～
102	那麼，下次再見囉～
Guidebook_ViewChange.msbt
BU_001	你好。
BU_002	{[0201]}，\n你有聽過{[0001|1d00]}{color[0400]}視角{color[ffff]}{[0001|ffff]}這個詞嗎？
BU_003	所謂的視角是指\n{[0001|1d00]}{color[0400]}觀看{color[ffff]}{[0001|ffff]}遊戲空間的{[0001|1d00]}{color[0400]}方向{color[ffff]}{[0001|ffff]}。
BU_003_01	現在的遊戲畫面就是{[0001|1d00]}{color[0400]}橫向視角{color[ffff]}{[0001|ffff]}。
BU_003_03	我們可以看到正中央的蘋果……\n還有他背後的澄藍天空。
BU_003_04	所謂的橫向視角……\n就是指{[0001|1d00]}{color[0400]}橫著觀看遊戲空間{color[ffff]}{[0001|ffff]}。
BU_003_05	不過……有時我們也需要設計\n{[0001|1d00]}{color[0400]}從上往下觀看遊戲空間{color[ffff]}{[0001|ffff]}的遊戲。
BU_003_06	此時就需要用到{[0001|1d00]}{color[0400]}切換視角{color[ffff]}{[0001|ffff]}。
BU_004	而所謂的{[0001|1d00]}{color[0400]}切換視角{color[ffff]}{[0001|ffff]}，\n就是指更改觀看遊戲空間的方向。
BU_005	這次我會透過這顆蘋果，\n為你解說切換視角的基礎知識。
BU_015	來，我們到程式設計畫面去吧。
BU_016	哎呀，{[0201]}，\n你好♥
BU_017	紅通通的蘋果……真漂亮！
BU_018	圓滾滾的線條配上\n誘人的紅色……簡直是絕妙♥
BU_019	視角分為2種。
BU_020	像現在這樣……\n橫著觀看遊戲空間的是{[0001|1d00]}{color[0400]}橫向視角{color[ffff]}{[0001|ffff]}。
BU_021	而另外一種視角……\n從上往下觀看遊戲空間的是{[0001|1d00]}{color[0400]}俯瞰視角{color[ffff]}{[0001|ffff]}。
BU_022	你可以在程式設計畫面中\n自由地切換這2種視角。
BU_023	想要切換視角時……
BU_024	只要按下這個{[0001|1d00]}{color[0400]}切換視角鍵{color[ffff]}{[0001|ffff]}就可以了。
BU_025	{[0201]}，\n試著按下{[0001|1d00]}{color[0400]}切換視角鍵{color[ffff]}{[0001|ffff]}看看吧。
BU_028	這樣一來，\n就從{[0001|1d00]}{color[0400]}橫向視角{color[ffff]}{[0001|ffff]}切換為{[0001|1d00]}{color[0400]}俯瞰視角{color[ffff]}{[0001|ffff]}了。
BU_030	我們來確認一下\n變成俯瞰視角的遊戲畫面吧。
BU_031	現在可以清楚地看見蘋果的葉子。
BU_036	遊戲畫面變成{[0001|1d00]}{color[0400]}俯瞰視角{color[ffff]}{[0001|ffff]}了呢。
BU_037	那麼，回到程式設計畫面。
BU_038	閃閃發亮的綠葉真是可愛……
BU_039	發現了蘋果的新一面♥
BU_041	那麼，\n我們把{[0001|1d00]}{color[0400]}俯瞰視角{color[ffff]}{[0001|ffff]}切換回{[0001|1d00]}{color[0400]}橫向視角{color[ffff]}{[0001|ffff]}吧。
BU_042	想要切換視角時……
BU_043	就按下這個{[0001|1d00]}{color[0400]}切換視角鍵{color[ffff]}{[0001|ffff]}。
BU_046	從俯瞰視角\n切換為{[0001|1d00]}{color[0400]}橫向視角{color[ffff]}{[0001|ffff]}了。
BU_048	我們再來看一次變成\n橫向視角的遊戲畫面吧。
BU_049	觀看遊戲畫面的方式恢復原狀了。
BU_052	像這樣切換視角，\n就能{color[0400]}{[0001|1d00]}更改觀看遊戲空間的方向{[0001|ffff]}{color[ffff]}。
BU_053	這個遊戲空間共有3個方向，\n每個方向都有自己的名字。
BU_056	左右的方向稱為{[0001|1d00]}{color[0400]}X方向{color[ffff]}{[0001|ffff]}。
BU_057	上下的方向稱為{[0001|1d00]}{color[0400]}Y方向{color[ffff]}{[0001|ffff]}。
BU_058	前後的方向稱為{[0001|1d00]}{color[0400]}Z方向{color[ffff]}{[0001|ffff]}。
BU_059	而擁有{[0001|1d00]}{color[0400]}3個方向{color[ffff]}{[0001|ffff]}的遊戲空間……
BU_060	也被稱為{[0001|1d00]}{color[0400]}3D空間{color[ffff]}{[0001|ffff]}喔。
BU_061	試著在程式設計畫面中\n移動小節點並確認變化吧。
BU_062	現在程式設計畫面是橫向視角。
BU_063	{[0001|1d00]}{color[0400]}橫軸是X軸{color[ffff]}{[0001|ffff]}……
BU_064	{[0001|1d00]}{color[0400]}縱軸是Y軸{color[ffff]}{[0001|ffff]}。
BU_065	試著把時尚物件小節點\n移動到程式設計畫面上方……\n也就是{[0001|1d00]}{color[0400]}Y方向{color[ffff]}{[0001|ffff]}看看。
BU_066	即使向Y方向移動，\n蘋果的魅力依然不減……♥
BU_067	小節點向Y方向移動後，\n遊戲畫面會變成怎樣呢？
BU_068	到遊戲畫面中確認看看吧。
BU_069	蘋果的位置變得比剛才更高了呢。
BU_070	這就表示在程式設計畫面中，\n當小節點向{[0001|1d00]}{color[0400]}Y方向{color[ffff]}{[0001|ffff]}移動時……
BU_071	蘋果就會移動到比剛才更{[0001|1d00]}{color[0400]}高{color[ffff]}{[0001|ffff]}的位置。
BU_073	回到程式設計畫面。
BU_074	把時尚物件小節點\n移動回原本的位置。
BU_075	雖然浮在空中的蘋果也不錯……\n但立於大地的蘋果也好、讚、喔♥
BU_076	接下來試著以{[0001|1d00]}{color[0400]}俯瞰視角{color[ffff]}{[0001|ffff]}\n移動小節點看看吧。
BU_077	切換視角。
BU_079	去看看俯瞰視角的遊戲畫面吧。
BU_080	變成俯瞰視角後，\n觀看方向也不一樣了。
BU_081	雖然遊戲畫面的{[0001|1d00]}{color[0400]}左右方向{color[ffff]}{[0001|ffff]}\n還是原本的{[0001|1d00]}{color[0400]}X方向{color[ffff]}{[0001|ffff]}……
BU_082	但畫面的{[0001|1d00]}{color[0400]}上下方向{color[ffff]}{[0001|ffff]}卻變成了{[0001|1d00]}{color[0400]}Z方向{color[ffff]}{[0001|ffff]}……
BU_083	也就是{[0001|1d00]}{color[0400]}前後方向{color[ffff]}{[0001|ffff]}。
BU_084	回到程式設計畫面。
BU_085	切換為{[0001|1d00]}{color[0400]}俯瞰視角{color[ffff]}{[0001|ffff]}時，\n程式設計畫面的{[0001|1d00]}{color[0400]}軸線方向{color[ffff]}{[0001|ffff]}也會跟著改變。
BU_086	雖然{[0001|1d00]}{color[0400]}橫軸{color[ffff]}{[0001|ffff]}一樣是{[0001|1d00]}{color[0400]}X軸{color[ffff]}{[0001|ffff]}……
BU_087	但{[0001|1d00]}{color[0400]}縱軸{color[ffff]}{[0001|ffff]}會變成{[0001|1d00]}{color[0400]}Z軸{color[ffff]}{[0001|ffff]}。
BU_088	把時尚物件小節點\n移動到程式設計畫面上方……\n也就是{[0001|1d00]}{color[0400]}Z方向{color[ffff]}{[0001|ffff]}看看。
BU_089	為了提升蘋果的魅力，\n向Z方向移動也是必要的呢♥
BU_090	向Z方向移動後，\n遊戲畫面會變成怎樣呢？
BU_091	到遊戲畫面確認看看吧。
BU_092	蘋果在比剛才更後方的位置呢。
BU_093	這就表示在程式設計畫面中，\n當小節點向{[0001|1d00]}{color[0400]}Z方向{color[ffff]}{[0001|ffff]}移動時……
BU_094	遊戲畫面中的蘋果會向後方移動。
BU_096	到程式設計畫面去吧。
BU_097	切換視角會改變\n觀看遊戲畫面的方式……
BU_098	而{[0001|1d00]}{color[0400]}橫向視角{color[ffff]}{[0001|ffff]}和{[0001|1d00]}{color[0400]}俯瞰視角{color[ffff]}{[0001|ffff]}的\n畫面軸線方向也各不相同。
BU_099	{[0201]}，\n你還記得遊戲空間的{[0001|1d00]}{color[0400]}3個方向{color[ffff]}{[0001|ffff]}嗎？
BU_100	就是{[0001|1d00]}{color[0400]}X方向{color[ffff]}{[0001|ffff]}、{[0001|1d00]}{color[0400]}Y方向{color[ffff]}{[0001|ffff]}和{[0001|1d00]}{color[0400]}Z方向{color[ffff]}{[0001|ffff]}這3個方向。
BU_101	在設計遊戲程式時，\n經常會用上方向的概念，\n你可要好好記住喔。
BU_102	只要改變視角，就能看見不一樣的世界。
BU_103	切換視角……好讚喔！
Guidebook_Warp.msbt
000	……你好，\n{[0201]}。
001	這2個圓環……\n其實是{[0001|1d00]}{color[0400]}傳送門{color[ffff]}{[0001|ffff]}。
003	試著用操控搖桿移動人……\n讓他進去{color[0400]}{[0001|1d00]}右方的圓環{[0001|ffff]}{color[ffff]}裡。
004	……你看，人被傳送了。
006	當人進入右方的圓環時……\n就會被傳送到左方的圓環。
007	這次換成進去{color[0400]}{[0001|1d00]}左方的圓環{[0001|ffff]}{color[ffff]}裡看看。
008	……不能從左方傳送到右方呢。
009	這組傳送門只能\n從右到左地{[0001|1d00]}{color[0400]}單向通行{color[ffff]}{[0001|ffff]}。
010	我們這次要解說的\n就是這個{color[0400]}{[0001|1d00]}傳送門的原理{[0001|ffff]}{color[ffff]}。
011	去看看傳送的程式長什麼樣子吧。
012	{[0201]}，\n你好！
013	你有看到人被傳送了嗎！？\n好像魔術一樣喔！
014	你好～我是右方的圓環。
015	閃耀著彩虹光芒的圓環……
016	就好像通過彩虹橋\n來傳送一樣呢♥
017	你好～我是左方的圓環。
018	因為疊起來會很難看清楚，\n所以我們被斜著放在一起♥
019	這種稍微傾斜的設計，\n感覺……♥好有才華喔♥
020	其實……\n時尚圓環只是傳送地點的{[0001|1d00]}{color[0400]}標誌{color[ffff]}{[0001|ffff]}。
021	真正傳送人的是……
022	門……\n我是{[0001|1d00]}{color[0400]}傳送物件入口小節點{color[ffff]}{[0001|ffff]}。
023	引導你來到此處的是\n你心中燃燒的求知慾。
023-01	很好，我就傳授你\n我們{color[0400]}{[0001|1d00]}超能力{[0001|ffff]}{color[ffff]}的奧秘吧。
024	我的超能力就是……\n{color[0400]}{[0001|1d00]}把接觸的物件傳送到亞空間{[0001|ffff]}{color[ffff]}。
025	門門……\n我是{[0001|1d00]}{color[0400]}傳送物件出口小節點{color[ffff]}{[0001|ffff]}。
026	我的超能力就是……\n{[0001|1d00]}{color[0400]}讓物件從亞空間現身{color[ffff]}{[0001|ffff]}。
027	當我們的超能力合而為一時……
028	就能讓物件經由亞空間\n進行{color[0400]}{[0001|1d00]}超高速移動{[0001|ffff]}{color[ffff]}。
029	人們稱之為{color[0400]}{[0001|1d00]}傳送{[0001|ffff]}{color[ffff]}。
031	……也就是說，\n他們可以把物件從{[0001|1d00]}{color[0400]}傳送物件入口{color[ffff]}{[0001|ffff]}\n傳送到{[0001|1d00]}{color[0400]}傳送物件出口{color[ffff]}{[0001|ffff]}。
033	我們來看看\n{[0001|1d00]}{color[0400]}傳送物件入口小節點{color[ffff]}{[0001|ffff]}的設定吧。
034	打開設定。
035	只有被設定在這個\n{color[0400]}{[0001|1d00]}要傳送什麼？{[0001|ffff]}{color[ffff]}中的物件才會被傳送。
036	現在設定為{color[0400]}{[0001|1d00]}人{[0001|ffff]}{color[ffff]}呢。
037	除此之外，{[0001|1d00]}狀態{[0001|ffff]}中的{color[0400]}{[0001|1d00]}能看見{[0001|ffff]}{color[ffff]}\n也被設定為{color[0400]}{[0001|1d00]}關閉{[0001|ffff]}{color[ffff]}。
039	把{color[0400]}{[0001|1d00]}能看見{[0001|ffff]}{color[ffff]}設定為{color[0400]}{[0001|1d00]}開啟{[0001|ffff]}{color[ffff]}吧。
040	關閉設定。
041	接著來看看\n{color[0400]}{[0001|1d00]}傳送物件出口小節點{[0001|ffff]}{color[ffff]}的設定吧。
042	選擇。
043	設定。
044	現在{[0001|1d00]}狀態{[0001|ffff]}中的{color[0400]}{[0001|1d00]}能看見\n{[0001|ffff]}{color[ffff]}被設定為{color[0400]}{[0001|1d00]}關閉{[0001|ffff]}{color[ffff]}呢。
045	把{color[0400]}{[0001|1d00]}能看見{[0001|ffff]}{color[ffff]}設定為{color[0400]}{[0001|1d00]}開啟{[0001|ffff]}{color[ffff]}。
046	關閉設定。
047	那麼，傳送物件的出入口能被看見後，\n會變成什麼樣子呢……？\n我們到遊戲畫面確認一下吧。
048	仔細觀察圓環裡面……\n你會看到{[0001|1d00]}{color[0400]}白色框框{color[ffff]}{[0001|ffff]}。
049	這邊的白色框框就是{[0001|1d00]}{color[0400]}傳送門入口{color[ffff]}{[0001|ffff]}。
050	接觸到入口的物件會被傳送。
051	而這邊的白色框框則是{[0001|1d00]}{color[0400]}傳送門出口{color[ffff]}{[0001|ffff]}。
052	物件會在出口中間出現。
053	試著把人移動到入口的白色框框……\n確認一下傳送的過程吧。
054	……人在碰到框框的瞬間就被傳送了。
055	這表示真正的傳送門入口並不是圓環，\n而是這個白色框框。
056	不過……在上面放一個圓環，\n比較容易知道這就是傳送地點對吧？
057	……那麼，回到程式設計畫面吧。
060	對了，\n我有點好奇耶……
061	如果～{color[0400]}{[0001|1d00]}沒有傳送物件出口{[0001|ffff]}{color[ffff]}的話，\n接觸到傳送物件入口時……\n……會變成怎樣啊！？
062	既然亞空間的出口不復存在……
063	自然是無法從亞空間歸來……\n這是理所當然的結局。
065	也就是說……\n會{[0001|1d00]}{color[0400]}從遊戲畫面中消失得無影無蹤{color[ffff]}{[0001|ffff]}。
066	……他們的說明有點難懂。\n我們來實際刪除一下\n{[0001|1d00]}{color[0400]}傳送物件出口小節點{color[ffff]}{[0001|ffff]}看看吧。
067	選擇傳送物件出口小節點。
068	刪除。
069	接著選擇作為出口標誌的圓環……\n也就是時尚物件小節點。
070	刪除。
071	人被傳送到沒有出口的亞空間後，\n會變成怎樣呢……？
072	會變成怎樣啊……！？
073	到遊戲畫面確認看看吧。
074	移動人……\n讓他進去傳送門入口裡。
075	人從遊戲畫面中……\n……{color[0400]}{[0001|1d00]}消失了{[0001|ffff]}{color[ffff]}。
076	想再試一次的話，\n就按下{[0001|1d00]}重來{[0001|ffff]}吧。
077	當沒有傳送門出口時，\n物件{[0001|1d00]}{color[0400]}接觸{color[ffff]}{[0001|ffff]}到入口{[0001|1d00]}{color[0400]}就會消失{color[ffff]}{[0001|ffff]}。
078	回到程式設計畫面吧。
079	物件之所以會消失，\n不過是遵循了我的超能力法則。
079-01	為此感到恐懼、戰慄……\n乃毫無必要之事。
080	……那麼，既然已經知道真相了，\n我把傳送物件出口小節點和\n時尚物件小節點放回原位吧。
081	門門……\n傳送門再次連接到出口了。
082	這樣就恢復原狀了。
083	傳送門需要入口和出口，\n如同櫻桃一般，成雙成對、遙相呼應。
084	入口和出口須連接到相同的亞空間，\n傳送之術方可成形。
085	為此，我們需要擁有相同的識別碼，\n才能確認彼此的存在。
086	到設定中確認{[0001|1d00]}{color[0400]}傳送ID{color[ffff]}{[0001|ffff]}吧。
086-01	……呃……簡單來說，\n就是傳送門入口和出口都要\n設定為相同的{[0001|1d00]}{color[0400]}傳送ID{color[ffff]}{[0001|ffff]}才能正常運作。
087	來看看{[0001|1d00]}{color[0400]}傳送物件出口小節點{color[ffff]}{[0001|ffff]}的設定吧。
088	打開設定。
089	這就是{color[0400]}{[0001|1d00]}傳送ID{[0001|ffff]}{color[ffff]}。
091	被設定為相同{[0001|1d00]}{color[0400]}傳送ID{color[ffff]}{[0001|ffff]}的\n入口和出口會連接在一起。
092	這個出口的{[0001|1d00]}傳送ID{[0001|ffff]}\n現在被設定為{color[0400]}{[0001|1d00]}A{[0001|ffff]}{color[ffff]}呢。
093	確認好了就關閉設定吧。
094	接著確認入口的{[0001|1d00]}傳送ID{[0001|ffff]}吧。
095	選擇。
096	設定。
097	入口的{[0001|1d00]}傳送ID{[0001|ffff]}\n和出口一樣被設定為{color[0400]}{[0001|1d00]}A{[0001|ffff]}{color[ffff]}。
098	由於被設定為相同的{[0001|1d00]}{color[0400]}傳送ID{color[ffff]}{[0001|ffff]}，\n這個入口和出口{[0001|1d00]}{color[0400]}會連接在一起{color[ffff]}{[0001|ffff]}。
099	關閉設定。
101	接下來，我們試著利用{color[0400]}{[0001|1d00]}傳送ID{[0001|ffff]}{color[ffff]}\n另外建立一組傳送門吧。
102	門……\n我是{color[0400]}{[0001|1d00]}通往亞空間的入口{[0001|ffff]}{color[ffff]}。
103	門門……\n我是{color[0400]}{[0001|1d00]}離開亞空間的出口{[0001|ffff]}{color[ffff]}。
104	我叫來了入口和出口的\n傳送物件小節點……
105	還有作為傳送標誌的\n時尚物件小節點。
109	替他們設定{[0001|1d00]}{color[0400]}傳送ID{color[ffff]}{[0001|ffff]}，\n讓傳送門連接在一起吧。
110	首先要確認出口的{[0001|1d00]}{color[0400]}傳送ID{color[ffff]}{[0001|ffff]}。
111	打開設定。
112	這個出口的{[0001|1d00]}傳送ID{[0001|ffff]}……\n現在被設定為{color[0400]}{[0001|1d00]}B{[0001|ffff]}{color[ffff]}。
113	關閉設定。
114	接著選擇入口。
115	打開設定。
116	這個入口的{[0001|1d00]}傳送ID{[0001|ffff]}……\n現在被設定為{color[0400]}{[0001|1d00]}A{[0001|ffff]}{color[ffff]}。
117	為了要連接到\n剛才的傳送門出口……
118	把入口的{[0001|1d00]}傳送ID{[0001|ffff]}設定為{color[0400]}{[0001|1d00]}B{[0001|ffff]}{color[ffff]}吧。
119	另外，為了能夠傳送人……\n我們也來設定{color[0400]}{[0001|1d00]}要傳送什麼？{[0001|ffff]}{color[ffff]}吧。
120	把{color[0400]}{[0001|1d00]}人{[0001|ffff]}{color[ffff]}設定為{color[0400]}{[0001|1d00]}開啟{[0001|ffff]}{color[ffff]}。
121	關閉這個畫面。
122	關閉設定。
123	這樣傳送的設定就完成了。
124	你的行動讓兩條新的亞空間通道彼此相連，\n我可以看見……其交錯之處正閃耀著光輝。
125	……呃～\n我們去遊戲畫面確認看看吧。
126	右邊的是傳送門入口，\n左邊的是傳送門出口。
127	試著進去上方的傳送門入口……\n也就是{[0001|1d00]}傳送ID{[0001|ffff]}為{[0001|1d00]}{color[0400]}B{color[ffff]}{[0001|ffff]}的入口裡。
128	{color[0400]}{[0001|1d00]}B{[0001|ffff]}{color[ffff]}的入口……\n會通往{[0001|1d00]}傳送ID{[0001|ffff]}同為{color[0400]}{[0001|1d00]}B{[0001|ffff]}{color[ffff]}的出口。
129	接下來，\n試著進去{[0001|1d00]}傳送ID{[0001|ffff]}為{[0001|1d00]}{color[0400]}A{color[ffff]}{[0001|ffff]}的入口。
130	{[0001|1d00]}傳送ID{[0001|ffff]}為{color[0400]}{[0001|1d00]}A{[0001|ffff]}{color[ffff]}的入口……\n會通往{color[0400]}{[0001|1d00]}A{[0001|ffff]}{color[ffff]}的出口。
131	你看，相同傳送ID的傳送門\n彼此連接在一起對吧？
132	回到程式設計畫面。
133	門……為了助你達到爐火純青之境，\n我就將應用的技巧傳授予你吧。
134	你可以對同一個傳送門出口……\n{color[0400]}{[0001|1d00]}設置複數個{[0001|ffff]}{color[ffff]}傳送門入口。
135	即使存在複數個{[0001|1d00]}{color[0400]}相同ID{color[ffff]}{[0001|ffff]}的入口，\n他們也都會通往{[0001|1d00]}{color[0400]}相同ID{color[ffff]}{[0001|ffff]}的出口。
135-01	……呃～\n也就是說，即使有好幾個相同ID的入口，\n他們也都會把物件傳送到相同ID的出口。
136	為出口設定{[0001|1d00]}{color[0400]}獨立的ID{color[ffff]}{[0001|ffff]}為亙古不變之理，\n複數出口擁有相同ID就形同水中撈月，\n乃不可能之事。
137	……呃～～\n就是說你不能把多個出口設定為相同的ID。
138	你嘗試把2個入口……\n連接到1個出口吧。
139	那麼……\n選擇傳送物件入口小節點……
140	打開設定。
141	把{[0001|1d00]}傳送ID{[0001|ffff]}更改為{color[0400]}{[0001|1d00]}B{[0001|ffff]}{color[ffff]}。
142	關閉設定。
143	門……\n次元被扭曲，我將連接到{[0001|1d00]}{color[0400]}B{color[ffff]}{[0001|ffff]}的出口。
144	……傳送門會怎樣連接呢？\n到遊戲畫面確認一下吧。
145	首先，進到上方的入口進行傳送。
146	接著，進到下方的入口進行傳送。
147	……兩邊都會傳送到相同的出口。
148	這是因為不論是上方還是下方，\n兩個入口的{[0001|1d00]}傳送ID{[0001|ffff]}都被設定為{color[0400]}{[0001|1d00]}B{[0001|ffff]}{color[ffff]}……
149	所以兩個入口都會\n通往{color[0400]}{[0001|1d00]}B{[0001|ffff]}{color[ffff]}的出口。
150	回到程式設計畫面吧。
151	門……\n若能助你滿足求知慾，\n我也算是得償所願了。
152	超越亞空間的超高速移動……\n這就是傳送。
153	只要使用傳送……\n就可以讓物件瞬間移動\n或是從遊戲畫面中消失。
154	超越空間正是超越次元，\n這一定能為你的創作活動貢獻一份力量。
155	來吧，和我們一起……\n啟程前往亞空間吧……！！
155-01	那麼，有緣再會了。
156	有關傳送的解說就講到這裡……
157	……呼……累死我了。
LessonCommon.msbt
Dialog_Finish_Body	確定完成了嗎？
Dialog_Finish_Button1	是
Dialog_Finish_Button2	否
LessonName.msbt
00	歡迎來到附帶導航的課堂
01	二人對戰！捉迷藏大戰
02	滾滾球
03	ALIEN SHOOTING
04	GO! GO! 運動競技
05	解謎房間
06	刺激賽車
07	3D運動競技空間
ChexkPoint00	第一次小測驗
ChexkPoint01	小測驗1
ChexkPoint02	小測驗2
ChexkPoint03	小測驗3
ChexkPoint04	小測驗4
ChexkPoint05	小測驗5
ChexkPoint06	小測驗6
ChexkPoint07	附加小測驗
Explain_00	在小節點車庫裡體驗程式設計！\n附帶導航的課堂正在等著你喔……
Explain_01	可以兩人對戰的遊戲——捉迷藏！\n來學習程式設計的基礎吧！
Explain_02	傾斜主機，讓球滾來滾去！\n善用變換視角來完成這個程式吧！
Explain_03	在太空中打敗來襲的外星人！\n來挑戰製作充滿自我風格的遊戲吧！
Explain_04	經典的橫向動作遊戲！\n使用連接設計出各式機關吧！
Explain_05	謎樣的房間裡……藏了寶藏！？\n在3D空間裡設計出各種燒腦的機關吧！
Explain_06	玩家vs自動駕駛AI的激烈競速！\n用你設計的程式讓汽車跑起來吧！
Explain_07	終於到了驗收學習成果的時刻！\n發揮你所學的全部來製作3D動作遊戲吧！
CheckPoint_00	如謎一般突然出現的小測驗……\n鼓起勇氣進去看看吧！
CheckPoint_01	這個小測驗會考驗你的程式設計能力！\n放心！你一定辦得到！
CheckPoint_02	這個小測驗會考驗你的程式設計能力！\n是你的話一定沒問題！
CheckPoint_03	這個小測驗會考驗你的程式設計能力！\n來吧！你行的！
CheckPoint_04	這個小測驗會考驗你的程式設計能力！\n沒錯！你可以的！
CheckPoint_05	這個小測驗會考驗你的程式設計能力！\n你絕對可以辦得到！
CheckPoint_06	這個小測驗會考驗你的程式設計能力！\n你當然可以做得到！
CheckPoint_07	為了恭喜你朝程式設計師之路踏出了一步……\n我準備了一些特別的謎題。
Lesson_2DAction_00.msbt
000000	歡迎你來到第4課！
000	上了這麼多附帶導航的課堂～～\n課程也終於過了一半！
001	這次我們要設計的遊戲是……！
002	GO! GO! 運動競技！
003	這是一個闖關類型的動作遊戲，\n玩家需要通過層層機關才能抵達終點！
004	我們製作的遊戲\n越來越專業了呢～！
005	那麼，我們趕緊來設計程式吧！
006	到程式設計畫面去～\nGO! GO!
007	首先，我們要讓\n玩家操控的角色——{color[0400]}{[0001|1d00]}人{[0001|ffff]}{color[ffff]}動起來。
008	請叫出{color[0400]}{[0001|1d00]}人小節點{[0001|ffff]}{color[ffff]}！
009	嗨！\n我好久沒當主角了呢！
010	把這個人小節點\n縮小放到平面上。
011	然後，打開人小節點的設定！
012	先打開{color[0400]}{[0001|1d00]}顏色{[0001|ffff]}{color[ffff]}……
013	設定為{color[0400]}{[0001|1d00]}水藍色{[0001|ffff]}{color[ffff]}吧！
014	接著，把{color[0400]}{[0001|1d00]}跳躍力{[0001|ffff]}{color[ffff]}設定為{color[0400]}{[0001|1d00]}0.50{[0001|ffff]}{color[ffff]}。
015	另外，因為在遊戲中\n人要向右方前進……
016	所以要把{color[0400]}{[0001|1d00]}Y軸轉動{[0001|ffff]}{color[ffff]}設定為{color[0400]}{[0001|1d00]}-90.00°{[0001|ffff]}{color[ffff]}，\n讓人面向右方。
017	設定好了～
018	那麼接下來，我們來設計\n用控制器操控人的程式吧。
019	先打開{[0001|1d00]}L操控搖桿{[0001|0400]}{[0001|1d00]}左右{[0001|ffff]}，\n叫出{color[0400]}{[0001|1d00]}操控搖桿小節點{[0001|ffff]}{color[ffff]}。
020	轉轉～\n{[0201]}，\n我們很常見面呢～
021	把操控搖桿小節點\n移動到左邊……
022	然後把操控搖桿小節點連接到\n人小節點的{color[0400]}{[0001|1d00]}左右端口{[0001|ffff]}{color[ffff]}吧！
023	接著叫出{color[0400]}{[0001|1d00]}的按鍵小節點{[0001|ffff]}{color[ffff]}。
024	嗨！\n這次也狂按一番吧！\n我按～～～！！
025	把按鍵小節點\n也移動到左邊……
026	然後把按鍵小節點連接到\n人小節點的{color[0400]}{[0001|1d00]}跳躍端口{[0001|ffff]}{color[ffff]}！
027	這樣子{[0001|1d00]}{color[0400]}人{color[ffff]}{[0001|ffff]}就可以……
028	透過{[0001|1d00]}{color[0400]}操控搖桿左右{color[ffff]}{[0001|ffff]}移動～
029	還有按下{[0001|1d00]}{color[0400]}鍵跳躍{color[ffff]}{[0001|ffff]}喲！嗨！
030	走吧！\n到遊戲畫面確認看看！
031	試著用{color[0400]}{[0001|1d00]}操控搖桿{[0001|ffff]}{color[ffff]}和{color[0400]}{[0001|1d00]}鍵{[0001|ffff]}{color[ffff]}\n讓人動起來。
032	很好！\n人可以做出各種動作了～
033	雖然我們已經有段時間\n沒碰過操控人的程式了……\n但你看起來都沒忘記呢～
034	接下來……由於這個遊戲需要\n通過{color[0400]}{[0001|1d00]}長距離場地{[0001|ffff]}{color[ffff]}才能抵達終點……
035	為了遊玩這個長距離場地，\n我們來設計一下程式。\n讓{[0001|1d00]}{color[0400]}遊戲畫面跟著人移動{color[ffff]}{[0001|ffff]}吧！
036	好！\n來設計程式囉！
037	先叫出我們的老朋友……\n{[0001|1d00]}{color[0400]}遊戲畫面小節點{color[ffff]}{[0001|ffff]}。
038	{[0201]}，是你啊～\n哈囉哈囉～～
039	今天也要用你華麗的程式設計技巧，\n讓我拍出很～多精彩的畫面喔～
040	把遊戲畫面小節點\n稍微放大一些。
041	好的！\n接下來～
042	為了讓遊戲畫面跟著人移動……
043	請把遊戲畫面小節點\n{color[0400]}{[0001|1d00]}連接{[0001|ffff]}{color[ffff]}到人小節點！
044	OK～OK～！\n要對人小節點進行貼身採訪是吧～
045	我會追他到天涯海角，\n絕不讓他跑出鏡頭外～～！
046	走吧！\n去確認看看變成什麼樣子了！
047	試著用操控搖桿和鍵\n讓人動起來。
048	遊戲畫面跟著人移動了～！
049	這麼一來，\n就算是長距離場地\n也能放心地玩了！
050	那麼，\n我們接著來製作場地吧！
051	為了刪除現有的平面，\n我們先叫出{color[0400]}{[0001|1d00]}空間小節點{[0001|ffff]}{color[ffff]}。
052	……我能看見。\n在通過漫長的試煉之後，\n你獲得無價之寶的樣子……
053	來吧，\n打開空間小節點的設定。
054	把{color[0400]}{[0001|1d00]}空間的外型{[0001|ffff]}{color[ffff]}設定為{color[0400]}{[0001|1d00]}無{[0001|ffff]}{color[ffff]}。
055	關閉設定畫面～
056	接著叫出{[0001|1d00]}{color[0400]}立方體物件小節點{color[ffff]}{[0001|ffff]}，\n他將成為我們的遊戲場地喔。
057	……嗨，\n我是隨處可見的物件小節點。
058	把物件小節點往旁邊拉大。
059	打開物件小節點的設定畫面。
060	由於這個物件要作為場地使用，\n所以我們要把{color[0400]}{[0001|1d00]}狀態{[0001|ffff]}{color[ffff]}設定為\n只有{color[0400]}{[0001|1d00]}能看見、能接觸{[0001|ffff]}{color[ffff]}是{color[0400]}{[0001|1d00]}開啟{[0001|ffff]}{color[ffff]}。
061	OK了！
062	走吧，到遊戲畫面確認看看！
063	第一個場地做好了～！
064	接下來還要繼續製作\n各式各樣的場地喔～
065	那麼，\n我們回去程式設計畫面吧。
066	好了～～這樣就～～～
067	完成第1步驟了！
068a	恭喜～
068c	恭喜呀！
068d	……做得好。
069	你對GO! GO! 運動競技的\n第1步驟有什麼感想嗎？
070	只是讓{[0001|1d00]}{color[0400]}遊戲畫面跟著人移動{color[ffff]}{[0001|ffff]}，\n就突然變得很有遊戲的感覺了，對吧！
071	在下個步驟中，\n我們要設計遊戲的{color[0400]}{[0001|1d00]}敵人角色{[0001|ffff]}{color[ffff]}！
072	那就步驟2再見囉～
Lesson_2DAction_01.msbt
000	等你很久囉～
001	這是GO! GO! 運動競技的\n第2步驟～
002	首先，請試著用\n操控搖桿和鍵讓人動起來。
003	你還記得上個步驟的內容嗎？\n我們讓遊戲畫面跟著人移動了呢！
004	在步驟2中，\n我們要加入{color[0400]}{[0001|1d00]}外星人來當作敵人{[0001|ffff]}{color[ffff]}。
005	快去程式設計畫面吧，\nGO! GO!
006	那麼，請從{[0001|1d00]}圓形時尚物件{[0001|ffff]}的{[0001|1d00]}{color[0400]}外星人{color[ffff]}{[0001|ffff]}裡\n叫出{[0001|1d00]}{color[0400]}時尚物件小節點{color[ffff]}{[0001|ffff]}。
007	他有一雙深邃的大眼……\n還有充滿光澤的身軀……
008	只是看了外星人一眼，感覺整顆心\n都要被他們侵略了……超有魅力的♥
009	把時尚物件小節點\n放到場地上……
010	打開時尚物件小節點的設定畫面。
011	請把{color[0400]}{[0001|1d00]}狀態{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1d00]}能看見{[0001|ffff]}{color[ffff]}、{color[0400]}{[0001|1d00]}能接觸{[0001|ffff]}{color[ffff]}、\n{color[0400]}{[0001|1d00]}會損壞{[0001|ffff]}{color[ffff]}、{color[0400]}{[0001|1d00]}能破壞{[0001|ffff]}{color[ffff]}設定為{color[0400]}{[0001|1d00]}開啟{[0001|ffff]}{color[ffff]}。
011000	OK！
012	我們想要讓外星人\n面向人的方向……
013	把{[0001|1d00]}{color[0400]}轉動{color[ffff]}{[0001|ffff]}的{[0001|1d00]}{color[0400]}Y軸{color[ffff]}{[0001|ffff]}\n設定為{[0001|1d00]}{color[0400]}90.00°{color[ffff]}{[0001|ffff]}。
014	關閉設定畫面。
014-01	來吧，\n讓更多外星人登場！
015	{color[0400]}{[0001|1d00]}複製{[0001|ffff]}{color[ffff]}時尚物件小節點。
016	把複製的時尚物件小節點\n放到旁邊吧。
017	這樣就有2隻外星人了。
018	接著打開人小節點的設定畫面。
019	把{color[0400]}{[0001|1d00]}狀態{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1d00]}會損壞{[0001|ffff]}{color[ffff]}設定為{color[0400]}{[0001|1d00]}開啟{[0001|ffff]}{color[ffff]}，\n這樣當人撞到外星人時就會損壞。
020	設定完成～
021	走吧！到遊戲畫面\n確認外星人的樣子！
022	來！用力撞向\n擋住去路的外星人吧～
023	人損壞了～！
024	但是……你不覺得\n好像少了些什麼嗎～？
025	沒錯！當人損壞時，\n我們要讓遊戲{color[0400]}{[0001|1d00]}自動重來{[0001|ffff]}{color[ffff]}！
026	那麼，我們就來設計\n自動重來的程式吧～
027	叫出{color[0400]}{[0001|1d00]}物件損壞時小節點{[0001|ffff]}{color[ffff]}。
028	哦？\n你想確認物件損壞的瞬間嗎？
028000	只要是跟物件損壞有關的事情，\n我都可以告訴你喔！
029	稍微移動一下\n物件損壞時小節點……
030	打開物件損壞時小節點的設定畫面。
031	打開{color[0400]}{[0001|1d00]}要確認什麼？{[0001|ffff]}{color[ffff]}……
032	設定為只有{color[0400]}{[0001|1d00]}人{[0001|ffff]}{color[ffff]}是{color[0400]}{[0001|1d00]}開啟{[0001|ffff]}{color[ffff]}～
033	關閉這個畫面。
034	接著關閉設定畫面。
035	好的，要確認\n{color[0400]}{[0001|1d00]}人損壞的瞬間{[0001|ffff]}{color[ffff]}對吧。
035-01	交給我吧！
036	接著叫出{color[0400]}{[0001|1d00]}計時器小節點{[0001|ffff]}{color[ffff]}。
037	唔……\n你根本就是每堂課都叫我嘛。
037000	這樣的話，你就一次先把\n所有需要我的行程告訴我，\n我也比較好做事……
038	呃～\n稍微移動一下\n計時器小節點。
039	把{color[0400]}{[0001|1d00]}物件損壞時小節點{[0001|ffff]}{color[ffff]}\n連接到{color[0400]}{[0001|1d00]}計時器小節點{[0001|ffff]}{color[ffff]}。
040	最後……\n叫出{color[0400]}{[0001|1d00]}重來小節點{[0001|ffff]}{color[ffff]}！
041	唉……\n好想重來……
042	你怎麼了？
043	我之前不小心\n把物件損壞時小節點\n叫成「媽媽」了。
044	啊啊……\n好想重來……
045	不要在意那種事情啦！
045-01	我隨時都可以\n當你的媽媽啊！
046	唉……\n啊啊……好想重來。
047	……來吧，\n移動一下重來小節點。
048	把{color[0400]}{[0001|1d00]}計時器小節點{[0001|ffff]}{color[ffff]}\n連接到{color[0400]}{[0001|1d00]}重來小節點{[0001|ffff]}{color[ffff]}。
049	好，這樣遊戲就會\n在{color[0400]}{[0001|1d00]}人損壞1秒後重來{[0001|ffff]}{color[ffff]}……
050	自動重來的程式就完成囉～
051	去遊戲畫面確認看看吧！
052	請試著撞向外星人～
053	遊戲重來了呢～！
054	不過……\n其實還有一個問題……
055	可以請你試著\n{color[0400]}{[0001|1d00]}從場地上掉下去{[0001|ffff]}{color[ffff]}看看嗎？
056	就算掉下去了，\n也沒有發生任何事情。
057	我們希望把遊戲設計成……\n{color[0400]}{[0001|1d00]}當人從場地上掉下去時{[0001|ffff]}{color[ffff]}也會重來。
058	在下個步驟中……\n我們就會設計出這種效果的程式！
059	這次就設計到這裡！\n回程式設計畫面吧。
060	那麼～～這樣就～～
061	完成第2步驟了～！
062-00	恭、喜、你♥
062-01	恭喜！
062-02	恭喜你……
062-03	還算做得不錯啦。
063	在接下來的步驟3中，我們要來設計\n{color[0400]}{[0001|1d00]}當人從場地上掉下去時，遊戲就會重來{[0001|ffff]}{color[ffff]}的程式。
064	到時候也會有新的小節點登場，\n敬請期待！
065	那麼就下個步驟再見吧～
Lesson_2DAction_02.msbt
000	你好～～！
001	第4課的第3步驟\n要開始囉～～
002	在上個步驟中，\n我們放了外星人當作{color[0400]}{[0001|1d00]}敵人{[0001|ffff]}{color[ffff]}……
002-001	還設計了程式，\n讓人撞到外星人後就會損壞，\n遊戲也會隨之自動{color[0400]}{[0001|1d00]}重來{[0001|ffff]}{color[ffff]}！
003	但是……請你試著\n從場地上掉下去看看。
004	嗯……\n什麼事都沒發生。
005	人只會不斷地向下掉落。
006	……作為一款遊戲，\n這樣子可不行呢～
007	所以……我們來把程式設計成\n{[0001|1d00]}{color[0400]}當人從場地上掉下去時{color[ffff]}{[0001|ffff]}，遊戲就會{color[0400]}{[0001|1d00]}重來{[0001|ffff]}{color[ffff]}吧！
008	好～～到程式設計畫面去～～
009	GO! GO!
009-01	因為遊戲會在\n{color[0400]}{[0001|1d00]}人損壞時{[0001|ffff]}{color[ffff]}重來……
009-02	所以我們只要在\n{color[0400]}{[0001|1d00]}人從場地上掉下去時將他破壞{[0001|ffff]}{color[ffff]}，\n遊戲就會重來！
010	至於人有沒有掉下場地……
011	只要看{[0001|1d00]}{color[0400]}人的位置{color[ffff]}{[0001|ffff]}就知道了！
013	為了能隨時掌握人的位置，\n我們就把負責相關工作的小節點……\n{color[0400]}{[0001|1d00]}位置感應器小節點{[0001|ffff]}{color[ffff]}叫出來吧！
014	依序點選{[0001|1d00]}物件{[0001|ffff]}{[0001|0700]}{[0001|ffff]}{[0001|1d00]}感應器{[0001|ffff]}{[0001|0700]}{[0001|ffff]}{[0001|1d00]}位置感應器{[0001|ffff]}，\n叫出{[0001|1d00]}{color[0400]}位置感應器小節點{color[ffff]}{[0001|ffff]}！
015	你好，初次見面！\n我是位置感應器小節點！
016	要看人的位置，對吧。
017	我知道了！\n交給我吧！
018	把位置感應器小節點\n移動到人小節點的上面……
019	打開位置感應器小節點的設定畫面。
020	把{color[0400]}{[0001|1d00]}狀態{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1d00]}能看見{[0001|ffff]}{color[ffff]}\n設定為{color[0400]}{[0001|1d00]}關閉{[0001|ffff]}{color[ffff]}吧～
021	關閉設定畫面！
022	接著把{color[0400]}{[0001|1d00]}位置感應器小節點{[0001|ffff]}{color[ffff]}\n{color[0400]}{[0001|1d00]}連接{[0001|ffff]}{color[ffff]}到{color[0400]}{[0001|1d00]}人小節點{[0001|ffff]}{color[ffff]}。
023	好了，這樣位置感應器小節點\n就會輸出{color[0400]}{[0001|1d00]}人的位置{[0001|ffff]}{color[ffff]}了。
024	接下來要設計程式，\n讓小節點能夠知道\n人的位置{color[0400]}{[0001|1d00]}是否比場地低{[0001|ffff]}{color[ffff]}。
025	來使用{color[0400]}{[0001|1d00]}比較小節點{[0001|ffff]}{color[ffff]}吧！
026	叫出{color[0400]}{[0001|1d00]}＜{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1d00]}比較小節點{[0001|ffff]}{color[ffff]}！
027	你很在意……\n人有沒有從場地上掉下去對吧！
028	把比較小節點放在\n位置感應器小節點的旁邊……
029	接著，把位置感應器小節點的{color[0400]}{[0001|1d00]}Y端口{[0001|ffff]}{color[ffff]}和\n比較小節點的{color[0400]}{[0001|1d00]}輸入1端口{[0001|ffff]}{color[ffff]}連接起來吧。
030	這樣一來，{color[0400]}{[0001|1d00]}人的位置的Y{[0001|ffff]}{color[ffff]}……\n也就是{color[0400]}{[0001|1d00]}人的高度{[0001|ffff]}{color[ffff]}\n就會輸入到比較小節點。
031	而為了要知道這個\n{color[0400]}{[0001|1d00]}人的高度是否比場地低{[0001|ffff]}{color[ffff]}……
032	就得叫出{color[0400]}{[0001|1d00]}常數小節點{[0001|ffff]}{color[ffff]}！
033	你好！\n我是常數小節點，\n我絕不灰心喪志！
033-01	把這個常數小節點拿來\n和剛才的{[0001|1d00]}{color[0400]}人的高度{color[ffff]}{[0001|ffff]}做比較……
033-02	來看看\n{color[0400]}{[0001|1d00]}人的位置是否比場地低{[0001|ffff]}{color[ffff]}吧！
034	打開常數小節點的設定畫面。
035	我們想知道的是人的位置是否比場地低，\n所以要設定為{color[0400]}{[0001|1d00]}低於場地位置的數值{[0001|ffff]}{color[ffff]}。
036	把他設定為{color[0400]}{[0001|1d00]}-3.00{[0001|ffff]}{color[ffff]}吧！
037	關閉設定畫面。
038	移動常數小節點……
039	然後把常數小節點連接到\n比較小節點的{color[0400]}{[0001|1d00]}輸入2端口{[0001|ffff]}{color[ffff]}。
040	這樣一來，只要人的高度\n低於{color[0400]}{[0001|1d00]}-3.00{[0001|ffff]}{color[ffff]}……
041	也就是{[0001|1d00]}{color[0400]}掉到場地下方時{color[ffff]}{[0001|ffff]}，\n比較小節點就會{[0001|1d00]}{color[0400]}輸出訊號{color[ffff]}{[0001|ffff]}。
042	這樣我們就完成了可以知道\n{color[0400]}{[0001|1d00]}人從場地上掉下去{[0001|ffff]}{color[ffff]}的程式了！
043	利用這個程式，我們就能接著設計出\n當{color[0400]}{[0001|1d00]}人{[0001|ffff]}{color[ffff]}從場地上掉下去時{color[0400]}{[0001|1d00]}會損壞{[0001|ffff]}{color[ffff]}的程式。
044	依序點選{[0001|1d00]}物件{[0001|ffff]}{[0001|0700]}{[0001|ffff]}{[0001|1d00]}放出、消除、引力{[0001|ffff]}{[0001|0700]}{[0001|ffff]}{[0001|1d00]}破壞物件{[0001|ffff]}，\n叫出{color[0400]}{[0001|1d00]}破壞物件小節點{[0001|ffff]}{color[ffff]}！
045	呵呵……呵呵呵呵呵……
046	你有想要破壞的東西對吧。
047	呵呵……交給我來。
048	就像這樣……全都破壞掉吧。
049	破壞物件小節點可以\n{color[0400]}{[0001|1d00]}破壞掉接觸到的物件{[0001|ffff]}{color[ffff]}！
050	移動破壞物件小節點……
051	打開設定畫面。
052	把{color[0400]}{[0001|1d00]}狀態{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1d00]}能看見{[0001|ffff]}{color[ffff]}\n設定為{color[0400]}{[0001|1d00]}關閉{[0001|ffff]}{color[ffff]}……
053	打開{color[0400]}{[0001|1d00]}要破壞哪個物件？{[0001|ffff]}{color[ffff]}。
054	在這裡可以設定要破壞哪個物件。
055	我們只想破壞人……\n所以設定為只有{color[0400]}{[0001|1d00]}人{[0001|ffff]}{color[ffff]}是{color[0400]}{[0001|1d00]}開啟{[0001|ffff]}{color[ffff]}。
056	非常好！
057	關閉設定畫面吧。
058	接著把{color[0400]}{[0001|1d00]}破壞物件小節點\n{[0001|ffff]}{color[ffff]}和{color[0400]}{[0001|1d00]}人小節點連接{[0001|ffff]}{color[ffff]}在一起。
059	這樣破壞物件小節點\n就會緊緊地黏著人……
060	和{color[0400]}{[0001|1d00]}人{[0001|ffff]}{color[ffff]}保持{color[0400]}{[0001|1d00]}接觸{[0001|ffff]}{color[ffff]}狀態了！
061	呵呵呵……
067	最後，請把{color[0400]}{[0001|1d00]}比較小節點{[0001|ffff]}{color[ffff]}和\n{color[0400]}{[0001|1d00]}破壞物件小節點{[0001|ffff]}{color[ffff]}連接起來！
068	好！這樣一來，\n{color[0400]}{[0001|1d00]}當比較小節點輸出訊號時，\n人就會損壞{[0001|ffff]}{color[ffff]}了！
069	呵呵……也就是說，\n當人從場地上……\n掉下去的時候……
070	就要……\n……破壞掉人。
071	呵呵呵……\n希望我不會有太多出場機會……\n……呵呵。
072	那麼，到遊戲畫面去\n確認看看吧！
073	請試著從場地上掉下去！
074	從場地上掉下去後，\n人會損壞……\n遊戲也自動重來了～！
075	這樣一下子就增加了\n不少動作遊戲的感覺呢！
076	到程式設計畫面去吧～
077	那麼～～這樣就～～
078	完成第3步驟了！！
079-00	恭喜你。
079-01	呵呵……恭喜。
079-02	太好了！
079-03	恭喜你啊！
080	這次我們設計了\n當人從場地上掉下去時\n會損壞的程式！
082	從下個步驟開始，\n我們要來設計出\n各種場地特殊機關喔～
083	那麼，\n下個步驟再見吧～
Lesson_2DAction_03.msbt
000	歡迎你～～！
001	這是GO! GO! 運動競技的第4步驟！
002	我們先來複習一下上次的內容。
003	請你試著從場地上掉下去！
004	上個步驟中，我們把程式設計成\n當人從場地上掉下去時會損壞呢～！
006	從這個步驟開始，我們終於……\n要來設計機關四伏的場地囉～！
007	在這個步驟中，我們要設計\n可以上下擺動的{color[0400]}{[0001|1d00]}蹺蹺板{[0001|ffff]}{color[ffff]}關卡。
008	來吧，我們快到\n程式設計畫面去～！
009	GO! GO!
010	首先，把作為蹺蹺板支架的\n{[0001|1a00]}{color[0400]}球體物件小節點{color[ffff]}{[0001|ffff]}叫出來！
011	……嗨。\n我的個性比較適合\n靜靜地當個支架。
012	把這個物件小節點\n放在第一個場地的右方……
013	打開設定畫面！
014	因為他要作為蹺蹺板的支架，\n所以把{color[0400]}{[0001|1d00]}狀態{[0001|ffff]}{color[ffff]}設定為\n只有{color[0400]}{[0001|1d00]}能看見{[0001|ffff]}{color[ffff]}是{color[0400]}{[0001|1d00]}開啟{[0001|ffff]}{color[ffff]}～～
015	關閉設定畫面。
016	接著叫出作為蹺蹺板板子的\n{[0001|1d00]}{color[0400]}立方體物件小節點{color[ffff]}{[0001|ffff]}！
017	……嗨。\n雖然我的個性內向，\n但動動身體也不壞。
018	把這個立方體物件小節點\n調整為蹺蹺板板子的形狀，\n放到球體物件小節點上方。
019	打開設定畫面吧！
020	把{color[0400]}{[0001|1d00]}狀態{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1d00]}能看見{[0001|ffff]}{color[ffff]}、{color[0400]}{[0001|1d00]}能接觸{[0001|ffff]}{color[ffff]}、\n{color[0400]}{[0001|1d00]}能移動{[0001|ffff]}{color[ffff]}設定為{color[0400]}{[0001|1d00]}開啟{[0001|ffff]}{color[ffff]}～
021	接著，打開{color[0400]}{[0001|1d00]}顏色{[0001|ffff]}{color[ffff]}。
022	設定為{color[0400]}{[0001|1d00]}黃色{[0001|ffff]}{color[ffff]}吧～！
023	然後，打開{color[0400]}{[0001|1d00]}連接面{[0001|ffff]}{color[ffff]}……
024	把{color[0400]}{[0001|1d00]}自己的連接面{[0001|ffff]}{color[ffff]}和\n{color[0400]}{[0001|1d00]}連接對象的連接面{[0001|ffff]}{color[ffff]}設定為{color[0400]}{[0001|1d00]}中央{[0001|ffff]}{color[ffff]}，\n讓立方體能連接在支架的中心。
025	關閉這個畫面。
026	關閉設定畫面～
027	接著，把立方體物件小節點\n{color[0400]}{[0001|1d00]}連接{[0001|ffff]}{color[ffff]}到作為支架的\n球體物件小節點上。
028	那麼，我們去確認看看\n變得怎麼樣了吧～！
029	請穿過第一個場地，\n試著站到黃色蹺蹺板上！
030	看起來雖然是蹺蹺板的樣子……
031	但是站上去卻完全不會動！
032	這樣才不是蹺蹺板！\n……你說是吧。
033	那麼，我們來設計程式……\n讓這個冒牌貨的蹺蹺板\n化身為真正的蹺蹺板吧！
034	要讓他像蹺蹺板一樣擺動……
035	就需要{color[0400]}{[0001|1d00]}特別的連接方式{[0001|ffff]}{color[ffff]}！
036	因此～
037	請從{[0001|1d00]}物件{[0001|ffff]}{[0001|0700]}{[0001|ffff]}{[0001|1d00]}連接零件{[0001|ffff]}\n{[0001|0700]}{[0001|ffff]}{[0001|1d00]}鉸鍊連接{[0001|ffff]}{[0001|0700]}{[0001|ffff]}{[0001|1d00]}Z軸 鉸鍊{[0001|ffff]}裡\n叫出{color[0400]}{[0001|1d00]}鉸鍊連接小節點{[0001|ffff]}{color[ffff]}！
038	嗨！大家好！
039	今天也要骨碌碌地轉動喔～～！
040	只要把這個鉸鍊連接小節點\n{color[0400]}{[0001|1d00]}夾在物件中間連接{[0001|ffff]}{color[ffff]}……
041	就可以讓連接的物件\n{color[0400]}{[0001|1d00]}骨碌碌地轉動{[0001|ffff]}{color[ffff]}！
042	是的！\n你說的沒錯！
043	把我像三明治一樣夾在中間～～！\n一起骨碌碌地跳舞吧～！
044	那麼，{color[0400]}{[0001|1d00]}解除{[0001|ffff]}{color[ffff]}剛剛立方體物件小節點\n和球體物件小節點的{color[0400]}{[0001|1d00]}連接{[0001|ffff]}{color[ffff]}……
045	把鉸鍊連接小節點\n放在他們的中間。
046	接著，先把{color[0400]}{[0001|1d00]}立方體物件小節點{[0001|ffff]}{color[ffff]}\n{color[0400]}{[0001|1d00]}連接{[0001|ffff]}{color[ffff]}到{color[0400]}{[0001|1d00]}鉸鍊連接小節點{[0001|ffff]}{color[ffff]}。
047	再把{color[0400]}{[0001|1d00]}鉸鍊連接小節點{[0001|ffff]}{color[ffff]}\n{color[0400]}{[0001|1d00]}連接{[0001|ffff]}{color[ffff]}到{color[0400]}{[0001|1d00]}球體物件小節點{[0001|ffff]}{color[ffff]}……
048	很好！\n這樣{[0001|1d00]}{color[0400]}立方體{color[ffff]}{[0001|ffff]}就會\n骨碌碌地轉動了～
049	骨碌碌～
050	來，去確認看看\n變得怎麼樣了吧！
051	好了，跟剛才一樣，\n試著站到黃色蹺蹺板上！
052	骨碌碌地……
053	……轉起來了……\n但是轉動的幅度過大，\n已經不能說是蹺蹺板了……
054	我們再把他設計得\n更像蹺蹺板一點吧！
055	OKOK！\n你想要讓他更像蹺蹺板是嗎！
056	那就調整一下我的{color[0400]}{[0001|1d00]}範圍{[0001|ffff]}{color[ffff]}吧～～～！
057	那麼，請打開\n鉸鍊連接小節點的設定畫面。
057-01	在這個{color[0400]}{[0001|1d00]}範圍{[0001|ffff]}{color[ffff]}裡，可以設定物件\n{color[0400]}{[0001|1d00]}骨碌碌地轉動時的角度範圍{[0001|ffff]}{color[ffff]}。
058	把左邊的滑桿設定為{color[0400]}{[0001|1d00]}-45.00{[0001|ffff]}{color[ffff]}，\n右邊的滑桿設定為{color[0400]}{[0001|1d00]}45.00{[0001|ffff]}{color[ffff]}。
059	這樣骨碌碌地轉動的{color[0400]}{[0001|1d00]}範圍{[0001|ffff]}{color[ffff]}\n就變成{color[0400]}{[0001|1d00]}-45°{[0001|ffff]}{color[ffff]}到{color[0400]}{[0001|1d00]}45°{[0001|ffff]}{color[ffff]}了！
060	關閉設定畫面……
061	去確認看看吧！
062	來吧，試著站到黃色蹺蹺板上！
063	太棒了！\n立方體像蹺蹺板一樣動起來了～！
064	這就是\n鉸鍊連接小節點的厲害之處！
065	如果你覺得確認清楚了，\n就回去程式設計畫面吧～
066	那麼～～這樣就～～
067	完成第4步驟了！
068-00	……恭喜你。
068-01	恭喜啊～～～！！
068-02	……骨碌碌。
069	這次我們用鉸鍊連接小節點\n設計了蹺蹺板的機關。
070	在下個步驟中，\n我們還會製作\n其他的特殊機關喔～！
071	那麼就下個步驟再見吧！
Lesson_2DAction_04.msbt
000	歡迎你來到\nGO! GO! 運動競技的第5步驟～！
001	老樣子，\n我們來複習一下上次的內容吧！
002	請穿過第一個場地，\n試著站到黃色蹺蹺板上！
003	沒錯！\n我們用{color[0400]}{[0001|1d00]}鉸鍊連接小節點{[0001|ffff]}{color[ffff]}\n製作了蹺蹺板的機關。
004	在這個步驟中，\n我們要設計的機關是\n{color[0400]}{[0001|1d00]}可以推動的箱子{[0001|ffff]}{color[ffff]}喔！
005	那麼，\n請你跟我一起說。
006	到程式設計畫面去～～
007	GO! GO!
008	首先來製作場地。
009	請叫出{[0001|1d00]}{color[0400]}立方體物件小節點{color[ffff]}{[0001|ffff]}！
010	然後，把這個物件小節點\n調整成場地的大小，\n放到藍色框框的位置。
011	打開物件小節點的設定畫面吧！
012	把{color[0400]}{[0001|1d00]}狀態{[0001|ffff]}{color[ffff]}設定為\n只有{color[0400]}{[0001|1d00]}能看見{[0001|ffff]}{color[ffff]}、{color[0400]}{[0001|1d00]}能接觸{[0001|ffff]}{color[ffff]}是{color[0400]}{[0001|1d00]}開啟{[0001|ffff]}{color[ffff]}。
013	設定完成～！
014	接著是製作{color[0400]}{[0001|1d00]}可以推動的箱子{[0001|ffff]}{color[ffff]}……\n叫出另一個{color[0400]}{[0001|1d00]}立方體物件小節點{[0001|ffff]}{color[ffff]}吧。
015	……嗨。\n我不擅長應付喜歡「強推」的人。
016	把這個物件小節點\n放到場地的上方……
017	打開設定畫面！
018	把{color[0400]}{[0001|1d00]}狀態{[0001|ffff]}{color[ffff]}設定為\n只有{color[0400]}{[0001|1d00]}能看見{[0001|ffff]}{color[ffff]}、{color[0400]}{[0001|1d00]}能接觸{[0001|ffff]}{color[ffff]}、{color[0400]}{[0001|1d00]}能移動{[0001|ffff]}{color[ffff]}是{color[0400]}{[0001|1d00]}開啟{[0001|ffff]}{color[ffff]}。
019	為了讓箱子變得更明顯，\n打開{color[0400]}{[0001|1d00]}顏色{[0001|ffff]}{color[ffff]}，把他的顏色換掉吧。
020	設定為{color[0400]}{[0001|1d00]}水藍色{[0001|ffff]}{color[ffff]}吧～
021	請關閉設定畫面！
022	去確認一下吧～！
023	試著通過蹺蹺板，\n前往下一個場地。
025	推看看這個{color[0400]}{[0001|1d00]}水藍色箱子{[0001|ffff]}{color[ffff]}吧！
026	就這樣把箱子推下場地。
027	箱子掉下去了～
028	呃……\n箱子當然會掉下去……
029	不過在這個機關中，\n我們希望能讓箱子在被推到場地外時，\n也能保持{color[0400]}{[0001|1d00]}不會掉下去{[0001|ffff]}{color[ffff]}的狀態！
030	那麼，就來設計程式吧！
031	想要讓箱子可以被推動……\n又不會從場地上掉下去……
032	看來我們又需要\n{color[0400]}{[0001|1d00]}特別的連接方式{[0001|ffff]}{color[ffff]}了！
033	請選擇{[0001|1d00]}物件{[0001|ffff]}{[0001|0700]}{[0001|ffff]}{[0001|1d00]}連接零件{[0001|ffff]}\n{[0001|0700]}{[0001|ffff]}{[0001|1d00]}滑動連接{[0001|ffff]}{[0001|0700]}{[0001|ffff]}{[0001|1d00]}X軸 滑動{[0001|ffff]}，\n叫出{color[0400]}{[0001|1d00]}滑動連接小節點{[0001|ffff]}{color[ffff]}。
034	你就是大家在說的那個程式設計師吧！
035	我叫做……\n滑動連接小節點！
036	……我、我！\n我會一輩子追隨你！
037	只要把這個滑動連接小節點\n{color[0400]}{[0001|1d00]}夾在物件中間連接{[0001|ffff]}{color[ffff]}……
038	就可以讓連接的物件\n{color[0400]}{[0001|1d00]}向固定的方向移動{[0001|ffff]}{color[ffff]}！
039	沒錯！
040	{[0201]}！\n請你先試著使用我吧！
041	那麼來試看看吧。
043	把箱子……\n也就是{color[0400]}{[0001|1d00]}上方的物件小節點{[0001|ffff]}{color[ffff]}\n連接到{color[0400]}{[0001|1d00]}滑動連接小節點{[0001|ffff]}{color[ffff]}。
044	然後，把{color[0400]}{[0001|1d00]}滑動連接小節點{[0001|ffff]}{color[ffff]}\n連接到場地……\n也就是{color[0400]}{[0001|1d00]}下方的物件小節點{[0001|ffff]}{color[ffff]}。
045	OK！
046	我是{[0001|1d00]}{color[0400]}X方向{color[ffff]}{[0001|ffff]}……
047	也就是說箱子\n{color[0400]}{[0001|1d00]}只會向左右{[0001|ffff]}{color[ffff]}自由地移動！
048	{[0201]}！\n請你看著我！
049	來，去確認看看\n會變成怎麼樣吧！
050	到箱子那邊去，\n試著推動箱子吧～
051	哦哦～\n箱子像滑行一樣～～～\n浮在空中飛走了～
052	真是有趣呢！
053	但就這樣飛走的話，\n使用上會不太方便……\n我們來調整一下吧。
054	來，到程式設計畫面去！
055	{[0201]}，\n我的表現如何！？
056	咦！？\n你說箱子飛太遠了，\n不能作為機關使用！？
057	……對不起。\n……請讓我下跪賠罪！
058	呃，不用做到那種程度啦。
059	來吧，{[0201]}。\n請打開滑動連接小節點的設定畫面。
060	在這個{color[0400]}{[0001|1d00]}範圍{[0001|ffff]}{color[ffff]}裡，可以設定\n連接的物件{color[0400]}{[0001|1d00]}要移動的範圍{[0001|ffff]}{color[ffff]}。
061	把左邊的滑桿設定為{color[0400]}{[0001|1d00]}0.00{[0001|ffff]}{color[ffff]}，\n右邊的滑桿設定為{color[0400]}{[0001|1d00]}3.00{[0001|ffff]}{color[ffff]}！
062	關閉設定畫面！
063	……這是我補救的機會……
064	{[0201]}！\n我……我……！\n我這次會加油的！！
065	來，到遊戲畫面看看吧！
066	試著推動箱子。
067	箱子在途中停住了！
068	這樣就能作為機關使用了呢～！
069	好，到程式設計畫面去吧～
070	……怎麼樣？
071	哦哦！\n感覺很順利呢！
072	沒有讓{[0201]}失望，\n真是太好了……！！
073	好了，最後我們來完成\n新場地剩下的部分吧！
074	請複製這個物件小節點！
075	然後調整大小，\n放到藍色框框裡。
076	接著，把這個場地\n也複製起來……
077	放到下面一點的地方吧。
078	再複製一次！
079	放到更下面。
080	這樣一來，\n一個階梯關卡就完成囉！
081	走吧，\n到遊戲畫面確認看看！
082	推動箱子，\n把箱子當作立足處，\n到階梯關卡去看看吧！
083	遊戲場地變得豐富起來了呢～！
084	如果你覺得確認清楚了，\n就回去程式設計畫面吧。
085	那麼～～這樣就～～
086	完成第5步驟了！
087-00	恭喜你！！
087-01	……恭喜。
087-02	「強推」也很重要呢。
088	這次我們使用滑動連接小節點，\n製作出可以推動的箱子。
089	下次我們要設計更專業的機關喔～
090	敬請期待下個步驟～！
Lesson_2DAction_05.msbt
000	等你很久囉～！
001	GO! GO! 運動競技\n也終於進入後半段了！
002	還有很多機關在等著我們設計喔！
003	這次～
004	我們要設計{color[0400]}{[0001|1d00]}會移動的立足處{[0001|ffff]}{color[ffff]}！
005	老樣子，\n來一句那個口號吧～
006	向程式設計畫面～～
007	GO! GO!
008	在製作會移動的立足處之前，\n我們先來解決一個問題……
009	每次到遊戲畫面確認時，\n都要先通過前面的場地……\n你不覺得很麻煩嗎～？
010	不如我們就來改造程式，\n直接傳送到想確認的地方！
011	說到傳送～
012	就要叫出\n{color[0400]}{[0001|1d00]}傳送物件入口小節點{[0001|ffff]}{color[ffff]}！
013	門……真理的尋求者啊……\n懷抱信心，向那條道路前進吧。
014	把傳送物件入口小節點\n{[0001|1d00]}{color[0400]}疊在人小節點{color[ffff]}{[0001|ffff]}上面……
015	打開設定畫面！
016	把{color[0400]}{[0001|1d00]}傳送ID{[0001|ffff]}{color[ffff]}設定為{color[0400]}{[0001|1d00]}H{[0001|ffff]}{color[ffff]}。
017	打開{color[0400]}{[0001|1d00]}要傳送什麼？{[0001|ffff]}{color[ffff]}……
018	設定為只有{color[0400]}{[0001|1d00]}人{[0001|ffff]}{color[ffff]}是{color[0400]}{[0001|1d00]}開啟{[0001|ffff]}{color[ffff]}。
019	關閉這個畫面……
020	關閉設定畫面吧！
021	接著請在階梯關卡的所在處\n叫出{color[0400]}{[0001|1d00]}傳送物件出口小節點{[0001|ffff]}{color[ffff]}！
022	門門……真理的尋求者啊……\n勇往直前才是\n突破未知道路的良策。
023	把傳送物件出口小節點\n放在我們的傳送目的地。
024	請打開設定畫面！
025	把{color[0400]}{[0001|1d00]}傳送ID{[0001|ffff]}{color[ffff]}設定為{color[0400]}{[0001|1d00]}H{[0001|ffff]}{color[ffff]}吧！
026	關閉設定畫面。
027	這樣一來，當遊戲開始時，\n人就會被傳送到階梯關卡！
028	去看看吧。
029	一眨眼就到\n階梯關卡了～！
030	這樣就能輕鬆地確認了呢！
031	那麼，我們回到這次的主題，\n來製作會移動的立足處吧～！
032	為了製作會移動的立足處，\n我們要使用上次也有登場的\n{color[0400]}{[0001|1d00]}滑動連接小節點{[0001|ffff]}{color[ffff]}！
033	請先叫出\n{[0001|1d00]}{color[0400]}球體物件小節點{color[ffff]}{[0001|ffff]}！
034	接著，把{[0001|1d00]}{color[0400]}物件小節點{color[ffff]}{[0001|ffff]}\n放到藍色框框的位置。
035	然後……\n打開{[0001|1d00]}{color[0400]}球體物件小節點{color[ffff]}{[0001|ffff]}的設定畫面～
036	把{color[0400]}{[0001|1d00]}狀態{[0001|ffff]}{color[ffff]}設定為\n只有{color[0400]}{[0001|1d00]}能看見{[0001|ffff]}{color[ffff]}是{color[0400]}{[0001|1d00]}開啟{[0001|ffff]}{color[ffff]}！
037	OK!
038	接下來，把要作為立足處的\n{color[0400]}{[0001|1d00]}立方體物件小節點{[0001|ffff]}{color[ffff]}叫出來！
039	……嗨，\n我會載著你跑喔。
040	把這個物件小節點\n調整為立足處的形狀，\n放到藍色框框的位置。
041	然後……\n打開物件小節點的設定畫面！
042	把{color[0400]}{[0001|1d00]}狀態{[0001|ffff]}{color[ffff]}設定為\n只有{color[0400]}{[0001|1d00]}能看見{[0001|ffff]}{color[ffff]}、{color[0400]}{[0001|1d00]}能接觸{[0001|ffff]}{color[ffff]}、{color[0400]}{[0001|1d00]}能移動{[0001|ffff]}{color[ffff]}是開啟。
043	打開{color[0400]}{[0001|1d00]}顏色{[0001|ffff]}{color[ffff]}～
044	設定為{color[0400]}{[0001|1d00]}黃綠色{[0001|ffff]}{color[ffff]}吧！
045	接著，打開{color[0400]}{[0001|1d00]}連接面{[0001|ffff]}{color[ffff]}。
046	把{color[0400]}{[0001|1d00]}自己的連接面{[0001|ffff]}{color[ffff]}和\n{color[0400]}{[0001|1d00]}連接對象的連接面{[0001|ffff]}{color[ffff]}都設定為{color[0400]}{[0001|1d00]}中央{[0001|ffff]}{color[ffff]}。
047	關閉這個畫面～
048	設定完成了～！
049	接下來，請叫出\n{color[0400]}{[0001|1d00]}Y軸 滑動{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1d00]}滑動連接小節點{[0001|ffff]}{color[ffff]}！
050	{[0201]}……！\n你還需要我……對吧！？
051	我……\n不管發生什麼事！\n都會一輩子追隨你！
051-01	我這次是{[0001|1d00]}{color[0400]}Y軸 滑動{color[ffff]}{[0001|ffff]}，\n可以讓連接的物件{[0001|1d00]}{color[0400]}上下{color[ffff]}{[0001|ffff]}移動！
052	把滑動連接小節點\n放到藍色框框的位置……
053	把{color[0400]}{[0001|1d00]}立方體物件小節點{[0001|ffff]}{color[ffff]}\n連接到{color[0400]}{[0001|1d00]}滑動連接小節點{[0001|ffff]}{color[ffff]}。
054	接著，把{color[0400]}{[0001|1d00]}滑動連接小節點{[0001|ffff]}{color[ffff]}\n連接到{color[0400]}{[0001|1d00]}球體物件小節點{[0001|ffff]}{color[ffff]}～
055	好了，這樣2個物件小節點就把\n{color[0400]}{[0001|1d00]}滑動連接小節點夾在中間連接{[0001|ffff]}{color[ffff]}起來了!
056	來，我們去確認看看……\n會變成什麼樣子吧！
057	啊啊～\n立足處掉下去了……
057-01	如果沒看清楚，\n就按下{color[0400]}{[0001|1d00]}重來{[0001|ffff]}{color[ffff]}確認看看吧。
058	我們要把程式設計成\n讓這個立足處可以{color[0400]}{[0001|1d00]}上下移動{[0001|ffff]}{color[ffff]}！
059	去程式設計畫面吧～
060	你想讓立足處……\n也就是立方體上下移動對吧！
061	那麼……\n請把數值輸入到我的{[0001|1d00]}輸入端{[0001|ffff]}！
062	我會依照{color[0400]}{[0001|1d00]}輸入端接收到的數值{[0001|ffff]}{color[ffff]}，\n讓立方體{color[0400]}{[0001|1d00]}偏移{[0001|ffff]}{color[ffff]}！
063	來試看看是怎麼一回事吧。
064	首先叫出{color[0400]}{[0001|1d00]}常數小節點{[0001|ffff]}{color[ffff]}。
065	你好！我是常數小節點！\n我絕不移動！絕不動搖！
066	請試著把這個常數小節點\n連接到滑動連接小節點！
067	這樣一來，就會輸入{color[0400]}{[0001|1d00]}1.00{[0001|ffff]}{color[ffff]}\n到滑動連接小節點。
068	輸入數值到滑動連接小節點後，\n立足處會變成什麼樣子呢……？\n來確認看看吧！
069	啊，立足處不會掉落了！
070	而且他還被{color[0400]}{[0001|1d00]}固定{[0001|ffff]}{color[ffff]}在\n和球體{color[0400]}{[0001|1d00]}偏離的位置{[0001|ffff]}{color[ffff]}！
071	就像這樣，\n只要輸入數值到滑動連接小節點……
072	他就會依照輸入的數值大小，\n{color[0400]}{[0001|1d00]}偏移連接的物件{[0001|ffff]}{color[ffff]}！
073	那麼，我們就利用這項特性，\n來設計出{color[0400]}{[0001|1d00]}會移動的立足處{[0001|ffff]}{color[ffff]}吧！
074	請刪除連接常數小節點和\n滑動連接小節點的配對線。
075	然後……改成連接\n{color[0400]}{[0001|1d00]}可以輸出變數的小節點{[0001|ffff]}{color[ffff]}。
077	{color[0400]}{[0001|1d00]}計數器小節點{[0001|ffff]}{color[ffff]}！把他叫出來吧！
078	我會不停地計算數值，\n輸出計算結果。
079	把常數小節點連接到\n計數器小節點的{color[0400]}{[0001|1d00]}增加端口{[0001|ffff]}{color[ffff]}！
080	這樣計數器小節點\n就會{color[0400]}{[0001|1d00]}持續計算數值{[0001|ffff]}{color[ffff]}了。
081	接著，\n打開計數器小節點的設定畫面吧～
082	把{color[0400]}{[0001|1d00]}模式{[0001|ffff]}{color[ffff]}設定為{color[0400]}{[0001|1d00]}來回{[0001|ffff]}{color[ffff]}。
083	把{color[0400]}{[0001|1d00]}計算範圍{[0001|ffff]}{color[ffff]}的\n左邊的滑桿設定為{color[0400]}{[0001|1d00]}-3{[0001|ffff]}{color[ffff]}，\n右邊的滑桿設定為{color[0400]}{[0001|1d00]}3{[0001|ffff]}{color[ffff]}。
084	這樣計數器小節點\n就會在{color[0400]}{[0001|1d00]}-3{[0001|ffff]}{color[ffff]}到{color[0400]}{[0001|1d00]}3{[0001|ffff]}{color[ffff]}之間\n{color[0400]}{[0001|1d00]}來回計算數值{[0001|ffff]}{color[ffff]}了。
085	關閉設定畫面吧。
086	那麼，把計數器小節點\n連接到滑動連接小節點！
087	到遊戲畫面去看看……\n動作會變成怎麼樣！
088	……立足處正在瘋狂地移動！
089	移動得這麼激烈……\n不管怎麼說都太誇張了。
090	我們回程式設計畫面\n調整一下吧！
091	由於常數小節點的數值是{color[0400]}{[0001|1d00]}1.00{[0001|ffff]}{color[ffff]}……
092	所以計數器小節點輸出的數值\n會以每次計算加{color[0400]}{[0001|1d00]}1.00{[0001|ffff]}{color[ffff]}的速度增加。
093	但是，這樣的增加速度有點太快了……
094	請打開常數小節點的設定畫面！
095	使用數字鍵盤，\n把{color[0400]}{[0001|1d00]}要輸出多少？{[0001|ffff]}{color[ffff]}設定為{color[0400]}{[0001|1d00]}0.03{[0001|ffff]}{color[ffff]}！
096	關閉設定畫面……
097	走吧，去確認看看！
098	移動速度\n變得剛剛好～！
099	接下來……\n我們要讓中間的白色球體\n從畫面上消失。
100	去程式設計畫面\n把他隱藏起來吧！
101	請打開球體物件小節點的設定畫面。
102	把{color[0400]}{[0001|1d00]}狀態{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1d00]}能看見{[0001|ffff]}{color[ffff]}\n設定為{color[0400]}{[0001|1d00]}關閉{[0001|ffff]}{color[ffff]}吧！
103	關閉設定畫面～
104	好了，來確認一下吧！
105	白色球體消失了～！
106	那麼，最後我們來製作\n搭上會移動的立足處後\n可以抵達的新場地吧！
107	複製這個場地……
108	把他放大後，\n放到藍色框框的位置～！
109	來，去看看吧～！
110	請搭上會移動的立足處，\n到上面去看看。
111	新場地登場囉！
112	隨著各種場地的出現，\n遊戲內容變得越來越豐富了呢！
113	我們回程式設計畫面吧。
114	那麼～這樣就～
115	完成第6步驟了！
116-00	真厲害！！！
116-01	恭喜你。
116-02	……恭喜。
117	這次我們設計了\n有點複雜的機關！
118	會移動的立足處……\n真有遊戲的感覺！\n我興奮到不行呢～
119	下次我們要設計一種\n可以讓人出拳的{color[0400]}{[0001|1d00]}道具{[0001|ffff]}{color[ffff]}，\n讓遊戲變得更有意思！
120	雖然難度有點高，\n但{[0201]}一定沒問題！
121	那麼，\n在下個步驟再見啦～
Lesson_2DAction_06.msbt
000	這裡是GO! GO! 運動競技的\n第7步驟～！
001	上次我們設計了\n{[0001|1d00]}{color[0400]}會移動的立足處{color[ffff]}{[0001|ffff]}！
001-01	隨著各種場地特殊機關的出現，\n遊戲內容變得越來越豐富！\n而這次……
002	我們要來設計{color[0400]}{[0001|1d00]}道具{[0001|ffff]}{color[ffff]}！
003	這個道具可不簡單喔！\n……人在取得道具後，\n就{color[0400]}{[0001|1d00]}能出拳擊退外星人{[0001|ffff]}{color[ffff]}！
004	這次的步驟有點困難，\n需要花點時間來解說，\n不過{[0201]}一定沒問題！
005	快來吧～\n到程式設計畫面去～～～
006	預備！
007	GO! GO!
008	首先，為了方便我們確認，\n移動一下人的傳送位置吧。
009	把這個傳送物件出口小節點\n移動到藍色框框的位置。
010	這樣當遊戲開始時，\n人就會被傳送到\n會移動的立足處之後的場地！
011	來確認一下吧！
012	人被傳送過來了呢！
013	那麼，我們就在這個場地上\n放一些外星人吧！
014	到程式設計畫面去～
015	不過在放外星人之前……\n這個場地看起來有點太單調了。
016	來做個{[0001|1d00]}{color[0400]}台階{color[ffff]}{[0001|ffff]}吧。
017	複製這個場地……
018	調整大小後，\n把他放到場地上。
019	這樣場地上就會出現台階了！
020	好，接下來……\n請從{color[0400]}{[0001|1d00]}圓形時尚物件{[0001|ffff]}{color[ffff]}裡叫出\n{color[0400]}{[0001|1d00]}外星人{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1d00]}時尚物件小節點{[0001|ffff]}{color[ffff]}。
021	用一堆外星人\n填滿這裡吧♥
022	把時尚物件小節點\n放到場地上……
023	打開時尚物件小節點的設定畫面。
024	把{color[0400]}{[0001|1d00]}狀態{[0001|ffff]}{color[ffff]}設定為\n只有{color[0400]}{[0001|1d00]}能看見{[0001|ffff]}{color[ffff]}、{color[0400]}{[0001|1d00]}能接觸{[0001|ffff]}{color[ffff]}、\n{color[0400]}{[0001|1d00]}會損壞{[0001|ffff]}{color[ffff]}、{color[0400]}{[0001|1d00]}能破壞{[0001|ffff]}{color[ffff]}是{color[0400]}{[0001|1d00]}開啟{[0001|ffff]}{color[ffff]}。
025	把{[0001|1d00]}{color[0400]}轉動{color[ffff]}{[0001|ffff]}的{[0001|1d00]}{color[0400]}Y軸{color[ffff]}{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}90.00°{color[ffff]}{[0001|ffff]}，\n讓外星人面向左方。
026	這樣就設定好了～！
027	複製時尚物件小節點……
028	把第2個外星人放在旁邊吧！
029	繼續複製……
030	這次放在台階上。
031	讓外星人\n不斷地增殖。
032	走下台階後的地方也放一個吧～！
033	滿滿的外星人♥
034	外星人的排列方式似乎有種特殊的規律，\n只是看著就能感受到心靈的震撼與刺激……
035	超有才華的！
036	走吧，\n我們去看看外星人！
037	有很多外星人呢～
038	但是……\n現在還無法擊退外星人！
040	我們要設計出對抗外星人的武器……\n也就是讓人{color[0400]}{[0001|1d00]}變得可以出拳的道具{[0001|ffff]}{color[ffff]}！
041	走吧，去程式設計畫面！
042	首先，我們需要放\n一顆{color[0400]}{[0001|1d00]}蘋果{[0001|ffff]}{color[ffff]}當作道具。
043	請從{color[0400]}{[0001|1d00]}圓形時尚物件{[0001|ffff]}{color[ffff]}裡叫出\n{color[0400]}{[0001|1d00]}蘋果{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1d00]}時尚物件小節點{[0001|ffff]}{color[ffff]}。
044	把蘋果的時尚物件小節點\n放在空中……
045	選擇蘋果的時尚物件小節點，\n打開他的設定畫面。
046	把{color[0400]}{[0001|1d00]}狀態{[0001|ffff]}{color[ffff]}設定為\n只有{color[0400]}{[0001|1d00]}能看見{[0001|ffff]}{color[ffff]}、{color[0400]}{[0001|1d00]}能接觸{[0001|ffff]}{color[ffff]}、\n{color[0400]}{[0001|1d00]}會損壞{[0001|ffff]}{color[ffff]}是{color[0400]}{[0001|1d00]}開啟{[0001|ffff]}{color[ffff]}。
047	關閉設定畫面吧。
048	好了，這樣蘋果就放好了！
049	接下來……\n打開人小節點的設定畫面。
050	然後，把{color[0400]}{[0001|1d00]}狀態{[0001|ffff]}{color[ffff]}的\n{color[0400]}{[0001|1d00]}能破壞{[0001|ffff]}{color[ffff]}設定為{color[0400]}{[0001|1d00]}開啟{[0001|ffff]}{color[ffff]}。
051	關閉設定畫面。
051-01	這樣人應該就可以破壞蘋果了！
052	走吧，去確認一下！
053	請試著拿到蘋果！
054	做得好！\n拿到蘋果了！
055	不過，想也知道……\n即使拿到了蘋果，\n人還是不能出拳。
056	那麼……終於要進入正題囉！\n我們來設計讓人拿到蘋果後，\n就會變得{color[0400]}{[0001|1d00]}可以出拳{[0001|ffff]}{color[ffff]}的程式吧！
057	拿到蘋果……
058	換句話說，\n就是{color[0400]}{[0001|1d00]}蘋果損壞了{[0001|ffff]}{color[ffff]}。
059	也就是說，只要知道{color[0400]}{[0001|1d00]}蘋果是否損壞{[0001|ffff]}{color[ffff]}，\n我們就能夠判定人{color[0400]}{[0001|1d00]}有沒有拿到蘋果{[0001|ffff]}{color[ffff]}。
060	所以……\n我們就叫出那個小節點吧！
061	請叫出{color[0400]}{[0001|1d00]}物件損壞時小節點{[0001|ffff]}{color[ffff]}～
062	什麼？\n又有物件損壞了嗎？
063	如果有物件損壞，我就會告訴你喔！
064	把物件損壞時小節點\n移動到上面……
065	打開物件損壞時小節點的設定畫面。
066	打開{color[0400]}{[0001|1d00]}要確認什麼？{[0001|ffff]}{color[ffff]}。
067	設定為只有{color[0400]}{[0001|1d00]}蘋果{[0001|ffff]}{color[ffff]}是{color[0400]}{[0001|1d00]}開啟{[0001|ffff]}{color[ffff]}。
068	關閉這個畫面。
069	設定完成！
070	如果蘋果損壞了\n就告訴你，對吧？
071	不過……醜話先說在前頭。\n我{color[0400]}{[0001|1d00]}只會{[0001|ffff]}{color[ffff]}告訴你{color[0400]}{[0001|1d00]}損壞的瞬間{[0001|ffff]}{color[ffff]}，\n之後的事情我可管不著喔。
072	沒錯！
073	物件損壞時小節點只會在\n{color[0400]}{[0001|1d00]}蘋果損壞的瞬間{[0001|ffff]}{color[ffff]}輸出訊號。
074	但是這一次……不只是損壞的瞬間，\n我們需要他在{[0001|1d00]}{color[0400]}損壞後持續{color[ffff]}{[0001|ffff]}輸出訊號。
075	所以……來把程式設計成\n{color[0400]}{[0001|1d00]}可以記住{[0001|ffff]}{color[ffff]}蘋果損壞這件事，\n並在之後{color[0400]}{[0001|1d00]}持續輸出訊號{[0001|ffff]}{color[ffff]}吧！
076	請從{[0001|1d00]}中間{[0001|ffff]}{[0001|0700]}{[0001|ffff]}{[0001|1d00]}旗標、計數器、隨機\n{[0001|ffff]}{[0001|0700]}{[0001|ffff]}{[0001|1d00]}旗標{[0001|ffff]}裡叫出{color[0400]}{[0001|1d00]}旗標小節點{[0001|ffff]}{color[ffff]}！
077	……
077-01	……
078	……Zzz……
079	雖然旗標小節點\n現在正呼呼大睡……
080	但只要接收到輸入的訊號，\n他就會醒來。
081	我們把旗標小節點\n醒來的狀態稱為{color[0400]}{[0001|1d00]}開啟{[0001|ffff]}{color[ffff]}。
081000	那麼，請把旗標小節點放到\n物件損壞時小節點的旁邊。
082	為了讓{color[0400]}{[0001|1d00]}旗標小節點{[0001|ffff]}{color[ffff]}\n在蘋果損壞時{color[0400]}{[0001|1d00]}開啟{[0001|ffff]}{color[ffff]}……
083	把物件損壞時小節點和\n旗標小節點的{color[0400]}{[0001|1d00]}開啟端口{[0001|ffff]}{color[ffff]}連接起來！
084	……\n蘋果損壞時，記得叫醒我喔。
084-01	當物件損壞時小節點\n輸入訊號給旗標小節點後，\n旗標小節點會變為{color[0400]}{[0001|1d00]}開啟{[0001|ffff]}{color[ffff]}狀態。
085	{color[0400]}{[0001|1d00]}開啟狀態下的旗標小節點{[0001|ffff]}{color[ffff]}\n會在開啟的期間{color[0400]}{[0001|1d00]}持續輸出訊號{[0001|ffff]}{color[ffff]}。
086	也就是說，\n他在{color[0400]}{[0001|1d00]}蘋果損壞後，\n會持續輸出訊號{[0001|ffff]}{color[ffff]}。
087	那麼……\n我們就用這個旗標小節點，\n讓人變得可以出拳吧。
087-01	我們想要把配對線連接到\n{color[0400]}{[0001|1d00]}人小節點{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1d00]}動作端口{[0001|ffff]}{color[ffff]}……
088	但人小節點的位置有點遠，\n連接配對線時不太方便呢。
089	所以……這裡要叫出\n能方便我們{color[0400]}{[0001|1d00]}把配對線\n連接到遠處的小節點{[0001|ffff]}{color[ffff]}！
090	請從{[0001|1d00]}中間{[0001|ffff]}{[0001|0700]}{[0001|ffff]}{[0001|1d00]}程式整理{[0001|ffff]}{[0001|0700]}{[0001|ffff]}{[0001|1d00]}無線傳送：入口{[0001|ffff]}裡\n叫出{[0001|1d00]}{color[0400]}無線傳送入口小節點{color[ffff]}{[0001|ffff]}！
091	這裡是入口A。
092	我會在旗標小節點醒來後傳遞訊號，\n請講。
093	這個{color[0400]}{[0001|1d00]}無線傳送入口小節點{[0001|ffff]}{color[ffff]}\n就像他的名字一樣，\n可以{color[0400]}{[0001|1d00]}傳送{[0001|ffff]}{color[ffff]}配對線到遠處。
093000	把無線傳送入口小節點\n放在旗標小節點的旁邊。
094	然後，把旗標小節點和\n無線傳送入口小節點連接在一起。
095	這樣一來，\n從旗標小節點連接出去的\n配對線就完成傳送準備囉！
096	那麼，把配對線\n傳送到這裡來吧。
097	請從{[0001|1d00]}中間{[0001|ffff]}{[0001|0700]}{[0001|ffff]}{[0001|1d00]}程式整理{[0001|ffff]}{[0001|0700]}{[0001|ffff]}{[0001|1d00]}無線傳送：出口{[0001|ffff]}裡\n叫出{[0001|1d00]}{color[0400]}無線傳送出口小節點{color[ffff]}{[0001|ffff]}！
098	這裡是出口A。
099	收到，旗標小節點醒來後，\n立刻傳遞訊號過來，請講。
100	剛才輸入到\n無線傳送入口小節點的訊號……
101	會被傳送到這邊的\n無線傳送出口小節點並輸出！
102	來吧，總之先把\n無線傳送出口小節點\n移動到藍色框框的位置。
103	好了，現在我們想要做的，\n是把程式設計成\n{color[0400]}{[0001|1d00]}蘋果損壞後，就可以出拳{[0001|ffff]}{color[ffff]}……
104	先來準備一下，\n讓人可以用{color[0400]}{[0001|1d00]}鍵{[0001|ffff]}{color[ffff]}出拳吧。
105	請叫出\n{color[0400]}{[0001|1d00]}{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1d00]}按鍵小節點{[0001|ffff]}{color[ffff]}。
106	嗨！\n出拳就是要連擊才過癮啊。\n我按～～～！
107	把按鍵小節點\n移動到藍色框框的位置。
107000	然後打開\n按鍵小節點的設定畫面！
107001	把{color[0400]}{[0001|1d00]}輸出的時機{[0001|ffff]}{color[ffff]}\n設定為{color[0400]}{[0001|1d00]}按下時{[0001|ffff]}{color[ffff]}！
107002	這樣按鍵小節點就{color[0400]}{[0001|1d00]}只會在\n按下鍵的瞬間輸出{[0001|ffff]}{color[ffff]}訊號！
107003	關閉設定畫面吧！
108	不過，我們並不是只想讓人\n可以在按下鍵時出拳……
109	而是想讓他在\n{color[0400]}{[0001|1d00]}拿到蘋果的情況下{[0001|ffff]}{color[ffff]}，\n{[0001|1d00]}{color[0400]}按下鍵時{color[ffff]}{[0001|ffff]}才會出拳～
110	所以……叫出{color[0400]}{[0001|1d00]}AND小節點{[0001|ffff]}{color[ffff]}吧！
111	沒問題沒問題！\n兩個都OK的話，我就會輸出訊號喔。
111000	把AND小節點\n移動到藍色框框的位置……
112	然後把{color[0400]}{[0001|1d00]}無線傳送出口小節點{[0001|ffff]}{color[ffff]}\n連接到{color[0400]}{[0001|1d00]}AND小節點{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1d00]}輸入1端口{[0001|ffff]}{color[ffff]}！
113	接著，把{color[0400]}{[0001|1d00]}按鍵小節點{[0001|ffff]}{color[ffff]}\n連接到{color[0400]}{[0001|1d00]}AND小節點{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1d00]}輸入2端口{[0001|ffff]}{color[ffff]}！
114	哦！\n{color[0400]}{[0001|1d00]}蘋果損壞{[0001|ffff]}{color[ffff]}是第一個條件……
115	嗯嗯！\n{color[0400]}{[0001|1d00]}按下鍵{[0001|ffff]}{color[ffff]}是第二個條件啊！
116	我只會在兩個條件\n都OK時輸出訊號喔！
117	那麼，把這個AND小節點和\n人小節點的{color[0400]}{[0001|1d00]}動作端口{[0001|ffff]}{color[ffff]}連接起來吧！
118	這樣{color[0400]}{[0001|1d00]}當蘋果損壞{[0001|ffff]}{color[ffff]}且{color[0400]}{[0001|1d00]}按下鍵時{[0001|ffff]}{color[ffff]}，\n訊號就會輸入到{color[0400]}{[0001|1d00]}動作端口{[0001|ffff]}{color[ffff]}。
119	那麼……\n請打開人小節點的設定畫面！
120	打開{color[0400]}{[0001|1d00]}動作{[0001|ffff]}{color[ffff]}。
121	在這裡可以設定\n當訊號輸入到人小節點的{[0001|1d00]}動作端口{[0001|ffff]}時，\n他{color[0400]}{[0001|1d00]}要做出什麼動作{[0001|ffff]}{color[ffff]}。
122	把他設定為{color[0400]}{[0001|1d00]}出拳{[0001|ffff]}{color[ffff]}吧！
123	關閉設定畫面……
124	辛苦你了！\n我們去確認一下……\n人能不能出拳了吧！
125	請先拿到蘋果！
126	然後，試著按下鍵！
127	可以出拳了～！
128	請試著重來一次。
128-01	請在拿到蘋果之前按下鍵，\n確認看看是否無法出拳～
128-02	在拿到蘋果之前都無法出拳呢！
128-03	你拿了蘋果喔，\n請重來一次吧。
129	好了……\n在拿到蘋果之後，\n雖然可以出拳了……
130	但這一擊……\n說到底只是花拳繡腿，\n沒有辦法擊退外星人！
131	我們就用程式的力量\n來提升拳頭的威力吧～！
132	那麼，\n要用拳頭破壞外星人……
133	首先就需要\n能夠{color[0400]}{[0001|1d00]}破壞物件{[0001|ffff]}{color[ffff]}的小節點。
134	所以……\n叫出{color[0400]}{[0001|1d00]}破壞物件小節點{[0001|ffff]}{color[ffff]}吧！
135	呵呵呵……\n有什麼事嗎？
136	你又想破壞物件了嗎……？\n呵呵……呵呵呵呵……
137	把破壞物件小節點\n稍微縮小一點。
138	然後打開\n破壞物件小節點的設定畫面吧！
139	把{color[0400]}{[0001|1d00]}狀態{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1d00]}能看見{[0001|ffff]}{color[ffff]}\n設定為{color[0400]}{[0001|1d00]}關閉{[0001|ffff]}{color[ffff]}……
140	打開{color[0400]}{[0001|1d00]}要破壞哪個物件？{[0001|ffff]}{color[ffff]}。
141	設定為只有{color[0400]}{[0001|1d00]}外星人{[0001|ffff]}{color[ffff]}是{color[0400]}{[0001|1d00]}開啟{[0001|ffff]}{color[ffff]}～
142	關閉這個畫面……
143	接著，打開{color[0400]}{[0001|1d00]}連接面{[0001|ffff]}{color[ffff]}！
144	想用拳頭破壞物件，\n就得把破壞物件小節點\n連接到{color[0400]}{[0001|1d00]}人的正面{[0001|ffff]}{color[ffff]}。
146	請把{color[0400]}{[0001|1d00]}自己的連接面{[0001|ffff]}{color[ffff]}設定為{color[0400]}{[0001|1d00]}X-{[0001|ffff]}{color[ffff]}\n{color[0400]}{[0001|1d00]}連接對象的連接面{[0001|ffff]}{color[ffff]}設定為{color[0400]}{[0001|1d00]}Z-{[0001|ffff]}{color[ffff]}～
147	關閉這個畫面。
148	設定完成了～！
150	那麼，把破壞物件小節點\n和人小節點連接在一起。
151	這樣破壞物件小節點\n就會連接在{color[0400]}{[0001|1d00]}人的正面{[0001|ffff]}{color[ffff]}。
152	也就是說，\n只要人的面前出現外星人，\n那個外星人就會損壞！
153	不過……這樣就會變成\n人只要靠近外星人，\n就可以破壞掉對方。
154	我們把程式設計成{color[0400]}{[0001|1d00]}只有在人出拳時{[0001|ffff]}{color[ffff]}，\n破壞物件小節點才會{color[0400]}{[0001|1d00]}破壞外星人{[0001|ffff]}{color[ffff]}吧。
155	出拳時……也就是這個\n{color[0400]}{[0001|1d00]}AND小節點輸出訊號的時候{[0001|ffff]}{color[ffff]}。
156	所以，請把AND小節點和\n破壞物件小節點連接在一起！
157	這樣人就可以\n用拳頭破壞外星人了！
158	走吧～！\n到遊戲畫面確認看看！
159	請試著拿到蘋果，\n用拳頭擊退外星人。
160	做得好！\n拳頭的威力提升了呢～！
161	這樣一來，讓人變得可以\n出拳的{color[0400]}{[0001|1d00]}道具{[0001|ffff]}{color[ffff]}就完成了！！
162	不過……\n還有件事讓我很在意……
163	{color[0400]}{[0001|1d00]}遊戲中的玩家{[0001|ffff]}{color[ffff]}……\n知道拿到蘋果後\n就可以出拳嗎～？
164	我們來修改一下程式，\n{color[0400]}{[0001|1d00]}讓遊戲中的玩家知道{[0001|ffff]}{color[ffff]}\n拿到蘋果就能出拳吧！
165	來！還差一點就完成囉！\n向程式設計畫面GO! GO!
166	好！\n說到向玩家傳達訊息……
167	就要叫出\n{color[0400]}{[0001|1d00]}附註解物件小節點{[0001|ffff]}{color[ffff]}！
168	每個人都是語言的魔法師。
169	只要簡單的一句話，\n就能讓人展露笑容。
171	把附註解物件小節點\n稍微放大一點，\n移動到上方吧。
172	打開附註解物件小節點的設定畫面！
173	把{color[0400]}{[0001|1d00]}狀態{[0001|ffff]}{color[ffff]}設定為\n只有{color[0400]}{[0001|1d00]}能看見{[0001|ffff]}{color[ffff]}是{color[0400]}{[0001|1d00]}開啟{[0001|ffff]}{color[ffff]}！
174	接著把{color[0400]}{[0001|1d00]}大小{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1d00]}Z{[0001|ffff]}{color[ffff]}設定為{color[0400]}{[0001|1d00]}0.10m{[0001|ffff]}{color[ffff]}，\n讓物件變薄。
175	接下來……\n讓這個附註解物件小節點\n顯示{color[0400]}{[0001|1d00]}「用Y鍵出拳」{[0001|ffff]}{color[ffff]}吧！
176	請按下{[0001|1d00]}{color[0400]}編輯{color[ffff]}{[0001|ffff]}鍵，\n輸入{[0001|1d00]}{color[0400]}「用Y鍵出拳」{color[ffff]}{[0001|ffff]}。
177	你輸入{[0001|1d00]}{color[0400]}「用Y鍵出拳」{color[ffff]}{[0001|ffff]}了嗎？
yes	是
no	否
178	那麼，關閉設定畫面。
179	接下來……我們要設計程式，\n讓附註解物件在蘋果損壞時\n出現在場地的上方！
180	先叫出{color[0400]}{[0001|1d00]}傳送物件入口小節點{[0001|ffff]}{color[ffff]}！
181	門……\n語言的力量會對世界\n造成不可忽視的影響。
182	把傳送物件入口小節點\n疊在附註解物件小節點上。
183	然後，把{color[0400]}{[0001|1d00]}物件損壞時小節點{[0001|ffff]}{color[ffff]}\n連接到{color[0400]}{[0001|1d00]}傳送物件入口小節點{[0001|ffff]}{color[ffff]}！
184	接著請叫出\n{color[0400]}{[0001|1d00]}傳送物件出口小節點{[0001|ffff]}{color[ffff]}！
185	門門……\n語言的力量，不容小覷。
186	把傳送物件出口小節點\n移動到場地的上方……
187	打開傳送物件出口小節點的設定畫面！
188	把{color[0400]}{[0001|1d00]}狀態{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1d00]}能看見{[0001|ffff]}{color[ffff]}\n設定為{color[0400]}{[0001|1d00]}關閉{[0001|ffff]}{color[ffff]}……
189	把{color[0400]}{[0001|1d00]}位置{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1d00]}Z{[0001|ffff]}{color[ffff]}設定為{color[0400]}{[0001|1d00]}0.80m{[0001|ffff]}{color[ffff]}，\n讓物件出現在比場地\n還後面一點的地方。
190	那麼，關閉設定畫面……
191	來！確認的時間到囉！\n我們到遊戲畫面去吧～
192	請讓人拿到蘋果！
193	顯示註解了～！
194	這樣一來……\n玩家就能清楚地知道\n人變得可以出拳了呢！
195	我們回程式設計畫面去吧。
196	那麼～～這樣就～～！
197	完成第7步驟了！
198-00	好棒喔。
198-01	……恭喜……Zzz……
198-02	這裡是入口A，恭喜你。
199	這麼長的步驟，\n真～是辛苦你了！
200	{[0201]}，\n我從一開始就相信\n你能跟著做到最後！
201	你看！\n遊戲變得越來越專業了呢！
202	在下個步驟中，\n我們要來設計{color[0400]}{[0001|1d00]}BOSS{[0001|ffff]}{color[ffff]}喔！\n厲害吧～
203	敬請期待下個步驟！
Lesson_2DAction_07.msbt
000	歡迎回來～～！
001	GO! GO! 運動競技的\n第8步驟要開始囉～！！
002	上次我們設計了程式，\n讓人在取得道具後可以出拳！
003	而遊戲也終於來到最後一關！\n在這個步驟中，\n我們要製作{color[0400]}{[0001|1d00]}BOSS角色{[0001|ffff]}{color[ffff]}！
005	那麼～\n我們到程式設計畫面去吧～～
006	GO! GO!
007	好，首先我們就來製作\n和BOSS對戰的場地吧。
008	請複製這個場地的\n{color[0400]}{[0001|1d00]}物件小節點{[0001|ffff]}{color[ffff]}。
009	然後把他稍微縮小一點，\n放到藍色框框的位置。
010	再複製一次……
011	放到下面一點。
012	再複製！
013	再放下面一點。
014	複製～
015	把他稍微放大一點，\n然後放到這裡來！
016	好了，\n去確認場地吧！
017	請在場地上前進。
018	場地有高有低，\n看起來非常的有趣！
019	我們將會在這裡\n和BOSS決一死戰！
020	那麼，我們回程式設計畫面\n製作{[0001|1d00]}{color[0400]}BOSS{color[ffff]}{[0001|ffff]}吧！
021	我們要把外星人放大，\n拿他來製作BOSS。
022	複製這個時尚物件小節點。
023	把他放大成BOSS的大小，\n放到決戰用的場地上吧。
024	接著，我們想把這個BOSS\n設計成會發動攻擊的強敵！
025	請叫出{[0001|1d00]}10個{[0001|ffff]}的{color[0400]}{[0001|1d00]}發射物件小節點{[0001|ffff]}{color[ffff]}！
026	哦哦！\n這不是{[0201]}嗎～
027	什麼！？\n你要把我用在BOSS的攻擊上～？
028	我啊～～\n可是從小就夢想\n當個正義英雄耶……
029	結果你居然\n要我去當壞人……？
030	不過……\n這樣感覺也蠻有趣的呢。
031	這事就交給我吧！
032	那麼，\n把發射物件小節點稍微縮小一點，\n放到BOSS的前方……
033	打開發射物件小節點的設定畫面！
034	然後打開{color[0400]}{[0001|1d00]}發射方向{[0001|ffff]}{color[ffff]}。
035	我們想向{[0001|1d00]}{color[0400]}左方{color[ffff]}{[0001|ffff]}發射，\n所以就設定為{[0001|1d00]}{color[0400]}X-{color[ffff]}{[0001|ffff]}吧。
036	接著把{color[0400]}{[0001|1d00]}發射速度{[0001|ffff]}{color[ffff]}\n設定為{color[0400]}{[0001|1d00]}3.00{[0001|ffff]}{color[ffff]}。
037	把{color[0400]}{[0001|1d00]}發射間距{[0001|ffff]}{color[ffff]}\n設定為{color[0400]}{[0001|1d00]}3.00{[0001|ffff]}{color[ffff]}吧！
038	最後，打開{color[0400]}{[0001|1d00]}材質{[0001|ffff]}{color[ffff]}……
039	選擇{[0001|1d00]}{color[0400]}無重力{color[ffff]}{[0001|ffff]}！
040	這樣發射出去的物件就\n{color[0400]}{[0001|1d00]}不會掉落，而是筆直地飛出去{[0001|ffff]}{color[ffff]}了！
041	關閉設定畫面吧～
042	不過……物件不會掉落，\n也就是說會一直飛在空中。
043	這樣會妨礙到我們玩遊戲……\n我們讓球體在途中{color[0400]}{[0001|1d00]}消失{[0001|ffff]}{color[ffff]}吧。
044	要讓物件消失的話……\n請叫出{color[0400]}{[0001|1d00]}傳送物件入口小節點{[0001|ffff]}{color[ffff]}！
045	門……\n消失與誕生乃一體兩面。
046	把傳送物件入口小節點放大，\n放到藍色框框的位置。
047	接著打開\n傳送物件入口小節點的設定畫面！
048	把{[0001|1d00]}{color[0400]}傳送ID{color[ffff]}{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}B{color[ffff]}{[0001|ffff]}……
049	把{color[0400]}{[0001|1d00]}狀態{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1d00]}能看見{[0001|ffff]}{color[ffff]}\n設定為{color[0400]}{[0001|1d00]}關閉{[0001|ffff]}{color[ffff]}！
050	設定完成了！
051	好了，去確認……
052	在去確認之前……\n請先稍等一下。
053	為了方便我們確認，\n先把人暫時設定為{[0001|1d00]}{color[0400]}無敵狀態{color[ffff]}{[0001|ffff]}吧！
054	打開{[0001|1d00]}{color[0400]}人小節點{color[ffff]}{[0001|ffff]}的設定畫面。
055	把{color[0400]}{[0001|1d00]}狀態{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1d00]}會損壞{[0001|ffff]}{color[ffff]}設定為{color[0400]}{[0001|1d00]}關閉{[0001|ffff]}{color[ffff]}。
056	關閉設定畫面～
057	好了！\n這次真的要來確認囉！
058	擊退外星人，\n到BOSS那裡去吧～
059	球體飛過來了呢～
060	哇！\n是巨大的外星人！！
061	試著出拳打敗他吧！
062	做得好！
063	因為人現在是無敵狀態，\n所以可以輕易地打敗外星人……
064	但實際遊玩時可沒這麼容易喔！\n你得躲避飛來的球體向前進攻……\n這肯定會是一場硬戰！
065	話說回來……\n你不覺得奇怪嗎？
066	明明已經擊敗BOSS了，\n{color[0400]}{[0001|1d00]}球體卻還是不停地發射{[0001|ffff]}{color[ffff]}！
067	我們來設計一下程式，\n{color[0400]}{[0001|1d00]}讓球體在BOSS損壞後停止發射{[0001|ffff]}{color[ffff]}吧～
068	要{color[0400]}{[0001|1d00]}讓球體停止發射{[0001|ffff]}{color[ffff]}……
069	我們得{color[0400]}{[0001|1d00]}連接配對線{[0001|ffff]}{color[ffff]}到發射物件小節點，\n透過{color[0400]}{[0001|1d00]}輸入訊號{[0001|ffff]}{color[ffff]}讓球體發射……
070	接著在BOSS損壞後{[0001|1d00]}{color[0400]}停止輸入訊號{color[ffff]}{[0001|ffff]}，\n這樣就可以阻止球體的發射了！
071	首先，我們需要一個能夠監視\n外星人BOSS{color[0400]}{[0001|1d00]}是否損壞{[0001|ffff]}{color[ffff]}的小節點。
072	說到是否損壞……\n你應該會想到物件損壞時小節點吧……
073	但是物件損壞時小節點\n{color[0400]}{[0001|1d00]}在BOSS以外的外星人\n損壞時也會{[0001|ffff]}{color[ffff]}輸出訊號！
074-01	所以～這次我們要用的\n不是平常的物件損壞時小節點……
075	請從{[0001|1d00]}物件{[0001|ffff]}{[0001|0700]}{[0001|ffff]}{[0001|1d00]}感應器{[0001|ffff]}{[0001|0700]}{[0001|ffff]}{[0001|1d00]}損壞感應器{[0001|ffff]}裡\n叫出{color[0400]}{[0001|1d00]}損壞感應器小節點{[0001|ffff]}{color[ffff]}！
076	嗨！\n我是{color[0400]}{[0001|1d00]}損壞感應器小節點{[0001|ffff]}{color[ffff]}！
077	為了守護大家的安全！\n我會全力以赴！全神貫注！
078	然後……\n萬一物件損壞了……
079	我就會通知大家！\n不遺餘力！絕對迅速！誠意滿滿！
080	呃……\n損壞感應器小節點呢……
081	是個會監視{color[0400]}{[0001|1d00]}自己連接對象的\n物件是否損壞{[0001|ffff]}{color[ffff]}的小節點！
082	由於他{color[0400]}{[0001|1d00]}只會監視連接對象的物件{[0001|ffff]}{color[ffff]}，\n所以和物件損壞時小節點的作用有些不同！
083	嗨！我會全心全意地\n陪伴在某人的身邊，\n用溫暖的心守護他！
084	那麼，我們移動一下\n損壞感應器小節點。
085	把{color[0400]}{[0001|1d00]}損壞感應器小節點{[0001|ffff]}{color[ffff]}\n{color[0400]}{[0001|1d00]}連接{[0001|ffff]}{color[ffff]}到{color[0400]}{[0001|1d00]}時尚物件小節點{[0001|ffff]}{color[ffff]}！
086	接著打開\n損壞感應器小節點的設定畫面！
087	把{color[0400]}{[0001|1d00]}狀態{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1d00]}能看見{[0001|ffff]}{color[ffff]}\n設定為{color[0400]}{[0001|1d00]}關閉{[0001|ffff]}{color[ffff]}。
088	關閉設定畫面吧！
089	嗨！我會全力以赴！\n偶而用冷酷的眼神\n守護外星人BOSS！
090	麻煩你囉♥
091	那麼，現在這個損壞感應器小節點\n會在外星人BOSS{color[0400]}{[0001|1d00]}損壞時輸出訊號{[0001|ffff]}{color[ffff]}。
092	但是，我們希望{color[0400]}{[0001|1d00]}訊號{[0001|ffff]}{color[ffff]}會在\n外星人BOSS{color[0400]}{[0001|1d00]}沒有損壞時{[0001|ffff]}{color[ffff]}\n{color[0400]}{[0001|1d00]}輸入{[0001|ffff]}{color[ffff]}到發射物件小節點。
092000	要在損壞感應器小節點\n{color[0400]}{[0001|1d00]}沒有輸出{[0001|ffff]}{color[ffff]}訊號時{color[0400]}{[0001|1d00]}輸入訊號{[0001|ffff]}{color[ffff]}……
092001	就需要{color[0400]}{[0001|1d00]}顛倒{[0001|ffff]}{color[ffff]}事物的小節點！
093	說到顛倒～！\n就得叫出{color[0400]}{[0001|1d00]}NOT小節點{[0001|ffff]}{color[ffff]}囉！
094	嘻嘻嘻！\n外星人BOSS才不可怕咧。
095	把NOT小節點放到\n損壞感應器小節點的旁邊……
096	把{color[0400]}{[0001|1d00]}損壞感應器小節點{[0001|ffff]}{color[ffff]}和\n{color[0400]}{[0001|1d00]}NOT小節點{[0001|ffff]}{color[ffff]}連接起來。
097	再把{color[0400]}{[0001|1d00]}NOT小節點{[0001|ffff]}{color[ffff]}和\n{color[0400]}{[0001|1d00]}發射物件小節點{[0001|ffff]}{color[ffff]}連接起來！
098	這樣當{color[0400]}{[0001|1d00]}外星人BOSS損壞時，\n球體就會停止發射{[0001|ffff]}{color[ffff]}了～
099	去遊戲畫面確認看看吧！
100	請出拳擊退BOSS！
101	……
102	球體不再發射了～！
103	這樣一來，BOSS就完成了！
104	……不過，還沒完喔！\n我們需要再加上一些\n{color[0400]}{[0001|1d00]}擊退BOSS時的效果{[0001|ffff]}{color[ffff]}～
106	到程式設計畫面，\n為擊退BOSS的場景加上音效吧！
107	請從{color[0400]}{[0001|1d00]}播放音效{[0001|ffff]}{color[ffff]}裡\n叫出{color[0400]}{[0001|1d00]}播放聲音小節點{[0001|ffff]}{color[ffff]}！
108	只要是關於聲音的事～\n就交給我吧～♪
110	打開播放聲音小節點的設定畫面！
111	選擇{color[0400]}{[0001|1d00]}喜劇效果{[0001|ffff]}{color[ffff]}……
112	選擇{color[0400]}{[0001|1d00]}大爆炸{[0001|ffff]}{color[ffff]}吧！
113	嗯嗯！\n這個音效很適合擊退BOSS的場景呢。
114	關閉這個畫面……
115	關閉設定畫面吧！
116	然後，把{color[0400]}{[0001|1d00]}損壞感應器小節點{[0001|ffff]}{color[ffff]}連接到\n{color[0400]}{[0001|1d00]}播放聲音小節點{[0001|ffff]}{color[ffff]}的{[0001|1d00]}播放端口{[0001|ffff]}！
117	來吧，\n到遊戲畫面去確認看看！
118	擊退BOSS時，\n仔細聽聽遊戲發出的音效！
120	效果很完美！！
122	那麼，最後我們就\n解除人的無敵狀態，\n讓他恢復成原狀吧！
123	請打開人小節點的設定畫面。
124	把{color[0400]}{[0001|1d00]}狀態{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1d00]}會損壞{[0001|ffff]}{color[ffff]}設定為{color[0400]}{[0001|1d00]}開啟{[0001|ffff]}{color[ffff]}！
125	這樣～
126	人就恢復原狀了！
127	到遊戲畫面確認吧！
128	現在，當人撞到球體\n或外星人時就會損壞。
129	請你務必試著挑戰一下，\n看看能不能打倒BOSS！
130	如果你覺得確認清楚了，\n就回去程式設計畫面吧～
131	那麼～～這樣就～～！
132	完成第8步驟了！
133-00	恭喜你！！
133-01	恭喜～～♪
133-02	恭喜啦！很棒喔！
134	我們終於完成BOSS的設計了！
135	下次我們要製作結局……\n也就是這個遊戲的{color[0400]}{[0001|1d00]}終點{[0001|ffff]}{color[ffff]}！
136	GO! GO! 運動競技就快要完成囉！
137	下個步驟也請你多多指教～！
Lesson_2DAction_08.msbt
000	歡迎你的到來～！
001	GO! GO! 運動競技\n終於來到最後階段！
002	一路走來，我們設計了\n各種機關、道具和BOSS……
003	但遊戲總有結束的一天……\n在這個步驟裡，我們要來製作{color[0400]}{[0001|1d00]}終點{[0001|ffff]}{color[ffff]}！
004	來吧，我們快到\n程式設計畫面去……
005	GO! GO!
006	首先來製作最後一個場地。
007	複製這個物件小節點……
008	把他稍微縮小一點，\n放到藍色框框的位置。
009	再複製一次。
010	這次稍微放大一點，\n放到藍色框框的位置。
011	我們在這裡放個{[0001|1d00]}{color[0400]}藏寶箱{color[ffff]}{[0001|ffff]}，\n把他當作遊戲的終點吧！
012	請從{color[0400]}{[0001|1d00]}四方形時尚物件{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1a00]}藏寶箱{[0001|ffff]}{color[ffff]}裡\n叫出{color[0400]}{[0001|1d00]}時尚物件小節點{[0001|ffff]}{color[ffff]}！
013	藏寶箱……\n裡面肯定放了\n很棒的東西……對吧♥
014	把這個時尚物件小節點\n放到場地的最後面……
015	打開時尚物件小節點的設定畫面！
016	把{color[0400]}{[0001|1d00]}狀態{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1d00]}能移動{[0001|ffff]}{color[ffff]}設定為{color[0400]}{[0001|1d00]}關閉{[0001|ffff]}{color[ffff]}吧！
017	關閉設定畫面……
018	為了方便我們確認，\n來移動一下人的傳送位置吧！
019	把這個{color[0400]}{[0001|1d00]}傳送物件出口小節點{[0001|ffff]}{color[ffff]}\n移動到藍色框框的位置。
020	OK！
021	走吧，去遊戲畫面確認看看！
022	請在場地上前進。
023	發現藏寶箱了～！
024	接下來，我們就來設計程式……\n讓遊戲在人接觸到藏寶箱時，\n能夠產生{color[0400]}{[0001|1d00]}抵達終點的特效{[0001|ffff]}{color[ffff]}吧。
025	到程式設計畫面去～！
026	為了要知道\n人{color[0400]}{[0001|1d00]}有沒有接觸到藏寶箱{[0001|ffff]}{color[ffff]}～
027	請叫出{color[0400]}{[0001|1d00]}接觸感應器小節點{[0001|ffff]}{color[ffff]}！
028	哇！\n你不要突然叫我出來啦！
029	我還以為今天沒有我的戲份了說……
030	把接觸感應器小節點放大一點後，\n重疊在時尚物件小節點的上面吧。
031	請打開接觸感應器小節點的設定畫面。
032	把{color[0400]}{[0001|1d00]}狀態{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1d00]}能看見{[0001|ffff]}{color[ffff]}\n設定為{color[0400]}{[0001|1d00]}關閉{[0001|ffff]}{color[ffff]}……
033	打開{color[0400]}{[0001|1d00]}要確認什麼？{[0001|ffff]}{color[ffff]}……
034	設定為只有{color[0400]}{[0001|1d00]}人{[0001|ffff]}{color[ffff]}是{color[0400]}{[0001|1d00]}開啟{[0001|ffff]}{color[ffff]}吧～
035	關閉這個畫面。
036	關閉設定畫面吧。
037	好了，接下來……我們來把程式設計成\n當人{color[0400]}{[0001|1d00]}接觸到藏寶箱時，就會播放音效{[0001|ffff]}{color[ffff]}吧！
038	從{color[0400]}{[0001|1d00]}播放音效{[0001|ffff]}{color[ffff]}裡\n叫出{color[0400]}{[0001|1d00]}播放聲音小節點{[0001|ffff]}{color[ffff]}！
039	想慶祝什麼嗎？\n就交給我來吧～～♪
041	打開播放聲音小節點的設定畫面。
042	打開{color[0400]}{[0001|1d00]}效果音樂{[0001|ffff]}{color[ffff]}……
043	選擇{color[0400]}{[0001|1d00]}非常開心{[0001|ffff]}{color[ffff]}吧！
044	關閉這個畫面……
045	關閉設定畫面……
046	把{[0001|1d00]}{color[0400]}接觸感應器小節點\n{color[ffff]}{[0001|ffff]}和{[0001|1d00]}{color[0400]}播放聲音小節點{color[ffff]}{[0001|ffff]}的\n{[0001|1d00]}播放端口{[0001|ffff]}連接在一起！
047	只要人接觸到藏寶箱，\n我就會播放慶祝的音樂喔～♪
048	嗯……好不容易抵達終點……\n只用音效慶祝的話，感覺太冷清了～
049	來叫出{color[0400]}{[0001|1d00]}拉炮{[0001|ffff]}{color[ffff]}的\n{color[0400]}{[0001|1d00]}特效小節點{[0001|ffff]}{color[ffff]}吧！
050	嗨，你好～\n我是特效小節點～
051	在這個遊戲裡常會\n聽到「GO! GO!」，\n感覺很有活力呢～
052	如果我說了冷笑話，\n一定會被罵的「GO」血淋頭！
053	……咦？你該不會不知道\n「GO」血淋頭的意思吧？
054	不知道的話，\n就去問問身邊的大人吧。
055	……呃，\n移動一下特效小節點～
059	把{color[0400]}{[0001|1d00]}接觸感應器小節點{[0001|ffff]}{color[ffff]}和\n{color[0400]}{[0001|1d00]}特效小節點{[0001|ffff]}{color[ffff]}連接在一起！
060	好，最後……\n我們讓{color[0400]}{[0001|1d00]}遊戲{[0001|ffff]}{color[ffff]}在拿到\n藏寶箱之後{color[0400]}{[0001|1d00]}重來{[0001|ffff]}{color[ffff]}吧。
061	首先，叫出{color[0400]}{[0001|1d00]}計時器小節點{[0001|ffff]}{color[ffff]}！
062	把計時器小節點\n放到播放聲音小節點的下方……
063	打開計時器小節點的設定畫面！
064	把{color[0400]}{[0001|1d00]}要在幾秒後輸出{[0001|ffff]}{color[ffff]}\n設定為{color[0400]}{[0001|1d00]}3.00{[0001|ffff]}{color[ffff]}！
065	關閉設定畫面。
066	把{color[0400]}{[0001|1d00]}接觸感應器小節點{[0001|ffff]}{color[ffff]}和\n{color[0400]}{[0001|1d00]}計時器小節點{[0001|ffff]}{color[ffff]}連接起來！
067	然後～\n叫出{color[0400]}{[0001|1d00]}重來小節點{[0001|ffff]}{color[ffff]}。
068	把重來小節點\n放到計時器小節點的旁邊……
069	接著把計時器小節點和\n重來小節點連接起來吧！
070	好了！這樣終點就完成了！
071	究竟變成了怎樣的終點呢……？\n去確認看看吧！
072	請接觸藏寶箱！
073	抵達終點的特效結束後，\n遊戲自動重來了～！
074	這樣終點就完成了！
075	我們回程式設計畫面吧。
076	那麼～～這樣就～～！
077	完成第9步驟了！
078-00	咿，恭喜你。
078-01	恭喜～
078-02	恭喜～～♪
079	在我們製作了終點後……\nGO! GO! 運動競技\n幾乎可以說是完成囉！
080	在下個步驟裡～
081	我們要在這個遊戲中加入\n{[0201]}的個人風格！
082	那麼，敬請期待最後的步驟吧！
Lesson_2DAction_09.msbt
000	歡迎你來到\nGO! GO! 運動競技的\n最後一個步驟！
001	一路走來，我們製作了各種機關……\n而現在，終於到了最精彩的部分！
002	在最後的步驟裡，\n我們要在遊戲中加入\n{[0201]}的個人風格。
003	首先，來改造一下\nBOSS發射的球體吧！
004	那麼～來說最後一次……
005	到程式設計畫面去～～
006	GO! GO!
007	這個{color[0400]}{[0001|1d00]}發射物件小節點{[0001|ffff]}{color[ffff]}……
008	其實可以{color[0400]}{[0001|1d00]}連接\n材質小節點{[0001|ffff]}{color[ffff]}喔！
009	只要連接了\n材質小節點～
010	就可以在發射的物件上\n{color[0400]}{[0001|1d00]}貼上{[0001|ffff]}{color[ffff]}自己{color[0400]}{[0001|1d00]}畫的圖案{[0001|ffff]}{color[ffff]}！
011	我們先來做些事前準備……\n請打開{color[0400]}{[0001|1d00]}發射物件小節點{[0001|ffff]}{color[ffff]}的設定畫面。
012	把{color[0400]}{[0001|1d00]}物件的形狀{[0001|ffff]}{color[ffff]}設定為{color[0400]}{[0001|1a00]}立方體{[0001|ffff]}{color[ffff]}。
013	然後把{color[0400]}{[0001|1d00]}狀態{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1d00]}能看見{[0001|ffff]}{color[ffff]}\n設定為{color[0400]}{[0001|1d00]}關閉{[0001|ffff]}{color[ffff]}吧。
014	準備完成！
015	那麼請叫出{color[0400]}{[0001|1d00]}材質小節點{[0001|ffff]}{color[ffff]}！
016	圖案是一面能反映自己的鏡子。
017	別害怕……\n把浮現在心中的影像\n原封不動地畫出來吧。
017000	把材質小節點縮小到\n和發射物件小節點一樣的大小後，\n移動到上方……
018	把材質小節點連接到\n發射物件小節點。
019	然後，打開材質小節點的設定畫面吧。
020	首先，打開{color[0400]}{[0001|1d00]}黏貼面{[0001|ffff]}{color[ffff]}。
021	設定為只有{[0001|1d00]}{color[0400]}Z-{color[ffff]}{[0001|ffff]}是{[0001|1d00]}{color[0400]}開啟{color[ffff]}{[0001|ffff]}。
022	關閉這個畫面～
023	接著……\n我們來試著畫些圖案吧！
024	請簡單地畫些圖案在上面。
025	畫好了就關閉設定畫面吧。
026	那麼，為了方便我們確認……
027	來移動一下人的傳送位置吧。
028	請把這個{color[0400]}{[0001|1d00]}傳送物件出口小節點{[0001|ffff]}{color[ffff]}\n移動到藍色框框的位置。
029	好了，我們來確認看看……\n他會發射出什麼吧！
030	{[0201]}畫的圖案\n被發射出去了～！
031	把這個圖案換成\n雷電或火焰的話……\n感覺應該會完全不同吧！
032	來吧！\n我們回程式設計畫面！
033	接下來，這個遊戲\n還有個美中不足的地方……
034	那就是音樂！\n沒錯，遊戲少了BGM！
035	我們來叫出\n{color[0400]}{[0001|1d00]}BGM小節點{[0001|ffff]}{color[ffff]}吧！
036	Yeah!\n你製作的遊戲～\n我來加油打氣！
037	來揭開程式設計的秘密～\n一同遊玩設計好的遊戲！
038	接著，為了播放BGM，\n我們叫出{color[0400]}{[0001|1d00]}常數小節點{[0001|ffff]}{color[ffff]}吧。
039	把常數小節點\n放到BGM小節點的旁邊。
040	把常數小節點連接到\nBGM小節點的{[0001|1d00]}播放端口{[0001|ffff]}！
041	然後，打開BGM小節點的設定畫面。
042	打開{[0001|1d00]}{color[0400]}樂曲{color[ffff]}{[0001|ffff]}吧。
043	然後……請把{[0001|1d00]}樂曲{[0001|ffff]}\n設定為{[0001|1d00]}{color[0400]}小跳步{color[ffff]}{[0001|ffff]}！
044	你不覺得這首BGM\n很適合這個遊戲嗎～？
045	那麼就關閉這個畫面～
046	好，我們去確認一下吧！
047	加入{color[0400]}{[0001|1d00]}BGM{[0001|ffff]}{color[ffff]}之後，\n氣氛果然變了不少呢～
048	好，我們回程式設計畫面吧～
049	這樣一來遊戲就準備好了！
050	接下來……就是你的時間囉！\n請試著把這個遊戲改造成\n{[0201]}的風格吧！
051	看是要在{color[0400]}{[0001|1d00]}材質小節點{[0001|ffff]}{color[ffff]}作畫，\n改變BOSS的攻擊圖示……
052	或是依照自己的喜好更改{color[0400]}{[0001|1d00]}BGM{[0001|ffff]}{color[ffff]}……
053	也可以改變{color[0400]}{[0001|1d00]}場地的顏色{[0001|ffff]}{color[ffff]}喔！
054	我會讓這個確認用的\n{color[0400]}{[0001|1d00]}傳送物件出口小節點{[0001|ffff]}{color[ffff]}\n可以自由地移動……
055	你可以在改造程式的同時，\n把他移動到想確認的地方。
056	跟之前一樣，\n當你覺得遊戲「完成了！」……\n就按下{color[0400]}{[0001|1d00]}完成鍵{[0001|ffff]}{color[ffff]}吧！
057	那麼～～
058	開始設計吧！
059	你終於完成了嗎！？
060	那麼，刪除這個確認用的\n{color[0400]}{[0001|1d00]}傳送物件入口小節點{[0001|ffff]}{color[ffff]}……
061	把這邊的{color[0400]}{[0001|1d00]}傳送物件出口小節點{[0001|ffff]}{color[ffff]}也刪除掉。
062	那麼……\n請讓我看看遊戲畫面吧！
063	哦哦～！！\n這就是{[0201]}的\nGO! GO! 運動競技！
063-01	原來如此～！\n刻意不做任何改造，\n也別有一番趣味呢～！
064	整個遊戲畫面都充滿著\n{[0201]}的風格呢！
065	那麼～這樣就～～\n完成GO! GO! 運動競技的設計了！！！
066	如果你覺得確認清楚了，\n就回去程式設計畫面吧。
067	GO! GO! 運動競技……\n這是一款設計難度頗高的遊戲……
068	但你還是將他完成了！\n真不愧是{[0201]}！
069	那麼，跟之前一樣……\n把這個遊戲放進遊戲一覽吧～
069-01	先暫時回到選單～
WireWarpOutNode	這裡是出口A，\n遊戲順利完成了。\n請講。
PlzPositionSensorNode	好厲害～！\n你做的遊戲看起來非常有趣呢！
PlzBindCommanderNode	呵呵……\n太棒了……
PlzJointHingeNode	{[0201]}！\n你真厲害～～！
PlzJointSingleAxisSliderNode	{[0201]}！\n我會一輩子追隨你！
FlagNode	我一醒來就看到你\n做出這麼厲害的遊戲，\n真是嚇了我一跳！
PlzBrokenSensorNode	嗨！\n一直以來我不論風雨全力守護！\n現在我的努力也算有個結果了！
PlzRigidNode	……嗨。\n真不愧是{[0201]}。
Lesson_3DAction_00.msbt
000	你好～～！
001	我們終於……\n終於來到了最後一課！
002	我們要一起學到最後喔！
003	……你好。
004	……嗯？\n你是……
005	我不會打擾你們……\n可以讓我在一邊旁聽嗎？
006	好吧……\n如果你不會打擾我們的話……
007	好了，你們不用在意我，\n繼續上課吧。
008	嗯……那麼！
009	最後一課要製作的遊戲\n就是{color[0400]}{[0001|1d00]}3D運動競技空間{[0001|ffff]}{color[ffff]}！！
010	這是一款闖關類型的3D動作遊戲，\n要在廣闊的場地上前後左右地移動！
010-01	作為附帶導航的課堂的最後一課，\n不覺得這個遊戲真是太適合了嗎！？
011	我們趕快來設計程式吧～！
012	首先為了方便設計程式，\n把畫面設定為{color[0400]}{[0001|1d00]}俯瞰視角{[0001|ffff]}{color[ffff]}。
013	這是因為3D動作遊戲\n需要{color[0400]}{[0001|1d00]}在後方擺放物件{[0001|ffff]}{color[ffff]}，\n設定為俯瞰視角會比較好操作。
014	……嗯，那麼請{color[0400]}{[0001|1d00]}切換視角{[0001|ffff]}{color[ffff]}～
015	接著，為了刪除原有的平面，\n請把{color[0400]}{[0001|1d00]}空間小節點{[0001|ffff]}{color[ffff]}叫出來。
016	……終於到最後一課了嗎？
017	……嗯。\n……有種即將覺醒的感覺。
020	打開空間小節點的\n設定畫面吧。
020-000	把{color[0400]}{[0001|1d00]}空間的外型{[0001|ffff]}{color[ffff]}設定為{color[0400]}{[0001|1d00]}無{[0001|ffff]}{color[ffff]}。
020-001	關閉設定畫面……
020000	把空間小節點移動到下方。
021	接下來……
021-01	因為平面消失了，\n我們得利用{color[0400]}{[0001|1d00]}物件小節點{[0001|ffff]}{color[ffff]}製作{color[0400]}{[0001|1d00]}場地{[0001|ffff]}{color[ffff]}。
022	……是的，\n請叫出{[0001|1d00]}{color[0400]}立方體物件小節點{color[ffff]}{[0001|ffff]}。\n我們要用他來製作場地喔～
023	……嗨。\n總覺得我今天也會有\n很多出場機會。
025	那麼請把物件小節點\n放大到最大～
026	打開物件小節點的設定畫面！
027	因為要作為場地使用，\n請把他的{color[0400]}{[0001|1d00]}狀態{[0001|ffff]}{color[ffff]}設定為\n只有{color[0400]}{[0001|1d00]}能看見{[0001|ffff]}{color[ffff]}、{color[0400]}{[0001|1d00]}能接觸{[0001|ffff]}{color[ffff]}是{color[0400]}{[0001|1d00]}開啟{[0001|ffff]}{color[ffff]}。
028	然後，把{color[0400]}{[0001|1d00]}顏色{[0001|ffff]}{color[ffff]}設定為{color[0400]}{[0001|1d00]}綠色{[0001|ffff]}{color[ffff]}～
029	關閉設定……
029-01	為了調整場地的高度，\n請先切換為{color[0400]}{[0001|1d00]}橫向視角{[0001|ffff]}{color[ffff]}。
029-02	把他移動到下面一點的地方。
029-03	完美！
029-04	那麼，切換回俯瞰視角……
030	到遊戲畫面去確認一下吧。
031	那是我的台詞！
032	節奏差點被打亂了……\n好！\n我們到遊戲畫面去吧～！
033	一個綠色立方體浮在空中呢～
034	接下來要複製很多這個立方體，\n把他們排在一起製作更大的場地對吧。
035	啊～～！真是的！\n不要先說出來啦！
036	不要打擾我上課！
037	那我不說話了。
038	……呼。\n那麼，我們接著來設計\n玩家的角色「{color[0400]}{[0001|1d00]}人{[0001|ffff]}{color[ffff]}」吧。
039	請到程式設計畫面去～
040	叫出{color[0400]}{[0001|1d00]}人小節點{[0001|ffff]}{color[ffff]}。
041	嗨！\n這是最後一課呢。
042	謝謝你選擇了我\n擔任最後一款遊戲的主角！
048	我們來設計可以\n操控人的程式吧。
049	從{[0001|1d00]}L操控搖桿{[0001|ffff]}{[0001|0700]}{[0001|ffff]}{[0001|1d00]}左右{[0001|ffff]}裡\n叫出{color[0400]}{[0001|1d00]}操控搖桿小節點{[0001|ffff]}{color[ffff]}。
050	轉轉～
050000	把操控搖桿小節點\n稍微移動到左邊……
051	把{color[0400]}{[0001|1d00]}操控搖桿小節點{[0001|ffff]}{color[ffff]}連接到\n{color[0400]}{[0001|1d00]}人小節點{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1d00]}左右端口{[0001|ffff]}{color[ffff]}～
052	接著從{[0001|1d00]}L操控搖桿{[0001|ffff]}{[0001|0700]}{[0001|ffff]}{[0001|1d00]}上下{[0001|ffff]}裡\n叫出{color[0400]}{[0001|1d00]}操控搖桿小節點{[0001|ffff]}{color[ffff]}。
053	轉轉轉轉～
053000	把這個操控搖桿小節點\n移動到上方……
054	把{[0001|1d00]}上下{[0001|ffff]}的{color[0400]}{[0001|1d00]}操控搖桿小節點{[0001|ffff]}{color[ffff]}\n連接到{color[0400]}{[0001|1d00]}人小節點{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1d00]}前後端口{[0001|ffff]}{color[ffff]}～
056	接下來！\n叫出{color[0400]}{[0001|1d00]}的按鍵小節點{[0001|ffff]}{color[ffff]}。
057	嗨！\n我會全力連打～直到最後一刻！\n我按～～～！！！
057000	把按鍵小節點\n放到下方……
058	來吧！\n把按鍵小節點和\n{color[0400]}{[0001|1d00]}跳躍端口{[0001|ffff]}{color[ffff]}連接起來！
059	那麼……\n去遊戲畫面確認一下吧～
060	請試著用操控搖桿\n和鍵讓人動起來～
061	完美！
062	接著我們來設計{color[0400]}{[0001|1d00]}照相機{[0001|ffff]}{color[ffff]}，\n讓遊戲玩起來更順手吧。
063	到程式設計畫面去～
064	那麼，請叫出{color[0400]}{[0001|1d00]}照相機小節點{[0001|ffff]}{color[ffff]}！
065	嗯……\n想要我拍些什麼啊？
066	嗨～！\n拍我！
067	……好，\n交給我。
068	把{color[0400]}{[0001|1d00]}照相機小節點{[0001|ffff]}{color[ffff]}和\n{color[0400]}{[0001|1d00]}人小節點連接{[0001|ffff]}{color[ffff]}在一起～
069	然後……\n打開照相機小節點的設定畫面。
072	把{[0001|1d00]}{color[0400]}偏移距離{color[ffff]}{[0001|ffff]}設定為\n{[0001|1d00]}{color[0400]}Y:{color[ffff]}{[0001|ffff]}  {color[0400]}{[0001|1d00]}4.00\nZ{[0001|ffff]}{color[ffff]}{[0001|1d00]}{color[0400]}:{color[ffff]}{[0001|ffff]}  {color[0400]}{[0001|1d00]}-6.00 {[0001|ffff]}{color[ffff]}～
073	好！OK！\n請關閉設定畫面。
074	走吧！\n到遊戲畫面去確認看看～～！
075	哦～！\n拍得很帥氣呢～！
076	這樣照相機就沒問題了！
077	嗯……是這樣嗎？
078	你怎麼又說話了！？
079	如果設計成用操控搖桿\n{color[0400]}{[0001|1d00]}轉動照相機{[0001|ffff]}{color[ffff]}的話……
080	應該會更有3D動作遊戲的感覺吧？
081	呃，可是……\n我沒有打算講解這個……
082	那有什麼關係，\n就來試看看嘛。
083	來吧，{[0201]}，\n我們到程式設計畫面去。
084	唔……
085	那麼，從{[0001|1d00]}R操控搖桿{[0001|ffff]}{[0001|0700]}{[0001|ffff]}{[0001|1d00]}上下{[0001|ffff]}裡\n叫出{color[0400]}{[0001|1d00]}操控搖桿小節點{[0001|ffff]}{color[ffff]}。
086	轉轉轉轉～～～\n轉轉轉轉～～～
086000	把操控搖桿小節點\n移動到上方後……
087	再把{[0001|1d00]}R操控搖桿{[0001|ffff]}{[0001|0700]}{[0001|ffff]}{[0001|1d00]}上下{[0001|ffff]}的{color[0400]}{[0001|1d00]}操控搖桿小節點{[0001|ffff]}{color[ffff]}\n連接到照相機小節點的{color[0400]}{[0001|1d00]}上下端口{[0001|ffff]}{color[ffff]}。
087-01	只要像這樣把{color[0400]}{[0001|1d00]}操控搖桿小節點{[0001|ffff]}{color[ffff]}\n連接到{color[0400]}{[0001|1d00]}照相機小節點的輸入端{[0001|ffff]}{color[ffff]}，\n就{color[0400]}{[0001|1d00]}可以用操控搖桿轉動照相機{[0001|ffff]}{color[ffff]}。
088	接著從{[0001|1d00]}R操控搖桿{[0001|ffff]}{[0001|0400]}{[0001|ffff]}{[0001|1d00]}左右{[0001|ffff]}裡\n叫出{color[0400]}{[0001|1d00]}操控搖桿小節點{[0001|ffff]}{color[ffff]}。
089	把{[0001|1d00]}R操控搖桿{[0001|ffff]}{[0001|0700]}{[0001|ffff]}{[0001|1d00]}左右{[0001|ffff]}的{color[0400]}{[0001|1d00]}操控搖桿小節點{[0001|ffff]}{color[ffff]}\n連接到照相機小節點的{color[0400]}{[0001|1d00]}水平端口{[0001|ffff]}{color[ffff]}。
090	好了，這樣應該就可以\n用操控搖桿轉動照相機了。
091	我的課……
092	到遊戲畫面去看看吧。
093	試著用操控搖桿轉動照相機。
094	你看！\n照相機動了！
095	……哦哦哦～
096	這樣就更有3D動作遊戲的感覺了！
097	……啊。
098	我打擾到你上課了對吧。\n來吧，請繼續。
099	……轉動照相機的設計\n的確比較有趣……
100	看在遊戲變好玩的分上……\n這次就不跟你計較了……
101	……好，回到原來的課程吧～\n最後我們要來{color[0400]}{[0001|1d00]}調整人{[0001|ffff]}{color[ffff]}！
102	請到程式設計畫面。
103	打開人小節點的設定畫面～
104	首先，把{color[0400]}{[0001|1d00]}Y軸轉動{[0001|ffff]}{color[ffff]}\n設定為{color[0400]}{[0001|1d00]}180.00{[0001|ffff]}{color[ffff]}。
105	這樣人就會面向後方……\n也就是{[0001|1d00]}{color[0400]}Z+方向{color[ffff]}{[0001|ffff]}。
106	……是的，\n接著把{color[0400]}{[0001|1d00]}顏色{[0001|ffff]}{color[ffff]}設定為{color[0400]}{[0001|1d00]}紅色{[0001|ffff]}{color[ffff]}。
107	我比較喜歡藍色的說……
108	你可以安靜一點嗎？
109	……好了！\n那麼就……\n關閉設定畫面！
110	到遊戲畫面去確認一下吧～
111	人變成了紅色，\n而且從一開始就面向後方～
112	我覺得還是藍色比較帥氣……
113	如果覺得已經確認好了，\n就到程式設計畫面去吧！
114	那麼～～這樣就～～～
115	完成第1步驟了！
116-00	恭喜你～～
116-01	恭喜～
116-02	嗨！恭喜啊！！
117	……真是抱歉，\n因為一些突發狀況多花了點時間。
118	嗯，這也是沒辦法的事嘛。
119	……下次我們要來設計\n{color[0400]}{[0001|1d00]}當人從場地上掉下去時，\n遊戲會自動重來{[0001|ffff]}{color[ffff]}的程式！
120	那麼就下個步驟再見吧～
121	再見囉。
Lesson_3DAction_01.msbt
000	你好！
001	你好，\n{[0201]}。
002	好～這次我們接著繼續\n製作{color[0400]}{[0001|1d00]}3D運動競技空間{[0001|ffff]}{color[ffff]}……
003	呃……\n你也要旁聽這個步驟嗎？
004	當然，\n請讓我旁聽到最後。
005	……你不要打擾我上課喔。
006	那麼……\n來複習一下上次的內容吧！
007	在上個步驟中……\n我們製作了場地，讓玩家能\n用{color[0400]}{[0001|1d00]}操控搖桿{[0001|ffff]}{color[ffff]}和{color[0400]}{[0001|1d00]}鍵{[0001|ffff]}{color[ffff]}操控人～
008	還設計了用{color[0400]}{[0001|1d00]}操控搖桿\n{[0001|ffff]}{color[ffff]}轉動{color[0400]}{[0001|1d00]}照相機{[0001|ffff]}{color[ffff]}的程式。
009	……來吧，這次我們要設計\n{color[0400]}{[0001|1d00]}當人從場地上掉下去時就會損壞{[0001|ffff]}{color[ffff]}的程式。
010	到程式設計畫面去吧～
011	首先，我們叫出\n{color[0400]}{[0001|1d00]}位置感應器小節點{[0001|ffff]}{color[ffff]}～
012	終於到了最後一課呢！
012000	把位置感應器小節點\n移動到上方……
013	打開位置感應器小節點的設定畫面～
014	把{color[0400]}{[0001|1d00]}狀態{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1d00]}能看見{[0001|ffff]}{color[ffff]}設定為{color[0400]}{[0001|1d00]}關閉{[0001|ffff]}{color[ffff]}。
018	好！\n關閉設定畫面……
019	把{color[0400]}{[0001|1d00]}位置感應器小節點{[0001|ffff]}{color[ffff]}和\n{color[0400]}{[0001|1d00]}人小節點連接{[0001|ffff]}{color[ffff]}起來！
021	這樣{color[0400]}{[0001|1d00]}位置感應器小節點{[0001|ffff]}{color[ffff]}\n就能輸出{color[0400]}{[0001|1d00]}人的位置{[0001|ffff]}{color[ffff]}了！
022	我們要利用這個位置感應器小節點，\n設計出確認人{color[0400]}{[0001|1d00]}是否從場地上掉下去{[0001|ffff]}{color[ffff]}的程式。
023	從場地上掉下去……\n表示{color[0400]}{[0001|1d00]}人的位置低於場地的位置{[0001|ffff]}{color[ffff]}……
024	也就是說，只要比較從位置感應器小節點的\n{color[0400]}{[0001|1d00]}Y端口{[0001|ffff]}{color[ffff]}輸出的數值{color[0400]}{[0001|1d00]}是否小於場地的位置{[0001|ffff]}{color[ffff]}就行了。
025	……你說得沒錯，\n但請不要打擾我上課。
026	那麼，請叫出{color[0400]}{[0001|1d00]}常數小節點{[0001|ffff]}{color[ffff]}！
027	來囉！\n我是常數小節點，\n直到最後都擁有絕不動搖之心！
027000	把他移動到上方吧～
028	打開常數小節點的設定畫面。
029	這裡的數值要小於場地的位置……\n把他設定為{color[0400]}{[0001|1d00]}-10.00{[0001|ffff]}{color[ffff]}吧～
030	關閉設定畫面！
031	{color[0400]}{[0001|1d00]}-10.00{[0001|ffff]}{color[ffff]}對吧？\n我知道了，\n是{color[0400]}{[0001|1d00]}-10.00{[0001|ffff]}{color[ffff]}。
032	接著我們叫出\n{color[0400]}{[0001|1d00]}＞{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1d00]}比較小節點{[0001|ffff]}{color[ffff]}～
033	人的位置是否低於場地……\n真令人在意！你說對不對？
033000	把比較小節點放到\n位置感應器小節點的旁邊……
034	把{color[0400]}{[0001|1d00]}位置感應器小節點{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1d00]}Y端口{[0001|ffff]}{color[ffff]}和\n{color[0400]}{[0001|1d00]}比較小節點{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1d00]}輸入2端口{[0001|ffff]}{color[ffff]}連接起來。
035	然後，把{color[0400]}{[0001|1d00]}常數小節點{[0001|ffff]}{color[ffff]}連接到\n{color[0400]}{[0001|1d00]}比較小節點{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1d00]}輸入1端口{[0001|ffff]}{color[ffff]}！
036	這樣一來，\n當人的位置{color[0400]}{[0001|1d00]}低於-10.00{[0001|ffff]}{color[ffff]}時，\n比較小節點就會輸出訊號。
037	說得沒錯！
038	……我說了！\n不要打擾我上課！
039	了解原理很重要，不是嗎？
040	……那麼接下來，\n請叫出{color[0400]}{[0001|1d00]}破壞物件小節點{[0001|ffff]}{color[ffff]}。
041	呵呵呵……\n這世上也有誕生於破壞之物喔……
041000	把破壞物件小節點\n放到比較小節點的旁邊。
042	打開破壞物件小節點的設定吧！
043	把{color[0400]}{[0001|1d00]}狀態{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1d00]}能看見{[0001|ffff]}{color[ffff]}設定為{color[0400]}{[0001|1d00]}關閉{[0001|ffff]}{color[ffff]}。
046	打開{color[0400]}{[0001|1d00]}要破壞哪個物件？{[0001|ffff]}{color[ffff]}。
047	設定為只有{color[0400]}{[0001|1d00]}人{[0001|ffff]}{color[ffff]}是{color[0400]}{[0001|1d00]}開啟{[0001|ffff]}{color[ffff]}～
048	關閉這個畫面。
049	關閉設定畫面吧！
049000	來吧，把{color[0400]}{[0001|1d00]}破壞物件小節點{[0001|ffff]}{color[ffff]}\n{color[0400]}{[0001|1d00]}連接{[0001|ffff]}{color[ffff]}到{color[0400]}{[0001|1d00]}人小節點{[0001|ffff]}{color[ffff]}～
050	接著打開{color[0400]}{[0001|1d00]}人小節點{[0001|ffff]}{color[ffff]}的設定畫面……
051	把{color[0400]}{[0001|1d00]}狀態{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1d00]}會損壞{[0001|ffff]}{color[ffff]}設定為{color[0400]}{[0001|1d00]}開啟{[0001|ffff]}{color[ffff]}！
052	關閉設定畫面～
053	最後把{color[0400]}{[0001|1d00]}比較小節點{[0001|ffff]}{color[ffff]}連接到\n{color[0400]}{[0001|1d00]}破壞物件小節點{[0001|ffff]}{color[ffff]}就完成了！
054	走吧！\n到遊戲畫面去確認一下！
055	請試著從場地上掉下去看看～
056	從場地上掉下去後，\n人就損壞了！
057	那麼接下來就是要把程式設計成\n{color[0400]}{[0001|1d00]}當人損壞後，遊戲會自動重來{[0001|ffff]}{color[ffff]}吧。
058	沒錯！\n就是我們常設計的那個程式～
059	……走吧！\n到程式設計畫面去～
060	首先叫出{color[0400]}{[0001|1d00]}物件損壞時小節點{[0001|ffff]}{color[ffff]}。
061	{[0201]}，\n聽說你終於上到最後一課啦？
061-01	直到最後都不要鬆懈喔！
061000	把物件損壞時小節點\n移動到左下方……
062	打開物件損壞時小節點的設定畫面……
063	打開{color[0400]}{[0001|1d00]}要確認什麼？{[0001|ffff]}{color[ffff]}。
064	設定為只有{color[0400]}{[0001|1d00]}人{[0001|ffff]}{color[ffff]}是{color[0400]}{[0001|1d00]}開啟{[0001|ffff]}{color[ffff]}吧。
065	關閉這個畫面。
066	接著關閉設定畫面。
068	接下來請叫出\n{color[0400]}{[0001|1d00]}計時器小節點{[0001|ffff]}{color[ffff]}。
069	我聽說囉，\n這好像是最後一課吧？
070	這種事你要先告訴我啊，\n我也需要做些心理準備……
071	好的！嗯～請把計時器小節點\n放到物件損壞時小節點的旁邊。
072	把{color[0400]}{[0001|1d00]}物件損壞時小節點{[0001|ffff]}{color[ffff]}和\n{color[0400]}{[0001|1d00]}計時器小節點{[0001|ffff]}{color[ffff]}連接起來！
073	然後，叫出{color[0400]}{[0001|1d00]}重來小節點{[0001|ffff]}{color[ffff]}。
074	終於到了最後一課……\n可別留下遺憾喔。
074000	把重來小節點移動到右下方……
075	把{color[0400]}{[0001|1d00]}重來小節點{[0001|ffff]}{color[ffff]}和\n{color[0400]}{[0001|1d00]}計時器小節點{[0001|ffff]}{color[ffff]}連接起來。
076	好了！這樣{color[0400]}{[0001|1d00]}當人損壞後，\n遊戲就會自動重來{[0001|ffff]}{color[ffff]}了！
077	去遊戲畫面確認一下吧！
078	試著從場地上掉下去看看。
079	遊戲自動重來了呢～！
080	接著再做一些{color[0400]}{[0001|1d00]}場地{[0001|ffff]}{color[ffff]}，\n我們就結束這個步驟吧！
081	請到程式設計畫面～
082	複製這個物件小節點……
083	把他放到上面吧！
084	再複製一次……
085	這次放到右邊。
086	再複製！
087	把他放到更右邊的地方～！
088	這樣一來場地就會\n變得稍微大一些了。
089	到遊戲畫面去確認一下吧～
090	一個簡單的場地完成囉！
091	我覺得……\n在這裡放個階梯\n應該會更有趣吧？
092	可是……\n我打算把這邊做得簡單一點……
093	來試看看嘛。
094	{[0201]}，\n我們到程式設計畫面去吧。
095	複製這個物件小節點。
096000	把他縮小一點，\n放到藍色框框的位置。
097	然後……因為是要做階梯……\n所以高度也需要調整一下。
098	先切換為{color[0400]}{[0001|1d00]}橫向視角{[0001|ffff]}{color[ffff]}。
099	那麼，把剛剛我們複製的\n物件小節點放到場地上吧。
101	接著來更改顏色。\n打開設定畫面……
102	把{color[0400]}{[0001|1d00]}顏色{[0001|ffff]}{color[ffff]}設定為{color[0400]}{[0001|1d00]}棕色{[0001|ffff]}{color[ffff]}。
103	關閉設定畫面……
104	來，我們繼續製作更多階梯吧。
105	複製物件小節點……
106	把他放大後放到右邊，\n讓階梯間出現高低差。
108	再複製一次！
109	再放大一些，把他放到右邊～～
111	這樣階梯就做好囉！
111-01	切換回俯瞰視角……
112	好了！\n我們去遊戲畫面確認看看吧！
113	到階梯那邊去！
114	哦哦～！\n出現階梯了～！
115	真有趣呢！
115-01	……不好意思。\n……我有點太激動了。
117	……嗯。\n雖然和預定不太一樣……\n但是遊戲變有趣了呢……
118	……我說得沒錯吧？
119	既然階梯也完成了……\n我們就回程式設計畫面去吧。
120	……那麼～～～這樣就～～～
121	完成第2步驟了～！
122-01	真是可喜可賀！
122-02	嗯，很壯觀呢。
122-03	你真厲害……
122-04	呵呵呵……
123	雖然這次也\n多花了點時間……
124	但我們離遊戲完成又靠近了一步。
125	從下個步驟開始，\n我們要製作場地特殊機關～！
126	場地特殊機關嗎……？
127	那麼……\n我們下個步驟再見囉～！
128	……再見了～
Lesson_3DAction_02.msbt
000	歡迎來到第3步驟！
001	歡迎啊，\n{[0201]}。
002	老樣子，來複習一下上次的內容吧。
003	請先試著從場地上掉下去看看。
004	我們上次設計了\n{color[0400]}{[0001|1d00]}當人從場地上掉下去時\n就會損壞的程式{[0001|ffff]}{color[ffff]}～
005	然後製作了一些場地。
006	還在那裡放了階梯，\n讓遊戲變得更有趣。
007	好的，那麼接下來……\n我們就來製作場地特殊機關吧～！
008	至於要做什麼機關～～
009	那就是{color[0400]}{[0001|1d00]}會移動的立足處{[0001|ffff]}{color[ffff]}！
010	……原來如此。\n要使用{color[0400]}{[0001|1d00]}滑動連接小節點{[0001|ffff]}{color[ffff]}\n來設計程式啊。
011	你破梗了！
012	……呃～就是這樣。\n我們來重現{color[0400]}{[0001|1d00]}GO! GO! 運動競技{[0001|ffff]}{color[ffff]}裡\n曾經製作過的{color[0400]}{[0001|1d00]}會移動的立足處{[0001|ffff]}{color[ffff]}吧！
013	來吧～那麼就趕快……
014	等一下。
015	……都說多少次了，\n不要打擾我上課啊……
016	既然已經用滑動連接小節點\n製作過會移動的立足處的話……
017	這次就改用{color[0400]}{[0001|1d00]}鉸鍊連接小節點{[0001|ffff]}{color[ffff]}\n製作{color[0400]}{[0001|1d00]}會轉呀轉的攔路棒{[0001|ffff]}{color[ffff]}如何？
018	可是……\n這次我打算做會移動的立足處啊……
019	別管什麼可是了。
020	實際設計程式的人是\n{[0201]}，\n我們問看看他的意見吧。
021	……好吧，\n我知道了。
022	那麼，\n就請{[0201]}來決定要做什麼吧！
023	{color[0400]}{[0001|1d00]}會移動的立足處{[0001|ffff]}{color[ffff]}和\n{color[0400]}{[0001|1d00]}會轉呀轉的攔路棒{[0001|ffff]}{color[ffff]}，\n你想製作哪一個呢？
023a	會移動的立足處
023b	攔路棒
024	太好了～～\n就是要選這個嘛！
025	怎麼這樣……
026	……算了，\n既然{[0201]}說想做，\n那就做吧。
027	那我們趕緊來設計程式吧～
028	果然是這個好吧！？
029	……嗯。\n既然{[0201]}\n都這麼說了……
030	那我們趕緊來\n製作攔路棒吧。
Lesson_3DAction_02a.msbt
000	那麼，首先我們來製作\n通過會移動的立足處後\n可以抵達的新場地吧。
001	複製物件小節點。
002	把他放到藍色框框裡～
003	我們要在這個場地間的空隙\n製作{color[0400]}{[0001|1d00]}會移動的立足處{[0001|ffff]}{color[ffff]}喔～
004	再複製一次\n這個物件小節點……
006	把他縮小～\n放到空隙的正中間。
007	然後打開設定畫面。
008	把{color[0400]}{[0001|1d00]}狀態{[0001|ffff]}{color[ffff]}設定為全都{color[0400]}{[0001|1d00]}關閉{[0001|ffff]}{color[ffff]}～
009	關閉設定畫面～
010	接著叫出{color[0400]}{[0001|1d00]}X軸 滑動{[0001|ffff]}{color[ffff]}的\n{color[0400]}{[0001|1d00]}滑動連接小節點{[0001|ffff]}{color[ffff]}。
011	{[0201]}……！\n到了最後一課你還願意用我，\n真是太感動了！！！
011-01	我、我……！\n我會為你努力到最後一刻！！！
013	請把{color[0400]}{[0001|1d00]}滑動連接小節點{[0001|ffff]}{color[ffff]}\n{color[0400]}{[0001|1d00]}連接{[0001|ffff]}{color[ffff]}到{color[0400]}{[0001|1d00]}物件小節點{[0001|ffff]}{color[ffff]}～
014	接著複製這個物件小節點……
015	由於要當作{[0001|1d00]}{color[0400]}立足處{color[ffff]}{[0001|ffff]}使用，\n把他稍微縮小一點後放到上方。
017	打開設定畫面吧～
018	把{color[0400]}{[0001|1d00]}狀態{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1d00]}能移動{[0001|ffff]}{color[ffff]}設定為{color[0400]}{[0001|1d00]}開啟{[0001|ffff]}{color[ffff]}。
019	{color[0400]}{[0001|1d00]}顏色{[0001|ffff]}{color[ffff]}設定為{color[0400]}{[0001|1d00]}黃色{[0001|ffff]}{color[ffff]}～
021	然後，把在{[0001|1d00]}{color[0400]}連接面{color[ffff]}{[0001|ffff]}裡的\n{[0001|1d00]}自己的連接面{[0001|ffff]}和{[0001|1d00]}連接對象的連接面{[0001|ffff]}\n都設定為{[0001|1d00]}{color[0400]}中央{color[ffff]}{[0001|ffff]}。
022	關閉這個畫面……
023	好了！\n請關閉設定畫面！
024	把這個{color[0400]}{[0001|1d00]}物件小節點\n連接{[0001|ffff]}{color[ffff]}到{color[0400]}{[0001|1d00]}滑動連接小節點{[0001|ffff]}{color[ffff]}吧～
025	在這個物件小節點的設定裡，\n{color[0400]}{[0001|1d00]}狀態{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1d00]}能移動{[0001|ffff]}{color[ffff]}被設定為{color[0400]}{[0001|1d00]}關閉{[0001|ffff]}{color[ffff]}……
026	所以與他{color[0400]}{[0001|1d00]}連接{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1d00]}立足處不會掉下去{[0001|ffff]}{color[ffff]}，\n而是會透過滑動連接小節點的力量\n{color[0400]}{[0001|1d00]}只在X方向上移動{[0001|ffff]}{color[ffff]}。
027	就是這樣～
028	……那麼，\n接著叫出{color[0400]}{[0001|1d00]}常數小節點{[0001|ffff]}{color[ffff]}。
030	把他放到藍色框框裡！
031	這個常數小節點是為了\n和{color[0400]}{[0001|1d00]}計數器小節點{[0001|ffff]}{color[ffff]}連接才叫出來的嗎？
032	{color[0400]}{[0001|1d00]}常數小節點{[0001|ffff]}{color[ffff]}和{color[0400]}{[0001|1d00]}計數器小節點{[0001|ffff]}{color[ffff]}的組合\n可以輸出{color[0400]}{[0001|1d00]}持續增加的數值{[0001|ffff]}{color[ffff]}。
033	沒錯～～～
034	……呃，\n可以不要三不五時就插話嗎？
035	我有很常插話嗎？
035-01	你插話好幾次了！
036	呃～抱歉我失態了……\n接下來請叫出{color[0400]}{[0001|1d00]}計數器小節點{[0001|ffff]}{color[ffff]}。
037	在這個步驟裡，\n愛麗絲插了2次話。
038	你看，\n只有2次啊。
039	我們回到正題！\n把計數器小節點\n移動到藍色框框裡……
040	打開設定畫面。
041	把{color[0400]}{[0001|1d00]}模式{[0001|ffff]}{color[ffff]}設定為{color[0400]}{[0001|1d00]}來回{[0001|ffff]}{color[ffff]}。
042	把{color[0400]}{[0001|1d00]}計算範圍{[0001|ffff]}{color[ffff]}\n設定為{color[0400]}{[0001|1d00]}-100到100{[0001|ffff]}{color[ffff]}。
043	如果就這樣把{color[0400]}{[0001|1d00]}滑動連接小節點{[0001|ffff]}{color[ffff]}\n連接到這個{color[0400]}{[0001|1d00]}計數器小節點{[0001|ffff]}{color[ffff]}，\n立足處會在{color[0400]}{[0001|1d00]}-100m到100m{[0001|ffff]}{color[ffff]}的範圍內移動。
044	要把{color[0400]}{[0001|1d00]}定位小節點{[0001|ffff]}{color[ffff]}夾在中間，\n縮小數值的範圍才行呢。
045	你看，第3次插嘴！！！
046	……好了，\n關閉設定畫面吧。
047	請把{color[0400]}{[0001|1d00]}常數小節點{[0001|ffff]}{color[ffff]}連接到\n{color[0400]}{[0001|1d00]}計數器小節點{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1d00]}增加端口{[0001|ffff]}{color[ffff]}。
048	然後……\n叫出{color[0400]}{[0001|1d00]}定位小節點{[0001|ffff]}{color[ffff]}吧。
049	唉呀！\n鮑伯博士和愛麗絲之間\n有股濃濃的火藥味～～～！
049-01	該不會……\n是因為他們都喜歡我～～～～？\n天啊～～你們不要為我吵架啊～～～！
050	把定位小節點放到\n計數器小節點的旁邊。
051	打開設定畫面。
052	把{color[0400]}{[0001|1d00]}輸入範圍{[0001|ffff]}{color[ffff]}設定為\n{color[0400]}{[0001|1d00]}-100.00到100.00{[0001|ffff]}{color[ffff]}。
053	把{color[0400]}{[0001|1d00]}輸出範圍{[0001|ffff]}{color[ffff]}設定為\n{color[0400]}{[0001|1d00]}-3.00到3.00{[0001|ffff]}{color[ffff]}～
054	那麼，我就開始插第4次嘴吧。
055	這樣計數器小節點輸出的數值\n就會從{color[0400]}{[0001|1d00]}-100到100{[0001|ffff]}{color[ffff]}……
056	轉換為{color[0400]}{[0001|1d00]}-3.00到3.00{[0001|ffff]}{color[ffff]}並輸出。
057	把他連接到{color[0400]}{[0001|1d00]}滑動連接小節點{[0001|ffff]}{color[ffff]}，\n{color[0400]}{[0001|1d00]}立足處{[0001|ffff]}{color[ffff]}就會在{color[0400]}{[0001|1d00]}-3.00m到3.00m{[0001|ffff]}{color[ffff]}的範圍內{color[0400]}{[0001|1d00]}移動{[0001|ffff]}{color[ffff]}。
058	……是的，\n他說得沒錯。
059	那麼，請關閉設定畫面。
060	把{color[0400]}{[0001|1d00]}計數器小節點{[0001|ffff]}{color[ffff]}和\n{color[0400]}{[0001|1d00]}定位小節點{[0001|ffff]}{color[ffff]}連接起來。
061	然後，把{color[0400]}{[0001|1d00]}定位小節點{[0001|ffff]}{color[ffff]}和\n{color[0400]}{[0001|1d00]}滑動連接小節點{[0001|ffff]}{color[ffff]}連接起來！
062	看！\n這樣{color[0400]}{[0001|1d00]}會移動的立足處{[0001|ffff]}{color[ffff]}就完成了！
063	到遊戲畫面去確認一下吧～
064	請到會移動的立足處那邊去。
065	做得好！\n立足處確實有在移動呢～！
066	雖然很可惜沒能製作攔路棒……\n但這樣也不錯呢。
067	對吧～～！！
068	那麼，如果你覺得確認清楚了，\n就回程式設計畫面吧。
069	那麼～～～～這樣就～～～
070	完成第3步驟了～！
071-01	恭喜你！！
071-02	恭喜你……啊！
071-03	由衷恭喜你。
072-00	這次我們製作了\n第一個場地特殊機關……\n會移動的立足處！
072	在下個步驟中，\n我們會製作更複雜的{color[0400]}{[0001|1d00]}開關機關{[0001|ffff]}{color[ffff]}喔～
073	開關嗎……
074	敬請期待！
075	好的～
076	那麼就下個步驟再見吧～
077	要來上課喔～
Lesson_3DAction_02b.msbt
000	那麼，我們先來製作\n場地的平面部分吧。
001	複製這個物件小節點。
002	把他放到右邊。
003	再複製一次。
004	把他放到更右邊的地方。
005	我們要在這個平面上\n設計攔路棒。
007	先叫出{color[0400]}{[0001|1d00]}圓柱體物件小節點{[0001|ffff]}{color[ffff]}，\n把他當作攔路棒的軸心。
008	……嗨。\n我會成為攔路棒的中心。
009	把這個物件小節點\n放到平面的正中央……
015	打開設定畫面。
016	因為他是攔路棒的軸心……\n把{color[0400]}{[0001|1d00]}狀態{[0001|ffff]}{color[ffff]}設定為只有{color[0400]}{[0001|1d00]}能看見{[0001|ffff]}{color[ffff]}、{color[0400]}{[0001|1d00]}能接觸{[0001|ffff]}{color[ffff]}是{color[0400]}{[0001|1d00]}開啟{[0001|ffff]}{color[ffff]}吧。
017	這樣這個圓柱體就不會動了。
018	接著，把{color[0400]}{[0001|1d00]}顏色{[0001|ffff]}{color[ffff]}設定為{color[0400]}{[0001|1d00]}白色{[0001|ffff]}{color[ffff]}。
019	好了，關閉設定畫面。
020	把{color[0400]}{[0001|1d00]}鉸鍊連接小節點連接{[0001|ffff]}{color[ffff]}到這個\n不會動的圓柱體物件小節點……
021	再把物件小節點{color[0400]}{[0001|1d00]}連接{[0001|ffff]}{color[ffff]}到\n{color[0400]}{[0001|1d00]}鉸鍊連接小節點{[0001|ffff]}{color[ffff]}上的話，\n就能{color[0400]}{[0001|1d00]}讓物件骨碌碌地轉動{[0001|ffff]}{color[ffff]}。
022	那麼事不宜遲，\n把{color[0400]}{[0001|1d00]}Y軸 鉸鍊{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1d00]}鉸鍊連接小節點{[0001|ffff]}{color[ffff]}叫出來吧。
023	{[0201]}！\n這是最後一課了呢～～！
024	把鉸鍊連接小節點\n放到物件小節點的上方。
025	把{color[0400]}{[0001|1d00]}鉸鍊連接小節點{[0001|ffff]}{color[ffff]}和\n{color[0400]}{[0001|1d00]}物件小節點{[0001|ffff]}{color[ffff]}連接起來。
026	接著叫出{[0001|1d00]}{color[0400]}球體物件小節點{color[ffff]}{[0001|ffff]}。
027	先讓這個{color[0400]}{[0001|1d00]}球體可以骨碌碌地轉動{[0001|ffff]}{color[ffff]}，\n然後把他{color[0400]}{[0001|1d00]}黏在棒子上{[0001|ffff]}{color[ffff]}，\n就可以做出{color[0400]}{[0001|1d00]}攔路棒{[0001|ffff]}{color[ffff]}了。
029	那麼……\n把{[0001|1d00]}{color[0400]}球體物件小節點{color[ffff]}{[0001|ffff]}放到上面。
030	打開設定畫面。
031	因為我們只想要\n讓球體骨碌碌地轉動……
032	所以把{color[0400]}{[0001|1d00]}狀態{[0001|ffff]}{color[ffff]}設定為\n只有{color[0400]}{[0001|1d00]}能移動{[0001|ffff]}{color[ffff]}是{color[0400]}{[0001|1d00]}開啟{[0001|ffff]}{color[ffff]}。
033	然後，把在{[0001|1d00]}{color[0400]}連接面{color[ffff]}{[0001|ffff]}裡的\n{[0001|1d00]}自己的連接面{[0001|ffff]}和{[0001|1d00]}連接對象的連接面{[0001|ffff]}\n都設定為{[0001|1d00]}{color[0400]}中央{color[ffff]}{[0001|ffff]}。
035	關閉這個畫面……
036	好，這樣就OK了。\n關閉設定畫面。
037	來吧，把{[0001|1d00]}{color[0400]}球體物件小節點{color[ffff]}{[0001|ffff]}\n{[0001|1d00]}{color[0400]}連接{color[ffff]}{[0001|ffff]}到{[0001|1d00]}{color[0400]}鉸鍊連接小節點{color[ffff]}{[0001|ffff]}。
039	接下來叫出{[0001|1d00]}{color[0400]}立方體物件小節點{color[ffff]}{[0001|ffff]}。
040	把他放大為棒子的大小，\n放到{color[0400]}{[0001|1d00]}圓柱體物件小節點{[0001|ffff]}{color[ffff]}的旁邊。
042	好，打開設定畫面。
043	把{color[0400]}{[0001|1d00]}狀態{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1d00]}會損壞{[0001|ffff]}{color[ffff]}設定為{color[0400]}{[0001|1d00]}關閉{[0001|ffff]}{color[ffff]}。
044	{color[0400]}{[0001|1d00]}顏色{[0001|ffff]}{color[ffff]}……\n就設定為{color[0400]}{[0001|1d00]}粉紅色{[0001|ffff]}{color[ffff]}吧。
045	然後，打開{[0001|1d00]}{color[0400]}連接面{color[ffff]}{[0001|ffff]}，\n把{[0001|1d00]}自己的連接面{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}X-{color[ffff]}{[0001|ffff]}，\n{[0001|1d00]}連接對象的連接面{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}X+{color[ffff]}{[0001|ffff]}。
045-01	這樣立方體的側面就會\n黏著球體的側面了。
047	那麼，關閉這個畫面。
048	關閉設定畫面吧。
048000	把{[0001|1d00]}{color[0400]}立方體物件小節點\n連接{color[ffff]}{[0001|ffff]}到{[0001|1d00]}{color[0400]}球體物件小節點{color[ffff]}{[0001|ffff]}。
049	好，接下來……
050	差不多該去遊戲畫面\n確認一下了吧？
051	適時地確認也是很重要的喔。
052	……你說得有道理。
053	那麼，{[0201]}，\n我們到遊戲畫面去吧。
054	到攔路棒那邊去。
055	嗯！有根棒子呢！
056	接下來只要讓這個物件\n骨碌碌地轉動就行了。
057	到程式設計畫面\n繼續設計程式吧。
058	我們要開始設計讓棒子\n骨碌碌地轉動的程式囉。
059	{color[0400]}{[0001|1d00]}鉸鍊連接小節點{[0001|ffff]}{color[ffff]}能依照輸入，\n控制與他連接的物件的{color[0400]}{[0001|1d00]}角度{[0001|ffff]}{color[ffff]}。
060	而球體物件小節點\n正連接在鉸鍊連接小節點上，\n所以{color[0400]}{[0001|1d00]}球體會隨著輸入的數值轉動{[0001|ffff]}{color[ffff]}。
061	也就是說，把連接了常數小節點的\n計數器小節點連接到定位小節點，\n並設定為循環輸出0～180的話……
062	……原理可以等等再說明，\n總之先來製作看看吧？
063	……嗯，\n那麼{[0201]}，\n把{color[0400]}{[0001|1d00]}常數小節點{[0001|ffff]}{color[ffff]}叫出來吧。
064	來囉！\n我是常數小節點，\n擁有絕不動搖之心！
065	把常數小節點\n放到藍色框框的位置……
066	接著叫出{color[0400]}{[0001|1d00]}計數器小節點{[0001|ffff]}{color[ffff]}。
067	{[0201]}，\n這是第7堂課。\n……是最後一課了。
068	把{color[0400]}{[0001|1d00]}計數器小節點{[0001|ffff]}{color[ffff]}\n放到{color[0400]}{[0001|1d00]}常數小節點{[0001|ffff]}{color[ffff]}的旁邊。
069	打開設定畫面。
070	把{color[0400]}{[0001|1d00]}模式{[0001|ffff]}{color[ffff]}設定為{color[0400]}{[0001|1d00]}循環{[0001|ffff]}{color[ffff]}。
071	把{color[0400]}{[0001|1d00]}計算範圍{[0001|ffff]}{color[ffff]}設定為{color[0400]}{[0001|1d00]}0到180{[0001|ffff]}{color[ffff]}。
072	關閉設定畫面。
073	那麼，把{color[0400]}{[0001|1d00]}常數小節點{[0001|ffff]}{color[ffff]}連接到\n{color[0400]}{[0001|1d00]}計數器小節點{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1d00]}增加端口{[0001|ffff]}{color[ffff]}吧。
074	這樣計數器小節點就會\n{color[0400]}{[0001|1d00]}循環{[0001|ffff]}{color[ffff]}計算{color[0400]}{[0001|1d00]}0到180{[0001|ffff]}{color[ffff]}的數值了。
074-01	因為計數器小節點\n會以每秒60的速度計算數值……
074-02	所以計算{color[0400]}{[0001|1d00]}0到180{[0001|ffff]}{color[ffff]}的數值\n就需要花費3秒。
075	好，接著叫出{color[0400]}{[0001|1d00]}定位小節點{[0001|ffff]}{color[ffff]}。
076	唉呀！\n沒想到在課堂上會遇見愛麗絲～～！
076-01	這……該不會是～～！\n有什麼大事要發生了吧～～～！？
077	……把定位小節點\n放到計數器小節點的旁邊。
078	然後把{color[0400]}{[0001|1d00]}計數器小節點\n{[0001|ffff]}{color[ffff]}連接到{color[0400]}{[0001|1d00]}定位小節點{[0001|ffff]}{color[ffff]}。
079	打開定位小節點的設定畫面。
080	{color[0400]}{[0001|1d00]}計數器小節點{[0001|ffff]}{color[ffff]}會輸入\n{color[0400]}{[0001|1d00]}0到180{[0001|ffff]}{color[ffff]}的數值\n到這個定位小節點……
081	所以把{color[0400]}{[0001|1d00]}輸入範圍{[0001|ffff]}{color[ffff]}\n設定為{color[0400]}{[0001|1d00]}0.00到180.00{[0001|ffff]}{color[ffff]}吧。
082	接著，{color[0400]}{[0001|1d00]}鉸鍊連接小節點{[0001|ffff]}{color[ffff]}\n會以輸入的數值為{color[0400]}{[0001|1d00]}角度{[0001|ffff]}{color[ffff]}\n讓物件轉動……
083	所以把{color[0400]}{[0001|1d00]}輸出範圍{[0001|ffff]}{color[ffff]}\n設定為{color[0400]}{[0001|1d00]}0.00到360.00{[0001|ffff]}{color[ffff]}，\n讓棒子可以{color[0400]}{[0001|1d00]}360°{[0001|ffff]}{color[ffff]}骨碌碌地轉動吧。
084	關閉設定畫面……
085	這樣一來，定位小節點就會\n{color[0400]}{[0001|1d00]}循環輸出0.00到360.00{[0001|ffff]}{color[ffff]}的數值了。
086	最後，只要把{color[0400]}{[0001|1d00]}定位小節點{[0001|ffff]}{color[ffff]}和\n{color[0400]}{[0001|1d00]}鉸鍊連接小節點{[0001|ffff]}{color[ffff]}連接起來……
087	好了！這樣一來……\n{color[0400]}{[0001|1d00]}會轉呀轉的攔路棒{[0001|ffff]}{color[ffff]}應該就完成了！
088	到遊戲畫面去確認一下吧！
089	去攔路棒那邊看看！
090	攔路棒在骨碌碌地轉動～～
091	真厲害！\n好有趣的機關啊！
092	雖然和預定完全不一樣……\n但這樣感覺也不錯！
093	……我就說吧！
094	好了，{[0201]}，\n等你看夠了，就回程式設計畫面吧。
095	好，這樣就～～～
096	完成第3步驟了～！
097-01	恭喜你～～～！！
097-02	恭喜你……啊！
097-03	由衷恭喜你。
098	我的台詞沒了……
099	……呃～這樣一來，\n第1個場地特殊機關就完成了。
100	在下個步驟中，\n我們會製作更複雜的{color[0400]}{[0001|1d00]}開關機關{[0001|ffff]}{color[ffff]}喔～
101	開關嗎……
102	敬請期待！
103	好的～
104	那麼就下個步驟再見吧～
105	要來上課喔～
Lesson_3DAction_03.msbt
000	好！我們開始第4步驟吧！
001	遊戲終於完成一半了呢。
002	{color[0400]}{[0001|1d00]}3D運動競技空間{[0001|ffff]}{color[ffff]}的場地\n也變得越來越豐富了呢～！
003	在這次的步驟中，\n我們要製作的是{color[0400]}{[0001|1d00]}按下開關\n就會出現橋樑{[0001|ffff]}{color[ffff]}的場地特殊機關。
004	我想要製作的場地特殊機關是{color[0400]}{[0001|1d00]}按下開關後，\n讓原本消失的橋樑在一定時間內出現{[0001|ffff]}{color[ffff]}。
005	等等……那個機關\n設計起來有點難吧？
006	他的步驟的確很複雜……\n不過我相信{[0201]}\n一定做得到，對吧？
007	……那我們來問問\n{[0201]}的意見吧！
008	我提議的{color[0400]}{[0001|1d00]}簡易開關{[0001|ffff]}{color[ffff]}程式……
009	跟有點難度的{color[0400]}{[0001|1d00]}計時式開關{[0001|ffff]}{color[ffff]}……
010	你想要做哪一個呢？
010a	簡易開關
010b	計時式開關
011	明白了！\n那麼我們就來製作\n簡易開關的程式吧～
012	真可惜……\n我覺得{[0201]}\n一定做得到的說。
013	那我們趕緊開始製作吧！
014	真不愧是{[0201]}！
015	{[0201]}……\n你確定嗎？
016	沒問題吧。\n他都做了這麼多練習了。
017	來，我們開始設計囉……\n到程式設計畫面去吧。
Lesson_3DAction_03a.msbt
000	首先是按下開關的方式～
001	我打算將程式設計成\n{color[0400]}{[0001|1d00]}把木箱放到開關上後，\n橋樑就會出現{[0001|ffff]}{color[ffff]}的機關！
002	先讓木箱登場吧！
003	請從{color[0400]}{[0001|1d00]}四方形時尚物件{[0001|ffff]}{color[ffff]}裡\n叫出{color[0400]}{[0001|1d00]}木箱{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1d00]}時尚物件小節點{[0001|ffff]}{color[ffff]}～
004	木箱……\n所謂的木箱就是用於收納之物。
005	居然將重點放在木箱本身\n而不是裡面的東西……\n♥好有才華喔♥
012	把時尚物件小節點\n放到藍色框框裡……
013	好！\n先來確認一下遊戲畫面吧～
014	嗯……\n離木箱有點遠呢……
015	這裡就利用{color[0400]}{[0001|1d00]}傳送物件小節點{[0001|ffff]}{color[ffff]}，\n把我們{color[0400]}{[0001|1d00]}傳送{[0001|ffff]}{color[ffff]}到木箱的位置吧。
016	回程式設計畫面吧～
017	首先，在起點這邊叫出\n{color[0400]}{[0001|1d00]}傳送物件入口小節點{[0001|ffff]}{color[ffff]}。
018	門……\n你是想利用我的力量\n提升遊戲開發效率嗎？
019	那樣也好，\n我的能力為萬物所用，\n你就盡情地使用我吧。
022	把傳送物件入口小節點\n疊在人小節點上……
024	打開傳送物件入口小節點的設定畫面！
025	把{color[0400]}{[0001|1d00]}傳送ID{[0001|ffff]}{color[ffff]}設定為{color[0400]}{[0001|1d00]}H{[0001|ffff]}{color[ffff]}。
026	打開{color[0400]}{[0001|1d00]}要傳送什麼？{[0001|ffff]}{color[ffff]}。
027	設定為只有{color[0400]}{[0001|1d00]}人{[0001|ffff]}{color[ffff]}是{color[0400]}{[0001|1d00]}開啟{[0001|ffff]}{color[ffff]}。
027000	關閉這個畫面……
028	接著關閉設定畫面吧！
030	接下來請叫出\n{color[0400]}{[0001|1d00]}傳送物件出口小節點{[0001|ffff]}{color[ffff]}。
031	門門……\n我已經從同伴那裡聽說了你的目的。
032	我的力量應該能夠成為\n你在創作之路上的助力吧。
034	切換為{[0001|1d00]}{color[0400]}橫向視角{color[ffff]}{[0001|ffff]}……
035	把傳送物件出口小節點\n稍微放大後放到平面上。
035-01	切換回{color[0400]}{[0001|1d00]}俯瞰視角{[0001|ffff]}{color[ffff]}……
036	打開傳送物件出口小節點的設定畫面。
037	把{color[0400]}{[0001|1d00]}傳送ID{[0001|ffff]}{color[ffff]}設定為{color[0400]}{[0001|1d00]}H{[0001|ffff]}{color[ffff]}吧。
040	關閉設定畫面。
042	好了～\n這樣確認起來應該會比較方便！
043	到遊戲畫面去確認一下吧～
044	我們被傳送到\n木箱這裡來了！
045	木箱也製作得很完美呢！\n接著我們來設計開關吧～
046	……等一下。
047	……怎麼了？
048	{[0201]}，\n你試著推看看這個木箱。
049	……木箱的方向會改變，\n不覺得很難推嗎？
050	……好像是耶。
051	我有個好辦法，\n不過……
052	嗯……
053	那……\n能請你試試看那個辦法嗎？
054	……好的！
055	來吧，{[0201]}，\n我們到程式設計畫面去看看。
056	要讓木箱在被推動時\n{color[0400]}{[0001|1d00]}不會改變方向{[0001|ffff]}{color[ffff]}……
057	只要使用{color[0400]}{[0001|1d00]}自由滑動連接小節點{[0001|ffff]}{color[ffff]}就可以了。
058	啊，原來如此！
059	來試著做看看吧。
060	首先，把{color[0400]}{[0001|1d00]}時尚物件小節點{[0001|ffff]}{color[ffff]}\n移動到旁邊一點。
061	接著，叫出{[0001|1d00]}{color[0400]}立方體物件小節點{color[ffff]}{[0001|ffff]}。
062	……嗨。
067	把這個{color[0400]}{[0001|1d00]}物件小節點{[0001|ffff]}{color[ffff]}放到\n{color[0400]}{[0001|1d00]}時尚物件小節點原本的位置{[0001|ffff]}{color[ffff]}。
067-01	打開物件小節點的設定畫面。
067-02	把{color[0400]}{[0001|1d00]}狀態{[0001|ffff]}{color[ffff]}設定為全都{color[0400]}{[0001|1d00]}關閉{[0001|ffff]}{color[ffff]}。
067-03	關閉設定畫面。
068	接著，叫出{color[0400]}{[0001|1d00]}自由滑動連接小節點{[0001|ffff]}{color[ffff]}。
069	你們在做什麼有趣的事啊？
070	果然在創作的路上\n就是需要即興感呢。
070000	把{color[0400]}{[0001|1d00]}自由滑動連接小節點{[0001|ffff]}{color[ffff]}\n放到藍色框框裡……
070-01	把{color[0400]}{[0001|1d00]}自由滑動連接小節點\n連接{[0001|ffff]}{color[ffff]}到{color[0400]}{[0001|1d00]}物件小節點{[0001|ffff]}{color[ffff]}。
070-02	打開{color[0400]}{[0001|1d00]}時尚物件小節點{[0001|ffff]}{color[ffff]}的設定畫面。
070-03	把在{[0001|1d00]}{color[0400]}連接面{color[ffff]}{[0001|ffff]}裡的\n{[0001|1d00]}自己的連接面{[0001|ffff]}和{[0001|1d00]}連接對象的連接面{[0001|ffff]}\n都設定為{[0001|1d00]}{color[0400]}中央{color[ffff]}{[0001|ffff]}。
070-04	關閉這個畫面……
070-05	關閉設定畫面。
070-06	把{color[0400]}{[0001|1d00]}時尚物件小節點連接{[0001|ffff]}{color[ffff]}到\n{color[0400]}{[0001|1d00]}自由滑動連接小節點{[0001|ffff]}{color[ffff]}。
070001	接著，打開自由滑動連接小節點的設定畫面。
070002	把{color[0400]}{[0001|1d00]}滑動的移動輸入{[0001|ffff]}{color[ffff]}設定為全都{color[0400]}{[0001|1d00]}關閉{[0001|ffff]}{color[ffff]}。
070003	這樣與他連接的{color[0400]}{[0001|1d00]}木箱{[0001|ffff]}{color[ffff]}\n就{color[0400]}{[0001|1d00]}可以自由地移動{[0001|ffff]}{color[ffff]}了。
070004	關閉設定畫面……
080	好，我們到遊戲畫面去\n看看會變成什麼樣子吧。
081	試著推動木箱看看。
082	怎麼樣？\n木箱的方向不會改變了吧！
083	真厲害……！
084	木箱{color[0400]}{[0001|1d00]}連接在看不見的立方體上{[0001|ffff]}{color[ffff]}，\n所以{color[0400]}{[0001|1d00]}不會改變方向{[0001|ffff]}{color[ffff]}……
085	加上{color[0400]}{[0001|1d00]}自由滑動連接小節點{[0001|ffff]}{color[ffff]}的\n{color[0400]}{[0001|1d00]}滑動的移動輸入{[0001|ffff]}{color[ffff]}被設定為{color[0400]}{[0001|1d00]}關閉{[0001|ffff]}{color[ffff]}，\n讓木箱{color[0400]}{[0001|1d00]}可以自由地移動{[0001|ffff]}{color[ffff]}。
086	……抱歉打擾你上課了。\n請繼續吧。
087	……遊戲變得更棒了！\n謝謝你！
089	好了！木箱的動作也變流暢了，\n接下來我們就努力製作{color[0400]}{[0001|1d00]}開關{[0001|ffff]}{color[ffff]}吧。
090	那麼，請叫出{color[0400]}{[0001|1d00]}立方體物件小節點{[0001|ffff]}{color[ffff]}……\n我們要把他設計成{color[0400]}{[0001|1d00]}開關{[0001|ffff]}{color[ffff]}。
090-01	接著，請把視角切換為{color[0400]}{[0001|1d00]}橫向視角{[0001|ffff]}{color[ffff]}。
092	把物件小節點移動到\n{color[0400]}{[0001|1d00]}稍微凸出平面{[0001|ffff]}{color[ffff]}的地方，\n讓他看起來像個開關。
092-01	切換回{color[0400]}{[0001|1d00]}俯瞰視角{[0001|ffff]}{color[ffff]}……
092-02	把物件小節點\n移動到下方吧。
093	打開物件小節點的設定畫面。
095	把{color[0400]}{[0001|1d00]}狀態{[0001|ffff]}{color[ffff]}設定為只有{color[0400]}{[0001|1d00]}能看見{[0001|ffff]}{color[ffff]}是{color[0400]}{[0001|1d00]}開啟{[0001|ffff]}{color[ffff]}……
097	把{color[0400]}{[0001|1d00]}顏色{[0001|ffff]}{color[ffff]}設定為{color[0400]}{[0001|1d00]}水藍色{[0001|ffff]}{color[ffff]}。
098	關閉設定畫面……
099	我們去看看\n變成什麼樣子了吧～
100	哦～出現了一個{color[0400]}{[0001|1d00]}開關{[0001|ffff]}{color[ffff]}！\n感覺按下去就會有事發生呢～！
101	我們要把這個開關設計成\n{color[0400]}{[0001|1d00]}放上木箱後橋樑就會出現{[0001|ffff]}{color[ffff]}。
102	來設計程式吧～
103	為了要確認{color[0400]}{[0001|1d00]}木箱是否放在開關上{[0001|ffff]}{color[ffff]}～
104	我們叫出{color[0400]}{[0001|1d00]}接觸感應器小節點{[0001|ffff]}{color[ffff]}吧！
105	咿……\n你找我有事嗎？
106	請把{color[0400]}{[0001|1d00]}接觸感應器小節點\n連接{[0001|ffff]}{color[ffff]}到開關的{color[0400]}{[0001|1d00]}物件小節點{[0001|ffff]}{color[ffff]}。
107	打開接觸感應器小節點的設定畫面。
107-01	接著打開{[0001|1d00]}{color[0400]}連接面{color[ffff]}{[0001|ffff]}，\n把{[0001|1d00]}自己的連接面{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}Y-{color[ffff]}{[0001|ffff]}，\n{[0001|1d00]}連接對象的連接面{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}Y+{color[ffff]}{[0001|ffff]}。
107-02	這樣接觸感應器就會\n黏在{color[0400]}{[0001|1d00]}開關的上方{[0001|ffff]}{color[ffff]}。
107-03	關閉這個畫面……
108	接下來打開{color[0400]}{[0001|1d00]}要確認什麼？{[0001|ffff]}{color[ffff]}……
109	設定為只有{color[0400]}{[0001|1d00]}木箱{[0001|ffff]}{color[ffff]}是{color[0400]}{[0001|1d00]}開啟{[0001|ffff]}{color[ffff]}吧～
110	關閉這個畫面……
110-01	把{color[0400]}{[0001|1d00]}狀態{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1d00]}能看見{[0001|ffff]}{color[ffff]}設定為{color[0400]}{[0001|1d00]}關閉{[0001|ffff]}{color[ffff]}。
111	這樣設定就完成了！\n請關閉設定畫面。
112	這樣一來，{color[0400]}{[0001|1d00]}當木箱放在開關上時{[0001|ffff]}{color[ffff]}，\n接觸感應器小節點就會{color[0400]}{[0001|1d00]}輸出訊號{[0001|ffff]}{color[ffff]}。
113	好！接下來只要設計出\n{color[0400]}{[0001|1d00]}讓橋樑出現的程式{[0001|ffff]}{color[ffff]}就完成了！
114	想要讓橋樑出現的話……
116	就要叫出{color[0400]}{[0001|1d00]}傳送物件入口小節點{[0001|ffff]}{color[ffff]}！
117	把{color[0400]}{[0001|1d00]}傳送物件入口小節點{[0001|ffff]}{color[ffff]}\n一口氣放大～
118	叫出{[0001|1d00]}{color[0400]}立方體物件小節點{color[ffff]}{[0001|ffff]}，\n把他當作這裡的橋樑！
120	把物件小節點\n放大到橋樑的大小……
121	打開物件小節點的設定畫面。
122	把{color[0400]}{[0001|1d00]}狀態{[0001|ffff]}{color[ffff]}設定為只有\n{color[0400]}{[0001|1d00]}能看見{[0001|ffff]}{color[ffff]}、{color[0400]}{[0001|1d00]}能接觸{[0001|ffff]}{color[ffff]}是{color[0400]}{[0001|1d00]}開啟{[0001|ffff]}{color[ffff]}。
123	然後，把{color[0400]}{[0001|1d00]}顏色{[0001|ffff]}{color[ffff]}設定為{color[0400]}{[0001|1d00]}黃色{[0001|ffff]}{color[ffff]}～
125	關閉設定畫面……
126	接下來，請打開\n傳送物件入口小節點的設定畫面。
127	把{color[0400]}{[0001|1d00]}狀態{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1d00]}能看見{[0001|ffff]}{color[ffff]}\n設定為{color[0400]}{[0001|1d00]}關閉{[0001|ffff]}{color[ffff]}……
128	打開{color[0400]}{[0001|1d00]}要傳送什麼？{[0001|ffff]}{color[ffff]}。
129	設定為只有{[0001|1d00]}{color[0400]}立方體{color[ffff]}{[0001|ffff]}是{[0001|1d00]}{color[0400]}開啟{color[ffff]}{[0001|ffff]}吧。
130	關閉這個畫面……
131	關閉設定畫面吧～
133	接著，請叫出\n{color[0400]}{[0001|1d00]}傳送物件出口小節點{[0001|ffff]}{color[ffff]}。
134-01	為了調整高度，\n切換為{color[0400]}{[0001|1d00]}橫向視角{[0001|ffff]}{color[ffff]}……
134-02	把傳送物件出口小節點\n移動到和平面一樣高的位置。
134-03	切換回{color[0400]}{[0001|1d00]}俯瞰視角{[0001|ffff]}{color[ffff]}～
135	打開傳送物件出口小節點的設定畫面吧。
136	把{color[0400]}{[0001|1d00]}狀態{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1d00]}能看見{[0001|ffff]}{color[ffff]}\n設定為{color[0400]}{[0001|1d00]}關閉{[0001|ffff]}{color[ffff]}。
137	關閉設定畫面……
138	好了，這樣讓橋樑出現的\n準備工作就都完成了！
139	只要把{color[0400]}{[0001|1d00]}接觸感應器小節點{[0001|ffff]}{color[ffff]}輸出的訊號\n輸入到{color[0400]}{[0001|1d00]}傳送物件入口小節點{[0001|ffff]}{color[ffff]}，\n應該就能傳送橋樑了……
141	不過兩個小節點距離實在太遠了，\n不方便直接連接……\n我們叫出{[0001|1d00]}{color[0400]}無線傳送入口小節點{color[ffff]}{[0001|ffff]}吧！
142	這裡是入口A。\n預定要和接觸感應器小節點接觸，\n請講。
143	把他放到接觸感應器小節點的旁邊……
144	把{color[0400]}{[0001|1d00]}接觸感應器小節點\n{[0001|ffff]}{color[ffff]}連接到{color[0400]}{[0001|1d00]}無線傳送入口小節點{[0001|ffff]}{color[ffff]}！
145	接著，在這裡叫出\n{color[0400]}{[0001|1d00]}無線傳送出口小節點{[0001|ffff]}{color[ffff]}！
146	這裡是出口A。\n收到，我也會和指定對象接觸，\n請講。
147	把他放到傳送物件入口小節點的旁邊……
148	把{color[0400]}{[0001|1d00]}無線傳送出口小節點{[0001|ffff]}{color[ffff]}和\n{color[0400]}{[0001|1d00]}傳送物件入口小節點{[0001|ffff]}{color[ffff]}連接起來！
149	辛苦你了！這樣一來，\n{color[0400]}{[0001|1d00]}把木箱放到開關上後，\n橋樑就會出現{[0001|ffff]}{color[ffff]}的機關就完成囉！
150	到遊戲畫面去確認一下吧！
151	推動木箱，\n把他移到開關上～
152	橋樑出現了！！
153	給你拍拍手～～～
154	但是……\n不覺得橋樑的出現\n有點太不顯眼了嗎？
155	哼哼……\n不要小看我喔！
156	設計可還沒結束呢～
157	接下來我們要設計特效，\n讓玩家清楚地知道橋樑出現了!
158	哦哦～
159	{[0201]}！\n我們去設計程式吧！
160	那麼，請叫出\n{color[0400]}{[0001|1d00]}煙霧{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1d00]}特效小節點{[0001|ffff]}{color[ffff]}！
161	你～好～
162	我只要在橋樑出現的時候\n炒熱氣氛就行了吧？
163	不過……我聽說過橋的時候～\n要喝一碗叫孟婆湯的東西呢～
164	……啊！\n那個是奈何橋，\n跟這個橋不一樣啊～～！
166	那麼，把特效小節點放大～
166000	打開特效小節點的設定畫面。
166001000	把{color[0400]}{[0001|1d00]}特效出現的位置{[0001|ffff]}{color[ffff]}\n設定為{color[0400]}{[0001|1d00]}空間{[0001|ffff]}{color[ffff]}吧！
166001001	接著，把{color[0400]}{[0001|1d00]}狀態{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1d00]}能看見{[0001|ffff]}{color[ffff]}\n設定為{color[0400]}{[0001|1d00]}關閉{[0001|ffff]}{color[ffff]}。
166002	關閉設定畫面～
167	接下來，請叫出\n{color[0400]}{[0001|1d00]}無線傳送出口小節點{[0001|ffff]}{color[ffff]}。
167000	把他放到特效小節點的旁邊……
168	把{color[0400]}{[0001|1d00]}無線傳送出口小節點\n{[0001|ffff]}{color[ffff]}和{color[0400]}{[0001|1d00]}特效小節點{[0001|ffff]}{color[ffff]}連接起來。
169	這個無線傳送出口小節點的\n{color[0400]}{[0001|1d00]}傳送ID{[0001|ffff]}{color[ffff]}是{color[0400]}{[0001|1d00]}A{[0001|ffff]}{color[ffff]}……
170	所以{color[0400]}{[0001|1d00]}接觸感應器小節點\n輸出的訊號{[0001|ffff]}{color[ffff]}會被傳送到這裡。
171	就是這麼一回事！
172	所以{color[0400]}{[0001|1d00]}當橋樑被傳送時{[0001|ffff]}{color[ffff]}，\n就會產生煙霧的特效！
173	我們到遊戲畫面\n去確認看看吧！
174	請把木箱推到開關上，\n讓橋樑出現。
175	看！橋樑登場的瞬間\n出現了煙霧的特效喔！
176	哦哦～～
177	這樣就很顯眼了呢。
178	對吧～～？
179	好，那我們回去\n程式設計畫面吧～！
186	那麼～～這樣就～～
187	完成第4步驟了！
188-01	♥恭喜你♥
188-02	恭喜啊。
188-03	咿……恭喜你。
189	好了，設計完解謎機關後，\n我們離遊戲完成之日也越來越近囉。
190	在下個步驟中，\n我們要製作遊戲的敵人角色！
191	敵人角色啊……好！
192	那麼，下次我們會\n面臨怎樣的挑戰呢！？
193	下個步驟再見囉～
194	敬請期待～
Lesson_3DAction_03b.msbt
000	這次要設計的機關，\n簡單來說就是……
001	{color[0400]}{[0001|1d00]}按下開關後，\n橋樑會出現10秒再消失{[0001|ffff]}{color[ffff]}。
002	有時間限制感覺\n比較有趣，對吧？
003	那麼，我們趕緊來製作{color[0400]}{[0001|1d00]}開關{[0001|ffff]}{color[ffff]}吧。
004	叫出{[0001|1d00]}{color[0400]}立方體物件小節點{color[ffff]}{[0001|ffff]}。
005	……嗨。\n你這次要製作開關啊。
005-01	切換為{color[0400]}{[0001|1d00]}橫向視角{[0001|ffff]}{color[ffff]}。
005-02	讓他從平面探出頭來，\n看起來才會像個開關。
005-03	那麼，切換回{color[0400]}{[0001|1d00]}俯瞰視角{[0001|ffff]}{color[ffff]}吧。
005000	把這個物件小節點移動到下方……
006	打開物件小節點的設定畫面。
007	把{color[0400]}{[0001|1d00]}狀態{[0001|ffff]}{color[ffff]}設定為只有{color[0400]}{[0001|1d00]}能看見{[0001|ffff]}{color[ffff]}是{color[0400]}{[0001|1d00]}開啟{[0001|ffff]}{color[ffff]}。
009	接著把{color[0400]}{[0001|1d00]}顏色{[0001|ffff]}{color[ffff]}設定為{color[0400]}{[0001|1d00]}水藍色{[0001|ffff]}{color[ffff]}。
012	OK。\n關閉設定畫面。
013	來，我們到遊戲畫面確認一下吧。
014	嗯……\n離開關有點遠呢……
015	先回程式設計畫面修改一下，\n讓我們{color[0400]}{[0001|1d00]}可以馬上移動到開關的位置{[0001|ffff]}{color[ffff]}吧。
016	只要利用{color[0400]}{[0001|1d00]}傳送物件小節點{[0001|ffff]}{color[ffff]}，\n我們就能馬上移動到開關的位置。
017	首先在這裡叫出\n{color[0400]}{[0001|1d00]}傳送物件入口小節點{[0001|ffff]}{color[ffff]}。
018	門……\n你是想利用我的力量\n提升遊戲開發效率嗎？
019	那樣也好，\n我的能力為萬物所用，\n你就盡情地使用我吧。
020	我們要利用這個\n{color[0400]}{[0001|1d00]}傳送物件入口小節點{[0001|ffff]}{color[ffff]}來傳送人。
022	把{color[0400]}{[0001|1d00]}傳送物件入口小節點{[0001|ffff]}{color[ffff]}\n疊在人小節點上。
023	然後……\n打開傳送物件入口小節點的設定畫面。
024	把{color[0400]}{[0001|1d00]}傳送ID{[0001|ffff]}{color[ffff]}設定為{color[0400]}{[0001|1d00]}H{[0001|ffff]}{color[ffff]}。
025	打開{color[0400]}{[0001|1d00]}要傳送什麼？{[0001|ffff]}{color[ffff]}。
026	設定為只有{color[0400]}{[0001|1d00]}人{[0001|ffff]}{color[ffff]}是{color[0400]}{[0001|1d00]}開啟{[0001|ffff]}{color[ffff]}。
027	關閉這個畫面……
028	接著關閉設定畫面。
030	接下來叫出\n{color[0400]}{[0001|1d00]}傳送物件出口小節點{[0001|ffff]}{color[ffff]}。
031	門門……\n我已經從同伴那裡聽說了你的目的。
032	我的力量應該能夠成為\n你在創作之路上的助力吧。
032-01	切換為{[0001|1d00]}{color[0400]}橫向視角{color[ffff]}{[0001|ffff]}……
032-02	把傳送物件出口小節點\n稍微放大後放到平面上。
032-03	切換回{color[0400]}{[0001|1d00]}俯瞰視角{[0001|ffff]}{color[ffff]}……
036	打開傳送物件出口小節點的設定畫面。
037	把{color[0400]}{[0001|1d00]}傳送ID{[0001|ffff]}{color[ffff]}設定為{color[0400]}{[0001|1d00]}H{[0001|ffff]}{color[ffff]}。
038	關閉設定畫面。
040	好，這樣應該就可以確認了。
041	嗯，有個看起來\n像是{color[0400]}{[0001|1d00]}開關{[0001|ffff]}{color[ffff]}的東西呢。
042	那麼，我們來設計\n{color[0400]}{[0001|1d00]}按下這個開關後，\n橋樑就會出現的程式{[0001|ffff]}{color[ffff]}吧。
043	首先，叫出{color[0400]}{[0001|1d00]}接觸感應器小節點{[0001|ffff]}{color[ffff]}。
044	咿……咦？愛麗絲……？\n你有什麼事嗎？
045	把{color[0400]}{[0001|1d00]}接觸感應器小節點{[0001|ffff]}{color[ffff]}和\n開關的{color[0400]}{[0001|1d00]}物件小節點連接{[0001|ffff]}{color[ffff]}起來。
046	然後……\n打開接觸感應器小節點的設定畫面。
046000	把{color[0400]}{[0001|1d00]}狀態{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1d00]}能看見{[0001|ffff]}{color[ffff]}設定為{color[0400]}{[0001|1d00]}關閉{[0001|ffff]}{color[ffff]}。
047	打開{color[0400]}{[0001|1d00]}要確認什麼？{[0001|ffff]}{color[ffff]}……
048	設定為只有{color[0400]}{[0001|1d00]}人{[0001|ffff]}{color[ffff]}是{color[0400]}{[0001|1d00]}開啟{[0001|ffff]}{color[ffff]}。
049	關閉這個畫面……
050	關閉設定畫面吧。
051	這樣一來，{color[0400]}{[0001|1d00]}當人按下開關時，\n接觸感應器小節點就會輸出訊號{[0001|ffff]}{color[ffff]}。
052	接下來只要製作出\n當接觸感應器小節點輸出訊號時，\n{color[0400]}{[0001|1d00]}讓橋樑出現的程式{[0001|ffff]}{color[ffff]}就可以了。
053	製作讓橋樑出現的程式時，\n也需要用到{color[0400]}{[0001|1d00]}傳送物件小節點{[0001|ffff]}{color[ffff]}喔。
054	首先，在這裡叫出\n{color[0400]}{[0001|1d00]}傳送物件入口小節點{[0001|ffff]}{color[ffff]}。
055	把傳送物件入口小節點放大……
056	接著叫出{[0001|1d00]}{color[0400]}立方體物件小節點{color[ffff]}{[0001|ffff]}，\n我們要把他當作橋樑。
057	……嗨。\n我會努力當一座橋樑的。
058	把物件小節點\n放大到橋樑的大小……
059	打開物件小節點的設定畫面。
060	把{color[0400]}{[0001|1d00]}狀態{[0001|ffff]}{color[ffff]}設定為只有\n{color[0400]}{[0001|1d00]}能看見{[0001|ffff]}{color[ffff]}、{color[0400]}{[0001|1d00]}能接觸{[0001|ffff]}{color[ffff]}是{color[0400]}{[0001|1d00]}開啟{[0001|ffff]}{color[ffff]}。
062	然後，把{color[0400]}{[0001|1d00]}顏色{[0001|ffff]}{color[ffff]}設定為{color[0400]}{[0001|1d00]}黃色{[0001|ffff]}{color[ffff]}。
063	關閉設定畫面。
064	接下來，請打開\n{color[0400]}{[0001|1d00]}傳送物件入口小節點{[0001|ffff]}{color[ffff]}的設定畫面。
065	把{color[0400]}{[0001|1d00]}狀態{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1d00]}能看見{[0001|ffff]}{color[ffff]}設定為{color[0400]}{[0001|1d00]}關閉{[0001|ffff]}{color[ffff]}……
066	開啟{color[0400]}{[0001|1d00]}要傳送什麼？{[0001|ffff]}{color[ffff]}。
067	設定為只有{[0001|1d00]}{color[0400]}立方體{color[ffff]}{[0001|ffff]}是{[0001|1d00]}{color[0400]}開啟{color[ffff]}{[0001|ffff]}。
068	關閉這個畫面……
069	好了，這樣設定就完成了。
070	接著在這邊叫出\n{color[0400]}{[0001|1d00]}傳送物件出口小節點{[0001|ffff]}{color[ffff]}。
070-01	為了調整高度，\n切換為{color[0400]}{[0001|1d00]}橫向視角{[0001|ffff]}{color[ffff]}……
070-02	把傳送物件出口小節點\n移動到和平面一樣高的位置。
070-03	切換回{color[0400]}{[0001|1d00]}俯瞰視角{[0001|ffff]}{color[ffff]}。
072	打開傳送物件出口小節點的設定畫面……
073	把{color[0400]}{[0001|1d00]}狀態{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1d00]}能看見{[0001|ffff]}{color[ffff]}設定為{color[0400]}{[0001|1d00]}關閉{[0001|ffff]}{color[ffff]}。
074	關閉設定畫面……
075	好，這麼一來，\n讓橋樑出現的準備工作就完成了。
076	只要把{color[0400]}{[0001|1d00]}接觸感應器小節點{[0001|ffff]}{color[ffff]}輸出的訊號\n輸入到這個{color[0400]}{[0001|1d00]}傳送物件入口小節點{[0001|ffff]}{color[ffff]}……
076-01	橋樑就會傳送到傳送出口，\n{color[0400]}{[0001|1d00]}看起來就像是橋樑出現了{[0001|ffff]}{color[ffff]}。
078	叫出{color[0400]}{[0001|1d00]}無線傳送入口小節點{[0001|ffff]}{color[ffff]}吧。\n我們要利用他來傳送\n接觸感應器小節點輸出的訊號。
079	這裡是入口A。\n預定要和接觸感應器小節點接觸，\n請講。
080	把無線傳送入口小節點\n放到藍色框框的位置……
081	把{color[0400]}{[0001|1d00]}接觸感應器小節點{[0001|ffff]}{color[ffff]}和\n{color[0400]}{[0001|1d00]}無線傳送入口小節點{[0001|ffff]}{color[ffff]}連接起來。
082	在這邊叫出\n{color[0400]}{[0001|1d00]}無線傳送出口小節點{[0001|ffff]}{color[ffff]}。
083	這裡是出口A。\n收到，我也會和指定對象接觸，\n請講。
084	把物件放到\n傳送小節點的旁邊……
085	把{color[0400]}{[0001|1d00]}無線傳送出口小節點{[0001|ffff]}{color[ffff]}和\n{color[0400]}{[0001|1d00]}傳送物件入口小節點{[0001|ffff]}{color[ffff]}連接起來。
086	好了，這樣{color[0400]}{[0001|1d00]}按下開關時\n讓橋樑出現的程式{[0001|ffff]}{color[ffff]}就完成了。
087	到遊戲畫面確認看看吧。
088	試著按下開關。
089	你看！\n橋樑出現了！
090	但是……\n總覺得橋樑出現時\n應該要更有魄力呢。
091	唔……\n你說得……有道理。
092	我有個好辦法喔！
093	哦……\n那能請你試試看那個辦法嗎？
094	交給我吧！\n{[0201]}，\n我們回程式設計畫面！
095	為了讓橋樑出現的\n場景能夠更有魄力……
096	請叫出{color[0400]}{[0001|1d00]}煙霧{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1d00]}特效小節點{[0001|ffff]}{color[ffff]}！
097	你～好～～
098	我只要在橋樑出現的時候\n炒熱氣氛就行了吧？
099	不過，我聽說過橋的時候～\n要喝一碗叫孟婆湯的東西呢～
100	……啊！\n那個是奈何橋，\n跟這個橋不一樣啊～～～！
101	……那麼，\n把特效小節點稍微放大一些～
102000	打開特效小節點的設定畫面。
102001	把{color[0400]}{[0001|1d00]}特效出現的位置{[0001|ffff]}{color[ffff]}\n設定為{color[0400]}{[0001|1d00]}空間{[0001|ffff]}{color[ffff]}！
1020031000	接著，把{color[0400]}{[0001|1d00]}狀態{[0001|ffff]}{color[ffff]}的\n{color[0400]}{[0001|1d00]}能看見{[0001|ffff]}{color[ffff]}設定為{color[0400]}{[0001|1d00]}關閉{[0001|ffff]}{color[ffff]}。
102002	關閉設定畫面～
103	接下來，請叫出\n{color[0400]}{[0001|1d00]}無線傳送出口小節點{[0001|ffff]}{color[ffff]}。
103000	把他放到特效小節點的旁邊……
104	把這個無線傳送出口小節點\n和特效小節點連接起來！
105	原來如此……因為這個\n{color[0400]}{[0001|1d00]}無線傳送出口小節點{[0001|ffff]}{color[ffff]}的\n{color[0400]}{[0001|1d00]}傳送ID{[0001|ffff]}{color[ffff]}是{color[0400]}{[0001|1d00]}A{[0001|ffff]}{color[ffff]}……
106	所以{color[0400]}{[0001|1d00]}接觸感應器小節點\n輸出的訊號{[0001|ffff]}{color[ffff]}會被傳送到這裡。
107	沒錯！
108	所以，{color[0400]}{[0001|1d00]}橋樑傳送過來的同時{[0001|ffff]}{color[ffff]}\n會產生特效。
109	那麼我們到\n遊戲畫面去確認看看吧！
110	請試著按下開關～
111	你看！\n{color[0400]}{[0001|1d00]}煙霧{[0001|ffff]}{color[ffff]}和橋樑一起出現了！
112	哦哦～～
113	感覺真不錯。
114	對吧～～
115	呃……\n抱歉打斷你了。
116	遊戲變得更棒了，\n謝謝你喔。
117	唔……
118	那麼接下來……我們就來設計\n{color[0400]}{[0001|1d00]}10秒後讓橋樑消失的程式{[0001|ffff]}{color[ffff]}吧。
119	去程式設計畫面吧。
120	{[0201]}，\n接下來的步驟有點複雜……\n你要努力跟上喔。
121	首先叫出{color[0400]}{[0001|1d00]}旗標小節點{[0001|ffff]}{color[ffff]}。
122	Zzz……
123	稍微移動一下旗標小節點……
124	把接觸感應器小節點連接到\n旗標小節點的{color[0400]}{[0001|1d00]}開啟端口{[0001|ffff]}{color[ffff]}。
125	這樣{color[0400]}{[0001|1d00]}當人按下開關時，\n旗標小節點就會開啟{[0001|ffff]}{color[ffff]}。
126	……按下開關時，\n記得叫醒我……
127	那麼，接著叫出\n{color[0400]}{[0001|1d00]}計時器小節點{[0001|ffff]}{color[ffff]}。
128	竟然又把我叫出來了……
129	聽說你們這次好像\n沒照著預定進行教學呢。
130	這種做法我可不認同啊。\n做任何事都得先制定好\n縝密的計畫並執行才對……
131	雖然說按照計畫執行很重要……\n但偶爾讓自己跳脫既定框架，\n隨心所欲地製作也很有趣喔。
132	……唔。\n我是無所謂啦。
133	那麼，把計時器小節點\n放到旗標小節點的旁邊。
134	把旗標小節點和\n計時器小節點連接起來。
135	這樣當人按下開關時，\n{color[0400]}{[0001|1d00]}旗標小節點就會開啟{[0001|ffff]}{color[ffff]}……
136	計時器小節點則會\n{color[0400]}{[0001|1d00]}每秒輸出1次訊號{[0001|ffff]}{color[ffff]}。
137	接下來我們要叫出\n{color[0400]}{[0001|1d00]}計數器小節點{[0001|ffff]}{color[ffff]}來計算秒數。
138	你好，我會幫忙計算\n按下開關後過了幾秒。
139	把計數器小節點\n移動到計時器小節點的旁邊。
140	把計時器小節點連接到\n計數器小節點的{color[0400]}{[0001|1d00]}增加端口{[0001|ffff]}{color[ffff]}。
141	這樣一來，{color[0400]}{[0001|1d00]}計算{[0001|ffff]}{color[ffff]}按下開關後\n{color[0400]}{[0001|1d00]}過了幾秒{[0001|ffff]}{color[ffff]}的程式就完成了。
142	那麼，接著我們來設計\n{color[0400]}{[0001|1d00]}計算剩餘時間{[0001|ffff]}{color[ffff]}的程式吧。
143	因為這次要製作的是\n{[0001|1d00]}{color[0400]}10秒{color[ffff]}{[0001|ffff]}後讓橋樑消失的程式……
144	只要用常數{color[0400]}{[0001|1d00]}10.00減去\n{[0001|ffff]}{color[ffff]}人{color[0400]}{[0001|1d00]}按下開關後的秒數{[0001|ffff]}{color[ffff]}……
145	就能計算出{color[0400]}{[0001|1d00]}剩下幾秒{[0001|ffff]}{color[ffff]}了。
146	好，首先叫出{color[0400]}{[0001|1d00]}常數小節點{[0001|ffff]}{color[ffff]}。
147	來囉！我是常數小節點，\n不論經過了幾秒，\n我的內心也絕不動搖！
148	把常數小節點放到\n計數器小節點的上方。
149	打開設定畫面……
150	設定為{color[0400]}{[0001|1d00]}10.00{[0001|ffff]}{color[ffff]}。
150000	關閉設定畫面。
151	接著叫出{color[0400]}{[0001|1d00]}－{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1d00]}計算小節點{[0001|ffff]}{color[ffff]}……
152	要計算剩餘時間的話，\n就交給高性能的我吧！
153	把計算小節點放到\n計數器小節點的旁邊。
154	那麼，把常數小節點連接到\n計算小節點的{color[0400]}{[0001|1d00]}輸入1端口{[0001|ffff]}{color[ffff]}。
155	把計數器小節點連接到\n計算小節點的{color[0400]}{[0001|1d00]}輸入2端口{[0001|ffff]}{color[ffff]}。
156	這樣一來，{color[0400]}{[0001|1d00]}計算小節點\n就可以輸出剩餘的秒數{[0001|ffff]}{color[ffff]}。
157	那麼，來想個辦法讓這個\n{color[0400]}{[0001|1d00]}剩餘時間顯示在遊戲畫面上{[0001|ffff]}{color[ffff]}吧。
158	我們想讓剩餘的秒數\n顯示在橋樑的旁邊。
159	而說到顯示數值，\n就是{color[0400]}{[0001|1d00]}附數字物件小節點{[0001|ffff]}{color[ffff]}了……\n把他叫出來吧。
160	沒錯，只要用\n{color[0400]}{[0001|1d00]}限制時間減去經過時間{[0001|ffff]}{color[ffff]}，\n就能求出剩餘時間了。
161	就像這樣……\n減法也可以用來\n計算剩餘的數值。
161-01	為了放大附數字物件小節點，\n我們先切換為{color[0400]}{[0001|1d00]}橫向視角{[0001|ffff]}{color[ffff]}。
161-02	放大附數字物件小節點。
161-03	切換回{color[0400]}{[0001|1d00]}俯瞰視角{[0001|ffff]}{color[ffff]}。
162	打開附數字物件小節點的設定畫面。
163	把{color[0400]}{[0001|1d00]}狀態{[0001|ffff]}{color[ffff]}設定為只有{color[0400]}{[0001|1d00]}能看見{[0001|ffff]}{color[ffff]}是{color[0400]}{[0001|1d00]}開啟{[0001|ffff]}{color[ffff]}。
164	關閉設定畫面。
165	我們想把{color[0400]}{[0001|1d00]}計算小節點輸出的訊號{[0001|ffff]}{color[ffff]}\n輸入到這個附數字物件小節點……
166	不過他們的距離有點遠……\n叫出{color[0400]}{[0001|1d00]}無線傳送入口小節點{[0001|ffff]}{color[ffff]}吧。
167	打開設定畫面。
168	把{[0001|1d00]}{color[0400]}傳送ID{color[ffff]}{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}C{color[ffff]}{[0001|ffff]}。
169	關閉設定畫面。
170	把計算小節點和\n無線傳送入口小節點連接起來吧。
171	在這邊叫出\n{color[0400]}{[0001|1d00]}無線傳送出口小節點{[0001|ffff]}{color[ffff]}。
172	打開設定畫面。
173	把{[0001|1d00]}{color[0400]}傳送ID{color[ffff]}{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}C{color[ffff]}{[0001|ffff]}吧。
174	關閉設定畫面……
175	把無線傳送出口小節點和\n附數字物件小節點連接起來。
176	好，這樣計算結果……\n也就是{color[0400]}{[0001|1d00]}剩餘時間{[0001|ffff]}{color[ffff]}就會\n顯示在附數字物件上了。
177	到遊戲畫面去看看吧。
178	試著按下開關。
179	橋樑旁邊的數值\n正在{color[0400]}{[0001|1d00]}倒數{[0001|ffff]}{color[ffff]}呢！
180	這樣我們就可以知道\n距離橋樑消失還{color[0400]}{[0001|1d00]}剩下多少時間{[0001|ffff]}{color[ffff]}了。
181	當然，我們還沒設計\n讓橋樑消失的程式。
182	在進入下一步前……\n我們先仔細看一下倒數的數字。
182-01	為了觀察數字的倒數情形，\n請再按一次開關。
183	數值變成{color[0400]}{[0001|1d00]}負數{[0001|ffff]}{color[ffff]}了。
184	{color[0400]}{[0001|1d00]}即使剩餘時間歸0{[0001|ffff]}{color[ffff]}，\n倒數還是{color[0400]}{[0001|1d00]}不會停止{[0001|ffff]}{color[ffff]}。
185	我們來把程式設計成\n{color[0400]}{[0001|1d00]}當剩餘時間歸0時就會停止倒數{[0001|ffff]}{color[ffff]}吧。
186	要在剩餘時間歸0時，\n讓倒數停止的話……
187	首先，我們要讓程式能\n確認{color[0400]}{[0001|1d00]}剩餘時間是否歸0{[0001|ffff]}{color[ffff]}。
188	這種時候能派上用場的小節點……
189	就是{color[0400]}{[0001|1d00]}＝{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1d00]}比較小節點{[0001|ffff]}{color[ffff]}了。\n把他叫出來吧。
190	剩餘時間是否等於0……\n很令人在意對吧！
191	把比較小節點放到\n計算小節點的旁邊。
192	接著叫出{color[0400]}{[0001|1d00]}常數小節點{[0001|ffff]}{color[ffff]}。
193	把常數小節點放到\n計算小節點的上方。
194	打開常數小節點的設定畫面。
196	設定為{color[0400]}{[0001|1d00]}0.00{[0001|ffff]}{color[ffff]}。
197	關閉設定畫面。
198	把常數小節點連接到\n比較小節點的{color[0400]}{[0001|1d00]}輸入1端口{[0001|ffff]}{color[ffff]}。
199	然後，把計算小節點連接到\n比較小節點的{color[0400]}{[0001|1d00]}輸入2端口{[0001|ffff]}{color[ffff]}。
200	好了，這樣就能知道\n{color[0400]}{[0001|1d00]}剩餘時間是否歸0{[0001|ffff]}{color[ffff]}了。
201	在這邊叫出\n{color[0400]}{[0001|1d00]}無線傳送入口小節點{[0001|ffff]}{color[ffff]}……
202	把他放到比較小節點的旁邊。
203	打開設定畫面。
204	把{color[0400]}{[0001|1d00]}傳送ID{[0001|ffff]}{color[ffff]}設定為未使用的{color[0400]}{[0001|1d00]}B{[0001|ffff]}{color[ffff]}。
205	關閉設定畫面。
206	接著……\n把他和比較小節點連接起來。
207	這樣{[0001|1d00]}{color[0400]}剩餘時間是否歸0{color[ffff]}{[0001|ffff]}的訊號就會\n輸入到{[0001|1d00]}{color[0400]}B{color[ffff]}{[0001|ffff]}的{[0001|1d00]}{color[0400]}無線傳送入口小節點{color[ffff]}{[0001|ffff]}了。
207000	而我們希望這個程式能在\n剩餘時間歸0時停止倒數……
208	所以得用{[0001|1d00]}{color[0400]}B{color[ffff]}{[0001|ffff]}的{[0001|1d00]}{color[0400]}無線傳送出口小節點{color[ffff]}{[0001|ffff]}\n來{[0001|1d00]}{color[0400]}關閉旗標小節點{color[ffff]}{[0001|ffff]}。
209	叫出{color[0400]}{[0001|1d00]}無線傳送出口小節點{[0001|ffff]}{color[ffff]}。
210	把他放到\n旗標小節點的下方吧。
211	打開設定畫面。
212	把{[0001|1d00]}{color[0400]}傳送ID{color[ffff]}{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}B{color[ffff]}{[0001|ffff]}。
213	關閉設定畫面。
214	把這個{color[0400]}{[0001|1d00]}無線傳送出口小節點{[0001|ffff]}{color[ffff]}\n連接到{color[0400]}{[0001|1d00]}旗標小節點{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1d00]}關閉端口{[0001|ffff]}{color[ffff]}。
215	這樣當{color[0400]}{[0001|1d00]}剩餘時間歸0時{[0001|ffff]}{color[ffff]}，\n旗標小節點就會{color[0400]}{[0001|1d00]}關閉{[0001|ffff]}{color[ffff]}……
216	也就是說，{color[0400]}{[0001|1d00]}訊號不會\n輸入到計時器小節點{[0001|ffff]}{color[ffff]}……
217	{color[0400]}{[0001|1d00]}倒數計時也就會停止了{[0001|ffff]}{color[ffff]}。
218	那麼接下來，\n為了讓剩餘時間可以\n在{color[0400]}{[0001|1d00]}旗標小節點關閉時恢復為10{[0001|ffff]}{color[ffff]}……
219	我們要把程式設計成\n當旗標小節點{color[0400]}{[0001|1d00]}關閉時，\n會重置計數器小節點{[0001|ffff]}{color[ffff]}。
220	想在{color[0400]}{[0001|1d00]}關閉時{[0001|ffff]}{color[ffff]}輸出訊號，\n就需要{color[0400]}{[0001|1d00]}NOT小節點{[0001|ffff]}{color[ffff]}……\n把他叫出來吧。
221	{[0201]}，\n這是課程的最後一個遊戲吧？
222	你最後會做出什麼遊戲……\n我可是一點都不期待喔！
224	把旗標小節點和NOT小節點連接起來。
225	把NOT小節點連接到\n計數器小節點的{color[0400]}{[0001|1d00]}重置端口{[0001|ffff]}{color[ffff]}。
226	好了，這樣{color[0400]}{[0001|1d00]}當剩餘時間歸0時\n會恢復為10的程式{[0001|ffff]}{color[ffff]}就完成了。
227	到遊戲畫面去確認一下吧。
228	試著按下開關。
229	注意看橋樑旁邊的數值……
229-01	請再按一次開關。
230	你看！\n當剩餘時間歸0時，\n數字就變回10了！
231	這樣一來，倒數10秒的程式就完成了。
232	我們一口氣\n設計了這麼多程式……
233	{[0201]}，\n你會不會累啊？
234	{[0201]}的話\n肯定沒問題。
235	還剩下最後幾步，\n你可要加油跟上喔。
236	那麼，最後我們要來製作\n當剩餘時間歸0時，\n{color[0400]}{[0001|1d00]}讓橋樑消失的程式{[0001|ffff]}{color[ffff]}。
237	在我們開始設計\n讓橋樑消失的程式之前……
238	請先注意看一下這個\n{color[0400]}{[0001|1d00]}傳送ID為A{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1d00]}無線傳送入口小節點{[0001|ffff]}{color[ffff]}。
239	{color[0400]}{[0001|1d00]}每當我們按下開關{[0001|ffff]}{color[ffff]}時，\n訊號就會輸入到這個\n無線傳送入口小節點。
240	接著訊號就會傳送到\n{color[0400]}{[0001|1d00]}連接著特效小節點{[0001|ffff]}{color[ffff]}的\n無線傳送出口小節點……
242	所以每次按下開關時，\n都會出現特效。
243	……這樣子\n感覺有點遜呢……
244	來修改一下程式吧。
245	{color[0400]}{[0001|1d00]}刪除{[0001|ffff]}{color[ffff]}連接接觸感應器小節點和\n無線傳送入口小節點的{color[0400]}{[0001|1d00]}配對線{[0001|ffff]}{color[ffff]}。
246	把{[0001|1d00]}{color[0400]}A{color[ffff]}{[0001|ffff]}的{[0001|1d00]}{color[0400]}無線傳送入口小節點{color[ffff]}{[0001|ffff]}\n移動到旁邊。
247	接著，把{color[0400]}{[0001|1d00]}旗標小節點{[0001|ffff]}{color[ffff]}和\n{color[0400]}{[0001|1d00]}無線傳送入口小節點{[0001|ffff]}{color[ffff]}連接起來。
248	這樣特效就只會在\n{color[0400]}{[0001|1d00]}旗標小節點從關閉\n變為開啟的瞬間{[0001|ffff]}{color[ffff]}出現了。
249	啊～這樣順眼多了。
250	那麼，回到正題吧。
251	接著我們要來設計\n{color[0400]}{[0001|1d00]}當剩餘時間歸0時，\n讓橋樑消失的程式{[0001|ffff]}{color[ffff]}。
252	想要讓物件消失……\n就叫出{color[0400]}{[0001|1d00]}傳送物件入口小節點{[0001|ffff]}{color[ffff]}吧。
254	打開設定畫面。
255	把{color[0400]}{[0001|1d00]}傳送ID{[0001|ffff]}{color[ffff]}設定為{color[0400]}{[0001|1d00]}B{[0001|ffff]}{color[ffff]}。
255000	把{color[0400]}{[0001|1d00]}狀態{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1d00]}能看見{[0001|ffff]}{color[ffff]}設定為{color[0400]}{[0001|1d00]}關閉{[0001|ffff]}{color[ffff]}。
255001	打開{color[0400]}{[0001|1d00]}要傳送什麼？{[0001|ffff]}{color[ffff]}。
255002	設定為只有{[0001|1d00]}{color[0400]}立方體{color[ffff]}{[0001|ffff]}是{[0001|1d00]}{color[0400]}開啟{color[ffff]}{[0001|ffff]}。
255003	關閉這個畫面。
256	關閉設定畫面……
257	放大傳送物件入口小節點。
257-01	為了調整高度，\n切換為{color[0400]}{[0001|1d00]}橫向視角{[0001|ffff]}{color[ffff]}。
257-02	把他移動到和橋樑相同的高度，\n這樣才能夠傳送橋樑。
257-03	切換回{color[0400]}{[0001|1d00]}俯瞰視角{[0001|ffff]}{color[ffff]}。
258	接下來……你還記得是\n哪個小節點會告訴我們\n{color[0400]}{[0001|1d00]}剩餘時間歸0{[0001|ffff]}{color[ffff]}的情況嗎？
259	他就是……{color[0400]}{[0001|1d00]}傳送ID為B{[0001|ffff]}{color[ffff]}的\n{color[0400]}{[0001|1d00]}無線傳送出口小節點{[0001|ffff]}{color[ffff]}。
260	來吧，叫出{color[0400]}{[0001|1d00]}無線傳送出口小節點{[0001|ffff]}{color[ffff]}。
261	打開設定畫面。
262	把{color[0400]}{[0001|1d00]}傳送ID{[0001|ffff]}{color[ffff]}設定為{color[0400]}{[0001|1d00]}B{[0001|ffff]}{color[ffff]}。
263	關閉設定畫面……
264	把無線傳送出口小節點和\n傳送物件入口小節點連接起來。
265	這樣一來，\n{color[0400]}{[0001|1d00]}當剩餘時間歸0時，\n橋樑就會消失{[0001|ffff]}{color[ffff]}了。
266	不過……依照目前的設計，\n橋樑一旦消失就不會再出現了……
267	這樣難度也太高了吧……
268	是啊。
269	所以，我們來把程式設計成\n{color[0400]}{[0001|1d00]}再次按下開關時，橋樑仍會出現{[0001|ffff]}{color[ffff]}吧。
270	要設計出這樣的效果……\n就不能讓橋樑消失。
271	我們得利用{color[0400]}{[0001|1d00]}傳送ID為B{[0001|ffff]}{color[ffff]}的\n{color[0400]}{[0001|1d00]}傳送物件出口小節點{[0001|ffff]}{color[ffff]}，\n把橋樑{color[0400]}{[0001|1d00]}傳送{[0001|ffff]}{color[ffff]}回原來的地方。
272	來吧，叫出{color[0400]}{[0001|1d00]}傳送物件出口小節點{[0001|ffff]}{color[ffff]}。
274	打開設定畫面。
275	{color[0400]}{[0001|1d00]}傳送ID{[0001|ffff]}{color[ffff]}已經是{color[0400]}{[0001|1d00]}B{[0001|ffff]}{color[ffff]}了呢。
275000	那麼，\n把{color[0400]}{[0001|1d00]}狀態{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1d00]}能看見{[0001|ffff]}{color[ffff]}設定為{color[0400]}{[0001|1d00]}關閉{[0001|ffff]}{color[ffff]}。
276	關閉設定畫面。
277	把傳送物件出口小節點\n放到橋樑的中心位置吧。
278	因為{color[0400]}{[0001|1d00]}當剩餘時間歸0時，\n橋樑就會被傳送到{[0001|ffff]}{color[ffff]}這裡……
279	所以{color[0400]}{[0001|1d00]}只要按下開關{[0001|ffff]}{color[ffff]}，\n就能靠{color[0400]}{[0001|1d00]}傳送物件入口小節點{[0001|ffff]}{color[ffff]}的力量，\n{color[0400]}{[0001|1d00]}讓橋樑再次出現{[0001|ffff]}{color[ffff]}。
280	好了，總之我們去確認看看吧。
281	試著按下開關。
282-00	從開關上離開……
282	就這樣等到剩餘時間歸0。
282-01	從按下開關的地方重來一次。
283	橋樑消失了！\n來吧，試著再按一次開關！
284	橋樑再次出現了呢～！
284-01	當剩餘時間歸0時，\n橋樑會消失……
284-02	此時若站在開關上，\n開關會被再次按下，\n橋樑也會再次出現。
285	哦哦～～！\n好厲害～～
286	這樣計時式開關就完成了！
287	走吧，去程式設計畫面。
293	那麼～～這樣就～～～
294	完成第4步驟了～！！
295-01	Zzz……恭喜你。
295-02	才不值得恭喜呢。
295-03	恭喜～～！
296	真不愧是{[0201]}！\n你堅持到了最後呢！
297	{[0201]}……\n你真厲害。
298	居然能完成這麼困難的程式……
299	好了，離遊戲完成之日\n也越來越近了……
300	{[0201]}，\n你可是掌握著這個遊戲的未來喔！
301	下次我們要製作敵人角色～
302	敵人角色啊……
303	下個步驟再見囉～
304	敬請期待～
Lesson_3DAction_04.msbt
000	你好～～
001	等你很久囉。
002	好！\n今天我們要來製作{color[0400]}{[0001|1d00]}敵人角色{[0001|ffff]}{color[ffff]}。
003	我原本打算製作的是……\n{color[0400]}{[0001|1d00]}當玩家出現在他面前時\n就會衝過來{[0001|ffff]}{color[ffff]}的敵人角色……
004	我覺得{color[0400]}{[0001|1d00]}追著玩家發射子彈{[0001|ffff]}{color[ffff]}的\n敵人角色會比較有趣。
005	我明白了，\n那這次也讓{[0201]}來決定吧。
006	{color[0400]}{[0001|1d00]}衝過來的敵人{[0001|ffff]}{color[ffff]}和\n{color[0400]}{[0001|1d00]}發射子彈的敵人{[0001|ffff]}{color[ffff]}，\n你想要製作哪一個呢？
006a	衝過來的敵人
006b	發射子彈的敵人
007	我明白了！\n那我們就來製作\n{color[0400]}{[0001|1d00]}衝過來的敵人{[0001|ffff]}{color[ffff]}吧。
008	我也來幫忙吧。
008000	謝謝你！
009	那麼，我們到程式設計畫面去吧！
010	好，那我們就來製作\n{color[0400]}{[0001|1d00]}追著玩家發射子彈的敵人{[0001|ffff]}{color[ffff]}吧。
011	感覺這個敵人會很有趣呢！
012	是啊。
013	好，我們到程式設計畫面去吧！
Lesson_3DAction_04a.msbt
000	那麼，我們要來製作\n{color[0400]}{[0001|1d00]}當人出現在他面前時\n就會衝過來的敵人{[0001|ffff]}{color[ffff]}囉～
001	首先要在這附近製作\n用來放置敵人的{color[0400]}{[0001|1d00]}平面{[0001|ffff]}{color[ffff]}。
001-01	我們要把這區的平面\n製作成特別的形狀喔～
002	首先，複製這個物件小節點……
002-01	把他調整為橫向的長條形～
003	接著{color[0400]}{[0001|1d00]}捲動程式設計畫面{[0001|ffff]}{color[ffff]}，\n把他放到{color[0400]}{[0001|1d00]}上方{[0001|ffff]}{color[ffff]}的藍色框框裡。
006	繼續複製物件小節點……
007	這次把他調整為縱向的長條形後，\n{color[0400]}{[0001|1d00]}捲動程式設計畫面{[0001|ffff]}{color[ffff]}將其放到上方。
008	再次複製這個物件小節點……
009	捲動程式設計畫面，\n把他放到{color[0400]}{[0001|1d00]}上方{[0001|ffff]}{color[ffff]}。
009000	接下來複製這個物件小節點……
009001	捲動程式設計畫面，\n把他放到上方～
010	好了！這樣一來，\n一個蜿蜒曲折的場地就完成囉！
011	蜿蜒曲折～
014	為了方便我們確認，\n來移動一下這個確認用的\n{color[0400]}{[0001|1d00]}傳送物件出口小節點吧{[0001|ffff]}{color[ffff]}！
015	捲動程式設計畫面，\n把這個{color[0400]}{[0001|1d00]}傳送物件出口小節點{[0001|ffff]}{color[ffff]}\n移動到{color[0400]}{[0001|1d00]}蜿蜒曲折的場地{[0001|ffff]}{color[ffff]}。
032	OK！\n到遊戲畫面去確認一下吧！
033	好！\n我們成功傳送到\n蜿蜒曲折的場地了！
035	怎麼樣！？\n這個場地看起來很有趣吧～？
036	我們要在這裡製作\n會向人襲來的敵人喔！
037	那麼，到程式設計畫面\n去設計程式吧～
038	說到敵人，就會想要使用\n{color[0400]}{[0001|1d00]}時尚物件小節點的外星人{[0001|ffff]}{color[ffff]}……
039	但{color[0400]}{[0001|1d00]}外星人{[0001|ffff]}{color[ffff]}自己是無法移動的！
040	在這種情況下～
041	我們要叫出{[0001|1d00]}{color[0400]}立方體{color[ffff]}{[0001|ffff]}的\n{[0001|1d00]}{color[0400]}可移動物件小節點{color[ffff]}{[0001|ffff]}！
042	你好！\n{[0201]} ，\n你有在運動嗎～？
043	讓你堅持到最後一課的這股毅力……
044	一定也能在運動時派上用場！
047	把可移動物件小節點\n移動到右方……
047-01	接著，從{color[0400]}{[0001|1d00]}圓形時尚物件{[0001|ffff]}{color[ffff]}裡\n叫出{color[0400]}{[0001|1d00]}外星人{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1d00]}時尚物件小節點{[0001|ffff]}{color[ffff]}！
047-02	存在於地球外的生命體……外星人。\n他正代表了我們對未知文化的渴望……
047-03	居然選擇了外星人，\n真不愧是{[0201]}♥
047-04	把時尚物件小節點稍微放大一些，\n放到可移動物件小節點的上方。
047-05	然後，請打開\n時尚物件小節點的設定畫面！
047-06	把{color[0400]}{[0001|1d00]}狀態{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1d00]}能破壞{[0001|ffff]}{color[ffff]}設定為{color[0400]}{[0001|1d00]}開啟{[0001|ffff]}{color[ffff]}。
047-08	接著，把在{[0001|1d00]}{color[0400]}連接面{color[ffff]}{[0001|ffff]}裡的\n{[0001|1d00]}自己的連接面{[0001|ffff]}和{[0001|1d00]}連接對象的連接面{[0001|ffff]}\n都設定為{[0001|1d00]}{color[0400]}中央{color[ffff]}{[0001|ffff]}。
047-09	關閉這個畫面……
047-10	關閉設定畫面。
047-11	接下來，把{color[0400]}{[0001|1d00]}時尚物件小節點{[0001|ffff]}{color[ffff]}\n連接到{color[0400]}{[0001|1d00]}可移動物件小節點{[0001|ffff]}{color[ffff]}！
047-12	接著，請打開\n{color[0400]}{[0001|1d00]}可移動物件小節點{[0001|ffff]}{color[ffff]}的設定畫面。
047-13	把{color[0400]}{[0001|1d00]}狀態{[0001|ffff]}{color[ffff]}設定為只有{color[0400]}{[0001|1d00]}能接觸{[0001|ffff]}{color[ffff]}是{color[0400]}{[0001|1d00]}開啟{[0001|ffff]}{color[ffff]}。
047-1300	然後打開{color[0400]}{[0001|1d00]}模式{[0001|ffff]}{color[ffff]}……
047-1301	設定為{[0001|1d00]}{color[0400]}速度{color[ffff]}{[0001|ffff]}。
047-14	關閉設定畫面。
047-1400	把{color[0400]}{[0001|1d00]}時尚物件小節點\n連接{[0001|ffff]}{color[ffff]}到{color[0400]}{[0001|1d00]}無法看見的\n可移動物件小節點{[0001|ffff]}{color[ffff]}……
047-1401	你是想要讓{color[0400]}{[0001|1d00]}外星人\n變得可以移動{[0001|ffff]}{color[ffff]}對吧。
047-15	沒錯！
047-16	先到遊戲畫面\n確認看看吧～
047-17	有外星人耶～！
047-18	我們要讓這個外星人{color[0400]}{[0001|1d00]}面向左方{[0001|ffff]}{color[ffff]}，\n使他{color[0400]}{[0001|1d00]}在人出現在面前時跑起來{[0001|ffff]}{color[ffff]}！
047-19	去程式設計畫面吧！
047-20	首先，為了讓外星人面向左方……
047-21	請把{color[0400]}{[0001|1d00]}可移動物件小節點\n向右轉動90°{[0001|ffff]}{color[ffff]}。
047-22	由於{color[0400]}{[0001|1d00]}時尚物件小節點\n連接著可移動物件小節點{[0001|ffff]}{color[ffff]}……
047-23	只要{color[0400]}{[0001|1d00]}轉動可移動物件小節點，\n外星人也會跟著轉動{[0001|ffff]}{color[ffff]}。
047-24	沒錯！\n謝謝你的補充說明！
047-25	那麼……接著我們來設計\n{color[0400]}{[0001|1d00]}當人出現在外星人面前時，\n外星人就會跑起來的程式{[0001|ffff]}{color[ffff]}！
053	為了要確認\n{color[0400]}{[0001|1d00]}人是否出現在外星人面前{[0001|ffff]}{color[ffff]}……
054	請叫出{color[0400]}{[0001|1d00]}接觸感應器小節點{[0001|ffff]}{color[ffff]}。
055	咿……\n這次又怎麼了？
057	放大{color[0400]}{[0001|1d00]}接觸感應器小節點{[0001|ffff]}{color[ffff]}，\n把他放到左方。
058	接著切換為{color[0400]}{[0001|1d00]}橫向視角{[0001|ffff]}{color[ffff]}……
059	調整他的高度後放到平面的上方。
060	請切換回俯瞰視角～
061	打開接觸感應器小節點的設定畫面吧！
062	把{color[0400]}{[0001|1d00]}狀態{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1d00]}能看見{[0001|ffff]}{color[ffff]}設定為{color[0400]}{[0001|1d00]}關閉{[0001|ffff]}{color[ffff]}……
063	打開{color[0400]}{[0001|1d00]}要確認什麼？{[0001|ffff]}{color[ffff]}。
064	設定為只有{color[0400]}{[0001|1d00]}人{[0001|ffff]}{color[ffff]}是{color[0400]}{[0001|1d00]}開啟{[0001|ffff]}{color[ffff]}。
065	關閉這個畫面……
066	關閉設定畫面。
068	我們要把程式設計成\n{color[0400]}{[0001|1d00]}當人接觸到{[0001|ffff]}{color[ffff]}這個接觸感應器時，\n{color[0400]}{[0001|1d00]}外星人就會跑起來{[0001|ffff]}{color[ffff]}。
068-01	首先，為了要記住\n「接觸到接觸感應器」這件事，\n請把{color[0400]}{[0001|1d00]}旗標小節點{[0001|ffff]}{color[ffff]}叫出來。
068-02	Zzz……\n當人出現在外星人面前時……\n記得叫醒我。
068-03	把旗標小節點放到\n接觸感應器小節點的旁邊……
068-04	把接觸感應器小節點和\n旗標小節點的{color[0400]}{[0001|1d00]}開啟端口{[0001|ffff]}{color[ffff]}連接起來！
068-05	這樣一來，\n當人接觸到接觸感應器時，\n{color[0400]}{[0001|1d00]}旗標小節點就會開啟{[0001|ffff]}{color[ffff]}了！
068-06	接下來，我們想讓{color[0400]}{[0001|1d00]}外星人{[0001|ffff]}{color[ffff]}在\n旗標小節點{color[0400]}{[0001|1d00]}開啟的期間移動{[0001|ffff]}{color[ffff]}。
069	我們希望外星人能向左方……\n也就是{[0001|1d00]}{color[0400]}X-的方向移動{color[ffff]}{[0001|ffff]}……
070	所以得向可移動物件小節點的\n{color[0400]}{[0001|1d00]}X端口{[0001|ffff]}{color[ffff]}輸入{color[0400]}{[0001|1d00]}負數{[0001|ffff]}{color[ffff]}才行！
071	那麼，請先叫出{color[0400]}{[0001|1d00]}常數小節點{[0001|ffff]}{color[ffff]}。
072	來囉！我是常數小節點，\n即使有敵人衝過來，\n我的內心也絕不動搖！
073	移動常數小節點……
074	打開設定畫面。
075	設定為{color[0400]}{[0001|1d00]}-5.00{[0001|ffff]}{color[ffff]}吧。
076	請關閉設定畫面。
077	接下來是要{color[0400]}{[0001|1d00]}在旗標小節點開啟的期間{[0001|ffff]}{color[ffff]}，\n把這個{color[0400]}{[0001|1d00]}-5.00輸入到可移動物件小節點{[0001|ffff]}{color[ffff]}吧。
080	沒錯，所以請叫出\n{[0001|1d00]}{color[0400]}×{color[ffff]}{[0001|ffff]}的{[0001|1d00]}{color[0400]}計算小節點{color[ffff]}{[0001|ffff]}！
081	你好，這事就交給\n高性能的我來辦吧。
082	把計算小節點放到\n可移動物件小節點的左方。
083	把{color[0400]}{[0001|1d00]}旗標小節點{[0001|ffff]}{color[ffff]}和\n{color[0400]}{[0001|1d00]}計算小節點{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1d00]}輸入1端口{[0001|ffff]}{color[ffff]}連接起來。
084	把{color[0400]}{[0001|1d00]}常數小節點{[0001|ffff]}{color[ffff]}和\n{color[0400]}{[0001|1d00]}計算小節點{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1d00]}輸入2端口{[0001|ffff]}{color[ffff]}連接起來。
085	最後把計算小節點和\n可移動物件小節點的{color[0400]}{[0001|1d00]}X端口{[0001|ffff]}{color[ffff]}連接起來……
086	這樣一來，\n{color[0400]}{[0001|1d00]}當人接觸到接觸感應器時，\n外星人就會跑起來{[0001|ffff]}{color[ffff]}了！
087	{color[0400]}{[0001|1d00]}在人接觸到{[0001|ffff]}{color[ffff]}\n接觸感應器{color[0400]}{[0001|1d00]}之前{[0001|ffff]}{color[ffff]}……
088	{color[0400]}{[0001|1d00]}旗標小節點是關閉{[0001|ffff]}{color[ffff]}狀態，\n所以不會輸出訊號。
089	因為計算小節點接收不到訊號，\n所以{color[0400]}{[0001|1d00]}相乘後的計算結果仍是0{[0001|ffff]}{color[ffff]}。
090	而{color[0400]}{[0001|1d00]}在人接觸到{[0001|ffff]}{color[ffff]}\n接觸感應器{color[0400]}{[0001|1d00]}之後{[0001|ffff]}{color[ffff]}……
091	{color[0400]}{[0001|1d00]}旗標小節點變為開啟{[0001|ffff]}{color[ffff]}，\n向計算小節點傳送{color[0400]}{[0001|1d00]}1.00{[0001|ffff]}{color[ffff]}的數值……
092	因為是1.00×-5.00 ，\n所以會輸入{color[0400]}{[0001|1d00]}-5.00{[0001|ffff]}{color[ffff]}到\n可移動物件小節點……對吧。
093	就是這麼回事！
094	那麼……\n我們到遊戲畫面去確認看看吧！
095	請走到外星人面前～
096	哇啊！\n外星人衝過來了！
097	這樣我們就完成了\n當人出現在他面前時\n就會跑起來的敵人角色！
097-01	訣竅是要看準時機跳起來閃躲喔。
097-02	沒錯！沒錯！
133	那麼，我們去程式設計畫面吧。
134	那麼～～～這樣就～～
135	完成第5步驟了！
136-01	恭喜你♥
136-02	恭喜你！！
136-03	咿……恭喜你。
137	完成敵人角色後，\n遊戲也變得越來越有趣了呢！
138	是呀。
139	在下個步驟中，\n我們要來製作遊戲的終點。
140	就快要結束了啊……
141	那麼就下個步驟再見吧～
142	要努力到最後一刻喔。
Lesson_3DAction_04b.msbt
000	那麼，我們要來製作\n能夠{color[0400]}{[0001|1d00]}追著人左右移動{[0001|ffff]}{color[ffff]}\n並{color[0400]}{[0001|1d00]}發射子彈的敵人{[0001|ffff]}{color[ffff]}囉。
001	首先來製作平面吧。
002	複製這個物件小節點。
003	{color[0400]}{[0001|1d00]}捲動程式設計畫面{[0001|ffff]}{color[ffff]}，\n把他放到{color[0400]}{[0001|1d00]}上方{[0001|ffff]}{color[ffff]}藍色框框的位置。
004	再次複製這個物件小節點。
005	捲動程式設計畫面，\n把他放到上方。
006	這樣就完成平面了。
006-01	接著……為了方便我們確認，\n移動一下這個用來傳送人的\n{color[0400]}{[0001|1d00]}傳送物件出口小節點{[0001|ffff]}{color[ffff]}吧。
006-02	向上捲動程式設計畫面，\n把{color[0400]}{[0001|1d00]}傳送物件出口小節點{[0001|ffff]}{color[ffff]}\n放到剛才製作的平面處。
007	好了，到遊戲畫面確認一下吧。
028	嗯嗯，看來很順利呢。\n我們被傳送到剛才做好的平面上了。
029	我們要在這裡製作\n能夠{color[0400]}{[0001|1d00]}配合人的動作\n左右移動的敵人{[0001|ffff]}{color[ffff]}喔。
030	那麼，到程式設計畫面\n去設計敵人吧。
031	說到敵人……就會想要用\n時尚物件小節點的{color[0400]}{[0001|1d00]}外星人{[0001|ffff]}{color[ffff]}……
032	但{color[0400]}{[0001|1d00]}外星人{[0001|ffff]}{color[ffff]}自己是無法移動的……
033	在這種情況下，我們需要使用\n{color[0400]}{[0001|1d00]}可移動物件小節點{[0001|ffff]}{color[ffff]}來設計程式。
034	那麼，叫出{[0001|1d00]}{color[0400]}立方體{color[ffff]}{[0001|ffff]}的\n{[0001|1d00]}{color[0400]}可移動物件小節點{color[ffff]}{[0001|ffff]}。
035	嗨！\n你有在運動嗎！？
036	你居然能堅持到最後一課……\n真是了不起的毅力～～！
037	請務必也將這股毅力\n發揮在每日的運動上，\n讓身體變得更加健康！
037000	打開可移動物件小節點的設定畫面。
037001	打開{color[0400]}{[0001|1d00]}模式{[0001|ffff]}{color[ffff]}。
037002	為了讓動作不要太激烈，\n我們選擇{[0001|1d00]}{color[0400]}速度{color[ffff]}{[0001|ffff]}……
037002-01	然後，把{color[0400]}{[0001|1d00]}狀態{[0001|ffff]}{color[ffff]}設定為\n只有{color[0400]}{[0001|1d00]}能接觸{[0001|ffff]}{color[ffff]}和{color[0400]}{[0001|1d00]}能移動{[0001|ffff]}{color[ffff]}是{color[0400]}{[0001|1d00]}開啟{[0001|ffff]}{color[ffff]}。
037003	OK。\n關閉設定畫面。
037-01	那麼，把{color[0400]}{[0001|1d00]}時尚物件小節點\n連接{[0001|ffff]}{color[ffff]}到這個{color[0400]}{[0001|1d00]}可移動物件小節點{[0001|ffff]}{color[ffff]}，\n{color[0400]}{[0001|1d00]}讓外星人可以移動{[0001|ffff]}{color[ffff]}吧。
037-02	從{color[0400]}{[0001|1d00]}圓形時尚物件{[0001|ffff]}{color[ffff]}裡叫出\n{color[0400]}{[0001|1d00]}外星人{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1d00]}時尚物件小節點{[0001|ffff]}{color[ffff]}。
037-03	存在於地球外的生命體……外星人。\n他正代表了我們對未知文化的渴望……
037-04	居然選擇了外星人，\n真不愧是{[0201]}♥
037-05	把{color[0400]}{[0001|1d00]}時尚物件小節點\n{[0001|ffff]}{color[ffff]}稍微放大一些後放到上方……
037-06	打開設定畫面。
037-08	把在{[0001|1d00]}{color[0400]}連接面{color[ffff]}{[0001|ffff]}裡的\n{[0001|1d00]}自己的連接面{[0001|ffff]}和{[0001|1d00]}連接對象的連接面{[0001|ffff]}\n都設定為{[0001|1d00]}{color[0400]}中央{color[ffff]}{[0001|ffff]}。
037-09	關閉這個畫面。
037-10	關閉設定畫面。
037-11	接著，把{color[0400]}{[0001|1d00]}時尚物件小節點{[0001|ffff]}{color[ffff]}\n{color[0400]}{[0001|1d00]}連接{[0001|ffff]}{color[ffff]}到{color[0400]}{[0001|1d00]}可移動物件小節點{[0001|ffff]}{color[ffff]}。
037-12	好，這樣一來……讓外星人\n動起來的準備工作就完成了。
037-13	到遊戲畫面去確認一下吧。
037-14	嗯，可以看到外星人呢。
037-15	我們要讓這個外星人\n{color[0400]}{[0001|1d00]}配合人的位置左右移動{[0001|ffff]}{color[ffff]}喔。
037-16	來吧，開始設計程式囉。
046	想要讓外星人\n{color[0400]}{[0001|1d00]}配合人的位置左右移動{[0001|ffff]}{color[ffff]}……
047	我們需要知道{color[0400]}{[0001|1d00]}外星人的位置\n和人的位置之間偏移了多少{[0001|ffff]}{color[ffff]}。
048	只要讓外星人\n隨著{color[0400]}{[0001|1d00]}偏移{[0001|ffff]}{color[ffff]}的幅度移動……
049	看起來就會像是\n{color[0400]}{[0001|1d00]}配合人的位置在移動{[0001|ffff]}{color[ffff]}。
050	總之我們先來設計看看吧！
051	為了確認{color[0400]}{[0001|1d00]}外星人的位置{[0001|ffff]}{color[ffff]}，\n請叫出{color[0400]}{[0001|1d00]}位置感應器小節點{[0001|ffff]}{color[ffff]}。
052	我只要看著外星人的位置就可以了吧！
053	了解！\n交給我吧！
054	稍微移動一下\n位置感應器小節點……
055	打開設定畫面。
056	把{color[0400]}{[0001|1d00]}狀態{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1d00]}能看見{[0001|ffff]}{color[ffff]}設定為{color[0400]}{[0001|1d00]}關閉{[0001|ffff]}{color[ffff]}。
057	關閉設定畫面。
058	把{color[0400]}{[0001|1d00]}位置感應器小節點連接{[0001|ffff]}{color[ffff]}到\n{[0001|1d00]}外星人{[0001|ffff]}的{color[0400]}{[0001|1d00]}時尚物件小節點{[0001|ffff]}{color[ffff]}。
061	這樣就可以知道\n{color[0400]}{[0001|1d00]}外星人的位置{[0001|ffff]}{color[ffff]}了。
062	接下來，我們想知道{color[0400]}{[0001|1d00]}人的位置{[0001|ffff]}{color[ffff]}。
063	因為{color[0400]}{[0001|1d00]}人小節點{[0001|ffff]}{color[ffff]}已經{color[0400]}{[0001|1d00]}連接了\n位置感應器小節點{[0001|ffff]}{color[ffff]}……
064	這裡就利用{color[0400]}{[0001|1d00]}無線傳送入口小節點{[0001|ffff]}{color[ffff]}，\n把{color[0400]}{[0001|1d00]}位置感應器小節點{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1d00]}X端口\n{[0001|ffff]}{color[ffff]}輸出的訊號傳送過去吧。
065	叫出{color[0400]}{[0001|1d00]}無線傳送入口小節點{[0001|ffff]}{color[ffff]}。
065000	把他放到\n位置感應器小節點的右上方……
066	打開設定畫面。
067	把{[0001|1d00]}{color[0400]}傳送ID{color[ffff]}{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}X{color[ffff]}{[0001|ffff]}。
068	關閉設定畫面。
069	把{color[0400]}{[0001|1d00]}位置感應器小節點{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1d00]}X端口{[0001|ffff]}{color[ffff]}和\n{color[0400]}{[0001|1d00]}無線傳送入口小節點{[0001|ffff]}{color[ffff]}連接起來。
070	在這邊叫出\n{color[0400]}{[0001|1d00]}無線傳送出口小節點{[0001|ffff]}{color[ffff]}。
071	把他放到位置感應器小節點的上方。
072	打開設定畫面。
073	把{[0001|1d00]}{color[0400]}傳送ID{color[ffff]}{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}X{color[ffff]}{[0001|ffff]}。
074	關閉設定畫面。
075	再來只要計算這個{color[0400]}{[0001|1d00]}人的X位置{[0001|ffff]}{color[ffff]}……
076	和{color[0400]}{[0001|1d00]}外星人的X位置{[0001|ffff]}{color[ffff]}之間\n{color[0400]}{[0001|1d00]}偏移{[0001|ffff]}{color[ffff]}了多少就可以了。
077	來吧，叫出{[0001|1d00]}{color[0400]}－{color[ffff]}{[0001|ffff]}的{[0001|1d00]}{color[0400]}計算小節點{color[ffff]}{[0001|ffff]}。
078	偏移幅度也交給\n高性能的我來計算吧。
078000	移動計算小節點……
079	把{color[0400]}{[0001|1d00]}無線傳送出口小節點{[0001|ffff]}{color[ffff]}和\n{color[0400]}{[0001|1d00]}計算小節點{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1d00]}輸入1端口{[0001|ffff]}{color[ffff]}連接起來。
080	把{color[0400]}{[0001|1d00]}位置感應器小節點{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1d00]}X端口{[0001|ffff]}{color[ffff]}和\n{color[0400]}{[0001|1d00]}計算小節點{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1d00]}輸入2端口{[0001|ffff]}{color[ffff]}連接起來。
081	這樣我們就可以計算出\n人和外星人的{color[0400]}{[0001|1d00]}位置偏移幅度{[0001|ffff]}{color[ffff]}。
082	把這個偏移幅度輸入到\n{color[0400]}{[0001|1d00]}無線傳送入口小節點{[0001|ffff]}{color[ffff]}吧。
083	叫出{color[0400]}{[0001|1d00]}無線傳送入口小節點{[0001|ffff]}{color[ffff]}……
084	把他放到計算小節點的右方。
085	打開無線傳送入口小節點的設定畫面。
086	把{color[0400]}{[0001|1d00]}傳送ID{[0001|ffff]}{color[ffff]}設定為{color[0400]}{[0001|1d00]}D{[0001|ffff]}{color[ffff]}。
087	關閉設定畫面。
088	把{color[0400]}{[0001|1d00]}計算小節點{[0001|ffff]}{color[ffff]}連接到\n{color[0400]}{[0001|1d00]}無線傳送入口小節點{[0001|ffff]}{color[ffff]}。
089	這樣一來，人和外星人的{color[0400]}{[0001|1d00]}位置偏移幅度{[0001|ffff]}{color[ffff]}\n就會從{color[0400]}{[0001|1d00]}D{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1d00]}無線傳送出口小節點{[0001|ffff]}{color[ffff]}輸出了。
090	那麼，我們趕緊叫出\n{color[0400]}{[0001|1d00]}無線傳送出口小節點{[0001|ffff]}{color[ffff]}……
091	把他放到可移動物件小節點的左方。
092	打開設定畫面。
093	把{color[0400]}{[0001|1d00]}傳送ID{[0001|ffff]}{color[ffff]}設定為{color[0400]}{[0001|1d00]}D{[0001|ffff]}{color[ffff]}。
094	關閉設定畫面。
095	接下來只要把{color[0400]}{[0001|1d00]}D{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1d00]}無線傳送出口小節點\n{[0001|ffff]}{color[ffff]}和{color[0400]}{[0001|1d00]}可移動物件小節點{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1d00]}X端口{[0001|ffff]}{color[ffff]}連接起來……
096	讓{color[0400]}{[0001|1d00]}外星人追著人左右移動{[0001|ffff]}{color[ffff]}的\n程式就完成了。
097	到遊戲畫面確認一下吧。
098	……外星人的動作有點奇怪呢。
099	不應該是這樣的……
100	啊……\n難道說……
101	你看，{color[0400]}{[0001|1d00]}起點{[0001|ffff]}{color[ffff]}的位置是在\n離這裡很遠的{color[0400]}{[0001|1d00]}左方{[0001|ffff]}{color[ffff]}對吧？
102	也就是說在遊戲開始的瞬間，\n{color[0400]}{[0001|1d00]}人和外星人的位置偏移幅度{[0001|ffff]}{color[ffff]}\n會變得非常{color[0400]}{[0001|1d00]}大{[0001|ffff]}{color[ffff]}……
103	所以當遊戲{color[0400]}{[0001|1d00]}開始時{[0001|ffff]}{color[ffff]}，\n{color[0400]}{[0001|1d00]}巨大的力量會施加在{[0001|ffff]}{color[ffff]}外星人身上，\n讓他作出奇怪的動作。
104	……啊～\n確實是這樣……
105	我在腦中模擬時，\n明明就很順利的說……
106	嗯……\n有些事情還是得要實際\n做做看才會知道結果呢。
107	那麼……\n為了不要讓外星人在\n{color[0400]}{[0001|1d00]}人在起點時{[0001|ffff]}{color[ffff]}就動起來……
108	我們來把程式設計成\n{color[0400]}{[0001|1d00]}當人抵達敵人所在的區域後{[0001|ffff]}{color[ffff]}，\n外星人才開始移動吧。
110	去設計程式吧。
111	{[0201]}，\n你有想到該怎麼設計這個程式嗎？
112	我們要使用{color[0400]}{[0001|1d00]}接觸感應器小節點{[0001|ffff]}{color[ffff]}、\n{color[0400]}{[0001|1d00]}旗標小節點{[0001|ffff]}{color[ffff]}還有{color[0400]}{[0001|1d00]}計算小節點{[0001|ffff]}{color[ffff]}喔。
113	首先叫出{color[0400]}{[0001|1d00]}接觸感應器小節點{[0001|ffff]}{color[ffff]}。
114	咿……\n這次又怎麼了？
115	我們要把程式設計成\n{color[0400]}{[0001|1d00]}當人接觸到{[0001|ffff]}{color[ffff]}這個接觸感應器時，\n{color[0400]}{[0001|1d00]}外星人就會動起來{[0001|ffff]}{color[ffff]}。
117	先打開接觸感應器小節點的設定畫面。
118	把{color[0400]}{[0001|1d00]}狀態{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1d00]}能看見{[0001|ffff]}{color[ffff]}設定為{color[0400]}{[0001|1d00]}關閉{[0001|ffff]}{color[ffff]}。
119	打開{color[0400]}{[0001|1d00]}要確認什麼？{[0001|ffff]}{color[ffff]}。
120	設定為只有{color[0400]}{[0001|1d00]}人{[0001|ffff]}{color[ffff]}是{color[0400]}{[0001|1d00]}開啟{[0001|ffff]}{color[ffff]}。
121	關閉這個畫面。
122	關閉設定畫面。
123	把接觸感應器小節點\n一口氣向兩邊拉長……\n確保人可以接觸到他……
125	接著切換為{color[0400]}{[0001|1d00]}橫向視角{[0001|ffff]}{color[ffff]}。
126	把他調整成像牆壁一樣高吧。
127	好了，切換回{color[0400]}{[0001|1d00]}俯瞰視角{[0001|ffff]}{color[ffff]}。
128	接著叫出{color[0400]}{[0001|1d00]}旗標小節點{[0001|ffff]}{color[ffff]}。
129	……Zzz……\n人來的話記得叫醒我……
131	把旗標小節點放到\n接觸感應器小節點的右方。
132	把{color[0400]}{[0001|1d00]}接觸感應器小節點{[0001|ffff]}{color[ffff]}和\n{color[0400]}{[0001|1d00]}旗標小節點{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1d00]}開啟端口{[0001|ffff]}{color[ffff]}連接起來吧。
133	接下來，叫出{color[0400]}{[0001|1d00]}無線傳送入口小節點{[0001|ffff]}{color[ffff]}。
134	把他放到旗標小節點的右方。
135	打開設定畫面。
136	把{color[0400]}{[0001|1d00]}傳送ID{[0001|ffff]}{color[ffff]}設定為{color[0400]}{[0001|1d00]}E{[0001|ffff]}{color[ffff]}。
137	關閉設定畫面。
138	把{color[0400]}{[0001|1d00]}旗標小節點{[0001|ffff]}{color[ffff]}和\n{color[0400]}{[0001|1d00]}無線傳送入口小節點{[0001|ffff]}{color[ffff]}連接起來。
140	這樣一來，當人接觸到接觸感應器時，\n{[0001|1d00]}{color[0400]}E{color[ffff]}{[0001|ffff]}的{[0001|1d00]}{color[0400]}無線傳送出口小節點{color[ffff]}{[0001|ffff]}就會輸出訊號。
141	那麼，在這邊叫出\n{color[0400]}{[0001|1d00]}無線傳送出口小節點{[0001|ffff]}{color[ffff]}……
142	打開設定畫面。
143	把{[0001|1d00]}{color[0400]}傳送ID{color[ffff]}{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}E{color[ffff]}{[0001|ffff]}。
144	關閉設定畫面。
145	把他放到{[0001|1d00]}{color[0400]}D{color[ffff]}{[0001|ffff]}的{[0001|1d00]}{color[0400]}無線傳送出口小節點{color[ffff]}{[0001|ffff]}的上方。
146	然後，{[0001|1d00]}{color[0400]}刪除{color[ffff]}{[0001|ffff]}連接{[0001|1d00]}{color[0400]}D{color[ffff]}{[0001|ffff]}的\n{[0001|1d00]}{color[0400]}無線傳送出口小節點{color[ffff]}{[0001|ffff]}和\n{[0001|1d00]}{color[0400]}可移動物件小節點{color[ffff]}{[0001|ffff]}的{[0001|1d00]}{color[0400]}配對線{color[ffff]}{[0001|ffff]}。
147	接著叫出{color[0400]}{[0001|1d00]}×{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1d00]}計算小節點{[0001|ffff]}{color[ffff]}。
148	把{color[0400]}{[0001|1d00]}計算小節點{[0001|ffff]}{color[ffff]}放到\n{color[0400]}{[0001|1d00]}可移動物件小節點{[0001|ffff]}{color[ffff]}的左方。
149	這個{[0001|1d00]}{color[0400]}D{color[ffff]}{[0001|ffff]}的{[0001|1d00]}{color[0400]}無線傳送出口小節點\n{color[ffff]}{[0001|ffff]}會輸出{[0001|1d00]}{color[0400]}人和外星人的位置偏移幅度{color[ffff]}{[0001|ffff]}。
150	而這個{[0001|1d00]}{color[0400]}E{color[ffff]}{[0001|ffff]}的{[0001|1d00]}{color[0400]}無線傳送出口小節點{color[ffff]}{[0001|ffff]} \n會在{[0001|1d00]}{color[0400]}人抵達剛才的地點時{color[ffff]}{[0001|ffff]}輸出訊號。
151	只要把這2個輸出{color[0400]}{[0001|1d00]}相乘{[0001|ffff]}{color[ffff]}……
152	就能在{[0001|1d00]}{color[0400]}E{color[ffff]}{[0001|ffff]}的{[0001|1d00]}{color[0400]}無線傳送出口小節點{color[ffff]}{[0001|ffff]} \n輸出訊號的期間……\n也就是在{[0001|1d00]}{color[0400]}人抵達剛才的地點時{color[ffff]}{[0001|ffff]}……
152-01	輸出{[0001|1d00]}{color[0400]}D{color[ffff]}{[0001|ffff]}的{[0001|1d00]}{color[0400]}無線傳送出口小節點{color[ffff]}{[0001|ffff]}的數值……\n也就是{[0001|1d00]}{color[0400]}人和外星人的位置偏移幅度{color[ffff]}{[0001|ffff]}。
153	來，把{[0001|1d00]}{color[0400]}E{color[ffff]}{[0001|ffff]}的{[0001|1d00]}{color[0400]}無線傳送出口小節點{color[ffff]}{[0001|ffff]}\n連接到計算小節點的{color[0400]}{[0001|1d00]}輸入1端口{[0001|ffff]}{color[ffff]}……
154	把{[0001|1d00]}{color[0400]}D{color[ffff]}{[0001|ffff]}的{[0001|1d00]}{color[0400]}無線傳送出口小節點{color[ffff]}{[0001|ffff]}\n連接到計算小節點的{color[0400]}{[0001|1d00]}輸入2端口{[0001|ffff]}{color[ffff]}。
155	最後，把計算小節點和\n{color[0400]}{[0001|1d00]}可移動物件小節點{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1d00]}X端口{[0001|ffff]}{color[ffff]}連接起來。
156	這樣一來……{color[0400]}{[0001|1d00]}當人抵達這個區域後，\n外星人才開始移動{[0001|ffff]}{color[ffff]}的程式就完成了。
157	我們到遊戲畫面去確認一下吧。
158	試著前進看看。
159	當人左右移動時，\n外星人也會跟著移動喔。
159-01	如果外星人掉下去了，\n就按下重來鍵重新開始遊戲。
160	嗯，看來很順利呢！\n外星人會追著人左右移動！
178	那麼，最後我們來設計\n讓外星人{color[0400]}{[0001|1d00]}發射子彈{[0001|ffff]}{color[ffff]}的程式吧。
179	說到能發射球體，當然就要……
180	叫出{color[0400]}{[0001|1d00]}10個{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1d00]}發射物件小節點{[0001|ffff]}{color[ffff]}。
181	哦哦～～\n終於輪到我出場啦～～
182	我還以為沒我的戲分了呢～～！
184	打開發射物件小節點的設定畫面。
186	接著打開{[0001|1d00]}{color[0400]}連接面{color[ffff]}{[0001|ffff]}，\n把{[0001|1d00]}自己的連接面{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}Z+{color[ffff]}{[0001|ffff]}，\n{[0001|1d00]}連接對象的連接面{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}Z-{color[ffff]}{[0001|ffff]}。
187	關閉這個畫面。
188	打開{color[0400]}{[0001|1d00]}發射方向{[0001|ffff]}{color[ffff]}。
189	設定為{[0001|1d00]}{color[0400]}Z-{color[ffff]}{[0001|ffff]}。
189-01	然後，把{color[0400]}{[0001|1d00]}顏色{[0001|ffff]}{color[ffff]}設定為{color[0400]}{[0001|1d00]}粉紅色{[0001|ffff]}{color[ffff]}。
190	關閉設定畫面……
191	把{color[0400]}{[0001|1d00]}發射物件小節點{[0001|ffff]}{color[ffff]}和\n{color[0400]}{[0001|1d00]}時尚物件小節點連接{[0001|ffff]}{color[ffff]}起來。
194	最後把{[0001|1d00]}{color[0400]}E{color[ffff]}{[0001|ffff]}的{[0001|1d00]}{color[0400]}無線傳送出口小節點\n{color[ffff]}{[0001|ffff]}和{[0001|1d00]}{color[0400]}發射物件小節點{color[ffff]}{[0001|ffff]}連接起來。
195	這樣一來，當人進入這個區域後，\n外星人就會開始發射球體。
196	來吧，到遊戲畫面去確認一下。
197	試著前進看看。
197-01	如果外星人掉下去了，\n就按下重來鍵重新開始遊戲。
198	你看！現在外星人能夠\n在左右移動的同時發射子彈了！
198000	這樣一來……\n{color[0400]}{[0001|1d00]}會配合人的動作左右移動\n並發射子彈的敵人{[0001|ffff]}{color[ffff]}就完成了！
198001	好厲害！強敵誕生啦！
204	呵呵……\n如果你覺得確認清楚了，\n就回去程式設計畫面吧。
205	那麼～～～這樣就～～
206	完成第5步驟了～！
207-01	哦哦～恭喜你啊！
207-02	恭喜你！！
207-03	恭喜！
208	完成敵人角色後，\n遊戲也變得越來越有趣了呢！
209	是呀。
210	在下個步驟中，\n我們要來製作遊戲的{color[0400]}{[0001|1d00]}終點{[0001|ffff]}{color[ffff]}。
211	就快要結束了啊……
212	那麼就下個步驟再見吧～
213	一起努力到最後一刻吧～
Lesson_3DAction_05.msbt
000	好，{color[0400]}{[0001|1d00]}3D運動競技空間{[0001|ffff]}{color[ffff]}\n就快要完成囉！
001	嗯……
002	雖然中間發生了不少插曲，\n遊戲內容也變得和預定不太一樣……
003	但是這些改變都讓\n遊戲變得更好玩了！
004	咦……！
005	來吧，{[0201]}～\n我們再稍微加把勁吧！
006	這次我們要製作結局……\n也就是這個遊戲的{color[0400]}{[0001|1d00]}終點{[0001|ffff]}{color[ffff]}！
007	到程式設計畫面\n去設計程式吧！
008	先從{color[0400]}{[0001|1d00]}平面{[0001|ffff]}{color[ffff]}開始設計。
009	跟之前一樣對吧？
010	沒錯！請跟之前一樣\n複製這個物件小節點。
011	然後{color[0400]}{[0001|1d00]}捲動程式設計畫面{[0001|ffff]}{color[ffff]}，\n把複製出來的物件小節點放到上方。
012	接著複製這個物件小節點……
013	把他放到更上方。
014	再複製一次！
015	放到更上面的地方～
016	那麼……\n我們去遊戲畫面確認一下吧！
017	等一下！
018	你忘記放確認用的傳送小節點囉。
019	啊，對耶。
019-01	那麼，{[0201]}，\n請把這個{color[0400]}{[0001|1d00]}傳送物件出口小節點{[0001|ffff]}{color[ffff]}放到上方。
038	OK！
039	那麼，這次我們真的要\n去遊戲畫面確認囉！
040	到了！這裡就是最後的區域喔！
041	感覺蠻大的呢。
042	好了！回程式設計畫面設計終點吧～
043	那麼，我們要在這邊設計{color[0400]}{[0001|1d00]}終點{[0001|ffff]}{color[ffff]}。
044	這裡就使用遊戲中\n常見的經典設定……\n將{color[0400]}{[0001|1d00]}獲得藏寶箱視為抵達終點{[0001|ffff]}{color[ffff]}吧。
045	請從{color[0400]}{[0001|1d00]}四方形時尚物件{[0001|ffff]}{color[ffff]}裡\n叫出{color[0400]}{[0001|1d00]}藏寶箱{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1d00]}時尚物件小節點{[0001|ffff]}{color[ffff]}。
046	用大家最愛的藏寶箱……
047	為遊戲畫下經典的句號，\n真不愧是{[0201]}♥
047000	稍微移動一下\n{color[0400]}{[0001|1d00]}時尚物件小節點{[0001|ffff]}{color[ffff]}。
051	打開時尚物件小節點的\n設定畫面吧。
052	把{color[0400]}{[0001|1d00]}狀態{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1d00]}能移動{[0001|ffff]}{color[ffff]}設定為{color[0400]}{[0001|1d00]}關閉{[0001|ffff]}{color[ffff]}。
053	這是為了讓藏寶箱\n在被接觸到時不會移動對吧？
054	沒錯～
055	好了！\n關閉設定畫面。
056	接著，我們希望遊戲能夠在\n{color[0400]}{[0001|1d00]}人接觸到藏寶箱時讓拉炮響起{[0001|ffff]}{color[ffff]}。
057	……這樣的話～
058	{[0201]}，\n你先叫出{color[0400]}{[0001|1d00]}接觸感應器小節點{[0001|ffff]}{color[ffff]}。
059	咿……\n你、你把我叫到這麼偏僻的地方來，\n究竟想要做什麼～～？
060	把接觸感應器小節點放到\n時尚物件小節點的右方後，\n稍微放大一些。
061	讓他比藏寶箱大一點，\n才比較容易產生反應。
062	說得對！
063	那麼，打開接觸感應器小節點的設定畫面。
064	把{color[0400]}{[0001|1d00]}狀態{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1d00]}能看見{[0001|ffff]}{color[ffff]}設定為{color[0400]}{[0001|1d00]}關閉{[0001|ffff]}{color[ffff]}。
065	打開{color[0400]}{[0001|1d00]}要確認什麼？{[0001|ffff]}{color[ffff]}。
066	設定為只有{color[0400]}{[0001|1d00]}人{[0001|ffff]}{color[ffff]}是{color[0400]}{[0001|1d00]}開啟{[0001|ffff]}{color[ffff]}。
067	關閉這個畫面。
068	關閉設定畫面。
069	好，把這個{color[0400]}{[0001|1d00]}接觸感應器小節點\n連接{[0001|ffff]}{color[ffff]}到{color[0400]}{[0001|1d00]}時尚物件小節點{[0001|ffff]}{color[ffff]}。
070	這樣一來，{color[0400]}{[0001|1d00]}當人接觸到藏寶箱時\n就會輸出訊號{[0001|ffff]}{color[ffff]}的程式就做好囉。
071	真厲害！
072	那麼，最後請叫出\n{color[0400]}{[0001|1d00]}拉炮{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1d00]}特效小節點{[0001|ffff]}{color[ffff]}～
073	你～好～～
074	拿到藏寶箱後就\n砰的一聲讓拉炮響起，\n越大聲越好，對吧～～
075	不過，要是裡面\n空空如也的話……\n那就太令人失望啦～
076	那麼，把特效小節點放到\n接觸感應器小節點的右方……
077	把接觸感應器小節點和\n特效小節點連接起來。
077-01	好了！這樣一來……\n當人獲得藏寶箱時，\n拉炮就會響起了！
077-02	我覺得……
077-03	我們可以加上{color[0400]}{[0001|1d00]}號角{[0001|ffff]}{color[ffff]}的音效，\n讓抵達終點時的氣氛變得更熱鬧……\n你們覺得呢？
077-04	感覺不錯耶！\n把號角的音效也加進去吧！
077-05	好！{[0201]}，\n從{color[0400]}{[0001|1d00]}播放音效{[0001|ffff]}{color[ffff]}裡叫出{color[0400]}{[0001|1d00]}播放聲音小節點{[0001|ffff]}{color[ffff]}。
077-0501	這精彩的最後一幕\n就交給我吧～～～♪
077-06	把他放到特效小節點的下方。
077-07	來吧！\n打開設定畫面！
077-08	選擇{color[0400]}{[0001|1d00]}效果音樂{[0001|ffff]}{color[ffff]}……
077-09	選擇{color[0400]}{[0001|1d00]}號角{[0001|ffff]}{color[ffff]}吧。
077-10	嗯！這樣抵達終點時\n就會變得更加熱鬧了！
077-11	好，關閉這個畫面……
077-12	關閉設定畫面。
077-13	來吧，把{color[0400]}{[0001|1d00]}接觸感應器小節點{[0001|ffff]}{color[ffff]}和\n{color[0400]}{[0001|1d00]}播放聲音小節點{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1d00]}播放端口{[0001|ffff]}{color[ffff]}連接起來。
078	那麼～這樣一來～
079	終點的程式就完成了！
080	終點的程式就完成了！
081	到遊戲畫面去確認看看吧！
082	來吧，{[0201]}，\n快去接觸看看藏寶箱！
083	拉炮響起了～
084	號角的音效也很棒！
085	那麼，最後就來刪除\n確認用的傳送小節點，\n讓遊戲從起點開始吧。
086	和這個{color[0400]}{[0001|1d00]}傳送物件出口小節點{[0001|ffff]}{color[ffff]}道別……
087	也和這個{color[0400]}{[0001|1d00]}傳送物件入口小節點{[0001|ffff]}{color[ffff]}說再見吧。
088	好！\n來做最後一次確認！
089	遊戲順利地從起點開始了～
090	這樣一來，從起點到終點的\n所有程式就都完成了！
091	我們終於走到這一步了……
092	那麼，請回到程式設計畫面～
093	那麼～～這樣就～～～
094	那麼～～這樣就～～～
095	完成第6步驟了！
096	完成第6步驟了！
097-01	恭喜你♥
097-02	恭喜你～～～♪
097-03	恭喜～～
098	我們終於完成終點了……
099	之後還要做些什麼嗎？
100	沒錯，我還有事情\n要請{[0201]}幫忙！
101	那麼～
102	嗯……
103	敬請期待下個步驟！
104	下次就是附帶導航的課堂的\n最後一個步驟……
105	最後一個步驟……\n{[0201]}，\n你要加油喔。
Lesson_3DAction_06.msbt
000	{[0201]}，\n你好！
001	{[0201]}，\n你好。
002	看似漫長的附帶導航的課堂，\n也在今天來到最後一個步驟。
003	首先，請你好好地確認一下\n我們製作的{color[0400]}{[0001|1d00]}3D運動競技空間{[0001|ffff]}{color[ffff]}。
004	如果你覺得確認清楚了，\n就回去程式設計畫面吧。
005	在{color[0400]}{[0001|1d00]}3D運動競技空間{[0001|ffff]}{color[ffff]}的最後一個步驟裡，\n我想請你在終點前的這個空地上製作場地特殊機關。
006	嗯……
007	我本來是打算像之前一樣，\n讓你照我說的去設計程式……
008	但這畢竟是最後一個機關了……\n我覺得應該交給{[0201]}，\n讓你有機會自由地發揮創意！
009	咦……！
010	你可以製作BOSS角色，\n也能運用學到的技巧製作機關，\n甚至是創造出全新的機關也沒問題。
011	要做什麼、要怎麼做……\n都是{[0201]}的自由！
012	那可以改造已經做好的場地特殊機關嗎？
013	當然可以！
013-01	我將會讓你能{color[0400]}{[0001|1d00]}自由計設程式的所有地方{[0001|ffff]}{color[ffff]}，\n{[0201]}，\n請按照你的想法盡情地改造遊戲！
014	{[0201]}……\n你已經成功設計出許多遊戲了，\n現在的你一定做得到。
015	你解開了那麼多謎題，\n對小節點車庫也很了解，\n一定沒問題的。
016	要是在設計途中碰上無法補救的問題，\n記得從暫停裡選擇{color[0400]}{[0001|1d00]}「重做這個步驟」{[0001|ffff]}{color[ffff]}喔。
017	{[0201]}，\n我很期待你製作的遊戲喔。
018	如果遊戲完成了，\n就按下{color[0400]}{[0001|1d00]}完成鍵{[0001|ffff]}{color[ffff]}吧！
019	設計到一半想退出也沒關係，\n你的設計進度會被儲存起來，\n要是覺得累的話就去休息吧。
020	那麼～
021	開始設計吧！
022	開始設計吧！
1000	……你終於完成啦。
1000-01	那麼，趕快讓我到遊戲畫面看看吧。
1001	這就是{[0201]}\n製作的遊戲……
1002	太棒了……！\n這個由{color[0400]}{[0001|1d00]}你親手設計的遊戲{[0001|ffff]}{color[ffff]}，\n任誰都無法模仿啊！
1003	是世界上獨一無二的遊戲呢！
1003-01	那麼……\n我們回到程式設計畫面。
1004	{[0201]}，\n把{color[0400]}{[0001|1d00]}你製作的遊戲{[0001|ffff]}{color[ffff]}……
1005	放進遊戲一覽吧！
Lesson_BallRoll_00.msbt
000	{[0201]}，\n歡迎來到第2課！
001	在上一個課堂裡，我們設計了\n二人對戰！捉迷藏大戰呢～！
004	來吧！\n在第2課也要跟緊我的腳步喔～！
006	那麼，這次要製作的遊戲是……
007	透過{color[0400]}{[0001|1d00]}傾斜{[0001|ffff]}{color[ffff]}Nintendo Switch主機來{color[0400]}{[0001|1d00]}遊玩{[0001|ffff]}{color[ffff]}的……
008	{color[0400]}{[0001|1d00]}滾滾球{[0001|ffff]}{color[ffff]}！
009	在觀看接下來的影片時～
010	請想像有一顆球正在畫面中滾動！
011	這是一款透過{color[0400]}{[0001|1d00]}傾斜主機{[0001|ffff]}{color[ffff]}\n讓畫面中的球滾動的遊戲！
013	透過{color[0400]}{[0001|1d00]}傾斜{[0001|ffff]}{color[ffff]}控制器來{color[0400]}{[0001|1d00]}遊玩{[0001|ffff]}{color[ffff]}的……
014	{[0001|1d00]}{color[0400]}滾滾球{color[ffff]}{[0001|ffff]}！
015	建議使用{color[0400]}{[0001|1d00]}手提模式{[0001|ffff]}{color[ffff]}\n來遊玩這款遊戲喔！
016	在觀看接下來的影片時，\n請想像{color[0400]}{[0001|1d00]}從上方{[0001|ffff]}{color[ffff]}觀察一個裝有球的箱子。
017	這是一款透過{color[0400]}{[0001|1d00]}傾斜控制器{[0001|ffff]}{color[ffff]}\n讓裝有球的箱子傾斜的遊戲！
019	所以說……在這堂課中，\n我們要用{color[0400]}{[0001|1d00]}由上往下看的視角{[0001|ffff]}{color[ffff]}來設計程式！
020	那麼，我們到程式設計畫面去吧！
021	好，在{[0001|1d00]}{color[0400]}改變視角{color[ffff]}{[0001|ffff]}之前……
022	我們先把滾滾球中的\n重要道具「{[0001|1d00]}{color[0400]}蘋果{color[ffff]}{[0001|ffff]}」放上去吧！
023	想把蘋果放到畫面上時～\n就要叫出{color[0400]}{[0001|1d00]}時尚物件小節點{[0001|ffff]}{color[ffff]}！
024	選擇{color[0400]}{[0001|1d00]}物件{[0001|ffff]}{color[ffff]}。
025	{color[0400]}{[0001|1d00]}時尚物件{[0001|ffff]}{color[ffff]}。
026	{color[0400]}{[0001|1d00]}圓形時尚物件{[0001|ffff]}{color[ffff]}。
027	請從{color[0400]}{[0001|1d00]}蘋果{[0001|ffff]}{color[ffff]}裡叫出\n{color[0400]}{[0001|1d00]}時尚物件小節點{[0001|ffff]}{color[ffff]}！
028	時尚物件……\n好漂亮喔♥
030	居然選擇了圓～滾滾\n又紅通通的{[0001|1d00]}{color[0400]}蘋果{color[ffff]}{[0001|ffff]}……
031	{[0201]}，\n♥你真是熱情呢♥
032	這樣蘋果就放好了！
033	到遊戲畫面去看看吧！
034	有顆看起來\n很好吃的蘋果呢～！
036	那麼……\n這次的重頭戲要開始囉！！
037	讓我們切換為{color[0400]}{[0001|1d00]}由上往下看的視角{[0001|ffff]}{color[ffff]}，\n好好欣賞一下這顆蘋果吧～
038	想要切換視角時～
039	請按下這個{[0001|1d00]}{color[0400]}切換視角鍵{color[ffff]}{[0001|ffff]}！
040	哇……♥\n好像變得有點……\n……不太一樣了♥
041	這樣就切換為{color[0400]}{[0001|1d00]}俯瞰視角{[0001|ffff]}{color[ffff]}了！
042	好了，我們去確認看看～～
043	遊戲畫面變成怎樣了吧！
044	哦哦～～！做得好！！
045	剛剛我們是\n{[0001|1d00]}{color[0400]}從旁邊{color[ffff]}{[0001|ffff]}看蘋果……
046	但現在視角已經\n變成{[0001|1d00]}{color[0400]}由上{color[ffff]}{[0001|ffff]}往下了呢～！
047	我們要以這個視角\n製作滾滾球的場地！
049	那麼～\n來製作場地吧！
050	首先要決定\n{[0001|1d00]}{color[0400]}遊戲畫面的大小{color[ffff]}{[0001|ffff]}～
051	選擇{color[0400]}{[0001|1d00]}物件{[0001|ffff]}{color[ffff]}。
052	{color[0400]}{[0001|1d00]}遊戲畫面和照相機{[0001|ffff]}{color[ffff]}。
053	從{color[0400]}{[0001|1d00]}遊戲畫面{[0001|ffff]}{color[ffff]}裡叫出\n{color[0400]}{[0001|1d00]}遊戲畫面小節點{[0001|ffff]}{color[ffff]}。
054	辛苦你了阿囉哈～～！
055	我這次也會……\n把遊戲畫面拍得超完美的喔～！
056	那麼……\n請放大遊戲畫面小節點，\n把他放到{[0001|1d00]}{color[0400]}藍色框框{color[ffff]}{[0001|ffff]}裡吧！
057	分毫不差！\n真是太棒啦～～！
058	決定好遊戲畫面的大小後……
060	接著就來使用{color[0400]}{[0001|1d00]}物件小節點{[0001|ffff]}{color[ffff]}\n製作環繞在四周的{color[0400]}{[0001|1d00]}牆壁{[0001|ffff]}{color[ffff]}吧！
061	選擇{color[0400]}{[0001|1d00]}物件{[0001|ffff]}{color[ffff]}。
062	{color[0400]}{[0001|1d00]}一般物件{[0001|ffff]}{color[ffff]}。
063	{color[0400]}{[0001|1d00]}立方體{[0001|ffff]}{color[ffff]}。
064	……嗨，\n我是牆壁。
067	那麼，把他放大後放到\n畫面上的藍色框框裡吧！
069	完美！
070	接著來設定牆壁吧。
071	打開物件小節點的設定。
072	請把{[0001|1d00]}狀態{[0001|ffff]}設定為只有\n{[0001|1d00]}{color[0400]}能看見{color[ffff]}{[0001|ffff]}、{[0001|1d00]}{color[0400]}能接觸{color[ffff]}{[0001|ffff]}是{[0001|1d00]}{color[0400]}開啟{color[ffff]}{[0001|ffff]}。
073	{color[0400]}{[0001|1d00]}顏色{[0001|ffff]}{color[ffff]}也換一下吧～
074	請設定為{[0001|1d00]}{color[0400]}紅色{color[ffff]}{[0001|ffff]}！
075	完美。\n關閉設定吧！
076	接下來……\n把剩下的3面牆也做起來！
077	{color[0400]}{[0001|1d00]}複製{[0001|ffff]}{color[ffff]}物件小節點～
078	把他移動到\n畫面下方吧～
079	我是下面的牆壁。
080	再{color[0400]}{[0001|1d00]}複製{[0001|ffff]}{color[ffff]}一個！
081	把他{color[0400]}{[0001|1d00]}拉成縱向的長條形～{[0001|ffff]}{color[ffff]}\n放到左方的藍色框框裡～
082	我是左邊的牆壁。
083	最後再{color[0400]}{[0001|1d00]}複製{[0001|ffff]}{color[ffff]}一次！
084	把他放到畫面右方！
085	……嗨。\n遊戲畫面被牆壁圍住了。
086	完成了～～！
087	我們去看看吧！
089	{[0001|1d00]}{color[0400]}滾滾球的場地{color[ffff]}{[0001|ffff]}做好了！
090	我們要讓球在這個\n場地裡滾來滾去喔！
092	那麼，到程式設計畫面去吧！
093	那麼～～這樣就～～～
094	完成第1步驟了！
095	♥恭喜你～♥
096	恭喜你喔～～
097	恭喜。
098	……很厲害嘛。
099	這次～\n我們將畫面切換為{color[0400]}{[0001|1d00]}俯瞰視角{[0001|ffff]}{color[ffff]}……
100	設計了{color[0400]}{[0001|1d00]}滾滾球的場地{[0001|ffff]}{color[ffff]}！
103	在下個步驟裡，\n我們要設計{color[0400]}{[0001|1d00]}讓球滾動{[0001|ffff]}{color[ffff]}的程式喔！
105	敬請期待下個步驟～！
Lesson_BallRoll_01.msbt
000	歡迎來到\n滾滾球的第2步驟！
001	上次我們把遊戲畫面\n切換為{[0001|1d00]}{color[0400]}俯瞰視角{color[ffff]}{[0001|ffff]}……
002	利用牆壁製作出了\n{[0001|1d00]}{color[0400]}滾滾球的場地{color[ffff]}{[0001|ffff]}！
003	接下來！\n在第2步驟中～
004	我們要來製作\n透過傾斜Nintendo Switch主機\n{color[0400]}{[0001|1d00]}讓球滾動的程式{[0001|ffff]}{color[ffff]}！
005	我們要來製作\n透過傾斜控制器\n{color[0400]}{[0001|1d00]}讓球滾動的程式{[0001|ffff]}{color[ffff]}！
006	滾來～\n滾去～～
007	前往有趣的{[0001|1d00]}{color[0400]}傾斜世界{color[ffff]}{[0001|ffff]}！
008	Let's 滾來滾去吧！
009	首先我們要放入\n會滾來滾去的球。
011	叫出球體的{color[0400]}{[0001|1d00]}可移動物件小節點{[0001|ffff]}{color[ffff]}吧！
012	選擇{color[0400]}{[0001|1d00]}物件{[0001|ffff]}{color[ffff]}。
013	{color[0400]}{[0001|1d00]}特殊物件{[0001|ffff]}{color[ffff]}。
014	{color[0400]}{[0001|1d00]}可移動物件{[0001|ffff]}{color[ffff]}。
015	從{color[0400]}{[0001|1d00]}球體{[0001|ffff]}{color[ffff]}裡叫出\n{color[0400]}{[0001|1d00]}可移動物件小節點{[0001|ffff]}{color[ffff]}！
016	你好！\n我是{[0001|1d00]}{color[0400]}可移動物件小節點{color[ffff]}{[0001|ffff]}！
017	哎呀～！！\n你有在運動嗎？？
018	適當的運動……\n也能促進大腦的活性化喔！！
019	今天也請你多多指教！！
021	先把可移動物件小節點\n縮小一點吧～
022	好！\n感覺很棒！！
023	打開可移動物件小節點的設定～
024	把{[0001|1d00]}狀態{[0001|ffff]}的{[0001|1d00]}{color[0400]}會損壞{color[ffff]}{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}關閉{color[ffff]}{[0001|ffff]}。
025	接著來改變{color[0400]}{[0001|1d00]}顏色{[0001|ffff]}{color[ffff]}吧～
026	設定為{color[0400]}{[0001|1d00]}藍色{[0001|ffff]}{color[ffff]}！
027	把{[0001|1d00]}位置{[0001|ffff]}的{[0001|1d00]}Y{[0001|ffff]}\n設定為{[0001|1d00]}{color[0400]}0.30m{color[ffff]}{[0001|ffff]}。
028	很棒喔！\n關閉設定吧～
030	我們去遊戲畫面看看！
031	一顆圓滾滾的球出現了～\n他看起來很會滾喔！
033	那麼……\n請試著{[0001|1d00]}{color[0400]}傾斜主機讓球滾動{color[ffff]}{[0001|ffff]}看看！
034	那麼……\n請試著{[0001|1d00]}{color[0400]}傾斜控制器讓球滾動{color[ffff]}{[0001|ffff]}看看！
035	嗯……
036	球不會動～～～～！
038	沒錯！\n如果不設計{[0001|1d00]}{color[0400]}滾動的程式{color[ffff]}{[0001|ffff]}，\n球是不會動的！
039	那麼……\n我們快去設計程式吧！
040	我們想在{[0001|1d00]}{color[0400]}傾斜主機時{color[ffff]}{[0001|ffff]}讓球滾動起來～
041	我們想在{[0001|1d00]}{color[0400]}傾斜控制器時{color[ffff]}{[0001|ffff]}讓球滾動起來～
042	叫出{color[0400]}{[0001|1d00]}傾斜小節點{[0001|ffff]}{color[ffff]}吧！
043	選擇{color[0400]}{[0001|1d00]}輸入{[0001|ffff]}{color[ffff]}。
044	{color[0400]}{[0001|1d00]}動感{[0001|ffff]}{color[ffff]}。
045	{color[0400]}{[0001|1d00]}傾斜{[0001|ffff]}{color[ffff]}。
046	請從{color[0400]}{[0001|1d00]}自動{[0001|ffff]}{color[ffff]}裡\n叫出{color[0400]}{[0001|1d00]}傾斜小節點{[0001|ffff]}{color[ffff]}！
047	你好～
048	主機的傾斜幅度……
049	控制器的傾斜幅度……
050	只有在心平氣和的狀態下\n才能夠發覺呢……
057	把他放到藍色框框裡，\n讓他先好好冷靜一下～
059	那麼，我們先來設計\n當{[0001|1d00]}{color[0400]}主機{color[ffff]}{[0001|ffff]}向{[0001|1d00]}{color[0400]}左右{color[ffff]}{[0001|ffff]}傾斜時，\n讓{[0001|1d00]}{color[0400]}球{color[ffff]}{[0001|ffff]}向{[0001|1d00]}{color[0400]}左右{color[ffff]}{[0001|ffff]}滾動的程式。
060	那麼，我們先來設計\n當{[0001|1d00]}{color[0400]}控制器{color[ffff]}{[0001|ffff]}向{[0001|1d00]}{color[0400]}左右{color[ffff]}{[0001|ffff]}傾斜時，\n讓{[0001|1d00]}{color[0400]}球{color[ffff]}{[0001|ffff]}向{[0001|1d00]}{color[0400]}左右{color[ffff]}{[0001|ffff]}滾動的程式。
061	打開傾斜小節點的設定！
069	把{[0001|1d00]}範圍{[0001|ffff]}設定為\n{[0001|1d00]}{color[0400]}0.00{color[ffff]}{[0001|ffff]}到{color[0400]}{[0001|1d00]}0.15{[0001|ffff]}{color[ffff]}。
071	完美！\n關閉設定吧～
072	接著，把傾斜小節點連接到\n可移動物件小節點的{color[0400]}{[0001|1d00]}X端口{[0001|ffff]}{color[ffff]}！
072-01	這樣一來……\n當{[0001|1d00]}{color[0400]}主機{color[ffff]}{[0001|ffff]}向{[0001|1d00]}{color[0400]}左右{color[ffff]}{[0001|ffff]}傾斜時，\n{[0001|1d00]}{color[0400]}球{color[ffff]}{[0001|ffff]}就會向{[0001|1d00]}{color[0400]}左右{color[ffff]}{[0001|ffff]}滾動了！
072-02	這樣一來……\n當{[0001|1d00]}{color[0400]}控制器{color[ffff]}{[0001|ffff]}向{[0001|1d00]}{color[0400]}左右{color[ffff]}{[0001|ffff]}傾斜時，\n{[0001|1d00]}{color[0400]}球{color[ffff]}{[0001|ffff]}就會向{[0001|1d00]}{color[0400]}左右{color[ffff]}{[0001|ffff]}滾動了！
073	順帶一提，\n{color[0400]}{[0001|1d00]}X{[0001|ffff]}{color[ffff]}指的就是{color[0400]}{[0001|1d00]}左右方向{[0001|ffff]}{color[ffff]}。
079	我們到遊戲畫面確認一下吧！
080	請試著{color[0400]}{[0001|1d00]}左右{[0001|ffff]}{color[ffff]}傾斜主機。
081	請試著{color[0400]}{[0001|1d00]}左右{[0001|ffff]}{color[ffff]}傾斜控制器。
082	球滾動起來了～～～～～～！！！
083	讓球左右滾動的程式完成了！
084	那麼，這次請試著向{color[0400]}{[0001|1d00]}前後{[0001|ffff]}{color[ffff]}傾斜。
085	那麼，這次請試著向{color[0400]}{[0001|1d00]}前後{[0001|ffff]}{color[ffff]}傾斜。
086	因為我們還沒有設計\n控制前後動作的程式，\n所以球並不會滾動喔！
087	那麼～\n來讓球也能{color[0400]}{[0001|1d00]}前後{[0001|ffff]}{color[ffff]}滾動吧！
088	選擇傾斜小節點……
089	複製！
090	你好～
091	傾斜這件事……\n可不簡單呢……
092	根據你當天的心情或想法……
093	傾斜的角度也會有所不同……
094	很抱歉打斷你……\n不過你壓在我身上了……
095	那麼，我們把新叫出來的\n傾斜小節點移動到下方吧～
096	接下來，為了讓他能\n{color[0400]}{[0001|1d00]}輸出前後的傾斜幅度{[0001|ffff]}{color[ffff]}，\n請打開設定進行調整。
097	{color[0400]}{[0001|1d00]}前後的傾斜幅度{[0001|ffff]}{color[ffff]}就是\n以{color[0400]}{[0001|1d00]}X軸{[0001|ffff]}{color[ffff]}為中心的轉動方向～
098	所以把{[0001|1d00]}轉動軸{[0001|ffff]}設定為{color[0400]}{[0001|1d00]}X{[0001|ffff]}{color[ffff]}。
100	OK！\n關閉設定吧。
101	把傾斜小節點連接到\n可移動物件小節點的{[0001|1d00]}{color[0400]}Z端口{color[ffff]}{[0001|ffff]}！
101-01	這樣一來……\n當{[0001|1d00]}{color[0400]}主機{color[ffff]}{[0001|ffff]}向{[0001|1d00]}{color[0400]}前後{color[ffff]}{[0001|ffff]}傾斜時，\n{[0001|1d00]}{color[0400]}球{color[ffff]}{[0001|ffff]}就會向{[0001|1d00]}{color[0400]}前後{color[ffff]}{[0001|ffff]}滾動了！
101-02	這樣一來……\n當{[0001|1d00]}{color[0400]}控制器{color[ffff]}{[0001|ffff]}向{[0001|1d00]}{color[0400]}前後{color[ffff]}{[0001|ffff]}傾斜時，\n{[0001|1d00]}{color[0400]}球{color[ffff]}{[0001|ffff]}就會向{[0001|1d00]}{color[0400]}前後{color[ffff]}{[0001|ffff]}滾動了！
102	另外，{color[0400]}{[0001|1d00]}Z{[0001|ffff]}{color[ffff]}指的就是{color[0400]}{[0001|1d00]}前後方向{[0001|ffff]}{color[ffff]}。
108	那麼，到遊戲畫面去確認一下吧～
109	請試著{color[0400]}{[0001|1d00]}前後{[0001|ffff]}{color[ffff]}傾斜主機，\n讓球滾動起來吧！
110	請試著{color[0400]}{[0001|1d00]}前後{[0001|ffff]}{color[ffff]}傾斜控制器，\n讓球滾動起來吧！
111	滾來滾去～～～～～！
113	{color[0400]}{[0001|1d00]}讓球滾動的程式{[0001|ffff]}{color[ffff]}完成了～～～！！
116	我們回去吧！
117	那麼～～這樣就～～～
118	完成第2步驟了！
119	辛苦你了！！
120	你真厲害。
121	恭喜你。
122	你覺得傾斜的程式怎麼樣呢？
125	像這樣透過程式製作出\n{[0001|1d00]}{color[0400]}不用按鍵操作的遊戲{color[ffff]}{[0001|ffff]}……
126	正是{[0001|1d00]}{color[0400]}小節點車庫{color[ffff]}{[0001|ffff]}的有趣之處！
130	下次我們要讓\n球滾動的{color[0400]}{[0001|1d00]}場地{[0001|ffff]}{color[ffff]}\n變得更加好玩！
131	敬請期待下個步驟～！
Lesson_BallRoll_02.msbt
000	{[0201]}！\n我們來到滾滾球的第3步驟了！
001	在上個步驟中，\n我們讓球變得會滾動了呢～！
002	機會難得，\n來測試一下球的動作吧。\n試著讓{[0001|1d00]}{color[0400]}球{color[ffff]}{[0001|ffff]}撞上{[0001|1d00]}{color[0400]}蘋果{color[ffff]}{[0001|ffff]}看看！
003	做得好！撞到蘋果了～！
004	這次，我們要在這個\n方形場地上製作{color[0400]}{[0001|1d00]}牆壁{[0001|ffff]}{color[ffff]}，\n然後再放進幾顆{color[0400]}{[0001|1d00]}蘋果{[0001|ffff]}{color[ffff]}……
005	讓他變成一個更好玩的場地！
006	那麼……\n請移步到程式設計畫面～
008	首先要準備{[0001|1d00]}{color[0400]}牆壁{color[ffff]}{[0001|ffff]}\n來製作球的跑道。
009	選擇{[0001|1d00]}{color[0400]}物件小節點{color[ffff]}{[0001|ffff]}……
010	複製！
011	配合藍色框框的大小\n製作牆壁～
012	我是起點的牆壁。
013	再複製一次……
014	放到藍色框框裡……
015	上下都能通行喔。
016	最後再複製一次～
017	把他拉長一點後\n放到藍色框框裡！
018	我是正中央的牆壁。
019	這樣就完成牆壁了！
020	去遊戲畫面確認一下吧！
021	牆壁被完美地\n設置在場地上！
022	請你先不要管\n被擋住的蘋果……
023	試著讓球滾到\n{color[0400]}{[0001|1d00]}右下方的區域{[0001|ffff]}{color[ffff]}！
024	做得好！
026	這種稍微複雜的場地，\n讓滾球變得更有趣了呢！
027	那麼……\n我們來把陷入牆中的蘋果救出來吧！
029	選擇蘋果的時尚物件小節點……
030	把他放大一點，\n移動到左下方～
031	完美！
032	呼～\n我還以為要窒息了♥
033	我們去看看\n會變成什麼樣子吧！
034	蘋果重新出現了！
035	那麼……\n試著讓球撞上蘋果看看。
036	現在當球撞上蘋果時，\n蘋果就會滾到別處去。
037	我們希望在他們相撞時，\n讓球有{[0001|1d00]}{color[0400]}獲得蘋果{color[ffff]}{[0001|ffff]}的感覺！
039	去程式設計畫面吧！
040	選擇蘋果的時尚物件小節點……
041	打開設定！
042	把{[0001|1d00]}狀態{[0001|ffff]}的{[0001|1d00]}{color[0400]}能看見{color[ffff]}{[0001|ffff]}、{[0001|1d00]}{color[0400]}能接觸{color[ffff]}{[0001|ffff]}、\n{[0001|1d00]}{color[0400]}會損壞{color[ffff]}{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}開啟{color[ffff]}{[0001|ffff]}。
043	由於{color[0400]}{[0001|1d00]}會損壞{[0001|ffff]}{color[ffff]}被設定為{color[0400]}{[0001|1d00]}開啟{[0001|ffff]}{color[ffff]}，\n現在蘋果{color[0400]}{[0001|1d00]}被球撞到時就會損壞{[0001|ffff]}{color[ffff]}了！
044	關閉設定。
045	我們去確認一下\n當球撞上蘋果時\n會發生什麼事吧～
046	請讓球撞上蘋果！
047	做得好～！
048	球獲得了蘋果！
049	像這樣{color[0400]}{[0001|1d00]}破壞掉蘋果{[0001|ffff]}{color[ffff]}，\n{color[0400]}{[0001|1d00]}看起來就像是獲得蘋果{[0001|ffff]}{color[ffff]}一樣！
050	那麼，我們多放一些蘋果，\n讓場地變得更多姿多彩吧！
052	來{[0001|1d00]}{color[0400]}複製{color[ffff]}{[0001|ffff]}大量的\n{[0001|1d00]}{color[0400]}時尚物件小節點{color[ffff]}{[0001|ffff]}吧！
053	先選擇{[0001|1d00]}{color[0400]}時尚物件小節點{color[ffff]}{[0001|ffff]}～
054	複製。
055	移動到右上方～
056	再複製。
057	移動到右下方。
058	再複製！
059	移動到右上方～
060	最後再複製一次。
061	把他放在下方吧！
061-01	這樣就放好5顆蘋果了！
062	那麼……\n到遊戲畫面確認一下吧！
063	蘋果變成5顆了！
064	這麼多蘋果擺在眼前，\n怎麼能夠放過他們呢～\n試著獲得所有蘋果吧！
065	高超的運球技巧！
066	啊，你已經獲得所有蘋果了啊！
067	增加蘋果的數量後，\n遊戲也一下子變得更有趣了呢！
069	我們回去吧～
070	那麼～～～這樣就～～～～～
071	完成第3步驟了！
072	恭喜。
073	我好興奮喔。
074	♥恭喜你～♥
075	♥好漂亮的場地♥
076	這次我們在{color[0400]}{[0001|1d00]}場地{[0001|ffff]}{color[ffff]}中\n增加了牆壁和蘋果～
077	我們製作的遊戲\n越來越有趣了呢！
078	雖然現在獲得蘋果後\n也不會發生任何事情……
079	不過下次我們會用程式\n來計算{color[0400]}{[0001|1d00]}獲得的蘋果數量{[0001|ffff]}{color[ffff]}！
080	那麼……\n我就在下個步驟等你囉～
Lesson_BallRoll_03.msbt
000	滾滾球的第4步驟\n要開始囉～！
001	我們上次用牆壁和蘋果\n製作了場地呢！
003	在接下來的幾個步驟裡，\n我們要為這個普通的滾滾球遊戲……
004	{[0001|1d00]}{color[0400]}加上「獲得5顆蘋果就能過關」的規則{color[ffff]}{[0001|ffff]}，\n讓滾滾球的遊戲性提高！
006	而在這個步驟中……\n我們要設計出一個程式\n來{color[0400]}{[0001|1d00]}計算獲得的蘋果數量{[0001|ffff]}{color[ffff]}！！
008	我們去程式設計畫面吧。
009	為了{color[0400]}{[0001|1d00]}計算{[0001|ffff]}{color[ffff]}獲得的蘋果數量……
010	我們需要用到擅長計算的\n{color[0400]}{[0001|1d00]}計數器小節點{[0001|ffff]}{color[ffff]}！
011	選擇{color[0400]}{[0001|1d00]}中間{[0001|ffff]}{color[ffff]}……
012	{color[0400]}{[0001|1d00]}旗標、計數器、隨機{[0001|ffff]}{color[ffff]}。
013	從{color[0400]}{[0001|1d00]}計數器{[0001|ffff]}{color[ffff]}裡\n叫出{color[0400]}{[0001|1d00]}計數器小節點{[0001|ffff]}{color[ffff]}！
014	在這個課堂中……\n我是{color[0400]}{[0001|1d00]}第17個{[0001|ffff]}{color[ffff]}被叫出的小節點。
014-01	你們想要我幫忙計算\n獲得的蘋果數量對吧。
014-02	計算的事情就交給我吧。
015	把計數器小節點\n放在旁邊一點的位置～
019	想要讓計數器小節點計算，\n就得對他{color[0400]}{[0001|1d00]}輸入訊號{[0001|ffff]}{color[ffff]}！
020	所以當我們想計算\n{color[0400]}{[0001|1d00]}獲得的蘋果數量{[0001|ffff]}{color[ffff]}時……
021	就需要一個小節點能夠\n{color[0400]}{[0001|1d00]}在獲得蘋果時{[0001|ffff]}{color[ffff]}輸出訊號。
022	而這裡說的獲得蘋果……\n就是{color[0400]}{[0001|1d00]}蘋果損壞{[0001|ffff]}{color[ffff]}這件事～
024	當對象損壞就會輸出訊號……\n這正是{[0001|1d00]}{color[0400]}物件損壞時小節點{color[ffff]}{[0001|ffff]}的工作！\n快叫他出來吧！
025	選擇{color[0400]}{[0001|1d00]}輸入{[0001|ffff]}{color[ffff]}。
026	{color[0400]}{[0001|1d00]}遊戲內的變化{[0001|ffff]}{color[ffff]}。
027	{color[0400]}{[0001|1d00]}物件損壞時{[0001|ffff]}{color[ffff]}。
029	我有聽說囉！\n你們是不是正在製作一個\n{[0001|1d00]}{color[0400]}要破壞很多蘋果的遊戲{color[ffff]}{[0001|ffff]}啊？
030	正確來說，\n應該是{[0001|1d00]}{color[0400]}獲得蘋果的遊戲{color[ffff]}{[0001|ffff]}才對……
031	沒差沒差～都一樣啦～\n我會好好{[0001|1d00]}{color[0400]}盯住蘋果損壞的那一瞬間{color[ffff]}{[0001|ffff]}！
033	那麼……\n請打開物件損壞時小節點的設定。
034	打開{[0001|1d00]}{color[0400]}要確認什麼？{color[ffff]}{[0001|ffff]}……
035	設定為只有{color[0400]}{[0001|1d00]}蘋果{[0001|ffff]}{color[ffff]}是{color[0400]}{[0001|1d00]}開啟{[0001|ffff]}{color[ffff]}。
036	OK！\n關閉詳細畫面～
037	關閉設定！
038	稍微移動一下\n物件損壞時小節點～
039	把{[0001|1d00]}{color[0400]}物件損壞時小節點{color[ffff]}{[0001|ffff]}連接到\n計數器小節點的{color[0400]}{[0001|1d00]}增加端口{[0001|ffff]}{color[ffff]}。
040	當蘋果損壞了，\n我就會告訴你！
041	好！\n我會計算損壞的數量！
042	這麼一來，\n{[0001|1d00]}{color[0400]}計算獲得的蘋果數量的程式{color[ffff]}{[0001|ffff]}就完成了！
044	那麼，我們把這個數值\n顯示在遊戲畫面上吧！
045	叫出{[0001|1d00]}{color[0400]}附數字物件小節點{color[ffff]}{[0001|ffff]}！
046	選擇{color[0400]}{[0001|1d00]}物件{[0001|ffff]}{color[ffff]}。
047	{color[0400]}{[0001|1d00]}特殊物件{[0001|ffff]}{color[ffff]}。
048	從{color[0400]}{[0001|1d00]}附數字物件{[0001|ffff]}{color[ffff]}裡\n叫出{color[0400]}{[0001|1d00]}附數字物件小節點{[0001|ffff]}{color[ffff]}！
049	你好，初次見面。\n請多多關照。
050	我的任務是……\n把{[0001|1d00]}{color[0400]}接收到的數值{color[ffff]}{[0001|ffff]}\n{color[0400]}{[0001|1d00]}顯示在遊戲畫面的物件上{[0001|ffff]}{color[ffff]}。
050-01	請把要顯示的數值輸入給我。
051	那麼……\n我們把附數字物件小節點縮小一點，\n放到遊戲畫面中顯眼的地方～
052	接著打開設定……
053	把{[0001|1d00]}{color[0400]}狀態{color[ffff]}{[0001|ffff]}設定為\n只有{[0001|1d00]}{color[0400]}能看見{color[ffff]}{[0001|ffff]}是{[0001|1d00]}{color[0400]}開啟{color[ffff]}{[0001|ffff]}。
054	更改{color[0400]}{[0001|1d00]}顏色{[0001|ffff]}{color[ffff]}。
055	設定為{color[0400]}{[0001|1d00]}紅色{[0001|ffff]}{color[ffff]}吧！
056	還要更改數字的顏色～\n請打開{color[0400]}{[0001|1d00]}文字顏色{[0001|ffff]}{color[ffff]}。
057	設定為{color[0400]}{[0001|1d00]}白色{[0001|ffff]}{color[ffff]}吧～
058	數值只要{color[0400]}{[0001|1d00]}1位數{[0001|ffff]}{color[ffff]}就夠了～
059	把{[0001|1d00]}整數位數{[0001|ffff]}設定為{color[0400]}{[0001|1d00]}1{[0001|ffff]}{color[ffff]}！
060	然後，把{[0001|1d00]}位置{[0001|ffff]}的{[0001|1d00]}Y{[0001|ffff]}\n設定為{[0001|1d00]}{color[0400]}0.60m{color[ffff]}{[0001|ffff]}。
061	完美！\n請關閉設定！
062	接著！\n把計數器小節點連接到\n附數字物件小節點～
063	這樣應該就能在遊戲畫面中\n看到{color[0400]}{[0001|1d00]}獲得的蘋果數量{[0001|ffff]}{color[ffff]}了！
064	我們去看看吧！
065	現在，{[0001|1d00]}{color[0400]}獲得的蘋果數量{color[ffff]}{[0001|ffff]}……
066	沒有顯示出來呢……
067	哎呀，我差點忘記了……\n現在遊戲畫面是{[0001|1d00]}{color[0400]}俯瞰視角{color[ffff]}{[0001|ffff]}……
068	數字的{[0001|1d00]}{color[0400]}標示方向{color[ffff]}{[0001|ffff]}\n得改成向上才行！
069	我們先回程式設計畫面一趟吧！\n把程式改成{color[0400]}{[0001|1d00]}能從上面看到數字{[0001|ffff]}{color[ffff]}～
070	選擇附數字物件小節點～
071	打開設定！
072	打開{color[0400]}{[0001|1d00]}標示方向{[0001|ffff]}{color[ffff]}。
073	我們希望數字是向上顯示……
074	所以就設定為{[0001|1d00]}{color[0400]}Y+{color[ffff]}{[0001|ffff]}吧！
074-01	{[0001|1d00]}{color[0400]}Y{color[ffff]}{[0001|ffff]}就是指{color[0400]}{[0001|1d00]}上下方向{[0001|ffff]}{color[ffff]}喔。
075	那麼，請關閉設定……
076	這次應該就能看見了！
077	現在可以看見數字了！
079	那麼，我們重來一遍～\n試著獲得所有蘋果吧！
080	會顯示{color[0400]}{[0001|1d00]}獲得的數量{[0001|ffff]}{color[ffff]}了！
081	我們回去吧～
082	那麼～～這樣就～～～
083	完成第4步驟了！
084	哎呀！你挺厲害的嘛！
085	由衷恭喜你！
086	恭喜你～
087	這次我們用程式計算出\n獲得的蘋果數量了！
088	下次我們會用這個數值，\n設計當獲得所有蘋果時\n就會{color[0400]}{[0001|1d00]}過關{[0001|ffff]}{color[ffff]}的程式！
090	這次的程式會幫助我們\n設計出下個程式……
091	而下個程式也會繼續\n幫助我們設計出其他程式！
092	透過這些環環相扣的程式，\n我們就可以做出各種設計……\n而這正是程式設計的樂趣之一！
094	那麼……\n敬請期待下個步驟囉～！
Lesson_BallRoll_04.msbt
000	歡迎來到～\n滾滾球的第5步驟！
001	我們上次設計了\n{color[0400]}{[0001|1d00]}計算獲得的蘋果數量的程式{[0001|ffff]}{color[ffff]}呢！
002	這次我們要{color[0400]}{[0001|1d00]}利用{[0001|ffff]}{color[ffff]}那個\n程式計算出來的{color[0400]}{[0001|1d00]}數值{[0001|ffff]}{color[ffff]}……
003	來計算{color[0400]}{[0001|1d00]}剩下多少顆蘋果{[0001|ffff]}{color[ffff]}！
004	然後設計出{color[0400]}{[0001|1d00]}遊戲過關的程式{[0001|ffff]}{color[ffff]}！
011	我們馬上開始設計程式吧！
016	現在遊戲畫面中會顯示\n玩家{color[0400]}{[0001|1d00]}獲得了多少顆蘋果{[0001|ffff]}{color[ffff]}……
017	我們要把他改造成\n會顯示{color[0400]}{[0001|1d00]}剩下多少顆蘋果{[0001|ffff]}{color[ffff]}！
018	然後{color[0400]}{[0001|1d00]}當剩下的數量歸0時就會過關{[0001|ffff]}{color[ffff]}……\n對玩家來說這種規則很簡單明瞭吧！
019	那麼～\n蘋果總共有5顆……
020	所以用{color[0400]}{[0001|1d00]}5－獲得的數量{[0001|ffff]}{color[ffff]}\n就能計算出剩下的蘋果數量了。
021	計算{color[0400]}{[0001|1d00]}減法{[0001|ffff]}{color[ffff]}時，\n就需要叫出{color[0400]}{[0001|1d00]}計算小節點{[0001|ffff]}{color[ffff]}！
022	從{color[0400]}{[0001|1d00]}中間{[0001|ffff]}{color[ffff]}裡……
023	選擇{color[0400]}{[0001|1d00]}計算（＋－×÷）{[0001|ffff]}{color[ffff]}。
024	從{color[0400]}{[0001|1d00]}－{[0001|ffff]}{color[ffff]}裡叫出{color[0400]}{[0001|1d00]}計算小節點{[0001|ffff]}{color[ffff]}！
025	我是一台高性能的計算機。
026	只要使用我的\n四則運算裝置……
027	就能讓{color[0400]}{[0001|1d00]}輸入1端口{[0001|ffff]}{color[ffff]}的數值\n與{color[0400]}{[0001|1d00]}輸入2端口{[0001|ffff]}{color[ffff]}的數值{color[0400]}{[0001|1d00]}相減{[0001|ffff]}{color[ffff]}……
028	而{color[0400]}{[0001|1d00]}計算結果{[0001|ffff]}{color[ffff]}則會\n從我的{color[0400]}{[0001|1d00]}輸出端{[0001|ffff]}{color[ffff]}輸出。
031	那麼，把計算小節點\n移動到藍色框框裡……
032	把{color[0400]}{[0001|1d00]}計數器小節點{[0001|ffff]}{color[ffff]}連接到\n{[0001|1d00]}{color[0400]}計算小節點{color[ffff]}{[0001|ffff]}的{color[0400]}{[0001|1d00]}輸入2端口{[0001|ffff]}{color[ffff]}吧！
033	這個就是\n{color[0400]}{[0001|1d00]}獲得的蘋果數量{[0001|ffff]}{color[ffff]}對吧。
034	那麼接下來，\n請傳送數值到\n我的{color[0400]}{[0001|1d00]}輸入1端口{[0001|ffff]}{color[ffff]}。
036	我們需要把輸出蘋果總數……\n也就是{color[0400]}{[0001|1d00]}輸出5{[0001|ffff]}{color[ffff]}的小節點\n連接到{color[0400]}{[0001|1d00]}輸入1端口{[0001|ffff]}{color[ffff]}。
037	像這種需要使用{color[0400]}{[0001|1d00]}固定數值{[0001|ffff]}{color[ffff]}的時候，\n就要叫出{color[0400]}{[0001|1d00]}常數小節點{[0001|ffff]}{color[ffff]}！
038	從{color[0400]}{[0001|1d00]}輸入{[0001|ffff]}{color[ffff]}的……
039	{color[0400]}{[0001|1d00]}常數{[0001|ffff]}{color[ffff]}裡把{color[0400]}{[0001|1d00]}常數小節點{[0001|ffff]}{color[ffff]}叫出來！
040	這個世上只有一個真理……
041	我是{[0001|1d00]}{color[0400]}常數小節點{color[ffff]}{[0001|ffff]}，\n擁有絕不動搖之心。\n這事就交給我辦吧！
043	那麼，把常數小節點\n放到藍色框框裡……
044	打開設定……
045	把{[0001|1d00]}要輸出多少？{[0001|ffff]}\n設定為{[0001|1d00]}{color[0400]}5.00{color[ffff]}{[0001|ffff]}！
046	請關閉設定！
047	5.00對吧？\n我知道了，\n是5.00。
048	把{color[0400]}{[0001|1d00]}常數小節點{[0001|ffff]}{color[ffff]}連接到\n{[0001|1d00]}{color[0400]}計算小節點{color[ffff]}{[0001|ffff]}的{color[0400]}{[0001|1d00]}輸入1端口{[0001|ffff]}{color[ffff]}吧～
049	是{color[0400]}{[0001|1d00]}5{[0001|ffff]}{color[ffff]}對吧。
050	我會用超高性能的演算法來\n計算{color[0400]}{[0001|1d00]}5{[0001|ffff]}{color[ffff]}減去{color[0400]}{[0001|1d00]}獲得的蘋果數量{[0001|ffff]}{color[ffff]}，\n然後把計算結果輸出！！
051	那麼……\n我們來把附數字物件小節點的\n輸入連接換掉吧！
052	選擇計數器小節點和\n附數字物件小節點之間的配對線……
053	和他說再見！
054	接著，把{color[0400]}{[0001|1d00]}計算小節點{[0001|ffff]}{color[ffff]}和\n{color[0400]}{[0001|1d00]}附數字物件小節點{[0001|ffff]}{color[ffff]}連接起來！
055	像這樣把計算小節點\n夾在兩個小節點{color[0400]}{[0001|1d00]}中間{[0001|ffff]}{color[ffff]}，\n就能讓他{color[0400]}{[0001|1d00]}計算數值{[0001|ffff]}{color[ffff]}了！
057	好了……現在應該能夠\n顯示{color[0400]}{[0001|1d00]}蘋果的剩餘數量{[0001|ffff]}{color[ffff]}了！
058	我們到遊戲畫面去吧！
059	一開始會顯示{color[0400]}{[0001|1d00]}5{[0001|ffff]}{color[ffff]}！
060	請試著獲得所有蘋果～
061	5、4、3、2、1、0……\n數字會不斷減少呢！
062	現在畫面中會顯示\n{color[0400]}{[0001|1d00]}蘋果的剩餘數量{[0001|ffff]}{color[ffff]}了！
063	那麼接下來，我們要設計\n{[0001|1d00]}{color[0400]}當獲得所有蘋果時就會過關{color[ffff]}{[0001|ffff]}的程式！
064	去程式設計畫面吧！
065	{color[0400]}{[0001|1d00]}當獲得所有蘋果時{[0001|ffff]}{color[ffff]}……\n也就是{color[0400]}{[0001|1d00]}獲得5顆蘋果時{[0001|ffff]}{color[ffff]}！
068	我們需要叫出一個能夠{color[0400]}{[0001|1d00]}比較{[0001|ffff]}{color[ffff]}的小節點，\n來判斷玩家獲得的蘋果數量是否為5！
070	從{color[0400]}{[0001|1d00]}中間{[0001|ffff]}{color[ffff]}裡……
071	選擇{color[0400]}{[0001|1d00]}比較{[0001|ffff]}{color[ffff]}。
072	接著選擇{[0001|1d00]}{color[0400]}＝{color[ffff]}{[0001|ffff]}，\n叫出{color[0400]}{[0001|1d00]}比較小節點{[0001|ffff]}{color[ffff]}！
073	這個世上太多東西要比較了！
074	我很好奇……\n玩家獲得的蘋果數量\n究竟是不是5顆呢！！
074-01	請把你想要比較的數值\n輸入到我的{color[0400]}{[0001|1d00]}2個輸入端{[0001|ffff]}{color[ffff]}！！
075	馬上來替他連接吧！
076	把比較小節點\n移動到藍色框框裡～
077	把常數小節點連接到\n比較小節點的{color[0400]}{[0001|1d00]}輸入1端口{[0001|ffff]}{color[ffff]}。
078	這是{color[0400]}{[0001|1d00]}5{[0001|ffff]}{color[ffff]}對吧！
079	把計數器小節點連接到\n比較小節點的{color[0400]}{[0001|1d00]}輸入2端口{[0001|ffff]}{color[ffff]}！
080	這是{color[0400]}{[0001|1d00]}獲得的蘋果數量{[0001|ffff]}{color[ffff]}對吧！
081	我會比較{color[0400]}{[0001|1d00]}5{[0001|ffff]}{color[ffff]}和{color[0400]}{[0001|1d00]}獲得的蘋果數量{[0001|ffff]}{color[ffff]}，\n{color[0400]}{[0001|1d00]}如果兩者相同{[0001|ffff]}{color[ffff]}就會輸出訊號喔！
084	好了！\n這樣就可以知道玩家\n{color[0400]}{[0001|1d00]}有沒有獲得5顆蘋果{[0001|ffff]}{color[ffff]}！
096	接下來，我們要用這個程式\n設計{color[0400]}{[0001|1d00]}當獲得5顆蘋果時，\n拉炮就會響起{[0001|ffff]}{color[ffff]}的程式！
097	為了讓拉炮響起～\n我們需要叫出最擅長表演、\n最會炒熱氣氛的{color[0400]}{[0001|1d00]}特效小節點{[0001|ffff]}{color[ffff]}！
099	選擇{color[0400]}{[0001|1d00]}物件{[0001|ffff]}{color[ffff]}。
100	{color[0400]}{[0001|1d00]}特殊物件{[0001|ffff]}{color[ffff]}。
101	從{color[0400]}{[0001|1d00]}特效{[0001|ffff]}{color[ffff]}裡……
102	選擇{color[0400]}{[0001|1d00]}拉炮{[0001|ffff]}{color[ffff]}，\n叫出{color[0400]}{[0001|1d00]}特效小節點{[0001|ffff]}{color[ffff]}吧！
103	你好！謝謝叫我出來！！
104	我就是在小節點車庫中\n負責炒熱氣氛的{[0001|1d00]}{color[0400]}特效小節點{color[ffff]}{[0001|ffff]}！！
105	你想要我在遊戲過關時，\n用{color[0400]}{[0001|1d00]}拉炮{[0001|ffff]}{color[ffff]}來炒熱氣氛對吧！
107	好！\n那我就來說個拉炮笑話！
108	拉炮拉炮～～～\n拉了就跑！！
109	……我們把他移動到這個位置吧。
110	把{[0001|1d00]}{color[0400]}比較小節點{color[ffff]}{[0001|ffff]}和\n{[0001|1d00]}{color[0400]}特效小節點{color[ffff]}{[0001|ffff]}連接起來！
110-01	好了！這樣一來，\n{color[0400]}{[0001|1d00]}當獲得5顆蘋果時，\n拉炮就會響起{[0001|ffff]}{color[ffff]}的程式就完成了！
111	我們去遊戲畫面\n看看變成怎樣吧～！
112	請試著獲得所有蘋果！
113	當獲得所有蘋果時，\n拉炮就響了～！
115	不過……\n只有拉炮感覺還不夠過癮……
116	難得這麼辛苦才過關，\n我們來{color[0400]}{[0001|1d00]}加些聲音{[0001|ffff]}{color[ffff]}，讓氣氛更熱烈吧！
117	去程式設計畫面吧。
118	想要播放聲音時～\n就叫出{color[0400]}{[0001|1d00]}播放聲音小節點{[0001|ffff]}{color[ffff]}！
119	選擇{color[0400]}{[0001|1d00]}輸出{[0001|ffff]}{color[ffff]}。
120	{color[0400]}{[0001|1d00]}播放聲音{[0001|ffff]}{color[ffff]}。
121	從{color[0400]}{[0001|1d00]}播放音效{[0001|ffff]}{color[ffff]}裡\n叫出{color[0400]}{[0001|1d00]}播放聲音小節點{[0001|ffff]}{color[ffff]}！
122	啦～～～～～～～～～♪
126	我會使勁地炒熱氣氛喔，\n一切包在我身上～～～♪
127	把播放聲音小節點\n移動到藍色框框裡。
128	來設定要播放的聲音吧。
128-01	你可以在播放聲音小節點的\n設定畫面中選擇{color[0400]}{[0001|1d00]}要播放什麼聲音{[0001|ffff]}{color[ffff]}！
129	這次我們選擇{color[0400]}{[0001|1d00]}人聲{[0001|ffff]}{color[ffff]}……
130	然後選擇{color[0400]}{[0001|1d00]}耶～！{[0001|ffff]}{color[ffff]}。
130-01	這聲音聽起來很振奮人心呢！
131	那麼，請關閉詳細畫面……
132	關閉設定。
133	把{[0001|1d00]}{color[0400]}比較小節點{color[ffff]}{[0001|ffff]}連接到\n播放聲音小節點的{color[0400]}{[0001|1d00]}播放端口{[0001|ffff]}{color[ffff]}。
134	我們到遊戲畫面確認一下吧！
135	以過關為目標～～～\n出發！！
136	哦～～！我們要的就是這樣！
137	只是多了一個聲音，\n卻能讓過關時的喜悅倍增～！
138	這麼一來……\n{[0001|1d00]}{color[0400]}遊戲過關的程式{color[ffff]}{[0001|ffff]}就完成了！
139	我們回去吧～
140	那麼～～這樣就～～～
141	完成第5步驟了！
142	由衷恭喜你。
143	實在太出色了！
144	恭喜你～！
145	恭喜恭喜啊～
147	這次我們設計了\n{color[0400]}{[0001|1d00]}計算蘋果的剩餘數量{[0001|ffff]}{color[ffff]}的程式……
148	還設計了{color[0400]}{[0001|1d00]}比較獲得的蘋果數量{[0001|ffff]}{color[ffff]}，\n以及遊戲過關的程式！
150	在下個步驟中，我們要設計\n{color[0400]}{[0001|1d00]}讓遊戲玩起來更順手{[0001|ffff]}{color[ffff]}的程式～
151	敬請期待！
Lesson_BallRoll_05.msbt
107	{[0201]}，\n歡迎你！
000	你準備好要開始\n第6步驟了嗎！？
001	我們上次設計了\n{[0001|1d00]}{color[0400]}遊戲過關{color[ffff]}{[0001|ffff]}的程式呢～！
003	這次，我們要設計一些\n讓遊戲玩起來更順手的程式！
005	首先，請看一下遊戲畫面！
008	目前的遊戲畫面……\n實在有點讓人搞不清楚\n{color[0400]}{[0001|1d00]}這是什麼遊戲{[0001|ffff]}{color[ffff]}……對吧！
007	所以～這次我們要設計\n向玩家{color[0400]}{[0001|1d00]}說明遊玩方式{[0001|ffff]}{color[ffff]}的程式！
009	至於要如何向玩家說明呢……？
010	雖然有很多種方法，\n但這次我們就用\n最直接的{color[0400]}{[0001|1d00]}文字{[0001|ffff]}{color[ffff]}來說明吧！
011	為了在遊戲畫面中顯示{color[0400]}{[0001|1d00]}文字{[0001|ffff]}{color[ffff]}，\n我們要使用{[0001|1d00]}{color[0400]}附註解物件小節點{color[ffff]}{[0001|ffff]}！
013	請從{color[0400]}{[0001|1d00]}物件{[0001|ffff]}{color[ffff]}裡……
014	選擇{color[0400]}{[0001|1d00]}特殊物件{[0001|ffff]}{color[ffff]}。
015	然後選擇{color[0400]}{[0001|1d00]}附註解物件{[0001|ffff]}{color[ffff]}，\n叫出{color[0400]}{[0001|1d00]}附註解物件小節點{[0001|ffff]}{color[ffff]}！
017	文字……\n是一種讓彼此互通心意的魔法……
018	你想要向玩家說明遊玩方式嗎……？\n把你的心意用{[0001|1d00]}{color[0400]}文字{color[ffff]}{[0001|ffff]}傳達出去吧！
019	那麼，我們來設計\n{color[0400]}{[0001|1d00]}要傳達的文字{[0001|ffff]}{color[ffff]}吧！
016	把附註解物件小節點\n向左右拉長然後移動～
020	打開設定！
022	請按下{[0001|1d00]}顯示的註解{[0001|ffff]}的{[0001|1d00]}編輯{[0001|ffff]}鍵，\n輸入{[0001|1d00]}{color[0400]}「去獲得蘋果吧！」{color[ffff]}{[0001|ffff]}吧！
023	你輸入{color[0400]}{[0001|1d00]}「去獲得蘋果吧！」{[0001|ffff]}{color[ffff]}了嗎？
024	是
025	否
026	那麼……\n請輸入{color[0400]}{[0001|1d00]}「去獲得蘋果吧！」{[0001|ffff]}{color[ffff]}吧！
028	好了，我們去做其他設定吧！
029	請把{[0001|1d00]}狀態{[0001|ffff]}設定為\n只有{[0001|1d00]}{color[0400]}能看見{color[ffff]}{[0001|ffff]}是{[0001|1d00]}{color[0400]}開啟{color[ffff]}{[0001|ffff]}。
030	更改{color[0400]}{[0001|1d00]}顏色{[0001|ffff]}{color[ffff]}。
031	設定為{color[0400]}{[0001|1d00]}紅色{[0001|ffff]}{color[ffff]}。
032	接著更改{color[0400]}{[0001|1d00]}文字顏色{[0001|ffff]}{color[ffff]}。
033	設定為{color[0400]}{[0001|1d00]}白色{[0001|ffff]}{color[ffff]}！
034	還有別忘了要\n設定{[0001|1d00]}{color[0400]}標示方向{color[ffff]}{[0001|ffff]}～
035	為了讓文字向上顯示，\n我們把他設定為{color[0400]}{[0001|1d00]}Y+{[0001|ffff]}{color[ffff]}吧。
037	最後，把{[0001|1d00]}位置{[0001|ffff]}的{[0001|1d00]}Y{[0001|ffff]}\n設定為{[0001|1d00]}{color[0400]}0.60m{color[ffff]}{[0001|ffff]}吧。
038	完美！\n請關閉設定。
039	那麼……\n我們去遊戲畫面看看吧！
040	文字顯示出來了！
041	這樣就能讓玩家知道\n這是什麼遊戲了！
042	那麼，接下來……
042-01	我們要告訴玩家\n{color[0400]}{[0001|1d00]}這個數值是什麼{[0001|ffff]}{color[ffff]}！
043	去程式設計畫面吧！
044	選擇{[0001|1d00]}{color[0400]}附註解物件小節點{color[ffff]}{[0001|ffff]}……
045	複製！
046	把他縮小一點，\n放在附數字物件小節點的旁邊～
047	打開設定～
048	請選擇{[0001|1d00]}顯示的註解{[0001|ffff]}，\n輸入{[0001|1d00]}{color[0400]}「剩下」{color[ffff]}{[0001|ffff]}！
049	你輸入{color[0400]}{[0001|1d00]}「剩下」{[0001|ffff]}{color[ffff]}了嗎？
050	是
051	否
052	那麼……\n請輸入{color[0400]}{[0001|1d00]}「剩下」{[0001|ffff]}{color[ffff]}吧！
053	關閉設定吧。
054	來，我們去遊戲畫面看看！
055	設定的文字\n顯示出來了～
056	這樣就能讓玩家知道\n這個數值是代表什麼了！
057	那麼，在繼續下一步前……\n請先試著獲得所有蘋果～
058	做得好！
059	要是……\n想從頭再玩一遍，\n就得{color[0400]}{[0001|1d00]}重來{[0001|ffff]}{color[ffff]}才行呢。
060	接下來～\n我們要來解決現在的狀況……\n也就是過關後的重來問題！
061	現在如果想重玩一遍，\n就得做{color[0400]}{[0001|1d00]}重來{[0001|ffff]}{color[ffff]}這個動作。
062	為了讓玩家能更輕鬆地重複遊玩，\n我們來設計{color[0400]}{[0001|1d00]}過關後就會自動重來{[0001|ffff]}{color[ffff]}的程式吧！
063	去程式設計畫面吧！
065	叫出{[0001|1d00]}{color[0400]}重來小節點{color[ffff]}{[0001|ffff]}！
066	選擇{color[0400]}{[0001|1d00]}輸出{[0001|ffff]}{color[ffff]}。
067	{color[0400]}{[0001|1d00]}重來、結束、切換{[0001|ffff]}{color[ffff]}。
068	{color[0400]}{[0001|1d00]}重來遊戲{[0001|ffff]}{color[ffff]}。
069	把重來小節點\n移動到藍色框框裡。
070	唉……\n我不行了……
071	你……你怎麼了嗎？
072	我之前不小心\n把{color[0400]}{[0001|1d00]}計時器小節點{[0001|ffff]}{color[ffff]}\n叫成了{color[0400]}{[0001|1d00]}計步器小節點{[0001|ffff]}{color[ffff]}……
073	這樣弄錯別人的名字，\n真是太失禮了……\n唉……我好想重來……
075	……那麼，我們把那位\n{color[0400]}{[0001|1d00]}計時器小節點{[0001|ffff]}{color[ffff]}也叫出來吧。
076	選擇{color[0400]}{[0001|1d00]}中間{[0001|ffff]}{color[ffff]}。
077	{color[0400]}{[0001|1d00]}計時器{[0001|ffff]}{color[ffff]}。
077-01	正常來說沒人會把計時器叫成計步器吧？\n意思完全不同啊！！
077-02	我不是在氣你弄錯我的名字喔，\n我只是想不通你為什麼會弄錯而已。
077-03	咿……對不起……
077-04	你跟我道什麼歉啊？\n我又沒有在生氣……\n總之，下次還是注意一點吧。
078	……好了，既然他們的誤會解決了，\n請把計時器小節點放到藍色框框裡。
085	接著打開設定。
086	把{[0001|1d00]}要在幾秒後輸出{[0001|ffff]}\n設定為{[0001|1d00]}{color[0400]}2.00{color[ffff]}{[0001|ffff]}！
087	關閉設定吧。
088	把{color[0400]}{[0001|1d00]}比較小節點{[0001|ffff]}{color[ffff]}連接到\n計時器小節點的{color[0400]}{[0001|1d00]}輸入端{[0001|ffff]}{color[ffff]}～
089	把{color[0400]}{[0001|1d00]}計時器小節點{[0001|ffff]}{color[ffff]}\n連接到{color[0400]}{[0001|1d00]}重來小節點{[0001|ffff]}{color[ffff]}～！
089-01	這麼一來，當遊戲過關後等待\n2秒就會重來的程式就完成了！
092	我們去遊戲畫面確認一下吧～
093	請試著獲得所有蘋果，\n讓遊戲過關。
094	現在會自動重來了～！
108	這樣就能輕鬆地重複遊玩囉！
095	我們回去程式設計畫面吧！
096	那麼～～這樣就～～～
097	完成第6步驟了！
098	我感受到你的心意囉。
099	真是太棒了。
100	恭……恭喜你。
101	還挺厲害的嘛。
102	這次我們{color[0400]}{[0001|1d00]}用文字{[0001|ffff]}{color[ffff]}\n向玩家{color[0400]}{[0001|1d00]}說明{[0001|ffff]}{color[ffff]}了遊玩方式～
103	還設計了{color[0400]}{[0001|1d00]}重來程式{[0001|ffff]}{color[ffff]}，\n讓玩家能輕鬆地重複遊玩！
104	下次我們會設計{color[0400]}{[0001|1d00]}傳送陷阱{[0001|ffff]}{color[ffff]}，\n為滾滾球增添一些{color[0400]}{[0001|1d00]}刺激感{[0001|ffff]}{color[ffff]}！
106	那麼……\n敬請期待下個步驟～～！
Lesson_BallRoll_06.msbt
000	歡迎你～～！\n這是滾滾球的第7步驟喔！
001	我們上次設計了在畫面中\n{color[0400]}{[0001|1d00]}顯示遊玩方式{[0001|ffff]}{color[ffff]}的程式呢！
003	那麼先來過關一次看看吧。
004	高超的運球技巧！
005	重來也能正常運作！
006	雖然目前這樣也挺有趣的啦……
008	不過總覺得少了些……\n……{color[0400]}{[0001|1d00]}刺激感{[0001|ffff]}{color[ffff]}呢。
010	所以……我們這次要設計\n會妨礙玩家前進的{color[0400]}{[0001|1d00]}傳送門{[0001|ffff]}{color[ffff]}～
011	讓滾滾球玩起來\n更加{color[0400]}{[0001|1d00]}刺激{[0001|ffff]}{color[ffff]}～
012	而想要製作{color[0400]}{[0001|1d00]}傳送門{[0001|ffff]}{color[ffff]}……
013	就得叫出擁有傳送能力的\n{[0001|1d00]}{color[0400]}傳送物件入口小節點{color[ffff]}{[0001|ffff]}！
014	選擇{color[0400]}{[0001|1d00]}物件{[0001|ffff]}{color[ffff]}。
015	{color[0400]}{[0001|1d00]}放出、消除、引力{[0001|ffff]}{color[ffff]}。
016	{color[0400]}{[0001|1d00]}傳送物件{[0001|ffff]}{color[ffff]}。
017	請從{color[0400]}{[0001|1d00]}傳送物件：入口{[0001|ffff]}{color[ffff]}裡\n叫出{color[0400]}{[0001|1d00]}傳送物件入口小節點{[0001|ffff]}{color[ffff]}！
018	門……召喚我的人就是你嗎？
019	我的能力就是……\n向世界盡頭的彼端……
020	也就是亞空間傳送物件。
021	那麼……\n請他幫忙把球\n送入亞空間吧～
022	把傳送物件入口小節點縮小，\n移動到藍色框框裡。
023	打開設定～
024	首先要把傳送門入口\n調整成{color[0400]}{[0001|1d00]}圓形{[0001|ffff]}{color[ffff]}！
025	請把{[0001|1d00]}物件的形狀{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}球體{color[ffff]}{[0001|ffff]}。
026	接著要把他設定為\n可以傳送{color[0400]}{[0001|1d00]}球{[0001|ffff]}{color[ffff]}～
027	選擇{[0001|1d00]}{color[0400]}要傳送什麼？{color[ffff]}{[0001|ffff]}……
028	設定為只有{[0001|1d00]}{color[0400]}球體{color[ffff]}{[0001|ffff]}是{[0001|1d00]}{color[0400]}開啟{color[ffff]}{[0001|ffff]}。
029	完美。\n開閉詳細設定……
030	關閉設定。
031	前往亞空間……\n亦即從遊戲畫面消失。
032	你做好心理準備了嗎？
033	哦～～！\n我好期待喔！
034	那麼……\n我們試著把球傳送到亞空間吧～
035	去遊戲畫面！
036	在遊戲畫面的中央附近，\n有個用白線畫成的球體……\n那就是{color[0400]}{[0001|1d00]}傳送門入口{[0001|ffff]}{color[ffff]}！
037	那麼……\n請試著讓球接觸\n{[0001|1d00]}{color[0400]}傳送門入口{color[ffff]}{[0001|ffff]}看看！
038	消失了……！！
039	球進入傳送門入口後……\n就這樣消失了！
040	靈、異、現、象！！！
042	其實這不是靈異現象啦，\n這是我們設計的程式喔！！
043	那麼……\n既然球都已經消失了，\n玩家也只能重來了呢！
044	不過……\n這樣好像有點太嚴格了……
045	我們來修改一下程式，\n讓球在消失後會傳送到{color[0400]}{[0001|1d00]}起點{[0001|ffff]}{color[ffff]}吧！
046	我們要讓進入傳送門入口並\n消失在亞空間的球{color[0400]}{[0001|1d00]}出現在起點{[0001|ffff]}{color[ffff]}。
047	既然有傳送門入口……\n那當然也有傳送門出口！
048	話不多說！\n把{[0001|1d00]}{color[0400]}傳送物件出口小節點{color[ffff]}{[0001|ffff]}叫出來吧～！
049	選擇{[0001|1d00]}{color[0400]}物件{color[ffff]}{[0001|ffff]}。
050	{color[0400]}{[0001|1d00]}放出、消除、引力{[0001|ffff]}{color[ffff]}。
051	{color[0400]}{[0001|1d00]}傳送物件{[0001|ffff]}{color[ffff]}。
052	請從{color[0400]}{[0001|1d00]}傳送物件：出口{[0001|ffff]}{color[ffff]}裡\n叫出{color[0400]}{[0001|1d00]}傳送物件出口小節點{[0001|ffff]}{color[ffff]}！
053	門門……召喚我的人就是你嗎？
054	你希望的話……
055	我可以從亞空間的彼端……\n讓萬物瞬間出現於眼前。
056	把我放在你{[0001|1d00]}{color[0400]}想要讓\n物件出現的地點{color[ffff]}{[0001|ffff]}吧。
057	那麼，把傳送物件出口小節點\n移動到{[0001|1d00]}{color[0400]}起點{color[ffff]}{[0001|ffff]}吧～
058	好！\n我們去遊戲畫面確認吧！
059	在起點處能看到一個\n用白線畫成的立方體……\n那就是傳送門出口～
060	試著讓球接觸\n{[0001|1d00]}{color[0400]}傳送門入口{color[ffff]}{[0001|ffff]}！
061	啊……\n球從起點出現了～～！
063	這麼一來……\n{[0001|1d00]}{color[0400]}傳送門程式{color[ffff]}{[0001|ffff]}就完成了！
064	不過……目前的白線外觀看起來很不明顯，\n可能會讓玩家不知道要接觸哪裡才會傳送……
065	我們來把外觀改造一下，\n讓玩家能一看就知道這是傳送門吧！
066	使用{color[0400]}{[0001|1d00]}時尚物件小節點{[0001|ffff]}{color[ffff]}，\n在傳送地點放上{color[0400]}{[0001|1d00]}圓環{[0001|ffff]}{color[ffff]}！
067	選擇{color[0400]}{[0001|1d00]}物件{[0001|ffff]}{color[ffff]}。
068	{color[0400]}{[0001|1d00]}時尚物件{[0001|ffff]}{color[ffff]}。
069	{color[0400]}{[0001|1d00]}各種時尚物件{[0001|ffff]}{color[ffff]}。
070	請從{color[0400]}{[0001|1d00]}圓環{[0001|ffff]}{color[ffff]}裡\n叫出{color[0400]}{[0001|1d00]}時尚物件小節點{[0001|ffff]}{color[ffff]}！
071	把他放在傳送物件入口小節點的位置吧。
072	傳送到起點……\n無盡的傳送形成無限的循環……
073	拿圓環作為循環的標記，\n真是太適合了！！\n♥好有才華喔♥
075	打開時尚物件小節點的設定～
076	把{[0001|1d00]}狀態{[0001|ffff]}設定為\n只有{color[0400]}{[0001|1d00]}能看見{[0001|ffff]}{color[ffff]}是{color[0400]}{[0001|1d00]}開啟{[0001|ffff]}{color[ffff]}。
077	關閉設定。
078	接著，我們在起點處的\n傳送門出口上也擺個圓環吧！
079	複製{[0001|1d00]}圓環{[0001|ffff]}的\n{color[0400]}{[0001|1d00]}時尚物件小節點{[0001|ffff]}{color[ffff]}～
080	放在傳送門出口的旁邊。
081	我們把這個圓環\n貼在牆壁上吧！
082	請打開時尚物件小節點的設定！
083	把{[0001|1d00]}轉動{[0001|ffff]}的{[0001|1d00]}Z軸{[0001|ffff]}\n設定為{color[0400]}{[0001|1d00]}90.00°{[0001|ffff]}{color[ffff]}。
083-01	這樣圓環應該就會向\n貼著牆壁的方向轉動！
084	那麼，請關閉設定。
085	來！\n我們去遊戲畫面看看吧！
086	漂亮的圓環出現在畫面中了！
087	這麼一來，\n就算看不見{[0001|1d00]}{color[0400]}傳送門{color[ffff]}{[0001|ffff]}的白線也沒關係了。
088	回去程式設計畫面，\n把白線隱藏起來吧！
089	我們要把{[0001|1d00]}{color[0400]}傳送門的外觀{color[ffff]}{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}關閉{color[ffff]}{[0001|ffff]}。
090	先選擇{[0001|1d00]}{color[0400]}傳送物件入口小節點{color[ffff]}{[0001|ffff]}～
091	在設定裡……
092	把{[0001|1d00]}狀態{[0001|ffff]}的{[0001|1d00]}{color[0400]}能看見{color[ffff]}{[0001|ffff]}\n設定為{[0001|1d00]}{color[0400]}關閉{color[ffff]}{[0001|ffff]}。
093	關閉設定。
094	門……\n我是一個若有似無的存在……
095	把{[0001|1d00]}{color[0400]}傳送門出口{color[ffff]}{[0001|ffff]}\n也隱藏起來吧。
096	選擇{[0001|1d00]}{color[0400]}傳送物件出口小節點{color[ffff]}{[0001|ffff]}。
097	在設定裡～
098	把{[0001|1d00]}狀態{[0001|ffff]}的{[0001|1d00]}{color[0400]}能看見{color[ffff]}{[0001|ffff]}\n設定為{[0001|1d00]}{color[0400]}關閉{color[ffff]}{[0001|ffff]}。
099	OK。\n關閉設定。
100	門門……\n即使隱去了身影，\n我的力量依然會殘留於此處……
101	我們去遊戲畫面確認看看吧。
102	完美！\n現在看不見傳送門的白線了！
103	不過……{[0201]}，\n你也覺得只有1個傳送門\n好像不夠刺激對吧～～～？
104	{[0201]}！\n為了愛追求刺激的你，\n來增加更多傳送門吧！
105	去程式設計畫面！
106	來增加傳送門吧！
107	選擇{[0001|1d00]}{color[0400]}傳送物件入口小節點{color[ffff]}{[0001|ffff]}……
108	複製！
109	移動到藍色框框裡。
110	門……所謂傳送……\n就是與未知世界的首次接觸。
111	再複製。
112	移動到右上角～
113	門……你無須擔憂。
114	你只是看見了\n原本就存在的事物而已。
115	最後再複製一次！
116	把最後一個傳送門入口放在這裡～！
117	門……只要你抱持信心，\n這個世界就是無限廣闊……
118	現在雖然有很多傳送門入口，\n不過所有傳送門入口\n都會通往{[0001|1d00]}{color[0400]}起點的出口{color[ffff]}{[0001|ffff]}喔～
119	門門……\n不管增加了多少個{[0001|1d00]}{color[0400]}傳送物件入口小節點{color[ffff]}{[0001|ffff]}，\n你都無須擔心。
120	只要有我在的一天，\n通往這個世界的門便會敞開。
121	那麼，\n我們把圓環也加上去吧。
122	選擇{[0001|1d00]}圓環{[0001|ffff]}的\n{color[0400]}{[0001|1d00]}時尚物件小節點{[0001|ffff]}{color[ffff]}……
123	複製。
124	放在傳送門入口上～
125	阻止想通過的侵入者！\n閃耀♥圓環！
126	繼續複製。
127	這個也放到適當的位置！
128	再不停下來就要撞到囉！\n光輝♥圓環！
129	最後再複製一次。
130	把他放到正確位置吧！
131	上面和下面都不給過！\n閃亮♥圓環！
132	那麼……\n我們去遊戲畫面確認吧！
133	現在有許多傳送門入口了呢！
134	原本只是個讓球\n滾來滾去的遊戲……
135	現在卻脫胎換骨，\n成了刺激萬分的遊戲！
136	接下來……\n就請你盡情地玩個痛快吧！
137	恭喜你～！\n你過關了！！
138	我們回去程式設計畫面吧！
139	要是你覺得玩夠了，\n就回去程式設計畫面吧～
140	那麼～～這樣就～～～
141	完成第7步驟了！
142	可喜可賀。
143	令人嘆為觀止。
144	你的表現相當出色。
145	♥好刺激喔♥
146	好了！\n這次我們製作了\n刺激萬分的{color[0400]}{[0001|1d00]}傳送陷阱{[0001|ffff]}{color[ffff]}～
147	到了這一步，\n遊戲也差不多要完成了！
148	下次就是{[0001|1d00]}{color[0400]}最後一步{color[ffff]}{[0001|ffff]}囉～！
149	我們會為滾滾球配上{color[0400]}{[0001|1d00]}BGM{[0001|ffff]}{color[ffff]}，\n完成整個遊戲！
150	那麼，\n敬請期待下個步驟～～！
Lesson_BallRoll_07.msbt
000	歡迎你！{[0201]}！
001	滾滾球……\n終於來到{[0001|1d00]}{color[0400]}最後的步驟{color[ffff]}{[0001|ffff]}了！
002	{[0201]}，\n這次我們要在滾滾球裡\n加入屬於你自己的風格！
003	那麼……\n到程式設計畫面去吧！
004	在開始更改{[0001|1d00]}{color[0400]}外觀{color[ffff]}{[0001|ffff]}之前，\n我們要先做一些準備。
005	我們要叫出……\n能夠創造及改變世界的{color[0400]}{[0001|1d00]}空間小節點{[0001|ffff]}{color[ffff]}！
006	選擇{color[0400]}{[0001|1d00]}物件{[0001|ffff]}{color[ffff]}。
007	請從{color[0400]}{[0001|1d00]}空間{[0001|ffff]}{color[ffff]}裡\n叫出{color[0400]}{[0001|1d00]}空間小節點{[0001|ffff]}{color[ffff]}！
009	你……\n……擁有一雙明亮的眼睛呢。
012	我們一起來創造……\n你的想像世界吧……
012-01	空間小節點他～\n能夠改變遊戲畫面裡的\n{[0001|1d00]}{color[0400]}空間的外型和外觀{color[ffff]}{[0001|ffff]}！
013	試著更改一下\n平面的樣子吧！
014	打開設定……
015	打開{color[0400]}{[0001|1d00]}空間的外觀{[0001|ffff]}{color[ffff]}……
016	設定為{color[0400]}{[0001|1d00]}金屬{[0001|ffff]}{color[ffff]}。
017	完美。\n請關閉設定。
023	那麼……\n我們去看看變成了什麼樣子吧！
024	哦～！\n畫面給人的印象完全不同了呢！
025	就像這樣，你能透過更改\n{color[0400]}{[0001|1d00]}空間小節點{[0001|ffff]}{color[ffff]}的{color[0400]}{[0001|1d00]}空間的外觀{[0001|ffff]}{color[ffff]}，\n來{color[0400]}{[0001|1d00]}改變畫面整體的印象{[0001|ffff]}{color[ffff]}喔！
026	那麼接下來……\n我們來{[0001|1d00]}{color[0400]}設計BGM{color[ffff]}{[0001|ffff]}吧！
033	要播放BGM的話，\n就需要叫出{[0001|1d00]}{color[0400]}BGM小節點{color[ffff]}{[0001|ffff]}！
034	選擇{color[0400]}{[0001|1d00]}輸出{[0001|ffff]}{color[ffff]}。
035	請從{color[0400]}{[0001|1d00]}播放BGM{[0001|ffff]}{color[ffff]}裡\n叫出{color[0400]}{[0001|1d00]}BGM小節點{[0001|ffff]}{color[ffff]}！
036	Yeah！！\n現在是超棒的程式設計時間，\n大家都嗨起來了嗎！！？？
037	OK！各位！\n來跟我一起說！小節點！
038	小節點！
039	小節點！
040	小節點！
041	最後一次！小節點！Yeah～！
042	小節點！Yeah～！
043	OK！OK！\n謝謝各位帥哥美女！\n你們是最棒的小節點！
050	想要播放BGM，\n就必須{color[0400]}{[0001|1d00]}輸入訊號{[0001|ffff]}{color[ffff]}給\n{color[0400]}{[0001|1d00]}BGM小節點{[0001|ffff]}{color[ffff]}才行……
051	叫出{[0001|1d00]}{color[0400]}常數小節點{color[ffff]}{[0001|ffff]}，\n把他們連接起來吧！
052	選擇{color[0400]}{[0001|1d00]}輸入{[0001|ffff]}{color[ffff]}。
053	請從{color[0400]}{[0001|1d00]}常數{[0001|ffff]}{color[ffff]}裡\n把{color[0400]}{[0001|1d00]}常數小節點{[0001|ffff]}{color[ffff]}叫出來！
054	把他移動到BGM小節點的旁邊～
055	絕不動搖的心！\n永恆不變的節奏！\n我就是「常數」YO！
056	唱得好！很棒的顫音喔！
058	請把常數小節點連接到\nBGM小節點的{color[0400]}{[0001|1d00]}播放端口{[0001|ffff]}{color[ffff]}。
059	OK！\n來吧！開始確認！
060	正在播放愉快的音樂呢！
061	我們成功播放BGM了！
062	當然，BGM小節點\n可不只會這一首～～
063	接下來試著{color[0400]}{[0001|1d00]}更改BGM{[0001|ffff]}{color[ffff]}吧！
064	選擇{color[0400]}{[0001|1d00]}BGM小節點{[0001|ffff]}{color[ffff]}～
065	打開設定。
066	在播放BGM呢～！
067	我們要把他換成\n其他風格的BGM。
068	首先選擇{color[0400]}{[0001|1d00]}樂曲{[0001|ffff]}{color[ffff]}！
069	試著選擇{color[0400]}{[0001|1d00]}踏實{[0001|ffff]}{color[ffff]}。
070	變成別的BGM了呢！
071	此外，你還可以透過配搭\n{color[0400]}{[0001|1d00]}旋律{[0001|ffff]}{color[ffff]}、{color[0400]}{[0001|1d00]}主伴奏{[0001|ffff]}{color[ffff]}、{color[0400]}{[0001|1d00]}副伴奏{[0001|ffff]}{color[ffff]}和{color[0400]}{[0001|1d00]}節奏{[0001|ffff]}{color[ffff]}～
072	創作出各種風格的BGM喔！
073	請試著把{[0001|1d00]}主伴奏{[0001|ffff]}\n設定為{color[0400]}{[0001|1d00]}木吉他{[0001|ffff]}{color[ffff]}。
075	聽到{color[0400]}{[0001|1d00]}木吉他的聲音{[0001|ffff]}{color[ffff]}了！
076	接下來試看看把{[0001|1d00]}主伴奏{[0001|ffff]}\n設定為{color[0400]}{[0001|1d00]}踏板效果器與吉他{[0001|ffff]}{color[ffff]}～
077	響起了奇怪的吉他聲，\n聽起來像是在哇哇叫呢。
081	接著把{[0001|1d00]}主伴奏{[0001|ffff]}\n設定為{color[0400]}{[0001|1d00]}靜音{[0001|ffff]}{color[ffff]}看看吧～
082	踏板效果器與吉他的聲音消失，\n現在沒有主伴奏了！
084	那麼把{[0001|1d00]}副伴奏{[0001|ffff]}也\n設定為{color[0400]}{[0001|1d00]}靜音{[0001|ffff]}{color[ffff]}看看吧～
085	這樣一來，\n一首{color[0400]}{[0001|1d00]}只有旋律和節奏{[0001|ffff]}{color[ffff]}的\nBGM就完成了！
086	就像這樣，你能透過\n更改音色或調成靜音，\n來{color[0400]}{[0001|1d00]}創作出新的BGM{[0001|ffff]}{color[ffff]}！
087	先關閉設定～
088	去遊戲畫面確認一下\nBGM的變化吧！
089	完美！\n正在播放剛才創作的BGM呢！
091	那麼……\n我們回去程式設計畫面吧！
092	那麼……{[0201]}！\n接下來就是你的自由時間了！！
094	你可以更改{color[0400]}{[0001|1d00]}空間的外觀{[0001|ffff]}{color[ffff]}……
095	也可以創作{[0001|1d00]}{color[0400]}BGM{color[ffff]}{[0001|ffff]}……
096	或是更改附註解物件上的{color[0400]}{[0001|1d00]}文字{[0001|ffff]}{color[ffff]}……\n總之，請把滾滾球改造成\n{[0201]}的風格吧！
097	當你覺得遊戲「完成了！」……\n就按下{color[0400]}{[0001|1d00]}完成鍵{[0001|ffff]}{color[ffff]}吧！
098	那麼～～～
099	開始設計吧！
100	你終於……完成了！
101	請到遊戲畫面，\n讓我看看屬於\n{[0201]}的滾滾球！
102	哇～～～！！\n滾滾球現在充滿了\n{[0201]}的風格呢！
103	原來如此～\n刻意不做任何更改也不錯呢～
104	那麼……\n這樣就～～～
105	完成滾滾球的設計了！！
106	實在是太厲害了～～～！
107	來！\n我們去程式設計畫面吧！！
108	滾滾球的音～樂～！！\n嗨爆啦！
109	{[0201]}，\n你也太厲害了吧～～～～！！
110	你完美地活用了\n計算的技巧！
111	你完成了一款出色的遊戲……\n讓自己的心意可以傳達給大家。
112	這是一款值得傾斜的遊戲。\n……做得好。
113	太好了！\n我現在！！\n超級！感動！！
114	{[0201]}，\n你的品味也在♥閃閃發亮♥呢。
115	門……居然能駕馭傳送之力，\n看來……你不是等閒之輩呢。
125	這次我們使用了{color[0400]}{[0001|1d00]}傾斜{[0001|ffff]}{color[ffff]}，\n還利用數值進行{[0001|1d00]}{color[0400]}計算{color[ffff]}{[0001|ffff]}和{color[0400]}{[0001|1d00]}比較{[0001|ffff]}{color[ffff]}，\n內容雖然有點困難……
126	但你還是順利完成了……\n{[0201]}的才能……\n……真是讓人驚嘆啊！！
128	下一堂課也很有趣喔～\n敬請期待吧！
129	那麼，把這個滾滾球也\n放進遊戲一覽吧！
130	辛苦你了！\n我們先回去選單一趟～！
Lesson_CarRace_00.msbt
000	{[0201]}，\n你好。
001	歡迎來到熱血沸騰的賽車場！
002	沒錯！這次我們要製作的遊戲名為～～～
003	{[0001|1d00]}{color[0400]}刺激賽車{color[ffff]}{[0001|ffff]}！！！
004	是一款名符其實的賽車遊戲！！
005	隨著比賽開始前的倒數逐漸上升的緊張感……
006	彼此的引擎同時發出蜂鳴聲響……
007	還有……\n超越所有人抵達終點時，心臟那澎湃的躍動！
008	這不叫刺激，什麼才叫刺激！
009	那麼，我們趕緊去程式設計畫面吧～
010	3、2、1……
011	GOOOOOOOO!!!
012	首先……
013	切換為{[0001|1d00]}{color[0400]}俯瞰視角{color[ffff]}{[0001|ffff]}吧。
014	OK～！
015	說到賽車遊戲就不能不提到{[0001|1d00]}{color[0400]}汽車{color[ffff]}{[0001|ffff]}。
016	而說到汽車，\n就不能不提到{[0001|1d00]}{color[0400]}汽車小節點{color[ffff]}{[0001|ffff]}！
017	從{[0001|1d00]}物件{[0001|ffff]}{[0001|0700]}{[0001|ffff]}{[0001|1d00]}角色{[0001|ffff]}{[0001|0700]}{[0001|ffff]}{[0001|1d00]}{color[0400]}汽車{color[ffff]}{[0001|ffff]}裡\n把他叫出來吧！
018	嗖嗖嗖！\n嗨！我是{[0001|1d00]}{color[0400]}汽車小節點{color[ffff]}{[0001|ffff]}。
019	我會照著你設計的程式行駛喔！！
020	我最愛賽車了！\n嗖嗖……轟轟！
022	那麼，我們就趕緊來設計\n讓汽車小節點行駛的程式吧。
023	首先，把汽車小節點\n縮小一點放到起跑位置。
024	嗖嗖……
025	接下來，\n為了讓汽車能夠行駛……
026	我們來設計油門的程式吧！
027	叫出{[0001|1d00]}{color[0400]}鍵{color[ffff]}{[0001|ffff]}的{[0001|1d00]}{color[0400]}按鍵小節點{color[ffff]}{[0001|ffff]}\n並把他放到藍色框框內。
028	嗨！
029	把{[0001|1d00]}{color[0400]}按鍵小節點{color[ffff]}{[0001|ffff]}連接到\n汽車小節點的{[0001|1d00]}{color[0400]}油門端口{color[ffff]}{[0001|ffff]}。
030	好！\n現在你可以用鍵踩油門了喲！
031	轟！轟轟轟！
032	然後……\n為了讓汽車能向左右轉彎～
033	我們要來設計操控方向盤的程式！
034	請從{[0001|1d00]}{color[0400]}L操控搖桿{color[ffff]}{[0001|ffff]}{[0001|0700]}{[0001|ffff]}{[0001|1d00]}{color[0400]}左右{color[ffff]}{[0001|ffff]}裡\n叫出{[0001|1d00]}{color[0400]}操控搖桿小節點{color[ffff]}{[0001|ffff]}，\n把他放到藍色框框裡。
035	左轉轉右轉轉～
036	把{[0001|1d00]}{color[0400]}操控搖桿小節點{color[ffff]}{[0001|ffff]}連接到\n汽車小節點的{[0001|1d00]}{color[0400]}方向盤端口{color[ffff]}{[0001|ffff]}。
037	方向盤轉轉～
038	打開{[0001|1d00]}{color[0400]}汽車小節點{color[ffff]}{[0001|ffff]}的設定～
039	把{[0001|1d00]}移動速度{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}0.50{color[ffff]}{[0001|ffff]}。
040	接著把{[0001|1d00]}位置{[0001|ffff]}的{[0001|1d00]}Y{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}0.40m{color[ffff]}{[0001|ffff]}。
041	完美。\n關閉設定吧。
042	好了！\n這樣現在就能駕駛汽車了！
043	那麼……我們就到\n遊戲畫面飆一下吧！
044	試著用{[0001|1d00]}{color[0400]}鍵{color[ffff]}{[0001|ffff]}讓汽車行駛。
045	現在汽車會跑了！
047	不過……照目前的設計，\n汽車一下子就會跑出遊戲畫面呢。
049	所以～來設計讓遊戲畫面\n跟著汽車移動的程式吧！
050	畢竟賽車遊戲是一種\n不停向前行駛的遊戲……
051	我們就把程式設計成\n讓{[0001|1d00]}{color[0400]}照相機{color[ffff]}{[0001|ffff]}可以跟在汽車後方吧。
052	首先把{[0001|1d00]}{color[0400]}汽車小節點{color[ffff]}{[0001|ffff]}\n{[0001|1d00]}{color[0400]}旋轉180°{color[ffff]}{[0001|ffff]}。
053	叫出{[0001|1d00]}{color[0400]}照相機小節點{color[ffff]}{[0001|ffff]}\n並把他移動到汽車後方。
054	今天要拍什麼樣的場景？
055	在之前的解謎房間中，\n照相機的角度是固定的……
056	這次我們就把他設計成會{[0001|1d00]}{color[0400]}跟著汽車{color[ffff]}{[0001|ffff]}吧。
057	……包在我身上。
058	和GO! GO! 運動競技的\n遊戲畫面小節點一樣……
059	他也可以{[0001|1d00]}{color[0400]}透過連接{color[ffff]}{[0001|ffff]}\n來{[0001|1d00]}{color[0400]}追蹤{color[ffff]}{[0001|ffff]}其他小節點！
060	把{[0001|1d00]}{color[0400]}照相機小節點{color[ffff]}{[0001|ffff]}\n連接到{[0001|1d00]}{color[0400]}汽車小節點{color[ffff]}{[0001|ffff]}。
061	要把我拍得帥氣一點喔！
062	……這是當然的。
063	那麼，為了讓他更上鏡，\n打開{[0001|1d00]}{color[0400]}照相機小節點{color[ffff]}{[0001|ffff]}的設定吧～
064	把{[0001|1d00]}照相機視角{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}60.00{color[ffff]}{[0001|ffff]}。
065	接著把{[0001|1d00]}角色Y軸轉動追蹤{[0001|ffff]}\n設定為{[0001|1d00]}{color[0400]}開啟{color[ffff]}{[0001|ffff]}吧。
066	然後把{[0001|1d00]}偏移距離{[0001|ffff]}設定為\n{[0001|1d00]}Y:{[0001|ffff]} {[0001|1d00]}{color[0400]}0.50m{color[ffff]}{[0001|ffff]}、{[0001|1d00]}Z{[0001|1a00]}:{[0001|1d00]}{[0001|ffff]} {[0001|1d00]}{color[0400]}3.00m{color[ffff]}{[0001|ffff]}。
067	OK！\n關閉設定！
069	這樣照相機就會\n緊緊地跟著汽車了喔！
070	我們去看看！
071	哦哦～
072	現在照相機會從後方拍攝汽車……
073	這樣的畫面很適合賽車呢。
074	試著用{[0001|1d00]}{color[0400]}鍵{color[ffff]}{[0001|ffff]}和{[0001|1d00]}{color[0400]}操控搖桿{color[ffff]}{[0001|ffff]}\n讓汽車行駛吧。
075	現在畫面會跟著汽車了～！
076	那麼，回到程式設計畫面吧。
077	居然能跟上我的速度……\n你好厲害喔！
078	……小事一樁。
079	話說回來……
080	現在雖然能向{[0001|1d00]}{color[0400]}前{color[ffff]}{[0001|ffff]}行駛，\n也能向{[0001|1d00]}{color[0400]}左右{color[ffff]}{[0001|ffff]}轉彎……
081	但不能向{[0001|1d00]}{color[0400]}後{color[ffff]}{[0001|ffff]}倒車呢。
082	就算是在賽車遊戲中，\n偶爾～也會出現需要倒車的情況……
083	所以……接著就來設計倒車的程式吧～！
084	其實，汽車小節點的{[0001|1d00]}油門端口{[0001|ffff]}……
085	在輸入{[0001|1d00]}{color[0400]}負數{color[ffff]}{[0001|ffff]}時會{[0001|1d00]}{color[0400]}倒車或剎車{color[ffff]}{[0001|ffff]}！
087	我們來設計用鍵\n倒車的程式吧！
088	首先，叫出{[0001|1d00]}{color[0400]}鍵{color[ffff]}{[0001|ffff]}的{[0001|1d00]}{color[0400]}按鍵小節點{color[ffff]}{[0001|ffff]}\n並把他放到藍色框框內。
089	嗨！
090	要怎樣做才能\n讓鍵輸出的數值\n{[0001|1d00]}{color[0400]}變為負數{color[ffff]}{[0001|ffff]}呢……？
091	答案就是……\n{[0001|1d00]}{color[0400]}減法{color[ffff]}{[0001|ffff]}！
092	我們要把2個按鍵小節點的\n輸出數值以「{[0001|1d00]}{color[0400]}－{color[ffff]}{[0001|ffff]}」的方式相減。
092-01	這樣一來……\n當按下{[0001|1d00]}{color[0400]}鍵{color[ffff]}{[0001|ffff]}時就會輸出{[0001|1d00]}{color[0400]}1{color[ffff]}{[0001|ffff]}，\n而按下{color[0400]}{[0001|1d00]}鍵{[0001|ffff]}{color[ffff]}時就會輸出{color[0400]}{[0001|1d00]}-1{[0001|ffff]}{color[ffff]}！
093	叫出{[0001|1d00]}{color[0400]}－{color[ffff]}{[0001|ffff]}的{[0001|1d00]}{color[0400]}計算小節點{color[ffff]}{[0001|ffff]}\n並把他放到藍色框框內。
094	你想要計算減法嗎？\n交給我來辦吧。
095	把{[0001|1d00]}{color[0400]}{color[ffff]}{[0001|ffff]}的按鍵小節點連接到\n計算小節點的{[0001|1d00]}{color[0400]}輸入1端口{color[ffff]}{[0001|ffff]}。
096	接著把{[0001|1d00]}{color[0400]}{color[ffff]}{[0001|ffff]}的按鍵小節點連接到\n計算小節點的{[0001|1d00]}{color[0400]}輸入2端口{color[ffff]}{[0001|ffff]}。
097	然後{[0001|1d00]}{color[0400]}刪除{color[ffff]}{[0001|ffff]}汽車小節點和\n{[0001|1d00]}{[0001|ffff]}的按鍵小節點之間的{[0001|1d00]}{color[0400]}配對線{color[ffff]}{[0001|ffff]}。
098	最後，把{[0001|1d00]}{color[0400]}計算小節點{color[ffff]}{[0001|ffff]}連接到\n汽車小節點的{[0001|1d00]}{color[0400]}油門端口{color[ffff]}{[0001|ffff]}。
099	沒問題～沒問題～\n可以倒車～
100	輸入和輸出\n都準備好了。
101	這麼一來，\n倒車的程式就完成了～
102	我們去確認看看吧！
103	試著用{[0001|1d00]}{color[0400]}鍵{color[ffff]}{[0001|ffff]}倒車看看。
104	現在變得可以倒車了～
105	這樣就能讓汽車\n自由自在地行駛了呢！
106	話說回來，你不覺得……\n這台汽車的外型很帥氣嗎～？
107	要是能用這狂野的大輪胎\n在沙漠或荒野上奔馳……
108	一定會很帥氣！
109	機會難得，我們就把這個空間\n設計成像沙漠一樣吧～
110	回到程式設計畫面。
111	叫出{[0001|1d00]}{color[0400]}空間小節點{color[ffff]}{[0001|ffff]}\n並把他放到藍色框框內。
112	我就知道\n你們差不多要來找我了……
113	打開設定，把{[0001|1d00]}空間的外觀{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}沙{color[ffff]}{[0001|ffff]}。
114	很好！\n請關閉設定。
115	那麼來確認一下吧。
116	灼熱的沙漠跟越野車……\n……好帥氣！！
117	在沙漠上盡情奔馳後，\n就回程式設計畫面吧！
118	那麼～～～這樣就～～～～～
119	完成第1步驟了！
120	可喜可賀！
121	……恭喜你。
122	由衷恭喜你。
123	真是值得慶賀。
124	在下個步驟中，\n我們會設計{[0001|1d00]}{color[0400]}終點線{color[ffff]}{[0001|ffff]}\n和{[0001|1d00]}{color[0400]}對戰對手{color[ffff]}{[0001|ffff]}的程式！
125	敬請期待！
126	那麼，\n我們在下個步驟再會囉～
Lesson_CarRace_01.msbt
000	{[0201]}，\n你好。
001	還記得我們上次設計了\n{[0001|1d00]}{color[0400]}汽車{color[ffff]}{[0001|ffff]}和{[0001|1d00]}{color[0400]}照相機{color[ffff]}{[0001|ffff]}的程式嗎？
002	就當是複習，\n試著操控汽車看看吧～
003	是油門，\n是倒車/剎車，\n是方向盤。
004	照相機會跟在\n汽車後面一起移動。
005	然後這次～
006	我們要設計{[0001|1d00]}{color[0400]}終點線{color[ffff]}{[0001|ffff]}\n和{[0001|1d00]}{color[0400]}對戰對手{color[ffff]}{[0001|ffff]}的程式！
007	那麼，我們到程式設計畫面去吧。
008	首先來製作一個{[0001|1d00]}{color[0400]}終點線{color[ffff]}{[0001|ffff]}～
009	先移動到遠一點的地方。
010	叫出{[0001|1d00]}{color[0400]}立方體物件小節點{color[ffff]}{[0001|ffff]}，\n把他調整為終點線的形狀。
011	又長又瘦————————————！
012	請打開設定。
013	把{[0001|1d00]}狀態{[0001|ffff]}設定為\n只有{[0001|1d00]}{color[0400]}能看見{color[ffff]}{[0001|ffff]}是{[0001|1d00]}{color[0400]}開啟{color[ffff]}{[0001|ffff]}……
014	再來把{[0001|1d00]}大小{[0001|ffff]}的{[0001|1d00]}Y{[0001|ffff]}\n設定為{[0001|1d00]}{color[0400]}0.10m{color[ffff]}{[0001|ffff]}……
015	接著把{[0001|1d00]}位置{[0001|ffff]}的{[0001|1d00]}Y{[0001|ffff]}\n設定為{[0001|1d00]}{color[0400]}0.00m{color[ffff]}{[0001|ffff]}。
016	OK！\n關閉設定。
017	這樣終點線就完成了～！
018	不過……現在這條終點線\n只是一條普通的直線……
019	我們來設計一個通過終點後，\n拉炮就會響起的程式吧～
020	為了確認汽車有沒有到達終點～
021	叫出{[0001|1d00]}{color[0400]}接觸感應器小節點{color[ffff]}{[0001|ffff]}\n並把他放到終點線上。
022	哇！\n這個長長瘦瘦的……\n是……是啥鬼！？
023	請打開設定～
024	把{[0001|1d00]}狀態{[0001|ffff]}的{[0001|1d00]}能看見{[0001|ffff]}\n設定為{[0001|1d00]}{color[0400]}關閉{color[ffff]}{[0001|ffff]}。
025	然後，把{[0001|1d00]}{color[0400]}要確認什麼？{color[ffff]}{[0001|ffff]}\n設定為只確認{[0001|1d00]}{color[0400]}汽車{color[ffff]}{[0001|ffff]}。
026	那麼關閉設定～
027	咦！？\n我看不到汽車耶……\n他真的會來我這裡嗎～？
028	沒錯！\n所以就拜託你確認啦！
029	不過……只是確認汽車的話，\n拉炮當然不可能會響起……
030	所以……我們來設計一個\n當接觸感應器作出反應時，\n{[0001|1d00]}{color[0400]}拉炮就會響起{color[ffff]}{[0001|ffff]}的程式吧！
031	叫出{[0001|1d00]}{color[0400]}拉炮{color[ffff]}{[0001|ffff]}的{[0001|1d00]}{color[0400]}特效小節點{color[ffff]}{[0001|ffff]}\n並把他放到終點的附近。
032-00	我的工作……最近變多了耶。\n拿一點報酬也不算太過分吧？
032-01	要說的話……因為是終點……\n所以請我吃茶點！……你覺得如何？
032-02	開個玩笑啦。
033	把{[0001|1d00]}{color[0400]}接觸感應器小節點{color[ffff]}{[0001|ffff]}和\n{[0001|1d00]}{color[0400]}特效小節點{color[ffff]}{[0001|ffff]}連接在一起吧。
034	砰砰砰～！
035	咿……\n請多指教！
036	那麼，我們也砰砰砰～地\n去確認一下吧～！
037	試著筆直地\n一路前進到終點吧！
038	如果迷失了方向就重來一遍，\n試著只按著鍵前進吧。
039	GOOOOOOOOAL!!!
040	{[0201]}選手\n完美地運用程式設計創造了終點！
042	……咳咳。
043	有了終點後，\n變得比較像賽車遊戲了呢。
044	不過畢竟是「賽車」嘛～
045	當然會想要一個對手，\n比比誰更快到終點對吧！
046	所以……接下來我們就來\n設計{[0001|1d00]}{color[0400]}對戰對手的汽車{color[ffff]}{[0001|ffff]}吧。
047	我們先回到起點～
048	{[0001|1d00]}{color[0400]}複製{color[ffff]}{[0001|ffff]}一個{[0001|1d00]}{color[0400]}汽車小節點{color[ffff]}{[0001|ffff]}，\n把他放在原本的汽車小節點旁邊。
049	嗖嗖嗖！
050	要賽車了！
051	為了方便區分他們，\n來更改一下汽車的顏色吧～
052	首先把玩家的汽車\n換成紅色。
053	選擇玩家的汽車小節點～
054	打開設定。
055	把{[0001|1d00]}顏色{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}紅色{color[ffff]}{[0001|ffff]}。
056	OK！\n關閉設定。
057	接下來把對戰對手的汽車\n換成水藍色。
058	選擇對戰對手的汽車小節點……
059	打開設定！
060	把{[0001|1d00]}顏色{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}水藍色{color[ffff]}{[0001|ffff]}。
061	順便把{[0001|1d00]}移動速度{[0001|ffff]}\n調整為{[0001|1d00]}{color[0400]}0.45{color[ffff]}{[0001|ffff]}吧。
062	完美！\n關閉設定吧。
063	馬上來確認一下吧。
064	哇～
065	兩輛汽車並排在一起，\n看起來更像賽車遊戲了！
067	可是……對戰對手的\n水藍色汽車完全不會動！
069	……畢竟還沒有設計程式，\n不會動也是理所當然的啦。
070	那麼……我們就來設計一個\n讓對手汽車動起來的程式吧！
071	我們理想中的對戰對手，\n是不需要經由玩家操控～
072	就能夠自行移動的汽車！
073	在這個步驟中，\n我們就簡單地把他設計為直線行駛～
074	而設計的方法……
075	就是把常數連接到\n汽車小節點的油門端口！
076	你可以把他想像成\n一輛踩著油門不放的汽車。
077	叫出{[0001|1d00]}{color[0400]}常數小節點{color[ffff]}{[0001|ffff]}\n並把他放到汽車小節點旁邊。
078	把{[0001|1d00]}{color[0400]}常數小節點{color[ffff]}{[0001|ffff]}連接到\n左邊的汽車小節點的{[0001|1d00]}{color[0400]}油門端口{color[ffff]}{[0001|ffff]}。
079	啟動油門！
080	沒有人可以\n阻止我的狂飆！！
081	我們去看看他\n無人可擋的飆車技巧吧！
082	哇～
083	對戰對手的汽車\n現在會自動行駛了！
086	這麼一來……\n一個簡單的賽車遊戲就完成了！
087	回去程式設計畫面吧～
088	最後……
089	我們來設計一個\n當汽車到達終點後，\n遊戲就會重來的程式吧！
090	到終點那邊去吧～
091	叫出{[0001|1d00]}{color[0400]}計時器小節點{color[ffff]}{[0001|ffff]}\n並把他放到藍色框框內。
092	嗯？
093	……不好意思，請等我1秒。
094	……請便。
095	或許是因為沒有出席上一堂課，\n我自己也有點鬆懈了，不過……
096	想要正確地計算時間，\n內心就必須要有餘裕。
097	所以我才會總是跟大家說，\n一定要事先約好行程才行……
098	好了！唔～對了！\n請把{[0001|1d00]}{color[0400]}接觸感應器小節點{color[ffff]}{[0001|ffff]}\n連接到{[0001|1d00]}{color[0400]}計時器小節點{color[ffff]}{[0001|ffff]}。
099	接著，叫出{[0001|1d00]}{color[0400]}重來小節點{color[ffff]}{[0001|ffff]}！
100-00	♪哼哼哼哼～♪哼哼哼哼哼♪\n哼哼哼～哼哼～♪
100-01	……咦？\n我是什麼時候被叫來的……？
100-02	被大家聽到我在哼歌了……\n唉……好想重來……
100-03	……別這麼說嘛！\n看你心情那麼好，\n我們也很開心喔！
100-04	……唉……好想重來。
106	呃～那麼……\n把{[0001|1d00]}{color[0400]}重來小節點{color[ffff]}{[0001|ffff]}放到藍色框框內！
106-01	把{[0001|1d00]}{color[0400]}計時器小節點{color[ffff]}{[0001|ffff]}\n連接到{[0001|1d00]}{color[0400]}重來小節點{color[ffff]}{[0001|ffff]}。
107	完美。
108	來確認一下吧～
109	只要其中一方的汽車到達終點，\n遊戲就會重來。
110	重來了呢！
110-01	這樣賽車遊戲就能重複遊玩了！\n你想熱血幾次都行喔！
111	那麼，回到程式設計畫面吧～
112	那麼～～～這樣就～～～～～
113	完成第2步驟了。
114	恭……恭喜你！
115	恭喜你。
116	恭喜你啊～
117	唉……恭喜你～
117-01	這次我們成功設計出\n終點線和對戰對手的程式，\n把賽車遊戲的原型製作出來了！
118	下次我們要設計的程式，\n是判定哪一方的汽車先到達終點……\n也就是{[0001|1d00]}{color[0400]}勝負判定{color[ffff]}{[0001|ffff]}程式！
119	這個程式可不簡單喔，\n敬請期待！
120	那麼，\n我們在下個步驟再會囉～
Lesson_CarRace_02.msbt
000	{[0201]}，\n你好。
001	在上一個步驟裡，\n我們設計了賽車遊戲的\n{[0001|1d00]}{color[0400]}終點線{color[ffff]}{[0001|ffff]}和{[0001|1d00]}{color[0400]}對戰對手{color[ffff]}{[0001|ffff]}呢。
002	不過……現在雖然可以\n確認汽車是否衝過終點……
003	但無論是誰的汽車衝過終點，\n畫面上都會顯示相同的特效～
004	這樣可就不知道是誰贏了呢！
005	所以……\n我們這次要來設計{[0001|1d00]}{color[0400]}勝負判定的程式{color[ffff]}{[0001|ffff]}～
006	讓我們可以知道誰輸誰贏～\n到程式設計畫面去吧！
007	由於位在終點的接觸感應器\n正在確認{[0001|1d00]}{color[0400]}汽車{color[ffff]}{[0001|ffff]}……
008	所以{[0001|1d00]}{color[0400]}無論是誰的汽車{color[ffff]}{[0001|ffff]}\n接觸到終點都會產生反應。
009	我們來改造一下程式，\n讓接觸感應器變得可以分辨玩家\n和對戰對手的汽車吧！
012	我會教你一個\n有點{[0001|1d00]}{color[0400]}神奇的方法{color[ffff]}{[0001|ffff]}，\n你可要用心聽課喔！
013	那麼，我們先叫出\n被歸類在{[0001|1d00]}四方形時尚物件{[0001|ffff]}裡的\n{[0001|1d00]}{color[0400]}Joy-Con(R){color[ffff]}{[0001|ffff]}的{[0001|1d00]}{color[0400]}時尚物件小節點{color[ffff]}{[0001|ffff]}。
014	現場明明只有一個Joy-Con，\n看到他卻令人聯想起不在場的另一個……
015	Joy-Con……\n真會引發人家的想像力呢♥
016	這個時尚物件小節點，\n就是{[0001|1d00]}{color[0400]}分辨汽車的關鍵角色{color[ffff]}{[0001|ffff]}！
017	哦！！！
018	你打算把{[0001|1d00]}{color[0400]}那招{color[ffff]}{[0001|ffff]}傳授給\n{[0201]}嗎？\n沒想到這一天終於來了呢……
020	為了配合汽車大小，\n把時尚物件小節點縮小一點吧。
021	接著，把{[0001|1d00]}{color[0400]}時尚物件小節點{color[ffff]}{[0001|ffff]}連接到\n{[0001|1d00]}{color[0400]}玩家的汽車小節點{color[ffff]}{[0001|ffff]}上～
022	再來打開\n{[0001|1d00]}{color[0400]}時尚物件小節點{color[ffff]}{[0001|ffff]}的設定。
023	把在{[0001|1d00]}{color[0400]}連接面{color[ffff]}{[0001|ffff]}裡的\n{[0001|1d00]}自己的連接面{[0001|ffff]}和{[0001|1d00]}連接對象的連接面{[0001|ffff]}\n都設定為{[0001|1d00]}{color[0400]}中央{color[ffff]}{[0001|ffff]}。
024	關閉詳細畫面～
025	另外把{[0001|1d00]}狀態{[0001|ffff]}設定為\n只有{[0001|1d00]}{color[0400]}能移動{color[ffff]}{[0001|ffff]}是{[0001|1d00]}{color[0400]}開啟{color[ffff]}{[0001|ffff]}。
026	這樣就{[0001|1d00]}{color[0400]}看不見{color[ffff]}{[0001|ffff]}時尚物件了！
026-00	那麼關閉設定畫面～
027	我特地打扮得這麼時尚，\n沒想到別人居然{[0001|1d00]}{color[0400]}看不見{color[ffff]}{[0001|ffff]}……
028	感覺有股神秘的魅力呢★
029	對！你說得沒錯！
030	{[0001|1d00]}{color[0400]}連接看不見的時尚物件{color[ffff]}……{[0001|ffff]}\n正是這個方法的巧妙之處！！
031	現在設計的程式\n還遠遠不夠完善～
032	我們去終點線吧！
033	接下來，\n打開{[0001|1d00]}{color[0400]}接觸感應器{color[ffff]}{[0001|ffff]}的設定！
034	把{[0001|1d00]}{color[0400]}要確認什麼？{color[ffff]}{[0001|ffff]}設定為\n只有{[0001|1d00]}{color[0400]}Joy-Con(R){color[ffff]}{[0001|ffff]}是開啟。
035	好了，\n關閉設定～
036	就算看不見，\n我也感覺得到。
037	明明只看得見汽車……\n卻感覺到{[0001|1d00]}{color[0400]}Joy-Con(R){color[ffff]}{[0001|ffff]}的氣息……咿……
039	這樣接觸感應器小節點\n{[0001|1d00]}{color[0400]}確認{color[ffff]}{[0001|ffff]}的就{[0001|1d00]}{color[0400]}不再是汽車{color[ffff]}{[0001|ffff]}，\n而是時尚物件的{[0001|1d00]}{color[0400]}Joy-Con(R){color[ffff]}{[0001|ffff]}！
040	那麼，我們去確認一下\n會變成什麼樣子吧～
041	首先，我們{[0001|1d00]}{color[0400]}不要做任何操控{color[ffff]}{[0001|ffff]}，\n等待對戰對手衝過終點～
04201	哎呀……\n你衝過終點了呢。
04202	試著{[0001|1d00]}{color[0400]}不要做任何操控{color[ffff]}{[0001|ffff]}，\n等待對戰對手衝過終點吧。
043	雖然對戰對手衝過了終點……\n但什麼事都沒有發生！
045	那麼接下來，\n試著操控汽車衝過終點！
046	GOOOOOOOAL!!!
047	當玩家的汽車衝過終點時，\n畫面就顯示特效了！
049	這是因為接觸感應器{[0001|1d00]}{color[0400]}確認{color[ffff]}{[0001|ffff]}的不是汽車，\n而是附在玩家的汽車上面的{[0001|1d00]}{color[0400]}Joy-Con(R){color[ffff]}{[0001|ffff]}。
051	……{[0001|1d00]}{color[0400]}確認{color[ffff]}{[0001|ffff]}的目標{[0001|1d00]}{color[0400]}不是{color[ffff]}{[0001|ffff]}你所看見的{[0001|1d00]}{color[0400]}汽車{color[ffff]}{[0001|ffff]}，\n而是你看不見的時尚物件{[0001|1d00]}{color[0400]}Joy-Con(R){color[ffff]}{[0001|ffff]}！
052	我把這招命名為……
053	{[0001|1d00]}{color[0400]}秘技：看不見的時尚！！{color[ffff]}{[0001|ffff]}
054	這個秘技就傳授給你囉！
055	那麼接下來～
056	我們也幫對戰對手的汽車\n設計出{[0001|1d00]}{color[0400]}看不見的時尚{color[ffff]}{[0001|ffff]}吧！
057	先回到起點。
058	選擇{[0001|1d00]}{color[0400]}時尚物件小節點{color[ffff]}{[0001|ffff]}～
059	{[0001|1d00]}{color[0400]}複製{color[ffff]}{[0001|ffff]}他～
060	打開設定。
061	把{[0001|1d00]}外觀{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}Joy-Con(L){color[ffff]}{[0001|ffff]}。
062	關閉設定。
063	我有預感要跟\nJoy-Con(R)湊成一對了★
064	把他縮小一下\n再移動位置吧～
065	把{[0001|1d00]}{color[0400]}時尚物件小節點{color[ffff]}{[0001|ffff]}\n連接到{[0001|1d00]}{color[0400]}對戰對手的汽車小節點{color[ffff]}{[0001|ffff]}。
066	現在對戰對手的汽車上也連接了\n一個與玩家不同的{[0001|1d00]}{color[0400]}看不見的時尚{color[ffff]}{[0001|ffff]}！
067	我們去終點吧～
068	接著來設計當對戰對手\n衝過終點時的特效！
069	{[0001|1d00]}{color[0400]}複製接觸感應器{color[ffff]}{[0001|ffff]}……
070	把他放在旁邊一點的位置。
071	這樣就可以更方便地連接配對線，\n是個很有用的小技巧喔！
072	打開設定。
073	把{[0001|1d00]}{color[0400]}要確認什麼？{color[ffff]}{[0001|ffff]}設定為\n只有{[0001|1d00]}{color[0400]}Joy-Con(L){color[ffff]}{[0001|ffff]}是開啟。
074	關閉設定。
075	我感覺到了Joy-Con(L)的氣息……咿……
076	叫出{[0001|1d00]}{color[0400]}失敗{color[ffff]}{[0001|ffff]}的{[0001|1d00]}{color[0400]}特效小節點{color[ffff]}{[0001|ffff]}\n並把他放到藍色框框內。
077	我來了，你好～～～
078	我帶著講出冷笑話時可以\n解救冷場的禁忌特效來了～～
079	名為～～
080	敗家特效！\n啊～～～你這個敗家子！！
081	……感覺我現在就需要這個特效吶。
084	把正在確認Joy-Con(L)的\n{[0001|1d00]}{color[0400]}接觸感應器小節點{color[ffff]}{[0001|ffff]}和\n{[0001|1d00]}{color[0400]}特效小節點{color[ffff]}{[0001|ffff]}連接起來。
085	這樣當對戰對手衝過終點時，\n畫面就會顯示失敗特效了～！
086	那麼，我們去看看吧！
087	不要做任何操控，\n等待對戰對手衝過終點吧。
088	畫面出現{[0001|1d00]}失敗{[0001|ffff]}的特效了！
089	心中充滿了……身為輸家的悔恨……
090	當玩家衝過終點時會出現{color[0400]}{[0001|1d00]}拉炮{[0001|ffff]}{color[ffff]}，\n而當對戰對手衝過終點時\n則會出現{color[0400]}{[0001|1d00]}失敗{[0001|ffff]}{color[ffff]}的特效……
091	這樣就能知道\n是誰的汽車衝過終點了！
092	可是……依照目前的設計……
093	當兩輛汽車{[0001|1d00]}{color[0400]}幾乎同時{color[ffff]}{[0001|ffff]}衝過終點時，\n就會{[0001|1d00]}{color[0400]}同時{color[ffff]}{[0001|ffff]}出現{color[0400]}{[0001|1d00]}拉炮{[0001|ffff]}{color[ffff]}和{color[0400]}{[0001|1d00]}失敗{[0001|ffff]}{color[ffff]}的特效！
094	這樣就不知道誰輸誰贏了！
095	所以接下來……
096	來設計可以{[0001|1d00]}{color[0400]}判定勝負{color[ffff]}{[0001|ffff]}的程式吧～
097	{[0001|1d00]}{color[0400]}勝負判定{color[ffff]}{[0001|ffff]}是個\n有點複雜的程式……
098	為了讓你能更容易地理解他，\n我們先花點{[0001|1d00]}{color[0400]}功夫{color[ffff]}{[0001|ffff]}整理一下程式吧。
099	這個程式分為2個部分，\n分別是{[0001|1d00]}{color[0400]}勝利{color[ffff]}{[0001|ffff]}時的動作\n和{[0001|1d00]}{color[0400]}敗北{color[ffff]}{[0001|ffff]}時的動作……
100	我們要利用{[0001|1d00]}{color[0400]}筆記{color[ffff]}{[0001|ffff]}來\n區分出這2個部分。
101	這種時候就需要請\n{[0001|1d00]}{color[0400]}個人筆記小節點{color[ffff]}{[0001|ffff]}登場了。
102	從{[0001|1d00]}中間{[0001|ffff]}{[0001|0700]}{[0001|ffff]}{[0001|1d00]}程式整理{[0001|ffff]}{[0001|0700]}{[0001|ffff]}{[0001|1d00]}{color[0400]}個人筆記{color[ffff]}{[0001|ffff]}裡\n把他叫出來吧。
103	我是{[0001|1d00]}{color[0400]}個人筆記小節點{color[ffff]}{[0001|ffff]}。\n初次見面，很高興認識你。
104	我不太擅長記東西，\n所以經常會做筆記……
105	如果{[0201]}\n也有怕會忘記的事情……
106	可以把我叫出來，\n在我身上留下筆記喔。
107	那就馬上來寫筆記吧！
108	首先把{color[0400]}{[0001|1d00]}個人筆記小節點{[0001|ffff]}{color[ffff]}\n放大到藍色框框的大小。
109	打開設定。
110	在筆記裡寫下「勝利」。
111	你寫下「勝利」了嗎？
112	OK
113	修改
114	那麼，快在筆記裡寫下「勝利」吧。
115	好了！\n關閉設定～
116	我和附註解物件小節點不一樣……
117	我不會出現在遊戲畫面，\n也不會干涉其他小節點。
118	{[0201]}，\n希望我的存在能幫上你的忙，\n讓你在設計程式時更加順遂。
119	那麼，接下來……
120	{[0001|1d00]}{color[0400]}複製{color[ffff]}{[0001|ffff]}個人筆記小節點，\n把他放到藍色框框內。
121	打開設定。
122	在筆記裡寫下「敗北」。
123	你寫下「敗北」了嗎？
124	OK
125	修改
126	那麼，快在筆記裡寫下「敗北」吧。
127	OK。\n關閉設定。
128	我們將會在這邊設計{[0001|1d00]}{color[0400]}勝利{color[ffff]}{[0001|ffff]}的程式……
129	在這邊設計{[0001|1d00]}{color[0400]}敗北{color[ffff]}{[0001|ffff]}的程式！
130	嗯嗯……\n你筆下的心意，都傳達給我囉。
131	……在此容我獻上一詩。
132	勝利與敗北\n　兩者絕不可混淆\n　　必須做筆記
133	記下{[0001|1d00]}{color[0400]}方便自己理解的筆記{color[ffff]}{[0001|ffff]}，\n其實也是程式設計的一環喔。
134	好了。\n準備完成。
135	接下來，我們終於要進入\n勝負判定程式的重頭戲囉！
136	所謂的勝負就是……
137	看{[0001|1d00]}{color[0400]}先{color[ffff]}{[0001|ffff]}衝過終點的是\n{[0001|1d00]}{color[0400]}玩家{color[ffff]}{[0001|ffff]}還是{[0001|1d00]}{color[0400]}對戰對手{color[ffff]}{[0001|ffff]}～
138	所以要設計出當{[0001|1d00]}{color[0400]}玩家先{color[ffff]}{[0001|ffff]}衝過終點時\n就會開啟的{[0001|1d00]}{color[0400]}旗標小節點{color[ffff]}{[0001|ffff]}……
139	還有當{[0001|1d00]}{color[0400]}對戰對手先{color[ffff]}{[0001|ffff]}衝過終點時\n才會開啟的{[0001|1d00]}{color[0400]}旗標小節點{color[ffff]}{[0001|ffff]}。
140	叫出{[0001|1d00]}{color[0400]}旗標小節點{color[ffff]}{[0001|ffff]}，\n把他放到藍色框框內。
141	……Zzz……\n{[0001|1d00]}{color[0400]}玩家先{color[ffff]}{[0001|ffff]}到終點時，\n記得叫醒我喔……咕噥……
142	叫出另一個{[0001|1d00]}{color[0400]}旗標小節點{color[ffff]}{[0001|ffff]}，\n把他放到藍色框框內。
143	……Zzz……\n{[0001|1d00]}{color[0400]}對戰對手先{color[ffff]}{[0001|ffff]}到終點時，\n記得叫醒我喔……咕噥……
144	這樣就擺好2個旗標小節點了！
145	那麼我們先來設計當{[0001|1d00]}{color[0400]}玩家先{color[ffff]}{[0001|ffff]}衝過終點時……\n也就是{[0001|1d00]}{color[0400]}開啟上方的旗標小節點{color[ffff]}{[0001|ffff]}的程式吧！
146	而所謂的{[0001|1d00]}{color[0400]}玩家先衝過終點{color[ffff]}{[0001|ffff]}……
147	指的就是當{[0001|1d00]}{color[0400]}「對戰對手還沒衝過終點」{color[ffff]}{[0001|ffff]}時，\n{[0001|1d00]}{color[0400]}「玩家衝過終點」{color[ffff]}{[0001|ffff]}。
148	我們需要同時確認這2個條件～
149	說到可以同時確認\n2個條件的小節點……
150	就屬AND小節點了！
151	叫出{[0001|1d00]}{color[0400]}AND小節點{color[ffff]}{[0001|ffff]}，\n把他放在旗標小節點的旁邊吧。
152	然後，把{[0001|1d00]}{color[0400]}AND小節點{color[ffff]}{[0001|ffff]}連接到\n旁邊的旗標小節點的{[0001|1d00]}{color[0400]}開啟端口{color[ffff]}{[0001|ffff]}。
153	……Zzz……\n{[0001|1d00]}{color[0400]}玩家先{color[ffff]}{[0001|ffff]}到終點時，記得叫醒我喔……
154	交給我吧！
155	那麼，{[0201]}，\n可以麻煩你設計一下\n我的輸入訊號嗎？
156	我們需要輸入給AND小節點的是……
157	{[0001|1d00]}{color[0400]}「玩家衝過終點」{color[ffff]}{[0001|ffff]}、\n{[0001|1d00]}{color[0400]}「對戰對手還沒衝過終點」{color[ffff]}{[0001|ffff]}\n這2個條件。
158	現在{[0001|1d00]}{color[0400]}接觸感應器小節點{color[ffff]}{[0001|ffff]}正在確認\n{[0001|1d00]}{color[0400]}「玩家衝過終點」{color[ffff]}{[0001|ffff]}這個條件～
159	把這個{[0001|1d00]}{color[0400]}接觸感應器小節點{color[ffff]}{[0001|ffff]}\n連接到AND小節點的{[0001|1d00]}{color[0400]}輸入2端口{color[ffff]}{[0001|ffff]}。
160	{[0001|1d00]}{color[0400]}「玩家衝過終點」{color[ffff]}{[0001|ffff]}的輸入訊號沒問題！
161	接著要輸入\n{[0001|1d00]}{color[0400]}「對戰對手還沒衝過終點」{color[ffff]}{[0001|ffff]}的訊號。
162	對了……\n你還記得有個小節點在對戰對手\n{[0001|1d00]}{color[0400]}先衝過終點時{color[ffff]}{[0001|ffff]}會變成開啟嗎？
163	咕噥……你在說我嗎？
164	沒錯，就是你！
165	為了避免配對線混在一起，我們利用\n無線傳送入口和出口小節點來連接吧。
166	叫出{[0001|1d00]}{color[0400]}無線傳送入口小節點{color[ffff]}{[0001|ffff]}，\n把他放在旗標小節點的旁邊。
167	接著把旁邊的{[0001|1d00]}{color[0400]}旗標小節點{color[ffff]}{[0001|ffff]}\n連接到{[0001|1d00]}{color[0400]}無線傳送入口小節點{color[ffff]}{[0001|ffff]}。
168	這邊是入口A，\n我會傳達{[0001|1d00]}{color[0400]}「對戰對手先衝過終點」{color[ffff]}{[0001|ffff]}的訊號！
169	叫出{[0001|1d00]}{color[0400]}無線傳送出口小節點{color[ffff]}{[0001|ffff]}，\n把他放到藍色框框內。
170	這邊是出口A，收到！\n我會輸出{[0001|1d00]}{color[0400]}「對戰對手先衝過終點」{color[ffff]}{[0001|ffff]}的訊號！
171	接著叫出{[0001|1d00]}{color[0400]}NOT小節點{color[ffff]}{[0001|ffff]}，\n把他放到藍色框框內。
172	把{[0001|1d00]}{color[0400]}無線傳送出口小節點{color[ffff]}{[0001|ffff]}\n連接到{[0001|1d00]}{color[0400]}NOT小節點{color[ffff]}{[0001|ffff]}。
173	由於NOT小節點會將收到的訊號顛倒後輸出……\n所以會在「對戰對手{[0001|1d00]}{color[0400]}還沒衝過終點{color[ffff]}{[0001|ffff]}」時輸出訊號。
174	嘻嘻嘻！
175	把{[0001|1d00]}{color[0400]}NOT小節點{color[ffff]}{[0001|ffff]}連接到\nAND小節點的{color[0400]}{[0001|1d00]}輸入1端口{[0001|ffff]}{color[ffff]}。
176	「對戰對手{[0001|1d00]}{color[0400]}還沒衝過終點{color[ffff]}{[0001|ffff]}」的輸入沒問題！
177	「玩家衝過終點」還有\n「對戰對手還沒衝過終點」……
178	當兩個條件都達成時，\n我就會叫醒旗標小節點！
179	拜託你了……咕噥……
180	這麼一來，能判定出當{[0001|1d00]}{color[0400]}「對戰對手\n還沒衝過終點」{color[ffff]}{[0001|ffff]}時{[0001|1d00]}{color[0400]}「玩家先衝過終點」{color[ffff]}{[0001|ffff]}……\n也就是判定「勝利」的程式就完成了！
181	我們重新連接{color[0400]}{[0001|1d00]}拉炮{[0001|ffff]}{color[ffff]}的\n特效小節點吧～
182	{[0001|1d00]}{color[0400]}刪除{color[ffff]}{[0001|ffff]}連接在{[0001|1d00]}{color[0400]}拉炮{color[ffff]}{[0001|ffff]}的\n特效小節點身上的{[0001|1d00]}{color[0400]}配對線{color[ffff]}{[0001|ffff]}。
183	移動{[0001|1d00]}{color[0400]}拉炮{color[ffff]}{[0001|ffff]}的特效小節點。
184	把{[0001|1d00]}{color[0400]}旗標小節點{color[ffff]}{[0001|ffff]}和\n{[0001|1d00]}{color[0400]}拉炮{color[ffff]}{[0001|ffff]}的特效小節點連接起來。
185	接下來～～
186	我們來設計能夠開啟\n{[0001|1d00]}{color[0400]}「對戰對手先衝過終點」{color[ffff]}{[0001|ffff]}的\n旗標小節點的程式吧～
187	啊……對了。
188	這次的程式設計有點長，\n如果你累了的話～
189	可以先吃個甜點，\n休息一下喔！
190	接下來的設計除了{[0001|1d00]}{color[0400]}上下顛倒{color[ffff]}{[0001|ffff]}之外，\n跟剛才的程式一模一樣～
191	所以你不用緊張，放輕鬆點吧～～
192	那麼～\n剛才說的{[0001|1d00]}{color[0400]}對戰對手先衝過終點{color[ffff]}{[0001|ffff]}……
193	指的就是當{[0001|1d00]}{color[0400]}「玩家還沒衝過終點」{color[ffff]}{[0001|ffff]}時，\n{[0001|1d00]}{color[0400]}「對戰對手衝過終點」{color[ffff]}{[0001|ffff]}。
194	負責確認這2個條件的\n還是AND小節點！
195	叫出{[0001|1d00]}{color[0400]}AND小節點{color[ffff]}{[0001|ffff]}，\n把他放到旗標小節點旁邊。
196	把{[0001|1d00]}{color[0400]}AND小節點{color[ffff]}{[0001|ffff]}連接到\n旁邊的旗標小節點的{color[0400]}{[0001|1d00]}開啟端口{[0001|ffff]}{color[ffff]}。
197	……Zzz……\n{[0001|1d00]}{color[0400]}對戰對手先到終點{color[ffff]}{[0001|ffff]}時，記得叫醒我喔……
199	現在接觸感應器小節點正在確認\n{[0001|1d00]}{color[0400]}「對戰對手衝過終點」{color[ffff]}{[0001|ffff]}這個條件～
200	把這個{[0001|1d00]}{color[0400]}接觸感應器小節點{color[ffff]}{[0001|ffff]}\n連接到AND小節點的{color[0400]}{[0001|1d00]}輸入1端口{[0001|ffff]}{color[ffff]}。
201	{[0001|1d00]}{color[0400]}「對戰對手衝過終點」{color[ffff]}{[0001|ffff]}的輸入訊號沒問題！
202	接下來是{[0001|1d00]}{color[0400]}「玩家還沒衝過終點」{color[ffff]}{[0001|ffff]}的條件。
203	這邊就用無線傳送的方式，\n把旗標小節點所輸出的\n「玩家{[0001|1d00]}{color[0400]}先衝過終點{color[ffff]}{[0001|ffff]}」的訊號傳送出去吧！
204	叫出{[0001|1d00]}{color[0400]}無線傳送入口小節點{color[ffff]}{[0001|ffff]}，\n把他放在旗標小節點旁邊。
205	打開設定，\n把{[0001|1d00]}{color[0400]}傳送ID{color[ffff]}{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}B{color[ffff]}{[0001|ffff]}。
206	OK。\n關閉設定。
207	把上方的{[0001|1d00]}{color[0400]}旗標小節點{color[ffff]}{[0001|ffff]}\n連接到{[0001|1d00]}{color[0400]}無線傳送入口小節點{color[ffff]}{[0001|ffff]}。
208	這邊是入口B，\n我會傳達{[0001|1d00]}{color[0400]}「玩家先衝過終點」{color[ffff]}{[0001|ffff]}的訊號！
209	叫出{[0001|1d00]}{color[0400]}無線傳送出口小節點{color[ffff]}{[0001|ffff]}，\n把他放到藍色框框內。
210	打開設定，\n把{[0001|1d00]}{color[0400]}傳送ID{color[ffff]}{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}B{color[ffff]}{[0001|ffff]}。
211	OK。\n關閉設定。
212	這邊是出口B，收到！\n我會輸出{[0001|1d00]}{color[0400]}「玩家先衝過終點」{color[ffff]}{[0001|ffff]}的訊號！
213	接著叫出{[0001|1d00]}{color[0400]}NOT小節點{color[ffff]}{[0001|ffff]}，\n把他放到藍色框框內。
214	把在旁邊的{[0001|1d00]}{color[0400]}無線傳送出口小節點{color[ffff]}{[0001|ffff]}\n連接到{[0001|1d00]}{color[0400]}NOT小節點{color[ffff]}{[0001|ffff]}。
215	這樣NOT小節點就會把\n收到的訊號顛倒過來，\n在「玩家{[0001|1d00]}{color[0400]}還沒衝過終點{color[ffff]}{[0001|ffff]}」時輸出訊號。
216	嘻嘻嘻！
217	把{[0001|1d00]}{color[0400]}NOT小節點{color[ffff]}{[0001|ffff]}連接到\nAND小節點的{color[0400]}{[0001|1d00]}輸入2端口{[0001|ffff]}{color[ffff]}。
218	「玩家{[0001|1d00]}{color[0400]}還沒衝過終點{color[ffff]}{[0001|ffff]}」的輸入沒問題！
219	「對戰對手衝過終點」還有\n「玩家還沒衝過終點」……
220	當兩個條件都達成時，\n我就會叫醒旗標小節點！
221	拜託你了……咕噥……
222	這樣一來～～
223	能判定出{[0001|1d00]}{color[0400]}「對戰對手先衝過終點」{color[ffff]}{[0001|ffff]}……\n也就是判定「敗北」的程式就完成了！
224	也把{[0001|1d00]}失敗{[0001|ffff]}的特效小節點\n重新連接一下吧～
225	{[0001|1d00]}{color[0400]}刪除{color[ffff]}{[0001|ffff]}連接在{[0001|1d00]}{color[0400]}失敗{color[ffff]}{[0001|ffff]}的\n特效小節點身上的{[0001|1d00]}{color[0400]}配對線{color[ffff]}{[0001|ffff]}。
226	移動{[0001|1d00]}{color[0400]}失敗{color[ffff]}{[0001|ffff]}的特效小節點。
227	把{[0001|1d00]}{color[0400]}旗標小節點{color[ffff]}{[0001|ffff]}和\n{[0001|1d00]}{color[0400]}失敗{color[ffff]}{[0001|ffff]}的特效小節點連接起來。
228	那麼最後～～
229	我們來修改一下程式，\n讓遊戲在其中一方衝過終點時重來吧～
230	把{[0001|1d00]}{color[0400]}重來小節點\n{color[ffff]}{[0001|ffff]}移動到藍色框框內。
231	接著把{[0001|1d00]}{color[0400]}計時器小節點\n{color[ffff]}{[0001|ffff]}也放到藍色框框內～
232	{[0001|1d00]}{color[0400]}刪除{color[ffff]}{[0001|ffff]}計時器小節點的\n輸入端的{[0001|1d00]}{color[0400]}配對線{color[ffff]}{[0001|ffff]}。
233	把上方的{[0001|1d00]}{color[0400]}旗標小節點{color[ffff]}{[0001|ffff]}連接到\n{[0001|1d00]}{color[0400]}計時器小節點{color[ffff]}{[0001|ffff]}的輸入端。
234	把下方的{[0001|1d00]}{color[0400]}旗標小節點{color[ffff]}{[0001|ffff]}也連接到\n{[0001|1d00]}{color[0400]}計時器小節點{color[ffff]}{[0001|ffff]}的輸入端。
235	這樣一來……
236	我們的勝負判定程式……
237	終於大功告成了！！
238	馬上來確認看看吧！
239	首先，來觀察一下對戰對手\n先衝過終點時的情形吧。
240	畫面上出現了失敗的特效！
241	接著讓自己先衝過終點。
242	拉炮也正常地響起囉～！！
243	試著自己隨意地駕駛一下，\n確認看看是不是只會出現\n{color[0400]}{[0001|1d00]}拉炮或失敗{[0001|ffff]}{color[ffff]}的特效吧。
244	如果你覺得確認清楚了，\n就回去程式設計畫面吧～
245	那麼～～～這樣就～～～～～
246	完成第3步驟了。
247	恭、恭喜你喔……
248	你做得非常好。
249	恭喜你！
250	恭喜你……咕噥……
251	這次的教學雖然\n有～點長又有～點難……
252	但我們終於完成了賽車遊戲的關鍵！\n這可說是比賽當中{[0001|1d00]}{color[0400]}最重要的部分{color[ffff]}{[0001|ffff]}！！
253	在附帶導航的課堂中\n設計了5個遊戲之後～～
254	{[0201]}，\n你的程式設計技術大有進步呢！！
255	下個步驟中我們將會……
256	設計{[0001|1d00]}{color[0400]}賽道{color[ffff]}{[0001|ffff]}！
257	這次的內容實在太難了～
258	所以下次的教學會輕鬆一點～！
259	那麼，\n我們在下個步驟再見啦～
Lesson_CarRace_03.msbt
000	{[0201]}，\n你好。
001	我們上次設計了\n勝負判定程式呢！
002	上次的步驟雖然有點困難～
003	但多虧了你的努力，\n程式現在變得非常接近賽車遊戲了！
004	我們這次要……
005	設計賽車遊戲中最重要的部分！\n也就是{[0001|1d00]}{color[0400]}賽道{color[ffff]}{[0001|ffff]}！
006	畢竟只是在空無一物的\n平地上直線行駛，\n這樣也太無聊了嘛！
007	那麼，我們馬上到程式設計畫面\n製作賽道吧～！
008	叫出{[0001|1d00]}{color[0400]}立方體物件小節點{color[ffff]}{[0001|ffff]}，\n把他放到左邊。
009	接著，打開剛叫出的\n物件小節點的設定。
010	把{[0001|1d00]}大小{[0001|ffff]}的{[0001|1d00]}X{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}0.40m{color[ffff]}{[0001|ffff]}，\n{[0001|1d00]}Y{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}0.40m{color[ffff]}{[0001|ffff]}，\n{[0001|1d00]}Z{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}10.00m{color[ffff]}{[0001|ffff]}。
011	然後把{[0001|1d00]}位置{[0001|ffff]}的{[0001|1d00]}Y{[0001|ffff]}\n設定為{[0001|1d00]}{color[0400]}0.20m{color[ffff]}{[0001|ffff]}．
012	最後把{[0001|1d00]}狀態{[0001|ffff]}設定為\n只有{[0001|1d00]}{color[0400]}能看見{color[ffff]}{[0001|ffff]}、{[0001|1d00]}{color[0400]}能接觸{color[ffff]}{[0001|ffff]}是開啟。
013	OK。\n關閉設定。
014	……嗨。\n你想製作牆壁嗎？
015	那麼，你用{[0001|1d00]}{color[0400]}複製{color[ffff]}{[0001|ffff]}來增加\n我這樣的小節點就行囉。
016	好，那我們就用{[0001|1d00]}{color[0400]}複製\n{color[ffff]}{[0001|ffff]}來製作左邊的牆壁吧～
017	{[0001|1d00]}{color[0400]}複製{color[ffff]}{[0001|ffff]}物件小節點，\n把複製出來的小節點放到上方。
018	再{[0001|1d00]}{color[0400]}複製{color[ffff]}{[0001|ffff]}一個，\n放到上面～
019	還剩2個。
020	還剩1個！
021	左邊的牆壁完成了！
022	我們排成了一條\n整整齊齊的直線呢。
023	看著就覺得有點舒暢。
024	我們先到遊戲畫面\n確認一下賽道吧～
025	現在左邊有一道\n排成直線的牆壁呢！
026	我們就用同樣的方法，\n繼續製作右邊的牆壁吧～
027	那麼，接下來要\n製作右邊的牆壁囉～
028	這次稍微做點變化，\n把右邊的牆壁設置為彎道吧！
029	我們先跳過彎曲的部分，\n從直線的牆壁開始設置！
030	{[0001|1d00]}{color[0400]}複製{color[ffff]}{[0001|ffff]}最上面的物件小節點，\n把他放到右邊。
031	把複製出來的物件小節點\n{[0001|1d00]}{color[0400]}再複製一次{color[ffff]}{[0001|ffff]}。
032	移動他～
033	再{[0001|1d00]}{color[0400]}複製{color[ffff]}{[0001|ffff]}一次～
034	移動他～
035	再{[0001|1d00]}{color[0400]}複製{color[ffff]}{[0001|ffff]}～～
036	再移動～
037	接下來要製作{[0001|1d00]}{color[0400]}斜的牆壁{color[ffff]}{[0001|ffff]}～
038	選擇這個物件小節點……
060	{[0001|1d00]}{color[0400]}複製{color[ffff]}{[0001|ffff]}他。
039	{[0001|1d00]}{color[0400]}旋轉{color[ffff]}{[0001|ffff]}＆移動他～
040	斜斜的～
041	再{[0001|1d00]}{color[0400]}複製{color[ffff]}{[0001|ffff]}一次，\n把他移動到下個地點～
042	這次要複製跟{[0001|1d00]}{color[0400]}更改角度{color[ffff]}{[0001|ffff]}。
043	剩最後1個囉，\n{[0001|1d00]}{color[0400]}複製{color[ffff]}{[0001|ffff]}後把他移動到賽道的缺口上吧！
044	賽道完成了！
045	來吧！實際遊玩一下……\n看看賽道變成什麼樣子了吧！
047	原本什麼都沒有的沙漠中……\n多了一條賽道！
048	這樣一下子就增加了\n不少賽車遊戲的感覺呢～～！
049	來吧，你可以在這條\n特製的賽道上盡情奔馳喔！
050	如果覺得已經跑夠了，\n就回到程式設計畫面吧。
051	那麼～～～這樣就～～～～～
052	完成第4步驟了。
053	恭喜你。
057	恭喜喔。
058	恭喜。
059	恭喜恭喜啊。
054-00	賽道也完成了，\n越來越像正式的賽車遊戲囉！
054	下次我們會設計一個程式，\n讓只會直線前進的對戰對手的汽車……
055	變得比較{[0001|1d00]}{color[0400]}「聰明」{color[ffff]}{[0001|ffff]}一點！
056	那麼，\n在下個步驟再會啦～
Lesson_CarRace_04.msbt
000	{[0201]}，\n你好！
001	我們上次設計了賽道呢。
002	對了……可以請你觀察一下\n{[0001|1d00]}{color[0400]}對戰對手{color[ffff]}{[0001|ffff]}的動作嗎？
003	用{[0001|1d00]}{color[0400]}重來鍵{color[ffff]}{[0001|ffff]}重新開始後，\n在不做任何操作的情況下觀察看看吧。
004	請不要做任何操作，\n在靜止的狀態下觀察對戰對手的汽車～
005	汽車{[0001|1d00]}{color[0400]}直線前進{color[ffff]}{[0001|ffff]}，\n然後撞上了{[0001|1d00]}{color[0400]}牆壁{color[ffff]}{[0001|ffff]}……
006	這樣亂撞一通也太危險了……
007	你也希望能夠讓汽車\n在轉角處正常地轉彎對吧！
008	所以我們這次要～～
010	改造這輛只會直線前進的汽車，\n讓他可以{[0001|1d00]}{color[0400]}沿著賽道自動轉彎{color[ffff]}{[0001|ffff]}！
011	也就是{[0001|1d00]}{color[0400]}自動駕駛AI{color[ffff]}{[0001|ffff]}！
012	馬上來設計這個AI吧！
013	這次的主角是對戰對手的汽車……
014	為了方便我們確認，\n就讓照相機跟著對戰對手的汽車吧～
015	{[0001|1d00]}{color[0400]}解除{color[ffff]}{[0001|ffff]}玩家的汽車小節點和\n照相機小節點之間的{[0001|1d00]}{color[0400]}連接{color[ffff]}{[0001|ffff]}。
016	接著把照相機小節點連接到\n對戰對手的汽車小節點。
017	我們去確認一下畫面，\n看看會變成什麼樣子吧。
018	現在照相機會跟著\n對戰對手的汽車了！
020	能清楚地看到汽車\n撞上牆壁的樣子呢……
021	確認好了就回去\n程式設計畫面吧。
022	那麼……\n我們就開始設計讓汽車\n{[0001|1d00]}{color[0400]}沿著賽道自動轉彎{color[ffff]}{[0001|ffff]}的程式吧！
023	首先要設計讓汽車\n{[0001|1d00]}{color[0400]}自動向右轉過{color[ffff]}{[0001|ffff]}第一個轉角！
024	而這個程式的關鍵就是……\n設定汽車{[0001|1d00]}{color[0400]}在什麼情況下會向右轉{color[ffff]}{[0001|ffff]}！
025	這次我們先來設計\n{[0001|1d00]}{color[0400]}當汽車遇到前方的牆壁時{color[ffff]}{[0001|ffff]}，\n會自動向右轉的程式。
026	這裡需要用到的是……\n{[0001|1d00]}{color[0400]}接觸感應器小節點{color[ffff]}{[0001|ffff]}！
029	叫出{[0001|1d00]}{color[0400]}接觸感應器小節點{color[ffff]}{[0001|ffff]}，\n把他放在汽車小節點前面。
030	請打開設定。
031	把{[0001|1d00]}大小{[0001|ffff]}的{[0001|1d00]}Y{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}0.40m{color[ffff]}{[0001|ffff]}。
032	接著打開{[0001|1d00]}{color[0400]}連接面{color[ffff]}{[0001|ffff]}，\n把{[0001|1d00]}自己的連接面{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}Z+{color[ffff]}{[0001|ffff]}，\n{[0001|1d00]}連接對象的連接面{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}Z-{color[ffff]}{[0001|ffff]}。
033	OK～\n關閉設定吧～
034	這次要撞牆嗎……？
035	……咿……
036	把{[0001|1d00]}{color[0400]}接觸感應器小節點\n連接{color[ffff]}{[0001|ffff]}到{[0001|1d00]}{color[0400]}汽車小節點{color[ffff]}{[0001|ffff]}吧。
037	接下來，把接觸感應器小節點和\n汽車小節點的{color[0400]}{[0001|1d00]}方向盤端口{[0001|ffff]}{color[ffff]}連接在一起。
038	這麼一來，當汽車遇到前方的牆壁……\n也就是{[0001|1d00]}{color[0400]}當接觸感應器撞到牆壁時{color[ffff]}{[0001|ffff]}，\n汽車就會向右轉了～！
039	我們去確認一下吧。
040	你看！
041	接觸感應器對牆壁作出了反應，\n讓汽車向右轉了～！
042	那麼我們回去吧～
043	嗯……雖然很想接著繼續\n設計讓汽車向左轉的程式……
044	不過在那之前，我們還是先了解一下\n接觸感應器小節點是{[0001|1d00]}{color[0400]}在何時作出反應{color[ffff]}{[0001|ffff]}的吧！
045	請叫出{[0001|1d00]}{color[0400]}附數字物件小節點{color[ffff]}{[0001|ffff]}，\n把他放到藍色框框內。
046	更改設定。
047	把{[0001|1d00]}狀態{[0001|ffff]}設定為\n只有{[0001|1d00]}{color[0400]}能看見{color[ffff]}{[0001|ffff]}、{[0001|1d00]}{color[0400]}能移動{color[ffff]}{[0001|ffff]}是開啟。
051	把{[0001|1d00]}整數位數{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}1{color[ffff]}{[0001|ffff]}～
052	把{[0001|1d00]}大小{[0001|ffff]}的{[0001|1d00]}Y{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}0.40m{color[ffff]}{[0001|ffff]}。
053	OK。\n關閉設定吧～
054	把接觸感應器小節點連接到\n附數字物件小節點。
055	接著，把附數字物件小節點\n{[0001|1d00]}{color[0400]}連接{color[ffff]}{[0001|ffff]}到汽車小節點。
056	我只要顯示接觸感應器小節點\n有沒有輸出訊號到這裡就行了吧。
057	麻煩你了！\n幫我跟{[0201]}打聲招呼吧！
059-00	這樣我們就能夠在遊戲畫面中\n看到接觸感應器輸出的數值了！
059	我們去確認一下吧。
060	仔細觀察當汽車靠近牆壁時，\n數值變動的模樣。
061	當汽車接近牆壁時，\n數值就變成1了！
062	這樣就能確認接觸感應器\n{[0001|1d00]}{color[0400]}作出反應的瞬間{color[ffff]}{[0001|ffff]}了！
063	只要使用附數字物件小節點～～
064	就能像這樣，{[0001|1d00]}{color[0400]}在遊戲畫面中\n看到{color[ffff]}{[0001|ffff]}原本看不見的數值喔！
065	這個附數字物件小節點只是\n用來{[0001|1d00]}{color[0400]}幫助我們設計程式{color[ffff]}{[0001|ffff]}而已～
066	所以在遊戲完成之後，\n就會請他回去～
067	確認清楚了就回去吧。
068-00	那麼，接著我們終於要來設計\n讓汽車{[0001|1d00]}{color[0400]}自動向左右轉{color[ffff]}{[0001|ffff]}的程式了！
068	為了讓汽車能向左右轉～～
069	我們需要{[0001|1d00]}{color[0400]}在汽車前方{color[ffff]}{[0001|ffff]}\n設置{[0001|1d00]}{color[0400]}2個{color[ffff]}{[0001|ffff]}接觸感應器！
070	我們要在汽車的\n{[0001|1d00]}{color[0400]}左前方設置用來向右轉{color[ffff]}{[0001|ffff]}的感應器，\n{[0001|1d00]}{color[0400]}右前方設置用來向左轉{color[ffff]}{[0001|ffff]}的感應器。
071	首先～
072	{[0001|1d00]}{color[0400]}更改{color[ffff]}{[0001|ffff]}接觸感應器小節點的{[0001|1d00]}{color[0400]}連接方式{color[ffff]}{[0001|ffff]}，\n讓他稍微偏向左邊一點！
073	先{[0001|1d00]}{color[0400]}解除{color[ffff]}{[0001|ffff]}接觸感應器小節點\n和汽車小節點之間的{[0001|1d00]}{color[0400]}連接{color[ffff]}{[0001|ffff]}。
074	然後，把接觸感應器小節點\n移動到左邊。
078	叫出{[0001|1d00]}{color[0400]}球體物件小節點{color[ffff]}{[0001|ffff]}，\n把他放在汽車小節點前面。
079	更改設定。
080	把{[0001|1d00]}狀態{[0001|ffff]}設定為\n只有{[0001|1d00]}{color[0400]}能移動{color[ffff]}{[0001|ffff]}是開啟。
081	接著打開{[0001|1d00]}{color[0400]}連接面{color[ffff]}{[0001|ffff]}，\n把{[0001|1d00]}自己的連接面{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}Z+{color[ffff]}{[0001|ffff]}，\n{[0001|1d00]}連接對象的連接面{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}Z-{color[ffff]}{[0001|ffff]}～
082	完美！\n請關閉設定。
083	把{[0001|1d00]}{color[0400]}球體{color[ffff]}{[0001|ffff]}物件小節點\n連接到{[0001|1d00]}{color[0400]}汽車小節點{color[ffff]}{[0001|ffff]}。
085	……嗨。\n雖然沒人能看見我，\n但我會默默地支撐大家。
075	接下來，\n打開接觸感應器小節點的設定。
076	打開{[0001|1d00]}{color[0400]}連接面{color[ffff]}{[0001|ffff]}，\n把{[0001|1d00]}自己的連接面{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}X-{color[ffff]}{[0001|ffff]}，\n{[0001|1d00]}連接對象的連接面{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}X+{color[ffff]}{[0001|ffff]}。
077	OK！\n關閉設定吧。
084	把{[0001|1d00]}{color[0400]}接觸感應器小節點{color[ffff]}{[0001|ffff]}\n連接到{[0001|1d00]}{color[0400]}球體{color[ffff]}{[0001|ffff]}物件小節點～
084-01	這樣一來，用來向右轉的感應器\n就被設置在{[0001|1d00]}{color[0400]}汽車左前方{color[ffff]}{[0001|ffff]}囉！
086	我們去確認一下吧～！
087	原本在正面的接觸感應器\n被換到汽車的左前方了！
088	那麼我們回去吧～
089	接著我們來設計讓汽車\n能夠{[0001|1d00]}{color[0400]}向左轉{color[ffff]}{[0001|ffff]}的程式吧～
090	{[0001|1d00]}{color[0400]}複製接觸感應器小節點{color[ffff]}{[0001|ffff]}，\n把他放在相反方向。
091	打開設定。
092	打開{[0001|1d00]}{color[0400]}連接面{color[ffff]}{[0001|ffff]}，\n把{[0001|1d00]}自己的連接面{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}X+{color[ffff]}{[0001|ffff]}，\n{[0001|1d00]}連接對象的連接面{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}X-{color[ffff]}{[0001|ffff]}。
093	關閉設定。
094	把{[0001|1d00]}{color[0400]}接觸感應器小節點{color[ffff]}{[0001|ffff]}\n連接到{[0001|1d00]}{color[0400]}球體{color[ffff]}{[0001|ffff]}物件小節點。
095	咿……\n要去撞右邊的牆壁啊……
096	然後……\n我們要把這個接觸感應器小節點的\n{[0001|1d00]}{color[0400]}輸出{color[ffff]}{[0001|ffff]}訊號{[0001|1d00]}{color[0400]}用在向左轉的動作{color[ffff]}{[0001|ffff]}上……
097	但是想要{[0001|1d00]}{color[0400]}向左轉{color[ffff]}{[0001|ffff]}的話，\n就得{[0001|1d00]}{color[0400]}輸入負數{color[ffff]}{[0001|ffff]}到{[0001|1d00]}方向盤端口{[0001|ffff]}才行！
098	向右轉時要輸入正數，\n向左轉時要輸入負數喔。
099	為了把接觸感應器小節點的輸出\n轉換為負數～
100	我們要使用{[0001|1d00]}{color[0400]}計算小節點{color[ffff]}{[0001|ffff]}！
101	叫出{[0001|1d00]}{color[0400]}－{color[ffff]}{[0001|ffff]}的{[0001|1d00]}{color[0400]}計算小節點{color[ffff]}{[0001|ffff]}，\n把他放到藍色框框內。
102	我會計算出\n華麗的駕駛動作。
103	先{[0001|1d00]}{color[0400]}解除{color[ffff]}{[0001|ffff]}連接在汽車小節點的\n{[0001|1d00]}{color[0400]}方向盤端口{color[ffff]}{[0001|ffff]}的{[0001|1d00]}{color[0400]}配對線{color[ffff]}{[0001|ffff]}。
104	把在{[0001|1d00]}{color[0400]}左邊{color[ffff]}{[0001|ffff]}的接觸感應器小節點\n連接到計算小節點的{[0001|1d00]}{color[0400]}輸入1端口{color[ffff]}{[0001|ffff]}。
105	把在{[0001|1d00]}{color[0400]}右邊{color[ffff]}{[0001|ffff]}的接觸感應器小節點\n連接到計算小節點的{[0001|1d00]}{color[0400]}輸入2端口{color[ffff]}{[0001|ffff]}。
106	然後！把計算小節點的輸出\n連接到汽車小節點的{[0001|1d00]}{color[0400]}方向盤端口{color[ffff]}{[0001|ffff]}！
107	完美。
108	另外～我們用附數字物件來顯示\n傳送到{[0001|1d00]}方向盤端口{[0001|ffff]}的數值吧！
109	把連接在附數字物件小節點的\n輸入端的配對線刪除。
110	把附數字物件小節點\n改成連接到計算小節點～
111	我會告訴你傳送到\n方向盤端口的計算結果。
112	好了！這樣一來，\n讓汽車自動向左右轉的程式就完成了！
113	讓我們用雙眼見證他奔馳的英姿吧～！
114	來吧！\n瞪大眼睛好好看著喔！！
115	右轉～
116	左轉～
117	明明沒有做任何操作～～
118	汽車卻會自動轉彎～！
119	{[0001|1d00]}{color[0400]}自動駕駛AI{color[ffff]}{[0001|ffff]}～\n大功告成了～～！！！
120	從對戰對手的視角看出去的景色，\n之後可就看不到囉～
121	好好欣賞一番後再回去吧～
122	最後，我們來把照相機恢復原狀。
123	把照相機小節點和\n對戰對手的汽車小節點\n之間的{[0001|1d00]}{color[0400]}連接解除{color[ffff]}{[0001|ffff]}。
124	把照相機小節點恢復成原樣，\n{[0001|1d00]}{color[0400]}連接{color[ffff]}{[0001|ffff]}到玩家的汽車小節點上。
125	來吧！我們再看一次遊戲畫面吧！
126	試著慢慢地跟在\n自動駕駛汽車的後方～
127	從旁觀者的視角來觀察\n也頗有新鮮感的呢～～！
128	可以沿著賽道{[0001|1d00]}{color[0400]}自動行駛{color[ffff]}{[0001|ffff]}的程式，\n實在是……
129	太～～～神奇啦！！！
130	這樣肯定能炒熱\n賽車比賽的氣氛！
131	那麼，我們回去吧～
132	那麼～～～這樣就～～～～～
133	完成第5步驟了！
134	由衷恭喜你。
135	恭喜你～
136	恭……恭喜你！
137	哇～\n恭喜恭喜～
137-01	我們這次成功設計出\n{[0001|1d00]}{color[0400]}汽車的自動駕駛AI{color[ffff]}{[0001|ffff]}了！
137-02	思考如何把手動轉換為自動……\n這正是程式設計的有趣之處！
138	下次我們要設計出……\n能夠在起跑時提升緊張感的～～
139	倒數程式！
140	那麼，\n在下個步驟再見啦～
Lesson_CarRace_05.msbt
000	{[0201]}，\n你好！
001	我們上次設計了\n自動駕駛AI的程式呢！
003	和自己設計的AI對戰……\n真是令人熱血沸騰啊～～！！
004	這次我們要設計\n能在起跑時提升緊張感的……
005	{[0001|1d00]}{color[0400]}倒數{color[ffff]}{[0001|ffff]}程式！
006	那麼，我們到程式設計畫面去吧～
007	3、2、1……
008	GOOOOOOOO!!!
009	我們希望{[0001|1d00]}{color[0400]}在遊戲開始時{color[ffff]}{[0001|ffff]}\n就開始倒數～
010	為此我們需要一個小節點，\n替我們{[0001|1d00]}{color[0400]}傳達遊戲開始了{color[ffff]}{[0001|ffff]}這件事！
011	這個小節點就是……\n{[0001|1d00]}{color[0400]}開始時小節點{color[ffff]}{[0001|ffff]}！
012	從{[0001|1d00]}輸入{[0001|ffff]}{[0001|0700]}{[0001|ffff]}{[0001|1d00]}遊戲內的變化{[0001|ffff]}{[0001|0700]}{[0001|ffff]}{[0001|1d00]}{color[0400]}開始時{color[ffff]}{[0001|ffff]}\n把他叫出來吧。
013	我是{[0001|1d00]}{color[0400]}開始時小節點{color[ffff]}{[0001|ffff]}！\n我會在遊戲開始時通知你～～～！！！
014	之後就……
015	拜託你了……
016	開始時小節點\n{[0001|1d00]}{color[0400]}只有在{color[ffff]}{[0001|ffff]}遊戲{[0001|1d00]}{color[0400]}開始的一瞬間{color[ffff]}{[0001|ffff]}\n才會輸出訊號～
017	在那之後就不會輸出任何訊號！
018	把自己的一切賭在開始的那一瞬間……\n這就是開始時小節點……
018-01	我不行了……
019	好，那麼接下來叫出\n{[0001|1d00]}{color[0400]}倒數三秒{color[ffff]}{[0001|ffff]}的{[0001|1d00]}{color[0400]}特效小節點{color[ffff]}{[0001|ffff]}，\n把他放到藍色框框裡～
020	我來了～你好～～
021	請容我說一個倒數笑話～！
022	三……
023	二……
024	一口氣吃掉麻糬！！\n小心會噎到！
025	……
026	好了，快講解下一步啦！
027	呃……\n只要把開始時小節點和\n特效小節點連接在一起……
027-01	當遊戲開始時，\n就會開始倒數！
028	……不過，\n在遊戲開始後，\n也需要一點時間做心理準備～～
029	我們就使用計時器小節點，\n在倒數開始前預留一點時間吧。
030	叫出{[0001|1d00]}{color[0400]}計時器小節點{color[ffff]}{[0001|ffff]}，\n把他放到藍色框框裡～
031	你們又來了，沒預約就直接叫我出來……\n我也需要一點時間做心理準備啊……
032	沒錯！\n為了讓玩家能做好心理準備，\n我們需要計時器小節點的幫忙！
033	……
034	請把{[0001|1d00]}{color[0400]}開始時小節點{color[ffff]}{[0001|ffff]}和\n{[0001|1d00]}{color[0400]}計時器小節點{color[ffff]}{[0001|ffff]}連接起來～
035	接著把{[0001|1d00]}{color[0400]}計時器小節點{color[ffff]}{[0001|ffff]}和\n{[0001|1d00]}{color[0400]}特效小節點{color[ffff]}{[0001|ffff]}連接起來。
036	我們趕快來確認一下吧！
037	倒數正常地開始了呢～！
038	不過……
039	對戰對手的汽車……\n{[0001|1d00]}{color[0400]}無視{color[ffff]}{[0001|ffff]}倒數就直接開跑了……
040	畢竟我們只設計了特效程式，\n這樣是{[0001|1d00]}{color[0400]}沒有人會等待{color[ffff]}{[0001|ffff]}倒數的！
042	所以……來設計在倒數時，\n讓{[0001|1d00]}{color[0400]}汽車無法行駛{color[ffff]}{[0001|ffff]}的程式吧。
043	首先要設計的部分，\n就是要讓汽車靜止多久！
044	因為倒數是3秒，\n所以讓汽車在倒數開始後\n停在原地{[0001|1d00]}{color[0400]}3秒{color[ffff]}{[0001|ffff]}會比較好呢。
045	叫出{[0001|1d00]}{color[0400]}計時器小節點{color[ffff]}{[0001|ffff]}，\n把他放到藍色框框裡。
046	打開設定～
047	把{[0001|1d00]}要在幾秒後輸出{[0001|ffff]}\n設定為{[0001|1d00]}{color[0400]}3.00{color[ffff]}{[0001|ffff]}。
048	完美。\n關閉設定～
051	把{[0001|1d00]}{color[0400]}2個計時器小節點{color[ffff]}{[0001|ffff]}連接起來。
052	接著我們請{[0001|1d00]}{color[0400]}旗標小節點{color[ffff]}{[0001|ffff]}\n記住{[0001|1d00]}{color[0400]}倒數結束{color[ffff]}{[0001|ffff]}這件事吧。
054	叫出{[0001|1d00]}{color[0400]}旗標小節點{color[ffff]}{[0001|ffff]}，\n把他放在旁邊～
055	把{[0001|1d00]}{color[0400]}計時器小節點{color[ffff]}{[0001|ffff]}的輸出\n連接到旗標小節點的{[0001|1d00]}{color[0400]}開啟端口{color[ffff]}{[0001|ffff]}。
056	……倒數結束後，\n就叫醒我吧……
057	這個旗標小節點的輸出訊號\n之後也會用在很多地方……
058	把他連接到無線傳送入口小節點吧。\n這樣一來，其他小節點就可以透過\n無線傳送出口小節點接收他的訊號。
059	叫出{[0001|1d00]}{color[0400]}無線傳送入口小節點{color[ffff]}{[0001|ffff]}，\n把他放在旁邊～
060	把{[0001|1d00]}{color[0400]}旗標小節點{color[ffff]}{[0001|ffff]}和\n{[0001|1d00]}{color[0400]}無線傳送入口小節點{color[ffff]}{[0001|ffff]}連接起來。
061	打開無線傳送入口小節點的設定！
062	把{[0001|1d00]}傳送ID{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}C{color[ffff]}{[0001|ffff]}。
063	OK。\n關閉設定。
064	這裡是入口C，\n我會傳達倒數結束的訊號！\n請講！
065	這樣就完成準備了。
066	接下來～～
067	我們要設計讓汽車\n在倒數結束前{[0001|1d00]}{color[0400]}無法行駛{color[ffff]}{[0001|ffff]}的程式。
068	首先是玩家的汽車。
069	把他設計成在倒數結束前\n{[0001|1d00]}{color[0400]}無法輸入訊號{color[ffff]}{[0001|ffff]}至{[0001|1d00]}油門端口{[0001|ffff]}吧！
072	首先得讓他能接收到\n{[0001|1d00]}{color[0400]}倒數是否結束{color[ffff]}{[0001|ffff]}的訊號。
073	叫出{[0001|1d00]}{color[0400]}無線傳送出口小節點{color[ffff]}{[0001|ffff]}，\n把他放在藍色框框裡。
074	打開設定，\n把{[0001|1d00]}傳送ID{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}C{color[ffff]}{[0001|ffff]}。
075	OK。\n關閉設定～
076	這裡是出口C，\n我會傳達倒數結束的訊號！\n請講！
077	這個無線傳送出口小節點\n{[0001|1d00]}{color[0400]}在倒數結束前不會輸出訊號！{color[ffff]}{[0001|ffff]}
07701	不會輸出訊號，\n也就是說{color[0400]}{[0001|1d00]}數值會是0{[0001|ffff]}{color[ffff]}～
078	所以只要讓他與{[0001|1d00]}油門端口{[0001|ffff]}接收的數值{[0001|1d00]}{color[0400]}相乘{color[ffff]}{[0001|ffff]}，\n在倒數結束前就{[0001|1d00]}{color[0400]}不會有任何訊號輸入{color[ffff]}{[0001|ffff]}至{[0001|1d00]}油門端口{[0001|ffff]}！
079	請{[0001|1d00]}{color[0400]}刪除{color[ffff]}{[0001|ffff]}連接在汽車小節點的{[0001|1d00]}油門端口{[0001|ffff]}和\n{[0001|1d00]}{color[0400]}－{color[ffff]}{[0001|ffff]}的計算小節點之間的{[0001|1d00]}{color[0400]}配對線{color[ffff]}{[0001|ffff]}。
080	叫出{[0001|1d00]}{color[0400]}×{color[ffff]}{[0001|ffff]}的{[0001|1d00]}{color[0400]}計算小節點{color[ffff]}{[0001|ffff]}，\n把他放在藍色框框裡。
081	把{[0001|1d00]}{color[0400]}無線傳送出口小節點{color[ffff]}{[0001|ffff]}和\n{[0001|1d00]}×{[0001|ffff]}的計算小節點的{[0001|1d00]}{color[0400]}輸入1端口{color[ffff]}{[0001|ffff]}連接起來～
082	把{[0001|1d00]}{color[0400]}－{color[ffff]}{[0001|ffff]}的計算小節點的輸出和\n{[0001|1d00]}×{[0001|ffff]}的計算小節點的{[0001|1d00]}{color[0400]}輸入2端口{color[ffff]}{[0001|ffff]}連接起來～～
083	把{[0001|1d00]}{color[0400]}×{color[ffff]}{[0001|ffff]}的計算小節點連接到\n汽車小節點的{[0001|1d00]}{color[0400]}油門端口{color[ffff]}{[0001|ffff]}！
084	這麼一來，在倒數結束前，\n怎麼踩油門都不會有反應～！
085	馬上來確認一下吧。
086	試著在倒數時\n按下{[0001|1d00]}{color[0400]}鍵{color[ffff]}{[0001|ffff]}看看。
087	按下重來，\n重新開始吧～
088	在倒數時就算按下鍵，\n汽車也不會動！
089	現在玩家的汽車變得\n無法在倒數結束前行駛了！
090	我們來把對戰對手的汽車\n設計成同樣的程式吧～
091	對戰對手的程式非常簡單。
092	先跟常數小節點{[0001|1d00]}{color[0400]}說再見{color[ffff]}{[0001|ffff]}。
093	接著叫出{[0001|1d00]}{color[0400]}無線傳送出口小節點{color[ffff]}{[0001|ffff]}，\n把他放在藍色框框裡。
094	打開設定，\n把{[0001|1d00]}傳送ID{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}C{color[ffff]}{[0001|ffff]}。
095	OK。\n關閉設定。
096	這裡是出口C，\n我會傳達倒數結束的訊號！\n請講！
097	把無線傳送出口小節點連接到\n汽車小節點的{[0001|1d00]}{color[0400]}油門端口{color[ffff]}{[0001|ffff]}。
098	這樣一來，對戰對手的汽車\n也無法在倒數結束前行駛囉！
099	去確認一下吧！
100	注意看對戰對手！
101	他會在原地乖乖地\n等到倒數結束呢！
103	這樣起跑前的倒數就完成了！
104	我們回去程式設計畫面吧。
105	那麼～～～這樣就～～～～～
106	完成第6步驟了。
107	恭喜你！\n請講。
108	由衷恭喜你。
109	恭喜你！！！
110	恭喜……咕噥咕噥……
111	這次我們設計了在起跑前\n用來提升緊張感的倒數程式！
113	感覺離真正的賽車遊戲\n又更進了一步呢～！
114	下次我們會設計{[0001|1d00]}{color[0400]}隱藏機關{color[ffff]}{[0001|ffff]}……
115	還有{[0001|1d00]}{color[0400]}方便其他人遊玩的程式整理{color[ffff]}{[0001|ffff]}！
116	那麼，\n在下個步驟再見啦～
Lesson_CarRace_06.msbt
000	{[0201]}，\n你好。
001	我們上次設計了\n起跑時的倒數程式呢！
002	雖然作為一款賽車遊戲，\n完成度已經算是夠高了……
003	但我們這次要再錦上添花，\n設計{[0001|1d00]}{color[0400]}隱藏機關{color[ffff]}{[0001|ffff]}和{[0001|1d00]}{color[0400]}程式整理{color[ffff]}{[0001|ffff]}！
004	首先來設計隱藏機關的程式吧。
005	我們這次要設計的隱藏機關……
006	就是在開始地點的後方\n製作一個{[0001|1d00]}{color[0400]}傳送捷徑{color[ffff]}{[0001|ffff]}！
007	只要利用這個捷徑，\n就能輕鬆到達終點……\n也就是所謂的{[0001|1d00]}{color[0400]}秘技{color[ffff]}{[0001|ffff]}！
008	……咦？\n你問我為什麼要設計這樣的秘技……？
009	當然是因為有秘技的遊戲\n玩起來更開心啊～！
011	好！那麼……\n請叫出{[0001|1d00]}{color[0400]}傳送物件入口小節點{color[ffff]}{[0001|ffff]}！
012	你所求的是暗黑世界的技術……\n這可說是程式設計師的業障。
013	打開設定。
014	把{color[0400]}{[0001|1d00]}狀態{[0001|ffff]}{color[ffff]}的{[0001|1d00]}{color[0400]}能看見{color[ffff]}{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}關閉{color[ffff]}{[0001|ffff]}。
015	把{[0001|1d00]}要傳送什麼？{[0001|ffff]}\n設定為只有{[0001|1d00]}{color[0400]}汽車{color[ffff]}{[0001|ffff]}是開啟。
016	OK！\n關閉設定。
017	利用我的力量引誘汽車\n進入名為亞空間之邪途……\n這可說是強者的業障啊。
018	接著從{[0001|1d00]}各種時尚物件{[0001|ffff]}中\n叫出{[0001|1d00]}{color[0400]}圓環{color[ffff]}{[0001|ffff]}的時尚物件小節點，\n把他重疊在上面作為標記吧。
019	打開設定。
020	把{[0001|1d00]}狀態{[0001|ffff]}設定為只有{[0001|1d00]}{color[0400]}能看見{color[ffff]}{[0001|ffff]}是開啟。
021	把{[0001|1d00]}位置{[0001|ffff]}的{[0001|1d00]}Y{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}0.60m{color[ffff]}{[0001|ffff]}～
022	把{[0001|1d00]}轉動{[0001|ffff]}的{[0001|1d00]}X軸{[0001|ffff]}\n設定為{[0001|1d00]}{color[0400]}90.00°{color[ffff]}{[0001|ffff]}。
023	OK。\n關閉設定～
024	接下來我們移動到傳送的目的地。
025	叫出{[0001|1d00]}{color[0400]}傳送物件出口小節點{color[ffff]}{[0001|ffff]}。
026	我會從亞空間的彼端\n召喚出你渴望的物件。
028	打開設定～
029	把{[0001|1d00]}{color[0400]}狀態{color[ffff]}{[0001|ffff]}的{[0001|1d00]}{color[0400]}能看見{color[ffff]}{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}關閉{color[ffff]}{[0001|ffff]}。
030	OK～\n關閉設定。
031	這樣隱藏機關就完成了！
032	馬上來確認一下吧。
033	{[0001|1d00]}{color[0400]}按住鍵不放{color[ffff]}{[0001|ffff]}，\n直線向後倒車就能傳送囉。
034	傳送成功！
035	只要自己動手設計遊戲……
036	就能像這樣\n在裡面偷偷地加入\n自己喜歡的秘技喔！
037	接著我們來做一下\n{[0001|1d00]}{color[0400]}方便其他人遊玩的整理{color[ffff]}{[0001|ffff]}吧。
038	雖然我們在設計程式時，\n會加入很多方便自己確認的物件～
039	但他們可能會影響到實際的遊戲體驗，\n所以我們需要刪除或是隱藏這些物件！
040	跟{[0001|1d00]}{color[0400]}附數字物件小節點說再見{color[ffff]}{[0001|ffff]}吧。
041	打開{[0001|1d00]}{color[0400]}左邊的接觸感應器小節點{color[ffff]}{[0001|ffff]}的設定～
042	把{[0001|1d00]}狀態{[0001|ffff]}的{[0001|1d00]}{color[0400]}能看見{color[ffff]}{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}關閉{color[ffff]}{[0001|ffff]}。
043	OK。\n關閉設定。
044	接著打開{[0001|1d00]}{color[0400]}右邊的接觸感應器小節點{color[ffff]}{[0001|ffff]}的設定～～
045	重複剛才的動作，\n把{[0001|1d00]}狀態{[0001|ffff]}的{[0001|1d00]}{color[0400]}能看見{color[ffff]}{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}關閉{color[ffff]}{[0001|ffff]}吧～
046	完美。\n請關閉設定。
047	那麼我們去確認一下吧。
048	請看對戰對手的汽車。
049	接觸感應器和附數字物件都消失了，\n看起來乾淨順眼多了！
050	確認清楚了就回去吧～
051	那麼～～～這樣就～～～～～
052	完成第7步驟了。
053	♥好有才華♥
054	恭喜你～\n嗖嗖！
055	恭、恭喜你。
056	恭喜你！
057	我們這次設計了\n隱藏傳送門的秘技～
058	還整理了程式，\n讓遊戲能更方便其他人遊玩！
059	不知不覺間，\n刺激賽車也快要完成了呢！
060	下次就是{[0001|1d00]}{color[0400]}最後一步{color[ffff]}{[0001|ffff]}囉～！
061	{[0201]}，\n到時候你可以把刺激賽車\n設計成自己喜歡的風格喔！
062	那麼，\n在下個步驟再會啦～
Lesson_CarRace_07.msbt
000	你好！！
001	來吧！\n終於到了刺激賽車的\n最後一個步驟了！！
002	上次我們整理了程式，\n讓遊戲能更方便其他人遊玩！
003	這次我們就來把刺激賽車設計成\n帶有{[0201]}風格的遊戲吧！
004	那麼，朝著程式設計畫面……\nGOOOOOO!!!
005	這次要讓{[0201]}改造的是～
006	{[0001|1d00]}{color[0400]}外觀{color[ffff]}{[0001|ffff]}和{[0001|1d00]}{color[0400]}BGM{color[ffff]}{[0001|ffff]}！
007	首先來準備BGM吧。
008	叫出{[0001|1d00]}{color[0400]}BGM小節點{color[ffff]}{[0001|ffff]}～
009	Yeah！\n當汽車小節點起跑，\n你的遊戲製作也開跑！
010	當汽車輪胎發出咆哮聲，\n你的程式設計技術也直線飆升！
01001	請打開設定。
01002	把{[0001|1d00]}樂曲{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}競爭{color[ffff]}{[0001|ffff]}！
01003	聽起來這首BGM能夠\n燃起我們心中的賽車魂呢！
01005	關閉設定。
011	我們希望在倒數結束後\n才播放BGM～
012	所以把旗標小節點的輸出\n連接到BGM小節點的{[0001|1d00]}{color[0400]}播放端口{color[ffff]}{[0001|ffff]}吧。
013	我們去確認看看吧～
014	等待倒數結束。
015	BGM開始播放了！
01501	這樣BGM的準備就算完成了。\n不過……
01502	這次我們要對BGM再多下點功夫！
01503	回到程式設計畫面吧。
01504	BGM小節點除了{color[0400]}{[0001|1d00]}播放端口{[0001|ffff]}{color[ffff]}以外，\n還有2個端口。
01505	這次……\n我們就使用其中的{color[0400]}{[0001|1d00]}速度端口{[0001|ffff]}{color[ffff]}\n來更改{color[0400]}{[0001|1d00]}BGM的播放速度{[0001|ffff]}{color[ffff]}吧！
01506	對{[0001|1d00]}速度端口{[0001|ffff]}輸入\n{color[0400]}{[0001|1d00]}大於1.00的數值{[0001|ffff]}{color[ffff]}，\nBGM的播放速度就會{color[0400]}{[0001|1d00]}變快{[0001|ffff]}{color[ffff]}……
01507	相反地，對{[0001|1d00]}速度端口{[0001|ffff]}輸入\n{color[0400]}{[0001|1d00]}小於1.00的數值{[0001|ffff]}{color[ffff]}，\nBGM的播放速度就會{color[0400]}{[0001|1d00]}變慢{[0001|ffff]}{color[ffff]}！
01508	那麼……\n這次我們就試著把BGM的\n播放速度{color[0400]}{[0001|1d00]}調慢一點{[0001|ffff]}{color[ffff]}看看吧！
01509	叫出{color[0400]}{[0001|1d00]}常數小節點{[0001|ffff]}{color[ffff]}，\n把他放在BGM小節點旁邊！
01510	打開設定～
01511	把{[0001|1d00]}要輸出多少？{[0001|ffff]}\n設定為{[0001|1d00]}{color[0400]}0.95{color[ffff]}{[0001|ffff]}！
01512	關閉設定。
01513	0.95嗎？\n我知道了。\n是0.95。
01514	在我們把常數小節點和\n{[0001|1d00]}速度端口{[0001|ffff]}{color[0400]}{[0001|1d00]}連接之前{[0001|ffff]}{color[ffff]}……
01515	先{color[0400]}{[0001|1d00]}打開{[0001|ffff]}{color[ffff]}BGM小節點的{color[0400]}{[0001|1d00]}設定{[0001|ffff]}{color[ffff]}，\n以{color[0400]}{[0001|1d00]}正常的速度{[0001|ffff]}{color[ffff]}\n重新聽一遍BGM吧！
01516	這是{color[0400]}{[0001|1d00]}正常的速度{[0001|ffff]}{color[ffff]}。
0151601	耐心聆聽一會兒。
01517	確認好播放速度後，\n就關閉設定吧。
01518	那麼～\n請把常數小節點連接到\nBGM小節點的{color[0400]}{[0001|1d00]}速度端口{[0001|ffff]}{color[ffff]}。
01519	CHILL OUT！
01520	重新打開BGM小節點的設定。
01521	如何？\n現在BGM的播放速度{color[0400]}{[0001|1d00]}變慢{[0001|ffff]}{color[ffff]}了，\n整首音樂的氣氛也不同了呢～
0152101	就像這樣，\n只要{color[0400]}{[0001|1d00]}輸入訊號到速度端口{[0001|ffff]}{color[ffff]}，\n就能改變播放速度！
01522	確認好的話，\n就關閉設定吧。
01524	實際到遊戲畫面中\n聽聽看BGM吧！
01525	等待倒數結束……
01526	在遊戲畫面中，\nBGM也變慢了一些！
016	那麼我們回去吧～
017	好了！\n這樣就完成準備了！
018	{[0201]}，\n接下來就是你的時間囉！\n把刺激賽車改造成自己喜歡的模樣吧！
019	譬如更改汽車和賽道的風格～
020	或是改成自己喜歡的BGM……
02001	另外……\n你還可以自由地更改\nBGM的播放速度喔！
021	當你覺得遊戲「完成了！」……
022	就按下{color[0400]}{[0001|1d00]}完成鍵{[0001|ffff]}{color[ffff]}吧！
023	那麼～～～
024	開始設計吧！！
025	你終於完成了！
026	那麼，{[0201]}……\n就讓我來看看……\n屬於你的刺激賽車！
027	{[0201]}，\n我能夠清楚地感受到\n你親手打造的刺激感～～！
028	原來如此～\n刻意不做任何更改……這也是一種刺激！
029	那麼……\n這樣就～～～
030	完成刺激賽車的設計了！！
031	實在是太厲害了～～～！
032	來吧！\n我們去程式設計畫面！！
033	油門催到底！\n好開心啊～～～！！
034	3、2、1！\nGOGOGO！！！
035	……嗨。\n好刺激喔。
036	你那出色的表現\n在亞空間中也蔚為話題。
037	咿……你居然學會了\n看不見的時尚……\n這樣你不就無敵了嗎！？
038	聚集小節點\n　大家齊來爭先後\n　　刺激的賽車
039	遊戲沒問題！\n最後的改造也沒問題！\n這是一個很棒的遊戲！
040	{[0201]}，\n我會把你衝過終點這件事傳達出去！！\n請講！
041	沒想到你居然跨越了重重難關，\n成功完成了這款遊戲……
042	{[0201]}……\n你的潛能，真是深不可測啊！
043	下次就是最後一課了……
044	{[0201]}，\n我有預感……\n你一定可以到達新的境界！
045	真是……\n令人迫不及待啊！！！
046	那麼，把這個賽車遊戲\n放進遊戲一覽吧～
047	先回去選單一趟～
Lesson_Chase_00.msbt
000	{[0201]}，\n你好！
001	你遵守約定過來了呢～！
002	歡迎來到\n{[0001|1d00]}{color[0400]}附帶導航的課堂{color[ffff]}{[0001|ffff]}！
002-001	請容我重新自我介紹，\n我叫作{[0001|1d00]}{color[0400]}鮑伯{color[ffff]}{[0001|ffff]}。
002-002	今後請多多關照～～！
003	那麼～在這值得紀念的第一堂課中，\n我們要製作的遊戲就是……
004	二人對戰！捉迷藏大戰！
004000	這是一款「你追我跑」的遊戲……\n玩家分為{[0001|1d00]}{color[0400]}逃跑的人{color[ffff]}{[0001|ffff]}和{[0001|1d00]}{color[0400]}追逐的鬼{color[ffff]}{[0001|ffff]}，\n場地中充斥著滾動的危險球體！
004001	聽起來是不是很有趣呢～～～？
005	你將會在這個{[0001|1d00]}{color[0400]}遊戲畫面{color[ffff]}{[0001|ffff]}中\n體驗到這款有趣的遊戲喔！
008	不過……\n現在還沒有東西可以給你玩。
009	這也是當然的吧，\n畢竟我們還沒有\n設計任何東西啊。
010	之後我們會在{[0001|1d00]}{color[0400]}程式設計畫面{color[ffff]}{[0001|ffff]}中\n設計遊戲程式，這樣{[0001|1d00]}{color[0400]}遊戲畫面{color[ffff]}{[0001|ffff]}\n就會顯示你設計的各種東西囉。
011	那麼事不宜遲！\n我們到{[0001|1d00]}{color[0400]}程式設計畫面{color[ffff]}{[0001|ffff]}\n開始設計遊戲吧～
012	按下這個按鍵，\n向{[0001|1d00]}{color[0400]}程式設計畫面{color[ffff]}{[0001|ffff]}GO！
013	歡迎來到{[0001|1d00]}{color[0400]}程式設計畫面{color[ffff]}{[0001|ffff]}！
014	在這裡，你可以叫出各種{[0001|1d00]}{color[0400]}小節點{color[ffff]}{[0001|ffff]}，\n使用他們來設計遊戲程式。
015	那麼，我們馬上來設計{[0001|1d00]}{color[0400]}玩家角色{color[ffff]}{[0001|ffff]}看看吧！
016	首先……\n要叫出{[0001|1d00]}{color[0400]}人小節點{color[ffff]}{[0001|ffff]}！
017	選擇{[0001|1d00]}{color[0400]}物件{color[ffff]}{[0001|ffff]}。
018	{[0001|1d00]}{color[0400]}角色{color[ffff]}{[0001|ffff]}。
019	最後選擇{[0001|1d00]}{color[0400]}人{color[ffff]}{[0001|ffff]}……
020	嗨！\n我是{[0001|1d00]}{color[0400]}人小節點{color[ffff]}{[0001|ffff]}！
021	啊，{[0201]}，\n我們又見面了呢！
023	我們正打算開始設計遊戲呢。
024	哇～！\n好棒喔！
025	主角一定是我對吧！
027	那麼，在擺出{[0001|1d00]}{color[0400]}人小節點{color[ffff]}{[0001|ffff]}之後，\n畫面會變成怎樣呢……？
028	我們去{[0001|1d00]}{color[0400]}遊戲畫面{color[ffff]}{[0001|ffff]}\n確認一下吧～
029	按下這個按鍵，\n去{[0001|1d00]}{color[0400]}遊戲畫面{color[ffff]}{[0001|ffff]}吧。
030	原本空無一物的遊戲畫面上……\n出現了{[0001|1d00]}{color[0400]}人{color[ffff]}{[0001|ffff]}！
031	這表示當你在{[0001|1d00]}{color[0400]}程式設計畫面{color[ffff]}{[0001|ffff]}\n擺出{[0001|1d00]}{color[0400]}人小節點{color[ffff]}{[0001|ffff]}時，\n{[0001|1d00]}{color[0400]}遊戲畫面{color[ffff]}{[0001|ffff]}中也會同時出現{[0001|1d00]}{color[0400]}人{color[ffff]}{[0001|ffff]}。
032	接下來……我們希望能\n用控制器來{[0001|1d00]}{color[0400]}操控{color[ffff]}{[0001|ffff]}這個人……
033	可以請你試著推動{[0001|1d00]}{color[0400]}操控搖桿{color[ffff]}{[0001|ffff]}，\n看看能不能讓人移動嗎？
034	人完全沒有動靜呢！
035	我們得{[0001|1d00]}{color[0400]}設計{color[ffff]}{[0001|ffff]}一個可以\n用操控搖桿讓人移動的程式才行！
036	來吧！我們來設計\n{[0001|1d00]}{color[0400]}用操控搖桿讓人移動的程式{color[ffff]}{[0001|ffff]}～
037	為了用操控搖桿讓人移動，\n我們先叫出{[0001|1d00]}{color[0400]}操控搖桿小節點{color[ffff]}{[0001|ffff]}。
038	選擇{[0001|1d00]}{color[0400]}輸入{color[ffff]}{[0001|ffff]}。
039	{[0001|1d00]}{color[0400]}推動操控搖桿{color[ffff]}{[0001|ffff]}。
040	{[0001|1d00]}{color[0400]}L操控搖桿{color[ffff]}{[0001|ffff]}。
040000	最後選擇{[0001|1d00]}{color[0400]}左右{color[ffff]}{[0001|ffff]}！
041	你好～
042	你是{[0201]}對吧～？
043	你想轉轉～操控搖桿嗎～？
044	那麼，把這個{[0001|1d00]}{color[0400]}操控搖桿小節點{color[ffff]}{[0001|ffff]}的{[0001|1d00]}{color[0400]}輸出端{color[ffff]}{[0001|ffff]}……
045	連接到{[0001|1d00]}{color[0400]}人小節點{color[ffff]}{[0001|ffff]}的{[0001|1d00]}{color[0400]}左右端口{color[ffff]}{[0001|ffff]}吧。
046	操控搖桿小節點！\n麻煩你照老樣子來囉！
047	我會傳達操控搖桿\n轉轉轉～的情況喔～
048	那麼，\n我們去遊戲畫面確認吧！
049	請試著{[0001|1d00]}{color[0400]}左右{color[ffff]}{[0001|ffff]}推動\n{[0001|1d00]}{color[0400]}操控搖桿{color[ffff]}{[0001|ffff]}！
050	做得好！\n現在可以用操控搖桿\n讓人移動了～！
051	掌聲鼓勵鼓勵～
052	既然可以用操控搖桿讓人移動了，\n那麼接下來……
053	我們希望能夠在\n{[0001|1d00]}{color[0400]}按下按鍵後讓人跳躍{color[ffff]}{[0001|ffff]}。
054	來設計按下鍵後\n讓人跳躍的程式吧！
055	首先，把{[0001|1d00]}{color[0400]}操控搖桿小節點{color[ffff]}{[0001|ffff]}\n移動到藍色框框裡。
056	然後選擇{[0001|1d00]}{color[0400]}輸入{color[ffff]}{[0001|ffff]}。
057	{[0001|1d00]}{color[0400]}按下按鍵{color[ffff]}{[0001|ffff]}。
058	最後選擇{[0001|1d00]}{color[0400]}{color[ffff]}{[0001|ffff]}！
059	嗨！
060	我是{[0001|1d00]}{color[0400]}按鍵小節點{color[ffff]}{[0001|ffff]}。
061	什麼嘛，\n原來是{[0201]}啊。
063	按鍵的事就交給我吧！\n我按～～～！
064	把{[0001|1d00]}{color[0400]}按鍵小節點{color[ffff]}{[0001|ffff]}\n放到藍色框框裡……
065	接著把{[0001|1d00]}{color[0400]}按鍵小節點的輸出端{color[ffff]}{[0001|ffff]}和\n{[0001|1d00]}{color[0400]}人小節點的跳躍端口{color[ffff]}{[0001|ffff]}連接起來！
066	嗨！\n我會用力傳達按鍵的狀況喲！
067	拜託你啦！
068	我們到遊戲畫面確認一下吧！
069	試著按下{[0001|1d00]}{color[0400]}鍵{color[ffff]}{[0001|ffff]}。
070	做得好！\n按下鍵後，人跳躍起來了～
071	好了！\n如果你覺得確認清楚了，\n就回去程式設計畫面吧。
072	那麼～～～這樣就～～～～～
073	完成第1步驟了！
074a	恭喜你～
074b	恭喜～
074c	恭喜你！
075-00	這次我們設計了\n用控制器來操控人的程式！
075	在下個步驟中，\n我們要來準備製作捉迷藏的{[0001|1d00]}{color[0400]}場地{color[ffff]}{[0001|ffff]}！
076	敬請期待！
077	那麼，我們在下個步驟再見囉～
Lesson_Chase_01.msbt
000	歡迎你！\n{[0201]}！
001	那麼，我們來繼續\n製作捉迷藏遊戲吧！
002	首先複習一下上次的內容。
003	請試著用{[0001|1d00]}{color[0400]}操控搖桿{color[ffff]}{[0001|ffff]}和{[0001|1d00]}{color[0400]}鍵{color[ffff]}{[0001|ffff]}\n移動人並使他跳躍～
004	就是這樣！\n在上個步驟中，你設計出\n{[0001|1d00]}{color[0400]}用控制器操控人{color[ffff]}{[0001|ffff]}的程式呢！
005	這次我們要來製作捉迷藏場地中\n不可或缺的部分——{[0001|1d00]}{color[0400]}平面和牆壁{color[ffff]}{[0001|ffff]}！
006	那麼，到程式設計畫面去吧～
007	在製作平面和牆壁之前……
007000	要先決定{[0001|1d00]}{color[0400]}在哪裡製作場地{color[ffff]}{[0001|ffff]}。
007001	我們在上面一點的位置……\n這片空白處製作場地吧。
007002	既然決定好地點了，\n那就把這部分\n{[0001|1d00]}{color[0400]}顯示到遊戲畫面上{color[ffff]}{[0001|ffff]}吧。
009	這種時候……\n就得叫出{[0001|1d00]}{color[0400]}遊戲畫面小節點{color[ffff]}{[0001|ffff]}！
010	選擇{[0001|1d00]}{color[0400]}物件{color[ffff]}{[0001|ffff]}。
011	{[0001|1d00]}{color[0400]}遊戲畫面和照相機{color[ffff]}{[0001|ffff]}。
012	最後選擇{[0001|1d00]}{color[0400]}遊戲畫面{color[ffff]}{[0001|ffff]}。
013	你好你好～\n早安啊～～
013-01	哦～！你就是\n{[0201]}吧！\n我有聽說過你的事喔～～！
013-02	我們一起來製作\n震撼業界的巔峰大作吧！
014	只要使用這個{[0001|1d00]}{color[0400]}遊戲畫面小節點{color[ffff]}{[0001|ffff]}……
015	就能自己決定要將\n{[0001|1d00]}{color[0400]}程式設計畫面的哪處{color[ffff]}{[0001|ffff]}\n{[0001|1d00]}{color[0400]}顯示在遊戲畫面上{color[ffff]}{[0001|ffff]}！
016	沒錯～
017	我會把{[0001|1d00]}{color[0400]}圍住的地方{color[ffff]}{[0001|ffff]}\n完整地顯示在遊戲畫面喔～～～
018	那麼，把這個遊戲畫面小節點\n稍微放大一點吧。
018000	請{[0001|1d00]}{color[0400]}按住{color[ffff]}{[0001|ffff]}這個按鍵{[0001|1d00]}{color[0400]}拖曳{color[ffff]}{[0001|ffff]}，\n把遊戲畫面小節點放大到\n{[0001|1d00]}{color[0400]}與藍色框框相同的大小{color[ffff]}{[0001|ffff]}。
019	來吧！\n我們去遊戲畫面看看\n會變成什麼樣子吧！
020	現在看不見人了。
021	這是因為在程式設計畫面裡，\n{[0001|1d00]}{color[0400]}人小節點的位置沒有在\n遊戲畫面小節點圍住的框框內{color[ffff]}{[0001|ffff]}。
022	我們回到程式設計畫面，\n讓畫面可以{[0001|1d00]}{color[0400]}顯示人{color[ffff]}{[0001|ffff]}吧。
023	那麼，請把{[0001|1d00]}{color[0400]}人小節點{color[ffff]}{[0001|ffff]}……
024	移動到{[0001|1d00]}{color[0400]}遊戲畫面小節點裡面{color[ffff]}{[0001|ffff]}。
025	OKOK～～\n我會把人小節點\n完美地拍進來喔～～！
026	要把我拍得帥氣一點喔！
027	那麼，我們去遊戲畫面吧。
028	你看！\n人顯示在畫面上了！
029	不過……轉眼就掉下去了。
031	呃……總之～\n在程式設計畫面中\n{[0001|1d00]}{color[0400]}遊戲畫面小節點圍住的地方{color[ffff]}{[0001|ffff]}……
032	就會像這樣\n{[0001|1d00]}{color[0400]}被顯示在遊戲畫面上{color[ffff]}{[0001|ffff]}～
032000	不過……\n總不能就這樣讓人掉下去呢。
033	為了不要讓人掉下去，\n我們來設計{[0001|1d00]}{color[0400]}平面{color[ffff]}{[0001|ffff]}吧。
034	製作平面時……\n我們需要叫出{[0001|1d00]}{color[0400]}物件小節點{color[ffff]}{[0001|ffff]}。
035	選擇{[0001|1d00]}{color[0400]}物件{color[ffff]}{[0001|ffff]}。
036	{[0001|1d00]}{color[0400]}一般物件{color[ffff]}{[0001|ffff]}。
037	最後選擇{[0001|1d00]}{color[0400]}立方體{color[ffff]}{[0001|ffff]}。
038	……嗨。\n我是物件小節點。
039	{[0001|1d00]}{color[0400]}物件小節點{color[ffff]}{[0001|ffff]}正如其名，\n是個可以讓{[0001|1d00]}{color[0400]}物件出現\n在遊戲畫面{color[ffff]}{[0001|ffff]}的小節點！
039-01	……沒錯。
040	把這個物件小節點\n移動到{[0001|1d00]}{color[0400]}人小節點的下方{color[ffff]}{[0001|ffff]}……
041	好了！\n去遊戲畫面確認一下吧！
042	你看，是物件！\n你有看到了嗎！？
043	……抱歉。\n其實我們得做一些設定，\n才能讓物件不會{[0001|1d00]}{color[0400]}掉下去{color[ffff]}{[0001|ffff]}。
044	麻煩你先回到程式設計畫面，\n設計讓物件{[0001|1d00]}{color[0400]}不會掉下去{color[ffff]}{[0001|ffff]}的程式吧。
045	首先，選擇{[0001|1d00]}{color[0400]}物件小節點{color[ffff]}{[0001|ffff]}。
046	然後，按下這個按鍵\n打開{[0001|1d00]}{color[0400]}設定畫面{color[ffff]}{[0001|ffff]}。
047	在這個設定畫面裡，\n你可以更改{[0001|1d00]}{color[0400]}小節點的設定{color[ffff]}{[0001|ffff]}！
048	只要更改這個{[0001|1d00]}{color[0400]}狀態{color[ffff]}{[0001|ffff]}的設定，\n就能讓物件不會掉下去喔。
049	請把{[0001|1d00]}{color[0400]}能移動{color[ffff]}{[0001|ffff]}、{[0001|1d00]}{color[0400]}會損壞{color[ffff]}{[0001|ffff]}、{[0001|1d00]}{color[0400]}能破壞{color[ffff]}{[0001|ffff]}\n設定為{[0001|1d00]}{color[0400]}關閉{color[ffff]}{[0001|ffff]}。
050	關閉設定畫面……
051	去遊戲畫面確認一下吧！
052	做得好！\n現在物件不會掉下去了～
052000	人也不會一下子就掉下去！
053	……話雖如此，\n這個平面實在有點太小了……
054	回到程式設計畫面吧～\n這次我們來更改物件的{[0001|1d00]}{color[0400]}大小{color[ffff]}{[0001|ffff]}。
055	選擇{[0001|1d00]}{color[0400]}物件小節點{color[ffff]}{[0001|ffff]}。
056	{[0001|1d00]}{color[0400]}按住{color[ffff]}{[0001|ffff]}這個按鍵{[0001|1d00]}{color[0400]}拖曳{color[ffff]}{[0001|ffff]}，\n把物件小節點調整到\n{[0001|1d00]}{color[0400]}與藍色框框相同的大小{color[ffff]}{[0001|ffff]}。
057	完美！
058	那麼，我們去遊戲畫面\n看看平面變成什麼樣子吧！
059	平面變大了呢～！
059-01	不用擔心人會輕易地掉下去了！
060	不過……\n這個{[0001|1d00]}{color[0400]}平面的顏色{color[ffff]}{[0001|ffff]}……\n好像有點太普通了……
060000	乾脆把顏色也換掉吧！
061	請回到程式設計畫面～
062	選擇物件小節點。
063	打開設定畫面。
064	然後選擇{[0001|1d00]}{color[0400]}顏色{color[ffff]}{[0001|ffff]}。
065	在這個畫面裡，\n你可以選擇物件的顏色。
066	試著換成{[0001|1d00]}{color[0400]}棕色{color[ffff]}{[0001|ffff]}吧。
068	關閉設定畫面……
069	來吧！\n到遊戲畫面確認看看！
070	平面變成棕色了～
071	真漂亮！
072	我們順利完成平面了……
073	不過，這個平面是有邊緣的。\n人只要超出邊緣就會掉下去……
074	為了讓人完全不會掉下去，\n這次我們就來製作{[0001|1d00]}{color[0400]}牆壁{color[ffff]}{[0001|ffff]}吧。
075	回到程式設計畫面～
076	那麼……和製作平面時一樣，\n牆壁也需要用到物件小節點……
077	不過，重複叫出相同的小節點、\n做相同的設定……不覺得很麻煩嗎～～？
078	所以……這次我們就用\n{[0001|1d00]}{color[0400]}複製{color[ffff]}{[0001|ffff]}平面的方式製作牆壁吧。
079	選擇這個物件小節點。
080	按下這個按鍵來{[0001|1d00]}{color[0400]}複製{color[ffff]}{[0001|ffff]}！
080000	……嗨。\n我會變成牆壁。
081	複製出一個新的物件小節點了！
082	先把這個物件小節點\n移動到藍色框框裡。
083	然後把物件小節點\n調整為{[0001|1d00]}{color[0400]}長條形{color[ffff]}{[0001|ffff]}。
084	接著，複製這個物件小節點……
085	把他移動到右方的邊緣！
086	好了！\n這樣就完成{[0001|1d00]}{color[0400]}牆壁{color[ffff]}{[0001|ffff]}了。
087	到遊戲畫面看看吧～
088	畫面中出現了棕色的牆壁呢～
089	這樣就不用擔心人會掉下去了！\n終於可以放心囉！
090	那麼，回到程式設計畫面吧。
091	那麼～～～這樣就～～～～
092	完成第2步驟了！！
093a	恭喜你喔～～
093b	……做得好。
093c	……可喜可賀。
093d	……很厲害嘛。
094	這次我們製作了平面和牆壁……
094-01	而在下個步驟中，\n我們會製作許多{[0001|1d00]}{color[0400]}立足處{color[ffff]}{[0001|ffff]}\n來完成整個遊戲場地！
095	那麼，我們在第3步驟再見囉～
Lesson_Chase_02.msbt
000	等你很久了！
001	來吧！\n這次我們也要繼續\n設計捉迷藏遊戲喔～～
002	我們上次製作了平面和牆壁呢！
003	請試著用{[0001|1d00]}{color[0400]}操控搖桿{color[ffff]}{[0001|ffff]}\n和{[0001|1d00]}{color[0400]}鍵{color[ffff]}{[0001|ffff]}讓人動起來～
005	在這次……也就是第3步驟中，\n我們要在這裡製作捉迷藏的場地！
006	不過……這裡好像太狹窄了，\n不太適合玩捉迷藏呢。
006000	雖然我們也能調整平面和牆壁的位置，\n讓場地變得廣闊一點……
007	但這次我們就{[0001|1d00]}{color[0400]}把人縮小{color[ffff]}{[0001|ffff]}，\n讓{[0001|1d00]}{color[0400]}場地變得相對廣闊{color[ffff]}{[0001|ffff]}吧！
008	前往程式設計畫面！
009	選擇人小節點……
010	把他調整成藍色框框的大小～
011	人小節點變小了！
012	這樣的話……\n在遊戲畫面的人……會變成怎樣呢？
013	人變小了！
014	這樣就能在廣闊的場地上自由奔跑了呢～
015	準備完成！\n接下來開始製作場地吧！
015000	請回去程式設計畫面。
015-01	那麼……\n我們用一些{color[0400]}{[0001|1d00]}立足處{[0001|ffff]}{color[ffff]}\n在這裡製作場地吧！
016	首先選擇平面的物件小節點……
017	複製他吧。
018	把這個物件小節點\n調整成藍色框框的大小。
019	然後，把他放到\n藍色框框的位置。
019-01	……嗨。\n我是立足處，\n請你站上來。
020	來，我們去遊戲畫面確認一下吧！
021	正中央多了一個{[0001|1d00]}{color[0400]}立足處{color[ffff]}{[0001|ffff]}呢。
022	我們就用這種方式\n繼續製作立足處吧～！
023	回去程式設計畫面～
024	接下來試著製作\n{[0001|1d00]}{color[0400]}傾斜的立足處{color[ffff]}{[0001|ffff]}吧！
024000	首先，選擇這個物件小節點……
025	複製！
026	把複製出來的物件小節點\n放到藍色框框的位置。
027	然後，把他縮小一點。
028	接下來！\n{[0001|1d00]}{color[0400]}轉動{color[ffff]}{[0001|ffff]}這個物件小節點，\n讓他{[0001|1d00]}{color[0400]}傾斜{color[ffff]}{[0001|ffff]}。
029	按住這個按鍵來旋轉，\n把小節點調整到藍色框框的位置。
030	……嗨。\n我是傾斜的。
031	在相反方向也製作\n一樣的立足處吧。
031000	選擇這個物件小節點。
032	複製他！
033	把他放到左邊。
033000	接著，把他縮小一點。
034	像剛才一樣，\n按住按鍵轉動他吧～～
035	完美！
036	來，我們去確認一下\n會變成什麼樣子吧～
037	{[0001|1d00]}{color[0400]}傾斜的立足處{color[ffff]}{[0001|ffff]}完成了～！
038	太厲害了！
039	好，那我們接著來\n製作更多立足處吧～
040	接下來要在平面上製作{[0001|1d00]}{color[0400]}斜坡{color[ffff]}{[0001|ffff]}。
040000	選擇這個物件小節點。
041	複製他。
042	把他放到右下方……
043	轉動他～
044	OK！！
044000	再次選擇物件小節點……
045	複製！
046	把他放到左下方……
047	轉轉～～～
048	完美！！
049	好～我們去確認一下吧～
050	現在場地上多了斜坡，\n讓捉迷藏變得更有趣了！
051	我們再增加一些立足處，\n讓這個場地變得更好玩吧～
051000	選擇正中間的物件小節點……
052	跟之前一樣複製！
053	把他放到上方。
054	把這個立足處縮小一點吧。
055	在左右兩側也加上相同的立足處吧！
056	複製物件小節點～
057	把他放到右方。
058	再複製！
059	放到左方～
060	好了！\n這樣就製作好所有立足處了！
061	我們去遊戲畫面確認吧！
062	哇～！\n變成了一個\n很棒的場地呢！
063	請試著用{[0001|1d00]}{color[0400]}操控搖桿{color[ffff]}{[0001|ffff]}\n和{[0001|1d00]}{color[0400]}鍵{color[ffff]}{[0001|ffff]}讓人動起來，\n在場地上隨意奔跑看看～
064	這裡將會上演……\n精彩刺激的捉迷藏大戰！
065	真是令人期待！
066	如果你覺得確認清楚了，\n就回去程式設計畫面吧。
067	好了～～～這樣就～～～
068	完成第3步驟了！
069a	……恭喜你。
069b	……場地完成了。
069c	……嗯。
069-01	這次我們在遊戲中\n加入了許多立足處，\n製作出捉迷藏的場地！
070	而捉迷藏遊戲的設計……\n也終於要進入後半段囉！
071	在下個步驟中，\n我們會製作鬼，\n讓遊戲可以{[0001|1d00]}{color[0400]}二人對戰{color[ffff]}{[0001|ffff]}～
072	那麼，我們在下個步驟再見吧～！
Lesson_Chase_03.msbt
000	你回來了！
001	捉迷藏遊戲的設計\n也終於進入後半段了！
002	這次我們要來製作{[0001|1d00]}{color[0400]}鬼{color[ffff]}{[0001|ffff]}，\n讓遊戲可以{[0001|1d00]}{color[0400]}二人對戰{color[ffff]}{[0001|ffff]}～
003	我們上次製作了\n捉迷藏的場地呢！
004	用{[0001|1d00]}{color[0400]}操控搖桿{color[ffff]}{[0001|ffff]}和{[0001|1d00]}{color[0400]}鍵{color[ffff]}{[0001|ffff]}\n讓人動起來，\n在場地上到處走走吧！
006	{[0001|1d00]}{color[0400]}鬼{color[ffff]}{[0001|ffff]}和{[0001|1d00]}{color[0400]}逃跑的人{color[ffff]}{[0001|ffff]}將會\n在這個場地上展開\n精彩刺激的追逐呢。
007	來！我們去程式設計畫面\n把{[0001|1d00]}{color[0400]}鬼{color[ffff]}{[0001|ffff]}製作出來吧～
008	不過……在製作鬼之前，\n我們要先更改{[0001|1d00]}{color[0400]}人{color[ffff]}{[0001|ffff]}的位置。
009	把這個人小節點\n移動到{[0001|1d00]}{color[0400]}右邊的立足處上{color[ffff]}{[0001|ffff]}吧。
010	接著，為了方便我們設計程式，\n把和人小節點連接的小節點們\n也移動到右邊吧。
011	首先移動{[0001|1d00]}{color[0400]}操控搖桿小節點{color[ffff]}{[0001|ffff]}。
012	接著移動{[0001|1d00]}{color[0400]}按鍵小節點{color[ffff]}{[0001|ffff]}！
013	OK！
014	來，我們去遊戲畫面\n確認一下吧！
015	人的位置從正中間\n移動到右邊了～！
015000	這樣就完成準備了！
016	終於要開始製作{[0001|1d00]}{color[0400]}鬼{color[ffff]}{[0001|ffff]}囉～\n回到程式設計畫面吧。\n
016-01	這邊我們同樣使用\n{[0001|1d00]}{color[0400]}人小節點{color[ffff]}{[0001|ffff]}來製作{[0001|1d00]}{color[0400]}鬼{color[ffff]}{[0001|ffff]}！
017	選擇這個人小節點……
018	複製他！
019	嗨！
020	你又需要我的幫忙了呢！
021	呵呵呵……\n交給我吧！
022	請把這個人小節點\n放到左邊的立足處。
023	好了！\n我們去遊戲畫面確認一下，\n看看會變成怎樣吧！
024	現在有2個人在場地上呢～
025	請試著用{[0001|1d00]}{color[0400]}操控搖桿{color[ffff]}{[0001|ffff]}\n和{[0001|1d00]}{color[0400]}鍵{color[ffff]}{[0001|ffff]}讓人動起來～
026	咦……？\n左邊的人不會動呢……
027	沒錯！\n這是因為我們還沒有設計\n用來操控第2個人的{[0001|1d00]}{color[0400]}程式{color[ffff]}{[0001|ffff]}！
028	回到程式設計畫面，\n開始設計程式吧～
029	那麼……請你先動動腦筋，\n想想該如何操控這2個人。
029-01	畢竟這是一款\n二人對戰遊戲……
030	所以必須讓兩個玩家可以\n同時分別操控不同人才行。
030-01	至於要如何做到這點呢……？\n只要讓左右兩邊的控制器能\n分別操控不同的人就可以囉！
031	我們讓{[0001|1d00]}{color[0400]}鬼{color[ffff]}{[0001|ffff]}……也就是{[0001|1d00]}{color[0400]}左邊的人{color[ffff]}{[0001|ffff]}可以\n{[0001|1d00]}{color[0400]}透過操控搖桿來移動{color[ffff]}{[0001|ffff]}、{[0001|1d00]}{color[0400]}鍵來跳躍{color[ffff]}{[0001|ffff]}。
032	而讓{[0001|1d00]}{color[0400]}逃跑的人{color[ffff]}{[0001|ffff]}……也就是{[0001|1d00]}{color[0400]}右邊的人{color[ffff]}{[0001|ffff]}可以\n{[0001|1d00]}{color[0400]}透過操控搖桿來移動{color[ffff]}{[0001|ffff]}、{[0001|1d00]}{color[0400]}鍵來跳躍{color[ffff]}{[0001|ffff]}。
033	既然決定好了，\n那我們馬上來設計{[0001|1d00]}{color[0400]}鬼的操作{color[ffff]}{[0001|ffff]}吧。
034	請叫出{[0001|1d00]}{color[0400]}操控搖桿小節點{color[ffff]}{[0001|ffff]}～
035	選擇{[0001|1d00]}{color[0400]}輸入{color[ffff]}{[0001|ffff]}。
036	{[0001|1d00]}{color[0400]}推動操控搖桿{color[ffff]}{[0001|ffff]}。
037	{[0001|1d00]}{color[0400]}L操控搖桿{color[ffff]}{[0001|ffff]}。
038	選擇{[0001|1d00]}{color[0400]}左右{color[ffff]}{[0001|ffff]}！
039	你好～
040	你想多轉轉操控搖桿了嗎～？
041	把這個操控搖桿小節點\n放到左邊……
042	然後把他連接到\n{[0001|1d00]}{color[0400]}人小節點的左右端口{color[ffff]}{[0001|ffff]}。
043	這邊也拜託你囉！
044	轉轉～～
045	再叫出一個{[0001|1d00]}{color[0400]}按鍵小節點{color[ffff]}{[0001|ffff]}吧。
046	選擇{[0001|1d00]}{color[0400]}輸入{color[ffff]}{[0001|ffff]}。
047	{[0001|1d00]}{color[0400]}按下按鍵{color[ffff]}{[0001|ffff]}。
048	選擇{[0001|1d00]}{color[0400]}{color[ffff]}{[0001|ffff]}！
049	嗨！
050	你想狂按鍵對吧！！\n我按～～～！
052	把按鍵小節點\n也放到左邊……
053	把他連接到\n{[0001|1d00]}{color[0400]}人小節點的跳躍端口{color[ffff]}{[0001|ffff]}吧！
054	好了！\n這樣鬼的操作就沒問題了！
055	接下來要更改\n{[0001|1d00]}{color[0400]}逃跑的人{color[ffff]}{[0001|ffff]}的操作。
055000	我們來修改一下程式，\n讓玩家能用{[0001|1d00]}{color[0400]}操控搖桿\n{color[ffff]}{[0001|ffff]}和{[0001|1d00]}{color[0400]}鍵{color[ffff]}{[0001|ffff]}操控人的動作吧！
056	選擇{[0001|1d00]}{color[0400]}操控搖桿小節點{color[ffff]}{[0001|ffff]}……
057	打開設定畫面！
058	請把{[0001|1d00]}{color[0400]}是哪個操控搖桿？{color[ffff]}{[0001|ffff]}\n設定為{[0001|1d00]}{color[0400]}R操控搖桿{color[ffff]}{[0001|ffff]}！
059	這樣玩家就能不再透過\n操控搖桿，而是透過\n{[0001|1d00]}{color[0400]}操控搖桿{color[ffff]}{[0001|ffff]}來操控人了！
060	關閉設定畫面……
061	選擇{[0001|1d00]}{color[0400]}按鍵小節點{color[ffff]}{[0001|ffff]}！
062	打開設定畫面……
063	把這個{[0001|1d00]}{color[0400]}{color[ffff]}{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}關閉{color[ffff]}{[0001|ffff]}……
064	接著把{[0001|1d00]}{color[0400]}{color[ffff]}{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}開啟{color[ffff]}{[0001|ffff]}吧！
065	這樣就能{[0001|1d00]}{color[0400]}用鍵來跳躍{color[ffff]}{[0001|ffff]}了！
066	關閉設定畫面……
067	來！確認的時間到囉！\n我們到遊戲畫面去吧～
068	首先來確認{[0001|1d00]}{color[0400]}鬼{color[ffff]}{[0001|ffff]}的操作吧。
069	請試著用{[0001|1d00]}{color[0400]}操控搖桿{color[ffff]}{[0001|ffff]}\n和{[0001|1d00]}{color[0400]}鍵{color[ffff]}{[0001|ffff]}讓鬼動起來。
070	完美！
071	接下來是{[0001|1d00]}{color[0400]}逃跑的人{color[ffff]}{[0001|ffff]}。
072	請試著用{[0001|1d00]}{color[0400]}操控搖桿{color[ffff]}{[0001|ffff]}\n和{[0001|1d00]}{color[0400]}鍵{color[ffff]}{[0001|ffff]}讓人動起來！
073	太厲害了～～～！
074	這樣就能分別\n操控2個人了！
075	可是……\n現在兩個人長得一模一樣，\n玩家根本分不清誰是誰呢～
076	我們先回到程式設計畫面，\n讓他們的外觀有些{[0001|1d00]}{color[0400]}差別{color[ffff]}{[0001|ffff]}吧～
077	選擇當{[0001|1d00]}{color[0400]}鬼{color[ffff]}{[0001|ffff]}的人小節點……
078	打開設定畫面。
079	選擇{[0001|1d00]}{color[0400]}顏色{color[ffff]}{[0001|ffff]}！
080	把鬼的顏色設定為{[0001|1d00]}{color[0400]}紅色{color[ffff]}{[0001|ffff]}吧～
081	關閉設定畫面……
082	接著選擇當{[0001|1d00]}{color[0400]}逃跑的人{color[ffff]}{[0001|ffff]}的人小節點！
083	打開設定畫面～
084	選擇{[0001|1d00]}{color[0400]}顏色{color[ffff]}{[0001|ffff]}！
085	把逃跑的人設定為{[0001|1d00]}{color[0400]}水藍色{color[ffff]}{[0001|ffff]}吧～
086	關閉設定畫面！
087	好了！\n我們去遊戲畫面看看吧！
088	哦～～！\n人的顏色變了～！
089	這樣就能清楚地\n知道誰是鬼了！
089000	接下來……既然這是「捉迷藏」，\n那麼當{[0001|1d00]}{color[0400]}鬼抓到{color[ffff]}{[0001|ffff]}逃跑的人時，\n應該要發生些事情才對吧！
090	請試著用{[0001|1d00]}{color[0400]}操控搖桿{color[ffff]}{[0001|ffff]}和{[0001|1d00]}{color[0400]}鍵{color[ffff]}{[0001|ffff]}\n操控鬼去{[0001|1d00]}{color[0400]}接觸逃跑的人{color[ffff]}{[0001|ffff]}看看！
091	嗯……\n什麼事都沒發生呢。
092	沒錯！我們需要{[0001|1d00]}{color[0400]}設計程式{color[ffff]}{[0001|ffff]}，\n才能讓他們互相產生反應。
093	所以……我們來設計一個程式，\n讓鬼接觸到人時可以{[0001|1d00]}{color[0400]}破壞{color[ffff]}{[0001|ffff]}人吧！
094	前往程式設計畫面！
095	選擇當{[0001|1d00]}{color[0400]}鬼{color[ffff]}{[0001|ffff]}的人小節點……
096	打開設定畫面！
097	然後，把{[0001|1d00]}{color[0400]}狀態{color[ffff]}{[0001|ffff]}的{[0001|1d00]}{color[0400]}能破壞{color[ffff]}{[0001|ffff]}\n設定為開啟！
098	關閉設定畫面～
099	接著選擇當{[0001|1d00]}{color[0400]}逃跑的人{color[ffff]}{[0001|ffff]}的人小節點。
100	打開設定畫面。
101	這邊把{[0001|1d00]}{color[0400]}狀態{color[ffff]}{[0001|ffff]}的{[0001|1d00]}{color[0400]}會損壞{color[ffff]}{[0001|ffff]}\n設定為開啟吧。
102	關閉設定畫面。
103	這麼一來……\n當{[0001|1d00]}{color[0400]}鬼{color[ffff]}{[0001|ffff]}接觸到人時，\n就{[0001|1d00]}{color[0400]}能夠破壞人{color[ffff]}{[0001|ffff]}了！
104	我們馬上去遊戲畫面\n測試一下吧！
105	請試著用{[0001|1d00]}{color[0400]}操控搖桿{color[ffff]}{[0001|ffff]}和{[0001|1d00]}{color[0400]}鍵{color[ffff]}{[0001|ffff]}\n操控{[0001|1d00]}{color[0400]}鬼{color[ffff]}{[0001|ffff]}去接觸{[0001|1d00]}{color[0400]}逃跑的人{color[ffff]}{[0001|ffff]}看看！
106	做得好！\n現在{[0001|1d00]}{color[0400]}鬼能夠破壞人{color[ffff]}{[0001|ffff]}了～
106-01	{[0001|1d00]}{color[0400]}當人損壞時{color[ffff]}{[0001|ffff]}，\n表示鬼成功抓到了人……\n所以是{[0001|1d00]}{color[0400]}鬼贏了{color[ffff]}{[0001|ffff]}！
107	這樣就能兩個人\n一起玩捉迷藏了～～！
108	人損壞後如果想重玩一遍，\n只要按下{[0001|1d00]}{color[0400]}重來鍵{color[ffff]}{[0001|ffff]}就可以囉。
108-01	這樣就可以\n從頭開始遊戲！
109	如果你覺得確認清楚了，\n就回去程式設計畫面吧～
110	好……這樣就～～～～
111	完成第4步驟了！
112a	恭喜～
112b	耶～！
112c	轉轉～
112d	恭喜你！
113	這次我們製作了鬼，\n讓遊戲可以二人對戰～！
113-01	這個捉迷藏遊戲也\n越來越完整了呢～！
113-02	不過……目前的設計\n對鬼好像太有利了……\n感覺有點不公平呢。
114	在下個步驟中，\n我們就設計{[0001|1d00]}{color[0400]}更多機關{color[ffff]}{[0001|ffff]}\n來平衡一下吧～～！
115	那麼……\n在下個步驟再見囉～
Lesson_Chase_04.msbt
000	歡迎你！
001	那麼……第1課也\n終於來到後半段了！
002	我們先來複習一下上次的內容吧。
003	你可以用{[0001|1d00]}{color[0400]}操控搖桿{color[ffff]}{[0001|ffff]}\n和{[0001|1d00]}{color[0400]}鍵{color[ffff]}{[0001|ffff]}來操控{[0001|1d00]}{color[0400]}逃跑的人{color[ffff]}{[0001|ffff]}。
004	也可以用{[0001|1d00]}{color[0400]}操控搖桿{color[ffff]}{[0001|ffff]}\n和{[0001|1d00]}{color[0400]}鍵{color[ffff]}{[0001|ffff]}來操控{[0001|1d00]}{color[0400]}鬼{color[ffff]}{[0001|ffff]}。
005	請操控{[0001|1d00]}{color[0400]}鬼去接觸人{color[ffff]}{[0001|ffff]}。
006	沒錯！我們上次就是設計了\n當鬼接觸到人時能夠破壞人的程式！
007	雖然這個捉迷藏遊戲\n已經能夠正常遊玩了……
008	不過……\n鬼也太強了吧？
009	鬼不會輸的話，\n這樣也太不公平了。
010	所以……我們就來設計\n{[0001|1d00]}{color[0400]}能夠破壞鬼和人的球體{color[ffff]}{[0001|ffff]}，\n並讓他在場地上滾動吧。
010-01	這樣肯定能讓捉迷藏\n變得更刺激、更有趣！
011	來吧！\n到程式設計畫面設計程式囉～
012	為了讓球體滾動……
013	我們得叫出{[0001|1d00]}{color[0400]}發射物件小節點{color[ffff]}{[0001|ffff]}！
014	選擇{[0001|1d00]}{color[0400]}物件{color[ffff]}{[0001|ffff]}。
015	{[0001|1d00]}{color[0400]}放出、消除、引力{color[ffff]}{[0001|ffff]}。
016	{[0001|1d00]}{color[0400]}發射物件{color[ffff]}{[0001|ffff]}。
017	最後選擇{[0001|1d00]}{color[0400]}10個{color[ffff]}{[0001|ffff]}。
018	啥？\n想幹嘛啊你～？
019	找我有啥事啊！！？
020	……什麼～～？\n你說想讓我幫忙設計遊戲……？
021	什麼嘛～～\n原來你是遊戲程式設計師啊～～！\n幹嘛不早點說！！
022	我當然會幫你啦！\n想要我幫什麼忙？儘管開口！
023	{[0001|1d00]}{color[0400]}發射物件小節點{color[ffff]}{[0001|ffff]}\n其實人挺好的喔。
025	那麼我們就恭敬不如從命，\n把{[0001|1d00]}{color[0400]}發射物件小節點{color[ffff]}{[0001|ffff]}放到上方吧。
026	先到遊戲畫面確認一下～
027	啊！\n有東西正在發射球體！
028	這就是{[0001|1d00]}{color[0400]}發射物件小節點{color[ffff]}{[0001|ffff]}的能力！
add000	不過……\n球體好像有點太大了呢。
add001	我們去程式設計畫面\n調整一下他的大小吧！
add002	選擇{[0001|1d00]}{color[0400]}發射物件小節點{color[ffff]}{[0001|ffff]}……
add003	把他縮小到藍色框框的大小。
add004	OK！
add005	來，我們去看看\n會變成怎麼樣吧！
add006	哦～！\n球體變小了！
029	不過……\n我們希望球體能在場地上\n滾動得更流暢一點～
030	在人的上方設置一個{[0001|1d00]}{color[0400]}屋頂{color[ffff]}{[0001|ffff]}，\n讓球體可以流暢地滾動吧！
031	來，到程式設計畫面去！
032	首先，選擇這個{[0001|1d00]}{color[0400]}物件小節點{color[ffff]}{[0001|ffff]}……
033	複製！
034	把複製出來的物件小節點\n放到右上方。
035	然後轉動他！
036	完美！
037	順便也製作一個\n在左邊的屋頂吧～
038	再次選擇{[0001|1d00]}{color[0400]}物件小節點{color[ffff]}{[0001|ffff]}……
039	複製！
040	把他放到左上方～
041	然後～轉動他！
042	完美！
043	好！\n我們去遊戲畫面確認一下吧！
044	人的頭頂上多了個屋頂～！
053	不過……\n球體的發射{[0001|1d00]}{color[0400]}力道{color[ffff]}{[0001|ffff]}太強了，\n讓他無法流暢地滾動呢。
054	我們到程式設計畫面\n調整一下發射力道吧！
055	選擇{[0001|1d00]}{color[0400]}發射物件小節點{color[ffff]}{[0001|ffff]}……
056	打開設定畫面。
057	接著把這個{[0001|1d00]}{color[0400]}發射速度{color[ffff]}{[0001|ffff]}\n設定為{[0001|1d00]}{color[0400]}4.00{color[ffff]}{[0001|ffff]}。
058	關閉設定畫面。
059	好！\n來確認一下吧～～！
060	嗯……雖然感覺\n力道剛剛好……
061	但發射出來的球體一下子\n就被後來的球體撞碎了呢。
061000	我們得想個辦法延長\n球體的{[0001|1d00]}{color[0400]}發射間距{color[ffff]}{[0001|ffff]}才行。
062	回程式設計畫面修改一下吧！
063	選擇{[0001|1d00]}{color[0400]}發射物件小節點{color[ffff]}{[0001|ffff]}！
064	打開設定畫面！
065	這次請把{[0001|1d00]}{color[0400]}發射間距（秒）{color[ffff]}{[0001|ffff]}\n設定為{[0001|1d00]}{color[0400]}7.00{color[ffff]}{[0001|ffff]}。
065-01	這樣先後發射兩顆球體的\n時間{[0001|1d00]}{color[0400]}間距{color[ffff]}{[0001|ffff]}就會變成{[0001|1d00]}{color[0400]}7秒{color[ffff]}{[0001|ffff]}了！
066	關閉設定畫面！
067	來確認一下吧！
067000	由於我們{[0001|1d00]}{color[0400]}延長了發射間距{color[ffff]}{[0001|ffff]}……\n球體需要一些時間才會發射。
067001	請稍等一下……
068	啊！發射出來了！
068000	球體的滾動方式\n也是恰到好處呢～！
069	既然右邊都設計成功了，\n不如讓左邊也發射球體吧！
070	來吧，\n到程式設計畫面設計囉！
071	選擇{[0001|1d00]}{color[0400]}發射物件小節點{color[ffff]}{[0001|ffff]}……
072	複製他！
073	哦！？幹嘛？\n你……\n就這麼信任我嗎～～？
074	好！！！\n就包在我身上吧！！！
075	把這個{[0001|1d00]}{color[0400]}發射物件小節點{color[ffff]}{[0001|ffff]}\n放到左邊。
075-01	接著～！\n我們來設定讓球體向{[0001|1d00]}{color[0400]}左{color[ffff]}{[0001|ffff]}發射。
076	打開設定畫面！
077	選擇{[0001|1d00]}{color[0400]}發射方向{color[ffff]}{[0001|ffff]}的按鍵！
078	請選擇{[0001|1d00]}{color[0400]}X-{color[ffff]}{[0001|ffff]}～
079	關閉設定畫面。
080	好了！\n遊戲畫面會變成怎樣呢！？
080000	嗯……\n請稍等一下喔。
081	現在球體會向\n左右兩方發射了～！
082	這樣場上就會到處滾動著\n{[0001|1d00]}{color[0400]}接觸到就會損壞的球體{color[ffff]}{[0001|ffff]}了！
083	可是……\n目前的設計還有一點問題。
084	請試著用{[0001|1d00]}{color[0400]}操控搖桿{color[ffff]}{[0001|ffff]}和{[0001|1d00]}{color[0400]}鍵{color[ffff]}{[0001|ffff]}\n操控{[0001|1d00]}{color[0400]}鬼{color[ffff]}{[0001|ffff]}來{[0001|1d00]}{color[0400]}接觸球體{color[ffff]}{[0001|ffff]}看看。
085	鬼即使接觸到球體\n也{[0001|1d00]}{color[0400]}不會損壞{color[ffff]}{[0001|ffff]}！
086	我們來修改一下程式，\n讓{[0001|1d00]}{color[0400]}鬼{color[ffff]}{[0001|ffff]}接觸到球體時也{[0001|1d00]}{color[0400]}會損壞{color[ffff]}{[0001|ffff]}吧。
087	選擇當鬼的人小節點……
088	打開設定畫面！
089	然後，把{[0001|1d00]}狀態{[0001|ffff]}的\n{[0001|1d00]}{color[0400]}會損壞{color[ffff]}{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}開啟{color[ffff]}{[0001|ffff]}！
090	關閉設定畫面～
091	來！\n到遊戲畫面確認一下！
092	請試著操控鬼去接觸球體！
093	現在當鬼接觸到球體時\n也會損壞了～！
093-01	追逐的鬼和逃跑的人……\n在「你追我跑」的同時，\n還得躲開四處滾動的危險球體！
093-02	遊戲變得很有刺激感呢～！
102	如果你覺得確認清楚了，\n就回去程式設計畫面吧～
103	然後～～～\n這樣就～～～～！
104	完成第5步驟了！！
105a	喝～～！
105b	恭喜喔！
106	這次我們用{[0001|1d00]}{color[0400]}發射物件小節點{color[ffff]}{[0001|ffff]}\n製作出了捉迷藏遊戲的機關！
107	在下個步驟中，\n我們會設計一個程式，\n讓玩家可以重複遊玩捉迷藏遊戲！
108	那麼，\n我在下個步驟等你喔～！
Lesson_Chase_05.msbt
000	你來了呢！
000-01	這次終於到了\n捉迷藏遊戲的重頭戲！
000-02	首先……\n我們來複習一下上次的內容。
000-03	請稍等一下……
001	我們在上個步驟中製作了\n{[0001|1d00]}{color[0400]}接觸到就會損壞的危險球體{color[ffff]}{[0001|ffff]}，\n還讓他們在場上滾動呢！
006	雖然……\n現在遊戲已經可以說是完成了……
007	不過這次……\n我們要來設計一個程式，\n讓玩家擁有更好的遊戲體驗！
008	在目前的設計下～\n當鬼和人損壞後……
009	我們就得自己按下重來鍵，\n才能讓遊戲{[0001|1d00]}{color[0400]}重來{color[ffff]}{[0001|ffff]}再玩一遍。
010	這個動作……\n有一～點麻煩對吧～！
011	所以……我們就來設計一下程式，\n讓遊戲能在鬼或人損壞時{[0001|1d00]}{color[0400]}自動重來{color[ffff]}{[0001|ffff]}吧。
012	來！\n前往程式設計畫面吧～！
013	首先，我們叫出負責監測\n{[0001|1d00]}{color[0400]}人損壞了{color[ffff]}{[0001|ffff]}這件事的小節點。
014	他就是……\n{[0001|1d00]}{color[0400]}物件損壞時小節點{color[ffff]}{[0001|ffff]}。
015	選擇{[0001|1d00]}{color[0400]}輸入{color[ffff]}{[0001|ffff]}。
016	{[0001|1d00]}{color[0400]}遊戲內的變化{color[ffff]}{[0001|ffff]}。
017	最後選擇{[0001|1d00]}{color[0400]}物件損壞時{color[ffff]}{[0001|ffff]}！
017-01	嗨！\n找我有什麼事嗎！？
018	怎麼了？\n你們有事想問我嗎？
019	我們想知道人有沒有損壞！
020	原來如此，我明白了。
021	那只要打開我的設定，\n然後更改{[0001|1d00]}{color[0400]}要確認什麼？{color[ffff]}{[0001|ffff]}\n就行了喔。
022	那麼，我們打開\n{[0001|1d00]}{color[0400]}物件損壞時小節點{color[ffff]}{[0001|ffff]}的設定畫面吧～
023	接著打開這個\n{[0001|1d00]}{color[0400]}要確認什麼？{color[ffff]}{[0001|ffff]}。
024	在這個畫面中，\n你可以設定小節點要\n{[0001|1d00]}{color[0400]}確認什麼物件的損壞{color[ffff]}{[0001|ffff]}！
025	把{[0001|1d00]}{color[0400]}立方體{color[ffff]}{[0001|ffff]}、{[0001|1d00]}{color[0400]}圓柱體{color[ffff]}{[0001|ffff]}和{[0001|1d00]}{color[0400]}球體{color[ffff]}{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}關閉{color[ffff]}{[0001|ffff]}……
026	然後把{[0001|1d00]}{color[0400]}人{color[ffff]}{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}開啟{color[ffff]}{[0001|ffff]}！
027	關閉這個畫面……
028	接著關閉設定畫面！
029	嗯嗯。\n看來你設定好了呢。
030	這樣我就會確認\n{[0001|1d00]}{color[0400]}人損壞了{color[ffff]}{[0001|ffff]}這件事。
030-01	你就放心地繼續設計程式吧。
031	……那麼，\n把物件損壞時小節點放到左邊。
032	接下來，我們要叫出\n讓遊戲重來的小節點……
033	也就是{[0001|1d00]}{color[0400]}重來小節點{color[ffff]}{[0001|ffff]}！
034	選擇{[0001|1d00]}{color[0400]}輸出{color[ffff]}{[0001|ffff]}。
035	{[0001|1d00]}{color[0400]}重來、結束、切換{color[ffff]}{[0001|ffff]}。
036	最後選擇{[0001|1d00]}{color[0400]}重來遊戲{color[ffff]}{[0001|ffff]}。
036-01	呼……
037	唉……\n好想重來啊……
038	你怎麼了？
039	昨天我以為沒人在，\n就哼起歌來……
039-01	沒想到在不知不覺間，\n周圍聚集了很多小節點……\n我哼的歌被他們聽得一清二楚……
040	唉……\n好想重來……
042	……那麼，我們就把\n重來小節點放到右邊……
043	然後把{[0001|1d00]}{color[0400]}物件損壞時小節點{color[ffff]}{[0001|ffff]}\n和他連接在一起。
044	好！這樣{[0001|1d00]}{color[0400]}當人損壞時，\n就可以讓遊戲重來了{color[ffff]}{[0001|ffff]}！
045	我們去確認一下吧～～
046	請試著操控{[0001|1d00]}{color[0400]}鬼或人{color[ffff]}{[0001|ffff]}，\n{[0001|1d00]}{color[0400]}破壞掉{color[ffff]}{[0001|ffff]}他們其中一方～！
047	現在{[0001|1d00]}{color[0400]}當人損壞時{color[ffff]}{[0001|ffff]}，\n遊戲就會{[0001|1d00]}{color[0400]}自動重來{color[ffff]}{[0001|ffff]}了！
048	不過……\n損壞到重來的時間\n好像有點太短了呢……
049	我們希望能有點緩衝時間。
050	到程式設計畫面去吧～\n來設計一下{[0001|1d00]}{color[0400]}緩衝時間{color[ffff]}{[0001|ffff]}！
051	首先，選擇連接著\n{[0001|1d00]}{color[0400]}物件損壞時小節點{color[ffff]}{[0001|ffff]}和\n{[0001|1d00]}{color[0400]}重來小節點{color[ffff]}{[0001|ffff]}的{[0001|1d00]}{color[0400]}配對線{color[ffff]}{[0001|ffff]}。
052	接著，按下這個按鍵\n來{[0001|1d00]}{color[0400]}刪除配對線{color[ffff]}{[0001|ffff]}吧。
053	接下來～～\n我們叫出{[0001|1d00]}{color[0400]}計時器小節點{color[ffff]}{[0001|ffff]}！
054	選擇{[0001|1d00]}{color[0400]}中間{color[ffff]}{[0001|ffff]}。
055	然後選擇{[0001|1d00]}{color[0400]}計時器{color[ffff]}{[0001|ffff]}！
055-01	……唔？
056	怎麼了？\n找我有什麼事？
057	我們想請你幫忙\n設計遊戲程式！
058	唔……是這樣啊……
059	嗯……我是很願意幫忙啦……\n但你們沒預約就叫我出來，\n這樣會讓我很傷腦筋的啊。
060	我當然也很想幫你們，\n但要是我剛好安排了\n其他事情那該怎麼辦？
061	正是因為我想助你們一臂之力，\n我才會要求你們好好確認我的日程……
062	……非常抱歉。
063	沒事，明白就好。
064	那麼接下來～～～！
065	請把{[0001|1d00]}{color[0400]}物件損壞時小節點{color[ffff]}{[0001|ffff]}和\n{[0001|1d00]}{color[0400]}計時器小節點{color[ffff]}{[0001|ffff]}連接在一起～！
066	接著～\n把{[0001|1d00]}{color[0400]}計時器小節點{color[ffff]}{[0001|ffff]}和{[0001|1d00]}{color[0400]}重來小節點{color[ffff]}{[0001|ffff]}連接起來！
067	這樣從人損壞後{[0001|1d00]}{color[0400]}到重來前，\n就會有一小段緩衝時間了{color[ffff]}{[0001|ffff]}！
068	我們去遊戲畫面確認看看吧！
069	操控鬼或人，\n讓其中一方被破壞吧～！
070	損壞後，遊戲會先等待\n{[0001|1d00]}{color[0400]}一小段緩衝時間{color[ffff]}{[0001|ffff]}再重來～
070-01	這時間不長不短剛剛好！
071	如果你覺得確認清楚了，\n就回去程式設計畫面吧～
072	好了，\n這樣就～～～～
073	完成第6步驟了！！！
074a	恭喜你！
074b	做得好。
074c	……恭喜你～
075-01	好！下次終於就是\n捉迷藏遊戲的最後一步了！
076	在最後一個步驟裡，\n我會請{[0201]}\n把遊戲改造成自己的風格！
077	那麼……\n敬請期待這最後的步驟吧～！
Lesson_Chase_06.msbt
000	{[0201]}！\n這個時刻終於來臨了！
001	這次是捉迷藏遊戲的\n最後一個步驟。
002	我們先來複習一下目前為止的內容吧。
003	用{[0001|1d00]}{color[0400]}操控搖桿{color[ffff]}{[0001|ffff]}和{[0001|1d00]}{color[0400]}鍵{color[ffff]}{[0001|ffff]}可以操控{[0001|1d00]}{color[0400]}逃跑的人{color[ffff]}{[0001|ffff]}，\n用{[0001|1d00]}{color[0400]}操控搖桿{color[ffff]}{[0001|ffff]}和{[0001|1d00]}{color[0400]}鍵{color[ffff]}{[0001|ffff]}可以操控{[0001|1d00]}{color[0400]}鬼{color[ffff]}{[0001|ffff]}。
004	玩家只要接觸到場地上\n滾動的{color[0400]}{[0001|1d00]}球體{[0001|ffff]}{color[ffff]}就會出局！
005	那麼……\n這個捉迷藏遊戲\n已經差不多要完成了……
006	{[0201]}，\n最後就由你自己親手來\n為這個遊戲添加{[0001|1d00]}{color[0400]}色彩{color[ffff]}{[0001|ffff]}吧！
007	來！\n我們去程式設計畫面～
007-01	那麼～接下來……
008	{[0201]}，\n請你順著自己的靈感，\n自由地更改{[0001|1d00]}{color[0400]}場地的顏色{color[ffff]}{[0001|ffff]}吧！
010	譬如選擇這個{[0001|1d00]}{color[0400]}物件小節點{color[ffff]}{[0001|ffff]}。
011	打開設定畫面。
012	接著，\n打開{[0001|1d00]}{color[0400]}顏色{color[ffff]}{[0001|ffff]}……
013	在這裡可以更改物件的顏色喔！
014	現在物件被設定為{[0001|1d00]}{color[0400]}棕色{color[ffff]}{[0001|ffff]}……
015	試著把他更改為{[0001|1d00]}{color[0400]}黑色{color[ffff]}{[0001|ffff]}吧。
016	關閉設定畫面……
017	到遊戲畫面中確認一下吧！
018	你看！\n正中間的立足處變成{[0001|1d00]}{color[0400]}黑色{color[ffff]}{[0001|ffff]}了！
019	就像這樣……\n你可以{[0001|1d00]}{color[0400]}自由地更改{color[ffff]}{[0001|ffff]}場地的顏色！
020	我們先去程式設計畫面。
021	那麼，{[0201]}！\n接下來就是你的自由時間了！
022	現在{[0001|1d00]}{color[0400]}所有物件小節點的顏色\n{color[ffff]}{[0001|ffff]}都{[0001|1d00]}{color[0400]}可以自由地更改{color[ffff]}{[0001|ffff]}……
023	{[0201]}，\n請把他們更改成你喜歡的顏色吧！
023-01	另外，現在你也可以\n{[0001|1d00]}{color[0400]}移動程式設計畫面{color[ffff]}{[0001|ffff]}……
023-02	還能用這個按鍵\n{[0001|1d00]}{color[0400]}復原上一步操作{color[ffff]}{[0001|ffff]}！
024	當你覺得遊戲「完成了！」，\n記得先去遊戲畫面確認一下……
025	沒問題的話再回來\n按下{[0001|1d00]}{color[0400]}完成鍵{color[ffff]}{[0001|ffff]}吧。
026	那麼～～～
027	開始設計吧！！
027000	哦！\n你終於完成啦！
027001	那麼……\n就讓我來看看你設計的遊戲吧！
028	哇～～～！\n看起來很漂亮呢～～～！
028001	原來如此～\n你是刻意不做任何修改的吧……！
029	那麼～～～
030	我們的捉迷藏遊戲\n就大功告成囉！！
031	實在是太厲害了～～～！
032	來！\n我知道你一定興奮地想趕快告訴別人……\n不過我們還是先回程式設計畫面一趟吧。
098	沒想到你居然能跟著做到這一步……
099	{[0201]}……\n你果然有程式設計的才能呢！
100	那麼……\n把這個捉迷藏遊戲\n放進{[0001|1d00]}{color[0400]}遊戲一覽{color[ffff]}{[0001|ffff]}吧～！
101	我們先回去選單一趟～
Reset	……居然能做出遊戲，\n你真的很厲害呢～
Timer	嗯，以第一次做遊戲來說，\n算是做得相當不錯呢。
Break	你挺厲害的嘛！
Gen	哦哦～～\n你這傢伙～～～\n還真厲害啊！
Camera	{[0201]}，\n你好厲害喔～～～
Stick	轉轉～
Human	嗨！\n恭喜你完成遊戲了！
Button	嗨！看來你的技術\n又更上一層樓了呢！
Lesson_Intro.msbt
000	你好像很煩惱呢！
001	啊，\n請別緊張！
002	我叫作{[0001|1d00]}{color[0400]}鮑伯{color[ffff]}{[0001|ffff]}。
003	{[0201]}，\n你在煩惱為什麼\n遊戲無法過關對吧？
004	按下了鍵卻無法跳躍，\n根本沒辦法到蘋果那裡……
005	其實……\n這個遊戲……
006	還沒有完成！！
007	照這個樣子，\n就算花上一輩子也無法過關！！
008	……啊！\n請別生氣！
009	只要進入遊戲的{[0001|1d00]}{color[0400]}後台{color[ffff]}{[0001|ffff]}，\n馬上就能完成這個遊戲囉！
010	事不宜遲，\n我們快去遊戲的後台吧～
011	請按下這個按鍵。
012	咦～？\n這不是鮑伯博士嗎～？！\n早安！
013	……嗨。
014	轉轉～\n鮑伯博士來了～
015	{[0201]}！\n歡迎來到遊戲的後台！
016	……啊！\n你很好奇他們是什麼……對吧？
017	他們是被稱作{[0001|1d00]}{color[0400]}小節點{color[ffff]}{[0001|ffff]}的生物！
018	Nintendo Switch裡\n住著各式各樣的{color[0400]}{[0001|1d00]}小節點{[0001|ffff]}{color[ffff]}。
019	只要把小節點們叫到\n這個{[0001|1d00]}{color[0400]}程式設計畫面{color[ffff]}{[0001|ffff]}裡，\n讓他們彼此連接起來……
020	就能{[0001|1d00]}{color[0400]}設計出遊戲程式{color[ffff]}{[0001|ffff]}喔！
021	而使用這些小節點的\n{[0001|1d00]}{color[0400]}程式設計{color[ffff]}{[0001|ffff]}系統就叫做……
022	{[0001|1d00]}{color[0400]}小節點車庫！{color[ffff]}{[0001|ffff]}
024	剛才那個還沒完成的遊戲，\n也是在小節點車庫{[0001|1d00]}{color[0400]}設計{color[ffff]}{[0001|ffff]}出來的喔！
025	來！\n快用小節點車庫把遊戲完成吧！
026	……咦？\n你為什麼露出一臉呆滯的表情？
027	我的意思是……\n由{[0201]}親手{[0001|1d00]}{color[0400]}設計程式{color[ffff]}{[0001|ffff]}，\n完成這款遊戲喔！
028	不用擔心！\n你只要{[0001|1d00]}{color[0400]}讓人能在按下\n鍵時跳躍{color[ffff]}{[0001|ffff]}就可以了！
029	把這個{[0001|1d00]}{color[0400]}按鍵小節點{color[ffff]}{[0001|ffff]}的\n{[0001|1d00]}{color[0400]}輸出端{color[ffff]}{[0001|ffff]}……
030	和{[0001|1d00]}{color[0400]}人小節點{color[ffff]}{[0001|ffff]}的{[0001|1d00]}{color[0400]}跳躍端口{color[ffff]}{[0001|ffff]}\n連接起來就完成囉。
030000	嗨！\n我是{[0001|1d00]}{color[0400]}按鍵小節點{color[ffff]}{[0001|ffff]}！
030000-01	你按下按鍵的動作……\n可逃不過我的法眼喲！\n我按～～～！
030001	我是{color[0400]}{[0001|1d00]}人小節點{[0001|ffff]}{color[ffff]}～\n請多指教！
030002	遊戲畫面上有一個人對吧？\n是我讓他出現跟移動的喔！
031_t	來！請跟著我的動作……\n{color[0400]}{[0001|1d00]}點觸{[0001|ffff]}{color[ffff]}畫面{color[0400]}{[0001|1d00]}不放{[0001|ffff]}{color[ffff]}，\n{[0001|1d00]}{color[0400]}拉出配對線來連接{color[ffff]}{[0001|ffff]}！
031_s	來！請跟著我{color[0400]}{[0001|1d00]}按住鍵不放\n並用操控搖桿移動游標{[0001|ffff]}{color[ffff]}，\n{[0001|1d00]}{color[0400]}把配對線連接起來{color[ffff]}{[0001|ffff]}！
031_jr	來！請跟著我{color[0400]}{[0001|1d00]}按住鍵不放\n並傾斜Joy-Con(R)移動游標{[0001|ffff]}{color[ffff]}，\n{[0001|1d00]}{color[0400]}把配對線連接起來{color[ffff]}{[0001|ffff]}！
031_jl	來！請跟著我{color[0400]}{[0001|1d00]}按住鍵不放\n並傾斜Joy-Con(L)移動游標{[0001|ffff]}{color[ffff]}，\n{[0001|1d00]}{color[0400]}把配對線連接起來{color[ffff]}{[0001|ffff]}！
031_m	來！請跟著我的動作……\n{color[0400]}{[0001|1d00]}點擊左鍵不放並移動滑鼠{[0001|ffff]}{color[ffff]}，\n{[0001|1d00]}{color[0400]}把配對線連接起來{color[ffff]}{[0001|ffff]}！
032	這麼一來，\n{color[0400]}{[0001|1d00]}按下鍵讓人跳躍{[0001|ffff]}{color[ffff]}的\n程式就完成了！
033	遊戲現在應該\n可以過關囉！
034	來吧！\n我們回遊戲畫面遊玩看看！
035	恭喜過關～！！
036	{[0201]}，\n多虧你設計的程式，\n讓這個遊戲完成了！
036-01	那麼……\n我們到程式設計畫面去吧！
037	……你覺得如何？
038	設計遊戲程式……\n是不是很開心呢～？
039	{[0201]}，\n我覺得……\n你很有設計程式的天賦。
040	而且……\n你也想設計更多\n遊戲程式對吧？
041	既然如此！\n你要不要試著參加我……\n鮑伯主講的{[0001|1d00]}{color[0400]}附帶導航的課堂{color[ffff]}{[0001|ffff]}呢！？
042	在這一系列的課堂裡，\n你可以像剛才一樣跟著我的{[0001|1d00]}{color[0400]}導航{color[ffff]}{[0001|ffff]}，\n一步一步地設計出各種遊戲程式……
043	學到最後……\n你就能{color[0400]}{[0001|1d00]}自己設計出遊戲程式{[0001|ffff]}{color[ffff]}囉！
044	那麼……\n請問你要參加我……\n鮑伯主講的{[0001|1d00]}{color[0400]}附帶導航的課堂{color[ffff]}{[0001|ffff]}嗎！？
044000	是
044001	否
045	太好了！！
046	那麼，我們去看看……
047	在附帶導航的課堂中\n會製作些什麼遊戲吧！
048	別這麼說嘛！就這樣埋沒你的天賦，\n對程式設計界來說可是個大損失呢！
Lesson_SecretRoom_00.msbt
000	歡迎你～！\n{[0201]}！
001	歡迎來到{color[0400]}{[0001|1d00]}解謎房間{[0001|ffff]}{color[ffff]}！
002	{color[0400]}{[0001|1d00]}解謎房間{[0001|ffff]}{color[ffff]}和之前設計的\n遊戲有點不一樣……
003	是個需要動腦解謎的遊戲～！
004	遊戲的舞台將會是你\n從未接觸過的{color[0400]}{[0001|1d00]}3D空間{[0001|ffff]}{color[ffff]}……\n
005	房間各處散落著\n謎團重重的擺設……
006	主角為了尋求線索，\n在房間裡到處探索……
007	究竟……他能否解開謎題，\n將寶物納入囊中呢！？
008	……如何？\n聽起來是不是很有趣呢～～～？
009	那麼，\n我們一起來打開\n解謎房間的大門吧～
09-01	首先，我們要來製作\n作為解謎舞台的房間。
010	請切換為{[0001|1d00]}{color[0400]}俯瞰視角{color[ffff]}{[0001|ffff]}。
011	完美！
013	那麼首先……\n來製作房間的{[0001|1d00]}{color[0400]}地面{color[ffff]}{[0001|ffff]}吧！
014	啊……
015	「遊戲畫面裡本來就有地面啊！」\n……你是不是這樣想呢？
016	很可惜，你猜錯囉！\n從我們製作房間地面的那一刻起，\n{[0001|1d00]}{color[0400]}這個房間的謎題就已經開始了{color[ffff]}{[0001|ffff]}喔！
017	那麼……\n請叫出{[0001|1d00]}{color[0400]}立方體{color[ffff]}{[0001|ffff]}物件小節點，\n把他放大。
018	然後打開設定。
019	把{[0001|1d00]}狀態{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}能看見{color[ffff]}{[0001|ffff]}和{[0001|1d00]}{color[0400]}能接觸{color[ffff]}{[0001|ffff]}～
020	接著把{[0001|1d00]}顏色{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}黃綠色{color[ffff]}{[0001|ffff]}！
021	那麼，關閉設定吧～
022	「一踏進房門，就發現這是個\n瀰漫著異樣氣氛的奇怪房間……」
023	……嗨，我是地面。\n我會撐起主角的第一步。
024	在他的旁邊繼續製作地面吧！
025	{[0001|1d00]}{color[0400]}複製{color[ffff]}{[0001|ffff]}物件小節點，把他放在旁邊～
026	打開設定。
027	把{[0001|1d00]}顏色{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}黑色{color[ffff]}{[0001|ffff]}。
028	OK！\n關閉設定吧～
029	「這個房間裡應該有個\n隱藏在黑暗中的密室……」
030	……嗨，我是密室的地面。\n要把謎題解開我才會出現。
031	沒錯！就是密室！
032	這個遊戲的目的……\n就是解開謎題，{[0001|1d00]}{color[0400]}找出密室{color[ffff]}{[0001|ffff]}！
032-01	擺在旁邊的黑色地面，\n就是密室的地面。
033	那麼……\n我們去看看製作好的地面吧～
034	不同顏色的地面並排在一起呢～！
035	黃綠色地面是房間的地面，\n他會作為解謎的主要舞台……
036	而黑色地面\n就是密室的地面！
040	接下來，\n我們讓負責解開謎題的\n主角站在這個地面上吧～
042	請叫出{[0001|1d00]}{color[0400]}人小節點{color[ffff]}{[0001|ffff]}！
043	「你循著好友留下的地圖，\n來到了這個房間。」
044	我一定要解開謎題！
045	切換為{[0001|1d00]}{color[0400]}橫向視角{color[ffff]}{[0001|ffff]}……
046	把人小節點移動到地面上吧。
047	接著，打開設定～
048	把{[0001|1d00]}動作{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}出拳{color[ffff]}{[0001|ffff]}！
049	完美～\n關閉設定吧。
050	在這個遊戲中，\n{color[0400]}{[0001|1d00]}出拳{[0001|ffff]}{color[ffff]}是個很重要的動作喔～
051	那麼，請切換回{[0001|1d00]}{color[0400]}俯瞰視角{color[ffff]}{[0001|ffff]}。
052	然後，為了能找遍房間裡的每個角落……\n我們把人設計成{color[0400]}{[0001|1d00]}可以前後左右移動{[0001|ffff]}{color[ffff]}吧！
054	請從{[0001|1d00]}{color[0400]}L操控搖桿{color[ffff]}{[0001|0700]}{[0001|1d00]}{color[0400]}上下{color[ffff]}{[0001|ffff]}裡\n叫出{[0001|1d00]}{color[0400]}操控搖桿小節點{color[ffff]}{[0001|ffff]}，\n把他放到藍色框框裡。
055	接著從{[0001|1d00]}{color[0400]}L操控搖桿{color[ffff]}{[0001|0700]}{[0001|1d00]}{color[0400]}左右{color[ffff]}{[0001|ffff]}裡\n叫出{[0001|1d00]}{color[0400]}操控搖桿小節點{color[ffff]}{[0001|ffff]}，\n把他放到下方吧。
056	把{[0001|1d00]}{color[0400]}上下{color[ffff]}{[0001|ffff]}的操控搖桿小節點\n連接到人小節點的{[0001|1d00]}{color[0400]}前後端口{color[ffff]}{[0001|ffff]}。
057	接著把{[0001|1d00]}{color[0400]}左右{color[ffff]}{[0001|ffff]}的操控搖桿小節點\n連接到人小節點的{[0001|1d00]}{color[0400]}左右端口{color[ffff]}{[0001|ffff]}！
058	「為了查看整個房間，\n你在裡頭繞了一圈……」
059	只要轉一轉～\n就能走來走去囉～
060	接下來，我們要讓人可以{color[0400]}{[0001|1d00]}出拳{[0001|ffff]}{color[ffff]}！
061	叫出{[0001|1d00]}{color[0400]}{color[ffff]}{[0001|ffff]}的{color[0400]}{[0001|1d00]}按鍵小節點{[0001|ffff]}{color[ffff]}，\n把他放到藍色框框裡～
062	把{[0001|1d00]}{color[0400]}{color[ffff]}{[0001|ffff]}的按鍵小節點連接到\n人小節點的{[0001|1d00]}{color[0400]}動作端口{color[ffff]}{[0001|ffff]}吧。
063	「咻……！\n你不經意地揮出一拳，\n拳頭毫無意義地劃過空氣……」
064	嗨！\n即使沒有意義，也要連續出拳！！\n我按～～～！！！
065	那麼，我們去確認一下\n人的動作吧～
066	請試著用操控搖桿\n和鍵讓人動起來。
067	現在你能操控人\n自由自在地奔跑，\n還可以出拳了呢！！
069	這樣一來，\n追尋謎題真相的主角就完成了！
071	不過……\n現在這個從正上方俯瞰的視角，\n在遊戲畫面中會很難看清每個角落～
073	所以……\n為了讓遊戲畫面能夠\n清楚地顯示解謎舞台……
074	我們來設計{color[0400]}{[0001|1d00]}照相機{[0001|ffff]}{color[ffff]}的程式吧！
075	為了能清楚地顯示出遊戲舞台，\n我們從{color[0400]}{[0001|1d00]}斜上方{[0001|ffff]}{color[ffff]}拍攝房間和人吧。
075-01	不過……我們平常用的\n遊戲畫面小節點拍不出\n這麼複雜的角度。
076	所以……\n我們這次要叫出新的小節點\n代替遊戲畫面小節點！
077	請從{[0001|1d00]}物件{[0001|ffff]}{[0001|0700]}{[0001|ffff]}{[0001|1d00]}遊戲畫面和照相機{[0001|ffff]}{[0001|0700]}{[0001|ffff]}{[0001|1d00]}{color[0400]}照相機{color[ffff]}{[0001|ffff]}裡\n叫出{color[0400]}{[0001|1d00]}照相機小節點{[0001|ffff]}{color[ffff]}。
078	……輪到我出場了啊。
079	……要我做什麼？\n你儘管說。
080	我們想請你從斜上方\n拍攝房間和人！
081	……知道了。\n包在我身上。
082	那麼……\n我們先切換為{[0001|1d00]}{color[0400]}橫向視角{color[ffff]}{[0001|ffff]}吧！
083	接著，把照相機小節點\n移動到比人還高的位置。
084	由於照相機小節點本身就會\n{color[0400]}{[0001|1d00]}成為{[0001|ffff]}{color[ffff]}拍攝遊戲畫面的{color[0400]}{[0001|1d00]}照相機{[0001|ffff]}{color[ffff]}，\n你可以像這樣把他{color[0400]}{[0001|1d00]}擺在想拍攝的地方{[0001|ffff]}{color[ffff]}。
085	我們去看看他拍得怎麼樣吧～
086	哇！
087	遊戲畫面已經不是\n原本的俯瞰視角了～！
089	這是因為照相機小節點被放在高處，\n所以畫面才會變成這樣的顯示方式。
090	不過……\n這角度總覺得\n有點不太對呢～
091	把他調整一下，\n讓他的拍攝角度偏右一點吧～
092	你可以轉動照相機小節點\n來{color[0400]}{[0001|1d00]}更改照相機的方向{[0001|ffff]}{color[ffff]}喔！
093	我們先切換為{[0001|1d00]}{color[0400]}俯瞰視角{color[ffff]}{[0001|ffff]}。
094	然後{[0001|1d00]}{color[0400]}向右轉動{color[ffff]}{[0001|ffff]}\n照相機小節點！
095	好了！\n我們去確認一下……\n顯示方式有什麼改變吧！
096	視角變得比剛才更偏向右方了！
098	就像這樣……\n照相機小節點的位置和方向會直接變成\n{color[0400]}{[0001|1d00]}拍攝遊戲畫面的照相機的位置和方向{[0001|ffff]}{color[ffff]}！
100	不過，現在這個角度……\n要是能讓照相機面向下方一點，\n感覺會更好呢～
101	我們來讓照相機面向下方吧～
102	當你想{[0001|1d00]}{color[0400]}上下{color[ffff]}{[0001|ffff]}傾斜照相機，\n或想指定{[0001|1d00]}{color[0400]}詳細{color[ffff]}{[0001|ffff]}的角度時，\n可以去他的設定更改喔。
103	打開照相機小節點的設定畫面吧。
104	請把{[0001|1d00]}X軸轉動{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}4.00°{color[ffff]}{[0001|ffff]}。
104-01	把{[0001|1d00]}Y軸轉動{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}17.00°{color[ffff]}{[0001|ffff]}～
105	OK！\n請關閉設定。
106	我們去看看吧～
107	完美！！！
108	雖然現在畫面中只有地面，\n所以看不出來有什麼差別……
109	不過，這就是我想要的照相機角度！
110	確認好照相機角度後，\n就去程式設計畫面吧～
111	那麼～～～這樣就～～～～～
112	完成第1步驟了！！！
113	恭喜～
114	……恭喜。
115	恭喜你。
116	恭喜。
117	這次我們設計了主角、\n照相機和房間的地面！
119	在下個步驟中……\n我們會製作牆壁、窗戶還有天花板，\n完成整個房間！
120	《與世隔絕的房間，射進窗內的陽光……\n此時你看向窗外，腦中浮現的是……？》
121	《下回待續……》
122	那麼，\n我們在下個步驟再見了～
Lesson_SecretRoom_01.msbt
000	歡迎你來到\n解謎房間的第2步驟！
001	我們上次設計了\n{[0001|1d00]}{color[0400]}地面{color[ffff]}{[0001|ffff]}、{[0001|1d00]}{color[0400]}人{color[ffff]}{[0001|ffff]}和{[0001|1d00]}{color[0400]}照相機{color[ffff]}{[0001|ffff]}呢。
002	先來複習一下吧。
003	黃綠色地面是房間的地面，\n他會作為解謎的主要舞台。
004	黑色地面是{color[0400]}{[0001|1d00]}密室{[0001|ffff]}{color[ffff]}的地面，\n要解開謎題後才會出現。
005	按下{[0001|1d00]}{color[0400]}鍵{color[ffff]}{[0001|ffff]}人就會出拳！
006	然後這次，我們要把\n這個只有地面的房間～
007	透過程式設計……\n建造成完整的{[0001|1d00]}{color[0400]}房間{color[ffff]}{[0001|ffff]}！
008	我們去程式設計畫面吧！
009	首先從後面的牆壁開始製作吧。
010	選擇這個物件小節點……
011	{[0001|1d00]}{color[0400]}複製！{color[ffff]}{[0001|ffff]}
012	把他調整成長條形，\n移動到房間後面吧。
013	接著，\n切換為{[0001|1d00]}{color[0400]}橫向視角{color[ffff]}{[0001|ffff]}！
014	把他調整成牆壁應有的高度。
015	然後打開設定。
016	把{[0001|1d00]}顏色{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}白色{color[ffff]}{[0001|ffff]}吧～
017	OK。\n關閉設定。
018	「經過細心粉刷的石灰牆，\n不懼歲月更迭，保其潔白如霜。」
019	我就是其中一道牆。
020	我們馬上去看看製作出來的牆壁吧。
021	房間後面多了一道牆～！
023	我們在這道牆壁上\n設計一個窗戶吧～
024	來！\n把剩下的部分也製作出來吧！
025	選擇牆壁的物件小節點～
026	複製！
027	把他放到上面的位置。
028	{color[0400]}{[0001|1d00]}複製{[0001|ffff]}{color[ffff]}他，然後向上下拉長，\n再移動到左邊～
029	再{[0001|1d00]}{color[0400]}複製{color[ffff]}{[0001|ffff]}一次，\n這次要放到右邊～
030	接著我們要在旁邊\n製作出密室的牆壁！
031	{color[0400]}{[0001|1d00]}複製{[0001|ffff]}{color[ffff]}物件小節點，\n把他移動到右邊！
032	畢竟這是密室的牆壁，\n我們幫他換個顏色吧～
033	打開設定……
034	把{[0001|1d00]}顏色{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}黑色{color[ffff]}{[0001|ffff]}。
035	好，關閉設定。
038	去看看製作出來的\n牆壁是什麼樣子吧。
039	我們製作的牆壁上\n有個窗戶大小的洞！
040	這裡……\n越來越有房間的樣子了呢。
041	為了讓這個洞變得更像窗戶～
042	在洞裡裝上十字形的窗框吧！
043	首先，\n選擇這個物件小節點～～
044	複製！
045	把他向上下拉長，\n拿來當作窗框的一部分～
046	{[0001|1d00]}{color[0400]}複製{color[ffff]}{[0001|ffff]}他，\n然後向左右拉長～
047	「窗戶似乎被焊死了，\n你無法從這裡進出房間。」
048	……正因為有窗戶，\n「外面」的概念才得以成立。
049	那麼……\n我們去看看窗戶吧～！
050	哇～！\n這樣才是窗戶嘛！！
051	裝上窗框後，\n一下子就變得更像窗戶了！
053	這麼一來……\n房間後面的牆壁就完成了！
055	接下來，我們來設計一下，\n讓明亮的{color[0400]}{[0001|1d00]}陽光照射{[0001|ffff]}{color[ffff]}進來吧～
056	叫出{color[0400]}{[0001|1d00]}空間小節點{[0001|ffff]}{color[ffff]}吧。
057	打開空間小節點的設定。
058	打開{color[0400]}{[0001|1d00]}空間的光線{[0001|ffff]}{color[ffff]}～
058-01	你可以透過這個\n{color[0400]}{[0001|1d00]}太陽的方位{[0001|ffff]}{color[ffff]}和{color[0400]}{[0001|1d00]}太陽的高度{[0001|ffff]}{color[ffff]}\n調整{color[0400]}{[0001|1d00]}陽光照射的方向{[0001|ffff]}{color[ffff]}。
059	想要讓陽光從窗戶照射進來，\n就得把{[0001|1d00]}太陽的方位{[0001|ffff]}設定為{color[0400]}{[0001|1d00]}0{[0001|ffff]}{color[ffff]}，\n{[0001|1d00]}太陽的高度{[0001|ffff]}設定為{color[0400]}{[0001|1d00]}40{[0001|ffff]}{color[ffff]}～
060	完美。\n請關閉設定。
061	「耀眼的陽光射入房間，\n在中央映射出窗戶的影子。」
062	我能感覺到……\n太陽的力量……
063	那麼，\n我們去看看太陽的變化吧～
064	地面上能清晰地\n看到窗戶的影子！
067	……這氣氛真不錯呢～！
068	來！\n我們繼續設計其他牆壁吧！
069-00	接下來，\n我們要製作房間左右兩邊的牆壁。
069	請切換為{[0001|1d00]}{color[0400]}俯瞰視角{color[ffff]}{[0001|ffff]}。
071	選擇這個牆壁的物件小節點～
072	複製！
073	把他放到房間左邊吧。
074	再{[0001|1d00]}{color[0400]}複製{color[ffff]}{[0001|ffff]}一次，\n把他放到房間與密室之間的邊界～
075	重新選擇左邊的牆壁～
076	複製！
077	把他放到密室的右邊吧。
079	打開這個物件小節點的設定……
080	把{[0001|1d00]}顏色{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}黑色{color[ffff]}{[0001|ffff]}。
081	請關閉設定吧。
082	好了，我們去看看做好的牆壁吧！
083	左邊有牆壁！右邊有牆壁！\n就連密室也有牆壁！
084	這樣左右兩邊的牆壁就完成了！
085	看起來已經很像一個房間了呢～
086	不過，現在還是看得到密室……
087	在下個步驟中，\n我們會把他完全隱藏起來，\n現在就先別管他吧～
089	接下來要製作的是天花板！
090	選擇地面的物件小節點～
091	複製！
092	調整一下大小，\n讓他可以覆蓋整個房間吧～
093	切換為{[0001|1d00]}{color[0400]}橫向視角{color[ffff]}{[0001|ffff]}～
094	把他放到房間上面！
095	「這個天花板應該不會掉下來吧？\n你的腦海裡浮現了令人不安的念頭。」
096	現在{[0001|1d00]}狀態{[0001|ffff]}的{[0001|1d00]}{color[0400]}能移動被設定為關閉{color[ffff]}{[0001|ffff]}，\n所以不用擔心天花板會掉下來喔。
097	打開設定。
100	把{[0001|1d00]}顏色{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}白色{color[ffff]}{[0001|ffff]}！
101	關閉設定～！
102	來！我們去看看多了\n天花板的房間長什麼樣子吧！
103	天花板完美地黏在上面呢！
105	這樣就不用怕風吹雨打囉！
107	這麼一來……\n房間就完成了！
108	……其實還沒完成啦。
109	{[0201]}，\n就像你之前試過的……
110	當你操控人走向畫面……\n也就是向前移動時，\n人就會走到房間外。
111	請你試著讓人向前移動幾步。
112	人走出房間了……
113	請試著讓人向後移動，\n讓他回到房間裡面～
114	人沒有回來……
115	其實……\n人在照相機沒拍到的地方，\n從地面掉下去了。
118	為了不要讓人掉下去……\n我們在房間前面也製作一道牆壁吧！
119	請切換為{[0001|1d00]}{color[0400]}俯瞰視角{color[ffff]}{[0001|ffff]}。
120	選擇牆壁的物件小節點～
121	複製！
122	把他向左右拉長，\n拿來當作房間前面的牆壁吧！
123	好了！去確認一下吧！
124	嗯……
125	什麼都看不見！！！
126	……畢竟眼前擺了一道牆，\n這樣當然會看不見啦～
127	我們把牆壁隱藏起來，\n讓房間內的樣子可以被看到吧！
128	選擇前面的牆壁～
129	打開設定！
130	把{[0001|1d00]}狀態{[0001|ffff]}的{[0001|1d00]}{color[0400]}能看見{color[ffff]}{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}關閉{color[ffff]}{[0001|ffff]}吧。
131	完美～\n請關閉設定。
132	這次一定沒問題！
135	可以看到房間內的樣子了！
136	請試著把人移動到前面。
137	有一道看不見的牆壁擋在前面，\n人不會再掉下去了！
139	我們終於……\n把房間完成了！！
140	你可以在房間裡繼續逛逛，\n逛夠了就回到程式設計畫面吧～
141	那麼～～～這樣就～～～～～
142	完成第2步驟了！！！
143	恭喜竣工完成。
144	恭喜你。
145	這是個不錯的房間。
146	這裡洋溢著祝福的光輝……！
148	這次我們製作了牆壁、窗戶還有天花板，\n把整個房間設計出來了！
149	在下個步驟裡，我們將會設計{[0001|1d00]}{color[0400]}隱藏門{color[ffff]}{[0001|ffff]}……
150	還有讓謎團更顯神秘的各種{[0001|1d00]}{color[0400]}可疑物件{color[ffff]}{[0001|ffff]}！
151	《木箱、電視、牆壁上的裝置……\n你將要挑戰解開這些謎團……》
152	《下回待續……》
153	那麼，\n我們在下個步驟再會囉～
Lesson_SecretRoom_02.msbt
000	歡迎你來到\n解謎房間的第3步驟！
001	我們上次完成了\n作為解謎舞台的{color[0400]}{[0001|1d00]}房間{[0001|ffff]}{color[ffff]}！
003	這次我們會設計出\n更多的解謎{color[0400]}{[0001|1d00]}機關{[0001|ffff]}{color[ffff]}喔！
004	來吧！\n去程式設計畫面！
005	首先我們要設計的是……
006	當解開所有謎題時\n就會打開的{[0001|1d00]}{color[0400]}隱藏門{color[ffff]}{[0001|ffff]}！
011	我們先來製作一道{[0001|1d00]}{color[0400]}門{color[ffff]}{[0001|ffff]}吧。
012	選擇牆壁的物件小節點～
013	複製！
014	把他放到遠一點的位置。
014-01	我們要把這個物件小節點當成{[0001|1d00]}{color[0400]}門{color[ffff]}{[0001|ffff]}來使用！
014-02	接下來……\n我們希望當{color[0400]}{[0001|1d00]}謎題解開{[0001|ffff]}{color[ffff]}時，\n讓這道門能夠{color[0400]}{[0001|1d00]}自動打開{[0001|ffff]}{color[ffff]}。
014-03	為了讓門能夠移動，\n我們得用一種新的特殊連接方式！
014-04	請從{[0001|1d00]}物件{[0001|ffff]}{[0001|0700]}{[0001|ffff]}{[0001|1d00]}連接零件{[0001|ffff]}{[0001|0700]}{[0001|ffff]}{[0001|1d00]}自由滑動連接{[0001|ffff]}裡\n叫出{color[0400]}{[0001|1d00]}自由滑動連接小節點{[0001|ffff]}{color[ffff]}。
014-06	有什麼事嗎？
014-07	哦……你們想讓門移動啊。
014-08	只要把我{color[0400]}{[0001|1d00]}夾在物件之間連接{[0001|ffff]}{color[ffff]}，\n就能{color[0400]}{[0001|1d00]}自由移動{[0001|ffff]}{color[ffff]}連接的物件啦～
014-09	之後就隨你們喜歡吧。
014-10	雖然我們的最終目的是\n讓隱藏門可以{color[0400]}{[0001|1d00]}自動{[0001|ffff]}{color[ffff]}打開……
014-11	不過在這個步驟裡，\n暫且先設計成可以\n用{color[0400]}{[0001|1d00]}操控搖桿{[0001|ffff]}{color[ffff]}來移動隱藏門吧！
014-12	首先，把自由滑動連接小節點\n{[0001|1d00]}{color[0400]}連接{color[ffff]}{[0001|ffff]}到牆壁的物件小節點！
015	接著，打開門的物件小節點的設定……
016	把{[0001|1d00]}狀態{[0001|ffff]}設定為{color[0400]}{[0001|1d00]}能看見{[0001|ffff]}{color[ffff]}和{color[0400]}{[0001|1d00]}能移動{[0001|ffff]}{color[ffff]}。
017	接著……請打開{[0001|1d00]}{color[0400]}連接面{color[ffff]}{[0001|ffff]}，\n把{[0001|1d00]}自己的連接面{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}Z-{color[ffff]}{[0001|ffff]}，\n{[0001|1d00]}連接對象的連接面{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}Z+{color[ffff]}{[0001|ffff]}。
018	關閉設定吧～
019	再來我們要把門的物件小節點\n{[0001|1d00]}{color[0400]}連接{color[ffff]}{[0001|ffff]}到自由滑動連接小節點！
019-01	這樣{color[0400]}{[0001|1d00]}門就會緊貼在牆壁旁邊{[0001|ffff]}{color[ffff]}了！
019-02	接下來，我們把這道門設計成\n可以用{color[0400]}{[0001|1d00]}操控搖桿{[0001|ffff]}{color[ffff]}來移動吧～
019-03	請從{[0001|1d00]}{color[0400]}R操控搖桿{color[ffff]}{[0001|ffff]}{[0001|0700]}{[0001|ffff]}{[0001|1d00]}{color[0400]}上下{color[ffff]}{[0001|ffff]}裡\n叫出{color[0400]}{[0001|1d00]}操控搖桿小節點{[0001|ffff]}{color[ffff]}，\n把他放到藍色框框裡。
019-04	把操控搖桿小節點……\n連接到自由滑動連接小節點的{[0001|1d00]}{color[0400]}Z端口{color[ffff]}{[0001|ffff]}吧。
019-05	好！\n我們先去確認一下吧～！
019-0501	密室被完全隱藏起來了！
019-06	那麼……\n請你試著上下推動{[0001|1d00]}{color[0400]}操控搖桿{color[ffff]}{[0001|ffff]}……
019-07	隱藏門……動了！
019-09	因為我們連接了{color[0400]}{[0001|1d00]}Z端口{[0001|ffff]}{color[ffff]}，\n所以門會向著Z方向……\n也就是房間的前後方向移動～
019-10	接下來我們要讓門\n也能向著左右方向……\n也就是X方向移動～
019-11	請從{[0001|1d00]}{color[0400]}R操控搖桿{color[ffff]}{[0001|ffff]}{[0001|0700]}{[0001|ffff]}{[0001|1d00]}{color[0400]}左右{color[ffff]}{[0001|ffff]}裡\n叫出{color[0400]}{[0001|1d00]}操控搖桿小節點{[0001|ffff]}{color[ffff]}，\n把他放到藍色框框裡。
019-12	把{[0001|1d00]}左右{[0001|ffff]}的操控搖桿小節點……\n連接到自由滑動連接小節點的{[0001|1d00]}{color[0400]}X端口{color[ffff]}{[0001|ffff]}吧。
019-13	這樣門就可以\n向X方向移動了～！
019-14	來確認一下吧！
019-15	請試著上下左右\n推動{[0001|1d00]}{color[0400]}操控搖桿{color[ffff]}{[0001|ffff]}。
019-16	現在牆壁會向前後左右移動了呢～！
019-20	像這樣讓連接的物件能\n{color[0400]}{[0001|1d00]}自由地向各種方向移動{[0001|ffff]}{color[ffff]}，\n正是{color[0400]}{[0001|1d00]}自由滑動連接小節點{[0001|ffff]}{color[ffff]}的厲害之處！
019-21	話說回來……
019-2101	隱藏門會穿透人和牆壁呢。
019-22	想讓隱藏門向各種方向移動，\n這種設計的確是比較方便～
019-23	不過……\n這樣人可是會跑進密室喔！
019-24	我們來設計一道看不見的牆，\n讓人無法進入密室吧！
019-25	走吧！\n我們去程式設計畫面！
021	選擇牆壁的物件小節點～
022	複製！
023	把他重疊在密室上吧。
024	打開設定～
025	把{[0001|1d00]}狀態{[0001|ffff]}設定為只有{[0001|1d00]}{color[0400]}能接觸{color[ffff]}{[0001|ffff]}是開啟。
026	OK。\n請關閉設定。
027	「咚咚……你伸手敲擊牆面，\n一陣微弱的迴音從裡頭傳來……\n這道牆壁後面似乎藏有密室。」
028	我是負責阻止人進入\n密室的{color[0400]}{[0001|1d00]}看不見的牆壁{[0001|ffff]}{color[ffff]}。
029	你只能看到我……\n也就是{color[0400]}{[0001|1d00]}門本身{[0001|ffff]}{color[ffff]}。
030	那麼，我們去確認一下吧！
034	請試著走向右後方的密室。
036	完全被擋在門外了呢！
037	好，這樣隱藏門就\n暫且算是完成了！
038	請到程式設計畫面～
078	隱藏門會暫時\n維持在目前的狀態……
079	如果你想測試的話，\n可以轉一轉操控搖桿，\n移動看看隱藏門喔！
080	歡迎你來轉一轉～
081	轉轉～\n轉轉轉轉～～
084	接著……
085	我們來設計一些{[0001|1d00]}{color[0400]}可疑物件{color[ffff]}{[0001|ffff]}，\n為玩家提供解謎的線索吧！
086	請從{[0001|1d00]}四方形時尚物件{[0001|ffff]}裡\n叫出{[0001|1d00]}{color[0400]}木箱{color[ffff]}{[0001|ffff]}的{color[0400]}{[0001|1d00]}時尚物件小節點{[0001|ffff]}{color[ffff]}，\n把他放到房間的角落～
087	切換為{[0001|1d00]}{color[0400]}橫向視角{color[ffff]}{[0001|ffff]}。
088	把他放到地面上。
095	「房間的角落擺著一個\n布滿灰塵的大木箱。」
096	啊～好想調查裡面啊！
097	♥這種存在感也太邪惡了♥
098	打開{[0001|1d00]}木箱{[0001|ffff]}的時尚物件小節點的設定。
099	把{[0001|1d00]}狀態{[0001|ffff]}設定為\n{color[0400]}{[0001|1d00]}能看見{[0001|ffff]}{color[ffff]}、{color[0400]}{[0001|1d00]}能接觸{[0001|ffff]}{color[ffff]}和{color[0400]}{[0001|1d00]}會損壞{[0001|ffff]}{color[ffff]}～
100	關閉設定！
101	木箱要被破壞了嗎……？\n真是脆弱的存在啊……
102	我們會在下個步驟中\n設計破壞木箱的程式……
103	現在先去確認一下\n木箱長什麼樣子吧～！
103-00	嗯……他就是一個木箱！
103-01	就這樣放在房間的角落，\n也很有存在感呢～
103-04	接下來把其他可疑物件\n也放進房間吧～！
103-05	下一個要放的是電視！
104	從{[0001|1d00]}四方形時尚物件{[0001|ffff]}裡\n叫出{[0001|1d00]}{color[0400]}電視{color[ffff]}{[0001|ffff]}的{[0001|1d00]}{color[0400]}時尚物件小節點{color[ffff]}{[0001|ffff]}，\n把他放到窗戶下方～
105	請切換為{[0001|1d00]}{color[0400]}俯瞰視角{color[ffff]}{[0001|ffff]}。
106	讓他貼著牆壁吧～
113	「這個播放著黑白影片的箱子，\n似乎是很久以前的電視……」
114	我愛死這種復古風了♥
117	這個電視是用來營造\n懸疑氣氛的小道具喔！
118	營造氣氛……\n這可是時尚物件小節點最拿手的喔♥
119	為了防止電視移動，\n我們把他固定起來吧。
120	打開{[0001|1d00]}電視{[0001|ffff]}的時尚物件小節點的設定。
121	把{[0001|1d00]}狀態{[0001|ffff]}的{[0001|1d00]}{color[0400]}能移動{color[ffff]}{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}關閉{color[ffff]}{[0001|ffff]}吧。
122	OK！\n請關閉設定。
122-01	好了，\n我們去看看電視的樣子吧～！
122-02	胖胖的很可愛！
122-03	這麼一來，\n電視就設置好了！
122-04	來吧！\n最後我們要在房間裡\n設置一個神秘裝置喔～！
125	我們要製作一個由{color[0400]}{[0001|1d00]}按鍵{[0001|ffff]}{color[ffff]}和\n{color[0400]}{[0001|1d00]}數字方塊{[0001|ffff]}{color[ffff]}組成的神秘裝置。
126	先來設計這個\n{color[0400]}{[0001|1d00]}裝置的按鍵{[0001|ffff]}{color[ffff]}吧。
127	叫出{color[0400]}{[0001|1d00]}圓柱體物件小節點{[0001|ffff]}{color[ffff]}，\n把他重疊在牆壁上。
128	切換為{[0001|1d00]}{color[0400]}橫向視角{color[ffff]}{[0001|ffff]}～
129	把他縮小，\n放到方便人按的高度！
130	轉一轉！
131	打開設定。
132	把{[0001|1d00]}狀態{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}能看見{color[ffff]}{[0001|ffff]}和{[0001|1d00]}{color[0400]}能接觸{color[ffff]}{[0001|ffff]}吧。
133	接著，把{[0001|1d00]}顏色{[0001|ffff]}更改為{[0001|1d00]}{color[0400]}粉紅色{color[ffff]}{[0001|ffff]}！
134	關閉設定～
135	「牆上有一個按鍵，\n他的體積大到就像怕人不按一樣。」
136	……嗨。\n請來按按我。
137	最後就是{color[0400]}{[0001|1d00]}數字方塊{[0001|ffff]}{color[ffff]}了。
138	切換為{[0001|1d00]}{color[0400]}俯瞰視角{color[ffff]}{[0001|ffff]}～
139	叫出{[0001|1d00]}{color[0400]}附數字物件小節點{color[ffff]}{[0001|ffff]}，\n把他重疊在牆壁的按鍵上。
140	然後切換為{[0001|1d00]}{color[0400]}橫向視角{color[ffff]}{[0001|ffff]}……
141	把他縮小，\n放到牆壁的按鍵的上方吧。
142	打開設定。
143	把{[0001|1d00]}狀態{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}能看見{color[ffff]}{[0001|ffff]}和{[0001|1d00]}{color[0400]}能接觸{color[ffff]}{[0001|ffff]}～
144	把{[0001|1d00]}顏色{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}水藍色{color[ffff]}{[0001|ffff]}。
145	把{[0001|1d00]}標示方向{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}X-{color[ffff]}{[0001|ffff]}。
146	OK。\n請關閉設定。
147	「按鍵的上方嵌著\n一個水藍色的方塊，\n上面顯示著數字00。」
148	這次我顯示的數字似乎是\n解謎遊戲中的{[0001|1d00]}{color[0400]}關鍵要素{color[ffff]}{[0001|ffff]}呢。
150	你說得沒錯！
151	我們會在之後的步驟裡\n設計{color[0400]}{[0001|1d00]}這個關鍵要素{[0001|ffff]}{color[ffff]}，\n敬請期待喔！
154	那麼……\n既然設置好牆上的裝置了，\n我們就去看看他的樣子吧！
155	這……
156	這個裝置真是令人好奇呢……！
158	好，如此一來……\n可疑物件就全部設置完畢了！
159	這些物件的背後到底隱藏著什麼謎團呢？\n好想知道真相啊！
161	我們去程式設計畫面吧～
162	那麼～～～這樣就～～～～～
163	完成第3步驟了！！！
164	挺厲害的嘛。
165	♥好漂亮的擺設♥
166	♥恭喜你～♥
167	恭喜你。
168	這次我們設計了隱藏門，\n還有各式各樣的可疑物件！
170	在下個步驟裡，\n我們會設計用來讓人出拳\n打壞那個神秘木箱的程式！
172	《你的第六感告訴你，\n那個木箱裡一定藏了些秘密……\n於是你緊握了拳頭……》
173	《下回待續……》
174	那麼，\n我們在下個步驟再會囉～
Lesson_SecretRoom_03.msbt
000	歡迎你～
001	我們上次設計了\n{[0001|1d00]}{color[0400]}隱藏門{color[ffff]}{[0001|ffff]}和許多{[0001|1d00]}{color[0400]}可疑物件{color[ffff]}{[0001|ffff]}呢。
002	這次我們要讓其中一個\n可疑物件——{color[0400]}{[0001|1d00]}木箱{[0001|ffff]}{color[ffff]}～～
003	在受到人{color[0400]}{[0001|1d00]}出拳{[0001|ffff]}{color[ffff]}攻擊時損壞！
004	這次{color[0400]}{[0001|1d00]}要被打壞的木箱{[0001|ffff]}{color[ffff]}～\n就是他！
005	……終於輪到我了啊……
008	說到破壞物件……\n就得叫出{[0001|1d00]}{color[0400]}破壞物件小節點{color[ffff]}{[0001|ffff]}啦～\n把他放到房間外吧。
009	打開設定。
010	把{[0001|1d00]}狀態{[0001|ffff]}的{[0001|1d00]}{color[0400]}能看見{color[ffff]}{[0001|ffff]}設定為{color[0400]}{[0001|1d00]}關閉{[0001|ffff]}{color[ffff]}……
011	把{color[0400]}{[0001|1d00]}要破壞哪個物件？{[0001|ffff]}{color[ffff]}更改為只有{[0001|1d00]}{color[0400]}木箱{color[ffff]}{[0001|ffff]}～
012	完美。\n關閉設定～
013	「你察覺到木箱裡似乎有東西，\n於是便開始尋找破壞他的方法。」
014	呵呵呵……來破壞吧……\n不論……用什麼手段……
015	把破壞物件小節點{[0001|1d00]}{color[0400]}連接{color[ffff]}{[0001|ffff]}到\n{[0001|1d00]}木箱{[0001|ffff]}的時尚物件小節點吧。
015-01	這樣一來，破壞物件小節點\n就會一直黏在木箱上了！
015-02	接下來，我們來設計\n{color[0400]}{[0001|1d00]}當人出拳擊中木箱時{[0001|ffff]}{color[ffff]}，\n讓木箱損壞的程式吧～
016	首先，為了要確認拳頭\n{color[0400]}{[0001|1d00]}有沒有擊中木箱{[0001|ffff]}{color[ffff]}……
017	我們得把{color[0400]}{[0001|1d00]}接觸感應器{[0001|ffff]}{color[ffff]}黏在人的前方。
018	叫出{[0001|1d00]}{color[0400]}接觸感應器小節點{color[ffff]}{[0001|ffff]}，\n把他放到遠一點的位置。
019	打開設定。
020	把{[0001|1d00]}狀態{[0001|ffff]}的{[0001|1d00]}{color[0400]}能看見{color[ffff]}{[0001|ffff]}切換為{color[0400]}{[0001|1d00]}關閉{[0001|ffff]}{color[ffff]}～
021	打開{[0001|1d00]}{color[0400]}連接面{color[ffff]}{[0001|ffff]}，\n把{[0001|1d00]}自己的連接面{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}Z+{color[ffff]}{[0001|ffff]}，\n{[0001|1d00]}連接對象的連接面{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}Z-{color[ffff]}{[0001|ffff]}。
022	關閉這個畫面～
023	把{[0001|1d00]}{color[0400]}要確認什麼？{color[ffff]}{[0001|ffff]}更改為只有{[0001|1d00]}{color[0400]}木箱{color[ffff]}{[0001|ffff]}！
024	關閉設定～
025	接著……\n把接觸感應器小節點\n{[0001|1d00]}{color[0400]}連接{color[ffff]}{[0001|ffff]}到人小節點吧。
026	「嘎吱……我的手一碰到木箱，\n他就發出了快要壞掉的聲音。」
027	咿……我會負責確認\n人的前方有沒有木箱。
028	接下來要確認人有沒有出拳。
029	你還記得按下{color[0400]}{[0001|1d00]}鍵{[0001|ffff]}{color[ffff]}就會出拳吧？
030	為了確認有沒有按下鍵，\n我們叫出{[0001|1d00]}{color[0400]}{color[ffff]}{[0001|ffff]}的{color[0400]}{[0001|1d00]}按鍵小節點{[0001|ffff]}{color[ffff]}，\n把他放到藍色框框裡吧。
031	「你凝視著自己的拳頭，\n一股強烈的直覺襲上心頭：\n說不定我能打壞這個木箱……」
032	嗨！\n我會告訴你鍵有沒有被按下……\n也就是人有沒有出拳喲！
033	當接觸感應器小節點和按鍵小節點\n{color[0400]}{[0001|1d00]}兩者都輸出訊號{[0001|ffff]}{color[ffff]}時……
034	就表示人{[0001|1d00]}{color[0400]}向木箱出拳{color[ffff]}{[0001|ffff]}了！
035	為了確認兩者的輸出訊號，\n請叫出{color[0400]}{[0001|1d00]}AND小節點{[0001|ffff]}{color[ffff]}，\n把他放到藍色框框裡。
036	把{[0001|1d00]}{color[0400]}接觸感應器小節點{color[ffff]}{[0001|ffff]}和\nAND小節點的{[0001|1d00]}{color[0400]}輸入1端口{color[ffff]}{[0001|ffff]}連接起來。
037	把{[0001|1d00]}{color[0400]}按鍵小節點{color[ffff]}{[0001|ffff]}和\nAND小節點的{[0001|1d00]}{color[0400]}輸入2端口{color[ffff]}{[0001|ffff]}連接起來。
039	最後～！\n請把AND小節點的{[0001|1d00]}{color[0400]}輸出端{color[ffff]}{[0001|ffff]}\n連接到{[0001|1d00]}{color[0400]}破壞物件小節點{color[ffff]}{[0001|ffff]}！
040	人的前方有木箱，沒問題！\n人有出拳，沒問題！
041	當我接收到兩者的訊號時，\n就會傳送訊號給破壞物件小節點！
041-01	這樣當人向木箱出拳時，\n應該就可以破壞木箱了！
042	那麼，\n我們來破壞看看木箱吧！
043	請用鍵{[0001|1d00]}{color[0400]}向木箱出拳{color[ffff]}{[0001|ffff]}。
045	一拳就……\n把木箱打得稀巴爛！
046	真是漂亮的一拳！！\n格鬥家看到都會嘆為觀止啊～
047	不過，一拳就能打壞……\n感覺有點太沒勁了……
049	我們來設計程式……\n讓人得{color[0400]}{[0001|1d00]}出拳攻擊3次\n才能夠破壞{[0001|ffff]}{color[ffff]}木箱吧！
050	首先，我們需要計算\n人{color[0400]}{[0001|1d00]}向木箱出拳了幾次{[0001|ffff]}{color[ffff]}！
052	說到計算……\n就得叫出{[0001|1d00]}{color[0400]}計數器小節點{color[ffff]}{[0001|ffff]}了！\n把他放到藍色框框裡吧。
053	打開設定。
054	把{[0001|1d00]}開始時的計算值{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}3{color[ffff]}{[0001|ffff]}吧。
055	接著把{[0001|1d00]}模式{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}範圍限制{color[ffff]}{[0001|ffff]}。
056	把{[0001|1d00]}計算的時機{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}從0改變時{color[ffff]}{[0001|ffff]}～
056-01	這樣一來，每次出拳攻擊木箱時，\n就會以3……2……1……0的方式倒數！
057	關閉設定。
058	「啪嘰……你試著出拳攻擊木箱，\n發現他的確沒有很堅固……\n感覺只要再2拳就能打壞……」
059	3……2……1……0。\n你們希望我這樣計算對吧？
060	那麼，請把計算對象\n連接到我的{[0001|1d00]}{color[0400]}減少端口{color[ffff]}{[0001|ffff]}。
061	好～首先，{[0001|1d00]}{color[0400]}刪除{color[ffff]}{[0001|ffff]}AND小節點和\n破壞物件小節點之間的{[0001|1d00]}{color[0400]}配對線{color[ffff]}{[0001|ffff]}吧。
062	接著，把AND小節點的{[0001|1d00]}{color[0400]}輸出端{color[ffff]}{[0001|ffff]}和\n計數器小節點的{[0001|1d00]}{color[0400]}減少端口{color[ffff]}{[0001|ffff]}連接起來。
063	這樣木箱每被打中一拳，\n計算值就會逐漸減少。
064	接下來……\n我們來設計一個程式，\n讓木箱在這個計算值{color[0400]}{[0001|1d00]}歸0時{[0001|ffff]}{color[ffff]}損壞吧！
065	請叫出{[0001|1d00]}{color[0400]}＝{color[ffff]}{[0001|ffff]}的{color[0400]}{[0001|1d00]}比較小節點{[0001|ffff]}{color[ffff]}，\n把他放到藍色框框裡。
066	接著，叫出{[0001|1d00]}{color[0400]}常數小節點{color[ffff]}{[0001|ffff]}，\n把他放到藍色框框裡吧。
067	打開常數小節點的設定。
068	把{[0001|1d00]}要輸出多少？{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}0.00{color[ffff]}{[0001|ffff]}。
069	關閉設定。
070	把{[0001|1d00]}{color[0400]}計數器小節點{color[ffff]}{[0001|ffff]}和\n比較小節點的{[0001|1d00]}{color[0400]}輸入1端口{color[ffff]}{[0001|ffff]}連接起來～
071	把{[0001|1d00]}{color[0400]}常數小節點{color[ffff]}{[0001|ffff]}和\n比較小節點的{[0001|1d00]}{color[0400]}輸入2端口{color[ffff]}{[0001|ffff]}連接起來～～
072	最後把比較小節點的{[0001|1d00]}{color[0400]}輸出端{color[ffff]}{[0001|ffff]}和\n{[0001|1d00]}{color[0400]}破壞物件小節點{color[ffff]}{[0001|ffff]}連接起來！
073	「這就是最後一擊……\n你揮出的拳頭將木箱打得粉碎。」
074	我好想知道喔！\n好想知道計算值{[0001|1d00]}{color[0400]}是不是0{color[ffff]}{[0001|ffff]}！
075	這麼一來，\n出拳3次就能破壞木箱了～
076	來！我們去確認一下吧！
077	請用鍵向木箱出拳3次。
078	做得好！
080	現在{color[0400]}{[0001|1d00]}出拳3次就能破壞{[0001|ffff]}{color[ffff]}木箱了～
081	這樣我們就完成了{color[0400]}{[0001|1d00]}破壞木箱{[0001|ffff]}{color[ffff]}的程式。\n不過……
082	出拳擊中木箱時……\n一點打擊感都沒有呢～
089	我們不妨在遊戲中加入一些\n出拳擊中木箱時的反應，\n讓玩家產生{color[0400]}{[0001|1d00]}「想打破木箱！」{[0001|ffff]}{color[ffff]}的念頭～
090	那麼……\n去程式設計畫面吧！
091	首先我們要讓遊戲\n在{color[0400]}{[0001|1d00]}出拳擊中木箱{[0001|ffff]}{color[ffff]}時\n{color[0400]}{[0001|1d00]}作出反應發出聲音{[0001|ffff]}{color[ffff]}～
092	先從{[0001|1d00]}{color[0400]}播放音效{color[ffff]}{[0001|ffff]}裡\n叫出{color[0400]}{[0001|1d00]}播放聲音小節點{[0001|ffff]}{color[ffff]}，\n把他放到藍色框框裡～
093	打開設定。
094	請選擇{[0001|1d00]}撞擊{[0001|ffff]}裡的{[0001|1d00]}{color[0400]}中度撞擊{color[ffff]}{[0001|ffff]}。
095	OK。\n關閉設定～
096	把{[0001|1d00]}{color[0400]}AND小節點{color[ffff]}{[0001|ffff]}和\n播放聲音小節點的\n{[0001|1d00]}{color[0400]}播放端口{color[ffff]}{[0001|ffff]}連接起來。
097	你想讓遊戲在出拳擊中\n木箱時{color[0400]}{[0001|1d00]}作出反應{[0001|ffff]}{color[ffff]}，對吧？
098	我會～播放～～\n「啪嚓！」的聲音喔～～♪
100	我們去確認一下吧～
101	請用鍵破壞木箱。
103	發出了響亮的聲音呢～！
104	這樣出拳攻擊木箱時就很有打擊感了。
105	還沒結束喔！我們從{color[0400]}{[0001|1d00]}外觀{[0001|ffff]}{color[ffff]}下手，\n讓玩家的打擊感更上一層樓吧！
106	我們要把木箱設計成\n被擊中就會冒出白煙。
107	叫出{[0001|1d00]}{color[0400]}煙霧{color[ffff]}{[0001|ffff]}的{color[0400]}{[0001|1d00]}特效小節點{[0001|ffff]}{color[ffff]}，\n把他放到藍色框框裡。
108	打開設定！
109	把{[0001|1d00]}特效出現的位置{[0001|ffff]}更改為{[0001|1d00]}{color[0400]}空間{color[ffff]}{[0001|ffff]}～
110	把{[0001|1d00]}狀態{[0001|ffff]}的{[0001|1d00]}{color[0400]}能看見{color[ffff]}{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}關閉{color[ffff]}{[0001|ffff]}。
111	OK。\n關閉設定。
112	我來了，你好～～～
116	我會「盲目」地升起白煙！\n你問為什麼？因為被煙「遮住視線」啊～
117	……好！\n我們把特效小節點\n{[0001|1d00]}{color[0400]}連接{color[ffff]}{[0001|ffff]}到時尚物件小節點吧。
118	接著，把{[0001|1d00]}{color[0400]}AND小節點{color[ffff]}{[0001|ffff]}和\n{[0001|1d00]}{color[0400]}特效小節點{color[ffff]}{[0001|ffff]}連接起來。
119	好，這樣出拳擊中木箱時\n應該就會冒煙了！
120	去確認一下吧！
121	用鍵破壞木箱。
122	拳頭一打中木箱就冒起了煙！
125	這充滿魅力的打擊感……\n玩家肯定會忍不住{color[0400]}{[0001|1d00]}「想打破木箱！」{[0001|ffff]}{color[ffff]}呢～
127	這麼一來……\n{color[0400]}{[0001|1d00]}出拳破壞木箱{[0001|ffff]}{color[ffff]}的程式就完成了！
128	那麼，我們回去吧。
129	那麼～～～這樣就～～～～～
130	完成第4步驟了！！！
131	呵呵呵……\n你的破壞方式很有美感呢。
132	恭～喜～你～喔～♪
133	恭喜你。
134	♥打得漂亮♥
136	這次我們設計了出拳\n攻擊3次就會損壞的木箱～
137	而在下個步驟裡，\n我們會設計藏在\n木箱背後的{color[0400]}{[0001|1d00]}暗號{[0001|ffff]}{color[ffff]}！
139	《費了好大一番功夫打破了木箱……\n背後竟藏著一串難以理解的暗號……\n新的謎團擋住了你通往真相之路……》
140	《下回待續……》
141	那麼，\n我們在下個步驟再會囉～
Lesson_SecretRoom_04.msbt
000	{[0201]}，\n等你很久了！
001	我們上次設計了\n{[0001|1d00]}{color[0400]}出拳破壞木箱{color[ffff]}{[0001|ffff]}的程式呢。
002	其實這個木箱……
003	是為了隱藏{color[0400]}{[0001|1d00]}暗號{[0001|ffff]}{color[ffff]}\n才被放在這裡的！
004	而我們這次就是要來\n設計解謎遊戲的重頭戲……\n也就是木箱後面的{[0001|1d00]}{color[0400]}暗號{color[ffff]}{[0001|ffff]}！
005	我們去程式設計畫面吧！
006	這次要製作的暗號～～
007	需要利用到{color[0400]}{[0001|1d00]}骰子的特性{[0001|ffff]}{color[ffff]}！
008	首先請從{[0001|1d00]}四方形時尚物件{[0001|ffff]}裡\n叫出{[0001|1d00]}{color[0400]}骰子{color[ffff]}{[0001|ffff]}的{[0001|1d00]}{color[0400]}時尚物件小節點{color[ffff]}{[0001|ffff]}，\n把他放在木箱後面。
009	切換為{[0001|1d00]}{color[0400]}橫向視角{color[ffff]}{[0001|ffff]}吧。
010	調整為適當的高度。
011	打開設定～
012	把{[0001|1d00]}狀態{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}能看見{color[ffff]}{[0001|ffff]}、{[0001|1d00]}{color[0400]}能接觸{color[ffff]}{[0001|ffff]}。
013	OK。\n關閉設定。
014	「你打壞木箱後，\n發現後面的牆上貼著骰子……」
015	好可疑～～～\n這也太可疑了～！！
017	我們總共要放3顆骰子！
018	{[0001|1d00]}{color[0400]}複製{color[ffff]}骰子{[0001|ffff]}的時尚物件小節點，\n把他放到左下方。
019	再{[0001|1d00]}{color[0400]}複製{color[ffff]}{[0001|ffff]}一次，放到下方～
020	完美！
021	去看看他們的樣子吧！
022	用鍵出拳破壞木箱吧。
023	有3顆骰子貼在牆壁上！
024	現在骰子的點數全都是{color[0400]}{[0001|1d00]}2{[0001|ffff]}{color[ffff]}～
025	這樣可還不能算是暗號喔，\n我們來更改骰子的點數吧！
026	想更改骰子的點數，\n只要更改時尚物件的方向就OK囉！
027	選擇這個時尚物件小節點～
028	打開設定～
029	把{[0001|1d00]}轉動{[0001|ffff]}的{[0001|1d00]}{color[0400]}Y軸{color[ffff]}{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}180.00°{color[ffff]}{[0001|ffff]}。
030	關閉設定。
031	接下來是這個時尚物件小節點～
032	打開設定～
033	把{[0001|1d00]}轉動{[0001|ffff]}的{[0001|1d00]}{color[0400]}Y軸{color[ffff]}{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}90.00°{color[ffff]}{[0001|ffff]}吧。
034	關閉設定。
035	最後是這個時尚物件小節點～
036	打開設定！
037	把{[0001|1d00]}轉動{[0001|ffff]}的{[0001|1d00]}{color[0400]}X軸{color[ffff]}{[0001|ffff]}更改為{[0001|1d00]}{color[0400]}90.00°{color[ffff]}{[0001|ffff]}！
038	關閉設定！
039	這樣每個骰子的點數\n應該就會不同了！
040	我們去看看會變成什麼樣子吧！
041	請用鍵出拳，\n把木箱打個粉碎！
042	骰子的點數變了呢～！
043	5……3……1……
044	只有這三個數字的話，\n根本搞不清楚是什麼暗號呢！
046	我們來繼續設計暗號吧～
047	接下來，我們要在\n暗號中加入立方體！
048	叫出{[0001|1d00]}{color[0400]}立方體{color[ffff]}{[0001|ffff]}物件小節點，\n把他放到藍色框框裡。
049	切換為{[0001|1d00]}{color[0400]}俯瞰視角{color[ffff]}{[0001|ffff]}～
050	調整到適當的位置吧。
051	打開設定～
052	把{[0001|1d00]}狀態{[0001|ffff]}更改為{[0001|1d00]}{color[0400]}能看見{color[ffff]}{[0001|ffff]}、{[0001|1d00]}{color[0400]}能接觸{color[ffff]}{[0001|ffff]}。
053	完美。\n請關閉設定。
054	「從上面數來第一顆骰子的\n點數被人刻意刮去了，\n無法辨別是什麼數字。」
055	調整成骰子的大小，\n還像這樣排在一起，\n看起來就像是一顆骰子呢。
056	接下來切換為{[0001|1d00]}{color[0400]}橫向視角{color[ffff]}{[0001|ffff]}～
057	{color[0400]}{[0001|1d00]}複製{[0001|ffff]}{color[ffff]}物件小節點，\n把他放到藍色框框裡。
058	打開設定。
059	把{[0001|1d00]}顏色{[0001|ffff]}更改為……{[0001|1d00]}{color[0400]}水藍色{color[ffff]}{[0001|ffff]}！
060	OK。\n關閉設定～
061	「骰子旁邊貼著一個水藍色方塊……\n這顏色……好像有在哪裡看到過……」
062	這個{[0001|1d00]}{color[0400]}顏色{color[ffff]}{[0001|ffff]}會不會\n有什麼{[0001|1d00]}{color[0400]}特殊含意{color[ffff]}{[0001|ffff]}呢？
063	好，這樣暗號就完成了。
064	我們去看看暗號長什麼樣子吧！
065	用鍵破壞木箱！
067	這就是藏在木箱後面的{color[0400]}{[0001|1d00]}暗號{[0001|ffff]}{color[ffff]}！
068	嗯……
069	如何？\n你有想到……暗號的謎底嗎？
070	我會在下個步驟中\n公布{[0001|1d00]}{color[0400]}暗號的謎底{color[ffff]}{[0001|ffff]}……
071	在那之前，\n請你先試著挑戰解開暗號！
077	確認好暗號之後，\n就回程式設計畫面吧。
078	那麼～～～這樣就～～～～～
079	完成第5步驟了！！！
080	♥放得漂亮♥
081	♥恭喜你～♥
082	我好像知道謎底了。
083	好想知道謎底是什麼喔。
084	這次我們把骰子和\n立方體組合起來，\n製作了一個暗號～！
086	在下個步驟裡，\n我們將會設計{[0001|1d00]}{color[0400]}牆壁裝置的機關{color[ffff]}{[0001|ffff]}！
087	到時候還會公布{color[0400]}{[0001|1d00]}暗號的謎底{[0001|ffff]}{color[ffff]}喔！！
088	《隨著按鍵的起落，數字不斷地增加……\n輸入暗號的謎底後，又會發生什麼事呢？\n懷抱著這樣的想法，你嘗試解開暗號……》
089	《下回待續……》
090	那麼，\n我們在下個步驟再會囉～
Lesson_SecretRoom_05.msbt
000	{[0201]}，\n你來啦！
001	我們上次設計了{[0001|1d00]}{color[0400]}隱藏的暗號{color[ffff]}{[0001|ffff]}呢。
002	請用鍵出拳破壞木箱。
003	沒錯！\n就是用骰子組成的暗號！
004	你猜到暗號的謎底了嗎？
005	這次我們要設計的是\n當玩家按下牆上的按鍵時，\n{[0001|1d00]}{color[0400]}牆壁裝置{color[ffff]}{[0001|ffff]}的數字就會增加的程式……
006	還有用來{color[0400]}{[0001|1d00]}確認{[0001|ffff]}{color[ffff]}輸入的數字\n是否正確的程式！
012	那麼，我們去程式設計畫面吧～！
014	說到計算……\n就得叫出{[0001|1d00]}{color[0400]}計數器小節點{color[ffff]}{[0001|ffff]}了。\n把他放到藍色框框裡吧～
015	打開設定。
016	把{[0001|1d00]}模式{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}循環{color[ffff]}{[0001|ffff]}。
017	把{[0001|1d00]}計算範圍{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}0{color[ffff]}{[0001|ffff]}到{[0001|1d00]}{color[0400]}100{color[ffff]}{[0001|ffff]}～
018	把{[0001|1d00]}計算的時機{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}從0改變時{color[ffff]}{[0001|ffff]}。
019	OK。\n關閉設定～
020	「嗶……你伸手按下牆上的按鍵，\n裝置顯示的數字變成了01。」
021	你想要我計算按鍵\n被按下的次數對吧。
022	把{[0001|1d00]}{color[0400]}計數器小節點{color[ffff]}{[0001|ffff]}和\n{[0001|1d00]}{color[0400]}附數字物件小節點{color[ffff]}{[0001|ffff]}連接起來吧。
023	接下來，我們要確認牆上的按鍵……\n也就是{color[0400]}{[0001|1d00]}圓柱體{[0001|ffff]}{color[ffff]}有沒有被拳頭擊中。
024	因為我們想確認的是{color[0400]}{[0001|1d00]}人的前面有沒有圓柱體{[0001|ffff]}{color[ffff]}～
025	所以叫出{[0001|1d00]}{color[0400]}接觸感應器小節點{color[ffff]}{[0001|ffff]}，\n把他放到藍色框框裡吧。
026	打開設定～
027	把{[0001|1d00]}狀態{[0001|ffff]}的{[0001|1d00]}{color[0400]}能看見{color[ffff]}{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}關閉{color[ffff]}{[0001|ffff]}。
028	打開{[0001|1d00]}{color[0400]}連接面{color[ffff]}{[0001|ffff]}，\n把{[0001|1d00]}自己的連接面{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}Z+{color[ffff]}{[0001|ffff]}，\n{[0001|1d00]}連接對象的連接面{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}Z-{color[ffff]}{[0001|ffff]}。
029	關閉詳細畫面～
030	把{[0001|1d00]}{color[0400]}要確認什麼？{color[ffff]}{[0001|ffff]}設定為只有{[0001|1d00]}{color[0400]}圓柱體{color[ffff]}{[0001|ffff]}。
031	完美。\n請關閉設定。
032	把接觸感應器小節點\n{[0001|1d00]}{color[0400]}連接{color[ffff]}{[0001|ffff]}到人小節點吧。
033	接下來～\n我們要確認{color[0400]}{[0001|1d00]}人有沒有出拳{[0001|ffff]}{color[ffff]}。
034	叫出{[0001|1d00]}{color[0400]}{color[ffff]}{[0001|ffff]}的按鍵小節點，\n把他放到藍色框框裡吧。
035	我們需要確認{color[0400]}{[0001|1d00]}接觸感應器小節點{[0001|ffff]}{color[ffff]}\n和{color[0400]}{[0001|1d00]}按鍵小節點{[0001|ffff]}{color[ffff]}有沒有{[0001|1d00]}{color[0400]}同時{color[ffff]}{[0001|ffff]}輸出訊號！
036	叫出{[0001|1d00]}{color[0400]}AND小節點{color[ffff]}{[0001|ffff]}，\n把他放到藍色框框裡。
037	把{[0001|1d00]}{color[0400]}接觸感應器小節點{color[ffff]}{[0001|ffff]}和\nAND小節點的{[0001|1d00]}{color[0400]}輸入1端口{color[ffff]}{[0001|ffff]}連接起來吧。
038	接著把{[0001|1d00]}{color[0400]}按鍵小節點{color[ffff]}{[0001|ffff]}和\nAND小節點的{[0001|1d00]}{color[0400]}輸入2端口{color[ffff]}{[0001|ffff]}連接起來～
039	最後把AND小節點的{[0001|1d00]}{color[0400]}輸出端\n{color[ffff]}{[0001|ffff]}連接到計數器小節點的{[0001|1d00]}{color[0400]}增加端口{color[ffff]}{[0001|ffff]}！
040	「嗶、嗶、嗶……\n每按下一次按鍵，裝置的數值就會增加。」
043	好了！\n這樣當你按下牆上的按鍵時，\n裝置的數值應該就會增加了！
044	我們去確認看看\n裝置有沒有正常運作吧。
045	試著用鍵出拳，\n按下{color[0400]}{[0001|1d00]}牆上的按鍵{[0001|ffff]}{color[ffff]}。
046	完美！\n按下按鍵後，牆壁裝置的數值就增加了呢！
047	不過……\n這個按鍵沒有碰到時的手感，\n很難知道自己是否有按到呢～
048	我們希望按下按鍵時\n能夠播放聲音！
049	來幫他配上聲音吧～
050	從{[0001|1d00]}{color[0400]}播放音效{color[ffff]}{[0001|ffff]}裡叫出{[0001|1d00]}{color[0400]}播放聲音小節點{color[ffff]}{[0001|ffff]}，\n把他放到藍色框框裡～
051	打開播放聲音小節點的設定！
052	選擇{[0001|1d00]}系統音效{[0001|ffff]}裡的{[0001|1d00]}{color[0400]}點擊{color[ffff]}{[0001|ffff]}。
053	OK。\n關閉設定。
054	把{[0001|1d00]}{color[0400]}AND小節點{color[ffff]}{[0001|ffff]}連接到\n播放聲音小節點的{[0001|1d00]}{color[0400]}播放端口{color[ffff]}{[0001|ffff]}吧。
055	這樣按下按鍵時\n就會播放聲音了！
056	那麼，我們再去按一次按鍵吧。
057	請試著用鍵\n按下牆壁裝置～！
058	嗶嗶嗶～
059	有了聲音，\n只是按著玩也很有趣呢！
060	那麼，這個裝置……\n到底是用來做什麼的呢……？
061	其實……\n他是用來輸入謎底的裝置喔！
062	所以，接下來我們終於要開始設計\n{[0001|1d00]}{color[0400]}確認輸入的謎底是否正確{color[ffff]}{[0001|ffff]}的程式囉！
063	如果你還沒解開暗號的謎底……\n現在可是最後機會囉～！
064	當你準備好揭開謎底時，\n就到程式設計畫面去吧！
065	那麼……我們來設計\n{[0001|1d00]}{color[0400]}確認輸入的謎底是否正確{color[ffff]}{[0001|ffff]}的程式吧。
066	要確認輸入的謎底是否正確，\n也就是說要確認{color[0400]}{[0001|1d00]}裝置的數值\n和暗號謎底的數值是否相同{[0001|ffff]}{color[ffff]}……
068	叫出{[0001|1d00]}{color[0400]}＝{color[ffff]}{[0001|ffff]}的{color[0400]}{[0001|1d00]}比較小節點{[0001|ffff]}{color[ffff]}，\n把他放到藍色框框裡吧！
069	接著叫出{[0001|1d00]}{color[0400]}常數小節點{color[ffff]}{[0001|ffff]}，\n把他放到藍色框框裡。
069-01	我們在這個常數小節點裡\n設定{color[0400]}{[0001|1d00]}暗號謎底的數值{[0001|ffff]}{color[ffff]}吧！
070	如果你做好揭開謎底的心理準備了，\n請打開設定。
074	那麼……\n把{[0001|1d00]}要輸出多少？{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}26.00{color[ffff]}{[0001|ffff]}。
075	也就是說……\n暗號的謎底就是……\n{color[0400]}{[0001|1d00]}26{[0001|ffff]}{color[ffff]}！
076	我之後會再詳細地跟你說明，\n現在先專注在程式設計上吧～
077	那麼……\n請關閉設定。
078	「沒錯，暗號的答案就是26……\n你在心中對自己這樣說著，\n並在裝置上輸入了這個數字。」
079	是26對吧？\n我知道了。\n暗號的謎底是26。
080	把{[0001|1d00]}{color[0400]}計數器小節點{color[ffff]}{[0001|ffff]}和比較小節點的\n{[0001|1d00]}{color[0400]}輸入1端口{color[ffff]}{[0001|ffff]}連接起來～
081	接著把{[0001|1d00]}{color[0400]}常數小節點{color[ffff]}{[0001|ffff]}和比較小節點的\n{[0001|1d00]}{color[0400]}輸入2端口{color[ffff]}{[0001|ffff]}連接起來。
084	接下來……\n我們來設計答對謎底時，\n會{color[0400]}{[0001|1d00]}播放聲音{[0001|ffff]}{color[ffff]}的程式吧。
085	從{[0001|1d00]}{color[0400]}播放音效{color[ffff]}{[0001|ffff]}裡\n叫出{color[0400]}{[0001|1d00]}播放聲音小節點{[0001|ffff]}{color[ffff]}，\n把他放到藍色框框裡～
086	把比較小節點的{[0001|1d00]}{color[0400]}輸出端{color[ffff]}{[0001|ffff]}和\n播放聲音小節點的{[0001|1d00]}{color[0400]}播放端口{color[ffff]}{[0001|ffff]}連接起來。
087	「仿佛是祝福一般……\n裝置裡傳出了響亮的鈴聲……」
089	叮咚——————！！！
090	這樣一來，當裝置的數值為26時，\n就會響起答對的音效！
091	那麼來確認一下吧～\n我也會順便說明暗號的解法喔！
092	請用鍵出拳按下牆上的按鍵，\n讓裝置的數值顯示為{[0001|1d00]}{color[0400]}26{color[ffff]}{[0001|ffff]}。
093	叮咚！
096	這樣我們就能{color[0400]}{[0001|1d00]}確認{[0001|ffff]}{color[ffff]}\n輸入的謎底是否正確了！
098	接下來是大家期待多時～\n最想知道的{color[0400]}{[0001|1d00]}暗號的解法{[0001|ffff]}{color[ffff]}！
099	請破壞木箱。
100	首先，請仔細看這個{color[0400]}{[0001|1d00]}暗號的形狀{[0001|ffff]}{color[ffff]}。
102	這其實是骰子被切開的形狀……\n也就是骰子的展開圖！
107	沒有點數的白色部分\n隱藏著1個數字……
108	而{color[0400]}{[0001|1d00]}水藍色部分{[0001|ffff]}{color[ffff]}則\n隱藏著{color[0400]}{[0001|1d00]}2個{[0001|ffff]}{color[ffff]}數字。
109	然後是裝置上的{color[0400]}{[0001|1d00]}水藍色方塊{[0001|ffff]}{color[ffff]}……\n他的數字也是2位數。
110	也就是說！\n只要輸入{color[0400]}{[0001|1d00]}隱藏在暗號中\n水藍色部分的數字{[0001|ffff]}{color[ffff]}就可以了！
113	那麼，水藍色部分的2個數字\n究竟是哪兩個呢！？
114	我們可以看見1、3、5的點數，\n所以他們應該是其他數字……\n也就是{color[0400]}{[0001|1d00]}2、4、6{[0001|ffff]}{color[ffff]}當中的數字。
116	接下來，只要利用{color[0400]}{[0001|1d00]}骰子的特性{[0001|ffff]}{color[ffff]}，\n我們就能知道每一面的點數囉！
118	其實骰子有一個特性……\n正反兩面的點數相加時，\n一定會得出{color[0400]}{[0001|1d00]}7{[0001|ffff]}{color[ffff]}。
119	{color[0400]}{[0001|1d00]}1{[0001|ffff]}{color[ffff]}的背面是{color[0400]}{[0001|1d00]}6{[0001|ffff]}{color[ffff]}，\n{color[0400]}{[0001|1d00]}2{[0001|ffff]}{color[ffff]}的背面是{color[0400]}{[0001|1d00]}5{[0001|ffff]}{color[ffff]}，\n{color[0400]}{[0001|1d00]}3{[0001|ffff]}{color[ffff]}的背面是{color[0400]}{[0001|1d00]}4{[0001|ffff]}{color[ffff]}。
120	把骰子組合起來時，\n這裡會是{color[0400]}{[0001|1d00]}3{[0001|ffff]}{color[ffff]}的背面～
121	所以點數是{color[0400]}{[0001|1d00]}4{[0001|ffff]}{color[ffff]}。
122	這裡是{color[0400]}{[0001|1d00]}5{[0001|ffff]}{color[ffff]}的背面～
123	所以點數是{color[0400]}{[0001|1d00]}2{[0001|ffff]}{color[ffff]}……
124	然後，這裡是{color[0400]}{[0001|1d00]}1{[0001|ffff]}{color[ffff]}的背面……
125	所以點數是{color[0400]}{[0001|1d00]}6{[0001|ffff]}{color[ffff]}！
126	也就是說～\n水藍色部分的2個數字就是……\n{color[0400]}{[0001|1d00]}2{[0001|ffff]}{color[ffff]}和{color[0400]}{[0001|1d00]}6{[0001|ffff]}{color[ffff]}！
128	所以謎底就是{[0001|1d00]}{color[0400]}26{color[ffff]}{[0001|ffff]}！！
129	以上就是暗號的解法～～
130	{[0201]}，\n如果有朋友來玩這個遊戲，\n你也可以像這樣充滿自信地替他講解喔！
131	話說回來……這個程式就算在\n{color[0400]}{[0001|1d00]}不破壞木箱的情況下{[0001|ffff]}{color[ffff]}直接輸入26，\n也會判定玩家答對。
133	{color[0400]}{[0001|1d00]}沒發現到暗號{[0001|ffff]}{color[ffff]}就答對，\n這樣也太無聊了吧～
138	我們來把程式設計成\n{color[0400]}{[0001|1d00]}必須要先破壞掉木箱\n{[0001|ffff]}{color[ffff]}才會判定玩家答對吧～
139	首先，我們需要確認\n{color[0400]}{[0001|1d00]}木箱有沒有損壞{[0001|ffff]}{color[ffff]}。
140	這是我們在第4步驟\n設計的破壞木箱程式。
141	這個比較小節點\n{color[0400]}{[0001|1d00]}在木箱損壞之後\n會一直輸出訊號{[0001|ffff]}{color[ffff]}～～
142	所以我們可以用他來\n確認{color[0400]}{[0001|1d00]}木箱有沒有損壞{[0001|ffff]}{color[ffff]}！
143	叫出{[0001|1d00]}{color[0400]}無線傳送入口小節點{color[ffff]}{[0001|ffff]}，\n把他放到藍色框框裡。
144	把{[0001|1d00]}{color[0400]}比較小節點{color[ffff]}{[0001|ffff]}和\n{[0001|1d00]}{color[0400]}無線傳送入口小節點{color[ffff]}{[0001|ffff]}連接起來吧。
145	這裡是入口A，\n我會傳達木箱的損壞情形！\n請講！
146	叫出{[0001|1d00]}{color[0400]}無線傳送出口小節點{color[ffff]}{[0001|ffff]}，\n把他放到藍色框框裡。
147	這裡是出口A，\n我會傳達木箱的損壞情形！\n請講！
148	這樣我們就能確認\n{color[0400]}{[0001|1d00]}木箱有沒有損壞{[0001|ffff]}{color[ffff]}了！
150	接下來，我們要讓程式同時{color[0400]}{[0001|1d00]}確認兩個條件{[0001|ffff]}{color[ffff]}……\n「木箱有沒有損壞」和「裝置的數值是否為26」！
151	叫出{[0001|1d00]}{color[0400]}AND小節點{color[ffff]}{[0001|ffff]}，\n把他放到藍色框框裡。
152	刪除這條配對線。
153	拜拜！
154	把{[0001|1d00]}{color[0400]}無線傳送出口小節點{color[ffff]}{[0001|ffff]}和\nAND小節點的{[0001|1d00]}{color[0400]}輸入2端口{color[ffff]}{[0001|ffff]}連接起來吧。
155	由於這個比較小節點會確認\n{color[0400]}{[0001|1d00]}裝置的數值是否為26{[0001|ffff]}{color[ffff]}～
156	所以把比較小節點的{[0001|1d00]}{color[0400]}輸出端{color[ffff]}{[0001|ffff]}和\nAND小節點的{[0001|1d00]}{color[0400]}輸入1端口{color[ffff]}{[0001|ffff]}連接起來吧。
157	裝置的數值是否為26，沒問題！\n木箱有沒有損壞，沒問題！
158	當兩邊的訊號傳來時，\n就代表答對了！
160	那麼……\n把AND小節點的{[0001|1d00]}{color[0400]}輸出端{color[ffff]}{[0001|ffff]}連接到\n播放聲音小節點的{[0001|1d00]}{color[0400]}播放端口{color[ffff]}{[0001|ffff]}吧。
161	好了，這麼一來……\n程式就會在木箱被破壞後，\n才判定玩家答對！
162	我們去親眼確認一下吧～
163	請試著{color[0400]}{[0001|1d00]}不要破壞木箱{[0001|ffff]}{color[ffff]}，\n{color[0400]}{[0001|1d00]}先按下{[0001|ffff]}{color[ffff]}牆壁裝置{color[0400]}{[0001|1d00]}26次{[0001|ffff]}{color[ffff]}。
164	我不是說{color[0400]}{[0001|1d00]}不要破壞木箱{[0001|ffff]}{color[ffff]}嗎……？
164-01	請重來一遍。
165	完美，\n什麼事都沒發生呢！
167	可以請你重來一次嗎？
168	這次請試著{color[0400]}{[0001|1d00]}在破壞木箱後{[0001|ffff]}{color[ffff]}，\n按下牆壁裝置26次。
169	響起了答對的音效！
173	這麼一來！！\n{color[0400]}{[0001|1d00]}解謎的部分{[0001|ffff]}{color[ffff]}就全部完成了！！！
174	請到程式設計畫面！
175	好了～～～這樣就～～～～～
176	完成第6步驟了！！！
177	恭喜你完成了這個步驟。
178	恭……喜你！
179	好想知道喔……\n解開謎題後會發生什麼事啊！？
180	♫恭～喜～你～♪
181	這次我們設計了程式，\n讓玩家能透過牆壁裝置\n輸入暗號的謎底！
184	在下個步驟裡，\n我們終於要開始設計\n解開謎題後{[0001|1d00]}{color[0400]}開啟隱藏門的程式{color[ffff]}{[0001|ffff]}！
185	《牆壁一分為二，\n看似沉重的隱藏門被緩緩地開啟……\n你緊張地吞了吞口水，靜靜地看著這一切……》
186	《下回待續……》
187	那麼，\n我們在下個步驟再會囉～
Lesson_SecretRoom_06.msbt
000	歡迎來到……\n解謎房間的第7步驟。
001	我們上次設計了\n{color[0400]}{[0001|1d00]}牆壁裝置的機關{[0001|ffff]}{color[ffff]}呢。
005	而這次……！\n我們要設計讓隱藏門\n可以{[0001|1d00]}{color[0400]}自動打開的程式{color[ffff]}{[0001|ffff]}！
006	現在隱藏門是被設計成\n可以用操控搖桿打開～
007	我們要把隱藏門改為\n在{color[0400]}{[0001|1d00]}解開謎題後{[0001|ffff]}{color[ffff]}會{color[0400]}{[0001|1d00]}自動打開{[0001|ffff]}{color[ffff]}！
008	至於門打開時的動作，\n我打算分為{color[0400]}{[0001|1d00]}兩段式動作{[0001|ffff]}{color[ffff]}……
009	在解開謎題後……\n讓門先{color[0400]}{[0001|1d00]}向後移動{[0001|ffff]}{color[ffff]}再{color[0400]}{[0001|1d00]}橫向滑動{[0001|ffff]}{color[ffff]}～！
010	那麼……我們開始設計程式吧！
011	先跟連接自由滑動連接小節點的\n{color[0400]}{[0001|1d00]}操控搖桿小節點{[0001|ffff]}{color[ffff]}們說再見吧。
012	跟{[0001|1d00]}{color[0400]}左右的操控搖桿小節點{color[ffff]}{[0001|ffff]}說再見。
013	接著跟{[0001|1d00]}{color[0400]}上下的操控搖桿小節點{color[ffff]}{[0001|ffff]}說再見～
014	那麼，門會在解開謎題時……\n也就是當{color[0400]}{[0001|1d00]}木箱損壞{[0001|ffff]}{color[ffff]}且{color[0400]}{[0001|1d00]}裝置的\n數值與暗號謎底相同{[0001|ffff]}{color[ffff]}時打開！
014-01	此時會輸出訊號的\n是這個{color[0400]}{[0001|1d00]}AND小節點{[0001|ffff]}{color[ffff]}……
015	所以，我們就把程式設計成當這個\n{color[0400]}{[0001|1d00]}AND小節點輸出訊號時讓門移動{[0001|ffff]}{color[ffff]}吧！
017	為了處理這個複雜的程式……\n我們要使用{color[0400]}{[0001|1d00]}無線傳送{[0001|ffff]}{color[ffff]}。
018	叫出{[0001|1d00]}{color[0400]}無線傳送入口小節點{color[ffff]}{[0001|ffff]}，\n把他放到藍色框框裡。
019	打開設定～
020	把{[0001|1d00]}傳送ID{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}B{color[ffff]}{[0001|ffff]}。
021	OK。\n關閉設定。
022	接著，把{[0001|1d00]}{color[0400]}AND小節點{color[ffff]}{[0001|ffff]}和\n{[0001|1d00]}{color[0400]}無線傳送入口小節點{color[ffff]}{[0001|ffff]}連接起來。
023	這裡是入口B，\n我會傳達「解開謎題了」的訊號！\n請講！
024	那麼，為了設計門的動作，\n我們移動到空白的地方吧。
025	叫出{[0001|1d00]}{color[0400]}無線傳送出口小節點{color[ffff]}{[0001|ffff]}，\n把他放到藍色框框裡。
026	打開設定。
027	把{[0001|1d00]}傳送ID{[0001|ffff]}更改為{[0001|1d00]}{color[0400]}B{color[ffff]}{[0001|ffff]}。
028	OK。\n關閉設定吧！
029	這裡是出口B，\n我會傳達「解開謎題了」的訊號！\n請講！
030	那麼首先……\n我們來設計讓隱藏門向{color[0400]}{[0001|1d00]}後方{[0001|ffff]}{color[ffff]}……\n也就是向{color[0400]}{[0001|1d00]}X方向{[0001|ffff]}{color[ffff]}移動的程式吧！
032	叫出{[0001|1d00]}{color[0400]}計數器小節點{color[ffff]}{[0001|ffff]}，\n把他放到藍色框框裡。
033	打開設定～
034	把{[0001|1d00]}模式{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}範圍限制{color[ffff]}{[0001|ffff]}吧。
035	把{[0001|1d00]}計算範圍{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}0{color[ffff]}{[0001|ffff]}到{[0001|1d00]}{color[0400]}60{color[ffff]}{[0001|ffff]}。
036	完美。\n關閉設定吧。
037	把{[0001|1d00]}{color[0400]}無線傳送出口小節點{color[ffff]}{[0001|ffff]}和\n計數器小節點的{[0001|1d00]}{color[0400]}增加端口{color[ffff]}{[0001|ffff]}連接起來。
038	我會從0數到60。
039	接著要把{color[0400]}{[0001|1d00]}計算值{[0001|ffff]}{color[ffff]}轉換為\n隱藏門要移動的{color[0400]}{[0001|1d00]}距離{[0001|ffff]}{color[ffff]}～
040	叫出{color[0400]}{[0001|1d00]}定位小節點{[0001|ffff]}{color[ffff]}，\n把他放到藍色框框裡。
041	……你確定真的要……\n……打開隱藏門嗎～？
042	居然想曝露別人的秘密……\n呵呵呵……你真是個愛硬來的人呢～
043	……呃～\n打開設定吧。
044	把{[0001|1d00]}輸入範圍{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}0.00{color[ffff]}{[0001|ffff]}到{[0001|1d00]}{color[0400]}60.00{color[ffff]}{[0001|ffff]}～
045	接著把{[0001|1d00]}輸出範圍{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}0.00{color[ffff]}{[0001|ffff]}到{[0001|1d00]}{color[0400]}0.30{color[ffff]}{[0001|ffff]}。
046	OK。\n關閉設定。
047	把計數器小節點的{[0001|1d00]}{color[0400]}輸出端{color[ffff]}{[0001|ffff]}和\n定位小節點的{[0001|1d00]}{color[0400]}輸入端{color[ffff]}{[0001|ffff]}連接起來。
048	這樣計數器小節點的計算值就會\n轉換為隱藏門要移動的距離了！
049	我們來把這個轉換結果\n傳達給{[0001|1d00]}{color[0400]}自由滑動連接小節點{color[ffff]}{[0001|ffff]}吧～
050	叫出{[0001|1d00]}{color[0400]}無線傳送入口小節點{color[ffff]}{[0001|ffff]}，\n把他放到定位小節點的旁邊。
051	打開設定。
052	把{[0001|1d00]}傳送ID{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}X{color[ffff]}{[0001|ffff]}。
052-01	這個無線傳送的作用是傳達向{[0001|1d00]}{color[0400]}X方向{color[ffff]}{[0001|ffff]}移動的訊號，\n所以把他的{[0001|1d00]}傳送ID{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}X{color[ffff]}{[0001|ffff]}，\n我們在設計程式時就可以一目了然！
052-02	所以，以後如果遇到類似的情況，\n建議你可以把{color[0400]}{[0001|1d00]}傳送ID設定為{[0001|ffff]}{color[ffff]}拼音\n或英文字首等{color[0400]}{[0001|1d00]}容易理解的文字{[0001|ffff]}{color[ffff]}喔！
053	關閉設定吧。
054	把{[0001|1d00]}{color[0400]}定位小節點{color[ffff]}{[0001|ffff]}和\n{[0001|1d00]}{color[0400]}無線傳送入口小節點{color[ffff]}{[0001|ffff]}連接起來。
055	這裡是入口X，\n我會傳達轉換後的距離！\n請講！
056	叫出{[0001|1d00]}{color[0400]}無線傳送出口小節點{color[ffff]}{[0001|ffff]}，\n把他放到藍色框框裡～
057	打開設定！
058	把{[0001|1d00]}傳送ID{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}X{color[ffff]}{[0001|ffff]}。
059	那麼～\n請關閉設定。
060	這裡是出口X，\n我會傳達轉換後的距離！\n請講！
061	把無線傳送出口小節點連接到\n自由滑動連接小節點的{[0001|1d00]}{color[0400]}X端口{color[ffff]}{[0001|ffff]}吧。
068-00	這麼一來……\n當謎題被解開後，\n門就會向X方向移動！
068	我們去看看門會怎樣動吧～
069	請先破壞木箱，\n然後把牆壁裝置的數值調為26。
070	如果不小心按太多次讓數值超過26，\n你可以選擇重來，或是繼續按下去\n直到裝置循環一周後停在26喔。
073	隱藏門稍微移動了一些！
075	還沒完成喔……！\n這只是準備動作而已！
076	接著我們來設計\n讓門橫向滑動的動作吧！
077	去程式設計畫面～
078	在繼續設計之前……
079	每次我們想確認時都要\n在裝置上重新輸入數字，\n這實在是太麻煩了……
080	所以我們先暫時修改一下程式，\n讓{color[0400]}{[0001|1d00]}門{[0001|ffff]}{color[ffff]}在遊戲開始時{color[0400]}{[0001|1d00]}馬上打開{[0001|ffff]}{color[ffff]}吧！
081	叫出{[0001|1d00]}{color[0400]}常數小節點{color[ffff]}{[0001|ffff]}，\n把他放到藍色框框裡。
082	把{[0001|1d00]}{color[0400]}常數小節點{color[ffff]}{[0001|ffff]}連接到\n計數器小節點的{[0001|1d00]}{color[0400]}增加端口{color[ffff]}{[0001|ffff]}吧。
082-01	你好！我會向計數器小節點\n持續傳送永恆不變的訊號！
082-02	這樣當遊戲開始時，\n門就會馬上打開了，\n確認時會輕鬆許多！
083	{color[0400]}{[0001|1d00]}多花點心思就能提升開發效率{[0001|ffff]}{color[ffff]}……\n……你可要記住囉！
084	我們去看看會變成什麼樣子吧。
085	門馬上就打開了！
086	這樣開發效率就大大提升囉！
087	那麼，我們回去設計剩下的部分吧。
088	接下來我們要設計\n讓隱藏門向Z方向……\n也就是{[0001|1d00]}{color[0400]}橫向滑動的動作{color[ffff]}{[0001|ffff]}！
089	我們想讓隱藏門\n{color[0400]}{[0001|1d00]}先向後移動{[0001|ffff]}{color[ffff]}再橫向移動～
090	所以首先得確認\n門向後移動的動作是否結束了。
091	叫出{[0001|1d00]}{color[0400]}＝{color[ffff]}{[0001|ffff]}的{color[0400]}{[0001|1d00]}比較小節點{[0001|ffff]}{color[ffff]}，\n把他放到藍色框框裡。
092	接著叫出{[0001|1d00]}{color[0400]}常數小節點{color[ffff]}{[0001|ffff]}，\n把他放到藍色框框裡！
093	打開設定～
094	把{[0001|1d00]}要輸出多少？{[0001|ffff]}\n設定為{[0001|1d00]}{color[0400]}60.00{color[ffff]}{[0001|ffff]}吧。
095	好～\n請關閉設定。
096	把計數器小節點的{[0001|1d00]}{color[0400]}輸出端{color[ffff]}{[0001|ffff]}和\n比較小節點的{[0001|1d00]}{color[0400]}輸入1端口{color[ffff]}{[0001|ffff]}連接起來。
097	接著把這邊的{[0001|1d00]}{color[0400]}常數小節點{color[ffff]}{[0001|ffff]}連接到\n比較小節點的{[0001|1d00]}{color[0400]}輸入{[0001|1a00]}2{[0001|1d00]}端口{color[ffff]}{[0001|ffff]}～
098	計數器小節點有沒有數到60？\n這的確很讓人好奇呢！！
100	接下來，我們來設計\n{color[0400]}{[0001|1d00]}橫向滑動的動作{[0001|ffff]}{color[ffff]}吧。
101	叫出{[0001|1d00]}{color[0400]}計數器小節點{color[ffff]}{[0001|ffff]}，\n把他放到藍色框框裡。
102	打開設定。
103	把{[0001|1d00]}模式{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}範圍限制{color[ffff]}{[0001|ffff]}。
104	把{[0001|1d00]}計算範圍{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}0{color[ffff]}{[0001|ffff]}到{[0001|1d00]}{color[0400]}180{color[ffff]}{[0001|ffff]}。
104-01	剛才的計數器小節點是0到60，\n也就是說這次的計算會花費他{color[0400]}{[0001|1d00]}3倍的時間{[0001|ffff]}{color[ffff]}。
105	那麼，請關閉設定。
106	把比較小節點的{[0001|1d00]}{color[0400]}輸出端{color[ffff]}{[0001|ffff]}和\n計數器小節點的{[0001|1d00]}{color[0400]}增加端口{color[ffff]}{[0001|ffff]}連接起來。
107	我會從0數到180。
108	當那邊的計數器小節點{[0001|1d00]}{color[0400]}計算完畢{color[ffff]}{[0001|ffff]}，\n我才會開始計算。
110	那麼來把{color[0400]}{[0001|1d00]}計算值{[0001|ffff]}{color[ffff]}轉換為移動{color[0400]}{[0001|1d00]}距離{[0001|ffff]}{color[ffff]}吧。
111	叫出{[0001|1d00]}{color[0400]}定位小節點{color[ffff]}{[0001|ffff]}，\n把他放到計數器小節點的旁邊！
112	打開設定。
113	把{[0001|1d00]}輸入範圍{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}0.00{color[ffff]}{[0001|ffff]}到{[0001|1d00]}{color[0400]}180.00{color[ffff]}{[0001|ffff]}～
114	接著把{[0001|1d00]}輸出範圍{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}-3.20{color[ffff]}{[0001|ffff]}到{[0001|1d00]}{color[0400]}0.00{color[ffff]}{[0001|ffff]}。
115	最後按下{color[0400]}{[0001|0700]}{[0001|ffff]}{color[ffff]}，\n把定位的方向{[0001|1d00]}{color[0400]}顛倒{color[ffff]}{[0001|ffff]}過來！
117	這樣當輸入為{color[0400]}{[0001|1d00]}0.00{[0001|ffff]}{color[ffff]}時就會輸出{color[0400]}{[0001|1d00]}0.00{[0001|ffff]}{color[ffff]}，\n而輸入為{color[0400]}{[0001|1d00]}180.00{[0001|ffff]}{color[ffff]}時就會輸出{color[0400]}{[0001|1d00]}-3.20{[0001|ffff]}{color[ffff]}了。
119	那麼關閉設定吧。
120	接下來，請把計數器小節點的{[0001|1d00]}{color[0400]}輸出端{color[ffff]}{[0001|ffff]}\n和定位小節點的{[0001|1d00]}{color[0400]}輸入端{color[ffff]}{[0001|ffff]}連接起來。
121	啊～～秘密快要被曝露出來了～～
122	我們把轉換後的結果\n傳達給{[0001|1d00]}{color[0400]}自由滑動連接小節點{color[ffff]}{[0001|ffff]}吧。
123	叫出{[0001|1d00]}{color[0400]}無線傳送入口小節點{color[ffff]}{[0001|ffff]}，\n把他放到旁邊！
124	打開他的設定……
125	我們要讓門向Z方向移動……\n為了方便理解，就把{[0001|1d00]}傳送ID{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}Z{color[ffff]}{[0001|ffff]}吧。
126	做得好。\n關閉設定吧。
127	接著，請把{[0001|1d00]}{color[0400]}定位小節點{color[ffff]}{[0001|ffff]}和\n{[0001|1d00]}{color[0400]}無線傳送入口小節點{color[ffff]}{[0001|ffff]}連接起來。
128	這裡是入口Z，\n我會傳達Z方向的距離！\n請講！
129	叫出{[0001|1d00]}{color[0400]}無線傳送出口小節點{color[ffff]}{[0001|ffff]}，\n把他放到藍色框框裡。
130	打開設定～
131	把{[0001|1d00]}傳送ID{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}Z{color[ffff]}{[0001|ffff]}。
132	OK！\n關閉設定！
133	這裡是出口Z，\n我會傳達Z方向的距離！\n請講！
134	把無線傳送出口小節點連接到\n自由滑動連接小節點的{[0001|1d00]}{color[0400]}Z端口{color[ffff]}{[0001|ffff]}。
135	「彷彿是為了炫耀其存在一般，\n密室的門徐徐地打開了……」
136	啊，你設計好門的動作啦？
137	嗯，那就去遊戲畫面\n欣賞我工作的英姿吧。
138	好！我們去看看吧！
142	完美！\n隱藏門現在會自動打開了～～！
144	兩段式的開門動作，\n看起來很帥呢～～！！
145	等你看夠了，\n就到程式設計畫面來吧。
146	那麼～～～這樣就～～～～～
147	完成第7步驟了！！！
148	你挺厲害的嘛。
149	恭喜你～
150	恭喜你！\n請講。
151	恭喜你完成了這個步驟。
152	這次～\n我們設計了讓隱藏門\n帥氣地自動打開的程式～
153	在下個步驟裡，\n我們會讓隱藏門的動作\n{[0001|1d00]}{color[0400]}變得更加帥氣{color[ffff]}{[0001|ffff]}！
154	為了讓解謎遊戲能迎接精彩大結局，\n我們一定要設計出超帥氣的動作喔～！
155	《伴隨著門的開啟，一陣如地鳴般的\n齒輪聲響起……整個房間也為之震動……\n不久後，你將目睹真相被揭露的瞬間……》
156	《下回待續……》
157	那麼，\n我們在下個步驟再會囉～
Lesson_SecretRoom_07.msbt
000	{[0201]}，\n你來了！
001	我們上次設計了讓隱藏門\n{color[0400]}{[0001|1d00]}自動打開的程式{[0001|ffff]}{color[ffff]}呢。
005	這次……我們要把門的\n開啟方式設計得更加帥氣，\n為解謎遊戲畫下完美的句點！！
006	接下來可是本堂課的重頭戲喔！\n我們快去程式設計畫面吧！
007	首先我們要把程式設計成\n{color[0400]}{[0001|1d00]}當隱藏門完全打開時{[0001|ffff]}{color[ffff]}放出特效。
009	隱藏門完全打開時……\n也就是這個{color[0400]}{[0001|1d00]}計數器小節點\n{[0001|ffff]}{color[ffff]}數到{color[0400]}{[0001|1d00]}180{[0001|ffff]}{color[ffff]}的時候！
010	叫出{[0001|1d00]}{color[0400]}＝{color[ffff]}{[0001|ffff]}的{color[0400]}{[0001|1d00]}比較小節點{[0001|ffff]}{color[ffff]}，\n把他放到藍色框框裡。
011	接著叫出{[0001|1d00]}{color[0400]}常數小節點{color[ffff]}{[0001|ffff]}，\n把他放到藍色框框裡！
012	打開設定～
013	把{[0001|1d00]}要輸出多少？{[0001|ffff]}\n設定為{[0001|1d00]}{color[0400]}180.00{color[ffff]}{[0001|ffff]}。
014	關閉設定。
015	把計數器小節點的{[0001|1d00]}{color[0400]}輸出端{color[ffff]}{[0001|ffff]}和\n比較小節點的{[0001|1d00]}{color[0400]}輸入1端口{color[ffff]}{[0001|ffff]}連接起來……
016	接著把{[0001|1d00]}{color[0400]}常數小節點{color[ffff]}{[0001|ffff]}連接到\n比較小節點的{[0001|1d00]}{color[0400]}輸入2端口{color[ffff]}{[0001|ffff]}。
017	「……當這道沉重的門停下來時，\n這個房間究竟會發生什麼事呢？」
019	到底會發生什麼事！？
020	那麼，接下來我們要在\n門完全打開時加入特效！
021	叫出{[0001|1d00]}{color[0400]}拉炮{color[ffff]}{[0001|ffff]}的特效小節點，\n把他放到藍色框框裡。
022	把比較小節點的{[0001|1d00]}{color[0400]}輸出端{color[ffff]}{[0001|ffff]}\n和{[0001|1d00]}{color[0400]}特效小節點{color[ffff]}{[0001|ffff]}連接起來。
024	你們希望我在門打開的\n瞬間炒熱氣氛對吧？
025	好！\n芝麻開門～～\n紅豆關門～～～！！
026	說錯咒語……\n進退不能……
027	好！我們去看看門打開的\n瞬間會發生什麼事吧～！
028	砰砰砰～！
029	當門完全打開時，\n拉炮就響起了～！
031	真是令人開心的拉炮聲！
032	不過……\n這樣還不夠帥氣！
033	我想讓隱藏門在開啟時……\n能夠……帶有更多厚重感！
037	加入門打開的音效，\n讓氣氛更加熱烈吧！
038	我們要讓{[0001|1d00]}{color[0400]}門在移動時{color[ffff]}{[0001|ffff]}發出聲音。
039	門在移動時……\n反過來說就是{color[0400]}{[0001|1d00]}門還沒完全打開時{[0001|ffff]}{color[ffff]}……\n我們要利用此條件讓門發出聲音。
040	這個{color[0400]}{[0001|1d00]}比較小節點{[0001|ffff]}{color[ffff]}會\n在{color[0400]}{[0001|1d00]}門完全打開時{[0001|ffff]}{color[ffff]}輸出訊號……
041	我們把他連接到{color[0400]}{[0001|1d00]}NOT小節點{[0001|ffff]}{color[ffff]}，\n讓他在{color[0400]}{[0001|1d00]}門還沒完全打開時{[0001|ffff]}{color[ffff]}輸出訊號吧！
042	叫出{[0001|1d00]}{color[0400]}NOT小節點{color[ffff]}{[0001|ffff]}，\n把他放到藍色框框裡。
043	把比較小節點的{[0001|1d00]}{color[0400]}輸出端{color[ffff]}{[0001|ffff]}連接到\nNOT小節點的{[0001|1d00]}{color[0400]}輸入端{color[ffff]}{[0001|ffff]}。
044	從{[0001|1d00]}{color[0400]}播放音效{color[ffff]}{[0001|ffff]}裡\n叫出{color[0400]}{[0001|1d00]}播放聲音小節點{[0001|ffff]}{color[ffff]}，\n把他放到藍色框框裡。
045	打開設定。
046	選擇{[0001|1d00]}機器{[0001|ffff]}裡的{[0001|1d00]}{color[0400]}齒輪{color[ffff]}{[0001|ffff]}。
047	好了！\n關閉設定吧。
048	把{[0001|1d00]}{color[0400]}NOT小節點{color[ffff]}{[0001|ffff]}連接到\n播放聲音小節點的{[0001|1d00]}{color[0400]}播放端口{color[ffff]}{[0001|ffff]}。
049	「金屬碰撞聲從腳下傳出，\n整個房間也為之震動……」
050	齒輪的低鳴聲也……\n……交～給～我～來～吧！
051	我們去聽聽看是什麼樣的聲音吧！
052	這個聲音……很震撼呢！
053	完全突顯出門打開時的厚重感！
056	不過……\n這個音效程式其實有一點問題。
057	我們回程式設計畫面確認一下吧。
058	先跟用來確認門的動作的\n常數小節點{color[0400]}{[0001|1d00]}說再見{[0001|ffff]}{color[ffff]}吧。
059	拜拜！
059-01	這樣就恢復原狀了……\n也就是說要{color[0400]}{[0001|1d00]}解開謎題門才會打開{[0001|ffff]}{color[ffff]}。
060	我們去看看會發生什麼事吧～
061	門明明沒有在移動，\n齒輪的聲音卻一直響起……
063	這是因為我們把程式設計成\n在{color[0400]}{[0001|1d00]}門還沒完全打開時{[0001|ffff]}{color[ffff]}播放音效……
064	而在{color[0400]}{[0001|1d00]}解開謎題前{[0001|ffff]}{color[ffff]}，\n門仍處於還沒完全打開的狀態……\n所以遊戲才會一直播放音效！
066	既然如此……我們就來修改一下程式，\n讓遊戲在{color[0400]}{[0001|1d00]}解開謎題前{[0001|ffff]}{color[ffff]}不會播放音效吧～
067	首先，刪除這條配對線。
068	剪剪！
068-01	呼……\n終於安靜下來了……
068-02	那麼……我們來把播放音效的條件\n修正為{color[0400]}{[0001|1d00]}解開謎題時{[0001|ffff]}{color[ffff]}且{[0001|1d00]}{color[0400]}門完全打開前{color[ffff]}{[0001|ffff]}吧！
069	為此，我們需要確認{color[0400]}{[0001|1d00]}兩個條件{[0001|ffff]}{color[ffff]}，\n也就是{color[0400]}{[0001|1d00]}謎題是否被解開{[0001|ffff]}{color[ffff]}和\n{color[0400]}{[0001|1d00]}門是否在完全打開前的狀態{[0001|ffff]}{color[ffff]}。
070	說到能確認兩個條件的小節點，\n就是{[0001|1d00]}{color[0400]}AND小節點{color[ffff]}{[0001|ffff]}了……\n把他叫出來並放到藍色框框裡吧。
071	而在{color[0400]}{[0001|1d00]}解開謎題{[0001|ffff]}{color[ffff]}時，\n會輸出訊號的是……
072	這個{color[0400]}{[0001|1d00]}無線傳送出口小節點{[0001|ffff]}{color[ffff]}！\n把他{[0001|1d00]}{color[0400]}複製{color[ffff]}{[0001|ffff]}起來吧。
073	複製！
074	把他放到藍色框框的位置。
075	把NOT小節點的{[0001|1d00]}{color[0400]}輸出端{color[ffff]}{[0001|ffff]}和\nAND小節點的{[0001|1d00]}{color[0400]}輸入1端口{color[ffff]}{[0001|ffff]}連接起來。
076	接著把{[0001|1d00]}{color[0400]}無線傳送出口小節點{color[ffff]}{[0001|ffff]}\n連接到AND小節點的{[0001|1d00]}{color[0400]}輸入2端口{color[ffff]}{[0001|ffff]}。
077	門是否在完全打開前的狀態，沒問題！\n謎題是否被解開，沒問題！
078	當兩邊都沒問題時，\n就代表門正在移動！
079	把這個{[0001|1d00]}{color[0400]}AND小節點{color[ffff]}{[0001|ffff]}連接到\n播放聲音小節點的{[0001|1d00]}{color[0400]}播放端口{color[ffff]}{[0001|ffff]}。
080	這樣一來，遊戲就{color[0400]}{[0001|1d00]}只會\n在門移動時{[0001|ffff]}{color[ffff]}播放音效了！
081	去確認看看吧！
082	齒輪的聲音沒有響起呢！
084	那麼……請先破壞木箱，\n然後把牆壁裝置的數值調為26。
085	如果按超過的話，你可以選擇重來，\n或是按到循環一周後重新停在26喔。
086	嗯……
087	完美！
088	現在遊戲只會\n在門移動時播放音效了！
089	這麼一來……\n{color[0400]}{[0001|1d00]}隱藏門{[0001|ffff]}{color[ffff]}就算完成囉！！！
090	請到程式設計畫面。
091	那麼～～～這樣就～～～～～
092	完成第8步驟了！！！
093	恭喜恭喜啊～
094	恭喜你！
095	不恭不喜啦～\n嘻嘻嘻。
096	恭～喜～你♪
097	這次我們設計了\n會配合隱藏門的動作\n發出特效和音效的程式！
099	在下個步驟裡，\n我們將會設計{[0001|1d00]}{color[0400]}最後一步{color[ffff]}{[0001|ffff]}！
100	雖然解開了謎題，\n密室也被打開了……
101	但好像還少了一個\n{[0001|1d00]}{color[0400]}很重要的東西{color[ffff]}{[0001|ffff]}呢……
102	沒錯！\n就是密室裡的{[0001|1d00]}{color[0400]}寶藏{color[ffff]}{[0001|ffff]}！！！
103	至於是什麼寶藏，\n就交給{[0201]}來決定囉！
104	請先想好要放什麼寶藏吧！
105	《隨著謎題的解開，密室之門緩緩開啟……\n在歷經了千辛萬苦之後，被隱藏的寶藏\n終於出現在你的眼前……》
106	《下回待續……》
107	那麼，\n我們在下個步驟再會囉～
Lesson_SecretRoom_08.msbt
000	{[0201]}，\n歡迎你！！
002	這次我們終於要迎來\n{[0001|1d00]}{color[0400]}解謎房間{color[ffff]}{[0001|ffff]}的大結局……\n也就是最後一個步驟！
003	我們來設計{[0001|1d00]}{color[0400]}BGM{color[ffff]}{[0001|ffff]}和{[0001|1d00]}{color[0400]}隱藏寶藏{color[ffff]}{[0001|ffff]}，\n為這個解謎遊戲劃下完美句點吧！
004	那麼……\n我們快去程式設計畫面吧！
005	首先要設計的是BGM……
007	我們要分別設計{color[0400]}{[0001|1d00]}解謎時{[0001|ffff]}{color[ffff]}\n和{color[0400]}{[0001|1d00]}解開謎題後{[0001|ffff]}{color[ffff]}的BGM！
008	先來設計{color[0400]}{[0001|1d00]}解謎時{[0001|ffff]}{color[ffff]}的BGM吧。
009	叫出{[0001|1d00]}{color[0400]}BGM小節點{color[ffff]}{[0001|ffff]}，\n把他放到藍色框框裡。
009-01	這個NOT小節點會\n在門還沒完全打開時輸出訊號……
010	所以我們把這個{color[0400]}{[0001|1d00]}NOT小節點{[0001|ffff]}{color[ffff]}\n連接到BGM小節點的{[0001|1d00]}{color[0400]}播放端口{color[ffff]}{[0001|ffff]}吧。
012	Yeah!\n緊張不安地搖頭嘆息，\n隔窗而望的凝重神情！
013	挑戰難解的神秘暗號，\n造就成功的百萬富豪！
013-01	解謎時的{color[0400]}{[0001|1d00]}樂曲{[0001|ffff]}{color[ffff]}就暫時\n先維持原本的設定吧。
014	接下來我們要設計解開謎題後……\n也就是{color[0400]}{[0001|1d00]}發現寶藏時{[0001|ffff]}{color[ffff]}的BGM。
015	叫出{[0001|1d00]}{color[0400]}BGM小節點{color[ffff]}{[0001|ffff]}，\n把他放到藍色框框裡。
015-01	這個{color[0400]}{[0001|1d00]}比較小節點{[0001|ffff]}{color[ffff]}會\n在門完全打開後輸出訊號……
016	所以我們把這個比較小節點\n連接到BGM小節點的{[0001|1d00]}{color[0400]}播放端口{color[ffff]}{[0001|ffff]}吧。
018	Yeah!\n靈光一閃破解難題，\n喜極而泣感動流涕！
019	找到寶藏皆大歡喜！\n全部歸我你別生氣！
020	然後，為了讓我們在確認時\n能夠分清楚2個BGM的聲音～
021	把第2個BGM小節點\n設定為其他的樂曲吧！
022	打開上方的BGM小節點的設定。
023	接著，把{[0001|1d00]}樂曲{[0001|ffff]}設定為{color[0400]}{[0001|1d00]}勇敢{[0001|ffff]}{color[ffff]}。
024	OK！\n關閉設定。
025	來吧，我們去確認一下\nBGM的切換情況！
027	請解開謎題……先破壞木箱，\n然後把牆壁裝置的數值調為26。
029	切換成別的樂曲了！
030	{[0201]}，\n稍後我會像之前一樣，\n讓你自由地選擇樂曲～
031	現在我們先繼續設計程式吧～
032	好了！接下來……\n我們終於要製作{[0001|1d00]}{color[0400]}隱藏寶藏{color[ffff]}{[0001|ffff]}囉！
033	要製作寶藏，\n就需要用到{[0001|1d00]}{color[0400]}材質小節點{color[ffff]}{[0001|ffff]}……\n把他叫出來並放大吧。
034	切換為{[0001|1d00]}{color[0400]}橫向視角{color[ffff]}{[0001|ffff]}～
035	把他放到平面上。
036	然後，切換回{[0001|1d00]}{color[0400]}俯瞰視角{color[ffff]}{[0001|ffff]}。
037	「隱藏在密室內的東西，\n正是你夢寐以求的寶藏……\n對你而言他是無價之寶。」
038	請畫出你心目中的寶藏。
039	你的寶藏可以是任何東西喔。
041	其實{color[0400]}{[0001|1d00]}就算不連接{[0001|ffff]}{color[ffff]}其他物件，\n也可以使用材質小節點喔！
042	我們先試著畫張圖來\n確認一下使用方法吧～
043	打開設定。
044	畢竟密室的牆壁是黑色的，\n用明亮的顏色來畫會比較顯眼喔。
045	那麼，請隨便畫些圖案在上面～
046	如果畫好了，就關閉設定吧。
047	我們去確認一下遊戲畫面，\n看看你的畫長什麼樣子吧！
048	請打開隱藏門！
050	從密室中發現了\n{[0201]}的親筆畫！
051	寶藏就是像這樣出現在畫面的喔！
052	我們回去吧。
054	「在幾經波折之後，\n你終於取得寶藏並離開了房間……」
055	「這奇怪的房間到底是誰造的……\n他又是基於何種目的製作的呢……？」
056	「雖然你的心中仍殘留著萬千疑問……\n但莫名的興奮之情卻在胸中激盪著……\n——終」
057	你究竟發現了什麼寶藏呢？
058	好了……{[0201]}！\n接下來就是你自由設計\n「解謎房間」的時間囉！
059	在房間裡會發現什麼寶藏，\n全由{[0201]}來決定！
060	是金銀財寶？喜歡的食物？\n還是神秘的藝術品！？
061	另外，{[0201]}……\n你也可以把2個BGM\n設定為自己喜歡的樂曲！
062	如果你覺得BGM和寶藏\n都「完成了！」……
063	就按下{color[0400]}{[0001|1d00]}完成鍵{[0001|ffff]}{color[ffff]}吧！
064	那麼～～～
065	開始設計吧！！
066	你終於完成啦！！
067	那麼，請到遊戲畫面\n讓我看看你的遊戲吧！
069	來吧，請解開謎題！
070	原來如此～\n這個BGM加上這個寶藏……
071	發現寶藏的人一定會很開心！
072	原來如此，刻意不做改變……
073	反而給人一種謎上加謎的感覺呢！
074	這樣一來……
075	解謎房間就完成了！！
076	你實在是太厲害了～～～！
077	來吧！\n我們去程式設計畫面！！
078	嗨！這次出拳的動作\n可是派上大用場了呢！
079	你用時尚物件營造\n懸疑氣氛的手法……\n♥給你滿分1億分♥
080	你設計的神秘房屋，\n連建築師都會自嘆不如呢。
081	哼～\n挺厲害的嘛。
082	想要提升打擊感的話，\n隨時都可以呼～喚～我～～
083	解謎真的好有趣喔！
084	嗯……做得不錯。
085	利用無線傳送讓訊號變得無遠弗屆！\n真的好厲害！\n請講！
086	這麼困難的{[0001|1d00]}{color[0400]}謎題{color[ffff]}{[0001|ffff]}，\n你竟然也能用程式設計出來……
087	{[0201]}，\n這世上或許沒有你解不開的謎題……
088	你的表現實在是太驚人啦！！
089	那麼，把這個解謎房間\n放進遊戲一覽吧～
090	我們先回去選單一趟～
Lesson_Shooting_00.msbt
000	{[0201]}，\n等你很久囉～
001	上完前面2堂課後……
002	你也開始習慣設計遊戲程式了吧～？
003	那麼，{[0201]}～\n這次要請你製作的遊戲就是……
004	A L I E N　 S H O O T I N G！！！！
005	玩家將要在無窮無盡的廣闊宇宙裡……
005_00	……勇往直前地擊退阻擋去路的外星人！！
006	我們就是要製作這樣的\n{[0001|1d00]}{color[0400]}橫向捲軸式射擊遊戲{color[ffff]}{[0001|ffff]}～～！！
007	快去程式設計畫面吧！
008	那麼，我們就趕緊叫出\n這次的主角……{[0001|1d00]}{color[0400]}UFO小節點{color[ffff]}{[0001|ffff]}吧！
008_00	選擇{[0001|1d00]}{color[0400]}物件{color[ffff]}{[0001|ffff]}。
008_01	{[0001|1d00]}{color[0400]}角色{color[ffff]}{[0001|ffff]}。
008_02	{[0001|1d00]}{color[0400]}UFO{color[ffff]}{[0001|ffff]}。
009_00	你好～～
010	哎呀～～\n你就是大家在討論的程式設計師啊～～
011	哇～你有著一雙看起來就像是\n專業程式設計師的銳利眼神呢～
012	該怎麼說呢～\n感覺你只要用眼神就能製作遊戲～
013	這只是我的個人感想啦～
014	……那麼～
014_00	我們去遊戲畫面看看……\n放了UFO小節點後會變成怎樣吧～～
015	有一個{[0001|1d00]}{color[0400]}UFO{color[ffff]}{[0001|ffff]}浮在半空中呢～！
016	這次我們要製作的是……\n{[0001|1d00]}{color[0400]}橫向前進的射擊遊戲{color[ffff]}{[0001|ffff]}……
017	所以讓UFO{[0001|1d00]}{color[0400]}面向右方{color[ffff]}{[0001|ffff]}吧！
018	去程式設計畫面。
019	那麼……
020	請{[0001|1d00]}{color[0400]}選擇UFO小節點{color[ffff]}{[0001|ffff]}，\n然後打開他的{[0001|1d00]}{color[0400]}設定{color[ffff]}{[0001|ffff]}。
022	首先……\n把{[0001|1d00]}Y軸轉動{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}Y軸：-90.00°{color[ffff]}{[0001|ffff]}。
022_00	接著，為了讓UFO{[0001|1d00]}{color[0400]}一直面向右方{color[ffff]}{[0001|ffff]}……
023	把{[0001|1d00]}回旋速度{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}0.00{color[ffff]}{[0001|ffff]}。
023_00	完美！\n關閉設定吧！
023_01	呵呵呵～我知道該向\n哪個方向前進囉～～
024	我們去遊戲畫面確認一下吧！
025	UFO面向右方了呢～
026	這麼一來，\n{[0001|1d00]}{color[0400]}向右方前進的UFO{color[ffff]}{[0001|ffff]}就準備好了……
027	接下來，我們要讓UFO動起來～
028	去程式設計畫面！
029	為了讓UFO可以移動，\n我們得叫出{[0001|1d00]}{color[0400]}操控搖桿小節點{color[ffff]}{[0001|ffff]}。
030	從{[0001|1d00]}輸入{[0001|ffff]}{[0001|0700]}{[0001|ffff]}{[0001|1d00]}推動操控搖桿{[0001|ffff]}\n{[0001|0700]}{[0001|ffff]}{[0001|1d00]}L操控搖桿{[0001|ffff]}{[0001|0700]}{[0001|ffff]}{[0001|1d00]}左右{[0001|ffff]}裡\n叫出{[0001|1d00]}{color[0400]}操控搖桿小節點{color[ffff]}{[0001|ffff]}。
031	{[0201]}，\n我們又見面了呢～
032	這次你又想轉一轉\n操控搖桿了嗎～？
033	那麼……請把{[0001|1d00]}{color[0400]}操控搖桿小節點{color[ffff]}{[0001|ffff]}\n連接到{[0001|1d00]}{color[0400]}UFO小節點{color[ffff]}{[0001|ffff]}的{[0001|1d00]}{color[0400]}左右端口{color[ffff]}{[0001|ffff]}。
034	我感覺～～\n自己好像可以動起來了～～
035	去確認一下吧！
036	請試著用{[0001|1d00]}{color[0400]}操控搖桿{color[ffff]}{[0001|ffff]}\n讓UFO向{[0001|1d00]}{color[0400]}左右{color[ffff]}{[0001|ffff]}移動！
037	能移動了～～
038	接下來……\n也讓他可以向上下移動吧。
039	從{[0001|1d00]}輸入{[0001|ffff]}{[0001|0700]}{[0001|ffff]}{[0001|1d00]}推動操控搖桿{[0001|ffff]}\n{[0001|0700]}{[0001|ffff]}{[0001|1d00]}L操控搖桿{[0001|ffff]}{[0001|0700]}{[0001|ffff]}{[0001|1d00]}{color[0400]}上下{color[ffff]}{[0001|ffff]}裡\n叫出{[0001|1d00]}{color[0400]}上下{color[ffff]}{[0001|ffff]}的{color[0400]}{[0001|1d00]}操控搖桿小節點{[0001|ffff]}{color[ffff]}。
041	你好～
042	你想上下轉一轉嗎～？
043_00	那麼……請把{[0001|1d00]}{color[0400]}上下{color[ffff]}{[0001|ffff]}的{[0001|1d00]}{color[0400]}操控搖桿小節點{color[ffff]}{[0001|ffff]}\n連接到{[0001|1d00]}{color[0400]}UFO小節點{color[ffff]}{[0001|ffff]}的{[0001|1d00]}{color[0400]}上下端口{color[ffff]}{[0001|ffff]}。
044	感覺不錯～～
045	我們去確認一下吧～～！
046	請用操控搖桿\n讓UFO向{[0001|1d00]}{color[0400]}上下{color[ffff]}{[0001|ffff]}移動！
047	動起來了～～！
048	這麼一來……\n玩家就能自由自在地操控UFO了！
049	你可以盡情操控他飄來飄去，\n玩夠後就回程式設計畫面吧～
050	接下來……我們要決定這款\n射擊遊戲的{[0001|1d00]}{color[0400]}遊戲畫面的觀看方式{color[ffff]}{[0001|ffff]}。
051	從{[0001|1d00]}物件{[0001|ffff]}{[0001|0700]}{[0001|ffff]}{[0001|1d00]}遊戲畫面和照相機{[0001|ffff]}{[0001|0700]}{[0001|ffff]}{[0001|1d00]}{color[0400]}遊戲畫面{color[ffff]}{[0001|ffff]}裡\n叫出{[0001|1d00]}{color[0400]}遊戲畫面小節點{color[ffff]}{[0001|ffff]}。
052	把遊戲畫面小節點\n放大到藍色框框的大小。
053	{[0201]}～你最近如何～～！？
054	OK～！OK～！\n你想把這個範圍作為{[0001|1d00]}{color[0400]}遊戲畫面{color[ffff]}{[0001|ffff]}對吧～！
055	那麼……\n我們去遊戲畫面看看吧！
055_00	這樣……\n就決定好遊戲畫面的觀看方式了！
056	既然我們已經準備好\n射擊遊戲的舞台了……
058	那麼接下來～\n就為UFO裝上{[0001|1d00]}{color[0400]}炮台{color[ffff]}{[0001|ffff]}吧！
059	去程式設計畫面～
060	我們要用{[0001|1d00]}{color[0400]}物件小節點{color[ffff]}{[0001|ffff]}來製作{[0001|1d00]}{color[0400]}炮台{color[ffff]}{[0001|ffff]}。
061	從{[0001|1d00]}物件{[0001|ffff]}{[0001|0700]}{[0001|ffff]}{[0001|1d00]}一般物件{[0001|ffff]}{[0001|0700]}{[0001|ffff]}{[0001|1d00]}{color[0400]}圓柱體{color[ffff]}{[0001|ffff]}裡\n叫出{[0001|1d00]}{color[0400]}物件小節點{color[ffff]}{[0001|ffff]}。
062	把他縮小，\n放到UFO小節點的旁邊～
062_00	……嗨，\n我是炮台。
062_01	請{[0001|1d00]}{color[0400]}轉動{color[ffff]}{[0001|ffff]}這個{[0001|1d00]}{color[0400]}物件小節點{color[ffff]}{[0001|ffff]}，\n讓他成為橫向射擊的炮台。
062_02	打開{[0001|1d00]}{color[0400]}物件小節點{color[ffff]}{[0001|ffff]}的{[0001|1d00]}{color[0400]}設定{color[ffff]}{[0001|ffff]}。
062_03	把{[0001|1d00]}狀態{[0001|ffff]}設定為只有\n{[0001|1d00]}{color[0400]}能看見{color[ffff]}{[0001|ffff]}、{[0001|1d00]}{color[0400]}能移動{color[ffff]}{[0001|ffff]}、{[0001|1d00]}{color[0400]}會損壞{color[ffff]}{[0001|ffff]}是{[0001|1d00]}{color[0400]}開啟{color[ffff]}{[0001|ffff]}。
062_04	完美！\n請關閉設定。
062_05	我們去遊戲畫面確認一下吧！
062_06	啊～～～～！
062_07	炮台掉下來了……
062_16	啊……如果你沒看到的話，\n就按下重來鍵吧。
062_08	仔細想想……既然遊戲裡有重力，\n{[0001|1d00]}{color[0400]}物件會掉下去也是理所當然的事{color[ffff]}{[0001|ffff]}。
062_09	不過UFO是例外，\n他{[0001|1d00]}{color[0400]}不會受到重力影響{color[ffff]}{[0001|ffff]}，\n所以才能夠浮在空中……
062_10	一般的物件如果沒有經過特別設計，\n就會像這樣掉落下去……
062_11	所以……我們來讓物件\n{[0001|1d00]}{color[0400]}不會受到重力影響{color[ffff]}{[0001|ffff]}吧！
062_11_00	去程式設計畫面！
062_12	選擇{[0001|1d00]}{color[0400]}圓柱體物件小節點{color[ffff]}{[0001|ffff]}，\n打開他的{[0001|1d00]}{color[0400]}設定{color[ffff]}{[0001|ffff]}。
062_13	選擇{[0001|1d00]}{color[0400]}材質{color[ffff]}{[0001|ffff]}……
062_14	選擇{[0001|1d00]}{color[0400]}無重力{color[ffff]}{[0001|ffff]}。
062_15	OK！\n請關閉設定。
063	來確認一下吧～
063_00	現在炮台會浮在空中了呢～
063_01	對了……\n請你試著用{[0001|1d00]}{color[0400]}操控搖桿{color[ffff]}{[0001|ffff]}\n稍微移動一下UFO……
063_02	沒錯……\nUFO移動時，{[0001|1d00]}{color[0400]}炮台會被留在原地{color[ffff]}{[0001|ffff]}……！
063_03	我們得把UFO和炮台\n黏在一起才行。
064	那麼……\n我們回去程式設計畫面吧～
064_00	為了讓UFO和炮台不會分離……
064_01	我們要把物件小節點\n{[0001|1d00]}{color[0400]}連接{color[ffff]}{[0001|ffff]}到UFO小節點！
065	請把{[0001|1d00]}{color[0400]}物件小節點{color[ffff]}{[0001|ffff]}的{[0001|1d00]}{color[0400]}連接端口{color[ffff]}{[0001|ffff]}\n連接到{[0001|1d00]}{color[0400]}UFO小節點{color[ffff]}{[0001|ffff]}的{[0001|1d00]}{color[0400]}連接端口{color[ffff]}{[0001|ffff]}！
065_00	我們黏在一起了！
065_01	哇～\n連～接～
065_02	這樣物件小節點就\n{[0001|1d00]}{color[0400]}連接{color[ffff]}{[0001|ffff]}到UFO小節點了。
066	就像這樣，你可以透過{[0001|1d00]}{color[0400]}連接\n{color[ffff]}{[0001|ffff]}兩個小節點讓{[0001|1d00]}{color[0400]}物件黏在一起{color[ffff]}{[0001|ffff]}！
067	好，我們去確認一下……\nUFO和炮台在{[0001|1d00]}{color[0400]}連接{color[ffff]}{[0001|ffff]}後會變成怎樣吧！
067_00	咦……！？
067_01	武士的髮髻……
067_01_00	……呃～\n我們先別管炮台\n像不像髮髻……
067_01_01	請像剛才一樣，\n試著{[0001|1d00]}{color[0400]}用操控搖桿讓UFO移動{color[ffff]}{[0001|ffff]}。
067_01_02	做得好！！
067_01_03	由於我們把UFO和炮台{[0001|1d00]}{color[0400]}連接{color[ffff]}{[0001|ffff]}起來了……\n所以他們現在會黏在一起了喔～！
067_01_04	那麼，接下來……
067_01_05	我們不希望炮台的方向{[0001|1d00]}{color[0400]}朝天{color[ffff]}{[0001|ffff]}……
067_02	來把炮台黏到UFO的正面吧～
067_03	回去囉～
067_04	選擇{[0001|1d00]}{color[0400]}圓柱體物件小節點{color[ffff]}{[0001|ffff]}，\n打開他的{[0001|1d00]}{color[0400]}設定{color[ffff]}{[0001|ffff]}。
067_05	接著，請打開{[0001|1d00]}{color[0400]}連接面{color[ffff]}{[0001|ffff]}～
067_05_01	你可以在這個{[0001|1d00]}{color[0400]}連接面{color[ffff]}{[0001|ffff]}裡\n設定物件和連接對象要\n{[0001|1d00]}{color[0400]}以哪一面黏在一起{color[ffff]}{[0001|ffff]}喔！
067_06	{[0001|1d00]}自己的連接面{[0001|ffff]}只要{[0001|1d00]}{color[0400]}維持在Y-就OK{color[ffff]}{[0001|ffff]}了。
067_07	把{[0001|1d00]}{color[0400]}連接對象的連接面{color[ffff]}{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}Z-{color[ffff]}{[0001|ffff]}吧。
067_08	完美！\n請關閉詳細畫面。
067_08_00	然後關閉設定～
067_09	我們把{[0001|1d00]}{color[0400]}連接面{color[ffff]}{[0001|ffff]}設定好了，\n這樣炮台應該就會黏在{[0001|1d00]}{color[0400]}UFO的正面{color[ffff]}{[0001|ffff]}……！
067_10	去看看他們的樣子吧！
067_11	哦……！
067_12	炮台裝在UFO的正面了呢！
067_13	請試著用操控搖桿來移動～
067_14_01	炮台會緊緊黏住UFO一起移動！
068	這樣作為主角的UFO就完成囉～！
069	那麼，我們回去程式設計畫面吧～～
070	那麼～～這樣就～～
071	完成第1步驟了～！
072	恭喜～
072_00	恭～喜～你～
072_01	好厲害～！你是最棒的～！
072_02	恭喜你。
073	這次是我們第一次\n接觸到{[0001|1d00]}{color[0400]}連接{color[ffff]}{[0001|ffff]}的技巧！
074	只要使用小節點身上的{[0001|1d00]}{color[0400]}連接端口{color[ffff]}{[0001|ffff]}……
075	就能讓兩個物件{[0001|1d00]}{color[0400]}黏在一起{color[ffff]}{[0001|ffff]}喔～
076	那麼，在下個步驟裡……
077	我們要讓炮台{[0001|1d00]}{color[0400]}發射炮彈{color[ffff]}{[0001|ffff]}～
078	那麼就～\n敬請期待下個步驟吧～～！
Lesson_Shooting_01.msbt
000	{[0201]}！\n你回來啦～
001	我們上次設計了讓玩家可以\n用操控搖桿移動UFO的程式……
001_00	除此之外……\n還把UFO小節點{[0001|1d00]}{color[0400]}連接{color[ffff]}{[0001|ffff]}到物件小節點，\n為UFO裝上了炮台～～！
001_01	這樣一來，\n作為主角的UFO就準備好囉！
002	在這次的步驟裡，\n我們要設計射擊遊戲中不可或缺的……
003	{[0001|1d00]}{color[0400]}發射炮彈的程式{color[ffff]}{[0001|ffff]}～～
004	那麼……\n我們去程式設計畫面吧！
005	為了能發射炮彈，\n我們得叫出{color[0400]}{[0001|1d00]}發射物件小節點{[0001|ffff]}{color[ffff]}！
006	從{[0001|1d00]}物件{[0001|ffff]}{[0001|0700]}{[0001|ffff]}{[0001|1d00]}放出、消除、引力{[0001|ffff]}\n{[0001|0700]}{[0001|ffff]}{[0001|1d00]}發射物件{[0001|ffff]}{[0001|0700]}{[0001|ffff]}{[0001|1d00]}10個{[0001|ffff]}裡\n叫出{color[0400]}{[0001|1d00]}發射物件小節點{[0001|ffff]}{color[ffff]}！
008	喂喂！給我等等！！\n你們在製作射擊遊戲嗎！？
010	那不正好是我大顯身手的機會嗎！？
010_00	這件事就交給我吧！
012	那麼，把發射物件小節點\n縮小後放到藍色框框裡。
011_00	雖然我個子小小的……
011_01	但我一定會不負重任，完成使命～～～！
011_02	哇～好可靠喔～
012_00	我們先到遊戲畫面確認一下吧。
012_01	正在發射小顆的炮彈呢！
012_02	不過……請你試著\n用操控搖桿移動UFO。
012_03_00	移動UFO後才發現……\n原來{color[0400]}{[0001|1d00]}炮彈不是從炮台射出來的{[0001|ffff]}{color[ffff]}呢～
012_04	沒錯！\n要讓{[0001|1d00]}{color[0400]}炮台發射炮彈{color[ffff]}{[0001|ffff]}……\n就需要進行{[0001|1d00]}{color[0400]}連接{color[ffff]}{[0001|ffff]}！
012_05	所以～～\n我們去{[0001|1d00]}{color[0400]}連接{color[ffff]}{[0001|ffff]}吧！！
014	請把{[0001|1d00]}{color[0400]}發射物件小節點{color[ffff]}{[0001|ffff]}\n{[0001|1d00]}{color[0400]}連接{color[ffff]}{[0001|ffff]}到{[0001|1d00]}{color[0400]}物件小節點{color[ffff]}{[0001|ffff]}！
014_00	喂！物件小節點！\n把你的肩膀……靠過來！
014_01	好喔。
015	我們去看看會變成什麼樣子吧！
016_00	炮彈變成{color[0400]}{[0001|1d00]}向下{[0001|ffff]}{color[ffff]}發射了……
017	現在先暫時不管這個問題，\n請試著用操控搖桿移動UFO！
018	現在炮彈的發射位置會\n跟著UFO一起移動了～
018_00	那麼，接下來就是讓炮彈\n{color[0400]}{[0001|1d00]}從炮口向右方{[0001|ffff]}{color[ffff]}發射出去！
019	去程式設計畫面吧！
022	選擇{[0001|1d00]}{color[0400]}發射物件小節點{color[ffff]}{[0001|ffff]}，\n打開他的設定。
023	接著，打開{[0001|1d00]}{color[0400]}連接面{color[ffff]}{[0001|ffff]}。
024	把{[0001|1d00]}{color[0400]}自己的連接面{color[ffff]}{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}X-{color[ffff]}{[0001|ffff]}。
025	把{[0001|1d00]}{color[0400]}連接對象的連接面{color[ffff]}{[0001|ffff]}設定為{color[0400]}{[0001|1d00]}Y+{[0001|ffff]}{color[ffff]}。
025-01	這樣炮彈應該就會\n從炮口發射出去了。
026	那麼，關閉這個畫面……
026_00	接著關閉設定。
027_00	我們去遊戲畫面確認一下吧！
028	哦～～！\n我們要的就是這種感覺～！
029	現在炮彈會從{[0001|1d00]}{color[0400]}炮口{color[ffff]}{[0001|ffff]}發射出去了！
030	那麼……請你試著\n用操控搖桿移動UFO！
031	完美～～～！！！
032	這樣{[0001|1d00]}{color[0400]}會發射炮彈的UFO{color[ffff]}{[0001|ffff]}就完成了！！
033	那麼，接下來……我們來設計\n{[0001|1d00]}{color[0400]}按下按鍵就會發射炮彈{color[ffff]}{[0001|ffff]}的程式吧！
034	去程式設計畫面！
036	從{[0001|1d00]}輸入{[0001|ffff]}{[0001|0700]}{[0001|ffff]}{[0001|1d00]}按下按鍵{[0001|ffff]}{[0001|0700]}{[0001|ffff]}{[0001|1d00]}{[0001|ffff]}裡\n叫出{color[0400]}{[0001|1d00]}按鍵小節點{[0001|ffff]}{color[ffff]}！
038	接著，把{[0001|1d00]}{color[0400]}發射物件小節點{color[ffff]}{[0001|ffff]}\n和{[0001|1d00]}{color[0400]}按鍵小節點{color[ffff]}{[0001|ffff]}連接起來～
038-01	這樣在按下鍵時就會發射炮彈了！
039	哦！炮彈大放送啦！！\n我按～～～！！！
040	哦！你這傢伙～～～\n挺有幹勁的嘛！！！
041	好！\n我們去遊戲畫面確認一下吧！
042	那麼……\n請你試著按下{[0001|1d00]}{color[0400]}鍵{color[ffff]}{[0001|ffff]}！
043	{[0001|1d00]}{color[0400]}發射出炮彈了{color[ffff]}{[0001|ffff]}～！
044	接下來，請試著{[0001|1d00]}{color[0400]}按住鍵不放{color[ffff]}{[0001|ffff]}。
045	現在炮台只能\n一發一發地發射炮彈呢……
046	我們希望在按住鍵不放時，\n能夠讓炮台{[0001|1d00]}{color[0400]}連續發射{color[ffff]}{[0001|ffff]}炮彈！
047	去程式設計畫面吧。
048	打開{[0001|1d00]}{color[0400]}發射物件小節點{color[ffff]}{[0001|ffff]}的{[0001|1d00]}{color[0400]}設定{color[ffff]}{[0001|ffff]}。
051	為了讓他能連續發射，\n請把{[0001|1d00]}{color[0400]}發射間距{color[ffff]}{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}0.10{color[ffff]}{[0001|ffff]}！
052	關閉設定。
055	我們去遊戲畫面確認一下吧～
056	請試著{[0001|1d00]}{color[0400]}按住鍵不放{color[ffff]}{[0001|ffff]}。
057	連續發射～～！！
058	不過……！\n還有一個令人在意的地方……
059	請再次按下{color[0400]}{[0001|1d00]}鍵{[0001|ffff]}{color[ffff]}發射炮彈。
060	炮彈發射出去之後會{[0001|1d00]}{color[0400]}往下掉{color[ffff]}{[0001|ffff]}……
061	炮彈就是要筆直地發射出去，\n玩起來才會覺得痛快嘛～！
062	我們去程式設計畫面，\n讓炮彈能筆直地發射出去吧！
065	想要筆直地發射炮彈，\n就得讓他擺脫{[0001|1d00]}{color[0400]}重力{color[ffff]}{[0001|ffff]}的影響！
066	所以……\n我們來{[0001|1d00]}{color[0400]}消除這個遊戲空間的重力{color[ffff]}{[0001|ffff]}吧！
067	說到操控重力，\n就得要叫出{[0001|1d00]}{color[0400]}減少重力小節點{color[ffff]}{[0001|ffff]}！
068	選擇{color[0400]}{[0001|1d00]}輸出{[0001|ffff]}{color[ffff]}。
068_00	{color[0400]}{[0001|1d00]}改變空間{[0001|ffff]}{color[ffff]}。
069	從{[0001|1d00]}{color[0400]}減少重力{color[ffff]}{[0001|ffff]}裡\n叫出{[0001|1d00]}{color[0400]}減少重力小節點{color[ffff]}{[0001|ffff]}！
071	有人叫我耶～\n你好～
072	只要輸入訊號到這個\n{[0001|1d00]}{color[0400]}減少重力小節點{color[ffff]}{[0001|ffff]}……
072_00	就能消除這個遊戲空間的重力喔～
072_00-01	為了輸入訊號到減少重力小節點，\n我們叫出{[0001|1d00]}{color[0400]}常數小節點{color[ffff]}{[0001|ffff]}吧！
072_01	從{[0001|1d00]}輸入{[0001|ffff]}{[0001|0700]}{[0001|ffff]}{[0001|1d00]}{color[0400]}常數{color[ffff]}{[0001|ffff]}裡\n叫出{[0001|1d00]}{color[0400]}常數小節點{color[ffff]}{[0001|ffff]}。
071_00	我就是常數小節點……\n在無重力之下依然\n保持絕不動搖之心。
074	那麼……請把{[0001|1d00]}{color[0400]}常數小節點{color[ffff]}{[0001|ffff]}\n連接到{[0001|1d00]}{color[0400]}減少重力小節點{color[ffff]}{[0001|ffff]}。
075	數值是{[0001|1d00]}{color[0400]}1.00 {color[ffff]}{[0001|ffff]}對吧？\n好，我會輸出1.00。
076	來吧～\n在這個空間裡飄浮看看～～～
077	我們去看看吧～
078	請按下{[0001|1d00]}{color[0400]}鍵發射炮彈{color[ffff]}{[0001|ffff]}。
080	炮彈筆～～～直地\n發射出去了～！！！
080-01	很有射擊遊戲的感覺呢～！
081	你可以盡情地發射炮彈～\n玩夠了就回程式設計畫面吧！
082	那麼～～這樣就～～
083	完成第2步驟了～！
084	恭喜你。
084_00	無重力～感覺好棒喔～～
084_01	嗨！
084_02	哦！幹得漂亮！
085	這次我們設計了\n讓{[0001|1d00]}{color[0400]}UFO發射炮彈{color[ffff]}{[0001|ffff]}的程式！
086	我們離遊戲完成又進了一小步！
088	在下個步驟裡，\n我們將會製作場地～
089	那麼……\n我會在第3步驟等你喔！
Lesson_Shooting_02.msbt
000	{[0201]}，\n歡迎你！
001	ALIEN SHOOTING的\n第3步驟要開始囉～～！
002	上次我們使用了{[0001|1d00]}{color[0400]}連接{color[ffff]}{[0001|ffff]}，\n讓炮台可以發射炮彈……
003	還{[0001|1d00]}{color[0400]}消除了重力{color[ffff]}{[0001|ffff]}，\n讓炮彈能筆直地發射出去！
004	既然現在可以發射炮彈了……
005	你一定很想拿敵人\n來試試他的火力吧～？
006	所以，這次我們要……
007	加入敵人和牆壁，\n製作{[0001|1d00]}{color[0400]}遊戲場地{color[ffff]}{[0001|ffff]}！
008	我們來開始設計吧！！
009	首先要改變{[0001|1d00]}{color[0400]}遊戲空間的氣氛{color[ffff]}{[0001|ffff]}，\n讓他更貼近射擊遊戲的主題！
010	為了改變遊戲空間的氣氛……
011	請從{[0001|1d00]}物件{[0001|ffff]}{[0001|0700]}{[0001|ffff]}{[0001|1d00]}空間{[0001|ffff]}裡\n叫出{[0001|1d00]}{color[0400]}空間小節點{color[ffff]}{[0001|ffff]}吧。
013	你想要……\n改變這個世界嗎……？
014	打開{[0001|1d00]}{color[0400]}空間小節點{color[ffff]}{[0001|ffff]}的{[0001|1d00]}{color[0400]}設定{color[ffff]}{[0001|ffff]}。
015	把{[0001|1d00]}{color[0400]}空間的外型{color[ffff]}{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}無{color[ffff]}{[0001|ffff]}。
016	接著把{[0001|1d00]}{color[0400]}空間的光線{color[ffff]}{[0001|ffff]}……
017	設定為{[0001|1d00]}{color[0400]}宇宙{color[ffff]}{[0001|ffff]}。
018	完美！\n關閉這個畫面……
019	關閉設定。
020	你的世界……\n變得如此廣闊了呢……
021	那麼……我們去看看吧！
022	哇～～！\n是宇宙空間～～～！！
023	遊戲一下子就變得很有\nALIEN SHOOTING的感覺呢！
024	如果再加上{color[0400]}{[0001|1d00]}外星人當作敵人{[0001|ffff]}{color[ffff]}，\n就能更貼近我們的主題囉～！
027	心動不如馬上行動……\n去程式設計畫面～
028	那麼，馬上來製作敵人吧！
029	從{[0001|1d00]}物件{[0001|ffff]}{[0001|0700]}{[0001|ffff]}{[0001|1d00]}時尚物件{[0001|ffff]}\n{[0001|0700]}{[0001|ffff]}{[0001|1d00]}圓形時尚物件{[0001|ffff]}{[0001|0700]}{[0001|ffff]}{[0001|1d00]}外星人{[0001|ffff]}裡\n叫出{[0001|1d00]}{color[0400]}時尚物件小節點{color[ffff]}{[0001|ffff]}。
030	潛伏在漆黑宇宙中的粉紅色身軀……
031	迷人的反派角色♥外星人！\n……好棒！
033	請打開{[0001|1d00]}{color[0400]}時尚物件小節點{color[ffff]}{[0001|ffff]}的{[0001|1d00]}{color[0400]}設定{color[ffff]}{[0001|ffff]}。
034	把{[0001|1d00]}狀態{[0001|ffff]}設定為只有{[0001|1d00]}{color[0400]}能看見{color[ffff]}{[0001|ffff]}、{[0001|1d00]}{color[0400]}能接觸{color[ffff]}{[0001|ffff]}、\n{[0001|1d00]}{color[0400]}會損壞{color[ffff]}{[0001|ffff]}、{[0001|1d00]}{color[0400]}能破壞{color[ffff]}{[0001|ffff]}是{[0001|1d00]}{color[0400]}開啟{color[ffff]}{[0001|ffff]}。
036	接著為了更改外星人面向的方向，\n把{[0001|1d00]}轉動{[0001|ffff]}的{[0001|1d00]}{color[0400]}Y軸{color[ffff]}{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}90.00°{color[ffff]}{[0001|ffff]}吧。
037	OK！
038	那麼，我們去看看外星人長什麼樣子吧！
039	迷人的反派角色～外星人登場了……！
040	馬上來試試看是否能打敗他吧！
041	為了再次確認是否能打敗外星人，\n請按下{[0001|1d00]}{color[0400]}重來鍵{color[ffff]}{[0001|ffff]}！
042	試著用{[0001|1d00]}{color[0400]}鍵{color[ffff]}{[0001|ffff]}發射炮彈，\n對外星人發動攻擊！
043	做得好！\n你打敗了外星人～！
044	既然外星人被打敗了……{[0001|2000]}\n{[0001|ffff]}那麼接下來請你按下{[0001|1d00]}{color[0400]}重來鍵{color[ffff]}{[0001|ffff]}。
045	這次請試著{[0001|1d00]}{color[0400]}用UFO撞向外星人{color[ffff]}{[0001|ffff]}。
04502	哎呀……你打敗外星人了呢。\n請按下{[0001|1d00]}{color[0400]}重來鍵{color[ffff]}{[0001|ffff]}吧。
04503	請試著{[0001|1d00]}{color[0400]}用UFO撞向外星人{color[ffff]}{[0001|ffff]}。
046	撞到外星人居然也毫髮無損……\n……這個UFO原來是不死之身！
047	這樣的話UFO就有點太強了～！！
049	{[0001|1d00]}{[0001|2000]}所以……我們把UFO{color[0400]}設定{color[ffff]}為{[0001|1d00]}\n{color[0400]}接觸到外星人時就會損壞{color[ffff]}{[0001|ffff]}吧。
050	去程式設計畫面～
051	打開UFO小節點的{[0001|1d00]}{color[0400]}設定{color[ffff]}{[0001|ffff]}。
052	把{[0001|1d00]}狀態{[0001|ffff]}的{[0001|1d00]}{color[0400]}會損壞{color[ffff]}{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}開啟{color[ffff]}{[0001|ffff]}。
053	關閉設定。
054	呵呵呵～\n我一接觸到～外星人～\n就會劈啪地～壞掉喔～
056	來確認一下吧！
057	請試著移動UFO，\n讓他{[0001|1d00]}{color[0400]}接觸外星人{color[ffff]}{[0001|ffff]}！
05702	啊……你打敗外星人了呢。\n請按下{[0001|1d00]}{color[0400]}重來鍵{color[ffff]}{[0001|ffff]}吧。
05703	請試著移動UFO，\n讓他{[0001|1d00]}{color[0400]}接觸外星人{color[ffff]}{[0001|ffff]}！
058	劈啪一聲～粉身碎骨～～！
059	這樣我們的{[0001|1d00]}{color[0400]}敵人……\n外星人{color[ffff]}{[0001|ffff]}就完成了！
061	當然，只有一個敵人是不夠的，\n我{[0001|1d00]}{color[0400]}想增加更多敵人{color[ffff]}{[0001|ffff]}……
062	{[0001|2000]}不過在那之前……\n請先按下{[0001|1d00]}{color[0400]}重來{color[ffff]}{[0001|2000]}{[0001|ffff]}{[0001|1d00]}{color[0400]}鍵{color[ffff]}{[0001|ffff]}。
063	請試著再次按下{[0001|1d00]}{color[0400]}鍵{color[ffff]}{[0001|2000]}，{[0001|1d00]}\n{color[0400]}射幾發炮彈{color[ffff]}{[0001|ffff]}出來看看。
06302	啊～～UFO壞掉了。\n請按下{[0001|1d00]}{color[0400]}重來鍵{color[ffff]}{[0001|ffff]}～
06303	請試著按下{[0001|1d00]}{color[0400]}鍵{color[ffff]}{[0001|1900]}，{[0001|1d00]}\n{color[0400]}射幾發炮彈{color[ffff]}{[0001|ffff]}出來看看。
064	{[0001|1d00]}{color[0400]}射出去的炮彈{color[ffff]}{[0001|ffff]}會\n一直飛到遠處呢……
065	由於炮彈會一直飛到{color[0400]}{[0001|1d00]}畫面外{[0001|ffff]}{color[ffff]}，\n無論我們在後方加入多少{color[0400]}{[0001|1d00]}敵人{[0001|ffff]}{color[ffff]}，\n都會被飛出去的炮彈{color[0400]}{[0001|1d00]}擊中{[0001|ffff]}{color[ffff]}。
066	所以……
067	我們要用{[0001|1d00]}{color[0400]}牆壁{color[ffff]}{[0001|ffff]}製作賽道……
068	並且{[0001|2000]}讓射出去的炮彈\n{[0001|1d00]}{color[0400]}在接觸到牆壁時損壞{color[ffff]}{[0001|2000]}{[0001|ffff]}。
069	我們去程式設計畫面吧～
070	從{[0001|1d00]}物件{[0001|0700]}{[0001|1d00]}一般物件{[0001|0700]}{[0001|1d00]}立方體{[0001|ffff]}裡\n叫出{[0001|1d00]}{color[0400]}物件小節點{color[ffff]}{[0001|ffff]}。
071	把他放大到藍色框框的大小。
072	打開{[0001|1d00]}{color[0400]}物件小節點{color[ffff]}{[0001|ffff]}的{[0001|1d00]}{color[0400]}設定{color[ffff]}{[0001|ffff]}……
073	把{[0001|1d00]}狀態{[0001|ffff]}設定為只有{[0001|1d00]}{color[0400]}能看見{color[ffff]}、\n{color[0400]}能接觸{color[ffff]}、{color[0400]}能破壞{color[ffff]}{[0001|ffff]}是{[0001|1d00]}{color[0400]}開啟{color[ffff]}{[0001|ffff]}。
074	因為我們把{color[0400]}{[0001|1d00]}會損壞{[0001|ffff]}{color[ffff]}設定為{color[0400]}{[0001|1d00]}關閉{[0001|ffff]}{color[ffff]}了，\n所以即使牆壁被炮彈擊中也不會損壞。
075	而{color[0400]}{[0001|1d00]}外星人{[0001|ffff]}{color[ffff]}被擊中時卻會損壞……\n為了方便我們區分兩者的不同，\n把這道牆壁設定為{[0001|1d00]}{color[0400]}其他顏色{color[ffff]}{[0001|ffff]}吧。
076	打開{[0001|1d00]}{color[0400]}顏色{color[ffff]}{[0001|ffff]}……
077	設定為{[0001|1d00]}{color[0400]}藍色{color[ffff]}{[0001|ffff]}。
078	OK！\n關閉設定吧。
079	去遊戲畫面！
080	{color[0400]}{[0001|1d00]}牆壁{[0001|ffff]}{color[ffff]}完成了！
082	請用{[0001|1d00]}{color[0400]}鍵發射炮彈{color[ffff]}{[0001|ffff]}，\n試著擊中{[0001|1d00]}{color[0400]}牆壁{color[ffff]}{[0001|ffff]}！
08202	啊～～UFO壞掉了。\n{[0001|2000]}請按下{color[0400]}重來鍵{color[ffff]}{[0001|ffff]}～
08203	請用{[0001|1d00]}{color[0400]}鍵發射炮彈{color[ffff]}{[0001|ffff]}，\n試著擊中{[0001|1d00]}{color[0400]}牆壁{color[ffff]}{[0001|ffff]}！
083	炮彈一接觸到牆壁就損壞了！
084	只要用這種牆壁製作賽道，\n炮彈就不會亂飛了！
085	說到{[0001|1d00]}{color[0400]}牆壁{color[ffff]}{[0001|ffff]}……\n我們還有一件事得做。
086	請試著把UFO\n移動到{color[0400]}{[0001|1d00]}遊戲畫面外{[0001|ffff]}{color[ffff]}。
08602	啊～～UFO壞掉了。\n{[0001|2000]}請按下{[0001|ffff]}{color[0400]}{[0001|1d00]}重來鍵{[0001|ffff]}{color[ffff]}～
08603	請試著把UFO\n移動到{color[0400]}{[0001|1d00]}遊戲畫面外{[0001|ffff]}{color[ffff]}。
087	沒錯……\nUFO{[0001|2000]}會跑到{[0001|ffff]}{[0001|1d00]}{color[0400]}遊戲畫面外{color[ffff]}{[0001|ffff]}！
088	UFO不見的話，\n遊戲就玩不下去了……
089	我們來修改一下程式，\n讓他不能跑出遊戲畫面吧！
090	我打算放一道{[0001|1d00]}{color[0400]}看不見的牆壁{color[ffff]}{[0001|ffff]}，\n讓UFO{[0001|1d00]}{color[0400]}無法跑到遊戲畫面外{color[ffff]}{[0001|ffff]}。
091	從{[0001|1d00]}物件{[0001|0700]}{[0001|1d00]}一般物件{[0001|0700]}{[0001|1d00]}立方體{[0001|ffff]}裡\n叫出{[0001|1d00]}{color[0400]}物件小節點{color[ffff]}{[0001|ffff]}。
092	把物件小節點放大到\n藍色框框的大小後放進裡面。
093	打開物件小節點的設定……
094	把{[0001|1d00]}狀態{[0001|ffff]}設定為\n{[0001|1900]}只有{[0001|ffff]}{[0001|1d00]}{color[0400]}能接觸{color[ffff]}{[0001|2000]}是{[0001|1d00]}{color[0400]}開啟{color[ffff]}{[0001|ffff]}。
095	OK。\n關閉設定。
096	……嗨。\n你看不見我。
097	{color[0400]}{[0001|1d00]}複製{[0001|ffff]}{color[ffff]}這個物件小節點……
098	放到畫面下方的藍色框框裡。
099	……嗨。\n雖然沒人能看見我，但我有好好工作喔。
100	最後再複製一次\n物件小節點……
102	把他調整為{[0001|1d00]}{color[0400]}縱向的長～條形{color[ffff]}{[0001|ffff]}，\n放到藍色框框裡！！
103	……嗨。\n知道大家都看不見我，我反而覺得更安心呢。
104	我們接下來要{[0001|1d00]}{color[0400]}在畫面的\n右方繼續製作場地{color[ffff]}{[0001|ffff]}……
105	所以看不見的牆壁\n只要這3道就OK了～！
106	我們去確認一下吧～
107	那麼……請試著把UFO\n移動到{[0001|1d00]}{color[0400]}遊戲畫面外{color[ffff]}{[0001|ffff]}吧！
10702	啊～～UFO壞掉了。\n{[0001|2000]}請按下{[0001|ffff]}{color[0400]}{[0001|1d00]}重來鍵{[0001|ffff]}{color[ffff]}～
10703	請試著把UFO\n移動到{[0001|1d00]}{color[0400]}遊戲畫面外{color[ffff]}{[0001|ffff]}吧！
108	由於UFO前進的方向上沒有牆壁，\n所以向右移動時能跑到{[0001|1d00]}{color[0400]}畫面之外{color[ffff]}{[0001|ffff]}。
109	請試著向{[0001|1d00]}{color[0400]}畫面的上、下或左方{color[ffff]}{[0001|ffff]}前進！\n如果迷失方向了，只要重來就行囉。
110	哦……！
111	撞上{[0001|1d00]}{color[0400]}看不見的牆壁{color[ffff]}{[0001|ffff]}了呢……！
116	這樣就不用擔心會迷路了！
117	那麼……最後……
118	我們來設計{color[0400]}{[0001|1d00]}當UFO損壞時\n讓遊戲重來的程式{[0001|ffff]}{color[ffff]}吧！
119	去程式設計畫面！
120	從{[0001|1d00]}輸出{[0001|0700]}{[0001|1d00]}重來、結束、切換\n{[0001|0700]}{[0001|1d00]}重來遊戲{[0001|ffff]}裡叫出{[0001|1d00]}{color[0400]}重來小節點{color[ffff]}{[0001|ffff]}。
122	接著，從{[0001|1d00]}中間{[0001|0700]}{[0001|1d00]}計時器{[0001|ffff]}裡\n叫出{[0001|1d00]}{color[0400]}計時器小節點{color[ffff]}{[0001|ffff]}。
124	最後，從{[0001|1d00]}輸入{[0001|0700]}{[0001|1d00]}遊戲內的變化\n{[0001|0700]}{[0001|1d00]}物件損壞時{[0001|ffff]}裡叫出{[0001|1d00]}{color[0400]}物件損壞時小節點{color[ffff]}{[0001|ffff]}！
125	打開{[0001|1d00]}{color[0400]}物件損壞時小節點{color[ffff]}{[0001|ffff]}的{color[0400]}{[0001|1d00]}設定{[0001|ffff]}{color[ffff]}。
126	打開{color[0400]}{[0001|1d00]}要確認什麼？{[0001|ffff]}{color[ffff]}……
127	設定為只有{[0001|1d00]}{color[0400]}UFO{color[ffff]}{[0001|ffff]}是{[0001|1d00]}{color[0400]}開啟{color[ffff]}{[0001|ffff]}。
128	OK！\n關閉這個畫面……
129	關閉設定。
130	嗯嗯，你們要我確認\nUFO有沒有損壞對吧？
130-01	包在我身上！
132	那麼……\n請把{[0001|1d00]}{color[0400]}物件損壞時小節點{color[ffff]}{[0001|ffff]}\n連接到{[0001|1d00]}{color[0400]}計時器小節點{color[ffff]}{[0001|ffff]}。
133	然後，把{[0001|1d00]}{color[0400]}計時器小節點{color[ffff]}{[0001|ffff]}\n連接到{[0001|1d00]}{color[0400]}重來小節點{color[ffff]}{[0001|ffff]}！
134	這麼一來，{color[0400]}{[0001|1d00]}當UFO損壞時\n讓遊戲重來的程式{[0001|ffff]}{color[ffff]}就完成了！
135	我們去確認一下吧。
136	那麼，{[0001|2000]}請試著接觸{[0001|ffff]}{[0001|1d00]}{color[0400]}外星人{color[ffff]}{[0001|ffff]}或{[0001|1d00]}{color[0400]}牆壁{color[ffff]}{[0001|ffff]}，\n{[0001|2000]}讓UFO損壞{[0001|ffff]}！
137	做得好！！\n遊戲順利{[0001|1d00]}{color[0400]}重來{color[ffff]}{[0001|ffff]}了！
138	{[0001|1d00]}{color[0400]}當UFO損壞時讓遊戲重來{color[ffff]}{[0001|ffff]}{[0001|2000]}的程式{[0001|ffff]}\n這就完成囉～～！
139	那麼，我們回去吧～～
140	那麼～～這樣就～～
141	完成第3步驟了～！
142	在這黑暗的宇宙中……\n你的才華是如此地耀眼♥
143	感覺不錯。
144	呵呵～真是完美～～
145	……深奧的世界。
146	這次我們加入{color[0400]}{[0001|1d00]}外星人{[0001|ffff]}{color[ffff]}和{[0001|1d00]}{color[0400]}牆壁{color[ffff]}{[0001|ffff]}，\n製作出遊戲場地！
149	下次我們會繼續擴大這個場地，\n讓他變得更加遼闊！
150	敬請期待～～！
Lesson_Shooting_03.msbt
000	{[0201]}，\n你回來了！
001_00	呈現在你眼前的……\n是無邊無際的廣闊宇宙……\n潛伏於其中的外星人正蠢蠢欲動……
001_01	感覺就要開始一場大冒險了呢，\n真是令人興奮～～！
002	在這次的步驟裡，\n我們將會接續上次的內容……
003	繼續製作{[0001|1d00]}{color[0400]}場地{color[ffff]}{[0001|ffff]}～
004	快去程式設計畫面吧！
006	我們先來增加{color[0400]}{[0001|1d00]}敵人……\n也就是外星人{[0001|ffff]}{color[ffff]}的數量吧～
007-00	選擇{color[0400]}{[0001|1d00]}時尚物件小節點{[0001|ffff]}{color[ffff]}……
007	{[0001|1d00]}{color[0400]}複製時尚物件小節點{color[ffff]}{[0001|ffff]}。
008	把他放到右方的藍色框框裡！
009	做得好！\n就照這樣繼續設計下去吧！
010	{[0001|1d00]}{color[0400]}複製{color[ffff]}{[0001|ffff]}剛剛放好的\n{[0001|1d00]}{color[0400]}時尚物件小節點{color[ffff]}{[0001|ffff]}……
011	把他放到{[0001|1d00]}{color[0400]}下方{color[ffff]}{[0001|ffff]}的藍色框框裡……
012	再次{[0001|1d00]}{color[0400]}複製{color[ffff]}{[0001|ffff]}……
013	放到{[0001|1d00]}{color[0400]}右上方{color[ffff]}{[0001|ffff]}的藍色框框裡！
014	{[0001|1d00]}{color[0400]}複製{color[ffff]}{[0001|ffff]}。
015	放到{[0001|1d00]}{color[0400]}下方{color[ffff]}{[0001|ffff]}的藍色框框裡。
016	{[0001|2000]}我們還{[0001|ffff]}{[0001|1d00]}{color[0400]}剩下4個{color[ffff]}{[0001|ffff]}{[0001|2000]}敵人要放喔～{[0001|ffff]}
017	{[0001|1d00]}{color[0400]}複製時尚物件小節點{color[ffff]}{[0001|ffff]}……
018	把他放到正中央的藍色框框裡……
019	{color[0400]}{[0001|1d00]}複製{[0001|ffff]}{color[ffff]}。
020	放到{[0001|1d00]}{color[0400]}右方{color[ffff]}{[0001|ffff]}的藍色框框裡……！
021	再次{color[0400]}{[0001|1d00]}複製{[0001|ffff]}{color[ffff]}……
022	放到{[0001|1d00]}{color[0400]}右上方{color[ffff]}{[0001|ffff]}的藍色框框裡……
023	這是最後一個囉！\n{[0001|1d00]}{color[0400]}複製{color[ffff]}{[0001|ffff]}……
024	放到{[0001|1d00]}{color[0400]}下方{color[ffff]}{[0001|ffff]}的藍色框框裡！！
025	我們放了很多敵人呢！
026	接下來……為了製作賽道，\n我們來增加一些{[0001|1d00]}{color[0400]}牆壁{color[ffff]}{[0001|ffff]}吧！
027	{[0001|1d00]}{color[0400]}複製物件小節點{color[ffff]}{[0001|ffff]}。
028	把他縮小一點，\n放到藍色框框裡。
029	再次{[0001|1d00]}{color[0400]}複製{color[ffff]}{[0001|ffff]}這個{[0001|1d00]}{color[0400]}物件小節點{color[ffff]}{[0001|ffff]}……
030	把他放到{[0001|1d00]}{color[0400]}下方{color[ffff]}{[0001|ffff]}的藍色框框裡！
031	最後再{[0001|1d00]}{color[0400]}複製{color[ffff]}{[0001|ffff]}1個……
032	把他放大一點，\n放到右方的藍色框框裡！
033	辛苦你了！
035	最後來製作{[0001|1d00]}{color[0400]}看不見的牆壁{color[ffff]}{[0001|ffff]}吧。
036	{[0001|1d00]}{color[0400]}複製{color[ffff]}{[0001|ffff]}這個{[0001|1d00]}{color[0400]}物件小節點{color[ffff]}{[0001|ffff]}。
038	把他放到{[0001|1d00]}{color[0400]}右方{color[ffff]}{[0001|ffff]}的藍色框框裡。
039	再{[0001|1d00]}{color[0400]}複製{color[ffff]}{[0001|ffff]}1個……
040	放到{color[0400]}{[0001|1d00]}下方{[0001|ffff]}{color[ffff]}的藍色框框裡。
041	OK！\n場地變得寬廣多了！
042	我們去確認一下吧！
043	呃……
044	這樣根本就看不見\n我們辛苦製作出來的場地啊～～～～！！
046	畢竟我們製作的場地\n是在{[0001|1d00]}{color[0400]}遊戲畫面之外{color[ffff]}{[0001|ffff]}，\n看不見也是正常啦……
049	我們來修改一下程式，\n讓寬廣的場地現出全貌吧！
050	{[0001|1d00]}{color[0400]}選擇遊戲畫面小節點{color[ffff]}{[0001|ffff]}……
051	把{color[0400]}{[0001|1d00]}遊戲畫面小節點\n{[0001|ffff]}{color[ffff]}放大到能顯示整個場地後，\n移動到適當的位置！
052	我們再去看看\n場地的樣子吧！
052_00	現在可以看到整個場地了～！
053	不過，場地上的東西變得很小……\n這樣{[0001|1d00]}{color[0400]}玩起來會有點不太方便{color[ffff]}{[0001|ffff]}呢。
055	而且要是繼續{color[0400]}{[0001|1d00]}擴張場地{[0001|ffff]}{color[ffff]}的話，\n到頭來還是會超出畫面之外。
056	因此，我們這次要……
057	讓遊戲畫面能{[0001|1d00]}{color[0400]}自動捲動{color[ffff]}{[0001|ffff]}！
058	這樣的話，\n不管場地有多寬闊都沒問題囉！
060	來設計捲動的程式吧！
064	首先，把{[0001|1d00]}{color[0400]}遊戲畫面小節點{color[ffff]}{[0001|ffff]}\n恢復成{[0001|1d00]}{color[0400]}原本的大小{color[ffff]}{[0001|ffff]}後，\n移動到場地的{color[0400]}{[0001|1d00]}起點{[0001|ffff]}{color[ffff]}。
066	為了讓遊戲畫面捲動，\n我們需要輸入訊號到\n{[0001|1d00]}{color[0400]}遊戲畫面小節點{color[ffff]}{[0001|ffff]}的{[0001|1d00]}{color[0400]}X端口{color[ffff]}{[0001|ffff]}！
067	這樣{[0001|1d00]}{color[0400]}遊戲畫面{color[ffff]}{[0001|ffff]}就會依照\n輸入的訊號{[0001|1d00]}{color[0400]}向右{color[ffff]}{[0001|ffff]}移動了！
068	從{[0001|1d00]}輸入{[0001|0700]}{[0001|1d00]}常數{[0001|ffff]}裡\n叫出{[0001|1d00]}{color[0400]}常數小節點{color[ffff]}{[0001|ffff]}！
070	我就是常數小節點……\n即使遊戲畫面捲動，\n我的心也絕不動搖！
071	接著，從{[0001|1d00]}中間{[0001|0700]}{[0001|1d00]}旗標、計數器、隨機\n{[0001|0700]}{[0001|1d00]}計數器{[0001|ffff]}裡叫出{[0001|1d00]}{color[0400]}計數器小節點{color[ffff]}{[0001|ffff]}。
075	然後，把{[0001|1d00]}{color[0400]}常數小節點{color[ffff]}{[0001|ffff]}連接到\n{[0001|1d00]}{color[0400]}計數器小節點{color[ffff]}{[0001|ffff]}的{[0001|1d00]}{color[0400]}增加端口{color[ffff]}{[0001|ffff]}。
076	計數器的數值會\n快速增加喔……
077	因為計數器小節點的{[0001|1d00]}{color[0400]}增加端口{color[ffff]}{[0001|ffff]}會\n{[0001|1d00]}{color[0400]}持續接收{color[ffff]}{[0001|ffff]}常數小節點傳來的{[0001|1d00]}{color[0400]}訊號{color[ffff]}{[0001|ffff]}……
078	所以計數器小節點的數值\n會以驚人的速度持續增加。
079	把這個{[0001|1d00]}{color[0400]}計數器小節點{color[ffff]}{[0001|ffff]}連接到\n{[0001|1d00]}{color[0400]}遊戲畫面小節點{color[ffff]}{[0001|ffff]}的{[0001|1d00]}{color[0400]}X端口{color[ffff]}{[0001|ffff]}。
080	這麼一來……讓遊戲畫面能夠\n{[0001|1d00]}{color[0400]}自動橫向捲動的程式{color[ffff]}{[0001|ffff]}就完成了！
063	你們想讓畫面水平移動對吧～！\n沒問題～！
080_00	那麼，我們去看看吧！
081	哇～～～～～～！
082	捲動得超～～級～～快！！！
083	這種速度根本沒人跟得上吧。
082_01	啊……畫面捲過頭……\n跑到不該來的地方了。
082_02	遊戲空間並非無邊無際……\n他其實是存在著邊界喔。
082_04	那麼……我們回程式設計畫面，\n讓捲動速度變慢一點吧。
084	現在的捲動速度太快了……\n我們來{[0001|1d00]}{color[0400]}調整速度{color[ffff]}{[0001|ffff]}吧。
085	至於調整的方法……\n我們需要{color[0400]}{[0001|1d00]}調整計數器小節點輸出的數值{[0001|ffff]}{color[ffff]}，\n並把調整後的數值輸入遊戲畫面小節點。
086	想要調整輸出的數值，\n就要用到{[0001|1d00]}{color[0400]}定位小節點{color[ffff]}{[0001|ffff]}！
087	選擇{[0001|1d00]}{color[0400]}中間{color[ffff]}{[0001|ffff]}。
088	{color[0400]}{[0001|1d00]}轉換{[0001|ffff]}{color[ffff]}。
089	從{color[0400]}{[0001|1d00]}定位{[0001|ffff]}{color[ffff]}裡叫出{color[0400]}{[0001|1d00]}定位小節點{[0001|ffff]}{color[ffff]}！
089_00	你……是誰？
091	什麼……？\n就你和鮑伯博士……\n兩個人在上課～～～～～？
093	這該不會是～～\n戀愛的預兆吧～～～～～～？？
093_00	……呃～\n這個{[0001|1d00]}{color[0400]}定位小節點{color[ffff]}{[0001|ffff]}……
093_01	是個會把{[0001|1d00]}{color[0400]}接收到的數值\n轉換{color[ffff]}{[0001|ffff]}為{[0001|1d00]}{color[0400]}其他數值{color[ffff]}{[0001|ffff]}的小節點。
094	打開{[0001|1d00]}{color[0400]}定位小節點{color[ffff]}{[0001|ffff]}的{[0001|1d00]}{color[0400]}設定{color[ffff]}{[0001|ffff]}。
094-01	你可以透過這個{color[0400]}{[0001|1d00]}輸入範圍{[0001|ffff]}{color[ffff]}和{color[0400]}{[0001|1d00]}輸出範圍{[0001|ffff]}{color[ffff]}\n來設定要如何調整接收到的數值！
095	請把{color[0400]}{[0001|1d00]}輸入範圍{[0001|ffff]}{color[ffff]}\n設定為{[0001|1d00]}{color[0400]}0.00{color[ffff]}{[0001|ffff]}到{[0001|1d00]}{color[0400]}60.00{color[ffff]}{[0001|ffff]}。
096	接著，把{color[0400]}{[0001|1d00]}輸出範圍{[0001|ffff]}{color[ffff]}\n設定為{[0001|1d00]}{color[0400]}0.00{color[ffff]}{[0001|ffff]}到{[0001|1d00]}{color[0400]}1.00{color[ffff]}{[0001|ffff]}。
097-01	這樣一來，定位小節點就會把\n接收到的{[0001|1d00]}{color[0400]}0.00到60.00{color[ffff]}{[0001|ffff]}的數值\n{[0001|1d00]}{color[0400]}轉換{color[ffff]}{[0001|ffff]}為{[0001|1d00]}{color[0400]}0.00到1.00{color[ffff]}{[0001|ffff]}的數值輸出。
097	關閉設定吧。
098	接著，把剛才連接{[0001|1d00]}{color[0400]}計數器小節點\n{color[ffff]}{[0001|ffff]}和{[0001|1d00]}{color[0400]}遊戲畫面小節點{color[ffff]}{[0001|ffff]}的{[0001|1d00]}{color[0400]}配對線{color[ffff]}{[0001|ffff]}刪除……
099	然後把{[0001|1d00]}{color[0400]}計數器小節點{color[ffff]}{[0001|ffff]}\n連接到{[0001|1d00]}{color[0400]}定位小節點{color[ffff]}{[0001|ffff]}吧！
100	最後，把{[0001|1d00]}{color[0400]}定位小節點{color[ffff]}{[0001|ffff]}連接到\n{[0001|1d00]}{color[0400]}遊戲畫面小節點{color[ffff]}{[0001|ffff]}的{[0001|1d00]}{color[0400]}X端口{color[ffff]}{[0001|ffff]}。
101	這樣捲動速度應該就會被調慢囉！
102	我們去遊戲畫面確認一下吧！
103	捲動速度變緩慢了！
104	用這種速度玩起來剛剛好呢！
105_000	請按下{[0001|1d00]}{color[0400]}重來鍵{color[ffff]}{[0001|ffff]}讓遊戲重來……
105_031	我們來實際玩玩看吧！
105_032	UFO沒能跟上\n捲動的畫面呢……
105_033	請用{color[0400]}{[0001|1d00]}重來鍵{[0001|ffff]}{color[ffff]}讓遊戲重來。
105_034	遊玩時請用{[0001|1d00]}{color[0400]}操控搖桿{color[ffff]}{[0001|ffff]}前進，\n試著跟上捲動的畫面吧～
105_035	做得好！
105_036	你避開了牆壁和外星人，\n成功抵達場地盡頭了呢！
105_037	我有件事想確認一下，\n請你按下{color[0400]}{[0001|1d00]}重來鍵{[0001|ffff]}{color[ffff]}。
105_038	請試著用力撞向牆壁！
105_039	UFO壞掉了呢。
105_040	這個UFO現在{[0001|1d00]}{color[0400]}被設定為\n接觸到任何物件都會損壞{color[ffff]}{[0001|ffff]}～
105_041	所以一接觸到牆壁就損壞了。
105_042	不過這樣難度有點太高了……
105_043	我們回程式設計畫面修改一下，\n讓他在接觸到牆壁時不會損壞吧！
105_001	啊……\nUFO接觸到{[0001|1d00]}{color[0400]}牆壁{color[ffff]}{[0001|ffff]}後就損壞了呢。
105_002	這個UFO現在{[0001|1d00]}{color[0400]}被設定為\n接觸到任何物件都會損壞{color[ffff]}{[0001|ffff]}，\n所以一接觸到牆壁就損壞了……
105_003	不過這樣難度有點太高了……
105_004	我們回程式設計畫面修改一下，\n讓他在接觸到牆壁時不會損壞吧！
105_007	打開{[0001|1d00]}{color[0400]}UFO小節點{color[ffff]}{[0001|ffff]}的{[0001|1d00]}{color[0400]}設定{color[ffff]}{[0001|ffff]}。
105_007-01	先暫時把{[0001|1d00]}狀態{[0001|ffff]}的\n{[0001|1d00]}{color[0400]}會損壞{color[ffff]}{[0001|ffff]}設定為{color[0400]}{[0001|1d00]}關閉{[0001|ffff]}{color[ffff]}。
105_008	接著……\n按下{[0001|1d00]}{color[0400]}會損壞{color[ffff]}{[0001|ffff]}旁邊的{[0001|1d00]}{color[0400]}小按鍵{color[ffff]}{[0001|ffff]}，\n打開{[0001|1d00]}{color[0400]}會損壞{color[ffff]}{[0001|ffff]}的{[0001|1d00]}{color[0400]}詳細設定{color[ffff]}{[0001|ffff]}。
105_009	你可以在這裡設定UFO\n{color[0400]}{[0001|1d00]}接觸到什麼物件時會損壞{[0001|ffff]}{color[ffff]}。
105_015	{[0001|2000]}請設定為只有{[0001|1d00]}{color[0400]}外星人{color[ffff]}{[0001|2000]}是{[0001|1d00]}{color[0400]}開啟{color[ffff]}{[0001|2000]}{[0001|ffff]}。
105_015-01	這樣UFO就{color[0400]}{[0001|1d00]}只有在接觸到\n外星人時{[0001|ffff]}{color[ffff]}才會損壞了！
105_016	關閉這個畫面。
105_017	關閉設定。
105_018	這麼一來～\n就算接觸到牆壁或炮彈～\n我也不會損壞囉～～
105_019	換句話說～～\n就是防禦力提升了呢～～
105_021	那麼……\n我們去遊戲畫面確認一下吧！
105_022	首先，請試著撞向{[0001|1d00]}{color[0400]}外星人{color[ffff]}{[0001|ffff]}！
105_023	UFO一接觸到外星人就損壞了。
105_024	接著，請試著接觸{[0001|1d00]}{color[0400]}牆壁{color[ffff]}{[0001|ffff]}！
105_025	就算接觸到牆壁也不會損壞！
105_026	這樣UFO就{[0001|1d00]}{color[0400]}只有在接觸到\n外星人時{color[ffff]}{[0001|ffff]}才會損壞了！
106	如果你覺得確認清楚了，\n就回去程式設計畫面吧～！
107	那麼～～這樣就～～
108	完成第4步驟了～！
109	這就是……愛的力量……♥
109_00	辛苦你了！！
109_01	真是完美！
109_02	{[0201]}，\n恭喜你～～！
110	這次我們製作了\n讓遊戲畫面{color[0400]}{[0001|1d00]}自動捲動的程式{[0001|ffff]}{color[ffff]}……
111	場地也因此變得更加寬廣！
112	雖然這次的步驟有點長……
113	但是{[0201]}，\n你還是堅持到最後了～～！
114	在下個步驟裡，\n我們也要一起繼續努力！
116	那麼……\n我在下個步驟等你喔～！
Lesson_Shooting_04.msbt
000	{[0201]}，\n歡迎來到第5步驟！
001	……呃，我話都還沒說完，\n遊戲畫面已經跑這麼遠了～
002	{[0001|1d00]}{[0001|2000]}課程中遊戲畫面的{[0001|1d00]}{color[0400]}自動捲動{color[ffff]}\n{[0001|2000]}會讓我們{[0001|1d00]}{color[0400]}很難確認遊戲畫面{color[ffff]}{[0001|ffff]}……
003	所以我們這次要製作\n{color[0400]}{[0001|1d00]}暫停自動捲動的程式{[0001|ffff]}{color[ffff]}！
011	去程式設計畫面～！
012	首先，為了製作出\n暫停自動捲動的程式，{[0001|1d00]}\n{[0001|2000]}我們需要做些事前{[0001|1d00]}{color[0400]}準備{color[ffff]}{[0001|ffff]}……
014	我們要先來設計\n只有在{[0001|1d00]}{color[0400]}按著鍵時{color[ffff]}{[0001|ffff]}\n畫面才會{[0001|1d00]}{color[0400]}捲動{color[ffff]}{[0001|ffff]}的程式！
015	從{[0001|1d00]}輸入{[0001|0700]}{[0001|1d00]}按下按鍵{[0001|0700]}{[0001|1d00]}{[0001|ffff]}裡\n叫出{[0001|1d00]}{color[0400]}按鍵小節點{color[ffff]}{[0001|ffff]}。
017	嗨！\n使勁地用你的食指按我吧！！！
018-00	接著選擇{color[0400]}{[0001|1d00]}常數小節點{[0001|ffff]}{color[ffff]}……
018	按下這個按鍵，\n和常數小節點{color[0400]}{[0001|1d00]}說再見{[0001|ffff]}{color[ffff]}。
021	然後把{[0001|1d00]}{color[0400]}按鍵小節點{color[ffff]}{[0001|ffff]}連接到\n{[0001|1d00]}{color[0400]}計數器小節點{color[ffff]}{[0001|ffff]}的{[0001|1d00]}{color[0400]}增加端口{color[ffff]}{[0001|ffff]}～
022	這麼一來……\n{[0001|1d00]}{color[0400]}遊戲畫面就只會在\n按著鍵時捲動{color[ffff]}{[0001|ffff]}了！
023	我們去看看吧！
024	現在{[0001|1d00]}{color[0400]}要按著鍵{color[ffff]}{[0001|ffff]}，\n畫面才會捲動喔。
024_00	試著{[0001|1d00]}{color[0400]}按下鍵{color[ffff]}{[0001|ffff]}吧。
024_01	畫面動起來了～！
025	遊戲畫面變成{[0001|1d00]}{color[0400]}只有在\n按著鍵時才會捲動{color[ffff]}{[0001|ffff]}了！
026	不過……依照目前的設計……\n{[0001|1d00]}{color[0400]}遊玩時就得一直按著按鍵{color[ffff]}{[0001|ffff]}……
028	不如我們把這個程式改造一下，\n讓畫面只會{[0001|1d00]}{color[0400]}在按著按鍵時停止捲動{color[ffff]}{[0001|ffff]}吧！
029	去程式設計畫面！
030	那麼，我們來把剛才\n製作好的程式{color[0400]}{[0001|1d00]}倒轉{[0001|ffff]}{color[ffff]}過來……
031	設計成{[0001|1d00]}{color[0400]}只有在按著鍵時{color[ffff]}\n{[0001|2000]}才會{[0001|1d00]}{color[0400]}暫停{color[ffff]}{[0001|ffff]}{[0001|2000]}捲動吧{[0001|ffff]}！
031-01	換句話說，\n就是只有在{color[0400]}{[0001|1d00]}沒有按著{[0001|ffff]}{color[ffff]}鍵時才會{color[0400]}{[0001|1d00]}捲動{[0001|ffff]}{color[ffff]}。
032	想設計出{color[0400]}{[0001|1d00]}只有在沒有按著\n按鍵時才發生作用{[0001|ffff]}{color[ffff]}的程式，\n就需要叫出{[0001|1d00]}{color[0400]}NOT小節點{color[ffff]}{[0001|ffff]}！
033	選擇{color[0400]}{[0001|1d00]}中間{[0001|ffff]}{color[ffff]}。
034	{[0001|1d00]}{color[0400]}邏輯{color[ffff]}{[0001|ffff]}。
035	從{[0001|1d00]}{color[0400]}NOT{color[ffff]}{[0001|ffff]}裡叫出{[0001|1d00]}{color[0400]}NOT小節點{color[ffff]}{[0001|ffff]}。
037	NONO，\n我不是NOT小節點喔～
037-01	我才不會幫你咧～
038	這個{[0001|1d00]}{color[0400]}NOT小節點{color[ffff]}{[0001|ffff]}……
039	他只有在{[0001|1d00]}{color[0400]}沒有接收到輸入時{color[ffff]}{[0001|ffff]}\n才{[0001|1d00]}{color[0400]}會輸出{color[ffff]}{[0001|ffff]}訊號……
039_00	相反地……{[0001|1d00]}{color[0400]}接收到輸入時{color[ffff]}{[0001|ffff]}\n則{[0001|1d00]}{color[0400]}不會輸出{color[ffff]}{[0001|ffff]}訊號。
040	是個愛唱反調的小節點。
041	嘻嘻！\n我可不會說謊喔。
042	那麼，把連接{[0001|1d00]}{color[0400]}按鍵小節點{color[ffff]}{[0001|ffff]}和\n{[0001|1d00]}{color[0400]}計數器小節點{color[ffff]}{[0001|ffff]}的{color[0400]}{[0001|1d00]}配對線{[0001|ffff]}{color[ffff]}刪除吧。
044	然後，從{[0001|1d00]}{color[0400]}按鍵小節點{color[ffff]}{[0001|ffff]}拉出配對線\n連接到{[0001|1d00]}{color[0400]}NOT小節點{color[ffff]}{[0001|ffff]}……
045	嗨！請多多關照！
046	NONO！慢走不送～！
047	把{[0001|1d00]}{color[0400]}NOT小節點{color[ffff]}{[0001|ffff]}連接到\n{[0001|1d00]}{color[0400]}計數器小節點{color[ffff]}{[0001|ffff]}的{color[0400]}{[0001|1d00]}增加端口{[0001|ffff]}{color[ffff]}。
047-01	這樣遊戲畫面就會在\n{color[0400]}{[0001|1d00]}沒有按著鍵時捲動；\n按著鍵時暫停捲動{[0001|ffff]}{color[ffff]}了！
049	我們去看看吧！
050	在沒有按著鍵時\n畫面會自動捲動！
051	那麼，請試著按住{[0001|1d00]}{color[0400]}鍵{color[ffff]}{[0001|ffff]}不放！
052	做得好～～！\n捲動停止了！
053	這樣我們在確認時就可以\n隨時{[0001|1d00]}{color[0400]}暫停遊戲畫面的捲動{color[ffff]}{[0001|ffff]}了～
053_01	你可以多測試幾次\n{[0001|1d00]}{color[0400]}自動捲動{color[ffff]}{[0001|ffff]}的程式……
054	等你測試夠了，\n就回程式設計畫面吧！
055	那麼～～這樣就～～
056	完成第5步驟了～！
057	恭喜你！
057_00	嘻嘻！你才不厲害呢！
057_01	幹得漂亮。
057_02	做得好啊～～！
058	在這次的步驟裡，我們設計了\n{color[0400]}{[0001|1d00]}讓遊戲畫面停止捲動的程式{[0001|ffff]}{color[ffff]}！
060	這樣我們在設計遊戲時\n就會變得更得心應手囉！
061	那麼……在下個步驟裡，\n我們會繼續設計遊戲剩下來的部分！
062	下次我們要製作\n比外星人還{[0001|1d00]}{color[0400]}難纏的障礙物{color[ffff]}{[0001|ffff]}喔～
063	敬請期待～～！
Lesson_Shooting_05.msbt
000	{[0201]}，\n等你好久囉～～！
001	可以請你馬上按住{[0001|1d00]}{color[0400]}鍵{color[ffff]}{[0001|ffff]}不放嗎？
108	畫面停止捲動了！！
109	我們上次就是製作了\n這個{color[0400]}{[0001|1d00]}暫停自動捲動的程式{[0001|ffff]}{color[ffff]}！
002	這樣確認時也變得更輕鬆了呢～
003	那麼，這次我們就使用這個功能……
003-01	來設計新的機關吧～
004	來吧！去程式設計畫面！
006	首先要來{[0001|1d00]}{color[0400]}繼續製作場地{color[ffff]}{[0001|ffff]}！
007	請{[0001|1d00]}{color[0400]}複製時尚物件小節點{color[ffff]}{[0001|ffff]}。
009	把複製出來的時尚物件小節點\n放到{color[0400]}{[0001|1d00]}右上方{[0001|ffff]}{color[ffff]}的藍色框框裡。
010	{[0001|1d00]}{color[0400]}複製{color[ffff]}{[0001|ffff]}剛才移動的\n{[0001|1d00]}{color[0400]}時尚物件小節點{color[ffff]}{[0001|ffff]}……
011	放到{color[0400]}{[0001|1d00]}下方{[0001|ffff]}{color[ffff]}的藍色框框裡。
012	再{[0001|1d00]}{color[0400]}複製{color[ffff]}{[0001|ffff]}1個……
013	放到藍色框框裡！
013_00	再{[0001|1d00]}{color[0400]}複製{color[ffff]}{[0001|ffff]}1個……
013_01	放到{color[0400]}{[0001|1d00]}右上方{[0001|ffff]}{color[ffff]}的藍色框框裡！
013_02	這是最後一個囉！\n{color[0400]}{[0001|1d00]}複製{[0001|ffff]}{color[ffff]}……
013_03	放到{color[0400]}{[0001|1d00]}右下方{[0001|ffff]}{color[ffff]}的藍色框框裡！
013_04	這樣一來我們的敵人……\n外星人就全部放好了！
014	接下來我們要製作{[0001|1d00]}{color[0400]}牆壁{color[ffff]}{[0001|ffff]}～
016	{[0001|1d00]}{color[0400]}複製物件小節點{color[ffff]}{[0001|ffff]}。
018	把他放大後放到藍色框框裡！
019	再{[0001|1d00]}{color[0400]}複製{color[ffff]}{[0001|ffff]}1個{[0001|1d00]}{color[0400]}物件小節點{color[ffff]}{[0001|ffff]}……
020	把他縮小後放到藍色框框裡……
023	完美！
024	最後來製作{[0001|1d00]}{color[0400]}看不見的牆壁{color[ffff]}{[0001|ffff]}吧。
025	{[0001|1d00]}{color[0400]}複製物件小節點{color[ffff]}{[0001|ffff]}。
027	放到{color[0400]}{[0001|1d00]}右方{[0001|ffff]}{color[ffff]}的藍色框框裡……
028	再{[0001|1d00]}{color[0400]}複製{color[ffff]}{[0001|ffff]}一次……
029	放到{color[0400]}{[0001|1d00]}下方{[0001|ffff]}{color[ffff]}的藍色框框裡～
031	OK！\n我們去確認一下吧！
031_00	試著玩到我們剛做好的場地吧！
031_01	重來一遍吧！\n試著玩到我們剛做好的場地！
032	這就是我們剛才製作的場地……！\n看起來很不錯呢～！
033	那麼……\n現在{[0001|1d00]}{color[0400]}場地變長了{color[ffff]}{[0001|ffff]}……
034	確認時就得花更多時間\n才能抵達製作好的場地……
035	所以……\n我們先暫時調整一下\n{[0001|1d00]}{color[0400]}遊戲的起點位置{color[ffff]}{[0001|ffff]}吧！
036	去程式設計畫面！
039	{[0001|1d00]}{color[0400]}選擇遊戲畫面小節點{color[ffff]}{[0001|ffff]}……
040	把他移動到我們\n剛才製作的場地附近。
040_01	接著{[0001|1d00]}{color[0400]}選擇UFO小節點{color[ffff]}{[0001|ffff]}……
040_02	移動他。
041	那麼……\n我們去遊戲畫面確認一下吧！
042	起點位置變了～！
043	{[0001|2000]}這樣就可以馬上確認到\n我們剛才製作的場地囉！{[0001|ffff]}
044	接下來……\n我們來為這個場地\n設計新的機關吧～！
045	那麼……\n這個步驟的重頭戲要開始囉！！
046	我們要製作{[0001|1d00]}{color[0400]}會旋轉的障礙物{color[ffff]}{[0001|ffff]}！
047	首先要叫出{[0001|1d00]}{color[0400]}可轉動物件小節點{color[ffff]}{[0001|ffff]}。
047_00	選擇{[0001|1d00]}{color[0400]}物件{color[ffff]}{[0001|ffff]}。
047_01	{[0001|1d00]}{color[0400]}特殊物件{color[ffff]}{[0001|ffff]}。
047_02	{[0001|1d00]}{color[0400]}可轉動物件{color[ffff]}{[0001|ffff]}。
047_03	從{color[0400]}{[0001|1d00]}圓柱體{[0001|ffff]}{color[ffff]}裡叫出{color[0400]}{[0001|1d00]}可轉動物件小節點{[0001|ffff]}{color[ffff]}！
050	哈哈哈……你們有事找我嗎～？
051	轉動就是～～\n我的天性～♪
051-01	{color[0400]}{[0001|1d00]}可轉動物件小節點{[0001|ffff]}{color[ffff]}正如其名，\n他可以讓{color[0400]}{[0001|1d00]}會轉動的物件{[0001|ffff]}{color[ffff]}\n出現在遊戲畫面中！
049	那麼，請把{color[0400]}{[0001|1d00]}可轉動物件小節點{[0001|ffff]}{color[ffff]}\n放大到藍色框框的大小，\n調整為縱向的長條形。
052	接著，打開{[0001|1d00]}{color[0400]}可轉動物件小節點{color[ffff]}{[0001|ffff]}的{color[0400]}{[0001|1d00]}設定{[0001|ffff]}{color[ffff]}。
052_00	{[0001|2000]}他{[0001|1d00]}{color[0400]}被炮彈擊中就會損壞{color[ffff]}{[0001|2000]}，\n所以把他設定為跟外星人相同的顏色吧。{[0001|ffff]}
052_01	打開{[0001|1d00]}{color[0400]}顏色{color[ffff]}{[0001|ffff]}的設定……
052_02	設定為{[0001|1d00]}{color[0400]}粉紅色{color[ffff]}{[0001|ffff]}。
052_03	關閉設定。
053	那麼……我們去遊戲畫面看看……\n會出現什麼樣子的物件吧～～
054	畫面中出現了{[0001|1d00]}{color[0400]}粉紅色圓柱體{color[ffff]}{[0001|ffff]}呢～！
054_00	只要用{[0001|1d00]}{color[0400]}鍵暫停畫面捲動{color[ffff]}{[0001|ffff]}，\n就能把他看得一清二楚喔！
055	只是把可轉動物件小節點放在那裡，\n物件是不會轉動的。
056	我們來設計一下程式，\n讓粉紅色圓柱體{[0001|1d00]}{color[0400]}轉動起來{color[ffff]}{[0001|ffff]}吧。
058	要轉動物件，\n就得先叫出{[0001|1d00]}{color[0400]}常數小節點{color[ffff]}{[0001|ffff]}。
058_00	從{[0001|1d00]}輸入{[0001|0700]}{[0001|1d00]}常數{[0001|ffff]}裡叫出{[0001|1d00]}{color[0400]}常數小節點{color[ffff]}{[0001|ffff]}。
059	接著，打開{[0001|1d00]}{color[0400]}常數小節點{color[ffff]}{[0001|ffff]}的{[0001|1d00]}{color[0400]}設定{color[ffff]}{[0001|ffff]}。
060	我們想把{[0001|1d00]}要輸出多少？{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}0.20{color[ffff]}{[0001|ffff]}，\n但這個數值太小了……
060_00	{[0001|2000]}我們還是別用滑桿了，\n用{[0001|ffff]}{[0001|1d00]}{color[0400]}數字鍵盤{color[ffff]}{[0001|2000]}來輸入吧！{[0001|1d00]}{[0001|ffff]}
060_01	請按下這個按鍵，\n{[0001|2000]}用{[0001|1d00]}{color[0400]}數字鍵盤{color[ffff]}{[0001|2000]}把數值設定為{[0001|ffff]}{[0001|1d00]}{color[0400]}0.20{color[ffff]}{[0001|ffff]}。
061	OK！\n關閉設定吧！
062	接著，把{[0001|1d00]}{color[0400]}常數小節點{color[ffff]}{[0001|ffff]}連接到\n{[0001|1d00]}{color[0400]}可轉動物件小節點{color[ffff]}{[0001|ffff]}的{[0001|1d00]}{color[0400]}Z軸端口{color[ffff]}{[0001|ffff]}！
062-01	這樣粉紅色圓柱體\n應該就會轉動起來了！
063	我們去確認看看吧！
064	粉紅色圓柱體\n正在轉動呢～～！！
065	就像這樣，\n只要{color[0400]}{[0001|1d00]}輸入訊號到可轉動物件小節點{[0001|ffff]}{color[ffff]}，\n就能讓物件轉動了！
066	那麼，既然我們都花功夫\n讓這個障礙物轉動起來了……
067	不妨就使用{[0001|1d00]}{color[0400]}連接{color[ffff]}{[0001|ffff]}來讓他的\n動作變得更具有挑戰性吧。
068	去程式設計畫面！
069	首先請從{[0001|1d00]}物件{[0001|0700]}{[0001|1d00]}一般物件{[0001|0700]}{[0001|1d00]}圓柱體{[0001|ffff]}裡\n叫出{[0001|1d00]}{color[0400]}物件小節點{color[ffff]}{[0001|ffff]}。
071	把物件小節點稍微放大一點。
071_00	接著，打開{color[0400]}{[0001|1d00]}物件小節點{[0001|ffff]}{color[ffff]}的設定。
071_01	打開{[0001|1d00]}{color[0400]}顏色{color[ffff]}{[0001|ffff]}……
071_02	和可轉動物件一樣，\n把他設定為{[0001|1d00]}{color[0400]}粉紅色{color[ffff]}{[0001|ffff]}吧！
071_02-01	接下來，請打開用來設定\n物件如何連接的{color[0400]}{[0001|1d00]}連接面{[0001|ffff]}{color[ffff]}！
071_02-02	{[0001|1900]}把{color[0400]}{[0001|1d00]}自己的連接面{[0001|1900]}{color[ffff]}設定為{color[0400]}{[0001|1d00]}X+{[0001|1900]}{color[ffff]}{[0001|ffff]}！
071_02-03	關閉這個畫面……
071_03	關閉設定！
072	那麼，請把這個{[0001|1d00]}{color[0400]}物件小節點{color[ffff]}{[0001|ffff]}\n{[0001|1d00]}{color[0400]}連接{color[ffff]}{[0001|ffff]}到{[0001|1d00]}{color[0400]}可轉動物件小節點{color[ffff]}{[0001|ffff]}！
073	啦啦嚕啦～♪\n我們一起跳舞吧～～！
074	好。
076	那麼……\n我們去看看變成什麼樣子吧～！
077	哇～！\n物件黏在一起轉動了呢！
078	我們再黏1個物件在上面吧！
079	去程式設計畫面！
080	{[0001|1d00]}{color[0400]}複製物件小節點{color[ffff]}{[0001|ffff]}。
082	然後，把他移動到藍色框框裡。
082-01	打開這個{[0001|1d00]}{color[0400]}物件小節點{color[ffff]}{[0001|ffff]}的{[0001|1d00]}{color[0400]}設定{color[ffff]}{[0001|ffff]}。
082-02	打開{[0001|1d00]}{color[0400]}連接面{color[ffff]}{[0001|ffff]}……
082-03	為了把他黏到與剛才相反的位置，\n請把{[0001|1d00]}{color[0400]}連接對象的連接面{color[ffff]}{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}Y-{color[ffff]}{[0001|ffff]}！
082-04	那麼，關閉這個畫面。
082-05	關閉設定畫面。
083	最後請把這個{[0001|1d00]}{color[0400]}物件小節點{color[ffff]}{[0001|ffff]}\n{[0001|1d00]}{color[0400]}連接{color[ffff]}{[0001|ffff]}到{[0001|1d00]}{color[0400]}可轉動物件小節點{color[ffff]}{[0001|ffff]}！
084	我要轉動了。
085	哈哈哈～～\n舞會要開始囉～～♪
092	我們去看看吧！
096	哇～～！\n這個障礙物看起來很有挑戰性呢～！
096_00	就像這樣……只要使用{[0001|1d00]}{color[0400]}連接{color[ffff]}{[0001|ffff]}，\n就能製作出{[0001|1d00]}{color[0400]}複雜形狀的物件{color[ffff]}{[0001|ffff]}！
096_00_00	你覺得已經完成了嗎？\n……其實還沒結束喔～
096_00_01	請按下{[0001|1d00]}{color[0400]}重來鍵{color[ffff]}{[0001|ffff]}讓遊戲重來。
096_00_02	請試著讓UFO\n{color[0400]}{[0001|1d00]}撞向會旋轉的障礙物{[0001|ffff]}{color[ffff]}！
096_00_03	沒錯……！\nUFO不會損壞！
096_00_04	我們來把UFO設定為在接觸到\n會旋轉的障礙物時就{[0001|1d00]}{color[0400]}會損壞{color[ffff]}{[0001|ffff]}吧！
096_01	去程式設計畫面！
096_01_00	打開UFO小節點的{[0001|1d00]}{color[0400]}設定{color[ffff]}{[0001|ffff]}。
096_01_01	除了原本設定的外星人之外，\n我們讓UFO在接觸到會旋轉的障礙物……\n也就是{[0001|1d00]}{color[0400]}圓柱體{color[ffff]}{[0001|ffff]}時也{color[0400]}{[0001|1d00]}會損壞{[0001|ffff]}{color[ffff]}吧。
096_01_02	打開{[0001|1d00]}狀態{[0001|ffff]}的{color[0400]}{[0001|1d00]}會損壞的詳細設定{[0001|ffff]}{color[ffff]}……
096_01_03	把{[0001|1d00]}{color[0400]}圓柱體{color[ffff]}{[0001|ffff]}設定為{color[0400]}{[0001|1d00]}開啟{[0001|ffff]}{color[ffff]}。
096_01_04	關閉這個畫面……
096_01_05	關閉設定。
096_01_06	去確認一下吧！
096_01_07	請試著接觸會旋轉的障礙物！
096_01_08	UFO壞掉了～～！
096_02	這麼一來……！\n{[0001|1d00]}{color[0400]}會旋轉的障礙物{color[ffff]}{[0001|ffff]}就完成了！
097	如果你覺得確認清楚了，\n就回去程式設計畫面吧～！
098	那麼～～這樣就～～
099	完成第6步驟了～！
100	真是優雅的舞步啊～～♪
100_00	……轉得漂亮。
100_01	太好了。
100_02	恭喜你！
101	這次我們設計了\n{[0001|1d00]}{color[0400]}會旋轉的障礙物{color[ffff]}{[0001|ffff]}！
102	只要把物件{[0001|1d00]}{color[0400]}連接{color[ffff]}{[0001|ffff]}在一起，\n就能隨心所欲地製作出想要的形狀……
103	如果{[0001|1d00]}{color[0400]}連接{color[ffff]}{[0001|ffff]}到{[0001|1d00]}{color[0400]}可轉動物件小節點{color[ffff]}{[0001|ffff]}，\n還可以讓{[0001|1d00]}{color[0400]}複雜形狀的物件{color[ffff]}{[0001|ffff]}{color[0400]}{[0001|1d00]}轉動{[0001|ffff]}{color[ffff]}起來！
104	在下個步驟裡，\n我們會應用這次學到的東西……
105	製作{[0001|1d00]}{color[0400]}會旋轉的敵人{color[ffff]}{[0001|ffff]}！
106	那麼，\n我在下個步驟等你喔～！
Lesson_Shooting_06.msbt
000	{[0201]}，\n你來了呢！
001	接下來我們終於要進入\n場地製作中最精彩的部分了……
002	這次我們要應用上次學到的\n{color[0400]}{[0001|1d00]}會旋轉的障礙物{[0001|ffff]}{color[ffff]}……
003	來製作最後的BOSS……\n也就是{[0001|1d00]}{color[0400]}會旋轉的敵人{color[ffff]}{[0001|ffff]}～
004	那麼，我們一起轉啊轉……
005	轉到遊戲的後台世界吧～！
006	首先要製作決戰場地。
007	來增加幾個外星人當作敵人吧。
008	{[0001|1d00]}{color[0400]}複製時尚物件小節點{color[ffff]}{[0001|ffff]}。
010	把複製出來的時尚物件小節點\n放到{color[0400]}{[0001|1d00]}上方{[0001|ffff]}{color[ffff]}的藍色框框裡！
011	再{[0001|1d00]}{color[0400]}複製{color[ffff]}{[0001|ffff]}一次……
012	放到藍色框框裡……
013	{[0001|1d00]}{color[0400]}複製{color[ffff]}{[0001|ffff]}。
014	放到藍色框框裡……
015	{[0001|1d00]}{color[0400]}複製{color[ffff]}{[0001|ffff]}……
016	放到藍色框框裡……！
017	這是最後一個囉！{[0001|1d00]}{color[0400]}複製{color[ffff]}{[0001|ffff]}……
018	放到藍色框框裡！
020-01	外星人的增殖完成了！
021	接著來增加{[0001|1d00]}{color[0400]}牆壁{color[ffff]}{[0001|ffff]}吧。
022	{[0001|1d00]}{color[0400]}複製{color[ffff]}{[0001|ffff]}這邊的{color[0400]}{[0001|1d00]}物件小節點{[0001|ffff]}{color[ffff]}！
024	縮小後放到{color[0400]}{[0001|1d00]}右下方{[0001|ffff]}{color[ffff]}的藍色框框裡！
025	{[0001|1d00]}{color[0400]}複製{color[ffff]}{[0001|ffff]}……
026	把他放大為{[0001|1d00]}{color[0400]}縱向的長～條形{color[ffff]}{[0001|ffff]}，\n放到藍色框框裡。
027	以同樣的方式加入{[0001|1d00]}{color[0400]}看不見的牆壁{color[ffff]}{[0001|ffff]}吧。
028	{[0001|1d00]}{color[0400]}複製{color[ffff]}{[0001|ffff]}這邊的{color[0400]}{[0001|1d00]}物件小節點{[0001|ffff]}{color[ffff]}！
030	放到{color[0400]}{[0001|1d00]}右方{[0001|ffff]}{color[ffff]}的藍色框框裡。
031	再{[0001|1d00]}{color[0400]}複製{color[ffff]}{[0001|ffff]}1個……
032	放到{color[0400]}{[0001|1d00]}下方{[0001|ffff]}{color[ffff]}的藍色框框裡。
033	完美！
034	為了方便我們確認這個場地……
035	這次也{[0001|1d00]}{color[0400]}選擇遊戲畫面小節點{color[ffff]}{[0001|ffff]}……
036	調整一下起點位置吧。
037	接著，{color[0400]}{[0001|1d00]}選擇{[0001|ffff]}{color[ffff]}UFO小節點……
038	把他移動到藍色框框裡～
039	OK！
040	我們去遊戲畫面吧！
041	新場地完成了～！
042	那麼，我們來製作最後的大型機關……
043	{[0001|1d00]}{color[0400]}會旋轉的敵人{color[ffff]}{[0001|ffff]}吧！
044	去程式設計畫面！
047	首先，請複製{[0001|1d00]}{color[0400]}時尚物件小節點{color[ffff]}{[0001|ffff]}！
049	為了營造出最終BOSS的形象……\n把他放大後放到藍色框框裡吧！
050	打開這個{[0001|1d00]}{color[0400]}時尚物件小節點{color[ffff]}{[0001|ffff]}的{[0001|1d00]}{color[0400]}設定{color[ffff]}{[0001|ffff]}……
051	把{[0001|1d00]}轉動{[0001|ffff]}的{[0001|1d00]}Y軸{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}0.00°{color[ffff]}{[0001|ffff]}。
052	接著，把{[0001|1d00]}狀態{[0001|ffff]}的\n{[0001|1d00]}{color[0400]}能移動{color[ffff]}{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}開啟{color[ffff]}{[0001|ffff]}。
053	OK～
054	{[0001|2000]}好了，我們去看看……\n這個BOSS長什麼樣子吧！{[0001|ffff]}
055	{[0001|2000]}出現了～～！\n是巨大的……外星人！！{[0001|ffff]}
056	{[0001|2000]}不錯！\n很有最終BOSS的感覺呢～{[0001|ffff]}
057	我們還得確認他\n{[0001|1d00]}{color[0400]}會不會被炮彈擊敗{color[ffff]}{[0001|ffff]}……
058	請按下{[0001|1d00]}{color[0400]}重來鍵{color[ffff]}{[0001|ffff]}，\n讓遊戲重來吧。
059	試著發射炮彈，\n擊敗這個{[0001|1d00]}{color[0400]}巨大的外星人{color[ffff]}{[0001|ffff]}吧！
060	做得好！\n{[0001|2000]}BOSS{[0001|ffff]}壞掉的樣子也很有震撼力呢！！
061	那麼，接下來我們就要把他……
062	設計成會旋轉的敵人～\n去程式設計畫面吧！
063	由於{[0001|1d00]}{color[0400]}外星人無法自己轉動{color[ffff]}{[0001|ffff]}……
064	我們需要借助上次登場的\n{[0001|1d00]}{color[0400]}可轉動物件小節點{color[ffff]}{[0001|ffff]}的力量～
065	從{[0001|1d00]}物件{[0001|0700]}{[0001|1d00]}特殊物件\n{[0001|0700]}{[0001|1d00]}可轉動物件{[0001|0700]}{[0001|1d00]}立方體{[0001|ffff]}裡\n叫出{[0001|1d00]}{color[0400]}可轉動物件小節點{color[ffff]}{[0001|ffff]}！
066	哈哈哈～～～♪\n{[0201]}，\n我們又見面了呢～～
069	打開{[0001|1d00]}{color[0400]}可轉動物件小節點{color[ffff]}{[0001|ffff]}的{[0001|1d00]}{color[0400]}設定{color[ffff]}{[0001|ffff]}……
070	把{[0001|1d00]}狀態{[0001|ffff]}設定為\n只有{[0001|1d00]}{color[0400]}能移動{color[ffff]}{[0001|ffff]}是{[0001|1d00]}{color[0400]}開啟{color[ffff]}{[0001|ffff]}。
071	關閉設定。
072	哈哈哈～\n你把我變隱形了～～～～
073	即使看不見我～～\n我也會不停轉動喔～～♪
075	想讓他轉動起來……\n就需要{[0001|1d00]}{color[0400]}常數小節點{color[ffff]}{[0001|ffff]}的輸入訊號呢。
076	從{[0001|1d00]}輸入{[0001|0700]}{[0001|1d00]}常數{[0001|ffff]}裡\n叫出{[0001|1d00]}{color[0400]}常數小節點{color[ffff]}{[0001|ffff]}。
078	打開{[0001|1d00]}{color[0400]}常數小節點{color[ffff]}{[0001|ffff]}的{[0001|1d00]}{color[0400]}設定{color[ffff]}{[0001|ffff]}……
079	把{[0001|1d00]}要輸出多少？{[0001|ffff]}\n設定為{[0001|1d00]}{color[0400]}0.30{color[ffff]}{[0001|ffff]}。
080	完美！\n請關閉設定。
081	{[0001|1d00]}{color[0400]}0.30{color[ffff]}{[0001|ffff]}嗎？\n我知道了，是{[0001|1d00]}{color[0400]}0.30{color[ffff]}{[0001|ffff]}。
082	接著，把{[0001|1d00]}{color[0400]}常數小節點{color[ffff]}{[0001|ffff]}連接到\n{[0001|1d00]}{color[0400]}可轉動物件小節點{color[ffff]}{[0001|ffff]}的{[0001|1d00]}{color[0400]}Z軸端口{color[ffff]}{[0001|ffff]}。
083	我絕不會辜負你們的期待……\n敬請欣賞我優雅的轉動吧～～
085	那麼，請把{[0001|1d00]}{color[0400]}時尚物件小節點{color[ffff]}{[0001|ffff]}\n{[0001|1d00]}{color[0400]}連接{color[ffff]}{[0001|ffff]}到{[0001|1d00]}{color[0400]}可轉動物件小節點{color[ffff]}{[0001|ffff]}！
086	在宇宙中旋轉……命中注定的美麗相遇♥
086-01	這樣巨大的外星人\n應該就會轉動囉！
087	好，我們去確認一下吧～
088	正在轉～～來～～轉～～去呢！
089	真是無懈可擊的震撼力……！
090	最終BOSS……\n{[0001|1d00]}{color[0400]}會旋轉的敵人{color[ffff]}{[0001|ffff]}完成了～～！
091	你可以盡情地欣賞敵人旋轉的樣子……\n但要小心不要看到頭暈眼花喔～～
092	看夠了就回去吧～～！
130	那麼～～這樣就～～
131	完成第7步驟了～！
132	美妙的旋轉～♪
133	恭喜。
134	恭喜你。
135	簡直無可挑剔♥
136	這樣一來，夠格當最終BOSS的……\n{[0001|1d00]}{color[0400]}會旋轉的巨大敵人{color[ffff]}{[0001|ffff]}就完成了～！！
137	使用{[0001|1d00]}{color[0400]}可轉動物件小節點{color[ffff]}{[0001|ffff]}……\n把{[0001|1d00]}狀態{[0001|ffff]}的{[0001|1d00]}{color[0400]}能看見{color[ffff]}{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}關閉\n{color[ffff]}{[0001|ffff]}並{[0001|1d00]}{color[0400]}連接{color[ffff]}{[0001|ffff]}到想要轉動的物件上……
138	就能讓{[0001|1d00]}{color[0400]}無法自己轉動的物件{color[ffff]}{[0001|ffff]}\n{[0001|1d00]}{color[0400]}變得可以轉動{color[ffff]}{[0001|ffff]}喔～～！
139	那麼……在下個步驟裡，\n我們終於要設計{[0001|1d00]}{color[0400]}終點{color[ffff]}{[0001|ffff]}了！
140	敬請期待下個步驟～～！
Lesson_Shooting_07.msbt
000	{[0201]}，\n歡迎你～！
001	在之前的步驟中，\n我們已經差不多完成了場地……
004	這次……！\n我們就來製作{[0001|1d00]}{color[0400]}終點的程式{color[ffff]}{[0001|ffff]}吧！
005	……終點就在眼前囉～\n開始設計程式吧！
006	在開始設計{[0001|1d00]}{color[0400]}終點的程式{color[ffff]}{[0001|ffff]}之前……
007	我們先來增加一些{[0001|1d00]}{color[0400]}看不見的牆壁{color[ffff]}{[0001|ffff]}吧。
008	請{[0001|1d00]}{color[0400]}複製{color[ffff]}{[0001|ffff]}這個{[0001|1d00]}{color[0400]}物件小節點{color[ffff]}{[0001|ffff]}！
010	把他移動到右方吧～
012	再{[0001|1d00]}{color[0400]}複製{color[ffff]}{[0001|ffff]}1次……
013	移動到{color[0400]}{[0001|1d00]}下方{[0001|ffff]}{color[ffff]}！！
015	接下來，\n為了讓玩家知道這裡是{[0001|1d00]}{color[0400]}終點{color[ffff]}{[0001|ffff]}……
016	我們在這裡{[0001|1d00]}{color[0400]}顯示\n「終點」的文字{color[ffff]}{[0001|ffff]}吧！
017	從{[0001|1d00]}物件{[0001|0700]}{[0001|1d00]}特殊物件{[0001|ffff]}{[0001|0700]}{[0001|ffff]}{[0001|1d00]}{color[0400]}附註解物件{color[ffff]}{[0001|ffff]}裡\n叫出{[0001|1d00]}{color[0400]}附註解物件小節點{color[ffff]}{[0001|ffff]}。
018	你想傳達的心意，\n會乘著話語之風，\n傳遞給每一個人。
019	把這個{color[0400]}{[0001|1d00]}附註解物件小節點\n{[0001|ffff]}{color[ffff]}調整成橫向的長條形，\n讓他有足夠的空間輸入文字……
020	打開{[0001|1d00]}{color[0400]}附註解物件小節點{color[ffff]}{[0001|ffff]}的{[0001|1d00]}{color[0400]}設定{color[ffff]}{[0001|ffff]}。
021	按下{[0001|1d00]}{color[0400]}編輯{color[ffff]}{[0001|ffff]}鍵，\n輸入{color[0400]}{[0001|1d00]}「終點」{[0001|ffff]}{color[ffff]}吧！
022	你輸入{[0001|1d00]}{color[0400]}「終點」{color[ffff]}{[0001|ffff]}了嗎？
023	是
024	否
025	那麼，請輸入{[0001|1d00]}{color[0400]}「終點」{color[ffff]}{[0001|ffff]}。
026	接著，把{[0001|1d00]}狀態{[0001|ffff]}設定為\n只有{[0001|1d00]}{color[0400]}能看見{color[ffff]}{[0001|ffff]}是{[0001|1d00]}{color[0400]}開啟{color[ffff]}{[0001|ffff]}。
027	然後，打開{color[0400]}{[0001|1d00]}顏色{[0001|ffff]}{color[ffff]}……
028	把他設定為……\n適合宇宙的{color[0400]}{[0001|1d00]}黑色{[0001|ffff]}{color[ffff]}吧。
029	至於{color[0400]}{[0001|1d00]}文字顏色{[0001|ffff]}{color[ffff]}……
030	為了能在宇宙中看清楚……\n把他設定為{[0001|1d00]}{color[0400]}白色{color[ffff]}{[0001|ffff]}吧。
032	最後……\n把{[0001|1d00]}位置{[0001|ffff]}的{[0001|1d00]}Z{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}1.00m{color[ffff]}{[0001|ffff]}！
033	OK！\n關閉設定吧。
034	終點並不代表結束，\n而是一個新的開始。
035	這個終點可謂是\n你作為程式設計師的起點呢。
037	……那麼！\n我們去看看{[0001|1d00]}{color[0400]}終點標示{color[ffff]}{[0001|ffff]}吧！
038	請前進到{[0001|1d00]}{color[0400]}終點標示{color[ffff]}{[0001|ffff]}那裡……
039	這裡就是終點！
040	好，這樣終點的位置\n就決定在這邊了……
043	接著我們來設計當UFO\n抵達{[0001|1d00]}{color[0400]}終點{color[ffff]}{[0001|ffff]}時會產生的{[0001|1d00]}{color[0400]}演出效果{color[ffff]}{[0001|ffff]}吧！
045	歷經重重難關才抵達終點的UFO……\n當然得用最棒的演出效果為他慶祝一番！
047	首先為了{[0001|1d00]}{color[0400]}確認UFO是否來到終點{color[ffff]}{[0001|ffff]}……\n我們叫出{[0001|1d00]}{color[0400]}接觸感應器小節點{color[ffff]}{[0001|ffff]}吧！
049	選擇{[0001|1d00]}{color[0400]}物件{color[ffff]}{[0001|ffff]}。
050	{[0001|1d00]}{color[0400]}感應器{color[ffff]}{[0001|ffff]}。
051	從{[0001|1d00]}{color[0400]}接觸感應器{color[ffff]}{[0001|ffff]}裡\n叫出{[0001|1d00]}{color[0400]}接觸感應器小節點{color[ffff]}{[0001|ffff]}！
052	咿……！\n你、你想做什麼～～？？
053	啊……\n原來是遊戲程式設計師啊……\n真是的，你別嚇我嘛～～
055	接觸感應器小節點能夠\n在遊戲畫面放置{[0001|1d00]}{color[0400]}感應器\n來確認是否接觸到物件{color[ffff]}{[0001|ffff]}。
056	為了保證能接觸到UFO，\n先把{color[0400]}{[0001|1d00]}接觸感應器小節點{[0001|ffff]}{color[ffff]}\n調整為縱向的長條形吧。
057	然後，打開{[0001|1d00]}{color[0400]}接觸感應器小節點{color[ffff]}{[0001|ffff]}的{[0001|1d00]}{color[0400]}設定{color[ffff]}{[0001|ffff]}……
058	打開{[0001|1d00]}{color[0400]}要確認什麼？{color[ffff]}{[0001|ffff]}。
059	接觸感應器小節點只要接觸到\n在這裡被設定為{color[0400]}{[0001|1d00]}開啟{[0001|ffff]}{color[ffff]}的物件，\n就會{color[0400]}{[0001|1d00]}輸出訊號{[0001|ffff]}{color[ffff]}。
060	設定為只有{[0001|1d00]}{color[0400]}UFO{color[ffff]}{[0001|ffff]}是{[0001|1d00]}{color[0400]}開啟{color[ffff]}{[0001|ffff]}吧。
061	OK！\n關閉詳細設定……
062	關閉設定。
063	咿……\nUFO會向我衝過來嗎……？！
065	那麼為了方便我們確認設計結果，\n跟之前一樣選擇{[0001|1d00]}{color[0400]}遊戲畫面小節點{color[ffff]}{[0001|ffff]}……
066	把他移動到終點附近吧。
067	接著，{[0001|1d00]}{color[0400]}選擇UFO小節點{color[ffff]}{[0001|ffff]}……
068	移動他！
069	那麼，我們去遊戲畫面確認一下\n接觸感應器長什麼樣子吧！
072	這個白色框線\n就是{[0001|1d00]}{color[0400]}接觸感應器{color[ffff]}{[0001|ffff]}。
073	當UFO接觸到這個感應器時，\n就代表他抵達終點了！
075	那麼，我們把這個\n白色框線隱藏起來吧～！
076	去程式設計畫面！
077	打開{[0001|1d00]}{color[0400]}接觸感應器小節點{color[ffff]}{[0001|ffff]}的{[0001|1d00]}{color[0400]}設定{color[ffff]}{[0001|ffff]}。
078	把{[0001|1d00]}{color[0400]}狀態{color[ffff]}{[0001|ffff]}的{[0001|1d00]}{color[0400]}能看見{color[ffff]}{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}關閉{color[ffff]}{[0001|ffff]}。
079	關閉設定。
080	我們去確認一下吧！
081	完美！\n看不見感應器的白色框線了呢。
082	那麼，接著我們終於要來設計\n抵達{[0001|1d00]}{color[0400]}終點{color[ffff]}{[0001|ffff]}時的{[0001|1d00]}{color[0400]}演出效果{color[ffff]}{[0001|ffff]}囉！
084	去程式設計畫面！
101	我們就用音效和特效\n為抵達終點的UFO慶祝吧～！
103	先從{[0001|1d00]}輸出{[0001|0700]}{[0001|1d00]}播放聲音{[0001|0700]}{[0001|1d00]}播放音效{[0001|ffff]}裡\n叫出{[0001|1d00]}{color[0400]}播放聲音小節點{color[ffff]}{[0001|ffff]}！
104	我會為抵達終點的贏家～～～\n大肆地～～慶祝一番～♪
106	打開{[0001|1d00]}{color[0400]}播放聲音小節點{color[ffff]}{[0001|ffff]}的{[0001|1d00]}{color[0400]}設定{color[ffff]}{[0001|ffff]}。
107	打開{[0001|1d00]}效果音樂{[0001|ffff]}……
108	選擇{[0001|1d00]}{color[0400]}非常開心{color[ffff]}{[0001|ffff]}吧！
108-01	嗯嗯！\n這個聲音就跟名字一樣，\n聽起來非常令人開心呢！
109	那麼，關閉這個畫面……
110	接著關閉設定～
111	把{[0001|1d00]}{color[0400]}接觸感應器小節點{color[ffff]}{[0001|ffff]}連接到\n{[0001|1d00]}{color[0400]}播放聲音小節點{color[ffff]}{[0001|ffff]}的{[0001|1d00]}{color[0400]}播放端口{color[ffff]}{[0001|ffff]}。
112	交給我吧～～♪
113	咿……！！
113-01	這樣一來……\n當UFO接觸到接觸感應器時，\n遊戲就會播放聲音了～！
114	接下來，叫出{color[0400]}{[0001|1d00]}特效小節點{[0001|ffff]}{color[ffff]}，\n讓他在抵達終點時發射煙火吧！
115	從{[0001|1d00]}物件{[0001|0700]}{[0001|1d00]}特殊物件{[0001|0700]}{[0001|1d00]}特效{[0001|0700]}{[0001|1d00]}煙火{[0001|ffff]}裡\n叫出{[0001|1d00]}{color[0400]}特效小節點{color[ffff]}{[0001|ffff]}！
120	哎呀～{[0201]}！\n製作遊戲辛苦你了。
121	在這個遊戲完成後……\n我們來舉辦慶功宴，\n一起吃「煙火」吧～！
122	……我說的是煙燻火雞啦！！
123	把{[0001|1d00]}{color[0400]}接觸感應器小節點{color[ffff]}{[0001|ffff]}\n連接到{[0001|1d00]}{color[0400]}特效小節點{color[ffff]}{[0001|ffff]}。
123-01	這樣一來……\n當UFO接觸到接觸感應器時，\n遊戲就會播放聲音並發射煙火了！
128	那麼，我們去確認一下吧～～
129	請你操控UFO，\n帥氣地抵達終點吧！！
130	抵達終點了～～～～～～～！！
131	{[0001|1d00]}{color[0400]}煙火的特效{color[ffff]}{[0001|ffff]}跟{[0001|1d00]}{color[0400]}抵達終點的音效{color[ffff]}{[0001|ffff]}……\n兩者都順利出現了呢～～！
132	那麼，最後就跟之前一樣……\n來製作{[0001|1d00]}{color[0400]}當抵達終點時就會重來的程式{color[ffff]}{[0001|ffff]}吧。
134	我們去程式設計畫面吧～
135	從{[0001|1d00]}輸出{[0001|0700]}{[0001|1d00]}重來、結束、切換\n{[0001|0700]}{[0001|1d00]}重來遊戲{[0001|ffff]}裡叫出{[0001|1d00]}{color[0400]}重來小節點{color[ffff]}{[0001|ffff]}。
136	唉……我好想重來……
137	……你怎麼了？
138	前陣子我午睡時……
140	好像喊出了……\n「本大爺是世界之王！！」\n之類的夢話……
141	唉……\n太丟臉了……好想重來……
143	……呃～\n那麼，讓我們回到程式設計！
144	從{[0001|1d00]}中間{[0001|0700]}{[0001|1d00]}計時器{[0001|ffff]}裡\n叫出{[0001|1d00]}{color[0400]}計時器小節點{color[ffff]}{[0001|ffff]}。
145	請你長話短說。
146	畢竟時間有限，\n我們可不能白白浪費寶貴的時間。
173	所謂「時間就是金錢」，\n正因為沒有任何東西能取代時間，\n我們才更應該有效地活用時間讓工作效率……
147	知道了！那我就長話短說吧！\n請打開計時器小節點的{[0001|1d00]}{color[0400]}設定{color[ffff]}{[0001|ffff]}～！
148	把{[0001|1d00]}要在幾秒後輸出{[0001|ffff]}\n設定為{[0001|1d00]}{color[0400]}6.00{color[ffff]}{[0001|ffff]}。
149	OK！\n關閉設定！
151	那麼……\n把{[0001|1d00]}{color[0400]}接觸感應器小節點{color[ffff]}{[0001|ffff]}\n連接到{[0001|1d00]}{color[0400]}計時器小節點{color[ffff]}{[0001|ffff]}……
152	接著把{[0001|1d00]}{color[0400]}計時器小節點{color[ffff]}{[0001|ffff]}\n連接到{[0001|1d00]}{color[0400]}重來小節點{color[ffff]}{[0001|ffff]}……
153	這樣一來……{[0001|1d00]}{color[0400]}當抵達終點時\n就會重來的程式{color[ffff]}{[0001|ffff]}就完成了！
154	那麼，\n我們去遊戲畫面確認一下吧！
157	請操控UFO抵達終點！
157-01	請稍等一下……
158	遊戲{[0001|1d00]}{color[0400]}重來{color[ffff]}{[0001|ffff]}了～～！
159	這樣{[0001|1d00]}{color[0400]}終點的程式{color[ffff]}{[0001|ffff]}就完成了！
160	到程式設計畫面去～！
161	那麼～～這樣就～～
162	完成第8步驟了～！
163	恭喜你～～♪
164	來開慶功宴吧～～！！
165	你的話語乘風而來……\n傳達到我的心中了喔。
166	恭……恭喜你～！
167	這次……我們設計了\n{[0001|1d00]}{color[0400]}終點的程式{color[ffff]}{[0001|ffff]}和{[0001|1d00]}{color[0400]}演出效果{color[ffff]}{[0001|ffff]}！
169	歡樂的時光總是過得特別快，\n這個遊戲只剩下……{[0001|1d00]}{color[0400]}2個{color[ffff]}{[0001|ffff]}步驟囉！！
170	在下個步驟中……\n我們要製作射擊遊戲裡\n必不可缺的{[0001|1d00]}{color[0400]}得分顯示{color[ffff]}{[0001|ffff]}！
172	敬請期待～！！！
Lesson_Shooting_08.msbt
000	{[0201]}，\n等你很久囉！
001	我們上次製作了\n{[0001|1d00]}{color[0400]}終點的程式{color[ffff]}{[0001|ffff]}呢！
002	其實……\n遊戲已經算是完成了……
003	不過機會難得，\n我們就多挑戰一些程式吧！
004	這次我們要……\n製作遊戲的{[0001|1d00]}{color[0400]}得分顯示{color[ffff]}{[0001|ffff]}！
005	除此之外！
006	我們還要設計當打敗\n所有敵人並抵達終點時……\n會顯示{[0001|1d00]}{color[0400]}「完美！」{color[ffff]}{[0001|ffff]}的程式！
008	那麼，我們去程式設計畫面吧！
009	先從{[0001|1d00]}{color[0400]}得分顯示{color[ffff]}{[0001|ffff]}開始設計吧。
010	我們要計算{[0001|1d00]}{color[0400]}打敗的外星人數量{color[ffff]}{[0001|ffff]}\n並{[0001|1d00]}{color[0400]}顯示在畫面上{color[ffff]}{[0001|ffff]}！
011	首先，從{[0001|1d00]}輸入{[0001|0700]}{[0001|1d00]}遊戲內的變化\n{[0001|0700]}{[0001|1d00]}物件損壞時{[0001|ffff]}裡叫出{[0001|1d00]}{color[0400]}物件損壞時小節點{color[ffff]}{[0001|ffff]}。
012	怎麼了？這次要我計算\n被破壞的外星人數量嗎？
013	你還真是喜歡破壞物件呢～
015	那麼，請打開{[0001|1d00]}{color[0400]}物件損壞時小節點{color[ffff]}{[0001|ffff]}的{[0001|1d00]}{color[0400]}設定{color[ffff]}{[0001|ffff]}。
016	打開{[0001|1d00]}{color[0400]}要確認什麼？{color[ffff]}{[0001|ffff]}……
017	設定為只有{[0001|1d00]}{color[0400]}外星人{color[ffff]}{[0001|ffff]}是{[0001|1d00]}{color[0400]}開啟{color[ffff]}{[0001|ffff]}。
018	關閉這個畫面……
019	關閉設定！
021	接著，從{[0001|1d00]}中間{[0001|0700]}{[0001|1d00]}旗標、計數器、隨機\n{[0001|0700]}{[0001|1d00]}計數器{[0001|ffff]}裡叫出{[0001|1d00]}{color[0400]}計數器小節點{color[ffff]}{[0001|ffff]}。
023	接下來，把{[0001|1d00]}{color[0400]}物件損壞時小節點{color[ffff]}{[0001|ffff]}\n連接到{[0001|1d00]}{color[0400]}計數器小節點{color[ffff]}{[0001|ffff]}的{[0001|1d00]}{color[0400]}增加端口{color[ffff]}{[0001|ffff]}。
024	{[0001|1d00]}{color[0400]}當外星人損壞時{color[ffff]}{[0001|ffff]}，\n我就會告訴你喔！
025	那麼，我就來計算\n有幾隻外星人損壞了吧。
026	最後，從{[0001|1d00]}物件{[0001|0700]}{[0001|1d00]}特殊物件{[0001|0700]}{[0001|1d00]}附數字物件{[0001|ffff]}裡\n叫出{[0001|1d00]}{color[0400]}附數字物件小節點{color[ffff]}{[0001|ffff]}。
027	請把要顯示的數值輸入給我喔。
028	打開{[0001|1d00]}{color[0400]}附數字物件小節點{color[ffff]}{[0001|ffff]}的{[0001|1d00]}{color[0400]}設定{color[ffff]}{[0001|ffff]}。
029	把{[0001|1d00]}狀態{[0001|ffff]}設定為\n只有{[0001|1d00]}{color[0400]}能看見{color[ffff]}{[0001|ffff]}是{[0001|1d00]}{color[0400]}開啟{color[ffff]}{[0001|ffff]}。
030	然後，打開{color[0400]}{[0001|1d00]}顏色{[0001|ffff]}{color[ffff]}……
031	設定為{color[0400]}{[0001|1d00]}黑色{[0001|ffff]}{color[ffff]}吧。
032	而{color[0400]}{[0001|1d00]}文字顏色{[0001|ffff]}{color[ffff]}……
033	就設定為{[0001|1d00]}{color[0400]}白色{color[ffff]}{[0001|ffff]}吧。
036	{[0001|2000]}OK！{[0001|ffff]}
037	那麼，把{[0001|1d00]}{color[0400]}計數器小節點{color[ffff]}{[0001|ffff]}\n連接到{[0001|1d00]}{color[0400]}附數字物件小節點{color[ffff]}{[0001|ffff]}。
038	我只要在遊戲畫面上{[0001|1d00]}{color[0400]}顯示\n打敗的外星人數量{color[ffff]}{[0001|ffff]}就行了吧？
041	沒錯！那麼我們差不多\n也該去遊戲畫面確認了……
042	不過在那之前，\n我們得修改一下程式！
043	畢竟沒有打敗敵人的話，\n{[0001|1d00]}{color[0400]}得分就只會維持在0分{color[ffff]}{[0001|ffff]}……
044	所以，請{[0001|1d00]}{color[0400]}選擇遊戲畫面小節點{color[ffff]}{[0001|ffff]}……
045	把他{[0001|1d00]}{color[0400]}移動到敵人所在地{color[ffff]}{[0001|ffff]}，\n讓我們可以打敗敵人吧。
046	接著，{[0001|1d00]}{color[0400]}選擇UFO小節點{color[ffff]}{[0001|ffff]}……
047	把他{color[0400]}{[0001|1d00]}移動{[0001|ffff]}{color[ffff]}到藍色框框裡。
048	好了，我們去確認看看吧！
049	請向終點前進，\n打敗阻擋你的敵人！
050	畫面上正確地顯示出\n{[0001|1d00]}{color[0400]}打敗的外星人數量{color[ffff]}{[0001|ffff]}了～！
051	不過……只有數字的話，\n{[0001|1d00]}{color[0400]}無法讓人明白這個數字的意義{color[ffff]}{[0001|ffff]}……
052	我們來添加文字說明吧～
053	為了用文字來\n說明這是{[0001|1d00]}{color[0400]}得分{color[ffff]}{[0001|ffff]}……
054	請{[0001|1d00]}{color[0400]}複製附註解物件小節點{color[ffff]}{[0001|ffff]}！
058	接著，把他縮小一點後，\n放到附數字物件小節點的旁邊！
062	打開{[0001|1d00]}{color[0400]}附註解物件小節點{color[ffff]}{[0001|ffff]}的{[0001|1d00]}{color[0400]}設定{color[ffff]}{[0001|ffff]}……
063	按下編輯鍵並輸入{[0001|1d00]}{color[0400]}「得分」{color[ffff]}{[0001|ffff]}吧。
064	你輸入{[0001|1d00]}{color[0400]}「得分」{color[ffff]}{[0001|ffff]}了嗎？
065	是
066	否
067	請輸入{[0001|1d00]}{color[0400]}「得分」{color[ffff]}{[0001|ffff]}。
069	然後，把{[0001|1d00]}位置{[0001|ffff]}的{[0001|1d00]}Z{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}0.00m{color[ffff]}{[0001|ffff]}。
070	完美！\n請關閉設定。
071	那麼……\n我們去確認一下吧！
072	那麼，請向終點前進……\n打敗阻擋你的外星人！
074	現在我們能清楚地知道\n這個數字是{[0001|1d00]}{color[0400]}得分{color[ffff]}{[0001|ffff]}了！
075	不過……
077	在抵達終點前就{[0001|1d00]}{color[0400]}看見得分{color[ffff]}{[0001|ffff]}，\n一點驚喜感都沒有……
078	所以……我們來修改一下程式，\n讓遊戲在UFO{[0001|1d00]}{color[0400]}抵達終點後才顯示得分{color[ffff]}{[0001|ffff]}吧！
079	去程式設計畫面！
081	首先，我們要讓得分\n不會顯示在遊戲畫面。
083	把{[0001|1d00]}{color[0400]}附註解物件小節點{color[ffff]}{[0001|ffff]}\n放到遊戲畫面外。
084	然後把{[0001|1d00]}{color[0400]}附數字物件小節點{color[ffff]}{[0001|ffff]}\n放到他的旁邊。
084-01	這樣一來，得分就不會\n出現在遊戲畫面上了。
084-02	接著，我們要讓得分\n在UFO抵達終點時\n{color[0400]}{[0001|1d00]}傳送{[0001|ffff]}{color[ffff]}到遊戲畫面內！
086	首先，為了讓{[0001|1d00]}{color[0400]}附註解物件{color[ffff]}{[0001|ffff]}\n和{[0001|1d00]}{color[0400]}附數字物件{color[ffff]}{[0001|ffff]}能一起{[0001|2000]}傳送{[0001|ffff]}……
088	請把{[0001|1d00]}{color[0400]}附數字物件小節點{color[ffff]}{[0001|ffff]}\n{[0001|1d00]}{color[0400]}連接{color[ffff]}{[0001|ffff]}到{[0001|1d00]}{color[0400]}附註解物件小節點{color[ffff]}{[0001|ffff]}。
090	然後，打開{[0001|1d00]}{color[0400]}附數字物件小節點{color[ffff]}{[0001|ffff]}的{[0001|1d00]}{color[0400]}設定{color[ffff]}{[0001|ffff]}……
091	打開{color[0400]}{[0001|1d00]}連接面{[0001|ffff]}{color[ffff]}。
092	把{color[0400]}{[0001|1d00]}自己的連接面{[0001|ffff]}{color[ffff]}\n設定為{color[0400]}{[0001|1d00]}X-{[0001|ffff]}{color[ffff]}。
093	把{[0001|1d00]}{color[0400]}連接對象的連接面{color[ffff]}{[0001|ffff]}\n設定為{[0001|1d00]}{color[0400]}X+{color[ffff]}{[0001|ffff]}。
093-01	這樣一來，附數字物件就會\n黏在附註解物件的{[0001|1d00]}{color[0400]}右方{color[ffff]}{[0001|ffff]}了！
094	關閉這個畫面。
095	關閉設定！
096	{[0001|2000]}那麼……接著我們來設計\n{color[0400]}{[0001|1d00]}傳送得分顯示的程式{[0001|2000]}{color[ffff]}吧！{[0001|ffff]}
097	從{[0001|1d00]}物件{[0001|0700]}{[0001|1d00]}放出、消除、引力{[0001|0700]}{[0001|1d00]}傳送物件\n{[0001|0700]}{[0001|1d00]}{color[0400]}入口{color[ffff]}{[0001|ffff]}裡叫出{[0001|1d00]}{color[0400]}傳送物件入口小節點{color[ffff]}{[0001|ffff]}！
099	門，你想利用傳送之術，\n操縱遊戲得分的顯示嗎？
100	我會助你一臂之力。
100-01	那麼，請把傳送物件入口小節點\n稍微重疊在附註解物件小節點上。
102	接著，從{[0001|1d00]}物件{[0001|0700]}{[0001|1d00]}放出、消除、引力{[0001|0700]}{[0001|1d00]}傳送物件\n{[0001|0700]}{[0001|1d00]}{color[0400]}出口{color[ffff]}{[0001|ffff]}裡叫出{[0001|1d00]}{color[0400]}傳送物件出口小節點{color[ffff]}{[0001|ffff]}！
104	門門，\n得分必將超越維度，\n傳送至我身處之地。
108	打開{[0001|1d00]}{color[0400]}傳送物件出口小節點{color[ffff]}{[0001|ffff]}的{[0001|1d00]}{color[0400]}設定{color[ffff]}{[0001|ffff]}。
109	把{[0001|1d00]}狀態{[0001|ffff]}的{[0001|1d00]}{color[0400]}能看見{color[ffff]}{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}關閉{color[ffff]}{[0001|ffff]}。
110	把{[0001|1d00]}位置{[0001|ffff]}的{[0001|1d00]}Z{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}1.00m{color[ffff]}{[0001|ffff]}。
111	OK！\n關閉設定！
113	最後，把{[0001|1d00]}{color[0400]}接觸感應器小節點{color[ffff]}{[0001|ffff]}\n連接到{[0001|1d00]}{color[0400]}傳送物件入口小節點{color[ffff]}{[0001|ffff]}！
114	這樣一來，{[0001|2000]}當UFO抵達終點時，\n得分就會被{color[0400]}{[0001|1d00]}傳送{[0001|2000]}{color[ffff]}到遊戲畫面內！{[0001|ffff]}
115	我們去遊戲畫面確認一下吧！
116	以終點為目標～\n射擊遊戲！開始！！
118	抵達終點後，得分就出現了～！！
119	那麼，我們就在這裡……
120	加入當{color[0400]}{[0001|1d00]}打敗所有外星人{[0001|ffff]}{color[ffff]}時\n才會出現的{[0001|1d00]}{color[0400]}「完美！」{color[ffff]}{[0001|ffff]}字樣吧！
121	去程式設計畫面！
122	跟得分一樣，我們要利用{color[0400]}{[0001|1d00]}傳送{[0001|ffff]}{color[ffff]}\n讓「完美！」字樣出現在畫面上～！
123	首先{[0001|1d00]}{color[0400]}複製附註解物件小節點{color[ffff]}{[0001|ffff]}。
124	接著，把複製出來的\n{color[0400]}{[0001|1d00]}附註解物件小節點{[0001|ffff]}{color[ffff]}\n稍微放大後放在下方。
125	打開複製出來的\n{[0001|1d00]}{color[0400]}附註解物件小節點{color[ffff]}{[0001|ffff]}的{[0001|1d00]}{color[0400]}設定{color[ffff]}{[0001|ffff]}……
126	按下{[0001|1d00]}編輯{[0001|ffff]}鍵並輸入{[0001|1d00]}{color[0400]}「完美！」{color[ffff]}{[0001|ffff]}。
127	你輸入{[0001|1d00]}{color[0400]}「完美！」{color[ffff]}{[0001|ffff]}了嗎？
128	是
129	否
130	請輸入{[0001|1d00]}{color[0400]}「完美！」{color[ffff]}{[0001|ffff]}。
131	接下來，打開{[0001|1d00]}{color[0400]}文字顏色{color[ffff]}{[0001|ffff]}……
132	為了讓他顯眼一點。\n把他設定為{[0001|1d00]}{color[0400]}黃色{color[ffff]}{[0001|ffff]}吧。
133	OK！\n關閉設定！
134	接著{[0001|1d00]}{color[0400]}複製傳送物件入口小節點{color[ffff]}{[0001|ffff]}。
136	門，你這次是打算\n讓完美之證顯現嗎……？\n無妨，放手去做吧。
138	把複製出來的傳送物件入口小節點\n稍微重疊在附註解物件小節點上～
139	打開傳送物件入口小節點的{[0001|1d00]}{color[0400]}設定{color[ffff]}{[0001|ffff]}。
140	把{[0001|1d00]}傳送ID{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}B{color[ffff]}{[0001|ffff]}。
141	關閉設定。
144	接著，{[0001|1d00]}{color[0400]}複製傳送物件出口小節點{color[ffff]}{[0001|ffff]}。
145	把他放在得分顯示位置的上方～
149	門門，我連接到\n{[0001|1d00]}{color[0400]}入口B{color[ffff]}{[0001|ffff]}的亞空間了……
150	門，看來亞空間的\n{[0001|2000]}{color[0400]}{[0001|1d00]}出口已經決定好了{[0001|2000]}{color[ffff]}……{[0001|ffff]}
151	這樣一來，傳送「完美！」\n字樣的準備工作就完成了！
152	那麼，接下來我們要設計\n在什麼時候顯示「完美！」……\n也就是{[0001|1d00]}{color[0400]}「完美」過關的條件{color[ffff]}{[0001|ffff]}。
153	「完美」過關的條件是\n{[0001|1d00]}{color[0400]}打敗所有敵人……\n也就是20隻外星人{color[ffff]}。{[0001|ffff]}
154	而目前{color[0400]}{[0001|1d00]}計數器小節點{[0001|ffff]}{color[ffff]}正在\n計算{[0001|1d00]}{color[0400]}打敗的外星人數量{color[ffff]}{[0001|ffff]}呢。
155	沒錯，我正在計算。
156	我們希望{[0001|1d00]}{color[0400]}當計數器小節點\n數到20時讓物件傳送過去{color[ffff]}{[0001|ffff]}……
157	所以從{[0001|1d00]}中間{[0001|0700]}{[0001|1d00]}比較{[0001|0700]}{[0001|1d00]}＝{[0001|ffff]}裡\n叫出{[0001|1d00]}{color[0400]}比較小節點{color[ffff]}{[0001|ffff]}吧！
159	你有沒有打敗20隻外星人呢……？\n真令人好奇！
160	接著，從{[0001|1d00]}輸入{[0001|0700]}{[0001|1d00]}常數{[0001|ffff]}裡\n叫出{[0001|1d00]}{color[0400]}常數小節點{color[ffff]}{[0001|ffff]}。
162	打開常數小節點的設定。
163	為了確認是否打敗了20隻外星人……\n把{[0001|1d00]}要輸出多少？{[0001|ffff]}設定為{[0001|1d00]}{color[0400]}20.00{color[ffff]}{[0001|ffff]}吧。
164	OK！
165	{[0001|1d00]}{color[0400]}20.00{color[ffff]}{[0001|ffff]}對吧？\n我知道了，是{[0001|1d00]}{color[0400]}20.00{color[ffff]}{[0001|ffff]}。
166	那麼，把{[0001|1d00]}{color[0400]}計數器小節點{color[ffff]}{[0001|ffff]}連接到\n{[0001|1d00]}{color[0400]}比較小節點{color[ffff]}{[0001|ffff]}的{[0001|1d00]}{color[0400]}輸入1端口{color[ffff]}{[0001|ffff]}。
167	然後，把{[0001|1d00]}{color[0400]}常數小節點{color[ffff]}{[0001|ffff]}連接到\n{[0001|1d00]}{color[0400]}比較小節點{color[ffff]}{[0001|ffff]}的{[0001|1d00]}{color[0400]}輸入2端口{color[ffff]}{[0001|ffff]}。
170	這樣當玩家{color[0400]}{[0001|1d00]}打敗20隻外星人{[0001|ffff]}{color[ffff]}時……\n也就是{color[0400]}{[0001|1d00]}「完美」過關{[0001|ffff]}{color[ffff]}時，\n比較小節點就會輸出訊號！
171	最後，只要把{[0001|1d00]}{color[0400]}比較小節點{color[ffff]}{[0001|ffff]}\n連接到{[0001|1d00]}{color[0400]}傳送物件入口小節點{color[ffff]}{[0001|ffff]}……
173	就算是完成了……不過，\n其實還有一點小問題呢。
174	依照目前的設計……\n在{color[0400]}{[0001|1d00]}打敗20隻外星人的瞬間{[0001|ffff]}{color[ffff]}\n就會顯示「完美！」。
175	我們來修改一下程式，\n讓「完美！」跟得分一樣，\n在{color[0400]}{[0001|1d00]}抵達終點時{[0001|ffff]}{color[ffff]}才會出現吧！
176	為此，我們必須確認兩個條件：\n{[0001|1d00]}{color[0400]}打敗20隻外星人{color[ffff]}{[0001|ffff]}且{[0001|1d00]}{color[0400]}UFO抵達終點{color[ffff]}{[0001|ffff]}……
177	只有在同時{[0001|1d00]}{color[0400]}滿足這2個條件時{color[ffff]}{[0001|ffff]}，\n才能讓遊戲顯示「完美！」。
179	要製作這樣的程式～\n就需要用到{[0001|1d00]}{color[0400]}AND小節點{color[ffff]}{[0001|ffff]}！
180	選擇{[0001|1d00]}{color[0400]}中間{color[ffff]}{[0001|ffff]}。
181	{[0001|1d00]}{color[0400]}邏輯{color[ffff]}{[0001|ffff]}。
182	從{[0001|1d00]}{color[0400]}AND{color[ffff]}{[0001|ffff]}裡叫出{[0001|1d00]}{color[0400]}AND小節點{color[ffff]}{[0001|ffff]}。
183	右邊沒問題！左邊沒問題！\n我是AND小節點！
184	我只會在兩邊的輸入\n{[0001|1d00]}{color[0400]}都OK{color[ffff]}{[0001|ffff]}時才會輸出訊號！
185	{[0001|1d00]}{color[0400]}AND小節點{color[ffff]}{[0001|ffff]}只有在{[0001|1d00]}{color[0400]}2個{color[ffff]}{[0001|ffff]}輸入端\n都接收到輸入時才會{[0001|1d00]}{color[0400]}輸出訊號{color[ffff]}{[0001|ffff]}。
188	快把{[0001|1d00]}{color[0400]}比較小節點{color[ffff]}{[0001|ffff]}連接到\n{[0001|1d00]}{color[0400]}AND小節點{color[ffff]}{[0001|ffff]}的{[0001|1d00]}{color[0400]}輸入2端口{color[ffff]}{[0001|ffff]}吧。
189	沒問題沒問題！\n{[0001|1d00]}{color[0400]}打敗20隻外星人{color[ffff]}{[0001|ffff]}……\n是{[0001|1d00]}{color[0400]}第1個條件{color[ffff]}{[0001|ffff]}，對吧。
191	接著，把{[0001|1d00]}{color[0400]}接觸感應器小節點{color[ffff]}{[0001|ffff]}\n連接到{[0001|1d00]}{color[0400]}AND小節點{color[ffff]}{[0001|ffff]}的{[0001|1d00]}{color[0400]}輸入1端口{color[ffff]}{[0001|ffff]}！
192	哦！\n{[0001|1d00]}{color[0400]}抵達終點{color[ffff]}{[0001|ffff]}……就是{[0001|1d00]}{color[0400]}第2個條件{color[ffff]}{[0001|ffff]}吧。
193	最後，把{[0001|1d00]}{color[0400]}AND小節點{color[ffff]}{[0001|ffff]}\n連接到{[0001|1d00]}{color[0400]}傳送物件入口小節點{color[ffff]}{[0001|ffff]}！
194	這樣一來，\n當{color[0400]}{[0001|1d00]}打敗20隻外星人{[0001|ffff]}{color[ffff]}並{color[0400]}{[0001|1d00]}抵達終點{[0001|ffff]}{color[ffff]}時……
194-01	{color[0400]}{[0001|1d00]}會出現「完美！」字樣的程式{[0001|ffff]}{color[ffff]}就完成了！
195	接下來！\n雖然很想馬上去確認看看……
196	但是要打敗20隻外星人，\n這難度有點太高了～～！
199	所以，{[0001|1d00]}{color[0400]}為了方便我們確認{color[ffff]}{[0001|ffff]}……\n{[0001|1d00]}{color[0400]}暫時{color[ffff]}{[0001|ffff]}把「完美」過關的條件放寬一點吧。
201	打開{[0001|1d00]}{color[0400]}常數小節點{color[ffff]}{[0001|ffff]}的{[0001|1d00]}{color[0400]}設定{color[ffff]}{[0001|ffff]}。
202	把{[0001|1d00]}要輸出多少？{[0001|ffff]}更改為{[0001|1d00]}{color[0400]}3.00{color[ffff]}{[0001|ffff]}。
202-01	這樣一來，只要打敗{color[0400]}{[0001|1d00]}3隻{[0001|ffff]}{color[ffff]}外星人，\n「完美！」字樣應該就會出現了。
203	關閉設定～
205	那麼……我們去確認一下\n「完美！」字樣的顯示情形吧！
206	打敗{[0001|1d00]}{color[0400]}3隻{color[ffff]}{[0001|ffff]}外星人並抵達終點，\n讓{[0001|1d00]}{color[0400]}「完美！」字樣{color[ffff]}{[0001|ffff]}出現吧！
207	「完美！」字樣出現了～！
208	再挑戰一次吧～！\n請打敗{[0001|1d00]}{color[0400]}3隻{color[ffff]}{[0001|ffff]}外星人！
209	別氣餒！打敗{[0001|1d00]}{color[0400]}3隻{color[ffff]}{[0001|ffff]}外星人，\n讓{[0001|1d00]}{color[0400]}「完美！」字樣{color[ffff]}{[0001|ffff]}出現吧！
210	既然已經確認程式沒問題了，\n就把他設定回原本的條件吧～
213	打開常數小節點的{color[0400]}{[0001|1d00]}設定{[0001|ffff]}{color[ffff]}。
214	把{[0001|1d00]}要輸出多少？{[0001|ffff]}設定回{[0001|1d00]}{color[0400]}20.00{color[ffff]}{[0001|ffff]}。
215	OK！\n關閉設定！
217	接著，把遊戲畫面和UFO\n也放回原本的位置吧。
218	選擇{[0001|1d00]}{color[0400]}遊戲畫面小節點{color[ffff]}{[0001|ffff]}……
219	把他{[0001|1d00]}{color[0400]}移動{color[ffff]}{[0001|ffff]}到\n遊戲的起點位置。
221	然後{[0001|1d00]}{color[0400]}選擇UFO小節點{color[ffff]}{[0001|ffff]}。
222	把{[0001|1d00]}{color[0400]}UFO小節點{color[ffff]}{[0001|ffff]}也放回{[0001|1d00]}{color[0400]}起點位置{color[ffff]}{[0001|ffff]}！
223	這樣就能從起點開始遊戲囉。
224	那麼，我們去遊戲畫面確認一下……\nALIEN SHOOTING目前製作好的部分吧！
226	雖然可能有點難度，\n不過還是請你試著\n挑戰「完美」過關吧！
229	做得好～～～～～～！！！！
231	{[0201]}，\n你玩遊戲的技術也很高超呢！！
232	別氣餒……\n再挑戰一次{[0001|1d00]}{color[0400]}「完美」過關{color[ffff]}{[0001|ffff]}吧！
233	真的很難呢……\n之後要再來挑戰看看喔！
235	那麼，我們去程式設計畫面吧！
267	那麼～～這樣就～～
268	完成第9步驟了～！
269	恭喜你！
270	沒問題沒問題！狀態絕佳！
271	跟之前比起來，\n你進步了很多呢！
272	堪稱「完美」。
273	這次我們設計了{[0001|1d00]}{color[0400]}得分顯示{color[ffff]}{[0001|ffff]}……
274	還使用{[0001|1d00]}{color[0400]}AND小節點{color[ffff]}{[0001|ffff]}\n製作了{[0001|1d00]}{color[0400]}「完美！」字樣{color[ffff]}{[0001|ffff]}的程式！
275	下次就是最後一個步驟了……！
276	{[0201]}，\n這關鍵的最後一步將由你親手來完成……！
277	用{[0201]}的創意\n為這款遊戲注入新的生命吧！
278	那麼，\n我在下個步驟等你喔～！
Lesson_Shooting_09.msbt
000	{[0201]}，\n你回來了～！
001	我們終於來到\n最後的步驟了～～～～！
002	在這關鍵的最後一步裡……
003	我們要讓UFO變成\n{[0201]}{[0001|1d00]}{color[0400]}畫的圖案{color[ffff]}{[0001|ffff]}～～！
004	那麼～讓我們一起好好\n享受這最後的步驟吧～
005	說到{[0001|1d00]}{color[0400]}畫圖{color[ffff]}{[0001|ffff]}……\n就得叫出{[0001|1d00]}{color[0400]}材質小節點{color[ffff]}{[0001|ffff]}！
007	選擇{[0001|1d00]}{color[0400]}物件{color[ffff]}{[0001|ffff]}。
008	{[0001|1d00]}{color[0400]}特殊物件{color[ffff]}{[0001|ffff]}。
009	從{[0001|1d00]}{color[0400]}材質{color[ffff]}{[0001|ffff]}裡叫出{[0001|1d00]}{color[0400]}材質小節點{color[ffff]}{[0001|ffff]}！
011	{[0201]}，\n你好。
012	你畫的圖案將會成為\n世上獨一無二的作品。
014	請盡情地在畫布上\n揮灑你的創意吧。
017	為了把{[0001|1d00]}{color[0400]}畫好的圖案{color[ffff]}{[0001|ffff]}\n{[0001|1d00]}{color[0400]}黏貼在UFO上{color[ffff]}{[0001|ffff]}……
018	請把{[0001|1d00]}{color[0400]}材質小節點{color[ffff]}{[0001|ffff]}\n{[0001|1d00]}{color[0400]}連接{color[ffff]}{[0001|ffff]}到{[0001|1d00]}{color[0400]}UFO小節點{color[ffff]}{[0001|ffff]}。
019	完美！
020	接著，打開{[0001|1d00]}{color[0400]}材質小節點{color[ffff]}{[0001|ffff]}的{[0001|1d00]}{color[0400]}設定{color[ffff]}{[0001|ffff]}。
021	然後，打開{[0001|1d00]}黏貼面{[0001|ffff]}。
022	我們可以在此設定畫好的圖案\n{[0001|1d00]}{color[0400]}要黏貼在連接對象的哪一面{color[ffff]}{[0001|ffff]}。
023	設定為只有{[0001|1d00]}{color[0400]}X中央{color[ffff]}{[0001|ffff]}是{[0001|1d00]}{color[0400]}開啟{color[ffff]}{[0001|ffff]}。
024	關閉這個畫面……
024-01	好了！\n接下來就試著畫些圖案吧！
024-02	先把{color[0400]}{[0001|1d00]}畫筆顏色{[0001|ffff]}{color[ffff]}設定為黃色……
024-03	在這個區域裡畫些圖案吧～
027	像是{[0001|1d00]}{color[0400]}星星{color[ffff]}{[0001|ffff]}之類的應該很不錯喔～
028	畫好了就關閉設定畫面吧！
029	那麼……\n我們去遊戲畫面看看吧！
030	UFO……\n變成你畫的圖案了呢～～！
031	只要像這樣使用{[0001|1d00]}{color[0400]}材質小節點{color[ffff]}{[0001|ffff]}，\n{[0001|2000]}就能讓自己畫的圖案出現在遊戲畫面！{[0001|ffff]}
051	那麼，接下來……\n我們來為遊戲配上{[0001|1d00]}{color[0400]}BGM{color[ffff]}{[0001|ffff]}吧！
052	Let's♪Music！
053	從{[0001|1d00]}輸出{[0001|0700]}{[0001|1d00]}播放BGM{[0001|ffff]}裡\n叫出{[0001|1d00]}{color[0400]}BGM小節點{color[ffff]}{[0001|ffff]}！
055	Yeah！\n秀出你的Music，\n炒熱你的Shooting！
056	消滅敵人Feels So Good！\n到達屬於你的Ending！
058	Yeah！\n請從{[0001|1d00]}輸入{[0001|0700]}{[0001|1d00]}常數{[0001|ffff]}裡\n叫出{[0001|1d00]}{color[0400]}常數小節點{color[ffff]}{[0001|ffff]}。
061	把{[0001|1d00]}{color[0400]}常數小節點{color[ffff]}{[0001|ffff]}連接到\n{[0001|1d00]}{color[0400]}BGM小節點{color[ffff]}{[0001|ffff]}的{[0001|1d00]}{color[0400]}播放端口{color[ffff]}{[0001|ffff]}～
063	接著，打開{[0001|1d00]}{color[0400]}BGM小節點{color[ffff]}{[0001|ffff]}的{color[0400]}{[0001|1d00]}設定{[0001|ffff]}{color[ffff]}。
064	{[0001|2000]}打開{[0001|1d00]}{color[0400]}樂曲{color[ffff]}{[0001|2000]}……{[0001|ffff]}
065	{[0001|2000]}把{[0001|1d00]}{color[0400]}樂曲{color[ffff]}{[0001|2000]}設定為{[0001|1d00]}{color[0400]}勇敢{color[ffff]}{[0001|2000]}。{[0001|ffff]}
066	曲如其名，真是雄壯的旋律呢～！
067	關閉設定……
068	我們去遊戲畫面確認一下吧！
069	哦～！\n正在播放BGM呢！
070	不論前方的敵人有多麼強大，\n我仍將勇往直前！！……
071	這首BGM就是\n給人這樣的感覺呢～
072	好了，所有設定都完成了！
073	回去程式設計畫面～
074	好！！\n接下來……
075	就是{[0201]}的\n自由時間囉～～！
076	不只是{[0001|1d00]}{color[0400]}BGM小節點{color[ffff]}{[0001|ffff]}，\n你還可以自由地更改{[0001|2000]}……{[0001|ffff]}
078	{[0001|2000]}{color[0400]}{[0001|1d00]}材質小節點{[0001|2000]}{color[ffff]}的{[0001|1d00]}{color[0400]}圖案{color[ffff]}{[0001|2000]}以及{[0001|ffff]}\n{[0001|2000]}UFO的{[0001|1d00]}{color[0400]}炮台{color[ffff]}{[0001|2000]}和{[0001|ffff]}{[0001|1d00]}{color[0400]}炮彈的顏色{color[ffff]}{[0001|ffff]}……
080	{[0201]}，\n請設計出屬於你自己的\nALIEN SHOOTING吧～！
081	當你覺得「OK！」了……\n就按下{[0001|1d00]}{color[0400]}完成鍵{color[ffff]}{[0001|ffff]}吧！
082	那麼……\n開始設計吧！！！
086	你……終於完成了呢！！
088	那麼……\n請讓我看看遊戲畫面吧！
089	完成版的ALIEN SHOOTING……\n請試著玩到{color[0400]}{[0001|1d00]}終點{[0001|ffff]}{color[ffff]}吧！！
090	這就是……\n{[0201]}\n製作的ALIEN SHOOTING！！
091	刻意不做出任何更改……\n這點也很有{[0201]}的風格呢！
092	那麼……\n這樣一來～～～
093	ALIEN SHOOTING就完成了！！
098	來吧！\n我們去程式設計畫面！！
101	恭喜你～～～\n完成～～遊戲～～～
102	嘻嘻！\n這遊戲真是一點都不棒～
103	你之所以能這麼努力……\n都是因為愛的力量吧？\n呵呵呵～
104	我可以從你畫的圖案中\n感受到充沛的個人魅力。
105	{[0201]}～\n你真是個～～～\n超級程式設計師啊～～～
106	哈哈哈～～～♪\n這遊戲讓我也不禁\n跳起舞來呢～～～♪
107	咿……你好厲害！！
108	技術沒問題！毅力沒問題！
116	ALIEN SHOOTING……\n順利完成了！
117	這堂課有非常多的步驟……\n想來真是一段漫長的旅程呢。
118	不過{[0201]}，\n你還是順利地完成所有步驟了！\n真是令人佩服～～！！
122	那麼，我們把這個\nALIEN SHOOTING\n也放進遊戲一覽吧！
123	先回去選單一趟～！
LogiConTpb_Main.msbt
TrimMark	…
NodeLabel_Constant	常數
NodeLabel_ButtonPressed	按鍵
NodeLabel_StickTilted	操控搖桿
NodeLabel_IsTouch	點觸螢幕
NodeLabel_PlzTouchPosition	點觸位置
NodeLabel_IntegratedSurfaceUpward	正面朝上
NodeLabel_IntegratedAxisAngle	傾斜
NodeLabel_IntegratedSwinged	搖晃
NodeLabel_IntegratedRotationSpeed	轉動速度
NodeLabel_OnStart	開始時
NodeLabel_PlzObjBreakCount	物件損壞時
NodeLabel_FoundIrMarker	動感IR照相機
NodeLabel_Calculation	計算
NodeLabel_Comparison	比較
NodeLabel_And	AND
NodeLabel_Not	NOT
NodeLabel_Atan	將位置轉換成角度
NodeLabel_Trigonometric	將角度轉換成位置
NodeLabel_AngleDistance	角度差
NodeLabel_Random	隨機
NodeLabel_Mapping	定位
NodeLabel_Quantization	數位化
NodeLabel_Trigger	從０改變時
NodeLabel_SquareRoot	平方根
NodeLabel_PlzAbsoluteValue	絕對值
NodeLabel_PlzNegation	＋－反轉
NodeLabel_Flag	旗標
NodeLabel_TpbCounter	計數器
NodeLabel_WireWarpIn	無線傳送入口
NodeLabel_WireWarpOut	無線傳送出口
NodeLabel_Comment	個人筆記
NodeLabel_Timer	計時器
NodeLabel_Spoit	滴管
NodeLabel_PlzIntegratedEffect	特效
NodeLabel_TpbPlaySound	播放聲音
NodeLabel_TpbPlayBgm	BGM
NodeLabel_Vibrate	震動
NodeLabel_PlzGravity	減少重力
NodeLabel_PlzPlaySpeed	停止時間
NodeLabel_PlzReset	重來
NodeLabel_PlzExit	結束遊戲
NodeLabel_PlzChangeFile	切換遊戲
NodeLabel_Gauge	顯示標示
NodeLabel_Move2d	顯示2D標示
NodeLabel_AlwaysOn	一直顯示標示
NodeLabel_EmitIrLed	讓紅外線燈亮起來
NodeLabel_PlzHead	頭部
NodeLabel_PlzHand	手部
NodeLabel_TpbPuzzleClear	解開謎題
NodeLabel_PlzHuman	人
NodeLabel_PlzCar	汽車
NodeLabel_PlzUfo	UFO
NodeLabel_PlzRigid	物件
NodeLabel_PlzFancyRigid	時尚物件
NodeLabel_PlzCommentRigid	附註解物件
NodeLabel_PlzScoreRigid	附數字物件
NodeLabel_PlzTexture	材質
NodeLabel_PlzJointSlider	滑動連接
NodeLabel_PlzJointFreeSlider	自由滑動連接
NodeLabel_PlzJointHinge	鉸鍊連接
NodeLabel_PlzRope	繩索連接
NodeLabel_PlzTouchSensor	接觸感應器
NodeLabel_PlzBrokenSensor	損壞感應器
NodeLabel_PlzBreakSensor	破壞時感應器
NodeLabel_PlzGrabSensor	被抓住感應器
NodeLabel_PlzPositionSensor	位置感應器
NodeLabel_PlzSpeedSensor	速度感應器
NodeLabel_PlzAccelerationSensor	動作感應器
NodeLabel_PlzAngleSensor	角度感應器
NodeLabel_PlzRotationSensor	轉動速度感應器
NodeLabel_PlzMoveRigid	可移動物件
NodeLabel_PlzRotateRigid	可轉動物件
NodeLabel_PlzStretchRigid	可延展物件
NodeLabel_PlzPullForce	引力
NodeLabel_PlzGeneratorFew	發射物件(1個)
NodeLabel_PlzGeneratorMiddle	發射物件(10個)
NodeLabel_PlzGeneratorMany	發射物件(100個)
NodeLabel_BindCommander	破壞物件
NodeLabel_PlzObjWarpEnter	傳送物件入口
NodeLabel_PlzObjWarpExit	傳送物件出口
NodeLabel_PlzEasyCamera	遊戲畫面
NodeLabel_PlzTpsCamera	照相機
NodeLabel_PlzCameraPosition	照相機位置
NodeLabel_PlzCameraLookAt	照相機焦點
NodeLabel_PlzCameraDirection	照相機方向
NodeLabel_PlzCameraAngle	照相機視角
NodeLabel_PlzFieldConfig	空間
NodeLabelFull_ConstantNode	常數小節點
NodeLabelFull_ButtonPressedNode	按鍵小節點
NodeLabelFull_StickTiltedNode	操控搖桿小節點
NodeLabelFull_IntegratedAxisAngleNode	傾斜小節點
NodeLabelFull_OnStartNode	開始時小節點
NodeLabelFull_PlzObjBreakCountNode	物件損壞時小節點
NodeLabelFull_CalculationNode	計算小節點
NodeLabelFull_ComparisonNode	比較小節點
NodeLabelFull_AndNode	AND小節點
NodeLabelFull_NotNode	NOT小節點
NodeLabelFull_MappingNode	定位小節點
NodeLabelFull_FlagNode	旗標小節點
NodeLabelFull_TpbCounterNode	計數器小節點
NodeLabelFull_WireWarpInNode	無線傳送入口小節點
NodeLabelFull_WireWarpOutNode	無線傳送出口小節點
NodeLabelFull_CommentNode	個人筆記小節點
NodeLabelFull_TimerNode	計時器小節點
NodeLabelFull_PlzIntegratedEffectNode	特效小節點
NodeLabelFull_TpbPlaySoundNode	播放聲音小節點
NodeLabelFull_TpbPlayBgmNode	BGM小節點
NodeLabelFull_PlzGravityNode	減少重力小節點
NodeLabelFull_PlzResetNode	重來小節點
NodeLabelFull_PlzHumanNode	人小節點
NodeLabelFull_PlzCarNode	汽車小節點
NodeLabelFull_PlzUfoNode	UFO小節點
NodeLabelFull_PlzRigidNode	物件小節點
NodeLabelFull_PlzFancyRigidNode	時尚物件小節點
NodeLabelFull_PlzCommentRigidNode	附註解物件小節點
NodeLabelFull_PlzScoreRigidNode	附數字物件小節點
NodeLabelFull_PlzTextureNode	材質小節點
NodeLabelFull_PlzJointSingleAxisSliderNode	滑動連接小節點
NodeLabelFull_PlzJointSliderNode	自由滑動連接小節點
NodeLabelFull_PlzJointHingeNode	鉸鍊連接小節點
NodeLabelFull_PlzTouchSensorNode	接觸感應器小節點
NodeLabelFull_PlzBrokenSensorNode	損壞感應器小節點
NodeLabelFull_PlzPositionSensorNode	位置感應器小節點
NodeLabelFull_PlzMoveRigidNode	可移動物件小節點
NodeLabelFull_PlzRotateRigidNode	可轉動物件小節點
NodeLabelFull_PlzGeneratorNode	發射物件小節點
NodeLabelFull_PlzBindCommanderNode	破壞物件小節點
NodeLabelFull_PlzObjWarpEnterNode	傳送物件入口小節點
NodeLabelFull_PlzObjWarpExitNode	傳送物件出口小節點
NodeLabelFull_PlzEasyCamera	遊戲畫面小節點
NodeLabelFull_PlzTpsCamera	照相機小節點
NodeLabelFull_PlzFieldConfigNode	空間小節點
InputMenu	輸入
NodeCreatorMenu_Constant	常數
NodeCreatorMenu_ButtonPressed	按下按鍵
NodeCreatorMenu_ButtonMask_A	
NodeCreatorMenu_ButtonMask_B	
NodeCreatorMenu_ButtonMask_X	
NodeCreatorMenu_ButtonMask_Y	
NodeCreatorMenu_ButtonMask_L	
NodeCreatorMenu_ButtonMask_R	
NodeCreatorMenu_ButtonMask_ZL	
NodeCreatorMenu_ButtonMask_ZR	
NodeCreatorMenu_StickTilted	推動操控搖桿
ControllerSideMenuForStickTilted_L	L操控搖桿
ControllerSideMenuForStickTilted_R	R操控搖桿
TouchMenu	觸控螢幕
NodeCreatorMenu_IsTouch	點觸螢幕
NodeCreatorMenu_PlzTouchPosition	點觸位置
MotionMenu	動感
NodeCreatorMenu_IntegratedSwinged	搖晃
NodeCreatorMenu_IntegratedAxisAngle	傾斜
NodeCreatorMenu_IntegratedSurfaceUpward	正面朝上
NodeCreatorMenu_IntegratedRotationSpeed	轉動
NodeCreatorMenu_FoundIrMarker	動感IR照相機
PlzInputMenu	遊戲內的變化
NodeCreatorMenu_PlzObjBreakCount	物件損壞時
NodeCreatorMenu_OnStart	開始時
MediumMenu	中間
CalculationMenu	計算（＋－×÷）
NodeCreatorMenu_Calculation_Add	＋
NodeCreatorMenu_Calculation_Sub	－
NodeCreatorMenu_Calculation_Mul	×
NodeCreatorMenu_Calculation_Div	÷
ConversionMenu	轉換
NodeCreatorMenu_Mapping	定位
NodeCreatorMenu_Quantization	數位化
NodeCreatorMenu_SquareRoot	平方根(√)
NodeCreatorMenu_PlzAbsoluteValue	絕對值（將－轉為＋）
NodeCreatorMenu_PlzNegation	＋－反轉
NodeCreatorMenu_Trigger	從０改變時
AngleMenu	計算角度
NodeCreatorMenu_Atan	將位置轉換成角度
NodeCreatorMenu_Trigonometric	將角度轉換成位置
NodeCreatorMenu_AngleDistance	角度差
LogicMenu	邏輯
NodeCreatorMenu_And	AND
NodeCreatorMenu_Not	NOT
CounterMenu	旗標、計數器、隨機
NodeCreatorMenu_Flag	旗標
NodeCreatorMenu_TpbCounter	計數器
NodeCreatorMenu_Random	隨機
NodeCreatorMenu_Timer	計時器
NodeCreatorMenu_Spoit	滴管
EditMenu	程式整理
NodeCreatorMenu_WireWarpIn	無線傳送：入口
NodeCreatorMenu_WireWarpOut	無線傳送：出口
NodeCreatorMenu_Comment	個人筆記
OutputMenu	輸出
NodeCreatorMenu_PlaySoundScale	播放聲音
PlaySeMenu	播放音效
PlayInstrumentMenu	播放樂器聲
NodeCreatorMenu_TpbPlayBgm	播放BGM
NodeCreatorMenu_Vibrate	使之震動
PlzWorldMenu	改變空間
NodeCreatorMenu_PlzGravity	減少重力
NodeCreatorMenu_PlzPlaySpeed	停止時間
SequenceMenu	重來、結束、切換
NodeCreatorMenu_PlzReset	重來遊戲
NodeCreatorMenu_PlzExit	結束遊戲
NodeCreatorMenu_PlzChangeFile	切換遊戲
PlzEtcMenu	其他
DisplayMenu	顯示標示
NodeCreatorMenu_Gauge_Move	移動
NodeCreatorMenu_Gauge_Stretch	伸長
NodeCreatorMenu_Gauge_Line	線條
NodeCreatorMenu_Gauge_Rotate	旋轉
NodeCreatorMenu_Gauge_Pie	圓餅圖
NodeCreatorMenu_Gauge_Alpha	透明度
NodeCreatorMenu_Gauge_Flash	閃爍
NodeCreatorMenu_Move2d	顯示2D標示
NodeCreatorMenu_AlwaysOn	一直顯示標示
NodeCreatorMenu_EmitIrLed	讓紅外線燈亮起來
PlzObjMenu	物件
PlzCharacterMenu	角色
NodeCreatorMenu_PlzHuman	人
NodeCreatorMenu_PlzCar	汽車
NodeCreatorMenu_PlzUfo	UFO
PlzGeneralObjMenu	一般物件
PlzFancyObjMenu	時尚物件
PlzFancyObjPage_00	四方形時尚物件
PlzFancyObjPage_01	圓形時尚物件
PlzFancyObjPage_02	圓柱形時尚物件
PlzFancyObjPage_03	各種時尚物件
PlzSpecialObjMenu	特殊物件
PlzMoveRigidMenu	可移動物件
PlzRotateRigidMenu	可轉動物件
PlzStretchRigidMenu	可延展物件
PlzEffectMenu	特效
NodeCreatorMenu_PlzCommentRigid	附註解物件
NodeCreatorMenu_PlzScoreRigid	附數字物件
NodeCreatorMenu_PlzTexture	材質
PlzSensorMenu	感應器
NodeCreatorMenu_PlzTouchSensor	接觸感應器
NodeCreatorMenu_PlzBrokenSensor	損壞感應器
NodeCreatorMenu_PlzBreakSensor	破壞時感應器
NodeCreatorMenu_PlzGrabSensor	被抓住感應器
NodeCreatorMenu_PlzPositionSensor	位置感應器
NodeCreatorMenu_PlzSpeedSensor	速度感應器
NodeCreatorMenu_PlzAccelerationSensor	動作感應器
NodeCreatorMenu_PlzAngleSensor	角度感應器
NodeCreatorMenu_PlzRotationSensor	轉動速度感應器
PlzJointMenu	連接零件
PlzJointSliderMenu	滑動連接
PlzJointSliderXMenu	X軸 滑動
PlzJointSliderYMenu	Y軸 滑動
PlzJointSliderZMenu	Z軸 滑動
NodeCreatorMenu_PlzJointFreeSlider	自由滑動連接
PlzJointHingeMenu	鉸鍊連接
PlzJointHingeXMenu	X軸 鉸鍊
PlzJointHingeYMenu	Y軸 鉸鍊
PlzJointHingeZMenu	Z軸 鉸鍊
NodeCreatorMenu_PlzRope	繩索連接
PlzLiveObjMenu	放出、消除、引力
PlzGeneratorMenu	發射物件
NodeCreatorMenu_PlzGeneratorFew	1個
NodeCreatorMenu_PlzGeneratorMiddle	10個
NodeCreatorMenu_PlzGeneratorMany	100個
NodeCreatorMenu_BindCommander	破壞物件
PlzObjWarpMenu	傳送物件
NodeCreatorMenu_PlzObjWarpEnter	傳送物件：入口
NodeCreatorMenu_PlzObjWarpExit	傳送物件：出口
NodeCreatorMenu_PlzPullForce	引力
NodeCreatorMenu_PlzFieldConfig	空間
PlzCameraMenu	遊戲畫面和照相機
NodeCreatorMenu_PlzEasyCamera	遊戲畫面
NodeCreatorMenu_PlzTpsCamera	照相機
PlzCameraDetailMenu	自訂照相機
NodeCreatorMenu_PlzCameraPosition	照相機位置
NodeCreatorMenu_PlzCameraLookAt	照相機焦點
NodeCreatorMenu_PlzCameraDirection	照相機方向
NodeCreatorMenu_PlzCameraAngle	照相機視角
PlzPlayerSettingMenu	個人設定
NodeCreatorMenu_PlzHead	頭部
NodeCreatorMenu_PlzHandRight	右手
NodeCreatorMenu_PlzHandLeft	左手
PortLabel_ConstantNode_01	常數
PortLabel_ButtonPressedNode_01	是否按下
PortLabel_StickTiltedNode_01	推動幅度
PortLabel_IsTouchNode_01	有無點觸
PortLabel_TouchPositionNode_01	X
PortLabel_TouchPositionNode_02	Y
PortLabel_IntegratedSwingedNode_01	搖晃力道
PortLabel_IntegratedSurfaceUpwardNode_01	朝上幅度
PortLabel_IntegratedAxisAngleNode_01	傾斜角度
PortLabel_IntegratedAxisAngleNode_02	Y重置
PortLabel_IntegratedRotationSpeedNode_01	轉動速度
PortLabel_OnStartNode_01	有無開始
PortLabel_PlzObjBreakCountNode_01	損壞數量
PortLabel_FoundIrMarkerNode_01	照到的數量
PortLabel_CalculationNode_01	輸入１
PortLabel_CalculationNode_02	輸入２
PortLabel_CalculationNode_03	計算結果
PortLabel_ComparisonNode_01	輸入１
PortLabel_ComparisonNode_02	輸入２
PortLabel_ComparisonNode_03	比較結果
PortLabel_AndNode_01	輸入１
PortLabel_AndNode_02	輸入２
PortLabel_AndNode_03	輸出
PortLabel_NotNode_01	輸入
PortLabel_NotNode_02	輸出
PortLabel_AtanNode_01	橫向位置
PortLabel_AtanNode_02	縱向位置
PortLabel_AtanNode_03	角度
PortLabel_TrigonometricNode_01	角度
PortLabel_TrigonometricNode_02	橫向位置
PortLabel_TrigonometricNode_03	縱向位置
PortLabel_AngleDistanceNode_01	角度１
PortLabel_AngleDistanceNode_02	角度２
PortLabel_AngleDistanceNode_03	差
PortLabel_IntegerRandomNode_01	？
PortLabel_IntegerRandomNode_02	隨機數值
PortLabel_IntegerRandomNode_03	重置
PortLabel_MappingNode_01	輸入
PortLabel_MappingNode_02	輸出
PortLabel_QuantizationNode_01	輸入
PortLabel_QuantizationNode_02	輸出
PortLabel_TriggerNode_01	輸入
PortLabel_TriggerNode_02	是否改變
PortLabel_SquareRootNode_01	輸入
PortLabel_SquareRootNode_02	輸出
PortLabel_AbsoluteValueNode_01	輸入
PortLabel_AbsoluteValueNode_02	輸出
PortLabel_NegationNode_01	輸入
PortLabel_NegationNode_02	輸出
PortLabel_FlagNode_01	開啟
PortLabel_FlagNode_02	關閉
PortLabel_FlagNode_03	旗標是否開啟
PortLabel_TpbCounterNode_01	增加
PortLabel_TpbCounterNode_02	減少
PortLabel_TpbCounterNode_03	重置
PortLabel_TpbCounterNode_04	計算值
PortLabel_WireWarpInNode_01	入口
PortLabel_WireWarpOutNode_01	出口
PortLabel_TimerNode_01	輸入
PortLabel_TimerNode_02	輸出
PortLabel_SpoitNode_01	標示量
PortLabel_PlzIntegratedEffectNode_03	出現
PortLabel_TpbPlaySoundNode_02	播放
PortLabel_TpbPlaySoundNode_03	音量
PortLabel_TpbPlaySoundNode_04	音高
PortLabel_TpbPlayBgmNode_01	播放
PortLabel_TpbPlayBgmNode_02	音量
PortLabel_TpbPlayBgmNode_03	速度
PortLabel_VibrateNode_01	震動強度
PortLabel_PlzGravityNode_01	減少的量
PortLabel_PlzPlaySpeedNode_01	停止幅度
PortLabel_PlzResetNode_01	重來
PortLabel_PlzExitNode_01	結束
PortLabel_PlzChangeFileNode_01	切換
PortLabel_PlzChangeFileNode_02	切換前的訊號
PortLabel_GaugeNode_01	輸入
PortLabel_Move2dNode_01	X
PortLabel_Move2dNode_02	Y
PortLabel_Move2dNode_03	滴管結果
PortLabel_EmitIrLedNode_01	亮起來
PortLabel_PlzHandNode_02	抓住
PortLabel_PlzHandNode_03	前後
PortLabel_TpbPuzzleClearNode_01	解開
PortLabel_PlzHumanNode_03	前後
PortLabel_PlzHumanNode_04	左右
PortLabel_PlzHumanNode_05	跳躍
PortLabel_PlzHumanNode_06	動作
PortLabel_PlzCarNode_03	油門
PortLabel_PlzCarNode_04	方向盤
PortLabel_PlzCarNode_05	跳躍
PortLabel_PlzUfoNode_03	前後
PortLabel_PlzUfoNode_04	左右
PortLabel_PlzUfoNode_05	上下
PortLabel_PlzScoreRigidNode_03	數值
PortLabel_PlzTextureNode_02	能看見
PortLabel_PlzJointSingleAxisSliderNode_03	滑動的幅度
PortLabel_PlzJointSliderNode_03	X
PortLabel_PlzJointSliderNode_04	Y
PortLabel_PlzJointSliderNode_05	Z
PortLabel_PlzJointHingeNode_03	轉動的量
PortLabel_PlzTouchSensorNode_02	接觸的數量
PortLabel_PlzBrokenSensorNode_02	有無損壞
PortLabel_PlzBreakSensorNode_02	破壞數量
PortLabel_PlzGrabSensorNode_02	是否被抓住
PortLabel_PlzPositionSensorNode_02	X
PortLabel_PlzPositionSensorNode_03	Y
PortLabel_PlzPositionSensorNode_04	Z
PortLabel_PlzSpeedSensorNode_02	X
PortLabel_PlzSpeedSensorNode_03	Y
PortLabel_PlzSpeedSensorNode_04	Z
PortLabel_PlzAccelerationSensorNode_02	X
PortLabel_PlzAccelerationSensorNode_03	Y
PortLabel_PlzAccelerationSensorNode_04	Z
PortLabel_PlzAngleSensorNode_02	X軸
PortLabel_PlzAngleSensorNode_03	Y軸
PortLabel_PlzAngleSensorNode_04	Z軸
PortLabel_PlzRotationSensorNode_02	X軸
PortLabel_PlzRotationSensorNode_03	Y軸
PortLabel_PlzRotationSensorNode_04	Z軸
PortLabel_PlzMoveRigidNode_03	X
PortLabel_PlzMoveRigidNode_04	Y
PortLabel_PlzMoveRigidNode_05	Z
PortLabel_PlzRotateRigidNode_03	X軸
PortLabel_PlzRotateRigidNode_04	Y軸
PortLabel_PlzRotateRigidNode_05	Z軸
PortLabel_PlzStretchRigidNode_02	X
PortLabel_PlzStretchRigidNode_03	Y
PortLabel_PlzStretchRigidNode_04	Z
PortLabel_PlzPullForceNode_02	力道
PortLabel_PlzGeneratorFewNode_02	發射
PortLabel_PlzGeneratorNode_02	發射
PortLabel_PlzGeneratorManyNode_02	發射
PortLabel_PlzBindCommanderNode_02	破壞
PortLabel_PlzObjWarpEnterNode_02	傳送
PortLabel_PlzEasyCamera_02	X
PortLabel_PlzEasyCamera_03	Y
PortLabel_PlzEasyCamera_04	Z
PortLabel_PlzTpsCamera_03	上下
PortLabel_PlzTpsCamera_04	水平
PortLabel_PlzTpsCamera_05	重置
PortLabel_PlzCameraPositionNode_03	X
PortLabel_PlzCameraPositionNode_04	Y
PortLabel_PlzCameraPositionNode_05	Z
PortLabel_PlzCameraLookAtNode_03	X
PortLabel_PlzCameraLookAtNode_04	Y
PortLabel_PlzCameraLookAtNode_05	Z
PortLabel_PlzCameraDirectionNode_01	上下
PortLabel_PlzCameraDirectionNode_02	水平
WarpIdLabel_A	A
WarpIdLabel_B	B
WarpIdLabel_C	C
WarpIdLabel_D	D
WarpIdLabel_E	E
WarpIdLabel_F	F
WarpIdLabel_G	G
WarpIdLabel_H	H
WarpIdLabel_I	I
WarpIdLabel_J	J
WarpIdLabel_K	K
WarpIdLabel_L	L
WarpIdLabel_M	M
WarpIdLabel_N	N
WarpIdLabel_O	O
WarpIdLabel_P	P
WarpIdLabel_Q	Q
WarpIdLabel_R	R
WarpIdLabel_S	S
WarpIdLabel_T	T
WarpIdLabel_U	U
WarpIdLabel_V	V
WarpIdLabel_W	W
WarpIdLabel_X	X
WarpIdLabel_Y	Y
WarpIdLabel_Z	Z
DigitalAnalogSwitchLabel	輸出
DigitalAnalogSwitch_Digital	數位
DigitalAnalogSwitch_Analog	類比
TrigHoldSwitchLabel_ButtonPressedNode	輸出的時機
TrigHoldSwitch_Trig_ButtonPressedNode	按下時
TrigHoldSwitch_Hold_ButtonPressedNode	按下後一直
TrigHoldSwitchLabel_IsTouchNode	輸出的時機
TrigHoldSwitch_Trig_IsTouchNode	點觸時
TrigHoldSwitch_Hold_IsTouchNode	點觸著一直
TrigHoldSwitchLabel_TpbCounterNode	計算的時機
TrigHoldSwitch_Trig_TpbCounterNode	從０改變時
TrigHoldSwitch_Hold_TpbCounterNode	０以外時一直
TrigHoldSwitchLabel_IntegerRandomNode	更新數值的時機
TrigHoldSwitch_Trig_IntegerRandomNode	從０改變時
TrigHoldSwitch_Hold_IntegerRandomNode	０以外時一直
TrigHoldSwitchLabel_PlzIntegratedEffectNode	特效出現的時機
TrigHoldSwitch_Trig_PlzIntegratedEffectNode	從０改變時
TrigHoldSwitch_Hold_PlzIntegratedEffectNode	０以外時一直
TrigHoldSwitchLabel_PlzTouchSensorNode	輸出的時機
TrigHoldSwitch_Trig_PlzTouchSensorNode	接觸時
TrigHoldSwitch_Hold_PlzTouchSensorNode	接觸後一直
TrigHoldSwitchLabel_PlzGrabSensorNode	輸出的時機
TrigHoldSwitch_Trig_PlzGrabSensorNode	被抓住時
TrigHoldSwitch_Hold_PlzGrabSensorNode	被抓住後一直
SizeSlider	大小
SliderAdjusterDec	＜
SliderAdjusterInc	＞
ThresholdSliderRange	範圍
ConstantNumSliderLabel	要輸出多少？
Hint_Constant_00_Subject	提示
Hint_Constant_00	・「常數」就是「固定不變的數」。\n・把常數設定為1.00，就會持續輸出1.00。
ButtonMask_L_Any	
ButtonMask_R_Any	
ButtonMask_LR_Any	
ButtonMask_A	
ButtonMask_B	
ButtonMask_X	
ButtonMask_Y	
ButtonMask_Up	
ButtonMask_Left	
ButtonMask_Right	
ButtonMask_Down	
ButtonMask_L	
ButtonMask_R	
ButtonMask_ZL	
ButtonMask_ZR	
ButtonMask_LS_Btn	
ButtonMask_RS_Btn	
ButtonMask_L_SL	(L)
ButtonMask_L_SR	(L)
ButtonMask_R_SL	(R)
ButtonMask_R_SR	(R)
Hint_StickTilted_00_Subject	提示
Hint_StickTilted_00	依據「輸出」和「範圍」的設定，\n轉換操控搖桿的推動幅度後輸出。
ControllerSide_L	Joy-Con(L)
ControllerSide_R	Joy-Con(R)
ControllerSide_Handheld	{[0001|1800]}{[0001|ffff]}
ControllerSide_Auto	自動
ControllerStickSide_L	L操控搖桿
ControllerStickSide_R	R操控搖桿
AutoMenu	自動
ConsoleMenu	主機
ControllerIndex_1	1
ControllerIndex_2	2
ControllerIndex_3	3
ControllerIndex_4	4
Surface_XPlus	左
Surface_XMinus	右
Surface_YPlus	前
Surface_YMinus	後
Surface_ZPlus	上
Surface_ZMinus	下
ControllerDirection_Up	上
ControllerDirection_Down	下
ControllerDirection_Left	左
ControllerDirection_Right	右
ControllerSwingDirectionRadioButtonLabel	反應的方向
ControllerSwingDirection_Any	全部
ControllerSwingDirection_XPlus	X＋
ControllerSwingDirection_XMinus	X－
ControllerSwingDirection_YPlus	Y＋
ControllerSwingDirection_YMinus	Y－
ControllerSwingDirection_ZPlus	Z＋
ControllerSwingDirection_ZMinus	Z－
Axis_X	{[0001|2000]}X{[0001|ffff]}
Axis_Y	{[0001|2000]}Y{[0001|ffff]}
Axis_Z	{[0001|2000]}Z{[0001|ffff]}
Axis_Any	全部
RotationDirectionRadioButtonLabel	反應的方向
RotationDirection_Plus	＋
RotationDirection_Minus	－
RotationDirection_Any	{[0001|1800]}±{[0001|ffff]}
ControllerDirection_Any	全部
ControllerDirection_LeftRight	左右
ControllerDirectionSwitchLabel	反應的方向
ControllerDirection_UpDown	上下
ControllerIndex_Any	自動
ControllerIndex_Handheld	{[0001|1800]}{[0001|ffff]}
ControllerIndexSwitchForIrLabel	控制器編號
ControllerIndexSwitchLabel	控制器編號
Hint_IntegratedAxisAngle_00_Subject	提示
Hint_IntegratedAxisAngle_00	設定為轉動角度模式時，\n會將Joy-Con及Nintendo Switch主機的角度以-180°～180°的形式輸出。
ControllerSideSwitchLabel	是哪個控制器？
ControllerSideSwitchWithHandheldAutoLabel	要確認哪個？
ControllerStickSideSwitchLabel	是哪個操控搖桿？
Hint_ControllerSurface_00_Subject	提示
Hint_ControllerSurface_00	朝上幅度越大，輸出的數值越大。
ControllerSurfaceRadioButtonLabel	正面
Hint_ControllerSwinged_00_Subject	提示
Hint_ControllerSwinged_00	搖晃速度越快，輸出的數值越大。
TouchTargetSwitchLabel	要在點觸哪裡時輸出？
TouchTarget_Anywhere	全部
TouchTarget_ThisNode	這個小節點
Hint_IsTouch_00_Subject	提示
Hint_IsTouch_00	若選擇「這個小節點」，則只有在點觸該小節點時才會作出反應。\n將其放到遊戲畫面也能點觸的位置，就能讓遊戲依據點觸位置作出不同反應。
Hint_PlzTouchPosition_00_Subject	提示
Hint_PlzTouchPosition_00	畫面正中央為X=0、Y=0；\n畫面左端為X=-640、右端為X=640；\n畫面下緣為Y=-360、上緣為Y=360。
ControllerAxisRadioButtonLabel	轉動軸
ControllerAxisAngleModeSwitchLabel	模式
ControllerAxisAngleMode_Tilt	傾斜
ControllerAxisAngleMode_AxisAngle	轉動角度
Hint_PlzObjBreakCountNode_00_Subject	提示
Hint_PlzObjBreakCountNode_00	當確認對象在遊戲空間中損壞時就會輸出該數值。\n試著配搭計數器使用，製作出像是「破壞１０個即可過關」的程式吧。
Hint_OnStartNode_00_Subject	提示
Hint_OnStartNode_00	只會在遊戲開始的一瞬間輸出1.00。
DistanceSwitchLabel	識別範圍
IrDistance_Off	關閉紅外線
IrDistance_Near	近距離
IrDistance_Normal	中間距離
IrDistance_Far	遠距離
Hint_FoundIrMarker_00_Subject	1個控制器只能有1個設定
Hint_FoundIrMarker_00	動感IR照相機小節點與所有具有相同控制器編號的小節點\n共享同一個設定。
Hint_FoundIrMarker_01_Subject	提示
Hint_FoundIrMarker_01	無法同時使用2個以上的動感IR照相機與5個以上的Joy-Con。
CalculationOperatorSwitchLabel	計算方法
CalculationOperator_Add	＋
CalculationOperator_AlmostEqual	≒
CalculationOperator_Div	÷
CalculationOperator_Equal	＝
CalculationOperator_Mul	×
CalculationOperator_Sub	－
CalculationOperator_Then	→
CalculationResult	計算結果
Hint_Calculation_00_Subject	提示
Hint_Calculation_00	可以對２個輸入的數值進行「加」「減」「乘」「除」。
ComparisonOperatorSwitchLabel	如何比較？
ComparisonOperator_EQ	＝
ComparisonOperator_GT	＞
ComparisonOperator_LT	＜
ComparisonOperator_GE	≧
ComparisonOperator_LE	≦
Hint_ComparisonNode_00_Subject	提示
Hint_ComparisonNode_00	・比較2個輸入的數值。\n・若滿足設定的條件，就會輸出1.00。
Hint_And_00_Subject	AND是什麼？
Hint_And_00	AND就是兩者「都是」的意思。\n當２個輸入的數值「都是」0.00以外時，就會輸出1.00。
Hint_Not_00_Subject	NOT是什麼？
Hint_Not_00	當輸入的數值為0.00時，輸出1.00；\n當輸入的數值為0.00以外時，輸出0.00。
Hint_AngleDistance_00_Subject	提示
Hint_AngleDistance_00	可以知道輸入的兩個角度的距離。\n試著搭配「傾斜小節點」的「轉動角度模式」使用看看吧。
Hint_Atan_00_Subject	提示
Hint_Atan_00	・可以依據輸入至橫向位置端口和縱向位置端口的位置相對於（0, 0）的方位計算其角度。\n・輸入端基本上都會與「位置感應器」連接。（也可以用來將２個位置的數值相減！）\n・輸出的範圍為-180°～180°！試著把他連接到「鉸鍊連接」吧！
Hint_Trigonometric_00_Subject	提示
Hint_Trigonometric_00	・會依據輸入的角度在半徑為1.00的圓形圓周上的位置輸出訊號。\n・用專業術語來說，就是「橫向位置是餘弦(cos)」「縱向位置是正弦(sin)」。\n・輸入的角度為１周３６０°的度數。
MappingInputSliderLabel	輸入範圍
MappingOutputSliderLabel	輸出範圍
MappingClampModeSwitchLabel	範圍限制
MappingClampMode_Enable	限制範圍
MappingClampMode_Disable	不限範圍
Hint_Mapping_00_Subject	提示
Hint_Mapping_00	・會依照輸入範圍與輸出範圍的相對關係，將輸入的數值轉換後輸出。\n・例如將輸入範圍設定為「0.00～1.00」、輸出範圍設定為「-1.00～1.00」時，「0.00會轉換為-1.00」「0.50會轉換為0.00」「1.00會轉換為1.00」。\n・將「{[0001|0700]}{[0001|ffff]}」設定為開啟時，轉換方式將會顛倒。
Hint_PlzAbsoluteValue_00_Subject	提示
Hint_PlzAbsoluteValue_00	・負數會轉換為正數。\n・正數會維持原狀。
Hint_Flag_00_Subject	旗標是什麼？
Hint_Flag_00	當「開啟」端口接收到0.00以外的數值時，旗標就會開啟；\n當「關閉」端口接收到0.00以外的數值時，旗標就會關閉。\n當旗標為開啟狀態時會輸出1.00，關閉狀態時會輸出0.00。
Hint_Flag_01_Subject	同時輸入會怎樣？
Hint_Flag_01	當「開啟」與「關閉」端口同時接收到0.00以外的數值時，旗標將會關閉。
CountRangeLabel	計算範圍
LoopModeAllSwitchLabel	模式
LoopMode_Loop	循環
LoopMode_Single	範圍限制
LoopMode_Infinite	無限制
LoopMode_Flip	來回
DefaultCountSliderLabel	開始時的計算值
Hint_Random_00_Subject	提示
Hint_Random_00	・「？」端口接收到輸入時，會輸出「1～輸出範圍」之間的某個整數。\n・「重置」端口接收到輸入時，數值會恢復為「0」。
IntegerRandomRangeSliderLabel	輸出範圍
QuantizationNumSlider	要將1.00分為多少區段？
Hint_Quantization_00_Subject	提示
Hint_Quantization_00	可以將爬緩坡般「緩慢漸進」的輸入訊號\n轉換為爬樓梯般「力道分明」的輸出訊號。
Hint_Trigger_00_Subject	提示
Hint_Trigger_00	只會在輸入從0.00變化為0.00以外的數值的一瞬間輸出1.00。
Hint_SquareRoot_00_Subject	提示
Hint_SquareRoot_00	・會計算輸入的數值的「平方根 (√)」。\n・輸入的數值為負數時，會輸出0.00。\n・試著用他來計算距離等各種數值吧。
Hint_PlzNegation_00_Subject	提示
Hint_PlzNegation_00	輸入的數值為負數時，會轉換為正數並輸出；輸入的數值為正數時，會轉換為負數並輸出。
WireWarpIDSwitchLabel	傳送ID
Hint_WireWarp_00_Subject	提示
Hint_WireWarp_00	・將兩者設定為相同的傳送ID時，數值會從入口傳送至出口。\n・試著妥善利用他，讓程式變得乾淨整齊吧！
CommentKeyboardOk	OK
CommentKeyboardGuide	請自由筆記。
EditCommentButton	編輯
CommentHeader_CommentNode	個人筆記
DefaultComment	個人筆記
DefaultComment_Rigid	附註解物件
TimerSlider	要在幾秒後輸出
TimerSlider_Numpad	要在幾秒後輸出
SustainSlider	持續輸出的秒數
SustainSlider_Numpad	持續輸出的秒數
Hint_Timer_00_Subject	計時器是什麼？
Hint_Timer_00	接收到輸入後，會依照設定的時間等待，並在之後輸出1.00。
Hint_Spoit_00_Subject	提示
Hint_Spoit_00	當滴管小節點接觸到顯示標示小節點或動感IR照相機小節點顯示的標示時，\n就會輸出兩者重疊的部分。
PlzIntegratedEffectType_Fireworks	煙火
PlzIntegratedEffectType_Explosion	爆炸
PlzIntegratedEffectType_Bubbles	泡泡
PlzIntegratedEffectType_Smoke	煙霧
PlzIntegratedEffectType_Cracker	拉炮
PlzIntegratedEffectType_Damage	衝擊
PlzIntegratedEffectType_CountDown	倒數三秒
PlzIntegratedEffectType_Fail	失敗
PlzIntegratedEffectType_Pointlight	光線
PlzEffectEmitPosType_Camera	照相機
PlzEffectEmitPosType_World	空間
PlzEffectEmitPosTypeLabel	特效出現的位置
PianoKeyMask_C	Do
PianoKeyMask_Cis	Do#
PianoKeyMask_D	Re
PianoKeyMask_Dis	Re#
PianoKeyMask_E	Mi
PianoKeyMask_F	Fa
PianoKeyMask_Fis	Fa#
PianoKeyMask_G	So
PianoKeyMask_Gis	So#
PianoKeyMask_A	La
PianoKeyMask_Ais	La#
PianoKeyMask_H	Si
PianoKeyMask_HiC	△Do
TpbPlaySoundSettingLabel	播放的聲音
SeIndexRadioButtonLabel_Onetime	單次
SeIndexRadioButtonLabel_Loop	循環
SeGroupRadioButtonLabel	音效
SeGroup_Drum	打擊樂
SeGroup_Whistle	笛子
SeGroup_Machine	機器
SeGroup_Hit	撞擊
SeGroup_Comical	喜劇效果
SeGroup_System	系統音效
SeGroup_Nature	大自然
SeGroup_Animal	動物
SeGroup_Voice	人聲
SeGroup_Fx	效果音
SeGroup_Jingle	效果音樂
SeIndex_Drum_01	大鼓
SeIndex_Drum_02	小鼓
SeIndex_Drum_03	小鼓四連音
SeIndex_Drum_04	拍手
SeIndex_Drum_05	小鼓鼓邊
SeIndex_Drum_06	雙面鈸（開）
SeIndex_Drum_07	雙面鈸（闔）
SeIndex_Drum_08	銅鈸
SeIndex_Drum_09	中音鼓（高音）
SeIndex_Drum_10	中音鼓（中音）
SeIndex_Drum_11	中音鼓（低音）
SeIndex_Drum_12	搖晃鈴鼓
SeIndex_Drum_13	拍打鈴鼓
SeIndex_Drum_14	牛鈴（低音）
SeIndex_Drum_15	雪鈴
SeIndex_Drum_16	太鼓
SeIndex_Drum_17	銅鑼
SeIndex_Drum_18	震盪器
SeIndex_Drum_19	彈音器
SeIndex_Drum_20	鋸加鼓（高音）
SeIndex_Drum_21	鋸加鼓（低音）
SeIndex_Drum_22	大鐘
SeIndex_Drum_23	風鈴
SeIndex_Drum_24	竹鈴
SeIndex_Drum_25	牛鈴（高音）
SeIndex_Drum_26	呼叫鈴
SeIndex_Drum_27	鑼
SeIndex_Whistle_01	短哨
SeIndex_Whistle_02	長哨
SeIndex_Whistle_03	汽笛喇叭
SeIndex_Whistle_04	汽車喇叭
SeIndex_Whistle_05	警笛
SeIndex_Machine_01	引擎
SeIndex_Machine_02	開關
SeIndex_Machine_03	電流
SeIndex_Machine_04	齒輪
SeIndex_Machine_05	馬達
SeIndex_Machine_06	壓力機
SeIndex_Machine_07	鑽頭
SeIndex_Machine_08	伺服馬達
SeIndex_Machine_09	閥門
SeIndex_Machine_10	發射（小）
SeIndex_Machine_11	發射（大）
SeIndex_Machine_12	收銀機
SeIndex_Machine_13	照相機
SeIndex_Machine_15	剪刀
SeIndex_Machine_16	打字機
SeIndex_Machine_17	直升機
SeIndex_Machine_18	釘書機
SeIndex_Machine_19	時鐘（滴）
SeIndex_Machine_20	時鐘（答）
SeIndex_Machine_21	鬧鐘
SeIndex_Machine_22	門（開）
SeIndex_Machine_23	門（關）
SeIndex_Hit_01	輕微撞擊
SeIndex_Hit_02	中度撞擊
SeIndex_Hit_03	強烈撞擊
SeIndex_Hit_04	防護
SeIndex_Hit_05	彈開
SeIndex_Hit_06	金屬
SeIndex_Hit_07	水泥
SeIndex_Hit_08	玻璃
SeIndex_Hit_09	岩石
SeIndex_Hit_10	球
SeIndex_Hit_11	切割
SeIndex_Comical_01	彈跳2
SeIndex_Comical_02	彈跳3
SeIndex_Comical_03	爆炸
SeIndex_Comical_04	大爆炸
SeIndex_Comical_05	搖頭
SeIndex_Comical_06	磅
SeIndex_Comical_07	重重地彈起
SeIndex_Comical_08	打到頭
SeIndex_Comical_09	抱怨
SeIndex_Comical_10	黏踢踢
SeIndex_Comical_11	拔栓
SeIndex_Comical_12	不停地拔栓
SeIndex_Comical_13	輕輕地彈起
SeIndex_Comical_14	彈跳4
SeIndex_Comical_15	清脆聲
SeIndex_Comical_16	縮放
SeIndex_Comical_17	失敗
SeIndex_Comical_18	成功
SeIndex_Comical_19	妖怪
SeIndex_Comical_21	上升
SeIndex_Comical_22	下降
SeIndex_Comical_23	錯愕
SeIndex_Comical_24	咚咚鏘
SeIndex_Comical_25	彈跳1
SeIndex_System_01	叮咚
SeIndex_System_02	噗
SeIndex_System_03	嗶喲
SeIndex_System_04	點擊
SeIndex_System_05	嗶嗶聲
SeIndex_System_06	無法操作
SeIndex_System_07	啟動
SeIndex_System_08	移動
SeIndex_System_09	小決定
SeIndex_System_10	取消
SeIndex_System_11	大決定
SeIndex_System_12	奇怪的移動
SeIndex_System_13	奇怪的小決定
SeIndex_System_14	奇怪的取消
SeIndex_System_15	奇怪的大決定
SeIndex_System_16	靈光一閃
SeIndex_System_17	開機聲
SeIndex_System_18	嗶聲
SeIndex_System_19	錢幣
SeIndex_System_20	奇怪的無法操作
SeIndex_System_21	錯誤
SeIndex_System_22	資訊
SeIndex_System_23	噗噗
SeIndex_Nature_01	火焰
SeIndex_Nature_02	風聲（小）
SeIndex_Nature_03	風聲（大）
SeIndex_Nature_04	布料
SeIndex_Nature_05	風聲（中）
SeIndex_Nature_06	嘎吱作響的木頭
SeIndex_Nature_07	緊繃的繩子
SeIndex_Nature_08	水聲（小）
SeIndex_Nature_09	水聲（大）
SeIndex_Nature_10	岩漿
SeIndex_Nature_11	泥巴
SeIndex_Nature_12	泡泡
SeIndex_Animal_01	獅子
SeIndex_Animal_02	小鳥
SeIndex_Animal_03	馬
SeIndex_Animal_04	驢子
SeIndex_Animal_05	小狗
SeIndex_Animal_06	青蛙
SeIndex_Animal_07	雞
SeIndex_Animal_08	蟋蟀
SeIndex_Animal_09	大野狼
SeIndex_Animal_10	烏鴉
SeIndex_Animal_11	大象
SeIndex_Animal_12	鴨子
SeIndex_Voice_01	喝！（男）
SeIndex_Voice_02	喝！（女）
SeIndex_Voice_03	機器人
SeIndex_Voice_04	說話聲
SeIndex_Voice_05	現場直播
SeIndex_Voice_09	人群的笑聲
SeIndex_Voice_10	嬰兒的笑聲
SeIndex_Voice_11	害怕（男）
SeIndex_Voice_12	驚嚇（男）
SeIndex_Voice_13	害怕（女）
SeIndex_Voice_14	驚嚇（女）
SeIndex_Voice_15	嘿喲（短）
SeIndex_Voice_16	嘿喲（長）
SeIndex_Voice_17	邪惡的笑聲
SeIndex_Voice_18	驚嘆聲
SeIndex_Voice_19	呵欠聲
SeIndex_Voice_20	打呼聲
SeIndex_Voice_21	和聲
SeIndex_Voice_22	耶～！
SeIndex_Voice_23	歡聲
SeIndex_Voice_24	噓聲
SeIndex_Voice_25	受傷（男）
SeIndex_Voice_26	受傷（女）
SeIndex_Voice_27	興高采烈（男）
SeIndex_Voice_28	興高采烈（女）
SeIndex_Fx_02	電吉他延音
SeIndex_Fx_03	衝擊
SeIndex_Fx_04	可疑
SeIndex_Fx_07	變身魔法
SeIndex_Fx_08	防禦魔法
SeIndex_Fx_09	回復魔法
SeIndex_Fx_10	力量提升
SeIndex_Fx_11	邪惡魔法
SeIndex_Fx_12	鼓掌
SeIndex_Fx_13	雷射
SeIndex_Fx_14	砰
SeIndex_Fx_15	唱針轉盤
SeIndex_Fx_16	噗喲
SeIndex_Fx_17	咚
SeIndex_Fx_18	吸入
SeIndex_Fx_19	力量下降
SeIndex_Fx_21	鏘
SeIndex_Fx_22	心跳聲
SeIndex_Fx_23	DJ轉盤
SeIndex_Jingle_01	開心
SeIndex_Jingle_02	非常開心
SeIndex_Jingle_03	傷心
SeIndex_Jingle_04	非常傷心
SeIndex_Jingle_05	勝利
SeIndex_Jingle_06	敗北
SeIndex_Jingle_07	噔噔！
SeIndex_Jingle_08	獲得
SeIndex_Jingle_09	號角
SeIndex_Jingle_10	鏘鏘！
TimbreRadioButtonLabel	樂器
Timbre_Bando	俊雄先生
Timbre_Piano	鋼琴
Timbre_Cat	貓
Timbre_Organ	管風琴
Timbre_Fem	姊姊
Timbre_GuiterAcoustic	木吉他
Timbre_GuiterElectric	電吉他
Timbre_Recorder	直笛
Timbre_Trumpet	小號
Timbre_Violin	小提琴
Timbre_Harp	豎琴
Timbre_Bell	鈴聲
Timbre_Fc	Famicom
Timbre_ViolinStaccato	小提琴（跳弓演奏）
Timbre_GuiterMute	吉他悶音
TpbPlayBgmPortPreviewLabel	參數
BgmNumberRadioButtonLabel	樂曲
BgmNumber_01	散步
BgmNumber_02	小跳步
BgmNumber_03	踏實
BgmNumber_04	向陽處
BgmNumber_05	勇敢
BgmNumber_06	緊迫
BgmNumber_07	雀躍
BgmNumber_08	十萬火急
BgmNumber_09	祭典
BgmNumber_10	環境音
BgmNumber_11	競爭
BgmPartIndexRadioButtonLabel_Melody	旋律
BgmPartIndexRadioButtonLabel_Harmony1	主伴奏
BgmPartIndexRadioButtonLabel_Harmony2	副伴奏
BgmPartIndexRadioButtonLabel_Rhythm	節奏
BgmPartIndex_NoSound	靜音
BgmPartIndex_01_Melody_1	小提琴
BgmPartIndex_01_Melody_2	直笛
BgmPartIndex_01_Melody_3	飛散音效合成器
BgmPartIndex_01_Harmony1_1	鋼琴
BgmPartIndex_01_Harmony1_2	木吉他
BgmPartIndex_01_Harmony1_3	鈴聲合成器
BgmPartIndex_01_Harmony2_1	鐘琴
BgmPartIndex_01_Harmony2_2	回音合成器
BgmPartIndex_01_Harmony2_3	懷舊感合成器
BgmPartIndex_01_Rhythm_1	流行樂
BgmPartIndex_01_Rhythm_2	進行曲
BgmPartIndex_01_Rhythm_3	爵士樂
BgmPartIndex_02_Melody_1	豎笛
BgmPartIndex_02_Melody_2	長號
BgmPartIndex_02_Melody_3	木琴
BgmPartIndex_02_Harmony1_1	班卓琴
BgmPartIndex_02_Harmony1_2	吉他與管風琴
BgmPartIndex_02_Harmony1_3	管風琴合成器
BgmPartIndex_02_Harmony2_1	彈跳合成器
BgmPartIndex_02_Harmony2_2	管鐘合成器
BgmPartIndex_02_Harmony2_3	玩具喇叭
BgmPartIndex_02_Rhythm_1	傳統爵士樂
BgmPartIndex_02_Rhythm_2	雷鬼樂
BgmPartIndex_02_Rhythm_3	6/8拍進行曲
BgmPartIndex_03_Melody_1	懷舊感合成器
BgmPartIndex_03_Melody_2	鋼琴
BgmPartIndex_03_Melody_3	管風琴
BgmPartIndex_03_Harmony1_1	卡林巴琴
BgmPartIndex_03_Harmony1_2	木吉他
BgmPartIndex_03_Harmony1_3	踏板效果器與吉他
BgmPartIndex_03_Harmony2_1	喜劇感合成器
BgmPartIndex_03_Harmony2_2	襯底合成器
BgmPartIndex_03_Harmony2_3	吹奏樂
BgmPartIndex_03_Rhythm_1	Famicom
BgmPartIndex_03_Rhythm_2	巴薩諾瓦音樂
BgmPartIndex_03_Rhythm_3	放克音樂
BgmPartIndex_04_Melody_1	流行樂合成器
BgmPartIndex_04_Melody_2	口風琴
BgmPartIndex_04_Melody_3	小提琴
BgmPartIndex_04_Harmony1_1	反轉管風琴
BgmPartIndex_04_Harmony1_2	木吉他
BgmPartIndex_04_Harmony1_3	唱片
BgmPartIndex_04_Harmony2_1	泛音
BgmPartIndex_04_Harmony2_2	嘟嘟聲
BgmPartIndex_04_Harmony2_3	高音
BgmPartIndex_04_Rhythm_1	傳思電子樂
BgmPartIndex_04_Rhythm_2	鄉村音樂
BgmPartIndex_04_Rhythm_3	大提琴
BgmPartIndex_05_Melody_1	小號與法國號
BgmPartIndex_05_Melody_2	電吉他旋律
BgmPartIndex_05_Melody_3	電子訊號波
BgmPartIndex_05_Harmony1_1	長號
BgmPartIndex_05_Harmony1_2	吉他伴奏
BgmPartIndex_05_Harmony1_3	鋸齒聲波
BgmPartIndex_05_Harmony2_1	弦樂器
BgmPartIndex_05_Harmony2_2	管風琴
BgmPartIndex_05_Harmony2_3	三角聲波
BgmPartIndex_05_Rhythm_1	低音號與打擊樂器
BgmPartIndex_05_Rhythm_2	搖滾樂
BgmPartIndex_05_Rhythm_3	雜訊
BgmPartIndex_06_Melody_1	毛骨悚然的音效合成器
BgmPartIndex_06_Melody_2	木管樂器與木琴
BgmPartIndex_06_Melody_3	銅管樂旋律
BgmPartIndex_06_Harmony1_1	撥奏
BgmPartIndex_06_Harmony1_2	弦樂器
BgmPartIndex_06_Harmony1_3	混亂的弦樂
BgmPartIndex_06_Harmony2_1	毛骨悚然的和聲
BgmPartIndex_06_Harmony2_2	反轉合成器
BgmPartIndex_06_Harmony2_3	混亂的銅管樂
BgmPartIndex_06_Rhythm_1	電子樂
BgmPartIndex_06_Rhythm_2	打擊樂
BgmPartIndex_06_Rhythm_3	混亂的打擊樂
BgmPartIndex_07_Melody_1	鋸齒聲波
BgmPartIndex_07_Melody_2	矩形聲波
BgmPartIndex_07_Melody_3	手風琴
BgmPartIndex_07_Harmony1_1	訊號音節
BgmPartIndex_07_Harmony1_2	合成器與鈴聲
BgmPartIndex_07_Harmony1_3	鋼琴
BgmPartIndex_07_Harmony2_1	吹奏樂合成器
BgmPartIndex_07_Harmony2_2	迷幻爵士
BgmPartIndex_07_Harmony2_3	慢吉他
BgmPartIndex_07_Rhythm_1	放克音樂
BgmPartIndex_07_Rhythm_2	電子樂
BgmPartIndex_07_Rhythm_3	輕搖滾
BgmPartIndex_08_Melody_1	弦樂器與木琴
BgmPartIndex_08_Melody_2	音節合成器
BgmPartIndex_08_Melody_3	怪聲合成器
BgmPartIndex_08_Harmony1_1	喜劇感合成器
BgmPartIndex_08_Harmony1_2	電子琴
BgmPartIndex_08_Harmony1_3	班卓琴
BgmPartIndex_08_Harmony2_1	軍號
BgmPartIndex_08_Harmony2_2	木吉他
BgmPartIndex_08_Harmony2_3	交響打擊樂
BgmPartIndex_08_Rhythm_1	定音鼓
BgmPartIndex_08_Rhythm_2	鼓與貝斯
BgmPartIndex_08_Rhythm_3	混亂的鼓與貝斯
BgmPartIndex_09_Melody_1	手風琴
BgmPartIndex_09_Melody_2	長笛與小提琴
BgmPartIndex_09_Melody_3	篠笛
BgmPartIndex_09_Harmony1_1	電吉他
BgmPartIndex_09_Harmony1_2	木吉他
BgmPartIndex_09_Harmony1_3	三味線
BgmPartIndex_09_Harmony2_1	豎笛
BgmPartIndex_09_Harmony2_2	鋼琴
BgmPartIndex_09_Harmony2_3	口哨
BgmPartIndex_09_Rhythm_1	波卡舞曲
BgmPartIndex_09_Rhythm_2	愛爾蘭音樂
BgmPartIndex_09_Rhythm_3	太鼓
BgmPartIndex_10_Melody_1	小鳥
BgmPartIndex_10_Melody_2	昆蟲
BgmPartIndex_10_Melody_3	人
BgmPartIndex_10_Harmony1_1	微風
BgmPartIndex_10_Harmony1_2	強風
BgmPartIndex_10_Harmony1_3	雷雨
BgmPartIndex_10_Harmony2_1	研究室
BgmPartIndex_10_Harmony2_2	城市
BgmPartIndex_10_Harmony2_3	大海
BgmPartIndex_10_Rhythm_1	水滴
BgmPartIndex_10_Rhythm_2	恐懼
BgmPartIndex_10_Rhythm_3	宇宙
BgmPartIndex_11_Melody_1	音節合成器
BgmPartIndex_11_Melody_2	SFC吹奏樂
BgmPartIndex_11_Melody_3	吹奏樂旋律
BgmPartIndex_11_Harmony1_1	管風琴
BgmPartIndex_11_Harmony1_2	SFC吉他
BgmPartIndex_11_Harmony1_3	法國號
BgmPartIndex_11_Harmony2_1	傳思合成器
BgmPartIndex_11_Harmony2_2	SFC打擊樂
BgmPartIndex_11_Harmony2_3	豎笛
BgmPartIndex_11_Rhythm_1	歐陸節拍
BgmPartIndex_11_Rhythm_2	SFC搖滾樂
BgmPartIndex_11_Rhythm_3	進行曲
VibrationFrequencySlider	頻率
Hint_PlzGravityNode_00_Subject	提示
Hint_PlzGravityNode_00	・輸入-1.00～1.00，可以改變重力的大小。\n・試著輸入1.00，讓遊戲空間變成像宇宙一樣的無重力狀態吧。
Hint_PlzPlaySpeedNode_00_Subject	提示
Hint_PlzPlaySpeedNode_00	・輸入0.00～1.00，可以改變時間的流動速度。\n・輸入1.00時，時間會變成幾乎靜止的狀態。\n・時間靜止的狀態只會影響「物件」的動作，並不會影響「計時器」等裝置的運作。
PlzResetTypeSwitchLabel	重設時的視覺效果外觀
PlzResetType_Type1	一般
PlzResetType_Type2	眨眼
PlzResetType_Type3	圓形
Hint_PlzResetNode_00_Subject	提示
Hint_PlzResetNode_00	接收到輸入時會讓遊戲重來，遊戲將從頭開始。
Hint_PlzExitNode_00_Subject	提示
Hint_PlzExitNode_00	接收到輸入時，會結束遊戲並返回選單。
GaugeModeSwitchLabel	顯示方式
GaugeMode_Move	移動
GaugeMode_Stretch	伸長
GaugeMode_Line	線條
GaugeMode_Rotate	旋轉
GaugeMode_Pie	圓餅圖
GaugeMode_Alpha	透明度
GaugeMode_Flash	閃爍
Hint_Gauge_00_Subject	提示
Hint_Gauge_00	設定為「移動」後，試著改變小節點的形狀吧！
Hint_AlwaysOn_00_Subject	提示
Hint_AlwaysOn_00	請試著和顯示2D標示小節點搭配使用。
SpoitModeSwitchLabel	滴管反應
SpoitMode_Enable	可以使用滴管
SpoitMode_Disable	不可使用滴管
SpoitShapeSwitchLabel	滴管的形狀
SpoitShape_Sphere	圓形
SpoitShape_Obb	長方形
Hint_Move2d_00_Subject	提示
Hint_Move2d_00	透過接收輸入來移動的●也可以對其他小節點的標示使用滴管。
Hint_EmitIrLed_00_Subject	提示
Hint_EmitIrLed_00	可以讓動感IR照相機的紅外線燈亮起來！
Hint_EmitIrLed_01_Subject	這個說不定……
Hint_EmitIrLed_01	可以配搭在電子裝置上……？
Hint_EmitIrLed_02_Subject	提示
Hint_EmitIrLed_02	無法同時使用2個以上的動感IR照相機與5個以上的Joy-Con。
Hint_PlzHeadNode_00_Subject	提示
Hint_PlzHeadNode_00	使用這個小節點連接物件，就可以讓該物件黏在照相機上。
PlzHandTriggerModeSwitchLabel	模式
PlzHandTriggerMode_Hold	按住按鍵
PlzHandTriggerMode_Toggle	按鍵切換
PlzHandHoldModeSwitchLabel	拿的位置
PlzHandHoldMode_AsIs	原位
PlzHandHoldMode_Snap	手邊
Hint_PlzHandHoldMode_00_Subject	提示
Hint_PlzHandHoldMode_00	・設定為「原位」時，物件會貼近被抓住的位置；設定為「手邊」時，物件會貼近手中。\n・例如設定為「手邊」＋「發射速度＝10」時，就能輕鬆地抓住物件投擲。\n・設定為「手邊」時，如果抓住的位置太近的話，就用「連接距離」來調整吧。
PlzHandRotateBaseSwitchLabel	轉動基準
PlzHandRotateBase_Wrist	手腕
PlzHandRotateBase_elbow	手肘
PlzHandRotateBase_shoulder	肩膀
Hint_PlzHandRotateBase_00_Subject	提示
Hint_PlzHandRotateBase_00	・將「Joy-Con的角度」設定為「反映到遊戲中手的哪一個部位」。\n・設定為「手腕」時會在手邊小幅度地轉動；設定為「肩膀」時會以肩膀為中心大幅度地轉動。
PlzHandBindDistanceSliderLabel	連接距離
Hint_PlzHandNode_00_Subject	手部的方向好像有些奇怪？按下操控搖桿來重置方向吧！
Hint_PlzHandNode_00	陀螺儀感應器的方向有時會偏離……\n遇到這種問題時，記得「將Joy-Con對準照相機正面並按下操控搖桿」來重置方向喔！
Hint_PlzHandNode_01_Subject	想讓物件在開始時就黏在手上！
Hint_PlzHandNode_01	只要把這個小節點連接到物件上，就能讓物件在開始時處於被抓住的狀態！
Hint_PlzHandNode_02_Subject	你的慣用手是哪一邊？
Hint_PlzHandNode_02	右手的話就選Joy-Con(R)，左手的話就選Joy-Con(L)吧。
Hint_PlzHandNode_03_Subject	只要「抓住」端口接收到輸入，就能抓住被設定為「能抓住」的「物件」！
Hint_PlzHandNode_03	設定為「按住按鍵」時，只會在接收到輸入時才抓住物件；\n設定為「按鍵切換」時，只要收到一次輸入就會一直抓住物件。
Hint_PlzHandNode_04_Subject	抓住後要怎麼辦？
Hint_PlzHandNode_04	・「前後」端口接收到輸入時，可以前後調整抓住物件的位置。\n・只要設定好「發射速度」，就可以在放開時將物件發射出去。
PlzHumanActionSwitchLabel	動作
PlzHumanActionType_Yeah	歡呼
PlzHumanActionType_Punch	出拳
PlzHumanActionType_Kick	腳踢
PlzHumanActionType_Turn	轉圈
Hint_PlzHumanAction_00_Subject	提示
Hint_PlzHumanAction_00	・動作端口接收到「1.00」的輸入時，會做出指定的動作。\n・例如設定為「出拳」＋「發射物件」時，就能做出類似火箭飛拳的動作！\n・秘技：輸入「2.00」「3.00」「4.00」「5.00」時，可以無視設定做出指定的動作。
PlzCharacterSpeedSliderLabel	移動速度
PlzCharacterJumpSliderLabel	跳躍力
PlzCharacterAngularVelocityRatioLabel	回旋速度
PlzUfoHorizontalSpeedSliderLabel	水平速度
PlzUfoHorizontalSpeedDetail	水平速度
PlzUfoVerticalSpeedSliderLabel	垂直速度
PlzUfoVerticalSpeedDetail	垂直速度
PlzShapeSwitchLabel	物件的形狀
PlzShapeType_Box	立方體
PlzShapeType_Cylinder	圓柱體
PlzShapeType_Sphere	球體
PlzAttributeCheckBoxLabel	狀態
PlzAttribute_Visible	能看見
PlzAttribute_Hittable	能接觸
PlzAttribute_Movable	能移動
PlzAttribute_BreakableSelf	會損壞
PlzAttribute_BreakableOther	能破壞
PlzAttribute_NoBreakableOther	不能破壞
BreakableDetailButtonLabel	…
PlzAttributeOtherButtonLabel	其他
PlzMaterialReactionSwitchLabel	碰觸/損壞時，要播放聲音嗎？
PlzMaterialReaction_Sound	播放
PlzMaterialReaction_NoSound	不播放
PlzGrabbableSwitchLabel	能以手部小節點抓住嗎？
PlzGrabbable_Enable	能抓住
PlzGrabbable_Disable	不能
PlzColorTypeSwitchLabel	顏色
PlzFontColorTypeSwitchLabel	文字顏色
PlzColorType_Auto	自動
PlzColorType_Blue	藍色
PlzColorType_Red	紅色
PlzColorType_Green	綠色
PlzColorType_Yellow	黃色
PlzColorType_LightBlue	水藍色
PlzColorType_Pink	粉紅色
PlzColorType_YellowGreen	黃綠色
PlzColorType_Orange	橘色
PlzColorType_Purple	紫色
PlzColorType_Brown	棕色
PlzColorType_White	白色
PlzColorType_Black	黑色
Hint_PlzColorType_00_Subject	提示
Hint_PlzColorType_00	・選擇喜歡的顏色，為遊戲加入繽紛的色彩吧！\n・設定為「自動」時，將依據「會損壞」和「能破壞」的設定自動切換顏色。
PlzMaterialSwitchLabel	材質
PlzMaterial_General	一般
PlzMaterial_Bouncy	彈跳的
PlzMaterial_Slippery	光滑的
PlzMaterial_Floaty	輕飄飄的
PlzMaterial_ZeroGravity	無重力
Hint_PlzMaterial_00_Subject	提示
Hint_PlzMaterial_00	・設定為「彈跳的」時，會像彈力球般彈來彈去。\n・設定為「光滑的」時，會像冰塊般滑動。\n・設定為「輕飄飄的」時，會像氣球般飄上去。\n・設定為「無重力」時，會無視重力的影響。
PlzBindTypeSwitchLabel	連接強度
PlzBindTypeSwitchDetail	連接強度
PlzBindType_Hard	一般
PlzBindType_Soft	彈性
PlzBindType_Ball	180°旋轉
Hint_PlzBindType_00_Subject	提示
Hint_PlzBindType_00	・設定為「彈性」時，會像彈簧般柔軟有彈性。\n・設定為「180°旋轉」時，會在半球的範圍內轉動。
PlzBindModeSwitchLabel	連接面
PlzBindModeSwitchDetail	連接面
PlzBindMode_Auto	自動
PlzBindMode_Manual	自訂
PlzBindMode_Separator	 ▶ 
PlzBindPositionSwitchLabel_Child	自己的連接面
PlzBindPositionSwitchLabel_Parent	連接對象的連接面
PlzBindPosition_Center	中央
PlzBindPosition_XPlus	X＋
PlzBindPosition_XMinus	X－
PlzBindPosition_XPlane	X中央
PlzBindPosition_YPlus	Y＋
PlzBindPosition_YMinus	Y－
PlzBindPosition_YPlane	Y中央
PlzBindPosition_ZPlus	Z＋
PlzBindPosition_ZMinus	Z－
PlzBindPosition_ZPlane	Z中央
Hint_PlzBindMode_00_Subject	「自動」設定就是……
Hint_PlzBindMode_00	並排物件時，會讓相近的面自動連接在一起。
Hint_PlzBindMode_01_Subject	「自訂」設定就是……
Hint_PlzBindMode_01	可以自行設定要讓「這個物件的哪一面」連接到「連接對象的物件的哪一面」。
PlzObjSizeSlider	大小
PlzObjSizeSliderXDetail	大小 : X
PlzObjSizeSliderXPrefix	X : 
PlzObjSizeSliderXPostfix	 m
PlzObjSizeSliderYDetail	大小 : Y
PlzObjSizeSliderYPrefix	Y : 
PlzObjSizeSliderYPostfix	 m
PlzObjSizeSliderZDetail	大小 : Z
PlzObjSizeSliderZPrefix	Z : 
PlzObjSizeSliderZPostfix	 m
PlzObjPosSlider	位置
PlzObjPosSliderXDetail	位置 : X
PlzObjPosSliderXPrefix	X : 
PlzObjPosSliderXPostfix	 m
PlzObjPosSliderYDetail	位置 : Y
PlzObjPosSliderYPrefix	Y : 
PlzObjPosSliderYPostfix	 m
PlzObjPosSliderZDetail	位置 : Z
PlzObjPosSliderZPrefix	Z : 
PlzObjPosSliderZPostfix	 m
PlzObjRotationZSlider	Y軸轉動
RotationZSliderDetail	Y軸轉動
RotationZSliderPrefix	Y軸 : 
RotationZSliderPostfix	°
PlzObjPitchSlider	X軸轉動
PitchSliderDetail	X軸轉動
PitchSliderPrefix	X軸 : 
PitchSliderPostfix	°
RollSliderDetail	Z軸轉動
RollSliderPrefix	Z軸 : 
RollSliderPostfix	°
PlzObjRotationSlider	轉動
PlzMoveBaseSwitchLabel	移動基準
PlzMoveBase_World	空間
PlzMoveBase_Local	局部
PlzMoveBase_Camera	照相機
Hint_PlzMoveBase_00_Subject	提示
Hint_PlzMoveBase_00	「空間」：以遊戲空間的方向為基準移動。\n「局部」：以物件的方向為基準移動(物件轉動時，方向也會跟著改變)。\n「照相機」：以照相機面向的方向為基準移動(Z+是後方，X+是面向畫面的右方)。
PlzMoveRigidVelocityModeLabel	模式
PlzMoveRigidVelocityMode_Acceleration	加速度
PlzMoveRigidVelocityMode_Velocity	速度
Hint_PlzMoveRigidVelocityMode_00_Subject	提示
Hint_PlzMoveRigidVelocityMode_00	「加速度」：依照輸入的數值逐漸加快物件的移動速度。\n「速度」：依照輸入的數值維持一定的移動速度。
PlzRotateBaseSwitchLabel	轉動基準
Hint_PlzRotateBase_00_Subject	提示
Hint_PlzRotateBase_00	「空間」：以遊戲空間的方向為基準轉動。\n「局部」：以物件的方向為基準轉動。\n「照相機」：以照相機面向的方向為基準轉動。
PlzSelectAxis_Center	中央
PlzSelectAxis_XPlus	X＋
PlzSelectAxis_XMinus	X－
PlzSelectAxis_YPlus	Y＋
PlzSelectAxis_YMinus	Y－
PlzSelectAxis_ZPlus	Z＋
PlzSelectAxis_ZMinus	Z－
PlzFancySkinSwitchLabel	外觀
PlzFancyKindType_Dice	骰子
PlzFancyKindType_WoodBox	木箱
PlzFancyKindType_Container	鐵盒
PlzFancyKindType_Panel	石版
PlzFancyKindType_TreasureBox	藏寶箱
PlzFancyKindType_TV	電視
PlzFancyKindType_JoyConR	Joy-Con(R)
PlzFancyKindType_JoyConL	Joy-Con(L)
PlzFancyKindType_Soccer	足球
PlzFancyKindType_Golf	高爾夫球
PlzFancyKindType_Balloon	氣球
PlzFancyKindType_Apple	蘋果
PlzFancyKindType_Turnip	甜菜根
PlzFancyKindType_Fish	魚
PlzFancyKindType_Kedamaru	毛球
PlzFancyKindType_BzkEnemy	外星人
PlzFancyKindType_Doll01	鬍子大叔
PlzFancyKindType_Doll02	啦啦隊女孩
PlzFancyKindType_Doll03	潛水員
PlzFancyKindType_Doll04	人魚
PlzFancyKindType_Doll05	機器人
PlzFancyKindType_Doll06	魔女
PlzFancyKindType_Doll07	雪怪
PlzFancyKindType_Doll08	相撲選手
PlzFancyKindType_Ring	圓環
PlzFancyKindType_Arrow	箭頭
PlzFancyKindType_Missile	導彈
PlzFancyKindType_Pencil	鉛筆
PlzFancyKindType_Tuna	鮪魚
PlzFancyKindType_Chick	幼鳥
PlzFancyKindType_Hippo	河馬
PlzFancyKindType_Bear	小熊
PlzScoreRigidIntegerDigit	整數位數
PlzScoreRigidDecimalDigit	小數點位數
PlzCommentRigidDirectionSwitchLabel	標示方向
CommentHeader_PlzCommentRigidNode	顯示的註解
CommentRigidKeyboardGuide	請輸入要顯示的註解。
CommentRigidKeyboardLineNumOver	「附註解物件」的註解最多只能輸入2行。
CommentRigidKeyboardOk	OK
TextureSurfaceMaskLabel	黏貼面
EditColorDescriptionLabel	你可以把色盤編輯成自己喜歡的顏色喔！
PaintCanvasEditColorWindowLabel	色盤
ResetColorButton	重置
PaintGuide_DetailLabel	引導線
PaintGuide_00	無引導線
PaintGuide_01	七段顯示器
PaintGuide_02	人（前後）
PaintGuide_03	人（橫向）
PaintGuide_04	汽車
PaintGuide_05	UFO
PaintGuide_06	３等分
PaintGuide_07	４等分
PaintGuide_08	圓形
PaintGuide_09	扭曲
PaintGuide_10	正六邊形
PaintGuide_11	球
PaintGuide_12	磚頭
PaintGuide_13	人字鋪
PaintGuide_14	亮晶晶
PaintGuide_15	木紋
PaintGuide_16	頭部（前）
PaintGuide_17	頭部（後）
PaintGuide_18	頭部（側面）
PaintGuide_19	臉部（輪廓）
PaintGuide_20	青蛙
PaintGuide_21	問號
PaintGuide_22	驚嘆號
PaintGuide_23	鑰匙
PaintGuide_24	鑰匙孔
PaintGuide_25	旗子
PaintGuide_26	肉球
PaintGuide_27	手部
PaintGuide_28	星星
PaintGuide_29	愛心
PaintGuide_30	音符
Hint_PaintGuide_00_Subject	提示
Hint_PaintGuide_00	你可以用喜歡的顏色照著引導線繪畫、用顏色填滿線內線外，或是乾脆無視引導線，發揮自己的創意。\n引導線或許會為你帶來繪圖的靈感喔！
PlzJointSliderAxisSelectSwitchLabel	滑動的移動基準
PlzJointSliderAxisChoiceSwitchLabel	滑動的移動輸入
Hint_PlzJointSliderNode_00_Subject	提示
Hint_PlzJointSliderNode_00	・連接的物件可以在設定範圍內自由地移動。\n・也可以透過輸入來控制位置，輸入1.00時會移動到1.00m的位置。
Hint_PlzJointFreeSliderNode_00_Subject	自由滑動連接小節點和一般的滑動連接小節點不同……
Hint_PlzJointFreeSliderNode_00	・連接的物件可以向「XYZ3個方向」移動。\n・沒有接收到輸入時，物件會被固定在當下的位置。\n・把「滑動的移動輸入」設定為關閉時，連接的物件就可以向該方向自由地移動。\n・由於無法設定「滑動範圍」，物件的移動範圍不受限制。
PlzJointHingeAxisSwitchLabel	鉸鍊的轉動基準
Hint_PlzJointHingeNode_00_Subject	提示
Hint_PlzJointHingeNode_00	・連接的物件可以在設定範圍內自由地轉動。\n・可以透過輸入來控制角度。輸入「10」時會轉動「10°」！
PlzRopeHardnessSliderLabel	繩索的硬度
PlzRopeLengthSliderLabel	繩索的長度
Hint_PlzRopeNode_00_Subject	提示
Hint_PlzRopeNode_00	・用繩索連接物件吧！\n・上下兩邊都要連接，繩索才會出現。\n・秘技：把繩索的狀態的「能接觸」設定為關閉時……\n　繩索兩端連接的物件就會變得可以互相接觸。
PlzSensorShapeSwitchLabel	感應器的形狀
PlzCheckTargetCheckBoxLabel	要確認什麼？
PlzCheckTarget_Field	空間
PlzCheckTarget_Box	立方體
PlzCheckTarget_Cylinder	圓柱體
PlzCheckTarget_Sphere	球體
PlzCheckTarget_Human	人
PlzCheckTarget_Car	汽車
PlzCheckTarget_Ufo	UFO
PlzCheckTarget_Player	頭部及手部
PlzCheckTarget_All	全部
PlzCheckTarget_None	無
PlzCheckTarget_Separator	、
Hint_PlzTouchSensorNode_00_Subject	提示
Hint_PlzTouchSensorNode_00	・當這個感應器接觸到確認對象的物件時，會輸出接觸的數量。\n・例如當感應器同時接觸到3個物件時，就會輸出3.00。\n・「頭部」和「手部」也可以作為確認對象！試著去確認各種物件吧！
Hint_PlzBrokenSensorNode_00_Subject	提示
Hint_PlzBrokenSensorNode_00	・使用時一定要和其他物件連接！\n・當與這個感應器連接的物件損壞時，就會輸出1.00。
Hint_PlzBreakSensorNode_00_Subject	提示
Hint_PlzBreakSensorNode_00	・使用時一定要和其他物件連接！\n・當與這個感應器連接的物件破壞其他物件時，\n  就會輸出破壞的物件數量。
Hint_PlzGrabSensorNode_00_Subject	提示
Hint_PlzGrabSensorNode_00	・當與這個感應器連接的物件被抓住時，就會輸出1.00。\n・在無任何連接對象的情況下，會在這個感應器被抓住時輸出1.00。
PlzSensorBindBaseSwitchLabel	感應基準
PlzSensorBindBase_Local_PlzPositionSensorNode	初始位置
PlzSensorBindBase_Local_PlzAngleSensorNode	初始角度
Hint_PlzSensorBindBase_00_Subject	提示
Hint_PlzSensorBindBase_00	「空間」：以感應器在遊戲空間的所在地為基準輸出位置。\n「初始位置」：以初始位置為基準，輸出感應器的移動距離。\n「照相機」：以照相機面向的方向中感應器的所在地為基準輸出位置。
Hint_PlzSensorBindBase_01_Subject	提示
Hint_PlzSensorBindBase_01	「空間」：以遊戲空間的方向為基準輸出。\n「局部」：以感應器的方向為基準輸出。\n「照相機」：以照相機面向的方向為基準輸出。
Hint_PlzSensorBindBase_02_Subject	提示
Hint_PlzSensorBindBase_02	「空間」：以遊戲空間的方向為基準輸出。\n「初期角度」：以初始角度為基準，輸出感應器的轉動角度。\n「照相機」：以照相機面向的方向為基準輸出。
Hint_PlzPositionSensorNode_00_Subject	提示
Hint_PlzPositionSensorNode_00	・會輸出感應器中心的「位置」。\n・使用時必須要和其他物件連接！
Hint_PlzSpeedSensorNode_00_Subject	提示
Hint_PlzSpeedSensorNode_00	・會輸出感應器中心的「速度」。\n・使用時必須要和其他物件連接！
Hint_PlzAccelerationSensorNode_00_Subject	提示
Hint_PlzAccelerationSensorNode_00	・會輸出感應器中心的「加速度」。\n・使用時必須要和其他物件連接！
Hint_PlzAngleSensorNode_00_Subject	提示
Hint_PlzAngleSensorNode_00	・會輸出感應器中心的「角度」。\n・使用時必須要和其他物件連接！
Hint_PlzRotationSensorNode_00_Subject	提示
Hint_PlzRotationSensorNode_00	・會輸出感應器中心的「轉動速度」。\n・使用時必須要和其他物件連接！
Hint_PlzMoveRigidNode_00_Subject	提示
Hint_PlzMoveRigidNode_00	・會依照輸入對物件施加「動力」。
Hint_PlzRotateRigidNode_00_Subject	提示
Hint_PlzRotateRigidNode_00	・會依照輸入對物件施加「轉動力」。\n・輸入1.00時，會以每秒1圈的速度轉動。\n・可以在「轉動基準」中更改施加轉動力的基準。
Hint_PlzStretchRigidNode_00_Subject	提示
Hint_PlzStretchRigidNode_00	・輸入1.00時，物件會伸長1.00m！\n・只會影響外觀，無法接觸且不會損壞。
PlzPullForceDirectionSwitchLabel	引力位置
PlzPullForceTargetSwitchLabel	要吸引什麼？
Hint_PlzPullForceNode_00_Subject	提示
Hint_PlzPullForceNode_00	・輸入正數就會吸引物件！\n・輸入負數就會彈開物件！\n・只會在設定的「物件的形狀」範圍內產生作用。
PlzGenerateeDirectionSwitchLabel	發射方向
PlzGenerateeSpeedSliderLabel	發射速度
PlzGenerateeSpeedDetail	發射速度
PlzGenerateeIntervalSliderLabel	發射間距(秒)
PlzGenerateeIntervalDetail	發射間距(秒)
Hint_PlzGenerateeNode_00_Subject	提示
Hint_PlzGenerateeNode_00	・接收到輸入時，會把設定的物件發射出去！\n・輸入端無連接對象時，會依照「發射間距」的設定自動發射。
PlzBindCommanderSwitchLabel	要破壞哪個物件？
Hint_PlzBindCommanderNode_00_Subject	提示
Hint_PlzBindCommanderNode_00	・當「破壞對象」接觸到設定的「物件的形狀」時會被破壞。\n・輸入端有連接對象時，可以切換為能破壞或不能破壞。\n・只要接觸到對方，就算是連接的物件也能破壞。
PlzObjWarpWarpIdSwitchLabel	傳送ID
PlzObjWarpWarpTargetCheckBoxLabel	要傳送什麼？
PlzObjWarpLaunchStyleSwitchLabel	傳送方式
PlzObjWarpLaunchStyle_AsIs	維持原樣
PlzObjWarpLaunchStyle_Tightly	重置
Hint_PlzObjWarpEnter_00_Subject	提示
Hint_PlzObjWarpEnter_00	・接觸到傳送入口的物件會被傳送到相同ID的傳送出口。\n・無相同ID的傳送出口時，接觸到傳送入口的物件會消失。\n・在輸入端有連接對象的情況下，只會在接收到0.00以外的數值時才會傳送！\n・傳送時會將彼此連接的物件一起傳送。\n・請注意，「一幀只能傳送一個」物件。
Hint_PlzObjWarpExit_00_Subject	提示
Hint_PlzObjWarpExit_00	・接觸到相同ID的傳送入口的物件，會從這個出口的「中心」出現。\n・雖然能設置數個相同ID的入口，但是相同ID的出口只能設置1個。
Hint_PlzObjWarpLaunchStyle_00_Subject	提示
Hint_PlzObjWarpLaunchStyle_00	・設定為「維持原樣」時，物件會以進入入口時的速度與方向從出口出來。\n・設定為「重置」時，會將物件進入入口時的速度與方向重置後，再讓他從出口出來。\n・只有在設定為「重置」時，才可以調整「發射方向」和「發射速度」。
PlzViewTypeLabel	視角
PlzViewType_LookDown	俯瞰視角
PlzViewType_Front	橫向視角
Hint_PlzEasyCameraNode_00_Subject	提示
Hint_PlzEasyCameraNode_00	這個小節點圍住的範圍就是遊戲畫面。
Hint_PlzTpsCameraNode_00_Subject	提示
Hint_PlzTpsCameraNode_00	・無連接對象時，可以作為第一人稱照相機使用。\n・有連接對象時，可以把「偏移距離」設定為0以外的數值，將他作為第三人稱照相機使用。\n・也可以透過輸入訊號到端口，讓照相機轉動。
PlzCameraFollowTypeLabel	角色Y軸轉動追蹤
PlzCameraFollowType_NotFollow	關閉
PlzCameraFollowType_Follow	開啟
PlzCameraTraceSpeedHSliderLabel	水平追蹤率
PlzCameraTraceSpeedVSliderLabel	上下追蹤率
PlzCameraAngleSliderLabel	照相機視角
PlzCameraBindOffsetSliderLabel	偏移距離
PlzCameraBindOffsetSliderXDetail	偏移距離 : X
PlzCameraBindOffsetSliderXPrefix	X : 
PlzCameraBindOffsetSliderXPostfix	 m
PlzCameraBindOffsetSliderYDetail	偏移距離 : Y
PlzCameraBindOffsetSliderYPrefix	Y : 
PlzCameraBindOffsetSliderYPostfix	 m
PlzCameraBindOffsetSliderZDetail	偏移距離 : Z
PlzCameraBindOffsetSliderZPrefix	Z : 
PlzCameraBindOffsetSliderZPostfix	 m
Hint_PlzCameraPositionNode_00_Subject	提示
Hint_PlzCameraPositionNode_00	・照相機會被設置在小節點的位置。
Hint_PlzCameraPositionNode_01_Subject	提示
Hint_PlzCameraPositionNode_01	・接收到輸入時可以讓「位置」偏移！\n・雖然有點複雜，但請別急著放棄！試著利用他設計出各種照相機操作吧。
Hint_PlzCameraLookAtNode_00_Subject	提示
Hint_PlzCameraLookAtNode_00	・照相機會聚焦在小節點的位置。
Hint_PlzCameraLookAtNode_01_Subject	提示
Hint_PlzCameraLookAtNode_01	・接收到輸入時可以讓「位置」偏移！\n・雖然有點複雜，但請別急著放棄！試著利用他設計出各種照相機操作吧。
Hint_PlzCameraDirectionNode_00_Subject	提示
Hint_PlzCameraDirectionNode_00	・會依照輸入改變照相機的方向。\n・存在「照相機焦點」小節點時，照相機會以焦點為基準改變方向。
Hint_PlzCameraViewAngleNode_00_Subject	提示
Hint_PlzCameraViewAngleNode_00	・把視角縮小……就會放大畫面，讓顯示範圍變得狹窄。\n・把視角放大……就會縮小畫面，讓顯示範圍變得廣闊。
PlzFieldShapeSwitchLabel	空間的外型
PlzFieldShapeType_None	無
PlzFieldShapeType_Floor	平面
PlzFieldShapeType_Dome	半球體
PlzFieldShapeType_Box	立方體
PlzFieldShapeType_Cylinder	圓柱體
PlzFieldShapeType_Sphere	球體
PlzFieldSkinSwitchLabel	空間的外觀
PlzFieldSkinType_Normal	一般
PlzFieldSkinType_Grass	草坪
PlzFieldSkinType_Tile	磁磚
PlzFieldSkinType_Iron	金屬
PlzFieldSkinType_Sand	沙
PlzFieldLightSwitchLabel	空間的光線
PlzFieldLightType_Noon	白天
PlzFieldLightType_Evening	黃昏
PlzFieldLightType_Night	夜晚
PlzFieldLightType_Dark	漆黑
PlzFieldLightType_Space	宇宙
PlzFieldLightLongitudeLabel	太陽的方位
PlzFieldLightLatitudeLabel	太陽的高度
PlzFieldMaterialSwitchLabel	空間的材質
PlzFieldBreakableThresholdSliderLabel	空間中物件的損壞速度
PlzFieldBreakableThresholdSliderLabel_Numpad	空間中物件的損壞速度
Hint_PlzFieldLight_00_Subject	提示
Hint_PlzFieldLight_00	・「漆黑」會讓空間變得完全黑暗。\n・把「光線」的特效小節點設定更改為「空間」，就能照亮遊戲空間。
PlzObjectSkinSwitchLabel	物件的外觀
PlzObjectSkinType_Normal	一般
PlzObjectSkinType_Metal	金屬
PlzObjectSkinType_Neon	霓虹
PlzChangeFileToModeSwitchLabel	切換方法
PlzChangeFileToMode_Keyword	關鍵字
PlzChangeFileToMode_Return	返回切換前的遊戲
CommentHeader_PlzChangeFileNode_To	切換對象的關鍵字
CommentHeader_PlzChangeFileNode_ThisFile	這款遊戲的關鍵字
PlzChangeFileFadeTypeSwitchLabel	切換的外觀
PlzChangeFileFadeType_WithTitle	有標題
PlzChangeFileFadeType_WithoutTitle	無標題
ChangeFileKeyToKeyboardOk	OK
ChangeFileKeyToKeyboardHeader	切換對象的關鍵字
ChangeFileKeyToKeyboardGuide	請輸入關鍵字。
ChangeFileKeyThisFileKeyboardOk	OK
ChangeFileKeyThisFileKeyboardHeader	這款遊戲的關鍵字
ChangeFileKeyThisFileKeyboardGuide	請輸入關鍵字。
Hint_TpbPuzzleClearNode_00_Subject	提示
Hint_TpbPuzzleClearNode_00	這個小節點如果接收到訊號的話……？
DecimalPoint	.
ToggleSignButtonLabel	{[0001|0300]}{[0001|ffff]}
BackspaceButtonLabel	←刪除一個
ClearButtonLabel	全部刪除
CancelButtonLabel	取消
ApplyButtonLabel	OK
SaveAsKeyboardOk	OK
SaveAsKeyboardHeader	決定遊戲標題並儲存
SaveAsKeyboardGuide	為你的遊戲取一個貼切的標題吧！
LocalPasswordSetKeyboardOk	OK
LocalPasswordSetKeyboardHeader	請設定密碼。
LocalPasswordSetKeyboardSubText	若不設定密碼，則不需輸入密碼也能領取遊戲。
LocalPasswordSetKeyboardGuide	輸入4位數數字
LocalPasswordCheckKeyboardOk	OK
LocalPasswordCheckKeyboardHeader	這款遊戲需要輸入密碼才能領取。
LocalPasswordCheckKeyboardGuide	輸入4位數數字
LocalPasswordCheckKeyboardMissmatch	密碼錯誤
ShareCodeKeyboardOk	OK
ShareCodeKeyboardHeader	請輸入遊戲ID或程式設計師ID。
ShareCodeKeyboardGuide	輸入G或P為首的ID
ShareCodeKeyboardInvalidId	ID錯誤
UgcReportReasonKeyboardOk	OK
UgcReportReasonKeyboardGuide	請填寫檢舉理由。
PropertyWindowPrefix	設定 - 
Dialog_MaxNode_Body	最多只能叫出５１２個小節點。
Dialog_MaxNode_Button	OK
Dialog_MaxWire_Body	最多只能連接１０２４條配對線。
Dialog_MaxWire_Button	OK
Dialog_MaxComment_Body	最多只能叫出２４個\n個人筆記小節點。
Dialog_MaxComment_Button	OK
Dialog_MaxIrMarker_Body	無法叫出更多使用\n動感IR照相機的小節點。
Dialog_MaxIrMarker_Button	OK
Dialog_MaxBgm_Body	最多只能叫出４個\nBGM小節點。
Dialog_MaxBgm_Button	OK
Dialog_Common_Button	OK
Dialog_MaxPlzFieldConfig_Body	最多只能叫出１個\n空間小節點。
Dialog_MaxCameraPosition_Body	最多只能叫出１個\n照相機位置小節點。
Dialog_MaxCameraDirection_Body	最多只能叫出１個\n照相機方向小節點。
Dialog_MaxCameraLookAt_Body	最多只能叫出１個\n照相機焦點小節點。
Dialog_MaxCameraAngle_Body	最多只能叫出１個\n照相機視角小節點。
Dialog_MaxPlzGeneratorFew_Body	最多只能叫出６４個\n發射物件小節點(１個)。
Dialog_MaxPlzGeneratorMiddle_Body	最多只能叫出１６個\n發射物件小節點(１０個)。
Dialog_MaxPlzGeneratorMany_Body	最多只能叫出２個\n發射物件小節點(１００個)。
Dialog_MaxPlzFancyRigid_Body	最多只能叫出３２個\n時尚物件小節點。
Dialog_MaxPlzHuman_Body	最多只能叫出８個\n人小節點。
Dialog_MaxPlzCar_Body	最多只能叫出８個\n汽車小節點。
Dialog_MaxPlzUfo_Body	最多只能叫出８個\nUFO小節點。
Dialog_MaxPlzHead_Body	最多只能叫出１個\n頭部小節點。
Dialog_MaxPlzHand_Body	最多只能叫出８個\n手部小節點。
Dialog_MaxCommentRigid_Body	最多只能叫出８個\n附註解物件小節點。
Dialog_NoVacancyObjWarpId_Body	已無多餘的傳送ID可以使用，\n無法叫出更多傳送物件出口小節點。
Dialog_MaxPlzRope_Body	最多只能叫出８個\n繩索連接小節點。
Dialog_MaxPlzTexture_Body	最多只能叫出１２８個\n材質小節點。
Dialog_MaxPlzObj_Body	無法叫出更多物件小節點。
Dialog_MaxPlzChangeFile_Body	最多只能叫出８個\n切換遊戲小節點。
Dialog_MaxPlzEasyCamera_Body	最多只能叫出１個\n遊戲畫面小節點。
Dialog_MaxPlzTpsCamera_Body	最多只能叫出１個\n照相機小節點。
Dialog_IrreconcilableEasyCamera_Body	無法與遊戲畫面小節點並存。
Dialog_IrreconcilableTpsCamera_Body	無法與照相機小節點並存。
Dialog_IrreconcilableCameraDetail_Body	無法與自訂照相機有關的小節點並存。
TvInputModeConfigSwitchLabel	TV模式的操作
HandheldInputModeConfigSwitchLabel	手提模式與桌上模式的操作
InputModeConfig_Touch	點觸
InputModeConfig_StickPointer	操控搖桿游標
InputModeConfig_GyroPointer	陀螺儀游標
HardKeyShortcutConfigSwitchLabel	畫布操作的快速鍵
HardKeyShortcutConfig_Enable	使用
HardKeyShortcutConfig_Disable	停用
CanvasScrollConfigSwitchLabel	上下顛倒移動畫布的操作
CanvasScrollConfig_Enable	開啟
CanvasScrollConfig_Disable	關閉
CanvasZoomConfigSwitchLabel	上下顛倒縮放畫布的操作
CanvasZoomConfig_Enable	開啟
CanvasZoomConfig_Disable	關閉
Lesson_00_00_CommentRigid_00	　去取得蘋果吧！　
Lesson_00_00_CommentRigid_01	　　 移動　　\n　　 跳躍　　
TpbPlaySoundSettingSeparater_Property	・
TpbPlaySoundSettingSeparater_Node	・
Lyt_Common.msbt
Dialog_Common_Button1	OK
Dialog_Common_Button2	取消
Dialog_LastStepReEnter_Body	要開始最後的步驟嗎？\n\n當這個步驟結束時，\n會覆蓋掉之前製作的遊戲。\n\n如果想要保存之前製作的遊戲，\n請先至自由設計程式複製遊戲。
Dialog_LastStepReEnter_Button1	開始
Dialog_GuidebookOpen_Body	已追加小節點指南。
Dialog_PlazaExitConfirmLesson_Body	若在中途結束，\n再次遊玩這個步驟時將會從頭開始。\n\n確定要結束嗎？
Dialog_PlazaExitConfirmLesson_Button1	結束
Dialog_PlazaExitConfirmLessonLast_Body	程式的設計進度將被儲存，\n結束後可回到該進度繼續設計。\n\n確定要儲存並結束嗎？
Dialog_PlazaExitConfirmLessonLast_Button1	儲存並結束
Dialog_PlazaExitConfirmGuidebook_Body	若在中途結束，\n再次遊玩這個小節點指南時將會從頭開始。\n\n確定要結束嗎？
Dialog_PlazaExitConfirmGuidebook_Button1	結束
Dialog_PlazaExitConfirmHint_Body	要結束小節點指南，\n返回謎題嗎？
Dialog_PlazaExitConfirmHint_Button1	返回謎題
Dialog_PlazaExitConfirmPuzzle_Body	若在中途結束，\n再次遊玩這個謎題時將會從頭開始。\n\n確定要結束嗎？
Dialog_PlazaExitConfirmPuzzle_Button1	結束
Dialog_MyGameOptionConfirmDelete_Body	確定要刪除嗎？
Dialog_MyGameOptionConfirmDelete_Button1	確定刪除
Dialog_MyGameOptionConfirmDelete_Button2	還是算了
Dialog_PuzzleHintConfirm_Body	要結束謎題，\n複習小節點指南嗎？\n\n已作出的變更將不會被儲存。
Dialog_PuzzleHintConfirm_Button1	閱讀小節點指南
Dialog_PuzzleSkipConfirm_Body	如果真的解不開這道謎題，\n可以跳過謎題，自動過關。\n\n要跳過謎題嗎？
Dialog_PuzzleSkipConfirm_Button1	跳過解不開的謎題
Dialog_PuzzleSkipConfirm_Button2	不跳過繼續努力
Dialog_PuzzleResetConfirm_Body	要重新開始這道謎題嗎？
Dialog_PuzzleResetConfirm_Button1	重新開始
Dialog_FinalStepResetConfirm_Body	若重新開始這個步驟，\n程式將回復到步驟開始時的狀態。\n\n確定要重新開始嗎？
Dialog_FinalStepResetConfirm_Button1	重新開始
Dialog_LockedLesson_Body	循序漸進地上完所有課堂吧。\n\n　　　　　　　　　　鮑伯上
Dialog_LockedLesson_Button1	知道了
Dialog_InternetUploadConfirm_Body	要將遊戲分享至網路嗎？\n\n分享後，只要透過遊戲ID，\n任何玩家都能遊玩、修改\n或再次分享該遊戲。
Dialog_InternetUploadConfirm_Button1	分享
Dialog_LocalUploadConfirm_Body	要將遊戲分享給附近的玩家嗎？\n\n分享後，其他玩家將能修改\n或將該遊戲分享至網路。
Dialog_LocalUploadConfirm_Button1	分享
Dialog_UgcReportConfirm_Body	您正在檢舉含有違反\n《Nintendo Account使用條款》內容的遊戲。\n\n此檢舉內容會被發送至任天堂客服中心，\n分享該遊戲的玩家將無法得知。
Dialog_UgcReportConfirm_Button1	OK
Dialog_ServerDeleteConfirm_Body	要刪除已分享的遊戲嗎？\n\n刪除遊戲後，\n其他玩家將無法領取該遊戲。\n\n已下載的遊戲不會被刪除。
Dialog_ServerDeleteConfirm_Button1	刪除
Dialog_UgcReportDone_Body	已檢舉。
Dialog_UgcReportDoneAndDelete_Body	已檢舉。\n\n這個遊戲將會從您的儲存資料中刪除。
Dialog_MaxLocalFileDownload_Body	遊戲的儲存數量已達上限。\n\n若要領取新的遊戲，\n請先刪除自己的遊戲\n或是已領取的遊戲。
Dialog_MaxLocalFileDownloadSelf_Body	遊戲的儲存數量已達上限。\n\n若要下載新的遊戲，\n請先刪除自己的遊戲\n或是已領取的遊戲。
Dialog_MaxLocalFileCopy_Body	遊戲的儲存數量已達上限。\n\n若要複製遊戲，\n請先刪除自己的遊戲\n或是已領取的遊戲。
Dialog_MaxLocalFileNew_Body	遊戲的儲存數量已達上限。\n\n若要建立新的遊戲，\n請先刪除自己的遊戲\n或是已領取的遊戲。
Dialog_MaxInternetUploadFile_Body	遊戲的分享數量已達上限。\n\n若要分享新的遊戲，\n請先刪除已分享的遊戲。
Dialog_LocalUploadEndConfirm_Body	要結束分享嗎？
Dialog_LocalUploadEndConfirm_Button1	結束
Dialog_SetTitleRequest_Body	決定遊戲標題吧！
Dialog_NotFoundAuthorCode_Body	找不到該程式設計師。
Dialog_NotFoundGameCode_Body	找不到該遊戲。
Dialog_InternetDownloadContinueConfirm_Body	要繼續跟這個程式設計師領取遊戲嗎？
Dialog_InternetDownloadContinueConfirm_Button1	領取
Dialog_InternetDownloadContinueConfirm_Button2	結束
Dialog_InternetDownloadGameMenuExitConfirm_Body	要結束領取遊戲嗎？
Dialog_InternetDownloadGameMenuExitConfirm_Button1	結束
Dialog_InternetDownloadGameInfoExitConfirm_Body	要放棄領取這個遊戲，\n返回自由設計程式嗎？
Dialog_InternetDownloadGameInfoExitConfirm_Button1	返回自由設計程式
Dialog_GoAlbumConfirm_Body	將拍攝這個畫面的截圖\n並打開相簿。\n\n把這張截圖分享到社群媒體中，\n告訴朋友自己的遊戲ID和程式設計師ID吧！\n\n要拍攝截圖並打開相簿嗎？
Dialog_GoAlbumConfirm_Button1	是
Dialog_GoAlbumConfirm_Button2	否
Dialog_ForceMyGameMenuOpenConfirm_Body	已輸入強制解鎖自由設計程式的特殊指令。\n\n自由設計程式正常會在完成第1課的遊戲後解鎖，\n為了獲得更佳的遊戲體驗，\n我們建議您依照原本的順序參與課堂。\n\n要解鎖自由設計程式嗎？
Dialog_ForceMyGameMenuOpenConfirm_Button1	解鎖
Dialog_ForceMyGameMenuOpenFinalConfirm_Body	確定要解鎖嗎？
Dialog_ForceMyGameMenuOpenFinalConfirm_Button1	確定要解鎖
Dialog_NetworkError_Other_Body	連線時發生錯誤
Dialog_NetworkError_DisconnectFromHost_Body	與遊戲分享者的連線已中斷
Dialog_NetworkError_BadConnection_Body	連線已中斷。\n\n您的網路環境可能不太穩定。\n\n若無法解決問題，\n請查看Nintendo Switch的支援網頁：\nhttps://www.nintendo.com.hk/support/
Dialog_BrokenData_Body	資料已損壞。
Dialog_DisableUpload_Body	分享遊戲的功能已經停止服務。\n謝謝您一直以來的支持。\n\n今後仍能繼續領取已分享的遊戲。
Dialog_SaveDataTransfer_Body	發現了體驗版的儲存資料。\n是否要繼承儲存資料?
Dialog_SaveDataTransfer_Button1	是
Dialog_SaveDataTransfer_Button2	否
Tpb_PlazaPlayUI-L_BtnPause-T_Text_00	暫停
Tpb_PlazaPlayUI-L_BtnRetry-T_00	長按
Tpb_PlazaEditUI-L_BtnPause-T_Text_00	暫停
Pause_End	結束
Pause_Back_to_Puzzle	返回謎題
Pause_Reset_Puzzle	重新開始
Pause_Reset_FinalLesson	重做這個步驟
Tpb_PlazaPauseMenu-L_BtnBacklog-T_Text_00	對話履歷
Tpb_PlazaPauseMenu-L_BtnSet-T_Text_00	操作設定
Tpb_PlazaPauseMenu-L_BtnRef-T_Text_00	小百科
Tpb_PlazaPauseMenu-L_BtnHint-T_Text_00	複習小節點指南
Tpb_PlazaPauseMenu-T_NodeLabel	小節點
Tpb_PlazaPauseMenu-T_WireLabel	配對線
Tpb_PlazaPauseMenuT_SubTitle_Lesson	第{[fa00|000000cd]}課\n第{[fa01|010000cd]}步驟
Tpb_PlazaPauseMenuT_SubTitle_Puzzle	小測驗\n{[fa00|000000cd]}-{[fa01|010000cd]}
Tpb_PlazaPauseMenuT_SubTitle_PuzzleIntro	第一次\n小測驗
Tpb_PlazaPauseMenuT_SubTitle_PuzzleExtra	附加\n小測驗{[fa01|010000cd]}
Tpb_PlazaPauseMenuT_SubTitle_Guidebook	小節點指南
Tpb_PlazaPauseMenuT_SubTitle_MyGame	自由設計程式
Tpb_PlazaBacklog-L_Cnt-L_Cnt_00-T_Text_01_Image	查看圖片
Tpb_PlazaBacklog-L_Cnt-L_Cnt_00-T_Text_01_Movie	查看影片
Tpb_PlazaBacklogOpenCnt-L_Footer-L_Btn_02-T_Text_00	再看一次
Tpb_PlazaBacklogOpenCnt-L_Footer-L_Btn_01-T_Text_00	返回
Tpb_GuidebookMenu-L_Footer-L_Btn_00-T_Text_00	決定
Tpb_GuidebookMenu-L_Footer-L_Btn_01-T_Text_00	返回
Tpb_PlazaPauseMenu-L_Footer-L_Btn_00-T_Text_00	決定
Tpb_PlazaPauseMenu-L_Footer-L_Btn_01-T_Text_00	關閉
Tpb_MyGameMenu-L_Footer-L_Btn_00-T_Text_00	決定
Tpb_MyGameMenu-L_Footer-L_Btn_01-T_Text_00	返回
Tpb_MyGameMenu-L_Footer-L_Btn_02-T_Text_00	選項
Tpb_PlazaEditConfig-L_Footer-L_Btn_00-T_Text_00	決定
Tpb_PlazaEditConfig-L_Footer-L_Btn_01-T_Text_00	關閉
Tpb_PlazaBacklog-L_Footer-L_Btn_00-T_Text_00	決定
Tpb_PlazaBacklog-L_Footer-L_Btn_01-T_Text_00	關閉
Tpb_CourseMenu-L_Footer-L_Btn_00-T_Text_00	決定
Tpb_CourseMenu-L_Footer-L_Btn_01-T_Text_00	返回
Tpb_LessonMenu-L_Footer-L_Btn_00-T_Text_00	決定
Tpb_LessonMenu-L_Footer-L_Btn_01-T_Text_00	返回
Tpb_MyGameMenuOption-L_Footer-L_Btn_00-T_Text_00	決定
Tpb_MyGameMenuOption-L_Footer-L_Btn_01-T_Text_00	關閉
Tpb_PuzzleMenu-L_Footer-L_Btn_00-T_Text_00	決定
Tpb_PuzzleMenu-L_Footer-L_Btn_01-T_Text_00	返回
Tpb_TopMenu-L_Footer-L_Btn_00-T_Text_00	決定
Tpb_Balloon-L_Movie_00-L_Footer-L_Btn_00-T_Text_00	前往下一步
Tpb_Balloon-L_Movie_00-L_Footer-L_Btn_01-T_Text_00	再看一次
Tpb_MyGameMenuOption-T_Header	無標題
Tpb_MyGameMenuOption-L_TitleName-T_Text	決定遊戲標題
Tpb_MyGameMenuOption-L_Lock-T_Text	鎖上
Tpb_MyGameMenuOption-L_Copy-T_Text	複製
Tpb_MyGameMenuOption-L_Delete-T_Text	刪除
Tpb_MyGameMenuOption-L_NodeStatus-T_Label	小節點
Tpb_MyGameMenuOption-L_WireStatus-T_Label	配對線
Tpb_MyGameMenuOption-L_NodeStatus-T_Status_00	{[fa02|000000cd]}/{[fa02|010000cd]}
Tpb_MyGameMenuOption-L_Lock-On	開啟
Tpb_MyGameMenuOption-L_Lock-Off	關閉
Tpb_PlazaInsertTitle-T_Guidebook	小節點指南
Tpb_PlazaInsertTitle-T_Puzzle_00	小測驗{[fa00|000000cd]}-{[fa01|010000cd]}
Tpb_PlazaInsertTitle-T_Puzzle_Intro	第一次小測驗
Tpb_PlazaInsertTitle-T_Puzzle_Extra	附加小測驗{[fa01|010000cd]}
Tpb_EventLessonClear-T_Date	{[fa0b|000000cd]}/{[fa09|010000cd]}/{[fa09|020000cd]}
Tpb_EventLessonClear-T_01	程式設計師
Tpb_EventLessonClear-T_UserName	{[0201]}
Tpb_EventPuzzleClear-T_00	全部過關！
Tpb_EventLessonAllClear-T_Text	你已經上完總共７課的附帶導航的課堂了，\n這將成為你邁向程式設計師之路的第一步。\n希望今後你能靠著自己的力量，\n製作出更多更多屬於你的遊戲！
Tpb_EventLessonAllClear-T_UserName	{[0201]}
Tpb_EventLessonAllClear-T_00	已完成所有課堂！
Tpb_EventLessonAllClear-T_01	鮑伯＆愛麗絲
Tpb_EventLessonAllClear-T_Date	{[fa0b|000000cd]}/{[fa09|010000cd]}/{[fa09|020000cd]}
Tpb_TopMenu-L_CourseMenu_00-T_Text_00	附帶導航的課堂
Tpb_TopMenu-L_MyGameMenu_00-T_Text_00	自由設計程式
Tpb_MyGameMenu-T_Header	自由設計程式
Tpb_MyGameMenu-L_BtnNewFile-T_Text	建立新檔案
Tpb_MyGameMenu-L_BtnCntMenu_00-T_Text_00	小節點指南
Tpb_CourseMenu-T_Header_00	附帶導航的課堂
Tpb_CourseMenu-T_TimeLabel	預計花費時間
Tpb_CourseMenu-T_TimeRequired_01	約40分鐘
Tpb_CourseMenu-T_TimeRequired_02	約50分鐘
Tpb_CourseMenu-T_TimeRequired_03	約70分鐘
Tpb_CourseMenu-T_TimeRequired_04	約80分鐘
Tpb_CourseMenu-T_TimeRequired_05	約80分鐘
Tpb_CourseMenu-T_TimeRequired_06	約60分鐘
Tpb_CourseMenu-T_TimeRequired_07	約90分鐘
Tpb_CourseMenu-L_BtnCntMenu-T_Text_00	小節點指南
Tpb_CourseMenu-T_Lesson_Lesson	第{[fa00|000000cd]}課
Tpb_CourseMenu-T_Clear	過關
Tpb_CourseMenu-T_CheckPointClear	過關
Tpb_CourseMenu-T_Extra	完成{[fa02|000000cd]}％
Tpb_LessonMenu-T_Header	第{[fa00|000000cd]}課
Tpb_LessonMenu-T_StepNum	步驟{[fa01|000000cd]}
Tpb_LessonMenu-L_BtnCntMenu-T_Text_00	小節點指南
Tpb_LessonMenu-L_Steps_00-T_StepNumLocked	{[fa01|000000cd]}
Tpb_GuidebookMenu-T_SideTitle	登場的小節點
Tpb_GuidebookMenu-T_SideOthers	其他
Tpb_PuzzleMenu-L_BtnCntMenu-T_Text_00	小節點指南
Tpb_PuzzleMenu-L_Puzzle_00-T_PuzzleNum	{[fa00|000000cd]}
Tpb_PuzzleMenuExtra-L_Footer-L_Btn_00-T_Text_00	決定
Tpb_PuzzleMenuExtra-L_Footer-L_Btn_01-T_Text_00	返回
Tpb_PuzzleMenuExtra-L_CntList_00-L_Puzzle_00-T_PuzzleNum	{[fa01|000000cd]}
Tpb_Reticle2D_00-L_GyroDpd_00-BtnL	
Tpb_Reticle2D_00-L_GyroDpd_00-BtnR	
Tpb_Reticle2D_00-L_GyroDpd_00-Cal_L	需要導正{[0001|2000]}{[0001|ffff]}Joy-Con(L)的陀螺儀感應器。\n請放在平坦的地方，並保持靜止。
Tpb_Reticle2D_00-L_GyroDpd_00-Cal_R	需要導正{[0001|2000]}{[0001|ffff]}Joy-Con(R)的陀螺儀感應器。\n請放在平坦的地方，並保持靜止。
Tpb_ErrorCollision	大量物件重疊配置，\n正在消除物件間相互重疊的狀況……
Tpb_ErrorFrameRate	●
Tpb_ErrorObjVanish	▲
Tpb_PlazaEditConfig-T_Header	操作設定
Tpb_PlazaPauseMenu-L_BtnName-T_Text_00	決定遊戲標題
Tpb_PlazaBtnFinish-L_Finish_00-T_Text_00	完成
Tpb_GuidebookMenu-L_BtnCntMenu-T_Text_00	小節點指南
Tpb_MyGameMenuOption-T_Lock	若要編輯這個遊戲，請先複製檔案。
Tpb_PlazaBacklog-T_Tag	對話履歷
Tpb_MyGameMenuOption-T_EditDateLabel	更新日期與時間
Tpb_MyGameMenuOption-T_EditDate	{[fa0b|000000cd]}/{[fa09|010000cd]}/{[fa09|020000cd]} {[fa09|030000cd]}:{[fa09|040000cd]}
Tpb_PlazaInsertClear-T_00	過關
Tpb_PuzzleMenu-L_Puzzle_00-T_Pass	跳過
Tpb_GameInfo-L_Footer-L_Btn_01-T_Text_00	返回
Tpb_GameInfo-L_Footer-L_Btn_01-T_Text_00_End	結束
Tpb_GameInfo-L_Footer-L_Btn_01-T_Text_00_Stop	退出
Tpb_GameInfo-L_Footer-L_Btn_00-T_Text_00	決定
Tpb_LocalGameMenu-L_Footer-L_Btn_02-T_Text_00	重新搜尋
Tpb_LocalGameMenu-L_Footer-L_Btn_01-T_Text_00	返回
Tpb_LocalGameMenu-L_Footer-L_Btn_00-T_Text_00	決定
Tpb_LocalGameMenu-T_Search_00	已搜尋到附近玩家分享的遊戲。
ReportKind_00	含有個人資訊、約會目的之內容
ReportKind_01	含有暴力表現之內容
ReportKind_02	含有違反公共秩序或道德之內容
ReportKind_03	含有誹謗或歧視性之內容
ReportKind_04	含有營利及宣傳目的之內容
ReportKind_05	含有猥褻表現之內容
ReportKind_07	含有其他不當表現之內容
Tpb_MyGameMenu-L_BtnGetFile-T_Text	領取
Tpb_MyGameMenu-L_BtnShareFile-T_Text	分享
Tpb_MyGameMenu-L_BtnExtract-T_Text	篩選
Tpb_MyGameMenu-L_BtnExtract-T_Text_All	所有遊戲 ({[fa01|000000cd]})
Tpb_MyGameMenu-L_BtnExtract-T_Text_Favorite	我的最愛 ({[fa01|000000cd]})
Tpb_UploadGameSelect-L_Footer-L_Btn_01-T_Text_00	返回
Tpb_UploadGameSelect-L_Footer-L_Btn_00-T_Text_00	決定
Tpb_UploadGameSelect-T_Explain_00	要分享哪一款遊戲？
Tpb_UgcReportSelect-L_Footer-L_Btn_01-T_Text_00	返回
Tpb_UgcReportSelect-L_Footer-L_Btn_00-T_Text_00	決定
Tpb_UgcReportSelect-T_ReasonForReporting	請選擇檢舉分類。
Tpb_UgcReportConfirm-T_Header_00	要使用這個內容檢舉嗎？
Tpb_UgcReportConfirm-L_Footer-L_Btn_02-T_Text_00	放大檢舉畫面
Tpb_UgcReportConfirm-L_Footer-L_Btn_01-T_Text_00	返回
Tpb_UgcReportConfirm-L_Footer-L_Btn_00-T_Text_00	決定
Tpb_MethodSelect-L_Footer-L_Btn_01-T_Text_00	返回
Tpb_MethodSelect-L_Footer-L_Btn_00-T_Text_00	決定
Tpb_MethodSelect-L_Btn_00-T_Text_Upload	分享至網路
Tpb_MethodSelect-L_Btn_01-T_Text_Upload	分享給附近的玩家
Tpb_MethodSelect-L_Btn_00-T_Text_Download	透過網路領取
Tpb_MethodSelect-L_Btn_01-T_Text_Download	從附近的玩家領取
ReportKind_NotSet	請選擇檢舉分類。
Tpb_InternetGameMenu-L_Footer-L_Btn_02-T_Text_00	重新搜尋
Tpb_InternetGameMenu-L_Footer-L_Btn_01-T_Text_00	結束
Tpb_InternetGameMenu-L_Footer-L_Btn_01-T_Text_00-Back	返回
Tpb_InternetGameMenu-L_Footer-L_Btn_00-T_Text_00-Other	決定
Tpb_InternetGameMenu-L_Footer-L_Btn_00-T_Text_00-Self	決定
Tpb_PlazaPauseMenu-L_BtnReport-T_Text	檢舉
Tpb_InternetGameMenu-T_NoItem_00	沒有分享任何遊戲
Tpb_MyGameMenuOption-L_Fav-T_Text	我的最愛
Tpb_MyGameMenuOption-L_Fav-T_Status-On	開啟
Tpb_MyGameMenuOption-L_Fav-T_Status-Off	關閉
Tpb_MyGameMenuOption-L_AuthorID-T_Text	領取這個程式設計師的遊戲
Tpb_InternetGameMenu-L_BtnCntMenu-L_Cnt_00-L_AuthorID-T_Label	遊戲ID
Tpb_InternetGameMenu-L_BtnCntMenu-L_Cnt_00-T_Report	已檢舉。
Tpb_InternetGameMenu-L_Header-T_Title-Self	{[0802]}分享的遊戲
Tpb_InternetGameMenu-L_Header-T_Title-Other	{[0801]}分享的遊戲
Tpb_InternetGameMenu-L_Header-T_AuthorID_00	程式設計師ID
Tpb_Header-L_Header-T_Header_Upload	分享
Tpb_Header-L_Header-T_Header_InternetUpload	分享至網路
Tpb_Header-L_Header-T_Header_LocalUpload	分享給附近的玩家
Tpb_Header-L_Header-T_Header_Download	領取
Tpb_Header-L_Header-T_Header_InternetDownload	透過網路領取
Tpb_Header-L_Header-T_Header_LocalDownload	從附近的玩家領取
Tpb_Header-L_Header-T_Header_InternetGameSelf	已分享的遊戲
Tpb_Header-L_Header-T_Header_UgcReport	檢舉
Tpb_LocalGameMenu-L_BtnCntMenu-Author	程式設計師
Tpb_LocalGameMenu-T_NoItem_00	找不到附近玩家分享的遊戲。
Tpb_GameInfo-L_GameCard-T_EditDate	更新時間
Tpb_GameInfo-L_GameCard-T_EditDate_Str	{[fa0b|000000cd]}/{[fa09|010000cd]}/{[fa09|020000cd]} {[fa09|030000cd]}:{[fa09|040000cd]}
Tpb_GameInfo-L_GameCard-T_NodeStatus	小節點
Tpb_GameInfo-L_GameCard-T_NodeStatus_Str	{[fa02|000000cd]}/{[fa02|010000cd]}
Tpb_GameInfo-L_GameCard-T_WireStatus	配對線
Tpb_GameInfo-L_GameCard-T_GameID	遊戲ID
Tpb_GameInfo-L_GameCard-T_Author	程式設計師
Tpb_GameInfo-L_GameCard-L_Btn_Upload-T_Text_Internet	分享至網路
Tpb_GameInfo-L_GameCard-L_Btn_Upload-T_Text_Local	分享給附近的玩家
Tpb_GameInfo-L_GameCard-L_Btn_Get-T_Text_InternetGet	透過網路領取
Tpb_GameInfo-L_GameCard-L_Btn_Get-T_Text_InternetHave	已擁有。
Tpb_GameInfo-L_GameCard-L_Btn_Get-T_Text_LocalGet	從附近的玩家領取
Tpb_GameInfo-L_GameCard-L_Btn_Get-T_Text_LocalHave	已擁有。
Tpb_Waiting-L_Indicator_00-T_Waiting_00-Uploading	正在上傳……
Tpb_Waiting-L_Indicator_00-T_Waiting_00-Downloading	正在下載……
Tpb_Waiting-L_Indicator_00-T_Waiting_00-LocalDownloadPreparing	正在準備下載……
Tpb_Waiting-L_Indicator_00-T_Waiting_00-LocalDownloading	正在下載……
Tpb_Waiting-L_Indicator_00-T_Waiting_00-UgcReportSending	正在發送檢舉內容……
Tpb_Waiting-L_Indicator_00-T_Waiting_00-UploadGameDeleting	正在刪除……
Tpb_Waiting-T_Waiting_00-InternetConnecting	正在連接……
Tpb_Waiting-T_Waiting_00-AuthorCodeSearching	正在搜尋程式設計師……
Tpb_Waiting-T_Waiting_00-GameCodeSearching	正在搜尋遊戲……
Tpb_Waiting-T_Waiting_00-LocalSearching	正在搜尋附近玩家分享的遊戲……
Tpb_Waiting-T_Waiting_00-ReSearching	正在重新搜尋……
Tpb_MyGameMenu-No_Game	沒有遊戲。
Tpb_MyGameMenu-No_Game_Favorite	我的最愛中沒有遊戲。
Tpb_InternetGameMenu-L_BtnCntMenu-L_Cnt_00-T_Download	已擁有。
Tpb_GameInfo-Password_Edit	設定
Tpb_GameInfo-Password_Reset	重置
Tpb_UgcReportConfirm-L_BtnOk-T_Text	檢舉
Tpb_UgcReportConfirm-T_LabelKind	檢舉分類
Tpb_UgcReportConfirm-T_LabelReason	檢舉理由
Tpb_MethodSelect-L_BtnShareList-T_Title	已分享的遊戲
Tpb_MyGameMenu-T_LabelSlot	遊戲數量
Tpb_MyGameMenu-T_NumSlot	{[fa01|000000cd]}/{[fa01|010000cd]}
Tpb_UploadGameSelect-T_NoItem_00	沒有任何遊戲。
Tpb_UgcReportConfirm-T_LabelThumbnail	檢舉畫面
Tpb_GameInfo-L_GameCard-T_ArrangeStr	改編作品
Tpb_GameInfo-L_GameCard-L_BtnShare-T_Text	分享至社群媒體
Tpb_GameInfo-L_GameCard-L_BtnEnd-T_Text	結束
Tpb_GameInfo-L_BtnUgcReport-T_Text	檢舉
Tpb_MyGameMenuOption-T_ArrangeLabel	改編作品
Tpb_MyGameMenuOption-T_GameIDLabel	遊戲ID
Tpb_MyGameMenuOption-T_AuthorLabel	程式設計師
Tpb_MyGameMenuOption-T_AuthorIDLabel	程式設計師ID
Tpb_GameInfo-L_Password-T_Password_00	密碼
Tpb_GameInfo-Password_Non	無
Tpb_GameInfo-L_GameCard-L_BtnAuthorID-T_Text	前往遊戲一覽
Tpb_GameInfo-L_BtnShare-T_Text	分享至社群媒體
Tpb_GameInfo-L_BtnDownload-T_Text	下載
Tpb_GameInfo-L_BtnDelete-T_Text	刪除
Tpb_GameInfo-L_Loading-T_text_00	正在分享……
Tpb_GameInfo-Download_Num	{[fa00|000000cd]}人正在下載……
Tpb_GameInfo-Download_Waiting	正在等候要領取的玩家……
Tpb_Waiting-L_Indicator_00-T_Finish_00-CompleteUploading	已分享。
Tpb_Waiting-L_Indicator_00-T_Finish_00-CompleteDownloading	已下載。
Tpb_Waiting-L_Indicator_00-T_Finish_00-CompleteLocalDownloading	已下載。
Tpb_Waiting-L_Indicator_00-T_Finish_00-CompleteUploadGameDeleting	已刪除。
Tpb_TopMenu-T_c	© Nintendo
NodeChat.msbt
ConstantNode	慢慢來！\n腳踏實地可是很重要的喔！
StickTiltedNode	轉轉～\n轉一轉操控搖桿吧～
ButtonPressedNode	嗨！\n{[0201]} ！\n你可要鼓起幹勁啊！
IsTouchNode	你怎麼啦？\n覺得累的話，可以摸摸我喔。
TouchPositionNode	{[0201]}，\n學習程式設計得穩紮穩打，\n千萬不能心急喔。
IntegratedSurfaceUpwardNode	當你不知道該如何下手時……\n就別想太多了，先做再說！
IntegratedAxisAngleNode	呼……\n如果覺得程式設計得很累，\n要不要做個瑜珈轉換一下心情啊？
IntegratedSwingedNode	嘿呀～～！
IntegratedRotationSpeedNode	從這個程式叫出那個小節點，\n就可以做出那個程式，\n在這之前先把剛才的程式給……吧啦吧啦。
OnStartNode	要開始囉！
PlzObjBreakCountNode	哦！{[0201]}，\n你的程式設計得怎麼樣啦！？
FoundIrMarkerNode	哼，{[0201]}……\n你想拜託我做事嗎？\n我收費可不便宜喔？
CalculationNode	只要使用高性能的我，\n就能做出高品質的遊戲。
ComparisonNode	{[0201]}，\n你在做什麼遊戲啊……好想知道喔！
AndNode	沒問題沒問題！{[0201]}，\n好好確認每個細節也是很重要的喔！
NotNode	我會期待\n你做的遊戲才怪！
AtanNode	我只對角度有興趣啊～\n你在遊戲裡多使用些角度啦。
TrigonometricNode	我是不是……有點難懂啊？\n對不起……\n要是我能再淺顯易懂一些就好了。
AngleDistanceNode	嗨！謝謝你每次的光臨！\n計算角度的專家就是我，\n需要的時候就交給我吧！
IntegerRandomNode	這個程式感覺好厲害啊～～！\n雖然我完全不知道這是什麼程式～！
MappingNode	呵呵呵呵～！你究竟～\n想用這個程式做什麼呢～？
QuantizationNode	{[0201]}，\n這個遊戲真棒。\n我很喜歡喔，給你５顆★。
TriggerNode	……\n我在集中精神……不要和我說話。
SquareRootNode	嗯～\n總覺得好煩躁啊～
AbsoluteValueNode	耶！\n既然要設計程式～！\n就要開開心心地設計YO！
NegationNode	準備反轉！\n向右轉！
FlagNode	Zzz……
TpbCounterNode	進行得不順利時，\n多挑戰幾次就好了。
WireWarpInNode	這裡是入口！\n{[0201]}休息完回來了。\n請講。
WireWarpOutNode	這裡是出口！\n{[0201]}的程式設計\n似乎正在順利進行中，請講。
CommentNode	離遊戲完成\n　要花費多少時間\n　　全由你掌握
TimerNode	嗯……\n要休息也是可以，\n但時間正一分一秒地流逝喔。
SpoitNode	貴賓你好，\n請務必使用敝公司的標示。
TpbPlaySoundNode	{[0201]} ～～～～\n加油～～♪\n
TpbPlayBgmNode	Yeah！\n孕育遊戲的程式設計～\n遊戲世界裡的王是你～
VibrateNode	不不不不～～～♪\n不要心急～～♪\n一步步向前進進進進～～♪
PlzGravityNode	我想讓這個遊戲～\n變得更～輕～盈～
PlzPlaySpeedNode	居然連通曉創造真理之秘術……\n支配時空的神明都敢差遣……\n哼，我們一起讓未來成為永恆吧。
PlzResetNode	……呼。\n如果你做得很辛苦，也可以重來喔？
PlzExitNode	雖然我很想一直待在遊戲的世界裡……\n但還是得回到現實世界，你說是吧？
PlzChangeFileNode	唉……休息結束了嗎……？\n要切換心情才行……
GaugeNode	你好，{[0201]}。\n請給我指示吧。
Move2dNode	{[0201]}！\n盡情地挑戰新事物吧！
AlwaysOnNode	……你好。\n嗯……\n你是{[0201]}，對吧？
EmitIrLedNode	你做什麼？\n想跟我吵架嗎？\n看什麼看啊。
PlzHumanNode	嗨！\n{[0201]}，\n你看起來狀態不錯呢！
PlzCarNode	嗖嗖嗖！\n你想要讓汽車怎麼跑呢？
PlzUfoNode	這個遊戲～有一種～\n「好棒！」的感覺呢～
PlzRigidNode	……嗨。\n如果你累了，要記得休息喔。
PlzFancyRigidNode	{[0201]}會做出\n怎樣的遊戲呢……我好期待喔♥
PlzCommentRigidNode	想透過遊戲傳達什麼訊息嗎？\n那麼就用語言的力量……\n大聲地告訴全世界吧。
PlzScoreRigidNode	歡迎回來，\n{[0201]}。\n你要繼續加油喔！
PlzTextureNode	我很期待能夠看到你\n創造出獨一無二的作品喔。
PlzIntegratedEffectNode	來來來～！\n我來幫{[0201]}的遊戲\n炒熱氣氛吧～～
PlzJointSingleAxisSliderNode	{[0201]}……！\n我會跟你一起設計程式，\n直到最後！
PlzJointSliderNode	你不是去休息了嗎？也太早回來了吧～\n我還想再休息一下的說～
PlzJointHingeNode	你好～！\n來吧！我們跳支舞～骨碌碌地旋轉吧！
PlzRopeNode	呵呵呵呵呵……\n你可要好好愛惜自己做的遊戲……\n千萬不要忘記囉～
PlzTouchSensorNode	咿！\n……{[0201]}，\n你不要嚇我啦～
PlzBrokenSensorNode	是的！\n{[0201]}不在的時候，\n我可是一直在看著遊戲喔！
PlzBreakSensorNode	不夠……完全不夠！\n我想要看更華麗的破壞場景！
PlzGrabSensorNode	……噗啾！\n哎呀！被抓住了！
PlzPositionSensorNode	辛苦你了！\n要看位置的話就交給我吧！
PlzSpeedSensorNode	{[0201]}！\n你快點做遊戲啦！
PlzAccelerationSensorNode	一直拖著也不是辦法！\n重要的是爆發力！是靈感！
PlzAngleSensorNode	記得要抬頭挺胸！\n良好的姿勢有助於程式設計喔。
PlzRotationSensorNode	不可以晃到軸心……\n不論是程式設計還是美麗的旋轉，\n維持筆直的軸心都是很重要的喔。
PlzMoveRigidNode	來吧！你做完暖身操了嗎！？\n活動身體前一定要做伸展運動喔！
PlzRotateRigidNode	哈哈哈……\n我很期待能看到你\n做出優雅的遊戲喔！
PlzStretchRigidNode	你想讓遊戲變得有趣？\n那就交給我吧！\n不管是什麼遊戲，我都會讓他變得有趣！
PlzPullForceNode	{[0201]}！\n我們來同心協力製作遊戲吧！
PlzGeneratorFewNode	哦哦～\n遊戲好像變得不錯喔～～？
PlzGeneratorNode	只要有我們兩個～～\n不管什麼遊戲都做得出來～～！
PlzGeneratorManyNode	好～～！！！\n我要盡情地發射物件啦～～！！！！
PlzBindCommanderNode	呵呵呵……\n既然你這麼說的話，那就破壞吧……
PlzObjWarpEnterNode	門……\n我的力量就交給你了，\n將他活用在遊戲製作上吧。
PlzObjWarpExitNode	門門。\n叫出我的瞬間，\n遊戲完成之日也將變得近在眼前。
PlzEasyCamera	{[0201]}～～\n你的企劃真完美呢～！\n攝影就交給我吧！
PlzTpsCamera	……你不用擔心照相機的事。
PlzCameraPositionNode	我是決定照相機位置的隊長！\n我會幫你拍出最棒的景色！
PlzCameraLookAtNode	我盯～～～\n到處都是……\n讓人在意的東西……
PlzCameraDirectionNode	{[0201]}！\n看這裡～！這裡這裡～！！
PlzCameraViewAngleNode	只要改變一下視角，\n印象就會產生一百八十度大轉變……\n真有推理小說的感覺……
PlzFieldConfigNode	……不論何時，\n你都要走在自己相信的道路上。
PlzHeadNode	唔……真是令人頭痛啊……\n到底要怎麼做才能實現你的遊戲呢？
PlzHandNode	{[0201]}！\n如果遇到困難的話，\n我可以伸出援手喔！
PuzzleName.msbt
ButtonAndHuman	讓人跳躍吧
StickAndHuman	用操控搖桿移動人吧
EasyCamera	遊戲畫面小節點拍攝的地方
Attribute	物件的狀態
Attribute01	看不見的物件
Shoot	瘋狂的發射物件小節點
MovableRigid	移動可移動物件吧
Calc	用計算導出結果吧
Counter	計數器的數值
Compare	比較結果
Warp	傳送方法
UFO	UFO！拜託你了！
Joint	製作形狀的連接
DetailAttribute	讓人不會被破壞
Not	用NOT小節點喊暫停！
And	AND的意思
Hinge	製作斜坡吧
Slider	剛好的範圍
Flag	起床了！旗標小節點！
Punch	為拳頭注入力量
Position	你的位置
Camera	照相機小節點拍攝的地方
FreeJoint00	自由操控物件
FreeJoint01	承受重力的自由
TriplePunch	3拳破壞
TriplePunch01	平面的耐久度
Car	油門&倒車
FancyLabel	分辨的方法
WinOrLose	判定勝負
Start	禁止偷跑
AutoDrive	製作自動駕駛程式吧
RopeWalk	走鋼絲
HangedApple	吊在空中的蘋果
LightInDark	漆黑中的光明
Command	秘密的隱藏指令
PinBall	製作彈珠台吧
Or	全都避開！
NotInt	NOT的意思
AndInt	AND的意思
MultiWire	人氣端口
SignConvert	是正是負
AutoDoor	芝麻開門！
Material	材質才是關鍵
JointAxis	戳戳看！
ConnectDir	哪邊是右手？
RandomBox	0.1%機會
AntiGravityApple	讓蘋果掉下來
Replusion	排斥力
RotateXYZ	如何轉動？
TeamCamera	照相機戰隊
WarpShield	製作亞空間反轉護盾吧！
MoveTouchPos	向點觸位置GO！
AutoBind	嵌進去吧！
Passcode	破解密碼
OverSpeed_01	膽大心細
HatenaBox	？之方塊
UfoCatcher	UFO先生求求你！
PhaseShift	錯開時機
LinkedGear	左轉轉右轉轉
AnalogClock	3點的下午茶
FreeJoint_Ex	運送蘋果
StepGenerator	高牆的另一邊
ShootCursor	瞄準射擊！
ScreenEdge	畫面邊緣的亞空間
Invisible	挖掘蘋果吧
Kedamaru	毛球這邊來！
KickBall	完美射門！
DoubleControl	我右你下
BecomeSmall	化身小矮人！
ChargePunch	揮出蓄力拳！
Fireworks	煙火大會
MushButton	10秒鐘的試煉
PhantomApple	幻影蘋果
GhostWarp	鬼屋
Logic	AND和NOT的迷宮
BadMaze	打破刻板印象才是解謎關鍵
GimmickSlope	機關重重
TimerBridge_00	過橋
TimerBridge_01	過橋：困難
IntroAgain	去取得蘋果吧！
PuzzleClear	謎題的真相
Puzzle_Camera.msbt
000	關於這道問題，\n我有一些事要補充。
001	到程式設計畫面去吧。
002	在這道問題裡，\n你可以切換視角。
003	適時地利用切換視角\n來解開謎題吧。
Puzzle_Common.msbt
Hint000	你好像遇上難題了呢。
Hint001	要不要先暫停解謎，\n到小節點指南複習一下？
Hint002	是
Hint003	否
Hint004	那麼，我們到小節點指南去吧。
Hint005	你想靠自己的力量過關嗎……？\n能有這種想法，真是難能可貴。
Hint006	只要按下暫停，\n你隨時都可以複習小節點指南。
Hint007	如果你改變心意了，\n就去小節點指南看看吧。
Puzzle_Intro.msbt
000	{[0201]}，\n歡迎來到{color[0400]}{[0001|1d00]}謎題{[0001|ffff]}{color[ffff]}。
001	我會用這個謎題……\n來測試你是否了解\n小節點車庫的基本。
002	只要這個人{[0001|1d00]}{color[0400]}獲得蘋果{color[ffff]}{[0001|ffff]}，\n就算是解開謎題。
003	那麼，該怎麼做\n才能獲得蘋果呢？
004	維持現狀的話，\n不管怎麼做人都不會移動，\n更別說是讓他獲得蘋果了。
005	所以，為了讓人可以獲得蘋果……
006	你需要親手{color[0400]}{[0001|1d00]}設計程式{[0001|ffff]}{color[ffff]}。
007	走吧，到{[0001|1d00]}{color[0400]}程式設計畫面{color[ffff]}{[0001|ffff]}去看看。
008	不過，謎題中的程式\n並不能隨心所欲地設計。
009	在這道問題裡，\n你只能把{[0001|1d00]}{color[0400]}按鍵小節點\n{color[ffff]}{[0001|ffff]}和{[0001|1d00]}{color[0400]}人小節點連接{color[ffff]}{[0001|ffff]}在一起。
010	那麼，你覺得該怎麼做\n才可以讓人獲得蘋果呢？
011	如果你設計好了，\n就到{color[0400]}{[0001|1d00]}遊戲畫面{[0001|ffff]}{color[ffff]}去確認結果吧。
012	結果不甚理想的話，\n可以回到程式設計畫面重新來過。
013	那麼，請好好加油吧。
Puzzle_MovableRigid.msbt
Puzzle_MoveTouchPos.msbt
000	關於這道問題，\n我有一些事要補充。
001	試著點觸畫面。
002	橘色的圓柱體\n會向{color[0400]}{[0001|1d00]}點觸的位置{[0001|ffff]}{color[ffff]}移動。
003	試著按下操控搖桿，叫出陀螺儀游標……\n再按下鍵。
004	橘色的圓柱體\n會向{color[0400]}{[0001|1d00]}陀螺儀游標的位置{[0001|ffff]}{color[ffff]}移動。
005	試著按下操控搖桿，叫出陀螺儀游標……\n再按下鍵。
006	橘色的圓柱體\n會向{color[0400]}{[0001|1d00]}陀螺儀游標的位置{[0001|ffff]}{color[ffff]}移動。
007	試著用滑鼠點擊任意位置。
008	橘色的圓柱體\n會向{color[0400]}{[0001|1d00]}點擊的位置{[0001|ffff]}{color[ffff]}移動。
009	試著按下操控搖桿，叫出陀螺儀游標……\n再按下鍵。
010	橘色的圓柱體\n會向{color[0400]}{[0001|1d00]}陀螺儀游標的位置{[0001|ffff]}{color[ffff]}移動。
011	畫面中的人……\n正在不斷向右上方移動。
012	好好掌握如何操控人，\n解開這道謎題吧。
Puzzle_StickAndHuman.msbt
000000	為了怕你忘記，\n我就再說一遍{color[0400]}{[0001|1d00]}謎題{[0001|ffff]}{color[ffff]}的規則吧。
000	只要{color[0400]}{[0001|1d00]}人獲得蘋果{[0001|ffff]}{color[ffff]}，\n就算是解開謎題。
001	想要讓人獲得蘋果，\n就得到程式設計畫面{color[0400]}{[0001|1d00]}設計程式{[0001|ffff]}{color[ffff]}。
001-01	不過，這裡的程式\n並不能隨心所欲地{color[0400]}{[0001|1d00]}設計{[0001|ffff]}{color[ffff]}。
002	在這道問題裡，你只能更改連接著\n{color[0400]}{[0001|1d00]}操控搖桿小節點{[0001|ffff]}{color[ffff]}和{color[0400]}{[0001|1d00]}人小節點{[0001|ffff]}{color[ffff]}的配對線。
002-01	觀察從小節點冒出的{color[0400]}{[0001|1d00]}泡泡框{[0001|ffff]}{color[ffff]}，\n你就能知道可以更改的地方。
003	那麼，謎題總共有5道……\n請努力解開他們吧。
Sequence_CourseFinish.msbt
000	恭喜你完成了\n附帶導航的課堂～～～～～！！！！！
001	終於把所有課都上完了！
002	真是辛苦你了！
002-01	{[0201]}，\n現在的你應該能夠靠著\n自己的力量設計遊戲了。
003	不過，{[0201]}，\n可別以為你已經到終點囉！
004	這只是你成為{color[0400]}{[0001|1d00]}程式設計師{[0001|ffff]}{color[ffff]}的第一步！
005	今後……請你以{color[0400]}{[0001|1d00]}程式設計師{[0001|ffff]}{color[ffff]}的身分，\n靠自己的力量設計出屬於你的遊戲。
006	遊戲設計的世界何其寬廣，\n那裡還有許多地方正等著\n{[0201]}去探索呢。
007	我很期待能夠看到\n{[0201]}設計的遊戲喔。
008	好了！\n讓我們開始設計程式吧！
Sequence_Intro_Course_00.msbt
000	在附帶導航的課堂中，\n我們總共要設計7款遊戲！
001	第1課是簡單的二人對戰遊戲……\n{[0001|1d00]}{color[0400]}二人對戰！捉迷藏大戰{color[ffff]}{[0001|ffff]}！
002	第2課則是要活用\nNintendo Switch的功能\n製作出{[0001|1d00]}{color[0400]}滾滾球{color[ffff]}{[0001|ffff]}遊戲……
003	第3課是畫面會自動捲動的\n射擊遊戲……{[0001|1d00]}{color[0400]}ALIEN SHOOTING{color[ffff]}{[0001|ffff]}！
004	第4課要製作利用跳躍和出拳\n朝終點前進的{[0001|1d00]}{color[0400]}GO! GO! 運動競技{color[ffff]}{[0001|ffff]}……
005	第5課是3D解謎遊戲……{[0001|1d00]}{color[0400]}解謎房間{color[ffff]}{[0001|ffff]}！
006	第6課要製作可以和\n自動駕駛的汽車競速……\n讓人熱血沸騰的{[0001|1d00]}{color[0400]}刺激賽車{color[ffff]}{[0001|ffff]}～
007	最後！第7課要製作\n一款3D動作遊戲……\n{[0001|1d00]}{color[0400]}3D運動競技空間{color[ffff]}{[0001|ffff]}！
008	透過學習這些五花八門的遊戲程式……
009	不久後{[0201]}\n就能靠自己的力量設計遊戲囉！
010	那麼……\n我會在第1課等你……
011	一定要來喔～
012	我是鮑伯！\n那麼待會見囉！
100	……等一下，\n{[0201]}。
101	你好，\n我的名字是{[0001|1d00]}{color[0400]}愛麗絲{color[ffff]}{[0001|ffff]}。
102	剛才那個小傢伙是{[0001|1d00]}{color[0400]}鮑伯{color[ffff]}{[0001|ffff]}，\n而我是{[0001|1d00]}{color[0400]}愛麗絲{color[ffff]}{[0001|ffff]}……
103	要記得喔。
104	{[0201]}……\n剛剛你把做到一半的遊戲完成了，\n讓他能夠正常運作……
105	但你其實不知道\n遊戲是怎樣運作的吧？
106	嗯，畢竟是第一次製作遊戲，\n不清楚原理也是理所當然的。
107	不過……\n如果你想要自己製作遊戲，\n就得好好{[0001|1d00]}{color[0400]}理解程式的原理{color[ffff]}{[0001|ffff]}。
108	為此……\n我準備了{[0001|1d00]}{color[0400]}小測驗{color[ffff]}{[0001|ffff]}……
109	在你去上第1課前，\n先來{[0001|1d00]}{color[0400]}小測驗{color[ffff]}{[0001|ffff]}一趟。
110	我會在那裡等你。
Sequence_Intro_Puzzle_00.msbt
000	你來啦……\n{[0201]}。
001	請容我重新介紹一下……\n我叫{[0001|1d00]}{color[0400]}愛麗絲{color[ffff]}{[0001|ffff]}。
001-01	而這個地方叫做{color[0400]}{[0001|1d00]}小測驗{[0001|ffff]}{color[ffff]}。
002	為了確認你是否真的{color[0400]}{[0001|1d00]}了解{[0001|ffff]}{color[ffff]}程式，\n我想請你解開這裡的{color[0400]}{[0001|1d00]}謎題{[0001|ffff]}{color[ffff]}。
003	……話雖如此，\n突然要你解謎，\n你應該也解不出來吧……
Sequence_Intro_Puzzle_01.msbt
000	我為你準備了{[0001|1d00]}{color[0400]}小節點指南{color[ffff]}{[0001|ffff]}。
000-01	在{[0001|1d00]}{color[0400]}小節點指南{color[ffff]}{[0001|ffff]}裡會詳細解說\n各種使用了小節點的程式。
001	按下這個按鍵，\n打開{color[0400]}{[0001|1d00]}小節點指南一覽{[0001|ffff]}{color[ffff]}。
002	你就先利用這個小節點指南來\n了解一下{[0001|1d00]}{color[0400]}小節點車庫的基本{color[ffff]}{[0001|ffff]}吧。
Sequence_Intro_Puzzle_02.msbt
000000	你了解{[0001|1d00]}{color[0400]}小節點車庫的基本{color[ffff]}{[0001|ffff]}了嗎？
000	那麼，請按下鍵，\n關閉小節點指南一覽……
001	我要用{[0001|1d00]}{color[0400]}謎題{color[ffff]}{[0001|ffff]}來測試你……\n看看你是否真的了解\n{[0001|1d00]}{color[0400]}小節點車庫的基本{color[ffff]}{[0001|ffff]}囉。
003	試著從這裡挑戰{[0001|1d00]}{color[0400]}謎題{color[ffff]}{[0001|ffff]}吧。
Sequence_Intro_Puzzle_03.msbt
000	真厲害！你完全理解了\n小節點車庫的基本呢。
001	之後，我也會在\n兩堂課之間用{[0001|1d00]}{color[0400]}小測驗{color[ffff]}{[0001|ffff]}……
002	來測試你是否真的了解\n{[0001|1d00]}{color[0400]}小節點車庫{color[ffff]}{[0001|ffff]}和{[0001|1d00]}{color[0400]}小節點{color[ffff]}{[0001|ffff]}們。
003	{[0001|1d00]}{color[0400]}小節點指南{color[ffff]}{[0001|ffff]}的內容\n今後也會慢慢地增加……
004	如果你有想知道或不明白的地方，\n就來看看{[0001|1d00]}{color[0400]}小節點指南{color[ffff]}{[0001|ffff]}吧。
005	那麼……\n請放心地去上{[0001|1d00]}{color[0400]}第1課{color[ffff]}{[0001|ffff]}吧。
Sequence_LessonFinish_01.msbt
000	恭喜你！\n二人對戰！捉迷藏大戰……{[0001|1d00]}{color[0400]}開發完成{color[ffff]}{[0001|ffff]}～！！
001	{[0001|1d00]}{color[0400]}開發完成{color[ffff]}{[0001|ffff]}的意思……\n就是遊戲製作完成了！！！
002	那麼……在這值得紀念的一刻，\n把我們開發完成的第1款遊戲\n放進{[0001|1d00]}{color[0400]}遊戲一覽{color[ffff]}{[0001|ffff]}吧～！
Sequence_LessonFinish_02.msbt
000	恭喜你！\n滾滾球{[0001|1d00]}{color[0400]}開發完成{color[ffff]}{[0001|ffff]}了～！
000-01	沒想到第2款遊戲這麼快就開發完成了！\n看來我們的課上得很順利呢～！
001	那麼，把這個滾滾球\n放進遊戲一覽吧～
Sequence_LessonFinish_03.msbt
000	恭喜你！\nALIEN SHOOTING\n也順利{[0001|1d00]}{color[0400]}開發完成{color[ffff]}{[0001|ffff]}了～
001	你應該也開始慢慢熟悉\n程式設計的方法了吧？
002	總而言之！最重要的就是\n勇於嘗試製作出各種遊戲！
003	那麼，{[0201]}……\n我們把第3款遊戲\n放進遊戲一覽吧～
Sequence_LessonFinish_04.msbt
000	恭喜你！\nGO! GO! 運動競技\n{[0001|1d00]}{color[0400]}開發完成{color[ffff]}{[0001|ffff]}了～～！！
001	附帶導航的課堂也\n如期地上完一半囉！
002	{[0201]}，\n你的成長速度遠超我的預期，\n真是嚇到我了呢！
003	後半段的課程也照著\n這個步調繼續加油吧！
004	那麼……我們把\nGO! GO! 運動競技\n放進遊戲一覽吧。
Sequence_LessonFinish_05.msbt
000	解謎房間……\n順利{[0001|1d00]}{color[0400]}開發完成{color[ffff]}{[0001|ffff]}！
001	雖然這堂課很艱深，\n但你還是堅持到了最後！
002	{[0201]}，\n你的成長速度……\n實在快到令人難以置信！
003	那麼，我們把完成的遊戲\n放進遊戲一覽吧～！
Sequence_LessonFinish_06.msbt
000	恭～喜～你～～～！！\n刺激賽車{[0001|1d00]}{color[0400]}開發完成{color[ffff]}{[0001|ffff]}了！
001	居然能堅持到現在……\n你實在是太厲害了！
003	看來，{[0201]}\n果然有設計程式的天分呢！
004	那麼……\n我們把完成的遊戲\n放進遊戲一覽吧！
Sequence_LessonFinish_07.msbt
000	恭喜你，{[0201]}！\n你的遊戲開發完成了～～～～！！！！
000-01	恭喜你，{[0201]}！\n你的遊戲開發完成了～～～～！！！！
001	{[0201]}，\n你終於用自己的雙手設計出遊戲了呢。
002	{[0201]}，\n你真棒！
003	那麼，我們把這款真正算是由\n{[0201]}設計的遊戲……
004	放進遊戲一覽吧！
Sequence_LessonReFinish.msbt
000	那麼……\n把他放進遊戲一覽吧～！
Sequence_MyGameRe.msbt
Lesson01	確定要覆蓋上次製作的\n{[0001|1d00]}{color[0400]}二人對戰！捉迷藏大戰{color[ffff]}{[0001|ffff]}嗎？
Lesson02	確定要覆蓋上次製作的\n{[0001|1d00]}{color[0400]}滾滾球{color[ffff]}{[0001|ffff]}嗎？
Lesson03	確定要覆蓋上次製作的\n{[0001|1d00]}{color[0400]}ALIEN SHOOTING{color[ffff]}{[0001|ffff]}嗎？
Lesson04	確定要覆蓋上次製作的\n{[0001|1d00]}{color[0400]}GO! GO! 運動競技{color[ffff]}{[0001|ffff]}嗎？
Lesson05	確定要覆蓋上次製作的\n{[0001|1d00]}{color[0400]}解謎房間{color[ffff]}{[0001|ffff]}嗎？
Lesson06	確定要覆蓋上次製作的\n{[0001|1d00]}{color[0400]}刺激賽車{color[ffff]}{[0001|ffff]}嗎？
001	是
002	否
003	那麼，我要用新製作的遊戲\n來覆蓋掉原本的遊戲囉～！
004	明白了！\n我會保留之前做的遊戲！
005	這是你新製作的遊戲，\n一定要記得玩看看喔！
Sequence_MyGameRe_07.msbt
000	確定要覆蓋{[0201]}\n之前在第7課裡製作的遊戲嗎？
001	是
002	否
003	明白了！\n那麼我把他換成新的遊戲囉～！
004	替這款新遊戲取個名字吧。
005	請按下鍵，\n打開{color[0400]}{[0001|1d00]}選項{[0001|ffff]}{color[ffff]}！
006	然後選擇{color[0400]}{[0001|1d00]}決定遊戲標題{[0001|ffff]}{color[ffff]}，\n替遊戲取個名字吧！
007	確定要使用這個標題嗎？
008	是
009	否
010	那麼，按下鍵，\n關閉這個畫面吧。
011	那麼，請再選擇一次\n{color[0400]}{[0001|1d00]}決定遊戲標題{[0001|ffff]}{color[ffff]}為遊戲命名！
012	你的取名品味還是一級棒呢。
013	是啊～！\n很有{[0201]}的風格！
014	那麼，請讓身邊的所有人\n都玩玩看這款新遊戲吧～
015	我懂……\n果然還是會想保留\n之前做的遊戲對吧。
016	這種時候……\n請務必用選項中的複製\n為遊戲製作備份！
017	這樣的話，就能放心覆蓋遊戲了！
018	只要你再次來到\n第7課的第7步驟……
019	就能找到剛才製作的遊戲！
020	如果覺得可以覆蓋遊戲了，\n就到第7課的第7步驟來吧。
021	我等你喔～！
Sequence_MyGame_01.msbt
000	好了，這就是\n{[0201]}\n設計的遊戲！
001	這樣一來，\n我們就可以隨時遊玩\n{[0201]}的遊戲囉！
002	啊，你一定很好奇……\n這裡是哪裡對吧？
003	這裡是{[0001|1d00]}{color[0400]}自由設計程式{color[ffff]}{[0001|ffff]}的\n{[0001|1d00]}{color[0400]}遊戲一覽畫面{color[ffff]}{[0001|ffff]}！
004	簡單來說，就是{[0001|1d00]}{color[0400]}拿來放{color[ffff]}{[0001|ffff]}\n{[0201]}\n{[0001|1d00]}{color[0400]}設計的遊戲的地方{color[ffff]}{[0001|ffff]}。
005	而且～\n就跟{[0001|1d00]}{color[0400]}自由設計程式{color[ffff]}{[0001|ffff]}\n這個名稱一樣……
006	只要按下這個按鍵，\n就可以{[0001|1a00]}{color[0400]}從頭{color[ffff]}{[0001|ffff]}開始{[0001|1d00]}{color[0400]}設計{color[ffff]}{[0001|ffff]}遊戲。
007	不過，{[0201]}\n你才剛開始接觸程式設計不久……
008	就算設計得不順利，\n也不用放在心上喔。
009	來吧！\n我們首次製作的遊戲\n已經可以遊玩囉……
010	請務必和身邊的人\n一起玩看看這款\n具有紀念價值的遊戲！
011	等你玩過癮後，記得要來上\n{[0001|1d00]}{color[0400]}附帶導航的課堂{color[ffff]}{[0001|ffff]}的{[0001|1d00]}{color[0400]}第2課{color[ffff]}{[0001|ffff]}喔！
012	那麼……\n我們下堂課再見吧～
Sequence_MyGame_02.msbt
000	好了，{color[0400]}{[0001|1d00]}滾滾球{[0001|ffff]}{color[ffff]}\n已經放進遊戲一覽了。
001	這款遊戲活用了\nNintendo Switch的功能……
002	請一定要讓身邊的人玩看看，\n問問他們對遊戲的感想！
003	傾聽其他人的想法，\n對設計遊戲也很有幫助喔！
004	那麼……\n我會在第3課等你。
005	記得要來喔～
Sequence_MyGame_03.msbt
000	ALIEN SHOOTING\n可以讓你體驗挑戰高分的樂趣……
001	更重要的是……！\n{[0201]}畫的圖案會動起來！
002	請一定要讓身邊的人玩看看喔！
003	我相信他們\n一定都會喜歡的！
004	從下一堂課開始，\n課程也將正式進入下半段！
005	那麼，我們第4課見吧～
100	等等，\n{[0201]}。
101	{[0201]}，\n我有件事要告訴你。
102	你有沒有想過……\n要{[0001|1d00]}{color[0400]}改造{color[ffff]}{[0001|ffff]}自己在課堂上做的遊戲？
103	想要改造遊戲時，\n你可以按下{color[0400]}{[0001|1d00]}鍵{[0001|ffff]}{color[ffff]}，打開{color[0400]}{[0001|1d00]}選項{[0001|ffff]}{color[ffff]}……
104	選擇這個{color[0400]}{[0001|1d00]}複製{[0001|ffff]}{color[ffff]}，\n就可以{color[0400]}{[0001|1d00]}複製遊戲{[0001|ffff]}{color[ffff]}。
106	複製出來的遊戲\n可以自由地改造……\n試著挑戰看看吧。
107	那麼，之後就是你的自由時間囉。
Sequence_MyGame_04.msbt
000	{[0201]}\n設計的遊戲真是越來越多了呢～
001	不如把以前製作的遊戲拿出來玩吧～\n或許能體會到跟之前不同的樂趣喔！
002	這次我們製作的動作遊戲也\n別忘了讓身邊的人玩看看喔！
003	那麼，我會在第5課等你！
Sequence_MyGame_05.msbt
000	這個解謎房間就是要\n給其他人玩才有意義！
001	請務必讓身邊的人玩看看～
002	看到你製作的寶藏後，\n他們會有什麼反應呢……？\n真是令人期待！
003	那麼，我會在第6課等你！
004	附帶導航的課堂還剩下2課！\n我們一起努力到最後吧～！
Sequence_MyGame_06.msbt
000	別忘了讓身邊的人\n玩看看刺激賽車喔！
001	啊，秘技的事情\n可不要說出去喔～
002	好了！\n下次就是最後一課了！
003	在最後一課裡，\n我的導航也會陪著你一起設計遊戲～
004	那麼，我先到第7課去等你……
005	等你玩夠刺激賽車後再過來吧！
Sequence_MyGame_07.msbt
000	{[0201]}！\n這就是你製作的遊戲喔！
001	機會難得……\n{[0201]}，\n幫遊戲決定一個{color[0400]}{[0001|1d00]}標題{[0001|ffff]}{color[ffff]}吧～
002	好主意！
003	那麼……\n請按下{color[0400]}{[0001|1d00]}鍵{[0001|ffff]}{color[ffff]}，打開選項。
004	然後選擇{color[0400]}{[0001|1d00]}決定遊戲標題{[0001|ffff]}{color[ffff]}，\n替你的遊戲取個名字吧！
005	確定要使用這個標題嗎？
yes	是
no	否
006	那麼請按下鍵，\n關閉這個畫面吧！
006b	那麼，請再選擇一次\n{color[0400]}{[0001|1d00]}決定遊戲標題{[0001|ffff]}{color[ffff]}為遊戲命名！
007	嗯！這個標題很有\n{[0201]} 的風格呢。
008	真厲害！\n遊戲的內容一目了然，\n是個非常棒的標題呢！
009	好了……這個遊戲是\n{[0201]}\n靠自己的力量完成的。
010	請一定要讓身邊的人玩看看，\n問問他們對遊戲的感想！
011	傾聽其他人的想法，\n對設計遊戲也很有幫助喔。
012	我們會在\n附帶導航的課堂等你……
013	等你玩夠自己的遊戲後再過來吧。
014	那麼，等一下見！
Sequence_PuzzleFinish_01.msbt
000	嗯，看來你越來越\n了解小節點們了呢。
001	想要用小節點車庫設計遊戲……
002	最重要的就是\n了解小節點們。
004	小節點……他們是居住在\nNintendo Switch中的神奇生物。
006	而透過小節點車庫這個神奇的工具，\n我們就能夠接觸小節點來設計程式。
008	記得要利用{[0001|1d00]}{color[0400]}小節點指南{color[ffff]}{[0001|ffff]}和\n{[0001|1d00]}{color[0400]}謎題{color[ffff]}{[0001|ffff]}好好認識小節點們喔。
010	那麼，下次見。
Sequence_PuzzleFinish_02.msbt
000	非常好。\n看來你已經充分理解程式的原理了。
001	設計程式時最重要的\n是要停下腳步來思考，\n去理解發生了什麼事。
004	{[0201]}，\n你就利用小節點指南和謎題……\n繼續深入了解這些程式吧。
005	……那麼，\n下個小測驗再見。
Sequence_PuzzleFinish_03.msbt
000	{[0201]}，\n看來你對小節點車庫\n已有相當程度的了解。
001	那麼，要不要試著改造遊戲呢？
002	一開始你可能會改造失敗，\n導致程式錯誤而無法運作……
003	但是沒關係。\n失敗為成功之母，\n而錯誤正是邁向正確的第一步。
004	多累積一些失敗的經驗，\n你就會慢慢熟悉這些程式了。
005	如果有不明白的地方，\n也可以看看{color[0400]}{[0001|1d00]}小節點指南{[0001|ffff]}{color[ffff]}喔。
006	那麼……\n下個小測驗再見。
Sequence_PuzzleFinish_04.msbt
000	太厲害了，\n{[0201]}。
001	你越來越了解\n小節點車庫了。
002	照這個速度下去，\n搞不好你真的能\n靠自己設計程式……
005	{[0201]}，\n你要繼續學習程式設計的知識喔。
006	那麼……\n我在下個小測驗等你。
Sequence_PuzzleFinish_05.msbt
000	……做得好。
001	你居然解開了所有的謎題。
002	{[0201]}，\n你的成長速度……\n實在令人難以置信！
004	嗯……
005	那麼……\n下個小測驗再見。
Sequence_PuzzleFinish_06.msbt
000	恭喜過關。
001	{[0201]}，\n你已經充分理解了小節點車庫。
002	我覺得你應該可以\n自己設計遊戲了喔。
003	嗯……
004	……對了，\n{[0201]}。
005	下次就是鮑伯的最後一課吧？
006	……讓我也旁聽一下吧。
007	那麼，最後一課再見。
Sequence_PuzzleFinish_07.msbt
000	……沒想到你真的\n把謎題全部解開了。
001	{[0201]}，\n你的程式設計功力\n真是深不可測啊。
004	你已經很有程式設計師\n的風範了呢。
005	你的身上散發著耀目光輝喔！{[0201]}！
002	{[0201]}，\n今後也要設計出更多屬於你的新遊戲喔！
003	感謝你的遊玩……\n再會囉！
Sequence_PuzzleStart_01.msbt
000	……你好。
001	看來第1課已經結束了呢。
002	……咦？\n你該不會是……\n把小測驗給忘了吧？
003	在小測驗裡，\n我會用謎題……
004	來確認你對小節點們的理解程度……\n可別忘了喔。
004-01	謎題總共有5道。
005	先從這道謎題開始挑戰吧。
Sequence_PuzzleStart_02.msbt
000	你好，\n{[0201]}。
001	那麼，這次我也會用謎題……
002	來測試你對小節點車庫\n和小節點們的理解程度。
002-01	如果碰上了無法解開的謎題，\n可以到{color[0400]}{[0001|1d00]}小節點指南{[0001|ffff]}{color[ffff]}去複習喔。
003	那麼……\n你就從喜歡的謎題開始挑戰吧。
Sequence_PuzzleStart_03.msbt
000	{[0201]}，\n等你很久囉。
001	你挑戰過改造遊戲了嗎？
002	對設計程式的人來說，\n自行思考並勇於嘗試是必經之路。
003	絞盡腦汁、不斷嘗試……\n努力解開這次的謎題吧。
Sequence_PuzzleStart_04.msbt
000	歡迎啊，\n{[0201]}。
001	轉眼間小測驗\n也進入後半段了。
002	接下來也要全力以赴，\n繼續挑戰各種謎題喔。
Sequence_PuzzleStart_05.msbt
000	辛苦你了，\n{[0201]}。
001	{[0201]}，\n這次製作的遊戲\n真是挺複雜的呢。
001-01	為了配合他的難度……\n我準備了比較難的謎題。
002	如果能解開這些謎題，\n就證明你已經具備了\n相當程度的設計能力。
003	那麼，好好加油吧。
Sequence_PuzzleStart_06.msbt
000	……你好，\n{[0201]}。
001	一路走來，\n我讓{[0201]}挑戰了各種小測驗。\n然而，天下沒有不散的宴席……
002	……在你完成這次的小測驗後，\n這個環節將正式結束。
003	你可要用心挑戰……\n這最後的小測驗喔。
Sequence_PuzzleStart_07.msbt
000	你好。
001	……你說課堂明明都結束了，\n為什麼還有小測驗？
002	這個小測驗是為了\n完成所有課程的你特別準備的。
003	就算是現在的你，\n也無法輕易解開這些謎題……
004	請一定要挑戰看看喔。
007	那麼，好好加油吧。
Sequence_Share_Download.msbt
00	你果然來了，{[0201]}。
01	在這裡，你可以{color[0400]}{[0001|1d00]}領取{[0001|ffff]}{color[ffff]}好友們\n設計好的遊戲。
02	選擇這個選項，就可以領取\n{color[0400]}{[0001|1d00]}附近的好友{[0001|ffff]}{color[ffff]}所分享的遊戲……
03	如果你加入了Nintendo Switch Online，\n還能在這裡領取好友們分享至{color[0400]}{[0001|1d00]}網路{[0001|ffff]}{color[ffff]}上的遊戲。
04	要從網路上領取遊戲的話，\n就請輸入好友們告訴你的{color[0400]}{[0001|1d00]}遊戲ID{[0001|ffff]}{color[ffff]}\n或{color[0400]}{[0001|1d00]}程式設計師ID{[0001|ffff]}{color[ffff]}吧。
05	萬一發現了不適當的遊戲內容，\n麻煩請用{color[0400]}{[0001|1d00]}檢舉鍵{[0001|ffff]}{color[ffff]}進行檢舉。
06	那麼再見了。
Sequence_Share_Manage.msbt
Sequence_Share_Report.msbt
Sequence_Share_Upload.msbt
00	你來了啊，{[0201]}。
01	在這裡，你可以向好友們{color[0400]}{[0001|1d00]}分享{[0001|ffff]}{color[ffff]}\n{color[0400]}{[0001|1d00]}自己設計的遊戲{[0001|ffff]}{color[ffff]}。
02	選擇這個選項，\n就可以向{color[0400]}{[0001|1d00]}附近的好友{[0001|ffff]}{color[ffff]}\n分享自己設計的遊戲……
03	如果你加入了Nintendo Switch Online，\n還能在這裡把自己的遊戲分享至{color[0400]}{[0001|1d00]}網路{[0001|ffff]}{color[ffff]}上。
04	只要把分享時得到的{color[0400]}{[0001|1d00]}遊戲ID{[0001|ffff]}{color[ffff]}告訴給好友，\n他們就能藉由那個{color[0400]}{[0001|1d00]}遊戲ID{[0001|ffff]}{color[ffff]}\n{color[0400]}{[0001|1d00]}領取{[0001|ffff]}{color[ffff]}你的遊戲了喔。
05	不過，在分享遊戲時，\n有幾點想請你注意一下。
0501	對了，接下來的部分\n請跟{color[0400]}{[0001|1a00]}監護人、大人一起{[0001|ffff]}{color[ffff]}閱讀喔。
0502	因為是非常重要的內容，\n請務必要好好了解。
06	第一點。
07	當你把遊戲分享至網路上，\n{color[0400]}{[0001|1d00]}遊戲標題和你的名字都會{[0001|ffff]}{color[ffff]}\n{color[0400]}{[0001|1d00]}在全世界{[0001|ffff]}{color[ffff]}公開。
08	第二點。
09	請不要分享含有\n{color[0400]}{[0001|1d00]}不適當內容{[0001|ffff]}{color[ffff]}的遊戲。
10	請不要分享\n含有違法的內容、個人資訊、\n侵害他人權利內容的遊戲……
11	或是含有過度閃爍的畫面，\n以及其他會令人感到不快等等不適當的遊戲喔。
12	第三點。
13	包括我剛才舉例的那些含有不適當內容的遊戲，\n所有違反《Nintendo Account使用條款》\n的遊戲都會被{[0001|1d00]}{color[0400]}刪除{color[ffff]}{[0001|ffff]}。
14	最後是第四點。
15	長期{color[0400]}{[0001|1d00]}沒有人領取{[0001|ffff]}{color[ffff]}的遊戲\n會被自動{[0001|1d00]}{color[0400]}刪除{color[ffff]}{[0001|ffff]}。
16	我剛才說的注意事項，\n你都清楚了嗎？
17	是
18	否
19	那麼，\n我再說明一次\n在分享遊戲時的注意事項。
20	很好，看來你已經很清楚了呢。
21	另外，你也可以在這裡\n確認或刪除已分享的遊戲喔。
22	那麼再見了。
StepName.msbt
Chase_00	讓人移動起來吧！
Chase_01	製作平面和牆壁吧！
Chase_02	製作場地吧！
Chase_03	製作鬼吧！
Chase_04	讓球體滾動吧！
Chase_05	製作自動重來的構造吧！
Chase_06	最後一步
BallRoll_00	製作俯瞰視角的遊戲吧！
BallRoll_01	傾斜讓球滾動吧！
BallRoll_02	製作場地吧！
BallRoll_03	來數蘋果吧！
BallRoll_04	製作過關效果吧！
BallRoll_05	讓他玩起來更順手吧！
BallRoll_06	製作傳送點吧！
BallRoll_07	最後一步
Shooting_00	用UFO出擊吧！
Shooting_01	讓UFO發射炮彈吧！
Shooting_02	製作場地吧！
Shooting_03	讓遊戲畫面\n捲動起來吧！
Shooting_04	停止捲動吧！
Shooting_05	製作會旋轉的障礙物吧！
Shooting_06	製作會旋轉的敵人吧！
Shooting_07	製作終點吧！
Shooting_08	製作得分顯示和\n「完美」的程式吧！
Shooting_09	遊戲的最後一步！
2DAction_00	讓遊戲畫面\n跟著人移動吧！
2DAction_01	製作敵人吧！
2DAction_02	讓他掉落後會損壞吧！
2DAction_03	製作蹺蹺板的機關吧！
2DAction_04	製作可以推動的箱子吧！
2DAction_05	製作會移動的立足處吧！
2DAction_06	讓人拿起道具後\n就變得可以出拳！
2DAction_07	製作BOSS吧！
2DAction_08	製作終點吧！
2DAction_09	最後一步
SecretRoom_00	窺探解謎舞台的照相機
SecretRoom_01	藏有寶藏的房間
SecretRoom_02	隱藏門與可疑的物件
SecretRoom_03	破壞神秘木箱的方法
SecretRoom_04	被隱藏的暗號
SecretRoom_05	牆壁的裝置與暗號的秘密
SecretRoom_06	會動的隱藏門
SecretRoom_07	嘎吱作響的齒輪
SecretRoom_08	被隱藏的寶藏
CarRace_00	讓汽車跑起來吧！
CarRace_01	製作終點吧！
CarRace_02	判定勝負吧！
CarRace_03	製作賽道吧！
CarRace_04	來自動駕駛吧！
CarRace_05	3! 2! 1! GO!
CarRace_06	好狡猾哦？隱藏的傳送點！
CarRace_07	最後一步
3DAction_00	讓人移動起來吧！
3DAction_01	讓他掉落後會損壞吧！
3DAction_02	最初的場地特殊機關！
3DAction_03	開關的場地特殊機關！
3DAction_04	製作敵人吧！
3DAction_05	製作終點吧！
3DAction_06	初次當程式設計師的第一步
