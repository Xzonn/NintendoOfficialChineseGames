Ending.msbt
000	All righty! Let's have another quick\nintroduction of our Nodon friends!
001-00	Heyo!
001-01	Wahoo!
002-00	Well now, I like the\nlook of this one!
003-00	I'm really curious to see\nthe games you make!\nLike, you have NO idea...
004-00	Yes!\nI think you'll make something amazing!\nAs long as you stick to a schedule...
005-00	Stepping out on your own,\nNo need to loiter,\nThe world's your oyster!
006-00	Yeah!\nYour name's going to ring out!
006-01	Big shout out for the\nprogrammer! Yeah!
007-00	Ah, {[0201]}...\nYou have your whole\nlife ahead of you still...
008-00	Nice to be working with you!
009-00	Glad you're here to keep us organized.
010-00	From now on, just think of the\nprogram screen as your canvas...\nand your games as your art.
010-01	Don't let all your success\ngo to your head!
011-01	Time for you to follow your own path,\n{[0201]}.\n
012-00	Meep! D-don't startle\nme like that!
013-00	OK, friend. Nothing goes\nwith programming like a good\nset of squats! Let's get to it!
014-00	Whoa... {[c903]}{[0201]}!\nYou got yourself a friend\nfor LIFE! LIIIIFE!
015-00	I knew you had it, {[0201]}!\nStar quality!
016-00	Good job. You're a pro now!
017-00	You have succeeded...\nIt was written in the stars...
Inter00	Next, let's hear from all Nodon that\nyou didn't get to meet in the lessons.
018-00	Yeeeeehaaaaawwwww!
019-00	Hey! {[c903]}{[0201]}!\nYou can count on me...FOREVER!
020-00	Pleased to make your acquaintance!
021-00	Every new beginning must have an end...
022-00	We Bull's-Eye Nodon have still got\na few tricks, you know!
023-00	Ohoho!\nI'll show you just what we\nsensors can do!
024-00	{[c903]}{[0201]}...\nI hope we'll be entangled\nfor years to come.
025-00	All together now...
025-01	We're Team Camera!
026-00	Don't be giving me headaches, now!
End00	OK! We're about done here.
End01	I hope you'll make great use of\nthem in your future programs.
GameDefaultName.msbt
01	Tag Showdown
02	On a Roll
03	Alien Blaster
04	Risky Run
05	Mystery Room
06	Thrill Racer
07	{[c903]}{[0201]}'s Game
GuidebookName.msbt
Basic	Game Builder Garage: The Basics
StickAndHuman	Moving Characters with\nthe Control Stick
Compare	Judging Conditions with\nthe Comparison Nodon
GameCamera	The Game-Screen Nodon's Job
Attribute	Basics of Object Properties
BreakAndRetry	Restarting the Game When\nan Object Breaks
Shot	Opening Fire with the\nLaunch-Object Nodon
ViewChange	Switching Views and Getting\nto Know the Game Dimensions
AxisAngle	Tottering-Tilt Nodon
MoveRigid	On the Move with the\nMoving-Object Nodon
Calculation	Calculator Nodon's\nAdvanced(?) Features
Count	Counting Breaking Objects
Warp	Is It Magic? Teleporting Objects
Ufo	Do You Believe in UFO Nodon?
Scroll	Scrolling the Game Screen
AdvancedBreakProperties	Destructive/Destructible Settings
Not	The Contrarian NOT Nodon
And	AND Nodon, Reporting for Duty!
MoveFancyRigid	Learning the Latest Trends\nwith Fancy-Object Nodon!
ConnectGameCamera	Making the Game Screen\nFollow the Action
FallAndBreak	Making Falls Dangerous
HingeRotate	Learning to Dance with\nthe Hinge-Connector Nodon
HingeSlide	Gliding Around with\nSlide-Connector Nodon
OnOffFlag	Flag Nodon: Is It On or Off?
PunchAndBreak	Making Punches Destructive
FreeSlide	Exploring Opportunities with\nthe Free-Slide-Connector Nodon
BreakCounter	Breaking Something in\nThree Punches
ThirdPersonCamera	Camera Nodon: A True Artist
CarNode	Taking the Car Nodon\nOut for a Spin
DifferentCollision	Distinguishing between\nObjects of the Same Type
JudgeWinOrLose	Finding a Winner
AutoPilot	Self-Driving Car
PrintDebug	Debugging with a\nNumber-Object Nodon
CountDown	Making a Countdown
Connection	Connecting Objects
RotateRigid	Strutting Your Stuff with the\nRotating-Object Nodon
Guidebook_AdvancedBreakProperties.msbt
000	Hello,\n{[0201]}!
001	Here we have a person,\na sphere, and a box.
001-01	And all of them have both {color[0400]}{[0001|1a00]}Destructive\n{[0001|ffff]}{color[ffff]}and {color[0400]}{[0001|1a00]}Destructible enabled{[0001|ffff]}{color[ffff]}.
001-02	You can move the person with\n{color[0400]}{[0001|1a00]}{[0001|ffff]}{color[ffff]} and {color[0400]}{[0001|1a00]}{[0001|ffff]}{color[ffff]}. See what happens if\nyou bump into the sphere or box.
001-03	OK, so what we don't want is for\neither thing to break on contact.
002	We should change it so the\n{[0001|1a00]}{color[0400]}person can set the sphere rolling{color[ffff]}{[0001|ffff]}.
002-01	We also want it so the {[0001|1a00]}{color[0400]}sphere{color[ffff]}{[0001|ffff]} the person\nsets in motion will {[0001|1a00]}{color[0400]}break the box{color[ffff]}{[0001|ffff]}.
010	Let's go to the program screen\nand see if we can figure it out.
011	Oh, hey, {[0201]}!
011-01	Want to get the ball rolling, eh?\nBoth literally and figuratively?
011-02	You can do that in {[0001|1a00]}{color[0400]}Properties{color[ffff]}{[0001|ffff]}.
011-03	...
011-04	You already knew\nthat, didn't you?
011-05	That's right, you'd better not\nunderestimate our\n{[0201]}.
011-06	OK, select the\nsphere Object Nodon.
011-07	Open the settings, and we'll\nchange some {[0001|1a00]}Properties{[0001|ffff]}.
011-08	First we should make\nthe sphere unbreakable.
011-09	So {color[0400]}{[0001|1a00]}disable Destructible{[0001|ffff]}{color[ffff]}.
011-10	And now we should make things a\nlittle easier on our player character.
011-11	So {color[0400]}{[0001|1a00]}disable Destructive{[0001|ffff]}{color[ffff]}.
011-12	Now the person should be\nable to set the sphere rolling.
011-13	Close up the settings now.
057	Let's see how it's all working\non the game screen.
058	Try to have the person nudge\nthe sphere and get it rolling.
059	Yay! A perfect roll.
060	But...it hasn't broken\nthe box, has it?
060-00	I really want the box to shatter into\npieces when the sphere hits it...
060-01	But if we {color[0400]}{[0001|1a00]}enable Destructive{[0001|ffff]}{color[ffff]} for the sphere,\nthen it'll just {color[0400]}{[0001|1a00]}break the person{[0001|ffff]}{color[ffff]} again.
060-02	We can always go into the person's\nsettings and make them indestructible...
061	But what if I could show you a way\nto do it {color[0400]}{[0001|1a00]}without messing around\nwith the person's properties{[0001|ffff]}{color[ffff]}?
062	Let's go back to the program screen.
078	So, you want to make the sphere {color[0400]}{[0001|1a00]}break the\nbox {[0001|ffff]}{color[ffff]}without breaking the person, eh?
078-01	There's a clever trick\nto that, you know.
078-02	...
078-03	Did you do it?
078-04	Look, if you're going to explain, then\nexplain. Stop dropping cryptic hints.
078-05	Right, {[0201]},\nselect the sphere Object Nodon.
078-06	Open the settings screen.
078-07	And look at that little\n{color[0400]}{[0001|1a00]}icon{[0001|ffff]}{color[ffff]} next to {color[0400]}{[0001|1a00]}Destructive{[0001|ffff]}{color[ffff]}.
088	That icon opens up the {color[0400]}{[0001|1a00]}advanced\nproperties for the Destructive setting{[0001|ffff]}{color[ffff]}.
089	Can you open it up?
090	Now we're talking. You can use these\nsettings to decide {color[0400]}{[0001|1a00]}what gets broken{[0001|ffff]}{color[ffff]}.
091	So we can make it so that it only\ndestroys boxes. {color[0400]}{[0001|1a00]}Enable Box{[0001|ffff]}{color[ffff]}!
091-01	Now we should have a sphere\nthat can {color[0400]}{[0001|1a00]}only destroy boxes{[0001|ffff]}{color[ffff]}.
092	Close the advanced settings.
093	And close the settings.
095	Let's check it on\nthe game screen.
096	OK, boop the person into the sphere...\nAnd let's see the sphere smash into the box.
097	Right, the {color[0400]}{[0001|1a00]}person doesn't break{[0001|ffff]}{color[ffff]} even when\nthe sphere hits them, so that's good.
098	And when the sphere hits\nthe box, {color[0400]}{[0001|1a00]}the box breaks{[0001|ffff]}{color[ffff]}.
099	So the only thing that's\nbroken is the {[0001|1a00]}{color[0400]}box{color[ffff]}{[0001|ffff]}. Cool!
103	One more thing...
104	Now I want to make it so that when it hits\nthe box, the {color[0400]}{[0001|1a00]}sphere{[0001|ffff]}{color[ffff]} is also {color[0400]}{[0001|1a00]}destroyed{[0001|ffff]}{color[ffff]}.
104-01	If we just {color[0400]}{[0001|1a00]}enable Destructible{[0001|ffff]}{color[ffff]}, then\nit'll break when the person hits it too.
104-02	What we want to do is arrange the settings\nso that it only breaks when it {color[0400]}{[0001|1a00]}hits the box{[0001|ffff]}{color[ffff]}.
105	Let's go to the program screen.
109	Ah, right, so you want to make it\nso the sphere only breaks when\nit hits the box, eh?
110-01	...
110-02	You probably know how to do\nmost of it without me explaining.
110-03	You probably do, {[0201]},\nbut let's go through it anyway.
111	Select the sphere Object Nodon.
112	Open the settings.
112-01	You've seen that little icon next\nto Destructible, haven't you?
113	That's where you find the {color[0400]}{[0001|1a00]}advanced\nproperties for the Destructible setting{[0001|ffff]}{color[ffff]}.
114	Open up the Destructible\nproperty's advanced settings.
114-01	So, in the {color[0400]}{[0001|1a00]}Destructible advanced\nsettings {[0001|ffff]}{color[ffff]}you can decide {color[0400]}{[0001|1a00]}what\nshould cause the object to break{[0001|ffff]}{color[ffff]}.
115	We want to make it so that it only\nbreaks when it touches a box.
116	So {color[0400]}{[0001|1a00]}enable boxes{[0001|ffff]}{color[ffff]}!
117	Close the advanced settings.
118	And close the normal settings.
119	Let's check the game screen.
120	Now, bump the person into the sphere\nso the sphere bumps into the box.
121	The sphere and\nbox both broke!
122	But the person remains intact!
125	The person pushed the\nsphere, and then the sphere\nand box broke each other.
126	Let's get back to the\nprogram screen.
127	So I hope you've learned a few tips on\nhow to use {color[0400]}{[0001|1a00]}advanced property settings{[0001|ffff]}{color[ffff]}.
128	You can do a lot of complicated\nthings with destructiveness and\ndestructibility.
129	That was pretty cool, wasn't\nit? You'll be a pro in no time.
Guidebook_And.msbt
000	Hello there!
002	Could you push {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]} and {[0001|1a00]}{color[0400]}\nat the same time{color[ffff]}{[0001|ffff]} for me and\nsee what happens?
003	Suddenly, {[0001|1a00]}{color[0400]}fireworks{color[ffff]}{[0001|ffff]}!
004	But here's the thing:\nthere aren't any fireworks if you\npress {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]} or {[0001|1a00]}{color[0400]} {color[ffff]}{[0001|ffff]}separately.
005	They only go off when you're\npressing {[0001|1a00]}{color[0400]}both buttons at the\nsame time{color[ffff]}{[0001|ffff]}.
006	Allow me to explain.
007	Let's pop over to the\nprogram screen.
008	{[c903]}{[0201]}, great to see ya!\nHope you're enjoying life.
010	So, ya wanna know the trick to\nmaking {[0001|1a00]}{color[0400]}fireworks come out\n{color[ffff]}{[0001|ffff]}when ya{[0001|1a00]}{color[0400]} push  and  together{color[ffff]}?{[0001|ffff]}
011	I can show you the ropes.\nIt's no problem!
012	I'll pound the knowledge into yer\nbrain until the cows come home!
013	I, uh...can't believe this.\nThe cows just came home!
014	MOOOOOO!
015	Well, I did my part, I guess.\nThink I'll leave the {[0001|1a00]}{color[0400]}two-button press{color[ffff]}{[0001|ffff]}\ntutorial to {[0001|1a00]}{color[0400]}Handy ANDY{color[ffff]}{[0001|ffff]} here.
016	Hyup! Left, right, left, right!\nLeft and Right Buttons,\npresent and correct!
017	Hello? {[c903]}{[0201]}, right?\nMajor General {[0001|1a00]}{color[0400]}AND{color[ffff]}{[0001|ffff]}! Pleasure!
018	I'm a very scrupulous Nodon.\nI output my signal only when {[0001|1a00]}{color[0400]}both\nof my conditions are correct{color[ffff]}{[0001|ffff]}.
019	{[0001|1a00]}{color[0400]}AND{color[ffff]}{[0001|ffff]} is my name, indeed,\nbut perhaps the operative word\nhere is {[0001|1a00]}{color[0400]}both{color[ffff]}{[0001|ffff]}.
020	I have {[0001|1a00]}{color[0400]}two input ports{color[ffff]}{[0001|ffff]} here,\nyou see...
021	There's one {[0001|1a00]}{color[0400]}at the top{color[ffff]}{[0001|ffff]} and\nanother {[0001|1a00]}{color[0400]}at the bottom{color[ffff]}{[0001|ffff]}.
022	But I'll only {[0001|1a00]}{color[0400]}output a signal{color[ffff]}{[0001|ffff]} when I\nreceive input from both of my ports.
025	Yo, I'll send you a signal,\nbut you've {[0001|1a00]}{color[0400]}gotta push {color[ffff]}{[0001|ffff]}!\nPush it!
026	Oho! What's this? {[0001|1a00]}{color[0400]}If  is pressed{color[ffff]}{[0001|ffff]},\nyou say? Then that would be my\nfirst condition!
028	Yo! I'm a Button Nodon too!\nExcept I'm all about the {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]}.
029	All right! Very good!\nI suppose my second condition\nwill be {[0001|1a00]}{color[0400]}if  is pressed{color[ffff]}{[0001|ffff]}, then.
030	Input 1, present and correct!\nInput 2, present and correct!\nMarvelous!
031	Sending {[0001|1a00]}{color[0400]}signal {color[ffff]}{[0001|ffff]}to your immediate\nlocation, {[0001|1a00]}{color[0400]}Effect Nodon{color[ffff]}{[0001|ffff]}!
032	Right! This is where I shoot\nmy {[0001|1a00]}{color[0400]}fireworks{color[ffff]}{[0001|ffff]} up into the sky\nfer an awesome light show!
033	And that's how we do it!\nPress down {[0001|1a00]}{color[0400]}both  and  at the\nsame time, and ya get fireworks{color[ffff]}{[0001|ffff]}.
034	You can also make use of the other\nbuttons. Why don't you give it a\ntry, {[0201]}?
035	I know just the {color[0400]}{[0001|1a00]}Button Nodon{[0001|ffff]}\n{color[ffff]}for the job. Gimmie a sec...
036	Yo! Looks like you wanna know\nwhether {[0001|1a00]}{color[0400]} has been pressed{color[ffff]}{[0001|ffff]}!{[0001|1a00]}{color[0400]}\n{color[ffff]}{[0001|ffff]}Am I right? I'm right, right?
037	Why don't we change the\n{[0001|1a00]}{color[0400]}AND Nodon{color[ffff]}{[0001|ffff]}'s input?
038	Remove the connection to {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]}.
039	Instead, we'll connect this\nto the Button Nodon for {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]}.
040	Hey! I've got a new second condition!\n{[0001|1a00]}{color[0400]}If  is pressed{color[ffff]}{[0001|ffff]}, eh? Roger that!
041	I'll output my signal when both\n{color[0400]}{[0001|1a00]} and  {[0001|ffff]}{color[ffff]}are being pressed.
043	Let's take a look at\nthe game screen.
044	Try pushing {[0001|1a00]}{color[0400]} {color[ffff]}{[0001|ffff]}and {[0001|1a00]}{color[0400]}\nat the same time{color[ffff]}{[0001|ffff]}.
045	There go the fireworks!
047	So you see that the {[0001|1a00]}{color[0400]}AND Nodon {color[ffff]}{[0001|ffff]}will\noutput a signal when {[0001|1a00]}{color[0400]}both buttons{color[ffff]}{[0001|ffff]},\n and , are being pressed.
048	Let's go back to the program screen.
049	Back so soon?\nI should call ya Speedy!
051	By the way, here's a trick for ya:\nif you use two {[0001|1a00]}{color[0400]}AND Nodon{color[ffff]}{[0001|ffff]}...
052	you can actually {[0001|1a00]}{color[0400]}make three conditions\n{color[ffff]}{[0001|ffff]}before sending out a {[0001|1a00]}{color[0400]}signal{color[ffff]}{[0001|ffff]}.
056	How 'boutcha call up another\n{[0001|1a00]}{color[0400]}AND Nodon{color[ffff]}{[0001|ffff]} now?
057	Great! So, what conditions\nam I being assigned to today?
057-01	First, remove the connection between\nthe {[0001|1a00]}{color[0400]}AND Nodon{color[ffff]}{[0001|ffff]} and the {[0001|1a00]}{color[0400]}Effect Nodon{color[ffff]}{[0001|ffff]}.
058	Now link the {[0001|1a00]}{color[0400]}AND Nodon{color[ffff]}{[0001|ffff]} with\nthe new {[0001|1a00]}{color[0400]}AND Nodon{color[ffff]}{[0001|ffff]}'s input 1 port.
059	After that, we need to link the\nButton Nodon for {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]} as well.
060	So my conditions are {[0001|1a00]}{color[0400]}if the AND Nodon\nis sending me a signal{color[ffff]}{[0001|ffff]} and {[0001|1a00]}{color[0400]}if  is being\npressed. {color[ffff]}{[0001|ffff]}Excellent!
061	Proceeding with the output.\nAtten-SHUN!
062	I'll send a signal when {[0001|1a00]}{color[0400]}both\n and  are being pressed{color[ffff]}{[0001|ffff]}.\nNothing out of the ordinary!
086	Lastly, link up the new {[0001|1a00]}{color[0400]}AND Nodon{color[ffff]}{[0001|ffff]}\nand the {[0001|1a00]}{color[0400]}Effect Nodon{color[ffff]}{[0001|ffff]}.
064	Now what would happen if,\non top of pressing down {[0001|1a00]}{color[0400]} {color[ffff]}{[0001|ffff]}and {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]},\nyou were to press {[0001|1a00]}{color[0400]} {color[ffff]}{[0001|ffff]}as well?
065	Well, if you were to {[0001|1a00]}{color[0400]}press all three\nbuttons together{color[ffff]}{[0001|ffff]} ({color[0400]}{[0001|1a00]} {[0001|ffff]}{color[ffff]}+ {color[0400]}{[0001|1a00]} {[0001|ffff]}{color[ffff]}+ {color[0400]}{[0001|1a00]}{[0001|ffff]}{color[ffff]})\nit would set the fireworks off.
071	Back to the game screen.
072	Try pressing {color[0400]}{[0001|1a00]}{[0001|ffff]}{color[ffff]}, {color[0400]}{[0001|1a00]}{[0001|ffff]}{color[ffff]}, and {color[0400]}{[0001|1a00]}\n{[0001|ffff]}{color[ffff]}all at once.
073	There they go!
074	Note that the {[0001|1a00]}{color[0400]}fireworks won't go off\n{color[ffff]}{[0001|ffff]}when you only {[0001|1a00]}{color[0400]}press two of the buttons{color[ffff]}{[0001|ffff]}.
076	So by linking {[0001|1a00]}{color[0400]}AND Nodon{color[ffff]}{[0001|ffff]} together,\nyou can increase the number of conditions\nthey need before they'll send out a {[0001|1a00]}{color[0400]}signal{color[ffff]}{[0001|ffff]}.
077	We can go back to the\nprogram screen now.
078	Input 1, present and correct!
079	Input 2, present and correct!
080	Fireworks are go!
081	Make good use of the {[0001|1a00]}{color[0400]}AND Nodon{color[ffff]}{[0001|ffff]}\nin yer programming, and I can\nguarantee it'll be top notch!
082	See ya when I see ya!
Guidebook_Attribute.msbt
000	Hello there!
001	Right now, all that's on the game\nscreen is this {[0001|1a00]}{color[0400]}blue, box-shaped object{color[ffff]}{[0001|ffff]}.
002	Did you see how it fell to the {[0001|1a00]}{color[0400]}ground{color[ffff]}{[0001|ffff]}?
003	Use the {[0001|1a00]}{color[0400]}Retry{color[ffff]}{[0001|ffff]} button if\nyou want to watch again.
004	This time, we're going to try\nchanging the settings for this\n{[0001|1a00]}{color[0400]}object{color[ffff]}{[0001|ffff]} so that it {[0001|1a00]}{color[0400]}doesn't fall{color[ffff]}{[0001|ffff]}.
005	Without further ado, let's head\non over to the {[0001|1a00]}{color[0400]}program screen{color[ffff]}{[0001|ffff]}!
006	Heyo!
007	All right there, {[0201]}?
008	What can I do for ya?
009	Ah, you're lookin' for a way to\nmake it so the {[0001|1a00]}{color[0400]}object doesn't fall{color[ffff]}{[0001|ffff]}.
010	That's somethin' you\ncan do in its {[0001|1a00]}{color[0400]}properties{color[ffff]}{[0001|ffff]}.
011	...Well?
012	Have you done it?
013	Object Nodon, that was about\nas clear as mud! You didn't\nactually explain what to do.
014	Er, sorry. Talkin's not my strong suit.
015	Go on and open my settings,\nthen {[0001|1a00]}{color[0400]}disable{color[ffff]}{[0001|ffff]} {[0001|1a00]}{color[0400]}Movable {color[ffff]}{[0001|ffff]}under\n{[0001|1a00]}{color[0400]}Properties{color[ffff]}{[0001|ffff]}. That should do it.
016	Much better!
017	OK, let's try changing our friend\nObject Nodon's {color[0400]}{[0001|1a00]}properties{[0001|ffff]}{color[ffff]}, then!\nStart by selecting the Nodon.
018	Next, open the {[0001|1a00]}{color[0400]}settings{color[ffff]}{[0001|ffff]}.
019	The {[0001|1a00]}{color[0400]}properties{color[ffff]}{[0001|ffff]} are right here!
020	In this section, you can {[0001|1a00]}{color[0400]}change\nthe object's properties{color[ffff]}{[0001|ffff]}, in other\nwords, its qualities and behavior.
021	Now, let's try {[0001|1a00]}{color[0400]}disabling{color[ffff]}{[0001|ffff]} the\n{[0001|1a00]}{color[0400]}Movable{color[ffff]}{[0001|ffff]} property, just like\nthe Object Nodon said.
022	Once that's done, go ahead\nand close the settings screen.
023	Let's check it out in the game!
024	See? The object\n{[0001|1a00]}{color[0400]}no longer falls down{color[ffff]}{[0001|ffff]}!
025	That's because we just {[0001|1a00]}{color[0400]}disabled\nMovable{color[ffff]}{[0001|ffff]} in the {[0001|1a00]}{color[0400]}properties{color[ffff]}{[0001|ffff]} on the\nObject Nodon's settings screen.
026	{[0001|1a00]}{color[0400]}Disabling{color[ffff]}{[0001|ffff]} {[0001|1a00]}{color[0400]}Movable{color[ffff]}{[0001|ffff]} means the\nobject no longer moves...or,\nin this case, {[0001|1a00]}{color[0400]}doesn't fall down{color[ffff]}{[0001|ffff]}.
027	Let's go back to the program\nscreen, {[0001|1a00]}{color[0400]}enable{color[ffff]}{[0001|ffff]} {[0001|1a00]}{color[0400]}Movable{color[ffff]}{[0001|ffff]} again,\nand check out what changes.
028	Select the Nodon, then go\nahead and open its settings.
029	We just disabled {[0001|1a00]}{color[0400]}Movable{color[ffff]}{[0001|ffff]} a\nmoment ago, so let's {[0001|1a00]}{color[0400]}enable{color[ffff]}{[0001|ffff]} it again.
030	Away goes the settings screen!
031	Let's check in the game once more.
032	{[0001|1a00]}{color[0400]}Movable{color[ffff]}{[0001|ffff]} was {[0001|1a00]}{color[0400]}enabled{color[ffff]}{[0001|ffff]}, so\nthe object can move again.
033	Which is why it {[0001|1a00]}{color[0400]}fell down{color[ffff]}{[0001|ffff]}!
034	So remember, if you want to make\nit so an object doesn't fall, all you\nneed to do is change its {[0001|1a00]}{color[0400]}properties{color[ffff]}{[0001|ffff]}.
035	Let's go back to the program screen.
036	Welcome back.
037	You changed the object's\n{[0001|1a00]}{color[0400]}properties{color[ffff]}{[0001|ffff]} and it stopped falling, eh?
039	That's all well and good, but there\nare other {[0001|1a00]}{color[0400]}properties{color[ffff]}{[0001|ffff]} too, you know.
040	Erm...
041	If you want, you could, er, change\nsome of 'em. I mean, if you like...
042	If you want to play around\nwith properties, Object Nodon,\njust say so!
043	In any case, let's take a look\nat what other {color[0400]}{[0001|1a00]}properties{[0001|ffff]}{color[ffff]} there\nare, {[0201]}.
044	Select the Nodon, and\nopen the settings screen.
045	This time, let's try {[0001|1a00]}{color[0400]}disabling{color[ffff]}{[0001|ffff]} {[0001|1a00]}{color[0400]}Solid{color[ffff]}{[0001|ffff]}.
046	Now let's close the\nsettings screen again.
047	Try picturing what\nmight have changed!
048	The object fell {[0001|1a00]}{color[0400]}right\nthrough the ground{color[ffff]}{[0001|ffff]}!
100	If you {[0001|1a00]}{color[0400]}disable{color[ffff]}{[0001|ffff]} {[0001|1a00]}{color[0400]}Solid{color[ffff]}{[0001|ffff]}, the object will\n{[0001|1a00]}{color[0400]}no longer hit or be hit by anything{color[ffff]}{[0001|ffff]}.
051	Neat, right? Let's keep experimenting!
052	Drumroll, please...
053	For our next experiment, we'll\nneed a second {[0001|1a00]}{color[0400]}Object Nodon{color[ffff]}{[0001|ffff]}!
112	Ayup. I'm a {[0001|1a00]}{color[0400]}sphere{color[ffff]}{[0001|ffff]}.
118	A sphere will now appear\non the ground in the game.
119	What's more, the {[0001|1a00]}{color[0400]}box {color[ffff]}{[0001|ffff]}will\nfall down toward it.
114	But don't just take my word\nfor it. Let's have a look.
115	The box fell {[0001|1a00]}{color[0400]}right\nthrough the sphere{color[ffff]}{[0001|ffff]}!
116	{[0001|1a00]}{color[0400]}Disabling{color[ffff]}{[0001|ffff]} {[0001|1a00]}{color[0400]}Solid{color[ffff]}{[0001|ffff]} for an\nobject means that {[0001|1a00]}{color[0400]}all other\nobjects will pass through it{color[ffff]}{[0001|ffff]}.
117	Let's go back to\nthe {[0001|1a00]}{color[0400]}program screen{color[ffff]}{[0001|ffff]}.
056	Next, why don't we see what happens\nwhen {[0001|1a00]}{color[0400]}two objects hit one another{color[ffff]}{[0001|ffff]}?
057	First, open the settings\nscreen for this Nodon here.
058	Let's {[0001|1a00]}{color[0400]}enable{color[ffff]}{[0001|ffff]} {[0001|1a00]}{color[0400]}Solid{color[ffff]}{[0001|ffff]} again.
059	You're getting good at this!\nNow close the settings.
060	How will the {[0001|1a00]}{color[0400]}box{color[ffff]}{[0001|ffff]} and the\n{[0001|1a00]}{color[0400]}sphere {color[ffff]}{[0001|ffff]}interact now?
061	Wow, did you see that?!\nBecause we {[0001|1a00]}{color[0400]}enabled{color[ffff]}{[0001|ffff]} {[0001|1a00]}{color[0400]}Solid{color[ffff]}{[0001|ffff]}...
062	the falling box {[0001|1a00]}{color[0400]}hit and broke{color[ffff]}{[0001|ffff]} the\nsphere instead of passing through it!
063	So in this case the objects hit one another\nand {[0001|1a00]}{color[0400]}broke{color[ffff]}{[0001|ffff]}...but actually, this is something\nwe can change in the {[0001|1a00]}{color[0400]}properties{color[ffff]}{[0001|ffff]} too.
064	Let's head back to the {[0001|1a00]}{color[0400]}program screen{color[ffff]}{[0001|ffff]}.
065	Open the {[0001|1a00]}{color[0400]}settings\n{color[ffff]}{[0001|ffff]}for this Nodon again.
066	Then, {[0001|1a00]}{color[0400]}disable{color[ffff]}{[0001|ffff]} {[0001|1a00]}{color[0400]}Destructible{color[ffff]}{[0001|ffff]}.
067	Go ahead and close\nthe settings again.
068	What we've just done is\n{[0001|1a00]}{color[0400]}disabled{color[ffff]}{[0001|ffff]} the {[0001|1a00]}{color[0400]}Destructible{color[ffff]}{[0001|ffff]}\nproperty for the falling {[0001|1a00]}{color[0400]}box{color[ffff]}{[0001|ffff]}.
069	What will that do, exactly?\nThere's only one way to find out!
070	The {[0001|1a00]}{color[0400]}box{color[ffff]}{[0001|ffff]} still fell\nand hit the{[0001|1a00]}{color[0400]} sphere{color[ffff]}{[0001|ffff]}...
071	but this time the box {[0001|1a00]}{color[0400]}didn't break{color[ffff]}{[0001|ffff]}.\nOnly the sphere did.
071-01	That's because {[0001|1a00]}{color[0400]}disabling\nDestructible{color[ffff]}{[0001|ffff]} means an\nobject will {[0001|1a00]}{color[0400]}no longer break{color[ffff]}{[0001|ffff]}.
072	Next, let's try changing the\nbox's {[0001|1a00]}properties{[0001|ffff]} so that it will\n{[0001|1a00]}{color[0400]}no longer break{color[ffff]}{[0001|ffff]} the sphere.
073	How should we go about doing\nthat? Think about it as we head\nback to the program screen.
074	You know the drill. Open this\nNodon's {[0001|1a00]}{color[0400]}settings{color[ffff]}{[0001|ffff]} again.
075	{[0001|1a00]}{color[0400]}Disable{color[ffff]}{[0001|ffff]} the {[0001|1a00]}{color[0400]}Destructive{color[ffff]}{[0001|ffff]} property.
076	We're ready to close the settings.
077	Now, let's watch what happens.
078	This time, the sphere\n{[0001|1a00]}{color[0400]}didn't break{color[ffff]}{[0001|ffff]}, either!
079	That's because we {[0001|1a00]}{color[0400]}disabled\nDestructive{color[ffff]}{[0001|ffff]} for the box, which\nmeans it will {[0001|1a00]}{color[0400]}no longer break{color[ffff]}{[0001|ffff]} the sphere.
080	Just a little bit more\nexperimenting left now...
081	Open the settings\nfor this Nodon again.
082	Now, try {[0001|1a00]}{color[0400]}disabling{color[ffff]}{[0001|ffff]} {[0001|1a00]}{color[0400]}Visible{color[ffff]}{[0001|ffff]}.
083	Close the settings.
084	Let's check things out\non the {[0001|1a00]}{color[0400]}game screen{color[ffff]}{[0001|ffff]}.
085	Voilà! The {[0001|1a00]}{color[0400]}box{color[ffff]}{[0001|ffff]} has disappeared!
086	Actually, it hasn't really disappeared.\nIt's still there, but we{[0001|1a00]}{color[0400]} disabled {color[ffff]}{[0001|ffff]}its {[0001|1a00]}{color[0400]}Visible{color[ffff]}{[0001|ffff]}\n{[0001|1a00]}{color[0400]}property{color[ffff]}{[0001|ffff]}, so you just {[0001|1a00]}{color[0400]}can't see it{color[ffff]}{[0001|ffff]} anymore.
087	Let's head to the {[0001|1a00]}{color[0400]}program screen{color[ffff]}{[0001|ffff]}.\nI want to show you one last thing.
088	Open the settings\nscreen for the Nodon.
089	{[0001|1a00]}{color[0400]}Enable Destructive{color[ffff]}{[0001|ffff]} again.
090	Close the settings...
091	Now, let's pay close attention\nto what happens in the game.
092	Oooh, see? The {[0001|1a00]}{color[0400]}sphere broke{color[ffff]}{[0001|ffff]}!
093	What's happened is that\nthe {[0001|1a00]}{color[0400]}invisible box hit the\nsphere{color[ffff]}{[0001|ffff]} and broke it.
094	This helped us confirm that, even\nthough the box is invisible, it still\n{[0001|1a00]}{color[0400]}definitely exists on the game screen{color[ffff]}{[0001|ffff]}.
095	We're finally done testing {[0001|1a00]}{color[0400]}properties{color[ffff]}{[0001|ffff]}.
096	Let's go back to the {[0001|1a00]}{color[0400]}program screen{color[ffff]}{[0001|ffff]}.
097	Welcome back!
098	Now you know how to change\n{[0001|1a00]}{color[0400]}how an object behaves{color[ffff]}{[0001|ffff]} by\nchanging its {[0001|1a00]}{color[0400]}properties{color[ffff]}{[0001|ffff]}.
099	It's super useful, if you ask me.\nKeep it in mind for future use, OK?
Guidebook_AutoPilot.msbt
00.00.Alice	Hi there, {[0201]}!
00.01.Alice	This time I'm going to show you how\nto program a car that drives itself!
00.02.Alice	See the stopped car\non the game screen?
00.03.Alice	It'll move forward if you press {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]}.\nGo ahead and take it for a spin!
00.04.Alice	Did you see that? It turned right all on its\nown when it got too close to the wall!\nThat's the magic of a self-driving car!
00.05.Alice	Any ideas about how it might work?
00.06.Alice	Ooh, I can't wait! Let's zoom on\nover to the program screen and\ntake a peek under the hood!
01.00.Car	Vroom, vroom!\nI'm a Car Nodon!
01.01.Camera	Yello.
01.02.Camera	It's my job to tail the Car Nodon and get\neverything on film. You can count on me.\nI'm a pro!
01.03.Button	Yo! Good to see you, {[0201]}!\nI'll be in charge of  this time.
01.04.RigidWall	Heyo! We Object Nodon stick together.\nRight now, we're some lovely brown walls.
01.05.RigidWall	Together we make a nice race course,\nof course.
01.06.SensorL	Uh... What? Who's that? Argh!\nWhy, er, hello there, {[0201]}!\nWhat can I do for you today?
01.07.SensorL	Meep... What's that? You want to learn how to\n{[0001|1a00]}{color[0400]}program a self-driving car{color[ffff]}{[0001|ffff]}?! That's challenging...\nYou can probably pull it off, though...
01.08.SensorL	All these introductions are making my\nhead spin. Let's get on with it!
01.09.SensorL	First of all, it's important that\nI'm {[0001|1a00]}{color[0400]}connected to the front{color[ffff]}{[0001|ffff]} of\nthe Car Nodon, here.
01.10.Car	He's stuck right to my hood!
01.11.Button	The car moves when you press \nbecause I'm connected to the\nCar Nodon's {[0001|1a00]}{color[0400]}accelerate port{color[ffff]}{[0001|ffff]}!
01.12.RigidWall	And when the car comes close to us...\n(We close our eyes for that part!)
01.13.SensorL	I'm stuck to the front\nof the Car Nodon...
01.14.Car	So the {[0001|1a00]}{color[0400]}touch sensor hits the wall{color[ffff]}{[0001|ffff]}!\nCrrrash!
01.15.SensorL	Oh dear! It's my job to watch for {[0001|1a00]}{color[0400]}boxes{color[ffff]}{[0001|ffff]}.\n{[0001|1a00]}{color[0400]}When I hit one, I output a signal of 1.00{color[ffff]}{[0001|ffff]}.
01.16.Car	And when my {[0001|1a00]}{color[0400]}steering wheel{color[ffff]}\n{[0001|ffff]}port receives an input of {[0001|1a00]}{color[0400]}1.00{color[ffff]}{[0001|ffff]},\nthe car {[0001|1a00]}{color[0400]}turns right{color[ffff]}{[0001|ffff]}! Vroom!
01.18.Car	When that happens...
01.19.SensorL	The touch sensor {[0001|1a00]}{color[0400]}moves away\nfrom the wall{color[ffff]}{[0001|ffff]}, which means\nI stop outputting a signal!
01.20.Button	So as long as there's {[0001|1a00]}{color[0400]}not a\nwall right in front {color[ffff]}{[0001|ffff]}of the car,\nit'll keep {[0001|1a00]}{color[0400]}driving straight{color[ffff]}{[0001|ffff]}.
01.21.Alice	They say a picture's worth a thousand\nwords, so why don't we make the\nTouch-Sensor Nodon {[0001|1a00]}{color[0400]}visible{color[ffff]}{[0001|ffff]} for now?
01.22.Alice	To do that, you'll need to start\nby selecting the Touch-Sensor Nodon.\nBe gentle though...
01.23.Alice	Then, open the settings screen.
01.24.Alice	Under {[0001|1a00]}Properties,{[0001|ffff]} just select\n{[0001|1a00]}{color[0400]}Visible{color[ffff]}{[0001|ffff]} to {[0001|1a00]}{color[0400]}enable {color[ffff]}{[0001|ffff]}that option.\nThat's all you need to do!
01.25.Alice	While we're here, let's also take a\nlook at the {[0001|1a00]}{color[0400]}Check What?{color[ffff]}{[0001|ffff]} setting.
01.26.Alice	It's set to {[0001|1a00]}{color[0400]}Box{color[ffff]}{[0001|ffff]}. That means the\nsensor is {[0001|1a00]}{color[0400]}set to check for boxes{color[ffff]}{[0001|ffff]}...\nIn this case, the walls!
01.28.Alice	OK, let's close the settings screen.
01.29.Alice	We should now be able to check\nout the sensor on the game screen.
02.00.Alice	See that roundish outline on the front\nof the car? That's the {[0001|1a00]}{color[0400]}touch sensor{color[ffff]}{[0001|ffff]}.
02.01.Alice	Remember, if the sensor touches\nthe wall, the car turns right.
02.02.Alice	Try making the car go with {[0001|1a00]}{color[0400]}\n{color[ffff]}{[0001|ffff]}so we can watch the sensor in action.
02.03.Alice	Ta-da! The car turned right when\nthe sensor touched the wall!
02.04.Alice	By the way, you can use Retry\nif you ever want to go back to the\nstarting point.
02.05.Alice	Head on back to the program\nscreen when you're ready.
03.00.Car	Did you see? I was all vroom, swoosh,\ncan't touch me, wall! Smooth as a cat's\npajamas. SILK pajamas. Freshly ironed.
03.01.Button	Are you joking? You hit a wall\nhead-on at the end!
03.02.Car	You saw that?! I didn't think anyone\nnoticed. EMBARRASSING. Thing is,\nat the moment I {[0001|1a00]}{color[0400]}can only turn right{color[ffff]}{[0001|ffff]}...
03.03.SensorL	Crankshafts, that's right! Or, should\nI say, "correct"? We've gotta teach\nyou how to turn left too.
03.04.SensorL	But all I can tell is whether\nor not I've hit the wall.
03.04-01.SensorL	I just don't have it in me to tell\nyou whether to turn left or right\nat the moment...meep...
03.05.Alice	Hmmm, how can we get the car to\nchoose between {[0001|1a00]}{color[0400]}turning right or left{color[ffff]}{[0001|ffff]}?
03.06.Alice	The touch sensor only knows\n{[0001|1a00]}{color[0400]}whether or not you've hit{color[ffff]}{[0001|ffff]} a wall.
03.09.Alice	I've got an idea! What we need to do is stick\n{[0001|1a00]}{color[0400]}two{color[ffff]}{[0001|ffff]} touch sensors to the front of the car,\n{[0001|1a00]}{color[0400]}one on the right side and one on the left{color[ffff]}{[0001|ffff]}.
03.10.Alice	That way, {[0001|1a00]}{color[0400]}a different sensor will be activated{color[ffff]}{[0001|ffff]}\ndepending on which side of the car hits a wall,\nand that sensor will control how the car turns!
03.11.Alice	First, let's set the positions\nfor the two Touch-Sensor Nodon.
03.12.Alice	We'll move the existing Nodon\nto the left... Uh-huh...
03.13.Alice	Then we'll use Copy to make\nanother of the same Nodon.
03.14.SensorR	Eeek! Warn me next time!\nI was in the bathtub!
03.15.Alice	Er, let's just move this second\nNodon over to the right...
03.16.Alice	Now we'll want to connect\nthe Nodon to the {[0001|1a00]}{color[0400]}right and\nleft sides {color[ffff]}{[0001|ffff]}of the car's hood.
03.17.Alice	It'd be good if each sensor attached\nto the car at a bit of an angle...but how\nshould we go about doing that?
03.18.Alice	I know! Let's place an Object\nNodon between them to keep\neach one in its proper place!
03.19.RigidBall	Ayup. I'm an Object Nodon.{[0001|1a00]}\n{color[0400]}Spheres {color[ffff]}{[0001|ffff]}are my business.
03.21.RigidBall	I'll go ahead and connect myself to\nthe {color[0400]}{[0001|1a00]}front{[0001|ffff]}{color[ffff]} of the Car Nodon, OK?
03.21-01.Alice	If we just connect the touch\nsensors to the {color[0400]}{[0001|1a00]}right and left\nsides {[0001|ffff]}{color[ffff]}of the Object Nodon...
03.21-02.Alice	The sensors will sit at the {[0001|1a00]}{color[0400]}perfect\nangles{color[ffff]}{[0001|ffff]} on the front of the car.
03.22.Alice	OK, select the connection\nbetween the left-hand Touch-\nSensor Nodon and the Car Nodon.
03.23.Alice	Go ahead and get rid of it.
03.24.Alice	Next, redo the connection here.
03.25.Alice	Then, select the left-hand\nTouch-Sensor Nodon...
03.26.Alice	And open up its settings screen.
03.29.Alice	We'll want to change the settings\nso that we can properly connect it\nto the {[0001|1a00]}{color[0400]}left side{color[ffff]}{[0001|ffff]} of the Object Nodon.
03.31.Alice	To do that, we just change the\n{[0001|1a00]}{color[0400]}Own Connection Point{color[ffff]}{[0001|ffff]} setting to {[0001|1a00]}{color[0400]}X+{color[ffff]}{[0001|ffff]}.
03.32.Alice	We'll also need to change the\n{[0001|1a00]}{color[0400]}Target Connection Point{color[ffff]}{[0001|ffff]} to {[0001|1a00]}{color[0400]}X-\n{color[ffff]}{[0001|ffff]}for good measure.
03.33.Alice	OK, all done here! We can\nclose this screen now.
03.34.Alice	Go ahead and close the\nsettings screen too.
03.35.SensorR	It's time to do my settings next.\nBe careful with me...
03.36.Alice	Try to hold still, Sensor! We'll only be\na moment. Now, where were we? Select\nthe right-hand Touch-Sensor Nodon.
03.37.Alice	Open the settings screen again.
03.38.Alice	You know the drill! We need to\nadjust the {[0001|1a00]}Connection Point{[0001|ffff]} settings,\njust like for the other sensor.
03.39.Alice	This sensor needs to connect to\nthe {[0001|1a00]}{color[0400]}right side{color[ffff]}{[0001|ffff]} of the Object Nodon.
03.40.Alice	To do that, set the\n{[0001|1a00]}{color[0400]}Own Connection Point{color[ffff]}{[0001|ffff]} to {[0001|1a00]}{color[0400]}X-{color[ffff]}{[0001|ffff]}.
03.41.Alice	Then, set the {[0001|1a00]}{color[0400]}Target\nConnection Point{color[ffff]}{[0001|ffff]} to {[0001|1a00]}{color[0400]}X+{color[ffff]}{[0001|ffff]}.
03.42.Alice	Whew! All set!\nYou can close this screen.
03.43.Alice	And you can close the\nsettings screen too.
03.44.Alice	We can't pat ourselves on the back\njust yet. First we need to make sure\nthe sensors are good to go.
03.45.Alice	Let's pop on over to the game screen.
04.00.Alice	See that? It worked! There's a {[0001|1a00]}{color[0400]}sphere\non the front{color[ffff]}{[0001|ffff]} of the car, and {color[0400]}{[0001|1a00]}sensors\nstuck to its right and left sides{[0001|ffff]}{color[ffff]}.
04.02.Alice	Try using {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]} to make the car go.\nPay attention to what happens\nwhen either sensor hits a wall.
04.03.Alice	The left sensor hit a wall!
04.04.Alice	When that happened,\nthe car turned right.
04.05.Alice	Why don't you hit {[0001|1a00]}{color[0400]}Retry{color[ffff]}{[0001|ffff]}? Pay close\nattention to what happens when the\ncar approaches the wall after turning.
04.06.Alice	You could tell that the right-hand\nsensor hit the wall, right? But the\ncar didn't turn...
04.07.Alice	Let's make it so the car turns left\nif the right-hand sensor hits a wall.
04.08.Alice	First, go back to the program screen.
05.00.SensorR	Well, how'd we look out there?
05.03.Button	The sensors are in the right places,\nall right, but the car just crashed into the\nright-hand wall! That's not right at all!
05.04.Alice	Our next step is to make the\n{[0001|1a00]}{color[0400]}car turn right or left{color[ffff]}{[0001|ffff]} depending\non which sensor is activated.
05.06.Car	Oh! Oh! I {[0001|1a00]}{color[0400]}turn left{color[ffff]}{[0001|ffff]} if my {[0001|1a00]}{color[0400]}steering\nwheel port receives a negative input{color[ffff]}{[0001|ffff]}!
05.08.SensorL	Which must mean...eep! Hold on, I've got\nthis... When I'm activated, I {[0001|1a00]}{color[0400]}send a\npositive signal{color[ffff]}{[0001|ffff]} to the {[0001|1a00]}steering wheel{[0001|ffff]} port!
05.09.SensorR	So if I can {[0001|1a00]}{color[0400]}send a negative signal{color[ffff]}{[0001|ffff]} to {[0001|1a00]}the\nsame port{[0001|ffff]}, the car should turn properly!\nIt's all so clear to me now!
05.10.Alice	Er, and how do we manage that?
05.11.Alice	When in doubt, try using {[0001|1a00]}{color[0400]}calculations{color[ffff]}{[0001|ffff]}!\nThat's what I always say.
05.12.Alice	First, select the connection between\nthe left-hand Touch-Sensor Nodon\nand the Car Nodon's {[0001|1a00]}{color[0400]}steering wheel port{color[ffff]}{[0001|ffff]}.
05.13.Alice	Go on and undo that connection.
05.14.Alice	Now, let's pull up a {[0001|1a00]}{color[0400]}Calculator Nodon{color[ffff]}{[0001|ffff]}.
05.15.Calculator	CALCULATION ADDS UP TO\nGOOD THINGS FOR ALL OF US.
05.16.Calculator	I EAGERLY AWAIT EVEN THE SIMPLEST\nMATHEMATICAL TASK. COUNT ON ME!
05.17.Alice	First, we'll connect the Calculator\nNodon to the output for each\nTouch-Sensor Nodon, like so.
05.18.Alice	Then we'll add another connection so\nthat all calculation results are sent to\nthe Car Nodon's steering wheel port.
05.19.SensorL	This way, when the left-hand\nsensor hits a wall, the output is...
05.20.Calculator	1.00 MINUS 0.00...\nRESULTING IN...{[0001|1a00]}{color[0400]}1.00{color[ffff]}{[0001|ffff]}!
05.21.SensorR	And when the right-hand sensor\nhits a wall, the output will be...
05.22.Calculator	0.00 MINUS 1.00.\nTHAT'S {[0001|1a00]}{color[0400]}-1.00{color[ffff]}{[0001|ffff]}!
05.23.RigidBall	Hold on. How 'bout when neither sensor\nis touching a wall? What happens then?
05.24.Calculator	IN THAT CASE THE OUTPUT WOULD\nBE 0.00 MINUS 0.00...OR {[0001|1a00]}{color[0400]}0.00{color[ffff]}{[0001|ffff]}!
05.25.Camera	I think I'm getting the hang of this.\nWhat about when both sensors\nhit a wall at the same time?
05.26.Calculator	THE OUTPUT IS 1.00 MINUS 1.00. Or {[0001|1a00]}{color[0400]}0.00{color[ffff]}{[0001|ffff]}.\nAGAIN. COME ON. GIVE ME A HARD ONE.
05.27.Alice	To sum up, if the {[0001|1a00]}{color[0400]}left sensor{color[ffff]}{[0001|ffff]} hits, the\noutput is {[0001|1a00]}{color[0400]}1.00{color[ffff]}{[0001|ffff]}. If the {[0001|1a00]}{color[0400]}right sensor{color[ffff]}{[0001|ffff]} hits, it's\n{[0001|1a00]}{color[0400]}-1.00{color[ffff]}{[0001|ffff]}. And if {[0001|1a00]}{color[0400]}neither sensor{color[ffff]}{[0001|ffff]} hits, it's {[0001|1a00]}{color[0400]}0.00{color[ffff]}{[0001|ffff]}.
05.27-01.Alice	Put that all together, and it means that if the\nleft sensor hits the car should turn right,\nand if the right sensor hits it should turn left!
05.28.Alice	That's a lot of information to\nprocess, so let's check it all out\nin action on the game screen.
06.01.Alice	Make the car go with {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]}. Try to\npay close attention to the touch\nsensors and the car's reactions.
06.02.Alice	You did it! When the car hits\na wall, it turns so that it's\n{[0001|1a00]}{color[0400]}traveling away from that wall{color[ffff]}{[0001|ffff]}!
06.03.Alice	Why don't you try it a few more\ntimes just for good measure.
06.04.Alice	All set? Let's head back\nto the program screen.
07.00.Car	Well? What'd you think?\nWasn't my turning cool?!
07.01.SensorL	Meep! Those walls sure are scary.\nI'm glad you made it so that we\ncould avoid them entirely.
07.02.SensorR	Oh dear! I think something's still\nmissing, though... We haven't quite\nmastered that self-driving feeling.
07.03.Camera	The {[0001|1a00]}{color[0400]}acceleration's still manual{color[ffff]}{[0001|ffff]}, right?
07.04.Button	Well, you can't make button\npressing automatic, you know!
07.05.Car	What really makes me go isn't pressing\na button, though. It's getting a {[0001|1a00]}{color[0400]}positive\nsignal{color[ffff]}{[0001|ffff]} in my {[0001|1a00]}{color[0400]}accelerate port{color[ffff]}{[0001|ffff]}! Vrooom!
07.06.Alice	Ooh, that's right! Which means we can\ndo the Button Nodon's job using a\n{[0001|1a00]}{color[0400]}Constant Nodon{color[ffff]}{[0001|ffff]}. Er, no offence, Button.
07.07.Constant	Behold my immaculate reliability!\nAn output of {[0001|1a00]}{color[0400]}1.00{color[ffff]}{[0001|ffff]}, you say? Pah!\nSimplicity itself.
07.08.Button	Right. I know when I'm not wanted.\nSee you around, {[0201]}!
07.09.Constant	In place of the Button Nodon, I'll live\nup to my name and {[0001|1a00]}{color[0400]}send a constant\noutput of 1.00 to the accelerate port{color[ffff]}{[0001|ffff]}.
07.10.Alice	And with that, even the car's\nacceleration will be automatic!
07.11.Alice	Let's check it out on the game screen!
08.00.Alice	Isn't that amazing?
08.01.Alice	The car moves forward and\navoids walls all on its own.
08.02.Alice	That completes our self-driving mission.
08.03.Alice	Once you've seen enough, head\non back to the program screen.
09.00.Car	Yes! Now THAT'S what\nI call a self-driving car!
09.01.Calculator	ANOTHER POSITIVE EXPERIENCE FOR ME.
09.02.Alice	OK, well, that ended up being quite\ncomplicated, but I hope you got the gist.\nLet's go through it all one more time.
09.06.SensorR	Again? Uh-oh. Ahh... Uhh... When a\ntouch sensor hits a wall, it sends a signal\nto the Car Nodon's {[0001|1a00]}{color[0400]}steering wheel port{color[ffff]}...{[0001|ffff]}
09.07.Car	And the car turns! Whee!
09.08.SensorL	Ack! And, oh! When there are two\nof us Touch-Sensor Nodon...
09.09.SensorR	We decide {[0001|1a00]}{color[0400]}whether to make\nthe car turn left or right {color[ffff]}{[0001|ffff]}depending\non which sensor hits a wall.
09.10.Calculator	USING {[0001|1a00]}{color[0400]}CALCULATIONS{color[ffff]}{[0001|ffff]} HELPS\nYOU OUTPUT THE PROPER VALUE\nTO THE STEERING WHEEL.
09.11.Constant	And I, as your trusty Constant Nodon,\nreliably output a fixed value so that\nthe car can {[0001|1a00]}{color[0400]}accelerate by itself{color[ffff]}{[0001|ffff]}!
09.13.Alice	Knowing how to make actions automatic\ncan be useful for enemy characters too,\nso it's a good thing to keep in mind.
09.14.Alice	Whew, that was a long one,\nbut we're finally done!
09.15.Car	Time to drive! Vroom, vroom!
09.16.Camera	Automation is the future, eh?\nHow times change...
Guidebook_AxisAngle.msbt
000	Hi, {[0201]}.
001	Take a look at the person here.
002_a	Right now, Person is programmed to\nmove when {[0001|1a00]}{color[0400]}the Nintendo Switch\nconsole is tilted left or right{color[ffff]}{[0001|ffff]}.
003_a	Can you hold the console\nlevel and then {[0001|1a00]}{color[0400]}tilt it left or right{color[ffff]}{[0001|ffff]}?
002_b	Right now it's programmed to\nmove in response to {[0001|1a00]}{color[0400]}the Joy-Con\nbeing tilted left or right{color[ffff]}{[0001|ffff]}.
003_b	Can you hold the Joy-Con\nlevel and then {[0001|1a00]}{color[0400]}tilt it left or right{color[ffff]}{[0001|ffff]}?
004	There you go, the person moved.
005	As you might have guessed, I'm going to\nexplain {[0001|1a00]}{color[0400]}how to program moving the person\nusing motion controls{color[ffff]}{[0001|ffff]}.
006	Can you go to the\nprogram screen?
007	Oh, you were the one tilting\nthings, right?
008	How d'you do?\nI'm {[0001|1a00]}{color[0400]}Tilt Nodon{color[ffff]}{[0001|ffff]}!
009	I can tell when the Nintendo Switch\nconsole or Joy-Con controllers are\nbeing tilted.
010	As long as you're keeping\nthings level, you don't need\nto tilt with much force.
011	It's enough just to tilt things\nniiice and easy.
012	It's my job to let other Nodon\nknow when something is tilting.
013	I'm the one who told\nPerson Nodon what was\ngoing on!
014	So, nice to work with you!
015	Hiya! I'm Person Nodon!
016	I got the signal from\nTilt Nodon...
017	so I moved Person\nleft and right!
018	Makes sense, right? If you\nuse Tilt Nodon,
019	you can use {[0001|1a00]}{color[0400]}tilting{color[ffff]}{[0001|ffff]} as an{[0001|1a00]}{color[0400]} input{color[ffff]}{[0001|ffff]},\ninstead of the control sticks or buttons.
020	Hm? You're asking how I know\nwhen something is being tilted?
022	Well, the Nintendo Switch console\nand Joy-Con controllers have sensors\nthat {[0001|1a00]}{color[0400]}detect when they're moving{color[ffff]}{[0001|ffff]}.
023	And those motion\nsensors tell me!
024	You can check in my settings\nhow far and in what direction things\nhave to tilt before I send a signal.
025	Select the Tilt Nodon.
026	Then open the settings.
027	Tilt Nodon has two {[0001|1a00]}{color[0400]}modes{color[ffff]}{[0001|ffff]}:\n{[0001|1a00]}{color[0400]}Tilt{color[ffff]}{[0001|ffff]} and {[0001|1a00]}{color[0400]}Angle of rotation{color[ffff]}{[0001|ffff]}.
028	In {[0001|1a00]}{color[0400]}Tilt{color[ffff]}{[0001|ffff]} mode, it converts the tilting\nto a {[0001|1a00]}{color[0400]}signal with a value between\n0.00 and 1.00{color[ffff]}{[0001|ffff]}, then sends it out.
029	In {[0001|1a00]}{color[0400]}Angle of rotation{color[ffff]}{[0001|ffff]} mode, it\nconverts the tilting directly into\nan {[0001|1a00]}{color[0400]}angle{color[ffff]}{[0001|ffff]} and sends that out.
030	When you want to use tilting\ninstead of a control stick or button...
031	then you should use {[0001|1a00]}{color[0400]}Tilt mode{color[ffff]}{[0001|ffff]}.
032	In {[0001|1a00]}Tilt{[0001|ffff]} mode, you can use this {[0001|1a00]}{color[0400]}range{color[ffff]}{[0001|ffff]}\nto set how the {[0001|1a00]}{color[0400]}amount of tilting {color[ffff]}{[0001|ffff]}affects\nthe {[0001|1a00]}{color[0400]}size of the signal{color[ffff]}{[0001|ffff]} being sent out.
033	If you set a {[0001|1a00]}{color[0400]}high upper limit {color[ffff]}{[0001|ffff]}for\n{[0001|1a00]}Range,{[0001|ffff]} you'll have to tilt more\nheavily to get a large signal.
034	If you set a {[0001|1a00]}{color[0400]}low upper limit{color[ffff]}{[0001|ffff]} for\n{[0001|1a00]}Range{[0001|ffff]}, you can send a large\nsignal even with a slight tilt.
035	Can you set the range to\nsomething {[0001|1a00]}{color[0400]}low{color[ffff]}{[0001|ffff]}, say {[0001|1a00]}{color[0400]}0.10{color[ffff]}{[0001|ffff]}?
036	You can close the settings.
037	Got it! You've set the limit of\n{[0001|1a00]}{color[0400]}0.10{color[ffff]}{[0001|ffff]} for the reaction to a tilt.
038	That means that I'll be 10 times more\nsensitive to the tilt I tell others about.
039	In other words, I'll send out\na large value for a tiny tilt.
040	Huh. If the Tilt Nodon is more\nsensitive, I wonder how\nthat'll affect our person...
041	Let's see for ourselves\non the game screen.
042	Give the person a little tilt left and\nright and see how they move.
043	If you lose sight of the\nperson, just hit Retry.
044	They move with just the slightest nudge!
044-01	You just saw how we can use the {[0001|1a00]}{color[0400]}Range\n{color[ffff]}{[0001|ffff]}setting to adjust {[0001|1a00]}{color[0400]}the amount of output that\nthe Nodon gives in response to tilting{color[ffff]}{[0001|ffff]}.
045	OK, let's go back to the program screen.
046	Whoa, they went zooming off\nat the teeniest, tiniest tilt!
047	Let's change the {[0001|1a00]}{color[0400]}tilt direction{color[ffff]}{[0001|ffff]} next.
048	Select the Tilt Nodon.
049	Open the settings.
050	What should we do\nwith the tilt direction?
051	You can set it here,\nunder {[0001|1a00]}{color[0400]}Axis of Rotation{color[ffff]}{[0001|ffff]}.
052	There are three possible axes\nof rotation, you see? {[0001|1a00]}{color[0400]}X{color[ffff]}{[0001|ffff]}, {[0001|1a00]}{color[0400]}Y{color[ffff]}{[0001|ffff]}, and {[0001|1a00]}{color[0400]}Z{color[ffff]}{[0001|ffff]}.
053	The axis of rotation is the particular {[0001|1a00]}{color[0400]}axis\nthat the tilt's movement rotates around{color[ffff]}{[0001|ffff]}.
054	Right now the axis of rotation is set\nto {[0001|1a00]}{color[0400]}Z{color[ffff]}{[0001|ffff]}, so it reacts to a {[0001|1a00]}{color[0400]}left-right{color[ffff]}{[0001|ffff]} tilt.
055	If we were to set it to {[0001|1a00]}{color[0400]}X{color[ffff]}{[0001|ffff]}, then it would\nreact to a {[0001|1a00]}{color[0400]}forward-backward{color[ffff]}{[0001|ffff]} tilt.
056	Let's try setting the\n{[0001|1a00]}{color[0400]}axis of rotation{color[ffff]}{[0001|ffff]} to {[0001|1a00]}{color[0400]}X{color[ffff]}{[0001|ffff]}.
057	Imagine that the x-axis is a gymnastics bar.
058	If you were swinging around it, that\nwould be called an x-axis rotation.
059	OK, close the settings.
060	There we go! Now our\ncontrols are set to the x-axis.
061	Let's change the person's movement to match\nit, so they move forward and backward too.
062	Select the connection.
063	And delete it!
064	Connect it up to the Person\nNodon's {[0001|1a00]}{color[0400]}forward/backward port{color[ffff]}{[0001|ffff]}.
065	I'm ready to transmit forward\nand backward movement!
066	Picture yourself rolling ever-forward,\naround the x-axis, like a mighty...\nrolling pin!
067	So exciting!
068	Now we should be able to move the person\nby tilting forward and backward.
069	Let's see if it's true\non the game screen.
121	With the angle of rotation set to\nthe {[0001|1a00]}{color[0400]}x-axis{color[ffff]}{[0001|ffff]}, a {[0001|1a00]}{color[0400]}forward-backward\ntilt{color[ffff]}{[0001|ffff]} should move the person.
070	So, go ahead! Tilt forward and\nbackward and move the person.
071	If you lose sight of the\nperson, just hit Retry.
072	Everything's working as intended! A\nforward tilt moves the person forward and\na backward tilt moves them backward.
073	Let's go back to the program screen.
074	Wow, I moved to a forward-backward tilt!
075	We've managed to program motion\ncontrols to get that person moving\nleft, right, forward, and backward.
076	Oh, but the tilting arts\nstill have many secrets!
077	You can use them for a lot more\nthan just a control stick substitute\nfor moving a person around.
078	You can use them like button controls\nto pull off actions like punches!
079	I call this...the {[0001|1a00]}{color[0400]}gyropunch{color[ffff]}{[0001|ffff]}!
080	Whoa, cool name!
118	Let's give it a try.
119	Select the Tilt Nodon.
081	Open up the settings.
082	And change the {[0001|1a00]}axis of rotation{[0001|ffff]} to {[0001|1a00]}{color[0400]}Y{color[ffff]}{[0001|ffff]}.\nTake a look at the diagram while you\ndo that!
083	In relation to the Nintendo Switch\nconsole or a Joy-Con, rotation around the\ny-axis is like a car's steering wheel.
085	Let's set {[0001|1a00]}{color[0400]}Output{color[ffff]}{[0001|ffff]} to {[0001|1a00]}{color[0400]}Digital{color[ffff]}{[0001|ffff]}...
086	When Output is set to Digital,\nit can only output {[0001|1a00]}{color[0400]}0 and 1 values{color[ffff]}{[0001|ffff]}.
087	Think of the output as switching\n{[0001|1a00]}{color[0400]}on{color[ffff]}{[0001|ffff]} and {[0001|1a00]}{color[0400]}off{color[ffff]}{[0001|ffff]}, like a button.
088	Set the range from {[0001|1a00]}{color[0400]}0.05{color[ffff]}{[0001|ffff]} to {[0001|1a00]}{color[0400]}1.00{color[ffff]}{[0001|ffff]}.
089	So any tilt over a value of\n0.05 will send a signal.
090	Close the settings again.
091	The tilt settings are OK for now. But!
092	When you're wobbling around all over\nthe place, sometimes it's hard to know\nwhich way is up. Or straight ahead.
093	That's because tilting the Nintendo Switch \nconsole makes its {[0001|1a00]}{color[0400]}base position\ngradually slip out of alignment{color[ffff]}{[0001|ffff]}.
094	That's because tilting the Joy-Con\nmakes their {[0001|1a00]}{color[0400]}base position gradually\nslip out of alignment{color[ffff]}{[0001|ffff]}.
095	We'll need to make it so that when\nthat happens, you can {[0001|1a00]}{color[0400]}recalibrate\n{color[ffff]}{[0001|ffff]}by pressing .
096	Select {[0001|1a00]}{color[0400]}Input{color[ffff]}{[0001|ffff]}.
097	Now select {[0001|1a00]}{color[0400]}Button Press{color[ffff]}{[0001|ffff]}.
098	Finally, {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]}...
099	Heyo!
101	Connect the Tilt Nodon's {[0001|1a00]}{color[0400]}Y reset port\n{color[ffff]}{[0001|ffff]}and the Button Nodon's output port.
102	Now, pressing  will reset\neverything ready for more tilting.
103	Select the connection.
104	Delete it.
105	Connect the Tilt Nodon to the\nPerson Nodon's {[0001|1a00]}{color[0400]}action port{color[ffff]}{[0001|ffff]}.
106	One gyropunch coming up!
107	Let's see it in action\non the game screen.
108_a	Hold the Nintendo Switch console {[0001|1a00]}{color[0400]}straight{color[ffff]}{[0001|ffff]}.\nPress  if you need to recalibrate.
108_b	Hold the Joy-Con {[0001|1a00]}{color[0400]}straight{color[ffff]}{[0001|ffff]}.\nPress  if you need to recalibrate.
109	Turn it left and right like a car's\nsteering wheel to punch!
110	Get into it!\nOne! Two!
111	Nice punch!
112	Let's go back to the program screen.
113	Look at everything you can use tilting for!\nWalking, punching...and what else do you\nneed in life, really?
114	Game controls don't begin and\nend with {[0001|1a00]}{color[0400]}button controls{color[ffff]}{[0001|ffff]}, see?
115	Well, I hope you've come to\nappreciate motion controls.
116	The secret to tilting is the {[0001|1a00]}{color[0400]}motion sensor{color[ffff]}{[0001|ffff]}.
117	Welcome to our tilted world!
Guidebook_Basic.msbt
000	OK! Lend me your ears, and I'll give\nyou the basics of {[0001|1a00]}{color[0400]}Game Builder Garage{color[ffff]}{[0001|ffff]}!
001	The screen you're looking at\nnow is called the game {[0001|1a00]}{color[0400]}screen{color[ffff]}{[0001|ffff]}.
002	As the name suggests, this is where the\n{[0001|1a00]}{color[0400]}game{color[ffff]}{[0001|ffff]} you've programmed will play out!
003	Here we have the {[0001|1a00]}{color[0400]}Person{color[ffff]}{[0001|ffff]} object.
004	Try pressing {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]}.
005	The person jumped!
006	But what made the\nperson jump exactly?
007	Let me take you through it in\n{[0001|1a00]}{color[0400]}Game Builder Garage Basics{color[ffff]}{[0001|ffff]}!
008	Let's take a peek around the \nback and see the other side of\nthe game...the{[0001|1a00]}{color[0400]} program screen{color[ffff]}{[0001|ffff]}!
009	Hey peeps!\nOh, it's that programmer again!
010	Heyo!\nHey, I remember you!\n{[c903]}{[0201]}, right?
011	Looking forward to bashin'\nsome buttons with ya!
012	So, here we are at\nthe {[0001|1a00]}{color[0400]}program screen{color[ffff]}{[0001|ffff]}...
013	This is where we'll {[0001|1a00]}{color[0400]}program our game{color[ffff]}{[0001|ffff]},\nwith the help of a host of Nodon.
014	That's right!\nWhen it comes to programming,\nwe're here to help, peeps!
015	Each Nodon has its own special\n{[0001|1a00]}{color[0400]}function{color[ffff]}{[0001|ffff]} within a setup.
016	Watching out for when a {[0001|1a00]}{color[0400]}button{color[ffff]}{[0001|ffff]}\ngets pressed... We {[0001|1a00]}{color[0400]}Button Nodon{color[ffff]}{[0001|ffff]}\nhave that covered!
017	And as for us {[0001|1a00]}{color[0400]}Person Nodon{color[ffff]}{[0001|ffff]}...\nI'm the one that puts the {[0001|1a00]}{color[0400]}person{color[ffff]}{[0001|ffff]}\nout there on the game screen!
018	That's right! The person that\nyou saw back then was the\n{[0001|1a00]}{color[0400]}Person Nodon{color[ffff]}{[0001|ffff]}'s doing.
019	Tee-hee!\nIt's nice when people\nacknowledge my work!
020	Take note of the {[0001|1a00]}{color[0400]}position{color[ffff]}{[0001|ffff]} of\nthe Person Nodon on the\nprogram screen here...
021	The location of the Person Nodon\ndetermines {[0001|1a00]}{color[0400]}the location of the person\non the game screen{color[ffff]}{[0001|ffff]}.
022	For example, if you were to\nmove me over to the right of\nthe program screen...
023	the person will appear\nover on the right side of\nthe game screen!
024	Let's try it out!
025	Grab the Person Nodon, and\ndrag it over to the {[0001|1a00]}{color[0400]}blue frame{color[ffff]}{[0001|ffff]}.
026	Ooh, I've moved!\nHow do you think that looks\non the game screen?
027	Let's go to the game screen\nand take a look!
028	There you go! The person has\nmoved over to the {[0001|1a00]}{color[0400]}right{color[ffff]}{[0001|ffff]}.
029	So take note! The program screen is {[0001|1a00]}{color[0400]}the place\nwhere we position things{color[ffff]}{[0001|ffff]} that appear on the\ngame screen, like objects or characters.
030	OK! Head back to the\nprogram screen so I can\nschool you some more!
031	Another thing to know about the\nprogram screen is that you can\n{[0001|1a00]}{color[0400]}scroll{color[ffff]}{[0001|ffff]} it to find more space.
032	I disabled the scrolling before\nthough. I thought it might have\nmade things confusing...
033_t	But it's enabled now! {[0001|1a00]}{color[0400]}Touch the\ntouch screen with two fingers{color[ffff]}{[0001|ffff]} and\ndrag to scroll in any of the four directions.
033_s	Now that scrolling is enabled,\ntry moving  to {[0001|1a00]}{color[0400]}put the pointer\noutside of the screen{color[ffff]}{[0001|ffff]}.
033_jr	Now that scrolling is enabled, try\nmoving {color[0400]}{[0001|1a00]}{[0001|ffff]}{color[ffff]} around in all four directions.
033_jl	Now that scrolling is enabled, try\nmoving {color[0400]}{[0001|1a00]}{[0001|ffff]}{color[ffff]} around in all four directions.
033_m	Now that scrolling is enabled, try\ndragging the mouse in all four directions\n{[0001|1a00]}{color[0400]}while holding the button down{color[ffff]}{[0001|ffff]}.
034	There you go!\nNow you know how to get\naround the program screen.
035_t	Next, try touching the screen with\ntwo fingers, then draw your fingers\napart {[0001|1a00]}{color[0400]}to shrink or enlarge the view{color[ffff]}{[0001|ffff]}.
035_s	Now, try {[0001|1a00]}{color[0400]}moving  up and down\nwhile holding down  or {color[ffff]}{[0001|ffff]}.
035_jr	Now, try {[0001|1a00]}{color[0400]}moving  up and down\nwhile holding down {color[ffff]}{[0001|ffff]}.
035_jl	Now, try {[0001|1a00]}{color[0400]}moving  up and down\nwhile holding down {color[ffff]}{[0001|ffff]}.
072	Now, try {[0001|1a00]}{color[0400]}scrolling the mouse wheel{color[ffff]}{[0001|ffff]}.\nTry clicking on {[0001|1a00]}{color[0400]}-{color[ffff]}{[0001|ffff]} or {[0001|1a00]}{color[0400]}+{color[ffff]}{[0001|ffff]} toward the bottom\nof the program screen.
036	That's another way\nto zoom in or out!
037	I thought it might get confusing if\nthe screen was moving around here\nin my guide, so I disabled it.
038	But I think this feature will\nreally come in handy when\nyou're building your own games.
039	OK, let's put the screen back\nto how it was before...
040	OK, all done!
041	Back to the main topic!\nI wanted to tell you about {[0001|1a00]}{color[0400]}how\nto make the person jump{color[ffff]}{[0001|ffff]}.
042	If you remember, pressing {[0001|1a00]}{color[0400]}\nmade the person jump{color[ffff]}{[0001|ffff]} when\nwe were on the game screen.
043	Heyo! That was my doing!
044	I'm {[0001|1a00]}{color[0400]}connected{color[ffff]}{[0001|ffff]} to the\nButton Nodon, see?
045	These {[0001|1a00]}{color[0400]}lines{color[ffff]}{[0001|ffff]} here represent\nthe connections.
046	You linked them up a\nwhile back, right?
047	I'm {[0001|1a00]}{color[0400]}watching out{color[ffff]}{[0001|ffff]} for anyone\n{[0001|1a00]}{color[0400]}pressing{color[ffff]}{[0001|ffff]} {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]}... I got you covered!
048	Anyone presses , and I immediately\nsend {[0001|1a00]}{color[0400]}signal{color[ffff]}{[0001|ffff]} to the Person Nodon\n{[0001|1a00]}{color[0400]}via the{color[ffff]}{[0001|ffff]} {[0001|1a00]}{color[0400]}connection{color[ffff]}{[0001|ffff]}.
049	Thanks for handling that!
050	To understand the signal, try thinking\nof a very simple {[0001|1a00]}{color[0400]}message that passes\nalong a wire{color[ffff]}{[0001|ffff]}.
051	Now to pay attention to exactly\nwhich part of me is connected\nto the Button Nodon...
052	You see where it says {[0001|1a00]}{color[0400]}Jump{color[ffff]}{[0001|ffff]}?
053	When I get a {[0001|1a00]}{color[0400]}signal{color[ffff]}{[0001|ffff]} at my {[0001|1a00]}{color[0400]}jump port{color[ffff]}{[0001|ffff]},\nthat's my cue to make the person\n{[0001|1a00]}{color[0400]}jump{color[ffff]}{[0001|ffff]} on the game screen!
054	Simple, right?\nBecause we work together, the person\njumps when you press !
055	Allow me to sum it up...
056	The {[0001|1a00]}{color[0400]}Button Nodon{color[ffff]}{[0001|ffff]}'s job is to\nkeep watch for {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]} being pressed.
057	And when  is pressed, the\nButton Nodon sends a {[0001|1a00]}{color[0400]}signal\n{color[ffff]}{[0001|ffff]}from its {[0001|1a00]}{color[0400]}output port{color[ffff]}{[0001|ffff]}.
058	When that signal arrives at the\nPerson Nodon's {[0001|1a00]}{color[0400]}jump port{color[ffff]}{[0001|ffff]}, the\nPerson Nodon makes the person jump.
059	It's easy when you know how!
059-00	{[0001|1a00]}{color[0400]}Remove the connection{color[ffff]}{[0001|ffff]} between the\nNodon, and see what happens!
059-01	Select the connection...
059-02	and touch this icon to\nmake it disappear.
059-03	OK... Let's go to the game screen\nand see what's changed.
059-04	Press {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]}...
059-05	...\nNothing! The person didn't jump!
059-06	Because we erased the connection\nbetween the Nodon, pressing  no longer\ncauses the person to jump.
059-07	Go back to the program screen.
059-08	Yeah! No connection, no jumping!\nThat's how it works!
059-09	That's right! If there's no connection,\nthen {[0001|1a00]}{color[0400]}the signal won't reach{color[ffff]}{[0001|ffff]} the\nPerson Nodon when  is pressed.
059-10	So that's why the person didn't\njump when you pressed .
059-11	Could you {[0001|1a00]}{color[0400]}reconnect{color[ffff]}{[0001|ffff]} the\n{[0001|1a00]}{color[0400]}Button Nodon {color[ffff]}{[0001|ffff]}to the\n{[0001|1a00]}{color[0400]}Person Nodon{color[ffff]}{[0001|ffff]} please?
059-12	Oh!\nThere it is! I'm getting a signal\nfrom the Button Nodon again!
060	{[0001|1a00]}{color[0400]}Connecting Nodon together{color[ffff]}{[0001|ffff]} is one\nof the most important parts of\nGame Builder Garage.
061	In fact, I'd say it's the most\nfundamental aspect of working\nwith Nodon, so remember that!
062	OK, let's check it out\non the game screen!
063	Press {[0001|1a00]}{color[0400]} {color[ffff]}{[0001|ffff]}to make the\nperson jump.
064	Over on the other side, the\nNodon are toiling away to\nmake the program work.
065	Once you understand how things\nwork in the background, you really\nstart to look at them differently, huh?
065-01	That's what makes\nprogramming fun!
066	OK, back to the program screen!
067	Hey, {[0201]}!\nYou remember us, don't you?
068	You'll be seeing a lot\nof us if you're going to be\nbuilding games.
069	Well, I'm looking forward to it!
070	Yeah!\nI can hardly contain myself!
Guidebook_BreakAndRetry.msbt
000	Hello hello!
001	As you can see, there's a\n{[0001|1a00]}{color[0400]}person{color[ffff]}{[0001|ffff]} and a {[0001|1a00]}{color[0400]}box{color[ffff]}{[0001|ffff]} on the\ngame screen at the moment.
002	You can use {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]} to move\nthe figure around. Try running\ninto the {[0001|1a00]}{color[0400]}box {color[ffff]}{[0001|ffff]}and {[0001|1a00]}{color[0400]}breaking{color[ffff]}{[0001|ffff]} it.
004	A few moments after the {[0001|1a00]}{color[0400]}box{color[ffff]}{[0001|ffff]} breaks,\nthe game restarts by itself, as though\nyou'd pressed {[0001|1a00]}{color[0400]}Retry{color[ffff]}{[0001|ffff]}!
005	That means that, if you {[0001|1a00]}{color[0400]}break\nthe box{color[ffff]}{[0001|ffff]}, you can {[0001|1a00]}{color[0400]}retry {color[ffff]}{[0001|ffff]}automatically.
008	Allow me to explain\nhow this is done.
009	Let's head over to\nthe {[0001|1a00]}{color[0400]}program screen{color[ffff]}{[0001|ffff]}.
010	My, my!\nIf it isn't {[0201]}!
011	Do you have something for us\nto do or what? I've got important\nplaces to be, you know!
012	Oh, lighten up! See, {[0201]}\nwants to learn how to {[0001|1a00]}{color[0400]}retry automatically\nwhen a box breaks{color[ffff]}{[0001|ffff]}. Don't you, hon?
013	Not gonna happen. That's far too\ncomplicated for young 'uns.
014	Hey, that's not true at all!\nIf anyone can do it, I bet\n{[0201]} can!
015	Ugh. You're probably right...\nI'm sure {[0201]}\ncan manage.
016	Oh fiddlesticks, I've been rude\nagain, haven't I? If only I could\nturn back time and take it back...
017	I suppose there's nothing to do about it.\nI'll just have to use my precious time to\nteach you.
018	We'll all do it together!
019	Listen up, darlin'. First, we'll\ngive you an overview of the\nwhole kit and caboodle.
020	I'm up first, of course!\nI always HAVE been in the limelight.\n{[0001|1a00]}{color[0400]}Object-Break Nodon{color[ffff]}{[0001|ffff]}, at your service.
021	I output a {[0001|1a00]}{color[0400]}signal {color[ffff]}{[0001|ffff]}when a\n{[0001|1a00]}{color[0400]}box breaks {color[ffff]}{[0001|ffff]}in the game.
022	And I'm the ever-punctual\n{[0001|1a00]}{color[0400]}Timer Nodon{color[ffff]}{[0001|ffff]}.
023	When I receive a {[0001|1a00]}{color[0400]}signal{color[ffff]}{[0001|ffff]}, I {[0001|1a00]}{color[0400]}wait\nprecisely one second{color[ffff]}{[0001|ffff]} and then send\na {[0001|1a00]}{color[0400]}signal{color[ffff]}{[0001|ffff]} along to the Retry Nodon.
024	And this grizzled old codger is the\n{[0001|1a00]}{color[0400]}Retry Nodon{color[ffff]}{[0001|ffff]}. I've seen a lot in my time,\nand most of it I wish I could do over...
025	When I receive a signal,\nI {[0001|1a00]}{color[0400]}restart the game{color[ffff]}{[0001|ffff]}.
026	The {[0001|1a00]}{color[0400]}Object-Break Nodon{color[ffff]}{[0001|ffff]}, the\n{[0001|1a00]}{color[0400]}Timer Nodon{color[ffff]}{[0001|ffff]} and the {[0001|1a00]}{color[0400]}Retry Nodon\n{color[ffff]}{[0001|ffff]}each have an important job to do.
027	What's more, {[0001|1a00]}{color[0400]}each Nodon{color[ffff]}{[0001|ffff]} does their job\nin a specific order. One thing triggers\nanother. It's beautiful, if you ask me.
028	You do flatter us, Alice!\nI think I'm blushing.
029	That's all for now. You need\nto take it from here and learn\nwhat you can. Don't be shy!
030	As I already said, I, the fabulous\n{[0001|1a00]}{color[0400]}Object-Break Nodon{color[ffff]}{[0001|ffff]}, am the\nfirst to take the stage...
031	If an {[0001|1a00]}{color[0400]}object breaks {color[ffff]}{[0001|ffff]}on the game screen,\nI let others know by sending them a\n{[0001|1a00]}{color[0400]}signal{color[ffff]}{[0001|ffff]}. That's just the kind of Nodon I am.
033	That's right! The Object-Break Nodon\nuses a {[0001|1a00]}{color[0400]}connection{color[ffff]}{[0001|ffff]} like this one to send\na {[0001|1a00]}{color[0400]}signal{color[ffff]}{[0001|ffff]} to another Nodon.
034	Here's an important thing to remember:\nI don't send a signal if {[0001|1a00]}{color[0400]}an object I'm set\nto check for{color[ffff]}{[0001|ffff]} doesn't break.
035	You can decide exactly what I check\nfor on my {[0001|1a00]}{color[0400]}settings screen{color[ffff]}{[0001|ffff]}, sugar.
036	Let's check it out for\nourselves. Start by selecting\nthe {[0001|1a00]}{color[0400]}Object-Break Nodon{color[ffff]}{[0001|ffff]}.
037	Then, open the settings screen here.
038	Select {[0001|1a00]}{color[0400]}Check What?{color[ffff]}{[0001|ffff]}
039	Here you can choose what the Nodon checks\nfor. In other words, if {[0001|1a00]}{color[0400]}what's selected breaks\n{color[ffff]}{[0001|ffff]}in the game, the Nodon will send a signal.
040	Right now, {[0001|1a00]}{color[0400]}Box{color[ffff]}{[0001|ffff]} is selected.
041	Let's test this by {[0001|1a00]}{color[0400]}disabling Box{color[ffff]}{[0001|ffff]} in the list.
042	Once that's done, the Nodon is\n{[0001|1a00]}{color[0400]}not currently set to check for anything{color[ffff]}{[0001|ffff]}.
043	Go ahead and close this screen.
044	While you're at it, close\nthe settings screen too.
045	Let's take a look\non the {[0001|1a00]}{color[0400]}game screen{color[ffff]}{[0001|ffff]}.
046	Use {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]} to control the person\nand break the {[0001|1a00]}{color[0400]}box{color[ffff]}{[0001|ffff]} again.
047	See? No {[0001|1a00]}{color[0400]}retry{color[ffff]}{[0001|ffff]} was triggered!
051	Let's go back to\nthe {[0001|1a00]}{color[0400]}program screen{color[ffff]}{[0001|ffff]}.
052	How was it, hon?\nThe game didn't reset, did it?
053	That's because I'm {[0001|1a00]}{color[0400]}not set to\ncheck for any broken objects{color[ffff]}{[0001|ffff]}.
123	I don't send a {[0001|1a00]}{color[0400]}signal{color[ffff]}{[0001|ffff]} any longer,\nnot even if a box is broken.
122	And because I don't send a signal,\nthe {[0001|1a00]}{color[0400]}Retry Nodon{color[ffff]}{[0001|ffff]} isn't told to trigger\na retry. Simple as pie.
054	It's a little tough, not getting to do\nanything. You know, I love that shattering\nsound {[0001|1a00]}{color[0400]}the moment an object breaks{color[ffff]}{[0001|ffff]}.
055	Won't you change my settings again,\n{[0201]}? Pretty please?
056	Er, go ahead and select the\nObject-Break Nodon again.
057	Open the settings screen.
058	Then, open the\n{[0001|1a00]}{color[0400]}Check What?{color[ffff]}{[0001|ffff]} menu.
059	This time, let's {[0001|1a00]}{color[0400]}enable{color[ffff]}{[0001|ffff]} {[0001|1a00]}{color[0400]}Sphere{color[ffff]}{[0001|ffff]}.
060	Close this menu again...
061	Then close the\nsettings screen too.
115	Now the Object-Break Nodon will check\nfor broken {[0001|1a00]}{color[0400]}spheres{color[ffff]}{[0001|ffff]}...but we haven't\nactually got any {[0001|1a00]}{color[0400]}spheres{color[ffff]}{[0001|ffff]} in the game.
116	That means it's time to bring\nin a {[0001|1a00]}{color[0400]}sphere Object Nodon{color[ffff]}{[0001|ffff]}!
119	Ayup. It's me, Object Nodon.\nGenerating a {[0001|1a00]}{color[0400]}sphere{color[ffff]}{[0001|ffff]} this time.
062	Glad to have you here, Object Nodon!\nNow, let's go to the {[0001|1a00]}{color[0400]}game screen{color[ffff]}{[0001|ffff]}.
063	Use {[0001|1a00]}{color[0400]} {color[ffff]}{[0001|ffff]}to move the person\nand break the {[0001|1a00]}{color[0400]}sphere{color[ffff]}{[0001|ffff]}.
065	The Object-Break Nodon is currently\nchecking for {[0001|1a00]}{color[0400]}broken spheres{color[ffff]}{[0001|ffff]}...
066	So that's why a retry was\ntriggered when the {[0001|1a00]}{color[0400]}sphere broke{color[ffff]}{[0001|ffff]}!
068	Meanwhile, the Object-Break\nNodon {[0001|1a00]}{color[0400]}isn't set to check for boxes{color[ffff]}{[0001|ffff]},\nso breaking that {[0001|1a00]}{color[0400]}doesn't trigger a retry{color[ffff]}{[0001|ffff]}.
069	Go ahead and test\nit out if you want.
070	When you're ready, come on\nback to the {[0001|1a00]}{color[0400]}program screen{color[ffff]}{[0001|ffff]}.
071	Welcome back, hon! Looks like\nyou got that {[0001|1a00]}{color[0400]}retry{color[ffff]}{[0001|ffff]} working.
072	I'm so happy I've got a broken\n{[0001|1a00]}{color[0400]}sphere{color[ffff]}{[0001|ffff]} to keep me company again!
073	That's what I'm for, after all—setting\na {[0001|1a00]}{color[0400]}reaction{color[ffff]}{[0001|ffff]} you want to occur {[0001|1a00]}{color[0400]}when\nsomething breaks{color[ffff]}{[0001|ffff]}.
074	Ahem.
075	Is it MY turn yet? We've gone\nover on time, you know,\nand I really can't have that...
076	Oh, don't get bent out of shape,\nTimer! There's no need to hurry.
121	Easy for you to say!\nBut whatever. I'll be brief.
077	I'm a {[0001|1a00]}{color[0400]}Timer Nodon{color[ffff]}{[0001|ffff]}.
078	It's my job to {[0001|1a00]}{color[0400]}wait for the set\namount of time{color[ffff]}{[0001|ffff]}. It's an important\njob, and someone has to do it!
079	...That's all.
080	Hold on just a second! You need\nto explain it better. There's such a\nthing as being TOO brief, you know.
081	Go on, bud, try again. This is\na rare opportunity. I wish I\ncould try again more often...
082	Well, honestly! I'll explain\nagain, just this once.
083	My job is to {[0001|1a00]}{color[0400]}receive a\nsignal, and then send a\nsignal to another Nodon{color[ffff]}{[0001|ffff]}.
084	Before I send the signal, though,\nI wait a {[0001|1a00]}{color[0400]}set amount of time{color[ffff]}{[0001|ffff]}.
085	You can look at the time in my settings\nif you'd like, {[0201]},\nas long as you're quick about it.
086	Select the {[0001|1a00]}{color[0400]}Timer Nodon{color[ffff]}{[0001|ffff]},\nand don't let it rush you.\nTake as long as you need.
087	Open the settings screen.
088	Under {[0001|1a00]}{color[0400]}Output after How Many Seconds?{color[ffff]}{[0001|ffff]}\nhere, you can set how long the Timer Nodon\nwill wait before sending a signal.
089	It's currently set to {[0001|1a00]}1.00{[0001|ffff]}. That means\nthe Nodon will wait for one second.
090	Let's test this setting out\nby changing it to {[0001|1a00]}{color[0400]}5.00{color[ffff]}{[0001|ffff]}.
091	Good! Now, close the settings screen.
092	Wait, {[0001|1a00]}5.00{[0001|ffff]}?! FIVE whole seconds?\nThat's basically an eternity!
093	Well, I suppose it's worth\ntesting. Just this once.
094	Er, yes. Let's head to the\n{[0001|1a00]}{color[0400]}game screen{color[ffff]}{[0001|ffff]} to do just that.
095	Try breaking the {[0001|1a00]}{color[0400]}sphere\n{color[ffff]}{[0001|ffff]}on the left-hand side.
096	Dum de dum...
097	Do do do doooo... Finally!
098	Wow, if you set the Timer Nodon\nto {[0001|1a00]}5.00{[0001|ffff]}, it really does feel like a long\ntime before the retry kicks in, doesn't it?
099	Anyway, I think that's a good\nexample of how the Nodon works!
100	Let's go back to the {[0001|1a00]}{color[0400]}program screen{color[ffff]}{[0001|ffff]}.\nIt feels like we've been gone for ages!
101	I hope you understand just\nhow important I am now.
102	If you want {[0001|1a00]}{color[0400]}something to happen\nafter a set amount of time{color[ffff]}{[0001|ffff]}...\nwell, you know who to call.
103	I'm last, as usual. No one ever\nuses ol' {[0001|1a00]}{color[0400]}Retry Nodon{color[ffff]}{[0001|ffff]} unless\nthey want to fix a mistake...
104	My job is to {[0001|1a00]}{color[0400]}reset the game\n{color[ffff]}{[0001|ffff]}when I receive a {[0001|1a00]}{color[0400]}signal{color[ffff]}{[0001|ffff]}.
105	So many regrets...\nSo do-overs left undone-over.
106	Such a simple job. I wish I'd been born a more\nexciting type of Nodon...someone with dreams...\nThen things might have been different...
107	Oh, honey! Stop with the doom and\ngloom! You've got a job to do, and\nyou do it well. Be proud of yourself!
108	Without {[0001|1a00]}{color[0400]}you{color[ffff]}{[0001|ffff]}, no one would be able\nto {[0001|1a00]}{color[0400]}play a game more than once{color[ffff]}{[0001|ffff]}.\nIf that's not important, I don't know what is.
109	Yes, please respect the\nvalue of your own work!\nGoodness knows I do.
110	Thank you... Really...\nYou're good folks.
111	Now {[0201]}, hon, remember\nhow well the three of us work together.\nWe might come in handy in the future.
112	I hope you've got the hang of\n{[0001|1a00]}{color[0400]}how to retry when an object breaks{color[ffff]}{[0001|ffff]}.
113	Of course, there are all\nkinds of other things the\nthree of us can do together.
114	Try using us, OK? And don't\nbe afraid to retry if you have to.\nI always wish I could...
Guidebook_BreakCounter.msbt
00.00.Alice	Hello hello!\nGood to see you, {[0201]}!
00.01.Alice	On the game screen, just to the right\nof the {[0001|1a00]}{color[0400]}Person{color[ffff]}{[0001|ffff]}, you see there's an\n{[0001|1a00]}{color[0400]}object with a number{color[ffff]}{[0001|ffff]}, right?
00.13.Alice	Try {[0001|1a00]}{color[0400]}punching{color[ffff]}{[0001|ffff]} the number object.\nUse {color[0400]}{[0001|1a00]} {[0001|ffff]}{color[ffff]}to move the Person around\nand {color[0400]}{[0001|1a00]} {[0001|ffff]}{color[ffff]}to punch.
00.14.Alice	When you punched the\nobject, the number on it\nchanged from zero to one!
00.15.Alice	Let's go to the program screen\nand see how it works.
01.00.Number	Hello, {[0201]}!
01.00-01.Number	I suppose you want to know {[0001|1a00]}{color[0400]}why\nthe number went up when the\nobject was punched{color[ffff]}{[0001|ffff]}. Am I right?
01.01.Number	Well, the number in the\nnumber object is actually the\noutput of the {[0001|1a00]}{color[0400]}AND Nodon{color[ffff]}{[0001|ffff]}.
01.02.And	Well, well...\nIf it isn't {[0201]}!
01.03.And	When I receive input to both\nmy ports, I output 1.00! Uh-huh!
01.03-01.And	And the Nodon that supplies\nmy input is none other than...
01.04.Button	Me! Button Nodon!\nBoo! Ha ha!
01.05.Button	If {color[0400]}{[0001|1a00]} {[0001|ffff]}{color[ffff]}is pressed, then I output\na signal to the AND Nodon.
01.08.Button	That's not all! I send a signal\nto the Person Nodon too!
01.09.Human	That's right! I get the\nButton Nodon's signal\nin my {[0001|1a00]}{color[0400]}action port{color[ffff]}.{[0001|ffff]}
01.10.Human	And when I get that signal,\nI perform an action, in\nthis case, a {[0001|1a00]}{color[0400]}punch{color[ffff]}{[0001|ffff]}!
01.12.Human	Pow! Biff! Kahsmacky!
01.13.Sensor	Meep!
01.15.Sensor	Please don't shock\nme like that!
01.16.Sensor	I'm the other Nodon that's sending\na signal over to the AND Nodon.
01.17.Sensor	I'm {[0001|1a00]}{color[0400]}connected{color[ffff]}{[0001|ffff]} to the Person Nodon. In the game,\nI'm stuck {[0001|1a00]}{color[0400]}to the front of the Person{color[ffff]}{[0001|ffff]}. It's my job to\nwatch out for {[0001|1a00]}{color[0400]}when the Person touches a box{color[ffff]}{[0001|ffff]}.
01.17-01.Sensor	Did you see the white frame stuck to\nthe Person over on the game screen?
01.17-02.Sensor	When that {[0001|1a00]}{color[0400]}touches the box{color[ffff]}{[0001|ffff]},\nit's my cue to output a signal.
01.18.Number	That's because my {[0001|1a00]}Object Shape{[0001|ffff]}\nsetting is currently set to {[0001|1a00]}{color[0400]}Box{color[ffff]}{[0001|ffff]}.
01.21.Sensor	Which means that, if the white\nframe {[0001|1a00]}{color[0400]}touches a number object{color[ffff]}{[0001|ffff]},\nI send a signal to the AND Nodon!
01.22.And	And that's when I'll say, "Upper signal,\npresent and correct!"
01.26.Button	And when {color[0400]}{[0001|1a00]}{[0001|ffff]}{color[ffff]} is pressed,\nI'll output my signal too.\nKapow!
01.27.Sensor	In other words, {[0001|1a00]}{color[0400]}when I'm touching\nthe number object{color[ffff]}{[0001|ffff]} and {color[0400]}{[0001|1a00]} is {[0001|ffff]}{color[ffff]}{[0001|1a00]}{color[0400]}pressed{color[ffff]}{[0001|ffff]}...
01.28.And	Upper signal, present and correct!\nLower signal, present and correct!\nOutput 1.00!
01.28-01.Number	And when I get an input\nof 1.00, I increase the\nnumber from zero to one!
01.29.Human	At the same time,\nthe Person is {[0001|1a00]}{color[0400]}punching{color[ffff]}{[0001|ffff]}...
01.30.Number	Which makes it look like the\nnumber on the object changes from\n{[0001|1a00]}{color[0400]}zero to one {color[ffff]}{[0001|ffff]}when it's punched!
01.31.Number	It's tricky, but does that make sense?
01.33.Button	The count goes up when the punch\nhits, but it's lacking a little BOOM!\nDon't you think? Or a BAM! Maybe?
01.34.Human	Yeah! If I punch something,\nI expect it to break, peeps!
01.35.Number	If we make it so that the number\nobject {[0001|1a00]}{color[0400]}breaks when it gets punched{color[ffff]}{[0001|ffff]},\nwe'd be able to see the smash.
01.37.And	Huh! This requires the services\nof a Nodon {[0001|1a00]}{color[0400]}that can smash things\n{color[ffff]}{[0001|ffff]}up real good! Uh-huh!
01.38.Alice	That's right! Let's call up\nthe {[0001|1a00]}{color[0400]}Destroy-Object Nodon{color[ffff]}{[0001|ffff]}.
01.39.Destroy	Hello! Is there a {[0001|1a00]}{color[0400]}box{color[ffff]}{[0001|ffff]} around here\nthat needs smashin'? Heh.
01.40.Destroy	Nice... {color[0400]}{[0001|1a00]}Any boxes that I\ntouch{[0001|ffff]}{color[ffff]} will be broken.
01.41.Sensor	Meep... D-don't get carried away,\nDestroy-Object Nodon! You {[0001|1a00]}{color[0400]}can only\nbreak the box when the punch occurs{color[ffff]}{[0001|ffff]}!
01.43.Destroy	Oh...is that right? Very well... Suppose\nI'd better reign it in a bit... Bwahaha!\nJust let me know the conditions!
01.44.Destroy	Don't delay...\nOr something might\nget broken... Heh heh.
01.45.Alice	OK, so now we know how to proceed!\nWe need to set the {[0001|1a00]}{color[0400]}activation conditions\nfor the Destroy-Object Nodon{color[ffff]}{[0001|ffff]}.
01.46.Alice	Connect the {[0001|1a00]}{color[0400]}AND Nodon's\noutput port {color[ffff]}{[0001|ffff]}to the {[0001|1a00]}{color[0400]}Destroy-Object\nNodon's destroy port{color[ffff]}{[0001|ffff]}.
01.47.Alice	Now, {[0001|1a00]}{color[0400]}when a punch hits the box{color[ffff]}{[0001|ffff]},\nthe number object will break.
01.48.Alice	OK! Let's confirm that\non the game screen.
02.02.Alice	Move the Person with {color[0400]}{[0001|1a00]}{[0001|ffff]}{color[ffff]},\nand use {color[0400]}{[0001|1a00]} {[0001|ffff]}{color[ffff]}to punch the box.\nSee what happens!
02.03.Alice	It broke!
02.04.Alice	Of course, it was the Destroy-Object\nNodon that actually took care of the\nbreaking here...
02.05.Alice	But on-screen, it looked like\nit was the Person's punch that\nbroke the number object.
02.06.Alice	Hit {color[0400]}{[0001|1a00]}Retry{[0001|ffff]}{color[ffff]}, and test it\nout one more time.
02.07.00.Alice	The number object broke\nwhen it was punched...
02.07.01.Alice	OK... Let's go to the program screen.
03.00.Destroy	Bwahaha!\nThat was just...smashing!
03.03.Button	But it only takes a single\npunch! That's no fun.\nI only get pressed once.
03.04.Sensor	Meep... Maybe you could change it so that\nthe Destroy-Object Nodon only smashes\nthe object after multiple punches?
03.05.Destroy	So you think I need to\n"cool it" a bit, eh?
03.05-01.Sensor	Meep!
03.06.Destroy	Smash it, don't smash it, one punch,\ntwo punches... Just holler at me when\nyou've made up your mind!
03.07.Number	In that case you'll want to somehow send\na signal to the Destroy-Object Nodon {[0001|1a00]}{color[0400]}after\nmultiple punches{color[ffff]}{[0001|ffff]}, instead of just one.
03.08.And	Then you'll have to count the\n{[0001|1a00]}{color[0400]}number of times I transmit the\nsignal{color[ffff]}{[0001|ffff]}.
03.09.Alice	OK! Let's set things up so that {[0001|1a00]}{color[0400]}the{color[ffff]}{[0001|ffff]}\n{[0001|1a00]}{color[0400]}breakage happens after three punches{color[ffff]}{[0001|ffff]}.
03.10.Alice	First, select the connection\nbetween the AND Nodon and\nthe Destroy-Object Nodon...
03.11.Alice	Then delete it.
03.12.Alice	Now select the connection to\nthe Number-Object Nodon...
03.13.Alice	and delete it.
03.14.Alice	We need to count the number of times that\nsomething happens... So let's call up the\n{[0001|1a00]}{color[0400]}Counter Nodon{color[ffff]}{[0001|ffff]} to help us with that.
03.15.Counter	IF IT'S COUNTING YOU NEED,\nYOU CAN COUNT ON ME.\nHAHAHA.
03.15-01.Counter	FOR EXAMPLE, THE DESTROY-\nOBJECT NODON HAS SAID "HEH"\nEXACTLY THREE TIMES SO FAR.
03.15-02.Destroy	Nice to know you're paying\nme so much attention... Heh.
03.15-03.Sensor	Meep!
03.16.Counter	VERY WELL. I WILL COUNT\nTHE {[0001|1a00]}{color[0400]}NUMBER OF TIMES{color[ffff]}{[0001|ffff]} THE\nAND NODON {[0001|1a00]}{color[0400]}OUTPUTS 1.00{color[ffff]}{[0001|ffff]}.
03.16-01.Alice	Put another way, the Counter\nNodon will count {[0001|1a00]}{color[0400]}how many\ntimes the number object is punched{color[ffff]}{[0001|ffff]}.
03.17.Number	Whatever the Counter Nodon\ncounts, I'll display, OK?
03.22.Alice	Next, we'll need to {[0001|1a00]}{color[0400]}compare the output\nof the Counter Nodon with three{color[ffff]}{[0001|ffff]}.
03.23.Alice	To help us with that,\nlet's call a {[0001|1a00]}{color[0400]}Constant Nodon{color[ffff]}{[0001|ffff]}\nand a {[0001|1a00]}{color[0400]}Comparison Nodon{color[ffff]}{[0001|ffff]}.
03.24.Constant	Behold, it is I, the Constant Nodon!\nI will output 3.00, no more, no less.\nUntil the end of time!
03.25.Compare	Hello, {[0201]}!\nIt's me! The Comparison Nodon!
03.26.Compare	I'll be comparing the\nConstant Nodon's output...
03.27.Compare	and the Counter Nodon's output!
03.28.Compare	Are they {[0001|1a00]}{color[0400]}the same{color[ffff]}{[0001|ffff]}? Are they?\nThe curiosity is driving me nuts!
03.28-01.Compare	Well, if they ARE {[0001|1a00]}{color[0400]}the same{color[ffff]}{[0001|ffff]},\nyou'd better believe I'll be\noutputting a signal!
03.28-01.Alice	Put a little more clearly, {[0001|1a00]}{color[0400]}when the\nnumber object is punched three times{color[ffff]}{[0001|ffff]},\nthe Comparison Nodon will output a signal.
03.29.Alice	The last thing we need to do here is connect\nthe {[0001|1a00]}{color[0400]}Comparison Nodon's output port{color[ffff]}{[0001|ffff]} to\nthe {[0001|1a00]}{color[0400]}Destroy-Object Nodon's destroy port{color[ffff]}{[0001|ffff]}.
03.30.Alice	Aaand we're done! {[0001|1a00]}{color[0400]}The breakage will\nnow happen after three punches{color[ffff]}{[0001|ffff]}.
03.31.Alice	Let's see how that looks\non the game screen.
04.00.Alice	The number object is showing {[0001|1a00]}{color[0400]}the\nnumber of punches that have hit{color[ffff]}{[0001|ffff]}.
04.01.Alice	To test this, move the Person\nwith {color[0400]}{[0001|1a00]}{[0001|ffff]}{color[ffff]}, then use {color[0400]}{[0001|1a00]}{[0001|ffff]}{color[ffff]} to punch\nthe number object {[0001|1a00]}{color[0400]}three times{color[ffff]}{[0001|ffff]}.
04.02.Alice	The third punch broke it!
04.03.Alice	Try to imagine what each Nodon on the\nprogram screen is doing and how they're\nall working together. While you do that...
04.04.Alice	Hit {[0001|1a00]}{color[0400]}Retry{color[ffff]}{[0001|ffff]}, and give it another shot.
04.05.00.Alice	The number object broke\nafter the third punch...
04.05.01.Alice	OK... Let's go to the program screen.
05.00.Number	Oh... Huh?\nI'm feeling a bit sturdier\nall of a sudden.
05.02.Alice	Things have been pretty\ncomplicated this time round.
05.03.Alice	But you got the gist of how to break\nsomething after multiple punches, right?
05.04.Sensor	I'm connected to the front of the\nPerson Nodon, remember?
05.07.And	Uh-huh! Both the input from the punch and\nthe response from Touch-Sensor Nodon are\npresent and correct! Output signal!
05.08.Counter	I COUNT EVERYTHING\nFROM THE AND NODON.
05.09.Constant	Er, 3.00, huh? Right?\nIs it 3.00?
05.10.Number	In other words, three punches, and I'll be\nsmashed by the Destroy-Object Nodon.\nIt's curtains for me!
05.12.Alice	This is just one example of the\ncomplex effects you can achieve\nby combining different Nodon.
05.13.Alice	Well, we're pretty much done here.
05.14.Human	See you soon!
05.15.Destroy	Heh... Bye for now...
05.16.Counter	DESTROY-OBJECT NODON SAID\n"HEH" FIVE TIMES IN TOTAL!
Guidebook_Calculation.msbt
002	A box that mysteriously moves to the right...
003	This box has been programmed to move\n{color[0400]}{[0001|1a00]}1.00 meter per second{[0001|ffff]}{color[ffff]}.
004	Let's see if we can't change that movement\nspeed using {color[0400]}{[0001|1a00]}calculation{[0001|ffff]}{color[ffff]}.
005	OK then, let's head to the program screen.
006	Hey, {[0201]}!\nOut for a run, eh?
009	I, {[0001|1a00]}{color[0400]}Constant Nodon{color[ffff]}{[0001|ffff]}, am at a pleasant and\nstable {color[0400]}{[0001|1a00]}1.00{[0001|ffff]}{color[ffff]}.
009-001	And I'm sending a steady 1.00 over to\n{[0001|1a00]}{color[0400]}Moving-Object Nodon{color[ffff]}{[0001|ffff]}.
010	So if Moving-Object Nodon is receiving a signal\nof {[0001|1a00]}{color[0400]}1.00{color[ffff]}{[0001|ffff]}, then the box moves {[0001|1a00]}{color[0400]}1.00 meter per \nsecond{color[ffff]}{[0001|ffff]}!
011	And that's barely a gentle jog, huh,\n{[0201]}? We can do better\nthan that!
011-01	Let's get those muscles working!\nPut on some speed!
011-02	Usually just increasing Constant Nodon's number\nwould be enough to speed it up, but...
011-03	Let's try using {[0001|1a00]}{color[0400]}Calculator Nodon{color[ffff]}{[0001|ffff]} to change\nMoving-Object Nodon's input, shall we?
011-0301	First, select the connection between\nMoving-Object Nodon and Constant Nodon.
011-0302	Good. Now get rid of it.
011-04	It's time to call up {[0001|1a00]}{color[0400]}Calculator Nodon{color[ffff]}{[0001|ffff]}.
020	I AM {color[0400]}{[0001|1a00]}CALCULATOR NODON{[0001|ffff]}{color[ffff]}, HERE TO\nCALCULATE YOUR NUMBERS.
021	I AM A HIGHLY EFFICIENT CALCULATOR\nPROFICIENT IN ALL BASIC ARITHMETIC\nFUNCTIONS.
022	The basic arithmetic functions would be\n{[0001|1a00]}{color[0400]}addition, subtraction, multiplication, and division{color[ffff]}{[0001|ffff]},\nof course.
023	I HAVE {color[0400]}{[0001|1a00]}TWO{[0001|ffff]}{color[ffff]} INPUT PORTS.
024	NUMBERS GO INTO THE PORTS.
025	THE TWO NUMBERS ARE THEN USED IN\nCALCULATIONS.
026	THE RESULT OF THE CALCULATION WILL\nOUTPUT HERE.
028	THE TIME REQUIRED TO PERFORM A\nCALCULATION IS BUT A MOMENT.
029	I AM A VERY GOOD CALCULATOR.
030	That means you can do calculations involving\n{color[0400]}{[0001|1a00]}two numbers{[0001|ffff]}{color[ffff]}.
031	AFFIRMATIVE.
032	I AM CURRENTLY PROGRAMMED FOR\n{color[0400]}{[0001|1a00]}ADDITION{[0001|ffff]}{color[ffff]}.
033	OK! Let's give Calculator Nodon a\ncouple of inputs to {[0001|1a00]}{color[0400]}add up{color[ffff]}{[0001|ffff]}.
033-03	Let's call up another Constant Nodon.
033-04	I am outputting a balmy and eternal 4.00.
034	Connect the top Constant Nodon to the\n{[0001|1a00]}{color[0400]}upper input port{color[ffff]}{[0001|ffff]}.
035	I am sending a perpetual 1.00 into the world.
036	And connect the bottom Constant Nodon to the\n{[0001|1a00]}{color[0400]}lower input port{color[ffff]}{[0001|ffff]}.
037	Still, and forever, emitting a harmonious 4.00.
038	I HAVE DETECTED TWO NUMERICAL INPUTS.\nBEGINNING CALCULATION...
039	1.00 + 4.00 = {color[0400]}{[0001|1a00]}5.00{[0001|ffff]}{color[ffff]}.\nEND OF CALCULATION.
040	Connect Calculator Nodon's output to\nMoving-Object Nodon's {[0001|1a00]}{color[0400]}X port{color[ffff]}{[0001|ffff]}.
042	Now the {color[0400]}{[0001|1a00]}result of the sum{[0001|ffff]}{color[ffff]} should have been\nconverted into the {color[0400]}{[0001|1a00]}object's movement speed{[0001|ffff]}{color[ffff]}!
043	How will it move now? Let's go back to the\ngame screen and find out.
044	Well... It's faster than before.
045	If you want to see it again, then just press {[0001|1a00]}{color[0400]}Retry{color[ffff]}{[0001|ffff]}.\n
046	1.00 + 4.00 = 5.00.\nSo the box is moving at a speed of\n{color[0400]}{[0001|1a00]}5.00 meters per second{[0001|ffff]}{color[ffff]}.
047	Let's try another kind of calculation.
048	Ahhhh! Nothing like a good sprint!
048-01	Join me for a quick marathon, would you,\n{[0201]}?
049	We've looked at addition, so now let's try some\n{[0001|1a00]}{color[0400]}subtraction{color[ffff]}{[0001|ffff]}.
050	MY {color[0400]}{[0001|1a00]}ARITHMETIC FUNCTION{[0001|ffff]}{color[ffff]} CAN BE CHANGED\nIN MY SETTINGS.
051	Select the Calculator Nodon.
052	Then open the settings.
053	And there are the {[0001|1a00]}four arithmetic functions{[0001|ffff]}:\n{[0001|1a00]}{color[0400]}addition, subtraction, multiplication, and division{color[ffff]}{[0001|ffff]}.
054	Select the {[0001|1a00]}{color[0400]}-{color[ffff]}{[0001|ffff]} for subtraction.
055	Now close the settings.
056	I AM NOW PRIMED FOR {[0001|1a00]}{color[0400]}SUBTRACTION{color[ffff]}{[0001|ffff]}.
057	1.00 - 4.00 = {[0001|1a00]}{color[0400]}-3.00{color[ffff]}{[0001|ffff]}. END OF CALCULATION.
058	So, that means Moving-Object Nodon is receiving\nan input of {[0001|1a00]}{color[0400]}-3.00{color[ffff]}{[0001|ffff]}.
059	Let's go to the game screen to see what\nhappens to the box's movement when it \ngets a {[0001|1a00]}{color[0400]}negative number{color[ffff]}{[0001|ffff]} as input.
060	It's...moving to the left.
061	The calculation we put in was\n1.00 - 4.00 = {[0001|1a00]}{color[0400]}-3.00{color[ffff]}{[0001|ffff]}.
062	So it must be moving at a speed of\n{color[0400]}{[0001|1a00]}-3.00 meters per second{[0001|ffff]}{color[ffff]}.
063	Putting in a {[0001|1a00]}{color[0400]}negative number{color[ffff]}{[0001|ffff]} makes it move in the\n{[0001|1a00]}{color[0400]}opposite direction{color[ffff]}{[0001|ffff]}.
064	Pop back to the program screen.
064-01	Well I never! Running in the opposite direction is\na breath of fresh air!
065	Up until now the calculations have been done\nusing Constant Nodon.
066	Next, let's try making the box move using\ncalculations based on {color[0400]}{[0001|1a00]}control stick input{[0001|ffff]}{color[ffff]}.
067	Bye for now, Constant Nodon...
068	And hello {color[0400]}{[0001|1a00]}Stick Nodon{[0001|ffff]}{color[ffff]}!
069	Boing!
070	Wait, you can do calculations with\ncontrol stick movement?!
071	Constant Nodon gives out a {color[0400]}{[0001|1a00]}number{[0001|ffff]}{color[ffff]} as\na {color[0400]}{[0001|1a00]}signal{[0001|ffff]}{color[ffff]}, yes?
072	In the same way, the Stick Nodon\nsends out a {[0001|1a00]}{color[0400]}number{color[ffff]}{[0001|ffff]} based on the\n{[0001|1a00]}{color[0400]}movement of the control stick{color[ffff]}{[0001|ffff]}.
073	When I'm totally neutral it's 0.00.
074	Tilt me a little and you get 0.20...
075	Tilt me further and you get 0.50...
076	And when I'm pushed to the limit I'll give you\n1.00!
077	The {[0001|1a00]}{color[0400]}size of the number{color[ffff]}{[0001|ffff]} reflects the force with\nwhich he's tilted, you see.
078	The signal is sent through\nthe wire {[0001|1a00]}{color[0400]}as a number{color[ffff]}{[0001|ffff]}!
080	Connect the Stick Nodon's output port to the\nCalculator Nodon's {color[0400]}{[0001|1a00]}upper input port{[0001|ffff]}{color[ffff]}.
081	I AM NOW RECEIVING MOVEMENT SIGNAL FROM\nA STICK NODON.
082	THE SIGNAL IS A NUMBER.
083	IF IT IS A NUMBER THEN IT CAN BE\nCALCULATED.
083-01	I AM A VERY GOOD CALCULATOR.
084	I think it's time to test out some {[0001|1a00]}{color[0400]}multiplication\n{color[ffff]}{[0001|ffff]}using the control stick inputs, don't you?
084-01	First, set the Constant Nodon to output {[0001|1a00]}{color[0400]}1.00{color[ffff]}{[0001|ffff]}.
085	Select the Constant Nodon.
086	Then open the settings.
087	And set it to {color[0400]}{[0001|1a00]}1.00{[0001|ffff]}{color[ffff]}.
088	Close those settings now.
138	Next, we'll set the Calculator Nodon to {color[0400]}{[0001|1a00]}multiply{[0001|ffff]}{color[ffff]}.
089	Select the Calculator Nodon.
090	Open the settings.
091	And set {[0001|1a00]}Calculation Method{[0001|ffff]} to {[0001|1a00]}{color[0400]}×{color[ffff]}{[0001|ffff]}.
092	Close the settings.
093	I AM CURRENTLY SET TO {color[0400]}{[0001|1a00]}CONTROL\nSTICK MOVEMENT X 1.00{[0001|ffff]}{color[ffff]}.
094	Now you can multiply whatever number you want\nby {[0001|1a00]}{color[0400]}1.00{color[ffff]}{[0001|ffff]}, and it {[0001|1a00]}{color[0400]}won't change{color[ffff]}{[0001|ffff]}.
096	So the movement should stay the same,\nas if the Stick Nodon and the Moving-\nObject Nodon were directly connected.
097	Let's check it on the game screen.
098	Try to move the box left and right using .
099	With the control stick tilted\nall the way, the speed of the\nbox is {[0001|1a00]}{color[0400]}1.00 meters per second{color[ffff]}{[0001|ffff]}.
100	Remember that speed!
101	Go back to the program screen.
137	Shall we see if we can make\nthe box move faster using\ncontrol stick inputs?
102	How do you think we could do that?
103	We know that the higher the number Moving-\nObject Nodon receives, the faster the box moves.
103-01	I think increasing the number Stick Nodon\noutputs by, hmm...{[0001|1a00]}{color[0400]}three times{color[ffff]}{[0001|ffff]} should be enough.
104	Select the Constant Nodon.
105	Open the settings.
106	Change the value to {color[0400]}{[0001|1a00]}3.00{[0001|ffff]}{color[ffff]}.
107	Close the settings again.
108	{color[0400]}{[0001|1a00]}CONTROL STICK MOVEMENT X 3.00{[0001|ffff]}{color[ffff]}.\nTHE MOVEMENT OF THE CONTROL\nSTICK HAS BEEN MULTIPLIED BY THREE.
109	I wonder what it looks like now. Let's see it in\naction on the game screen.
110	See if you can move the box with .
111	Very speedy!
112	Multiplying the Stick Nodon's output\nby three makes the box move {[0001|1a00]}{color[0400]}three\ntimes faster{color[ffff]}{[0001|ffff]}.
113	Go back to the program screen.
114	Lastly, let's test out the {[0001|1a00]}{color[0400]}division{color[ffff]}{[0001|ffff]} function.
115	Select the Calculator Nodon.
116	Open the settings.
117	Change the {[0001|1a00]}Calculation Method{[0001|ffff]} to {[0001|1a00]}{color[0400]}÷{color[ffff]}{[0001|ffff]}.
118	Close the settings.
119	I AM NOW CALCULATING\n{[0001|1a00]}{color[0400]}CONTROL STICK MOVEMENT ÷ 3.00{color[ffff]}{[0001|ffff]}.
120	With the signal divided by 3.00, what do you think\nwill have happened to the {[0001|1a00]}{color[0400]}speed{color[ffff]}{[0001|ffff]}?
121	Let's see if you're right on the game screen.
122	Move the box with .
123	Huh. It's not fast, is it?
124	With the control stick\nmovement divided by {[0001|1a00]}{color[0400]}3.00{color[ffff]}{[0001|ffff]}...
125	it's only {[0001|1a00]}{color[0400]}a third{color[ffff]}{[0001|ffff]} as fast as normal.
126	So now do you see how you can use \nCalculator Nodon to increase or decrease\nStick Nodon's input as much as you want?
126-01	You can use it to make the box go\npretty much as slow or fast as you like!
127	Let's pop back to the program screen.
128	All {[0001|1a00]}{color[0400]}signals{color[ffff]}{[0001|ffff]} are actually {[0001|1a00]}{color[0400]}numbers{color[ffff]}{[0001|ffff]}... 
129	And because they're numbers, you can add,\nsubtract, or calculate them any way you want.
130	Stick Nodon's output is a {[0001|1a00]}{color[0400]}number{color[ffff]}{[0001|ffff]} too.
131	You can calculate it to be large or small.
132	ANY SIGNAL CAN BE ADDED OR SUBTRACTED\nAS YOU WISH. WE LIVE IN A FREE WORLD.
133	AND I AM A VERY GOOD CALCULATOR.
134	So... Can you can calculate whatever\nI'm thinking?
135	THAT IS NOT HOW MATH WORKS.
Guidebook_CarNode.msbt
00.00.Alice	Hello there, {[0201]}!
00.01.Alice	As you can see, there's currently\na stopped {[0001|1a00]}{color[0400]}car{color[ffff]}{[0001|ffff]} on the game screen.
00.02.Alice	You can make it go\nusing {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]}. Give it a whirl!
00.03.Alice	See? The car moves\nforward when you press .
00.04.Alice	I'm going to teach you\nhow to drive the car\nusing controllers.
00.05.Alice	Let's head to the program screen.
01.00.Button	Hey! What's up, {[0201]}?
01.01.StickL	Howdy!
01.02.Camera	How's it going?
01.03.Car	Vroom, vroom! Let's get this show\non the road! What're you here for\ntoday, {[0201]}?
01.04.Car	Oh, I see, you want to make a\n{[0001|1a00]}{color[0400]}car{color[ffff]}{[0001|ffff]} go vroooom using controllers!
01.05.Camera	OK, nothing fancy for me today.\nI'll just focus on the {[0001|1a00]}{color[0400]}Car Nodon{color[ffff]}{[0001|ffff]}.
01.06.Button	Listen up, and we'll explain\nwhat you need to do.
01.07.Button	First of all, I use this connection\nto keep the {[0001|1a00]}{color[0400]}Car Nodon{color[ffff]}{[0001|ffff]} up to\nspeed on what's going on with {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]}.
01.08.Car	That information comes zooming\nto my {[0001|1a00]}{color[0400]}accelerate port{color[ffff]}{[0001|ffff]}.
01.09.Car	When you press ... Fwoosh!\nThe Button Nodon outputs\n{[0001|1a00]}{color[0400]}1.00 {color[ffff]}{[0001|ffff]}to my accelerate port.
01.10.Car	And then the car puts\non speed, like FWOOM!
01.11.Button	Hm... If the player keeps\nholding , does that mean the\ncar will go faster and faster?
01.12.Car	You can set the car's top speed under\n{[0001|1a00]}{color[0400]}Movement Speed{color[ffff]}{[0001|ffff]} in my settings.
01.13.Alice	Let's try that now! Go ahead\nand select the {[0001|1a00]}{color[0400]}Car Nodon{color[ffff]}{[0001|ffff]}.
01.14.Alice	Open the settings screen.
01.15.Alice	We can set the car's\n{[0001|1a00]}{color[0400]}Movement Speed{color[ffff]}{[0001|ffff]} here.
01.16.Alice	To test it out, let's change\nthe top speed to {[0001|1a00]}{color[0400]}2.00{color[ffff]}{[0001|ffff]}.
01.17.Alice	You can close the settings\nscreen again already.
01.18.Alice	Now let's zip over to the game\nscreen to see the car in action.
02.00.Alice	Get some good speed\ngoing by holding {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]}.
02.01.Alice	Did you notice that the\ncar was going faster?
02.02.Alice	Adjusting the Car Nodon's settings\nlets you {[0001|1a00]}{color[0400]}fine tune how fast the car goes{color[ffff]}{[0001|ffff]}.
02.03.Alice	By the way, if you drive right\noff the edge you can use\nRetry to restart the game.
02.04.Alice	When you're ready, let's head\nback to the program screen.
03.00.Car	Did you see me going at full speed?!\nI was all vroom, VROOOOOOM!
03.01.StickL	Look out, though! Once you start\ndriving, it's {[0001|1a00]}{color[0400]}hard to stop suddenly{color[ffff]}{[0001|ffff]}!
03.02.Car	Ooh, that reminds me, take a\nclose look at my {[0001|1a00]} accelerate{[0001|ffff]} port.
03.03.Car	{[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]} is right there in the\nname of the port.
03.04.Car	That's because the car will actually\n{[0001|1a00]}{color[0400]}go in reverse {color[ffff]}{[0001|ffff]}if my accelerate\nport receives a {[0001|1a00]}{color[0400]}negative signal{color[ffff]}{[0001|ffff]}.
03.05.Button	I see a bit of a problem here.\nI can only output {[0001|1a00]}{color[0400]}0.00 {color[ffff]}{[0001|ffff]}or {[0001|1a00]}{color[0400]}1.00{color[ffff]}{[0001|ffff]}...
03.06.StickL	But I can output anything\n{[0001|1a00]}{color[0400]}between -1.00 and 1.00{color[ffff]}{[0001|ffff]}!
03.07.Alice	In that case, let's call up\nanother Stick Nodon and\nget it to lend a hand.
03.08.StickR	Boing! I'm here to help, {[0201]}!\nI let any Nodon I'm connected to know\nif {[0001|1a00]}{color[0400]} is tilted forward or backward{color[ffff]}{[0001|ffff]}.
03.09.Alice	Select the connection between the\nButton Nodon and the Car Nodon.
03.10.Alice	Now get rid of it!
03.11.Alice	Then, connect the new Stick\nNodon's {[0001|1a00]}{color[0400]}output port{color[ffff]}{[0001|ffff]} to the\nCar Nodon's {[0001|1a00]}{color[0400]}accelerate port{color[ffff]}{[0001|ffff]}.
03.12.Alice	Let's pop over to the game\nscreen to see what's changed.
04.00.Alice	Try {[0001|1a00]}{color[0400]}tilting {color[ffff]}{[0001|ffff]} forward or\nbackward to make the\ncar go in that direction.
04.01.Alice	Neat, huh? The car will\nchange directions to go\nwhichever way you {[0001|1a00]}{color[0400]}tilt {color[ffff]}{[0001|ffff]}!
04.02.Alice	The car may not have a brake port...
04.03.Alice	But suddenly driving in reverse\nactually {[0001|1a00]}{color[0400]}works a lot like brakes{color[ffff]}{[0001|ffff]}, anyway!
04.04.Alice	By the way, have you also figured\nout that you can control the steering\nwheel by {[0001|1a00]}{color[0400]}tilting  left or right{color[ffff]}{[0001|ffff]}?
04.05.Alice	Why don't you test out the controls a bit more?\nRemember: {[0001|1a00]}{color[0400]}tilt  forward or backward\n{color[ffff]}{[0001|ffff]}to accelerate, and {[0001|1a00]}{color[0400]}tilt  left or right{color[ffff]}{[0001|ffff]} to steer.
04.06.Alice	You can turn the car\nby {[0001|1a00]}{color[0400]}tilting  left or right{color[ffff]}{[0001|ffff]}.
04.07.Alice	Let's head back to the program\nscreen and find out more\nabout how steering works.
05.00.Car	Doesn't it just feel so good to go forward,\nreverse, and {[0001|1a00]}{color[0400]}turn right or left {color[ffff]}{[0001|ffff]}on a whim?\nIf I had hair, I'd feel the wind in it!
05.01.StickL	Whoa! Slow down, there! You're going\na million miles per hour. Let's explain how\nthe steering wheel controls work.
05.02.StickL	First of all, I let the Car Nodon\nknow when {[0001|1a00]}{color[0400]} is tilted left or right{color[ffff]}{[0001|ffff]}.
05.03.Car	The Stick Nodon's input gets\ndelivered to my {[0001|1a00]}{color[0400]}steering-wheel\nport{color[ffff]}{[0001|ffff]}, and I turn the car.
05.04.Car	See the {[0001|1a00]}{color[0400]} {color[ffff]}{[0001|ffff]}part on the\n{[0001|1a00]} steering wheel{[0001|ffff]} port?
05.05.Car	That means that when the port gets {[0001|1a00]}{color[0400]}positive\n{color[ffff]}{[0001|ffff]}input the steering wheel turns {[0001|1a00]}{color[0400]}right{color[ffff]}{[0001|ffff]}, and\nwhen the port gets {[0001|1a00]}{color[0400]}negative{color[ffff]}{[0001|ffff]} input it turns {[0001|1a00]}{color[0400]}left{color[ffff]}{[0001|ffff]}!
05.06.StickL	That's not all! You can also\ntilt the control stick just a little\nbit to only turn a small amount.
05.07.Camera	If you're going to turn, turn\nwith confidence. That's what\na famous Nodon once told me.
05.08.StickR	Just remember that, if the car is\nstopped, it won't turn no matter how\nmuch you turn the steering wheel.
05.09.Car	Aw, yeah...
05.10.Car	Even if you turn the tires, if the\ncar {[0001|1a00]}{color[0400]}isn't also moving forward or\nbackward{color[ffff]}{[0001|ffff]}, it won't actually turn...
05.11.Button	Gotcha! Changing the direction\nof the tires alone won't cut it.
05.12.Button	By the way, is there actually\nsomething for me to do\naround here, or what?
05.13.Button	I've got so much time on my hands!\nMaybe I'll do some button push-ups.\nFwoo! Fwah! One! Two! Ninety-nine!
05.14.Car	You know what? Take a look at\nmy very bottom port. I dunno about\nbutton push-ups, but I CAN {[0001|1a00]}{color[0400]}jump{color[ffff]}{[0001|ffff]}.
05.15.Button	JUMP?! You've been holding out on me,\nbud! It'll take real strength to make the car\njump, but I HAVE been working out! FWAHHH!
05.16.Alice	Er, OK then. I guess that means\nwe can use the Button Nodon\nto make the car jump.
05.17.Alice	Let's try it out now, shall we?\nBefore the Button Nodon\npops...
05.18.Alice	Go ahead and connect the\nButton Nodon's {[0001|1a00]}{color[0400]}output port\n{color[ffff]}{[0001|ffff]}to the Car Nodon's {[0001|1a00]}{color[0400]}jump port{color[ffff]}{[0001|ffff]}.
05.19.Alice	It might be a bit tricky to press\n and tilt  at the same time,\nso let's change the button to {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]}.
05.20.Alice	Open the settings for\nthe Button Nodon.
05.21.Alice	{[0001|1a00]}{color[0400]}Disable{color[ffff]}{[0001|ffff]} {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]}.
05.22.Alice	Then, {[0001|1a00]}{color[0400]}enable{color[ffff]}{[0001|ffff]} "{[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]}" instead.
05.23.Alice	We can close the\nsettings screen now.
05.24.Alice	Let's test it out in the game!
06.00.Alice	Try pressing {[0001|1a00]}{color[0400]} {color[ffff]}{[0001|ffff]}while moving the\ncar forward or backward with {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]}.
06.01.Alice	Take a look at that!\nThe car can {[0001|1a00]}{color[0400]}jump{color[ffff]}{[0001|ffff]} now!
06.02.Alice	Whew, that was quite a\nthrill! Let's pop back to\nthe program screen now.
07.00.Car	Did you see me {[0001|1a00]}{color[0400]}jumping{color[ffff]}{[0001|ffff]}?!\nIt was all bounce, bounce, whee!
07.01.Button	Doesn't look like the car can jump\nvery high. I need to beef up my\nbutton-pressing muscles! Fwah!
07.02.Car	Or you could just change\nhow high the car jumps under\n{[0001|1a00]}{color[0400]}Jump Strength{color[ffff]}{[0001|ffff]} in my settings.
07.03.Alice	That sounds much easier than\nall this "fwah" business. Start by\nselecting the Car Nodon.
07.04.Alice	Then open the settings screen.
07.05.Alice	You can change the\n{[0001|1a00]}{color[0400]}Jump Strength{color[ffff]}{[0001|ffff]} setting here.
07.06.Alice	Let's try setting it to\nthe maximum, {[0001|1a00]}{color[0400]}2.00{color[ffff]}{[0001|ffff]}.
07.07.Alice	Now close the settings.
07.08.Alice	Are you ready to test out how high\nthe car can jump now? Let's check\nit out on the game screen.
08.00.Alice	Just like before, use {[0001|1a00]}{color[0400]} {color[ffff]}{[0001|ffff]}to\njump while driving forward\nor backward with {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]}.
08.01.Alice	The car can jump\nhigher than before, right?
08.02.Alice	Now you know how to\n{[0001|1a00]}{color[0400]}adjust the car's jump strength{color[ffff]}{[0001|ffff]}.
08.03.Alice	OK, let's head back\nto the program screen.
09.00.Car	Booouncy bounnnnnce!\nHow's that for full throttle?!
09.01.StickR	Wow! Now that's what I\nmean when I say "boing"!
09.02.Camera	If you're going to jump,\nreach for the stars. A famous\nNodon once told me that.
09.03.Button	Not bad, not bad! I think I can\ndo better, though. I've just got\nto keep training. Fwah! Fwah!
09.05.StickL	By the way, it seems like the\ncontrols won't work while the\ncar is in midair after a jump.
09.06.Car	Riiight...
09.07.Car	If the tires aren't touching\nthe ground, {[0001|1a00]}{color[0400]}you won't be able\nto turn until the car lands again{color[ffff]}{[0001|ffff]}.
09.08.Car	Which might mean that sometimes\nyou get carried away and go bouncing\nright off the edge...
09.10.Alice	Just try to {[0001|1a00]}{color[0400]}always practice safe\ndriving {color[ffff]}{[0001|ffff]}and you'll be all right. If you\nmess up, there's always Retry...
09.11.Camera	If at first you don't succeed, try Retry\nagain. A famous Nodon told me that.\nI think that was how it went...
09.13.Alice	Right, I hope you've got the\nhang of the Car Nodon now.\nLet's review quickly, shall we?
09.14.Car	Here goes, Alice!\nIf my accelerate port receives\na positive input, I drive forward.
09.15.StickR	While a negative input will\nmake the car go in reverse.
09.16.Car	My steering wheel port is\nwhat let you to move the\ntires and turn left or right.
09.17.StickL	What was it, again? Oh yeah! A positive\ninput makes the car turn right, and\na negative ones makes it turn left.
09.18.Car	Input to the jump port\nlets you jump! FWAH!
09.19.Button	What's more, you can also change\nthe jump strength and movement\nspeed in the Car Nodon's settings.
09.20.Alice	Keep in mind that you won't be\nable to use the controls when the\ntires aren't touching the ground.
09.21.Alice	In any case, I think\nthat's enough for now.\nWe've covered a ton.
09.22.Car	Have fun vroooooming around!
09.23.Camera	See ya next time.
09.24.Camera	We got some good footage\ntoday, if I may say so myself...
Guidebook_Compare.msbt
000-000	Hello hello!\nNice to see you, {[0201]}.
000	So, you want to find out about\nthe {[0001|1a00]}{color[0400]}Comparison Nodon{color[ffff]}{[0001|ffff]}, right?
001	Well then, let's head over to the\nprogram screen, and I'll tell you\neverything you need to know.
002	Hey, {[0201]}!
003	Are you curious about me?\nDo you want to know more?
004	I bet you're interested\nin the differences between\nme and other Nodon!
005	I take {[0001|1a00]}{color[0400]}two numbers{color[ffff]}{[0001|ffff]} that arrive at\nmy {[0001|1a00]}{color[0400]}input ports{color[ffff]}{[0001|ffff]}, and I compare them.
006	If the result of that comparison {[0001|1a00]}{color[0400]}meets\nmy conditions{color[ffff]}{[0001|ffff]}, I'll {[0001|1a00]}{color[0400]}output a signal{color[ffff]}{[0001|ffff]}!
006-001	Right now, I will output a signal if\n{[0001|1a00]}{color[0400]}both the numbers{color[ffff]}{[0001|ffff]} are the same.
006-002	Please, don't take my word for it.\nCheck my settings screen!
006-003	The {[0001|1a00]}Comparison Method{[0001|ffff]} is set to {[0001|1a00]}{color[0400]}= {color[ffff]}{[0001|ffff]}(equals).
006-004	Because of that, the Nodon will output a signal\nwhen {[0001|1a00]}{color[0400]}the number received by its upper port\nequals the number received by the lower one{color[ffff]}{[0001|ffff]}.
006-005	If you're done checking\nout the conditions, close\nthe settings screen...
006-006	How was my comparison method?\nWas it set to =? It was, wasn't it?
006-007	You know what I'm curious about now?\nWhat happens if I get connected up\nto some Nodon for real!
014	Let's try it out with the\nhelp of the Constant Nodon\nand the Effect Nodon!
015	Here I am!\nThe ever-trusty, steadfast,\nConstant Nodon!
016	Ooof. Man, I'm as reliable as that guy.\nBut you don't hear me goin' around\ntootin' my own horn about it.
017	And I never give up! I fight until the\nvery end, and don't you forget it!
018	So... I'll {[0001|1a00]}{color[0400]}compare the numbers\nI get at these two input ports{color[ffff]}{[0001|ffff]}...
019	If the conditions are met, then\n{[0001|1a00]}{color[0400]}I'll output a signal {color[ffff]}{[0001|ffff]}to the {[0001|1a00]}{color[0400]}Effect Nodon{color[ffff]}{[0001|ffff]}.
020	Yeah! And {[0001|1a00]}{color[0400]}if the conditions are met{color[ffff]}{[0001|ffff]},\nI'll let loose with a mighty torrent of\n{[0001|1a00]}{color[0400]}party poppers{color[ffff]}{[0001|ffff]} and stuff!
021	The upper Constant Nodon\nis currently outputting {[0001|1a00]}{color[0400]}3.00{color[ffff]}{[0001|ffff]}...
022	And, meanwhile, the lower Constant\nNodon is also outputting {[0001|1a00]}{color[0400]}3.00{color[ffff]}{[0001|ffff]}.
023	What do you think?\nWill the party poppers go off?
024	When you think you've got the answer,\nlet's head over to the game screen!
025	So, the answer was...\nYes! {[0001|1a00]}{color[0400]}The party poppers went off{color[ffff]}{[0001|ffff]}!
026	Since both of the Constant Nodon\nare outputting {[0001|1a00]}{color[0400]}the same value{color[ffff]}{[0001|ffff]},\nthe conditions were met.
027	Let's go to the program screen!
028	So? How did it go?\nDid your guess measure up?
029	Next, how about we try {[0001|1a00]}{color[0400]}changing\nthe value that the lower Constant\nNodon outputs{color[ffff]}{[0001|ffff]}?
030	Select the Constant Nodon.
031	Then, open up its settings screen.
032	Change the number to {[0001|1a00]}{color[0400]}5.00{color[ffff]}{[0001|ffff]}.
033	Now close the settings screen...
034	So, what do you think will happen now?\nWill the party poppers go off this time?
035	Try to figure out the answer,\nthen head to the game screen.
036	And the answer was...\nNo, {[0001|1a00]}{color[0400]}the party poppers didn't go off{color[ffff]}{[0001|ffff]}.\nIn other words, the effect didn't trigger.
037	One Constant Nodon is outputting 3.00,\nand the other, 5.00. And those numbers\n{[0001|1a00]}{color[0400]}aren't equal{color[ffff]}{[0001|ffff]}, so the condition wasn't met.
038	OK, let's go to the program screen.
039	Hey! I'm still curious!\nLet's try something else.
040	{[0001|1a00]}{color[0400]}Without changing the outputs\n{color[ffff]}{[0001|ffff]}for the Constant Nodon...
041	how could you {[0001|1a00]}{color[0400]}change{color[ffff]}{[0001|ffff]} my settings\nso that {[0001|1a00]}{color[0400]}the party poppers go off{color[ffff]}{[0001|ffff]}?
042	Think about it...
043	Now, select the Comparison Nodon.
044	Open up its settings screen.
045	And the correct answer is...
046	Change = to {[0001|1a00]}{color[0400]}<{color[ffff]}{[0001|ffff]}!
046-001	It would also work if you\nchanged = to ≤. But for now,\nlet's just use <.
047	What we've done is made it so the condition\nis satisfied when {[0001|1a00]}{color[0400]}the input to the upper port\nis lower than that of the lower port{color[ffff]}{[0001|ffff]}.
048	In other words, {[0001|1a00]}{color[0400]}if the value at the\nlower port is more than the value at the\nupper port{color[ffff]}{[0001|ffff]}, then the condition is met.
049	So, close the settings screen.
049-001	The upper Constant Nodon is\noutputting {[0001|1a00]}3.00{[0001|ffff]}, and the lower\none is now outputting {[0001|1a00]}5.00{[0001|ffff]}.
049-002	Since 3.00 is less than 5.00, we\ncan say that the condition is met!
050	OK! Let's check that on the game screen!
051	And the party poppers went off!
052	Back to the program screen we go.
053	Now you can see how\nI compare two values.
054	I make a {[0001|1a00]}{color[0400]}comparison\n{color[ffff]}{[0001|ffff]}based on a {[0001|1a00]}{color[0400]}condition{color[ffff]}{[0001|ffff]}.
055	If you make good use of the\nComparison Nodon, you can really\nexpand your programming horizons!
056	For example, if we say goodbye to the\nlower Constant Nodon for a moment...
057	And instead...
058	call up a few other Nodon...
058-001	Boo! Hi, {[0201]}!
058-002	I WILL COUNT THE NUMBER\nOF TIMES  IS PRESSED.
058-003	I'll take care of displaying the number\nof times that  gets pressed, nice and\nneat, on the game screen.
061	Now our setup is arranged so that\nwe {[0001|1a00]}{color[0400]}compare {color[ffff]}{[0001|ffff]}the {[0001|1a00]}{color[0400]}constant 3.00{color[ffff]}{[0001|ffff]} and\n{[0001|1a00]}{color[0400]}the number of times  is pressed{color[ffff]}{[0001|ffff]}...
062	How do you think\nit's going to behave?
063	Let's check it out on\nthe game screen!
064	Try pressing {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]} a few times.
065	After you pressed  four times,\nthe party poppers went off.
066	So, we've created a setup that {[0001|1a00]}{color[0400]}fires\nparty poppers{color[ffff]}{[0001|ffff]} after {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]} is {[0001|1a00]}{color[0400]}pressed four\ntimes {color[ffff]}{[0001|ffff]}using the Comparison Nodon.
067	Let's go back to the program screen.
068	So, how was it?\nDid you satisfy your curiosity?
071	There are infinite combinations\nyou can use too, even beyond the\nCounter Nodon and Constant Nodon.
072	If you want to become a programmer\nwho knows what's what, you'll need\nto use me to sort it all out!
Guidebook_ConnectGameCamera.msbt
000	Hi there!
001	There's a {[0001|1a00]}{color[0400]}person{color[ffff]}{[0001|ffff]} in the middle of the\ngame screen.
002	Move them with {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]}.
003	See? When you move the {[0001|1a00]}{color[0400]}person{color[ffff]}{[0001|ffff]}, the {[0001|1a00]}{color[0400]}game\nscreen {color[ffff]}{[0001|ffff]}moves along with them.
006	Pretty neat, huh? This time, I'm going\nto tell you the secret of how to {[0001|1a00]}{color[0400]}program the \ngame screen to follow the person{color[ffff]}{[0001|ffff]}.
007	So let's head over to the program screen!
008	Who's this? Why, if it isn't {[0201]}!\nCome in, come in!
009	Hiya, {[0201]}!
010	You want to know the trick to making the\n{[0001|1a00]}{color[0400]}game screen{color[ffff]}{[0001|ffff]} follow the {[0001|1a00]}{color[0400]}person's{color[ffff]}{[0001|ffff]} movements,\ndon't you?
011	So, here's how you connect the game screen to\nthe {[0001|1a00]}{color[0400]}person{color[ffff]}{[0001|ffff]}...
012	Start by {[0001|1a00]}{color[0400]}connecting Game-Screen Nodon{color[ffff]}{[0001|ffff]} to\nyours truly, {[0001|1a00]}{color[0400]}Person Nodon{color[ffff]}{[0001|ffff]}!
013	Yes, yes, just so, darling! Thank you very much,\n{[0001|1a00]}{color[0400]}Person Nodon{color[ffff]}{[0001|ffff]}! Wonderful!
014	{color[0400]}{[0001|1a00]}Person Nodon{[0001|ffff]}{color[ffff]} can strut their stuff around the\nlevel all they want, and yet they remain\ncenter-stage!
015	Once {[0001|1a00]}{color[0400]}connected{color[ffff]}{[0001|ffff]}, your old friend {[0001|1a00]}{color[0400]}Game-Screen\nNodon{color[ffff]}{[0001|ffff]} sticks like glue!
016	If you get rid of the {[0001|1a00]}{color[0400]}connection{color[ffff]}{[0001|ffff]}, then the game\nscreen won't move around anymore. Try it!
017	Select the {[0001|1a00]}{color[0400]}connection{color[ffff]}{[0001|ffff]}.
018	And delete the {[0001|1a00]}{color[0400]}connection{color[ffff]}{[0001|ffff]}!
018-01	Well, even the most diligent filmmaker needs a\nbreak from following subjects around, you know.
019	Let's see what it looks like now.
020	Move the {[0001|1a00]}{color[0400]}person{color[ffff]}{[0001|ffff]} around.
021	The game screen doesn't move around, no matter\nhow much you move the person.
022	That's because {color[0400]}{[0001|1a00]}the connection was \nremoved {[0001|ffff]}{color[ffff]}between Game-Screen Nodon\nand Person Nodon, see?
023	Go back to the program screen when you've\nsatisfied your curiosity.
024	Nice to see you again! The game screen didn't\nmove an inch, did it?
025	{color[0400]}{[0001|1a00]}Connect{[0001|ffff]}{color[ffff]} it all up again, and the game screen will\nfollow the person around again.
026	{color[0400]}{[0001|1a00]}Connect Game-Screen Nodon{[0001|ffff]}{color[ffff]} and {color[0400]}{[0001|1a00]}Person Nodon{[0001|ffff]}{color[ffff]}.
027	Following the person around: take two!
028	Ah, {[0201]}, it takes the\nproduction skills of a true professional to bring\nout the best in Person Nodon's performance.
030	Here, pay attention to the {[0001|1a00]}{color[0400]}movement of the\ncamera{color[ffff]}{[0001|ffff]} when the {[0001|1a00]}{color[0400]}person {color[ffff]}{[0001|ffff]}moves.
031	Let's see it, then.
032	Keep an eye on the game screen's movement\nwhile you move {[0001|1a00]}{color[0400]}the person{color[ffff]}{[0001|ffff]} with {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]}.
033	If you keep stopping and going then you should\npick it up quickly enough.
034	See that? The {[0001|1a00]}{color[0400]}game screen{color[ffff]}{[0001|ffff]} moves {[0001|1a00]}{color[0400]}a bit slower\n{color[ffff]}{[0001|ffff]}than the {[0001|1a00]}{color[0400]}person{color[ffff]}{[0001|ffff]}.
035	Did you see how it was {[0001|1a00]}{color[0400]}following the person from\nbehind{color[ffff]}{[0001|ffff]}?
036	When the {[0001|1a00]}{color[0400]}person{color[ffff]}{[0001|ffff]} stops, it stops {[0001|1a00]}{color[0400]}a little bit after\nthem{color[ffff]}{[0001|ffff]}.
037	Hmmm... Maybe I could explain it more easily\nwith a demonstration. Let's try changing the\ncamera's tracking settings.
041	You can adjust the {[0001|1a00]}{color[0400]}tracking\n{color[ffff]}{[0001|ffff]}in my settings, darling!
042	The {[0001|1a00]}{color[0400]}lower{color[ffff]}{[0001|ffff]} the {[0001|1a00]}{color[0400]}tracking rate{color[ffff]}{[0001|ffff]}, the {[0001|1a00]}{color[0400]}slower the\nmovement{color[ffff]}{[0001|ffff]}.
043	Select {[0001|1a00]}{color[0400]}Game-Screen Nodon{color[ffff]}{[0001|ffff]}.
044	Open up the settings.
045	This {[0001|1a00]}{color[0400]}Horizontal Tracking Rate{color[ffff]}{[0001|ffff]} sets\nthe left/right tracking.
046	When it's set high then it'll follow quick on the\nperson's heels, and when it's set low it'll lag\nbehind.
047	Hmm, let's think of a small number... How about\n{[0001|1a00]}{color[0400]}0.05{color[ffff]}{[0001|ffff]}?
048	Close the settings screen.
049	And let's check it out on the game screen.
049-01	Keep an eye on the game screen\nas you move the {[0001|1a00]}{color[0400]}character{color[ffff]}{[0001|ffff]} with {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]}.
104	Do you see how the game screen {[0001|1a00]}{color[0400]}follows the\nperson around slowly{color[ffff]}{[0001|ffff]}?
105	By setting the {[0001|1a00]}{color[0400]}Horizontal Tracking Rate{color[ffff]}{[0001|ffff]} low,\nyou can slow the camera right down.
106	Now let's try the opposite. We'll make the camera\n{[0001|1a00]}{color[0400]}follow the person without any lag at all{color[ffff]}{[0001|ffff]}.
107	Open {[0001|1a00]}{color[0400]}Game-Screen Nodon's{color[ffff]}{[0001|ffff]} settings.
108	And set the {[0001|1a00]}{color[0400]}Horizontal Tracking Rate{color[ffff]}{[0001|ffff]} to {[0001|1a00]}{color[0400]}1.00{color[ffff]}{[0001|ffff]}.
109	Close the settings again.
110	Now go to the game screen.
050	Get the {[0001|1a00]}{color[0400]}person{color[ffff]}{[0001|ffff]} moving with {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]}.
051	When the {[0001|1a00]}{color[0400]}Horizontal Tracking Rate{color[ffff]}{[0001|ffff]} is high, the\n{[0001|1a00]}{color[0400]}game screen{color[ffff]}{[0001|ffff]} follows the {[0001|1a00]}{color[0400]}person's movements \nwithout a delay{color[ffff]}{[0001|ffff]}.
052	When the {[0001|1a00]}{color[0400]}person{color[ffff]}{[0001|ffff]} stops, the {[0001|1a00]}{color[0400]}game screen{color[ffff]}{[0001|ffff]} stops\nimmediately too.
053	So now you know how to control the {[0001|1a00]}{color[0400]}camera's\nmovement{color[ffff]}{[0001|ffff]} by changing the {[0001|1a00]}{color[0400]}tracking rate{color[ffff]}{[0001|ffff]}.
054	Let's head back to the program screen.
055	Hello again, darlings!
056	Did you enjoy tinkering with the {[0001|1a00]}{color[0400]}camera tracking{color[ffff]}{[0001|ffff]}?\nIt's the best, right?
057	Oh, incidentally...
058	I have come up with a new way to bring out the\ngold in young {[0001|1a00]}{color[0400]}Person Nodon{color[ffff]}{[0001|ffff]}'s performance!
059	I am, after all, an artiste!
060	Let me explain... I was thinking that the very thing\nwe need would be a darling little {[0001|1a00]}{color[0400]}treasure chest{color[ffff]}{[0001|ffff]}.\nIt'll be so perfect!
111	I descend from on high! ♥
066	Fantastic sense of location, darling, as ever!\nNow if you'll just switch up my {[0001|1a00]}{color[0400]}connections{color[ffff]}{[0001|ffff]}, we'll\nbe laughing all the way to the box office!
067	You see, my doves, I can {[0001|1a00]}{color[0400]}connect to object\nNodon{color[ffff]}{[0001|ffff]}, oh yes, and follow them around too!\nSimple objects, people, UFOs, whatever!
068	OK then, select the {[0001|1a00]}{color[0400]}Person Nodon{color[ffff]}{[0001|ffff]}'s\nconnection.
069	And delete it.
070	Now connect it up with the\n{[0001|1a00]}{color[0400]}Fancy-Object Nodon\n{color[ffff]}{[0001|ffff]}we just pulled up.
071	A beautiful {[0001|1a00]}{color[0400]}treasure chest{color[ffff]}{[0001|ffff]} descending from the\nskies... And before it stands our hero, eyes\nbrimming with determination...
072	The fateful meeting of {[0001|1a00]}{color[0400]}person{color[ffff]}{[0001|ffff]} and {[0001|1a00]}{color[0400]}treasure chest{color[ffff]}{[0001|ffff]}!\nThe adventure begins! Ratings soar! Awards...are\nawarded! I'll sign autographs later!
073	I...think it's time to go to the game screen.
074	Look! The game screen follows the falling\n{[0001|1a00]}{color[0400]}treasure chest{color[ffff]}{[0001|ffff]} now.
075	And it ignores the poor {[0001|1a00]}{color[0400]}person{color[ffff]}{[0001|ffff]} no matter\nhow fast you make them run.
076	If the {[0001|1a00]}{color[0400]}person{color[ffff]}{[0001|ffff]} pushes the {[0001|1a00]}{color[0400]}treasure chest{color[ffff]}{[0001|ffff]}, the\ngame screen will move to follow the\n{[0001|1a00]}{color[0400]}treasure chest{color[ffff]}{[0001|ffff]}.
078	Let's get back to the program screen.
079	No no no, this is all wrong! Ruined! Ruined!\nThis doesn't give the impression of a fateful\nmeeting at all!
080	I've got it!
081	You, dahling, must change my {color[0400]}{[0001|1a00]}Vertical Tracking\nRate{[0001|ffff]}{color[ffff]}. I'm talking to YOU! YOU must make it\nhappen, {[0201]}! Be quick about it!
086	Well, we'd better do as it says.
087	The {color[0400]}{[0001|1a00]}Vertical Tracking Rate{[0001|ffff]}{color[ffff]} controls\nthe movement of the camera along\nthe vertical axis.
088	Try setting it to {[0001|1a00]}{color[0400]}0.05{color[ffff]}{[0001|ffff]}.
089	And close.
090	When the {[0001|1a00]}{color[0400]}Horizontal Tracking Rate{color[ffff]}{[0001|ffff]} is set low, the\n{[0001|1a00]}{color[0400]}left to right movement{color[ffff]}{[0001|ffff]} becomes slower.
091	So when the {[0001|1a00]}{color[0400]}Vertical Tracking Rate{color[ffff]}{[0001|ffff]} is set low,\nwhat will happen in the game?
092	The game screen followed the {[0001|1a00]}{color[0400]}treasure chest\n{color[ffff]}{[0001|ffff]}nice and {[0001|1a00]}{color[0400]}slowly{color[ffff]}{[0001|ffff]}.
094	When the {[0001|1a00]}{color[0400]}Vertical Tracking Rate{color[ffff]}{[0001|ffff]} is set low, then\nthe {[0001|1a00]}{color[0400]}up and down movement{color[ffff]}{[0001|ffff]} becomes slower.
095	It doesn't look half bad, actually.
096	OK, back to the program screen.
097	It shall be my magnum opus! A genius am I!\nWhat a striking vision, my dears! Simply striking!
100	Ah, {[0201]}, do make full use of\nmy {[0001|1a00]}{color[0400]}connections{color[ffff]}{[0001|ffff]} and {[0001|1a00]}{color[0400]}tracking rates{color[ffff]}{[0001|ffff]}, won't you?
101	Together we shall make history!
102	Nice working with you! Bye!
Guidebook_Connection.msbt
000	Hello there,\n{[0201]}!
001	A UFO and a tuna...\nSo there is intelligent\nlife out there.
002	Try using  to move\nthe UFO around.
003	You're pretty good at this.\nHave you been to space before?
004	Let's take these two peculiar-\nyet-conveniently-placed objects\nand stick them together.
005	That's going to be the topic of\ntoday's guide: {[0001|1a00]}{color[0400]}how to connect\none object with another{color[ffff]}{[0001|ffff]}.
006	Head to the program\nscreen, please.
007	Tuna are a lot like UFOs\nwhen you think about it...
008	Hmm... You mean because\nfish swim in the water, while\nUFOs "swim" through space?
010	It's so true! I love your\noutside-of-the-box thinking! ♥
011	OK, let me explain how you\ncan connect two objects.
012	Do you see this spot\non the UFO?
013	This is what we call\na {[0001|1a00]}{color[0400]}connection port{color[ffff]}{[0001|ffff]}.
014	We can use {[0001|1a00]}{color[0400]}connection ports{color[ffff]}{[0001|ffff]}\nto {[0001|1a00]}{color[0400]}link{color[ffff]}{[0001|ffff]} Nodon together.
015	By doing so, you can connect\nobjects to other objects.
018	You simply take the {[0001|1a00]}{color[0400]}lower{color[ffff]}{[0001|ffff]}\n{[0001|1a00]}{color[0400]}connection port {color[ffff]}{[0001|ffff]}of one object...
019	and join it up to the {[0001|1a00]}{color[0400]}upper{color[ffff]}{[0001|ffff]}\n{[0001|1a00]}{color[0400]}connection port{color[ffff]}{[0001|ffff]} of another.
021	Give it a shot.\nTry {[0001|1a00]}{color[0400]}connecting{color[ffff]}{[0001|ffff]} the Fancy-Object\nNodon to the UFO Nodon.
022	Making first contact...
023	Whenever you're ready,\n{[0201]}!
024	Link the Fancy-Object Nodon's\n{[0001|1a00]}{color[0400]}lower connection port{color[ffff]}{[0001|ffff]} with the\nUFO Nodon's {[0001|1a00]}{color[0400]}connection port{color[ffff]}{[0001|ffff]}.
025	WE ARE SPACE TUNA...\nOUR MIND IS AS ONE...
027	Let's see how they look\non the game screen!
028	Our tuna and UFO look quite\nattached to each other.
029	Move the UFO around now\nwith .
030	Because they're stuck to each other,\nthe UFO can fly around as much as it\nwants and the tuna will never fall off.
032	That's what creating a {[0001|1a00]}{color[0400]}connection\n{color[ffff]}{[0001|ffff]}between two objects does.
033	Let's move over to\nthe program screen.
034	Tuna in space, eh?\nWhat will they think of next?
037	It's a bit uninspired to have\nthe tuna just sitting there on\ntop, though, isn't it?
038	Why stop there?\nYou could be much more\navant-garde with it.
039	What if...the tuna had its\nhead stuck to the UFO?
040	What, like, it rammed into\nthe UFO and got stuck?
040-01	I love it! ♥\nThat would be a\ntrue work of art!
041	Well, we shouldn't disappoint.\nLet's stick the tuna's head to\nthe top of the UFO.
042	Select the tuna\nFancy-Object Nodon.
043	And open the settings.
045	Open {[0001|1a00]}{color[0400]}Connection Point{color[ffff]}{[0001|ffff]}.
045-01	Here, you can set {[0001|1a00]}{color[0400]}which side\n{color[ffff]}{[0001|ffff]}is the {[0001|1a00]}{color[0400]}sticky side{color[ffff]}{[0001|ffff]} for each of the\nobjects you want to connect.
046	If you set {[0001|1a00]}{color[0400]}Auto{color[ffff]}{[0001|ffff]}, the {[0001|1a00]}{color[0400]}sides of the object that are\nclosest to each other{color[ffff]}{[0001|ffff]} will stick together.
047	When you want to specifically\nchoose which side attaches to\nwhich, set it to {[0001|1a00]}{color[0400]}Manual{color[ffff]}{[0001|ffff]}.
048	{[0001|1a00]}{color[0400]}Own Connection Point {color[ffff]}{[0001|ffff]}lets you\nchoose {[0001|1a00]}{color[0400]}which side of the object\n{color[ffff]}{[0001|ffff]}will be the {[0001|1a00]}{color[0400]}sticky side{color[ffff]}{[0001|ffff]}.
048-01	These are the tuna Fancy Object's\nsettings, so we're setting {[0001|1a00]}{color[0400]}which side of\nthe tuna{color[ffff]}{[0001|ffff]} will be attached to the UFO.
049	We want the tuna's head, don't we?\nSo we'll need to pick the {[0001|1a00]}{color[0400]}Z- face{color[ffff]}{[0001|ffff]}.\n
049-01	Set {[0001|1a00]}Own Connection Point{[0001|ffff]}\nto {[0001|1a00]}{color[0400]}Z-{color[ffff]}{[0001|ffff]}, would you?
050	I'm talking about the {[0001|1a00]}{color[0400]}local coordinates{color[ffff]}{[0001|ffff]} here.\nSo it's Z-, as seen from the object itself.
052	So even if the tuna changes direction...
053	its head will always point to {[0001|1a00]}{color[0400]}Z- {color[ffff]}{[0001|ffff]}in the local\ncoordinates. It's a cold, hard fish... I mean fact!
055	In the case of the humble tuna,\nits head is the Z- face, and its\ntail is the Z+ face. Take note!
059-01	Now turn your attention to the\n{[0001|1a00]}{color[0400]}Target Connection Point{color[ffff]}{[0001|ffff]}.
059-02	This is where we choose\nthe sticky side of the {[0001|1a00]}{color[0400]}object\nwe're attaching to{color[ffff]}{[0001|ffff]}.
059-03	It's {[0001|1a00]}{color[0400]}Y+{color[ffff]}{[0001|ffff]} right now, as you can see.
059-04	So that means the tuna will attach\nto the UFO's Y+ face. Normal people\nwould call that the {[0001|1a00]}{color[0400]}top side{color[ffff]}{[0001|ffff]}.
059-05	This means that the tuna's\nhead will be attached to the\ntop of the UFO.
060	It's not so easy to\nvisualize, is it?
061	Let's close the\n{[0001|1a00]}Connection Point{[0001|ffff]} settings.
062	Close the settings screen too.
063	And now we can see how they're\nattached on the game screen.
064	I... I don't even want to know how\nthis could have happened.
065	Use  and move the UFO\naround a bit.
066	The tuna's head really is\nstuck to the UFO's top.\nThere's no shaking that off.
067	When you're done examining\nthis fishy situation, come back\nto the program screen.
068	A fish stuck to a UFO...
068-01	There's a story to be told\nhere. I'm sure of it!
069	Hmm. I don't know\nabout this, guys...
070	Wouldn't it look better if\nthe tuna was nudging me\nfrom behind or something?
071	Also, did I mention that\nthis really tickles?!
071-01	So you want a piggyback ride.\nOr, rather, a "tuna-back" ride?
071-02	Aww! It's the beginnings\nof an unlikely friendship! ♥
072	Let's give this story a happy ending and\nattach the tuna to the UFO's back.
073	Select the Fancy-Object Nodon.
074	Open the settings.
075	Now open the\n{[0001|1a00]}{color[0400]}Connection Point {color[ffff]}{[0001|ffff]}settings.
076	We can set which side of the\nUFO the tuna attaches to in\n{[0001|1a00]}{color[0400]}Target Connection Point{color[ffff]}{[0001|ffff]}.
077	{[0001|1a00]}{color[0400]}Z-{color[ffff]}{[0001|ffff]} is the front of the UFO and\n{[0001|1a00]}{color[0400]}Y+{color[ffff]}{[0001|ffff]} is the side with the antenna.
078	We want to {[0001|1a00]}{color[0400]}attach the tuna to\nthe back of the UFO{color[ffff]}{[0001|ffff]}, right?\nSo which side would that be?
079	The answer is {[0001|1a00]}{color[0400]}Z+{color[ffff]}{[0001|ffff]}. If the front of\nthe UFO is Z-, the opposite side\nshould be the back.
080	So let's set the {[0001|1a00]}Target\nConnection Point{[0001|ffff]} to {[0001|1a00]}{color[0400]}Z+{color[ffff]}{[0001|ffff]}.
082-01	Now the tuna's Z- face is attached\nto the UFO's Z+ face!
083	OK, you can close the\n{[0001|1a00]}Connection Point{[0001|ffff]} settings.
084	Close the settings screen\nas well.\n
086	Let's go and see how\nthey're stuck together.
087	Use  to move the UFO around.
088	It really does look like the tuna is\npushing the UFO along from behind.
089	In summary, this is how you use the\n{[0001|1a00]}{color[0400]}Connection Point{color[ffff]}{[0001|ffff]} settings to connect\nobjects to one another.
090	Shall we head back to\nthe program screen?
091	See? This is more like\nwhat I had in mind.
092	Yep. You sure\nchanged your tuna! ♥
096	By using {[0001|1a00]}{color[0400]}connections{color[ffff]}{[0001|ffff]}, you can join up\nall sorts of different objects to make\nmore complex ones.
096-01	The process is simple.
096-02	You just take the {[0001|1a00]}{color[0400]}lower\nconnection port {color[ffff]}{[0001|ffff]}of the object\nyou're going to be sticking...
096-03	and connect it to the {[0001|1a00]}{color[0400]}upper\nconnection port{color[ffff]}{[0001|ffff]} of the object\nyou want to stick it to.
097	This is a very important technique,\nso keep it in mind.
Guidebook_Count.msbt
002	Hello, {[0201]}!
003	{[0001|1a00]}{color[0400]}Blue cylinders{color[ffff]}{[0001|ffff]}, and {[0001|1a00]}{color[0400]}red boxes{color[ffff]}{[0001|ffff]},\nlined up to left and right...
004	and a {[0001|1a00]}{color[0400]}white box with a number\non it{color[ffff]}{[0001|ffff]}, floating in the air.
005	Now, use {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]} to move Person and smash\nall the objects. {[0001|1a00]}{color[0400]}Watch what happens\nto the number {color[ffff]}{[0001|ffff]}while you do it!
006	With each smashed object,\n{[0001|1a00]}{color[0400]}the number increases{color[ffff]}{[0001|ffff]}.
006-01	In other words, the white box {[0001|1a00]}{color[0400]}displays\nthe count of broken objects{color[ffff]}{[0001|ffff]}.
007	So this time around, I'm going to tell you\neverything you need to know about {[0001|1a00]}{color[0400]}how to\ndisplay a count of broken objects{color[ffff]}{[0001|ffff]}.
008	Let's go to the program screen.
009	Hey, peeps! It's me, Person Nodon!\nLooks like I'll be taking care of all the\nsmashing today!
014	Hey! We're {[0001|1a00]}{color[0400]}Object Nodon{color[ffff]}{[0001|ffff]}.\nQuite the little squad, eh?
016	The five of us on the right, we're {[0001|1a00]}{color[0400]}red boxes{color[ffff]}{[0001|ffff]}.
017	And the five of us on the left,\nwe're {[0001|1a00]}{color[0400]}blue cylinders{color[ffff]}{[0001|ffff]}.
022	And as for counting the smashed objects,\nthat's handled by...
023	these three Nodon here!
024	Hey, honey! Need me for somethin'?\nDoes that person thingy want to smash\neverything up again?
026	I COUNTED THE NUMBER OF THINGS THAT\nBROKE. TEN THINGS BROKE.
027	Let's have a round of\napplause for Person Nodon!\nGreat job on the smashing!
120	Oh, peeps! It was nothing, really.
027-01	Working together, we're a team\nthat can {[0001|1a00]}{color[0400]}count and display the\nnumber of broken objects{color[ffff]}{[0001|ffff]}.
028	Yes, it takes all three\nof us to count the objects\nthat Person breaks.
029	Let me explain exactly what\nrole we each play.
030	Listen carefully, and you just\nmight learn something!
031	For starters, the three of us\nwill introduce ourselves.\nStarting from the left!
032	Hi there, honey!\nI'm the {[0001|1a00]}{color[0400]}Object-Break Nodon{color[ffff]}{[0001|ffff]}!
033	I'm the one who outputs a signal\n{[0001|1a00]}{color[0400]}whenever something breaks{color[ffff]}{[0001|ffff]}... But\nI'm sure you knew that already, honey!
034	Right now I'm watching out for\nwhen boxes or cylinders break!
037	I AM THE {[0001|1a00]}{color[0400]}COUNTER NODON{color[ffff]}{[0001|ffff]}.\nI CAN COUNT ANYTHING.
037-01	I CAN COUNT SNEEZES. I SNEEZED\nTWELVE TIMES YESTERDAY.
122	WHEN I GET A SIGNAL AT MY {[0001|1a00]}{color[0400]}COUNT UP PORT{color[ffff]}{[0001|ffff]},\nI {[0001|1a00]}{color[0400]}INCREASE THE NUMBER{color[ffff]}{[0001|ffff]} AND {[0001|1a00]}{color[0400]}OUTPUT IT AS\nA SIGNAL{color[ffff]}{[0001|ffff]}.
038	FOR EXAMPLE, IN THE CURRENT SETUP,\nI OUTPUT {[0001|1a00]}{color[0400]}THE NUMBER OF TIMES I GOT\nA SIGNAL FROM OBJECT-BREAK NODON{color[ffff]}{[0001|ffff]}.
119	And last but not least, I'm the\n{[0001|1a00]}{color[0400]}Number-Object Nodon{color[ffff]}{[0001|ffff]}.
039	It's my job to {[0001|1a00]}{color[0400]}display the number{color[ffff]}{[0001|ffff]}\nthat Counter Nodon counted.
041	Did you know that the {[0001|1a00]}{color[0400]}signals{color[ffff]}{[0001|ffff]} that are\npassed between connections are in actual\nfact {[0001|1a00]}{color[0400]}numbers, in their basic form{color[ffff]}{[0001|ffff]}?
042	So when I get a {[0001|1a00]}{color[0400]}signal{color[ffff]}{[0001|ffff]} as input in my port...
043	I display the {[0001|1a00]}{color[0400]}signal's number{color[ffff]}{[0001|ffff]}\non the game screen.
046-01	In summary...
046	When a box or cylinder is broken, the\n{[0001|1a00]}{color[0400]}Object-Break Nodon{color[ffff]}{[0001|ffff]} outputs a signal.
047	Every time the {[0001|1a00]}{color[0400]}Counter Nodon{color[ffff]}{[0001|ffff]} receives input,\nit counts it, and then outputs the new number.
048	When the {[0001|1a00]}{color[0400]}Number-Object Nodon{color[ffff]}{[0001|ffff]}\nreceives that signal, it displays it on\nthe game screen.
049	That's right! We're all working together as\n{[0001|1a00]}{color[0400]}a system for counting broken objects and\ndisplaying the total{color[ffff]}{[0001|ffff]}.
049-01	Hey, hon, something else you might be\ninterested in... You know, if you change\nmy {[0001|1a00]}{color[0400]}Check What?{color[ffff]}{[0001|ffff]} setting...
049-02	you can have me only watch out for certain\nobjects breaking. If you like, I could {[0001|1a00]}{color[0400]}only\ncount when boxes break{color[ffff]}{[0001|ffff]}, for example.
050	Why don't we try that out now?
053	Select the Object-Break Nodon...
054	Open the settings...
123	Right now, it's set to check\nfor {[0001|1a00]}{color[0400]}Boxes{color[ffff]}{[0001|ffff]} and {[0001|1a00]}{color[0400]}Cylinders{color[ffff]}{[0001|ffff]}.
055	Open up the {[0001|1a00]}{color[0400]}Check What?{color[ffff]}{[0001|ffff]} menu.
056	Disable {[0001|1a00]}{color[0400]}Cylinder{color[ffff]}{[0001|ffff]}...so that we only check for\nboxes breaking.
057	Now close this screen...
058	And close the settings screen too.
059	OK, got it! Now we'll only be\nchecking for {[0001|1a00]}{color[0400]}boxes{color[ffff]}{[0001|ffff]} that break.
060	Let's check it out over on the game screen.
061	Break all the objects, but pay close\nattention to the {[0001|1a00]}{color[0400]}number{color[ffff]}{[0001|ffff]} at the same time.
062	When a {[0001|1a00]}{color[0400]}box{color[ffff]}{[0001|ffff]} breaks, {[0001|1a00]}{color[0400]}the number increases{color[ffff]}{[0001|ffff]}...\nWhen a {[0001|1a00]}{color[0400]}cylinder{color[ffff]}{[0001|ffff]} breaks, {[0001|1a00]}{color[0400]}it doesn't change{color[ffff]}{[0001|ffff]}.
064	So that's how we'd only count\nbox breakage.
065	Let's go back to the program screen!
065-01	How'd you like that, darlin'? Nothing counted\nbut boxes, make no mistake.
065-02	Indeed! So now you've learned that\nyou can change what gets counted\nby altering our settings.
065-03	Are you still hungry for knowledge?\nDid you know, if you change the Counter Nodon's\n{[0001|1a00]}{color[0400]}mode{color[ffff]}{[0001|ffff]}, you can apply a different way of counting!
065-04	But before we delve into that...\nLet's put Object-Break Nodon's settings\nback how they were before.
067	Select the Nodon...
068	Open the settings screen...
069	Open the {[0001|1a00]}{color[0400]}Check What?{color[ffff]}{[0001|ffff]} menu.
070	Enable {[0001|1a00]}{color[0400]}Cylinder{color[ffff]}{[0001|ffff]}...
071	Close this screen...
072	Then the settings screen!
126	OK, hon! I'll check for both\ncylinders and boxes breaking\nnow, just like before.
072-01	With that taken care of, let's change\nthe Counter Nodon's {[0001|1a00]}{color[0400]}mode{color[ffff]}{[0001|ffff]}.
072-02	{[0001|1a00]}{color[0400]}MODE{color[ffff]}{[0001|ffff]} REFERS TO MY\nWAY OF COUNTING.
072-03	I HAVE {[0001|1a00]}{color[0400]}FOUR{color[ffff]}{[0001|ffff]} MODES IN TOTAL.\nTHAT'S FOUR MODES.
079	First, let's open up the\nCounter Nodon's settings.
080	Select the Counter Nodon...
081	Open the settings screen...
128	Here's where you can set the {[0001|1a00]}{color[0400]}modes{color[ffff]}{[0001|ffff]}.
081-01	Currently, it's set to {[0001|1a00]}{color[0400]}No limit{color[ffff]}{[0001|ffff]}.
081-02	As the name suggests, in this\nmode, the counter will keep\ncounting {[0001|1a00]}{color[0400]}without any limits{color[ffff]}{[0001|ffff]}.
082	Let's try changing\nthe {[0001|1a00]}Mode{[0001|ffff]} to {[0001|1a00]}{color[0400]}Range{color[ffff]}{[0001|ffff]}.
129	With this mode, you can set the {[0001|1a00]}{color[0400]}range{color[ffff]}{[0001|ffff]}\nof what will be counted.
082-01	You can set that {[0001|1a00]}{color[0400]}range{color[ffff]}{[0001|ffff]} with this\nhere {[0001|1a00]}{color[0400]}Count Range{color[ffff]}{[0001|ffff]} setting.
083	Set the upper limit for\n{[0001|1a00]}Count Range{[0001|ffff]} to {[0001|1a00]}{color[0400]}7{color[ffff]}{[0001|ffff]}.
084	Close the settings!
085	I WILL ONLY COUNT {color[0400]}{[0001|1a00]}BETWEEN\nZERO AND SEVEN{[0001|ffff]}{color[ffff]}!
086	Let's take a look on the game screen\nand see how Counter Nodon behaves now.
087	OK, so, break everything please...
088	The counting {[0001|1a00]}{color[0400]}stops at seven{color[ffff]}{[0001|ffff]} now.
089	In {[0001|1a00]}Range{[0001|ffff]} mode, the count won't\ngo beyond {[0001|1a00]}{color[0400]}the set limit{color[ffff]}{[0001|ffff]}.
090	Back to the program screen!
091	Let's try out some other modes.
092	Select the Count Nodon...
093	And open the settings screen.
094	This time, try setting the {[0001|1a00]}Mode{[0001|ffff]} to {[0001|1a00]}{color[0400]}Loop{color[ffff]}{[0001|ffff]}.
130	You can leave the upper\n{[0001|1a00]}Count Range{[0001|ffff]} at {[0001|1a00]}{color[0400]}7{color[ffff]}{[0001|ffff]}.
095	Close the settings...
096	MY MODE IS SET TO...{[0001|1a00]}{color[0400]}LOOP{color[ffff]}{[0001|ffff]}.\nMY RANGE IS STILL {[0001|1a00]}{color[0400]}ZERO TO SEVEN{color[ffff]}{[0001|ffff]}.
097	Let's see how counting has changed\nover on the game screen.
098	When you've smashed\nthe {[0001|1a00]}{color[0400]}seventh object{color[ffff]}{[0001|ffff]}...
099	the count starts again from {[0001|1a00]}{color[0400]}zero{color[ffff]}{[0001|ffff]}.
100	When the mode is set to loop, the count happens\nwithin the set ranges, but {[0001|1a00]}{color[0400]}repeats{color[ffff]}{[0001|ffff]}.
101	When the count reaches the limit,\nit {[0001|1a00]}{color[0400]}returns to the first number{color[ffff]}{[0001|ffff]} in the range.
102	To the program screen!
132	THERE ARE FOUR MODES.\nHERE IS THE FINAL ONE.
104	Select the Nodon...
105	Open the settings...
106	Now change {[0001|1a00]}Mode{[0001|ffff]} to {[0001|1a00]}{color[0400]}Bounce{color[ffff]}{[0001|ffff]}.
107	Set the upper {[0001|1a00]}Count Range{[0001|ffff]} to {[0001|1a00]}{color[0400]}5{color[ffff]}{[0001|ffff]}...
108	Now close the settings...
133	COUNT MODE: {[0001|1a00]}{color[0400]}BOUNCE{color[ffff]}{[0001|ffff]}.\nRANGE IS {[0001|1a00]}{color[0400]}ZERO TO FIVE{color[ffff]}{[0001|ffff]}.
109	To the game screen!
110	After you've broken more than five objects...
111	the count will decrease every time you break\nanother object.
112	In Bounce mode, {[0001|1a00]}{color[0400]}the count will go both\nup and down{color[ffff]}{[0001|ffff]} within the count range.
113	Let's go to the program screen...
113-01	YOU UNDERSTAND THE FOURTH MODE NOW.\nGOOD JOB.
113-02	You've learned something very important about\ncounting today. Well done!
113-03	But let's go over them again now, just to be\nsure you've completely mastered them.
114	If one of the objects I'm watching out for breaks,\nI output my signal, hon...
115	I COUNT THE NUMBER OF TIMES I GET AN \nINPUT. THEN I OUTPUT THAT NUMBER.
116	Then I display the number!
117	Working together, we make up {[0001|1a00]}{color[0400]}a system for\ncounting the number of objects that break{color[ffff]}{[0001|ffff]}!
118	Since {[0001|1a00]}{color[0400]}signals are really numbers{color[ffff]}{[0001|ffff]}...
136	they can be counted, and displayed.\nSo keep that in mind!
134	And that's the end of the explanation.\nBe sure to keep it in your noggin!
Guidebook_CountDown.msbt
00.00.Alice	Hello there, {[0201]}.
00.01.Alice	I bet you were surprised to see a countdown\nappear out of nowhere, weren't you?
00.02.Alice	Well, that's what you're here to learn: how to\ncreate a three-count countdown\n{color[0400]}{[0001|1a00]}game starting sequence{[0001|ffff]}{color[ffff]}!
00.03.Alice	Feel free to make use of the {color[0400]}{[0001|1a00]}Retry\n{[0001|ffff]}{color[ffff]}function to see it in action again.
00.04.Alice	When the countdown ends, that's when the car\ncan start.
00.06.Alice	If it starts before the countdown is over, that\ncounts as a false start. Obviously. You know how\nraces work.
00.07.Alice	But how can you make it so the car can't start\nwhile the countdown is running? Any ideas,\n{[0201]}?
00.08.Alice	Let's see if we can untangle it all on the program\nscreen.
01.00.Start	First! I did it! I won! On-Start Nodon takes the\npodium, and the crowd goes wild! Wooo!
01.01.Timer	Rushing around like that is the sign of an untidy\nmind. What you need is a rigorous schedule\nto keep you on track.
01.02.Flag	Mph mrargh...\nI'm Flag Nodon...
01.03.Effect	Good to see ya, {[0201]}.\nLet's raise the roof, eh? 3, 2, 1, go!
01.04.Flag	Buh... 'Ello.
01.05.Flag	Oh, hey, {[0201]}'s here.
01.06.Flag	Want to know all about {color[0400]}{[0001|1a00]}game start sequences{[0001|ffff]}{color[ffff]}?\nThought so.
01.07.Flag	Mmmkay, we can help you out.
01.07-01.Effect	Firstly, getting that {[0001|1a00]}{color[0400]}countdown{color[ffff]}{[0001|ffff]} out is my job.
01.07-02.Effect	All I need is a little signal from {[0001|1a00]}{color[0400]}On-Start Nodon{color[ffff]}{[0001|ffff]},\nand that countdown will start.
01.08.Start	That's me! {color[0400]}{[0001|1a00]}When the game starts, I send out\na signal {[0001|ffff]}{color[ffff]}like whooooosh!
01.09.Effect	The very moment the game starts, {[0001|1a00]}{color[0400]}On-Start Nodon{color[ffff]}{[0001|ffff]}\nsends me that signal.
01.10.Effect	And then I know it's time to\nget the countdown started.
01.10-01.Timer	But none of your effects are going to stop the\ncar from being able to move, are they?
01.10-02.Effect	Not at all, kiddo. My effects\ndon't interfere with the business\nof other Nodon. I don't allow it.
01.10-03.Car	So then...how do you stop a car from vrooming\noff before the countdown's finished?
01.10-04.Flag	I switch to {[0001|1a00]}{color[0400]}off{color[ffff]}{[0001|ffff]} as soon as the\ngame starts, that's how!
01.10-05.Flag	When I'm {[0001|1a00]}{color[0400]}off{color[ffff]}{[0001|ffff]}, I {[0001|1a00]}{color[0400]}output no signal{color[ffff]}{[0001|ffff]}.
01.10-06.Car	No juice in the signal, no juice in the engine!\nWith no signal, I won't move. Got it.
01.10-07.Car	So how do you make that car go once the\ncountdown's over?
01.10-08.Flag	Set me to {[0001|1a00]}{color[0400]}on{color[ffff]}{[0001|ffff]} again, and I'll {[0001|1a00]}{color[0400]}let the signal through{color[ffff]}{[0001|ffff]}.\nThen you can vroom vroom away.
01.10-10.Timer	Ahem. Yes. Anyway, you'll need me if you want\nto set Flag Nodon to on.
01.11.Timer	When the game starts, I receive a signal from\n{[0001|1a00]}{color[0400]}On-Start Nodon{color[ffff]}{[0001|ffff]}.
01.12.Timer	Once I have received a signal, then, in precisely\n{color[0400]}{[0001|1a00]}three seconds, I shall allow it through{[0001|ffff]}{color[ffff]}.
01.13.Flag	Three seconds, you say?
01.14.Effect	Three seconds, just like my {[0001|1a00]}{color[0400]}countdown timer{color[ffff]}{[0001|ffff]},\nyou'll notice.
01.15.Timer	Very observant of you.
01.15-01.Timer	Effect Nodon and I will receive On-Start Nodon's\nsignal at the exact same time.
01.16.Effect	At which point I'll {[0001|1a00]}{color[0400]}start the countdown{color[ffff]}{[0001|ffff]}, and Timer\nNodon will start {[0001|1a00]}{color[0400]}measuring the time{color[ffff]}{[0001|ffff]}. Are ya still\nwith us?
01.16-01.Effect	And the {[0001|1a00]}{color[0400]}time it takes the countdown to run itself\ndown{color[ffff]}{[0001|ffff]} and the {[0001|1a00]}{color[0400]}time Timer Nodon is measuring{color[ffff]}{[0001|ffff]} are\nthe same, got it?
01.18.Timer	At the very nanosecond the countdown ends,\nI will stop measuring time and output\nthe signal.
01.19.Flag	So when the countdown ends, I'll be switched\n{[0001|1a00]}{color[0400]}on{color[ffff]}{[0001|ffff]}...
01.20.Car	And then I get the signal, and things really start to\nrev up!
01.28.Effect	So there ya have it. Even though I've not given\nany signal at all, the timing matches up.
01.29.Alice	Which brings us neatly to a useful programming\npointer.
01.30.Alice	You can match up the moments of the {[0001|1a00]}{color[0400]}end of the\ncountdown{color[ffff]}{[0001|ffff]} and the {[0001|1a00]}{color[0400]}flag switching on{color[ffff]}{[0001|ffff]}...
01.33.Timer	by simply adjusting the timing by which I\noutput a signal to Flag Nodon, yes, yes.
01.33-01.Timer	No need to thank me. These tasks are child's\nplay to me.
01.34.Alice	Right. Got all that? Keep it all in mind.
01.35.Alice	And let's see it in action one more time on the\ngame screen.
02.00.Alice	The countdown starts just as the game starts.
02.01.Alice	And after three seconds, the countdown ends,\nthe flag switches on, and the car starts to move.
02.03.Alice	A game with features like this can really let you\nsee how each Nodon works behind the scenes.
02.04.Alice	If you want to watch it again, hit Retry.
02.05.Alice	Right, let's get back to the program screen.
03.00.Car	Vroom vroom! Did you see my stylish starting\ndash?
03.01.Effect	That three second countdown really gets the\nexcitement going, don'tcha think?
03.02.Effect	You need a little bit of patience to wait three\nseconds for anything, ya know. That's why they\nsay, {[0001|1a00]}{color[0400]}third second's a charm{color[ffff]}{[0001|ffff]}!
03.03.Timer	That...is not what they say. Not...ever,\nEffect Nodon!
03.04.Timer	The third time's a charm. You may do something\nincorrectly twice, but on the third time you've got\nthe hang of it, and three is a significant number...
03.05.Timer	It's nothing to do with seconds at all. It just means\nthat you hold out hope that you won't make a\nmess of something three times in a row.
03.06.Timer	Three seconds are hardly going to make\nany charm worth the name.
03.06-01.Timer	What a silly mistake to make. Consider\nbroadening your horizons so you can be more\nprecise next time, please.
03.07.Effect	Ya could stand to be a bit more charming yerself,\nya know.
03.09.Alice	So, that's the explanation behind the three-count\ngame start sequence... Got it?
03.10.Start	I...give the signal when the game starts.
03.11.Timer	That signal comes to me, and I only pass it on\nwhen the appropriate time has passed.
03.12.Effect	The three second countdown effect ends after\nthree seconds have passed...
03.13.Timer	And once those three seconds have passed and\nthe countdown has ended I will be able to pass\non the signal.
03.14.Flag	Then your old friend Flag Nodon will be set to\non...
03.15.Car	And I'll put the pedal to the metal!
03.16.Alice	In this example, setting the Flag Nodon\nto on makes the car go.
03.17.Alice	But actually Flag Nodon can connect to any kind\nof Nodon, depending on the game.
03.18.Alice	This is a good technique to make your games\nstart with a bang, though, so keep it in mind!
03.19.Alice	That's about all for this time.
03.20.Car	Vroom vroom! Don't be a stranger!
Guidebook_DifferentCollision.msbt
00.00.Alice	Hello, {[0201]}!
00.01.Alice	Take a look at these two people\non the game screen.
00.03.Alice	First, move the blue person onto the red floor\nto the right of them using {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]}.
00.04.Alice	Nothing happens when the person\nstands on the red floor, right?
00.05.Alice	Now get the blue person onto the blue floor on\nthe right side using {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]}.
00.06.Alice	Did you hear that sound when you\ntouched the blue floor?
00.08.Alice	Next, use {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]} to move the red person to the blue\nfloor directly to their left.
00.09.Alice	It reacted to the blue person, but\nnot the red person... Hmmm...
00.10.Alice	Let's see what happens if you move them onto\nthe red ground to the left with {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]}.
00.11.Alice	Ah, there, you see? The red floor reacted to the\nred person with a damage effect.
00.12.Alice	So the {[0001|1a00]}{color[0400]}blue floor only reacts to the blue person{color[ffff]}{[0001|ffff]}\nand the {[0001|1a00]}{color[0400]}red floor only reacts to the red person{color[ffff]}{[0001|ffff]}...
00.13.Alice	Really, they're both just people, so how come\nthe floors know when to react and when not to?\nMysterious, right?
00.14.Alice	Not at all! In fact, I'm going to tell you the secret\nof {[0001|1a00]}{color[0400]}treating objects of the same type differently{color[ffff]}{[0001|ffff]}!
00.15.Alice	Let's talk about it on the program screen.
01.00.HumanL	Hello from your friendly\nneighborhood Person Nodon!
01.01.HumanR	I'm a Person Nodon too!\nI'm the red one!
01.02.RigidL	How do? I'm the red floor.
01.03.RigidR	Hi! I'm the blue floor,\nlookin' pretty good!
01.04.EffectL	Hello there, {[0201]}.
01.05.EffectR	We're gonna shake things up a bit,\nwith your help. BOOM!
01.06.SensorAll	Wahh!
01.07.SensorL	Meep... Can you not surprise us with your \nvery loud voice out of nowhere please?
01.08.SensorR	Oh, hello, programmer friend! It's only you...\nHow can I help you today?
01.10.SensorL	You want to know {[0001|1a00]}{color[0400]}how we tell the difference\nbetween a blue person and a red person{color[ffff]}{[0001|ffff]}?
01.11.SensorR	Say no more! We'll tell you how it works.
01.12.SensorL	On the game screen, it probably looks like we're\nreacting to the {[0001|1a00]}{color[0400]}people{color[ffff]}{[0001|ffff]}, right?
01.13.SensorR	But actually, we're {[0001|1a00]}{color[0400]}not checking\nthe people at all{color[ffff]}{[0001|ffff]}!
01.14.HumanL	What would happen if the Touch Sensors\nwere checking the people?
01.15.HumanR	We're the same people, just with\na different coat of paint.
01.16.HumanL	They'd react to any person,\nwhether red, blue or polka-dotted.
01.17.SensorR	Here's the trick: instead of the\nperson, I'm actually checking\nfor {[0001|1a00]}{color[0400]}Left Joy-Con Fancy Objects{color[ffff]}{[0001|ffff]}!
01.18.FancyL	That's me! But of course you already knew that.
01.19.FancyL	Nice. The left Joy-Con is super IN\nright now, {[0201]}.
01.20.Alice	You can set the Touch Sensors to check whatever\nyou want in the settings screen.
01.21.Alice	Select the right-hand {[0001|1a00]}{color[0400]}Touch-Sensor Nodon{color[ffff]}{[0001|ffff]}.
01.22.Alice	Open up the settings screen.
01.23.Alice	This is where you can find\nthe {[0001|1a00]}Check What{[0001|ffff]}? setting.
01.24.Alice	It's currently set to {[0001|1a00]}{color[0400]}Joy-Con (L){color[ffff]}{[0001|ffff]}.\nThat's the left Joy-Con.
01.25.Alice	Once you've had a good look,\nclose the settings screen.
01.26.SensorL	I, on the other hand, am set\nto check {[0001|1a00]}{color[0400]}right Joy-Con fancy\nobjects {color[ffff]}{[0001|ffff]}instead of people!
01.27.FancyR	The left Joy-Con is fine, if you're into \nthat sort of thing, but the {[0001|1a00]}{color[0400]}right Joy-Con\n{color[ffff]}{[0001|ffff]}is where it's really at!
01.28.FancyR	Ugh, that IR Motion Camera tucked in its cute\nlittle window! Adorable! I simply canNOT!
01.29.Alice	Have a look at the settings screen for this\nTouch-Sensor Nodon as well.
01.30.Alice	Select the left-hand {[0001|1a00]}{color[0400]}Touch-Sensor Nodon{color[ffff]}{[0001|ffff]}.
01.31.Alice	Open the settings screen.
01.32.Alice	And there you have it, it's set to {[0001|1a00]}{color[0400]}right Joy-Con{color[ffff]}{[0001|ffff]}!
01.33.Alice	Keep that in mind: the Touch-Sensor Nodon\nare checking {[0001|1a00]}{color[0400]}fancy objects, not people{color[ffff]}{[0001|ffff]}!
01.34.Alice	OK, close up the settings screen.
01.35.FancyL	I have quite the appetite for all things\nquasi-cylindrical at the moment. Slightly squashed\nsausages, long-boiled eggs... So cool.
01.36.FancyR	I want nothing more than to show off this\ngorgeous shape. To {[0001|1a00]}{color[0400]}not be seen{color[ffff]}{[0001|ffff]} is...
01.37.FancyAll	TOO MUCH!
01.38.Alice	That's as good a time as any to see what\nhappens if you make the fancy objects {[0001|1a00]}{color[0400]}visible{color[ffff]}{[0001|ffff]}.
01.39.Alice	Select the {[0001|1a00]}Joy-Con (L){[0001|ffff]} Fancy-Object Nodon.
01.40.Alice	Open the settings screen.
01.41.Alice	{[0001|1a00]}{color[0400]}Enable{color[ffff]}{[0001|ffff]} the {[0001|1a00]}{color[0400]}Visible{color[ffff]}{[0001|ffff]} property.
01.42.Alice	And close the settings screen again.
01.43.Alice	And now let's go to the right\n{[0001|1a00]}Joy-Con (R){[0001|ffff]} Fancy-Object Nodon...
01.44.Alice	Go to the settings screen.
01.45.Alice	{[0001|1a00]}{color[0400]}Enable Visible{color[ffff]}{[0001|ffff]}.
01.46.Alice	Close it all up.
01.47.Alice	And let's see what's happened\non the game screen.
02.00.Alice	The blue person has a left Joy-Con, and the red\nperson has a right Joy-Con stuck to them!
02.01.Alice	That's how the fancy objects stick to the people.
02.02.Alice	The {[0001|1a00]}{color[0400]}blue floor{color[ffff]}{[0001|ffff]} Touch Sensor only\nreacts to the blue {[0001|1a00]}{color[0400]}left Joy-Con{color[ffff]}{[0001|ffff]}.
02.03.Alice	And the {[0001|1a00]}{color[0400]}red floor{color[ffff]}{[0001|ffff]} Touch Sensor only\nreacts to the red{[0001|1a00]} {color[0400]}Joy-Con (R){color[ffff]}{[0001|ffff]}.
02.04.Alice	Move the blue person with {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]} and the\nred person with {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]}, and see if you can\nget them both to hit their sensors.
02.05.Alice	When the people touch their floors,\nthe {[0001|1a00]}{color[0400]}Joy-Con controllers {color[ffff]}{[0001|ffff]}come into\ncontact with the touch sensor.
02.06.Alice	Got it? The Touch Sensors react to the\nfancy object Joy-Con.
02.07.Alice	When you've gotten your head around all this\nstuff, head back to the program screen.
03.00.FancyR	Did you see my fancy self? Were you impressed?
03.02.SensorL	When you can see the Fancy-Object Nodon,\nit's easier to understand what's going on, isn't it?
03.05.SensorR	When the left Joy-Con fancy object\ncomes into my range...
03.06.SensorL	I sent Effect Nodon a little signal...
03.07.EffectR	And when I get Touch-Sensor Nodon's \nsignal at my input port...
03.08.EffectR	Bang! Crash! Boom! Et cetera.
03.09.SensorAll	Argh!
03.10.SensorL	Stop startling us!
03.11.RigidC	You know...
03.12.SensorAll	Shush!
03.13.SensorR	You can't just start yelling your head off suddenly\nout of nowhere like that!
03.14.RigidC	Erm, sorry.
03.15.RigidC	I'm the stylish green floor in the middle.
03.16.RigidC	Quite eye-catching, really. In fact, be careful\nabout stepping on me.
03.17.FancyL	Oh, the center would be just the perfect,\nmost fantastic position for me.
03.18.Alice	OK, then let's do something cool with the center.
03.19.Alice	Move both of the Touch-Sensor Nodon to the\ngreen floor in the middle.
03.20.Alice	Let's make it so that, when either a red person\nor a blue person touches it, it'll react.
03.21.RigidC	This is getting exciting!
03.23.Alice	First, move the left-hand Touch-Sensor Nodon\nto the middle.
03.25.Alice	And then bring the right-hand\nTouch-Sensor Nodon to the middle too.
03.26.RigidC	They're right in the exact same place.\nOoh, I'm getting nervous...
03.29.RigidL	Looks like we've lost our Touch-Sensor Nodon.
03.30.RigidR	We're just in the way now.\nWe'll leave you to it.
03.31.RigidC	Kinda lonely now.
03.32.Alice	Let's see how this has changed\nthings on the game screen.
04.00.Alice	The touch sensors' range is shown by the frame\nabove the green floor in the middle.
04.01.Alice	There's only one frame there, but there are two\ntouch sensors.
04.02.Alice	Use {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]} and {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]} to move the people onto the green\nfloor in turn.
04.03.Alice	When the blue person touches it, there's a bang.\nAnd when the red person touches it, they take\ndamage. Did you see?
04.04.Alice	Different things happened each time... That\nmeans different touch sensors are reacting.
04.05.Alice	When you've had a good look at the differences\nbetween the two people, pop back to the program\nscreen.
05.00.SensorL	How's that?
05.01.SensorR	It might look like there's just one thing in play...
05.02.SensorL	But actually...
05.03.SensorAll	There are differences at work!
05.05.FancyR	The very center is SO trendy this season.
05.06.Alice	The fancy objects have been visible just to make\neverything easier to understand.
05.07.Alice	But I think it's better if they're invisible, don't you?
05.09.FancyL	How dare you! We only got to take center stage\nfor a little while!
05.10.RigidC	But isn't it cool that, {[0001|1a00]}{color[0400]}even if you can't see them,\ntheir presence still has an effect{color[ffff]}{[0001|ffff]}?
05.11.EffectL	I guess that's what they mean when they talk\nabout hidden talents.
05.12.EffectR	Why would you wanna hide talent? It's much\nbetter to share it with the world!
05.13.EffectL	It's about modesty, I guess, but I'm thinkin' a\nshared talent is best.
05.13-01.EffectL	Some of us are bursting\nwith talent, eh? EH?
05.13-02.EffectR	Some of us are bursting\nwith talent, eh? EH?
05.14.Alice	Anyway... Have you got your head\naround how to differentiate between\ndifferent Nodon of the same type?
05.15.SensorL	Don't forget that we Touch-Sensor\nNodon can check {[0001|1a00]}{color[0400]}fancy objects\nthat look different{color[ffff]}{[0001|ffff]}.
05.18.HumanL	So if you connect us to {[0001|1a00]}{color[0400]}different Fancy-Object\nNodon{color[ffff]}{[0001|ffff]}...
05.19.HumanR	The Touch-Sensor Nodon can {[0001|1a00]}{color[0400]}differentiate{color[ffff]}{[0001|ffff]}\nbetween us!
05.23.Alice	The example we saw just now was Person Nodon,\nbut they aren't the only Nodon that can be\nconnected to Fancy-Object Nodon.
05.24.Alice	You can adapt this technique to a lot of different\nsituations, so keep it in mind.
05.25.Alice	And I think that's about all we've got for you.
05.26.HumanL	Bye!
05.27.FancyR	This time I was mostly working behind the scenes.\nBut one day I'll be the star of the show!
Guidebook_FallAndBreak.msbt
000	Hello, there!
001	As you can see, there's a {[0001|1a00]}{color[0400]}person\n{color[ffff]}{[0001|ffff]}on top of the brown platform.
002	You can move the person around\nwith {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]}, and jump by pressing {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]}.
003	Try moving the {[0001|1a00]}{color[0400]}person{color[ffff]}{[0001|ffff]} so\nthey {[0001|1a00]}{color[0400]}fall{color[ffff]}{[0001|ffff]} off the platform.
004	Hee hee! Did you see that?\nThe person fell off the\nplatform and {[0001|1a00]}{color[0400]}broke{color[ffff]}{[0001|ffff]}!
005	Today, I'll teach you how to\nmake it so that {[0001|1a00]}{color[0400]}the person\nbreaks if they fall off a platform{color[ffff]}{[0001|ffff]}!
006	Let's scoot on over\nto the program screen.
007	Hello, {[0201]}!\nYou seem well, comparatively speaking.
008	Why, hello!\nIt's lovely to see you!
009	Hehehe...welcome.\nWatch your step...
010	So, am I right that you want to learn\nhow to make it so that {[0001|1a00]}{color[0400]}the person breaks\nif they fall off a platform{color[ffff]}{[0001|ffff]}?! That's a doozy!
011	First, we'll go through {[0001|1a00]}{color[0400]}why the\nperson breaks {color[ffff]}{[0001|ffff]}in the first place.
012	The person breaks when I send a\nsignal to the {[0001|1a00]}{color[0400]}Destroy-Object Nodon{color[ffff]}{[0001|ffff]}.\nI'm pretty good at sending signals.
013	That's me...\nThe {[0001|1a00]}{color[0400]}Destroy-Object Nodon{color[ffff]}{[0001|ffff]}.\nHeh... Heh...
014	You've got {[0001|1a00]}{color[0400]}something you\nwant to break{color[ffff]}{[0001|ffff]}, don't you?\nI can see it in your eyes... Heh...
015	I just looove breaking\nthings, you know?
016	When I receive a {[0001|1a00]}{color[0400]}signal{color[ffff]}{[0001|ffff]}, well...\nI just can't help it. I break\n{[0001|1a00]}{color[0400]}Nodon connected to me{color[ffff]}{[0001|ffff]}.
017	The {[0001|1a00]}{color[0400]}Person Nodon {color[ffff]}{[0001|ffff]}and I are\n{[0001|1a00]}{color[0400]}connected{color[ffff]}{[0001|ffff]}, hm? Heh heh...
018	And because I'm {[0001|1a00]}{color[0400]}connected{color[ffff]}{[0001|ffff]} to the\n{[0001|1a00]}{color[0400]}Person Nodon{color[ffff]}{[0001|ffff]}, that means I'm always\nconnected to the {[0001|1a00]}{color[0400]}person{color[ffff]}{[0001|ffff]} in-game too...
019	So when I receive a signal from\nthe {[0001|1a00]}{color[0400]}Comparison Nodon{color[ffff]}{[0001|ffff]}, I break\nthe person... Whoopsie, heh heh...
020	I {[0001|1a00]}{color[0400]}break things when I\nreceive signals{color[ffff]}{[0001|ffff]}. That's just\nthe kind of Nodon I am...
021	Meanwhile, I send out a signal when\n{[0001|1a00]}{color[0400]}the person falls from a platform{color[ffff]}{[0001|ffff]}.
123	How do I know when the\nperson's fallen, you ask?
124	You want to know, don't you?\nI can tell. You reallllly want to know.
022	OK, I'll tell you. I know because\nI'm comparing the {[0001|1a00]}{color[0400]}person's position\n{color[ffff]}{[0001|ffff]}with the{[0001|1a00]}{color[0400]} height of the platform{color[ffff]}{[0001|ffff]}!
023	I don't work alone, though.\nThe {[0001|1a00]}{color[0400]}Location-Sensor Nodon {color[ffff]}{[0001|ffff]}and\n{[0001|1a00]}{color[0400]}Constant Nodon{color[ffff]}{[0001|ffff]} both lend me a hand.
024	{[0001|1a00]}{color[0400]}Location-Sensor Nodon{color[ffff]}{[0001|ffff]},\nat your service!
025	You can rely on me when\nyou want to know the {color[0400]}{[0001|1a00]}position\n{[0001|ffff]}{color[ffff]}of something, obviously.
026	Right now I'm {color[0400]}{[0001|1a00]}connected{[0001|ffff]}{color[ffff]} to the\n{color[0400]}{[0001|1a00]}Person Nodon{[0001|ffff]}{color[ffff]} so that I know\n{color[0400]}{[0001|1a00]}where the person is{[0001|ffff]}{color[ffff]} in the game.
028	Can you see that I have\nthree {[0001|1a00]}{color[0400]}output ports{color[ffff]}{[0001|ffff]}?
125	The top port is {color[0400]}{[0001|1a00]}X{[0001|ffff]}{color[ffff]}. It outputs the person's\n{color[0400]}{[0001|1a00]}horizontal position{[0001|ffff]}{color[ffff]}, or, in other words,\nwhere the person is side-to-side.
126	The middle port is {[0001|1a00]}{color[0400]}Y{color[ffff]}{[0001|ffff]}. It outputs {color[0400]}{[0001|1a00]}height{[0001|ffff]}{color[ffff]},\nmeaning how high up the person is.
127	The bottom port is {color[0400]}{[0001|1a00]}Z{[0001|ffff]}{color[ffff]}. It outputs {[0001|1a00]}{color[0400]}depth{color[ffff]}{[0001|ffff]}.\nHere, that would be how far forward\nor back the person is.
030	Right now, the {[0001|1a00]}{color[0400]}Comparison\nNodon {color[ffff]}{[0001|ffff]}wants to know {[0001|1a00]}{color[0400]}how\nhigh up the person is{color[ffff]}{[0001|ffff]}.
031	That's why the {[0001|1a00]}{color[0400]}Comparison Nodon {color[ffff]}{[0001|ffff]}is\nconnected to my middle, or {[0001|1a00]}{color[0400]}Y{color[ffff]}{[0001|ffff]}, output port.
032	I'm a {[0001|1a00]}{color[0400]}Constant Nodon{color[ffff]}{[0001|ffff]}!\nIt's my constant and unfailing\nduty to output precisely {[0001|1a00]}{color[0400]}0.00{color[ffff]}{[0001|ffff]}.
033	Here, {[0001|1a00]}{color[0400]}0.00 {color[ffff]}{[0001|ffff]}stands for the {[0001|1a00]}{color[0400]}height\nof the platform{color[ffff]}{[0001|ffff]}. Zero is a beautiful\nnumber, don't you think? So eternal.
034	Awww, thank you, {[0001|1a00]}{color[0400]}Location-Sensor Nodon{color[ffff]}{[0001|ffff]} and\n{[0001|1a00]}{color[0400]}Constant Nodon{color[ffff]}{[0001|ffff]}! You're true friends!
035	Oooh, did you figure out that I'm\ncomparing the {[0001|1a00]}{color[0400]}height of the platform\n{color[ffff]}{[0001|ffff]}with {[0001|1a00]}{color[0400]}how high up the person is{color[ffff]}{[0001|ffff]}?
036	Well done! To be precise, I'm\ncurrently set to {[0001|1a00]}{color[0400]}>{color[ffff]}{[0001|ffff]}. That nifty little\nsymbol means "greater than."
037	When the {[0001|1a00]}{color[0400]}height of the platform\n{color[ffff]}{[0001|ffff]}is {[0001|1a00]}{color[0400]}>{color[ffff]}{[0001|ffff]}, meaning greater than,\n{[0001|1a00]}{color[0400]}how high up the person is{color[ffff]}{[0001|ffff]}...
038	in other words, {[0001|1a00]}{color[0400]}when the person\nis lower than the platform{color[ffff]}{[0001|ffff]}, I send a\nsignal to the Destroy-Object Nodon!
039	That's {[0001|1a00]}{color[0400]}how the person gets broken\nwhen they fall off the platform{color[ffff]}{[0001|ffff]}!
040	Thanks, everyone!
041	This is all a bit complicated,\nso it's nice that you worked\ntogether to explain it.
042	It's been a while since we were on the\ngame screen, so let's pop back\nover there and take another look.
043	Try falling off the platform!
044	The {[0001|1a00]}{color[0400]}person{color[ffff]}{[0001|ffff]} went lower\nthan the {[0001|1a00]}{color[0400]}platform{color[ffff]}{[0001|ffff]}...
045	so that's why they broke!
046	If you want to take a closer look\nat anything, you can hit {[0001|1a00]}{color[0400]}Retry{color[ffff]}{[0001|ffff]}\nas many times as you'd like.
047	Head back to the program\nscreen when you're ready.
048	I hope you've got the hang of\nhow everything works so far.
049	Did you know that you can change\n{[0001|1a00]}{color[0400]}where the person breaks{color[ffff]}{[0001|ffff]} by changing\nthe number the {[0001|1a00]}{color[0400]}Constant Nodon{color[ffff]}{[0001|ffff]} outputs?
122	Why not try it out? There are all\nsorts of fun things you can compare!
050	Er, yes. Let's start by selecting\nthe {[0001|1a00]}{color[0400]}Constant Nodon{color[ffff]}{[0001|ffff]}.
051	Go ahead and open\nthe settings menu.
052	Try changing the value to {[0001|1a00]}{color[0400]}-2.00{color[ffff]}{[0001|ffff]}.
053	OK, you can close the settings.
054	Remember that {[0001|1a00]}{color[0400]}0.00{color[ffff]}{[0001|ffff]} was the\nheight of the platform in the game.
129	Based on that understanding,\n{[0001|1a00]}{color[0400]}-2.00{color[ffff]}{[0001|ffff]} is a point {[0001|1a00]}{color[0400]}below the platform{color[ffff]}{[0001|ffff]}.
055	Let's check the change\non the {[0001|1a00]}{color[0400]}game screen{color[ffff]}{[0001|ffff]}.
056	You know the drill!\nFall off the {[0001|1a00]}{color[0400]}platform{color[ffff]}{[0001|ffff]}.
057	Could you tell that the person broke\nat {[0001|1a00]}{color[0400]}a lower point{color[ffff]}{[0001|ffff]} than it used to?
058	When the height at the person's\nlocation drops below {[0001|1a00]}{color[0400]}-2.00{color[ffff]}{[0001|ffff]}...
059	this fulfills the {[0001|1a00]}{color[0400]}Comparison Nodon{color[ffff]}{[0001|ffff]}'s\nconditions. The Comparison Nodon then\nsends out a signal, and the {[0001|1a00]}{color[0400]}person is broken{color[ffff]}{[0001|ffff]}!
060	Let's go back to\nthe {[0001|1a00]}{color[0400]}program screen{color[ffff]}{[0001|ffff]}.
061	Why don't you try changing my\nsettings a bit? It's always best to have\ndifferences to compare, after all.
062	I've got an idea! Let's change {[0001|1a00]}{color[0400]}> {color[ffff]}{[0001|ffff]}to {[0001|1a00]}{color[0400]}<{color[ffff]}{[0001|ffff]}!\nThat second symbol means "less than."
063	Go on and select the Comparison\nNodon, then open its settings screen.
064	Now change this setting to {[0001|1a00]}{color[0400]}<{color[ffff]}{[0001|ffff]}! Here's a tip: the\nalligator always eats the bigger number.\nIt might not have teeth, but < is the alligator!
065	In other words, whichever way the "mouth"\non > or < is facing, that's the bigger value of\nthe two. In any case, close the settings again!
131	What will happen in-game?\nLet's take a look and find out!
132	Hm... We changed the Comparison\nNodon's setting to {[0001|1a00]}{color[0400]}<{color[ffff]}{[0001|ffff]}, and the person\nbroke right away...
134	Let's head back to the\nprogram screen, and I'll\nexplain why that happened.
135	The Constant Nodon is\ncurrently outputting {[0001|1a00]}{color[0400]}-2.00{color[ffff]}{[0001|ffff]}.
136	Since we changed the comparison method\nto {[0001|1a00]}{color[0400]}<{color[ffff]}{[0001|ffff]}, it'll send a signal when {[0001|1a00]}{color[0400]}-2.00 is less\nthan the person's vertical position{color[ffff]}{[0001|ffff]}.
137	That means the person will break\n{[0001|1a00]}{color[0400]}when it's higher up than -2.00{color[ffff]}{[0001|ffff]}.
138	{[0001|1a00]}{color[0400]}-2.00 {color[ffff]}{[0001|ffff]}is {[0001|1a00]}{color[0400]}lower than the platform{color[ffff]}{[0001|ffff]}.
139	The person starts out higher than\n{[0001|1a00]}{color[0400]}-2.00 {color[ffff]}{[0001|ffff]}because they're standing\non the platform. Do you get it?
140	So as soon as you move to the game\nscreen, the {[0001|1a00]}{color[0400]}Comparison Nodon{color[ffff]}{[0001|ffff]} sends\nout a {[0001|1a00]}{color[0400]}signal{color[ffff]}{[0001|ffff]}, and the person breaks.
066	Now, let's try altering the Constant\nNodon's output to change when the\nperson gets broken.
067	Open the settings for our reliable\nfriend, the {[0001|1a00]}{color[0400]}Constant Nodon{color[ffff]}{[0001|ffff]}.
068	Change the value to {[0001|1a00]}{color[0400]}2.00{color[ffff]}{[0001|ffff]}.
069	And close the settings again.
070	What we've done is change it\nso that the person will break if\ntheir {[0001|1a00]}{color[0400]}position is higher than 2.00{color[ffff]}{[0001|ffff]}.
071	{[0001|1a00]}{color[0400]}2.00 {color[ffff]}{[0001|ffff]}is higher than the platform.
072	So what should we\ndo to break the person?
073	Let's play around on the\n{[0001|1a00]}{color[0400]}game screen{color[ffff]}{[0001|ffff]} and find out.
074	Can you think of a way to move the\n{[0001|1a00]}{color[0400]}person{color[ffff]}{[0001|ffff]} higher than the platform?
075	(If not, try jumping with {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]}!)
076	Aha! The {[0001|1a00]}{color[0400]}person{color[ffff]}{[0001|ffff]} broke\nwhen you jumped!
128	That's because jumping made the\nperson's position go higher than {[0001|1a00]}{color[0400]}2.00{color[ffff]}{[0001|ffff]}.
077	So that's how to program it so that\njumping triggers the person's breakage...
078	Next, let's try making it so\nthat {[0001|1a00]}{color[0400]}something else breaks\n{color[ffff]}{[0001|ffff]}when the person jumps.
080	Hm... What can we\nhave the person break?
081	I know! How about an {[0001|1a00]}{color[0400]}apple{color[ffff]}{[0001|ffff]}?
082	For that we need a {[0001|1a00]}{color[0400]}Fancy-Object Nodon\n{color[ffff]}{[0001|ffff]}that makes an {[0001|1a00]}{color[0400]}apple{color[ffff]}{[0001|ffff]} in the game.
141	You called? ♥
086	Next, we'll need to change things so\nthat the {[0001|1a00]}{color[0400]}Destroy-Object Nodon {color[ffff]}{[0001|ffff]}breaks\nthe {[0001|1a00]}{color[0400]}apple{color[ffff]}{[0001|ffff]} instead of the person.
087	Select the connection between\nthe {[0001|1a00]}{color[0400]}Destroy-Object Nodon{color[ffff]}{[0001|ffff]} and\nthe {[0001|1a00]}{color[0400]}Person Nodon{color[ffff]}{[0001|ffff]}...
088	and get rid of it.
089	Now, connect the {[0001|1a00]}{color[0400]}apple\nFancy-Object Nodon {color[ffff]}{[0001|ffff]}instead.
090	Finally, we'll need to\nchange the settings for the\n{[0001|1a00]}{color[0400]}Destroy-Object Nodon{color[ffff]}{[0001|ffff]}.
091	Select the {[0001|1a00]}{color[0400]}Destroy What?{color[ffff]}{[0001|ffff]} option.
130	{[0001|1a00]}{color[0400]}Disable{color[ffff]}{[0001|ffff]} {[0001|1a00]}{color[0400]}Person{color[ffff]}{[0001|ffff]}.
092	Then, {[0001|1a00]}{color[0400]}enable{color[ffff]}{[0001|ffff]} {[0001|1a00]}{color[0400]}Apple{color[ffff]}{[0001|ffff]} instead!
093	Close this screen...
094	Then close the\nsettings screen too.
095	The {[0001|1a00]}{color[0400]}apple should now break\n{color[ffff]}{[0001|ffff]}when the{[0001|1a00]}{color[0400]} person jumps{color[ffff]}{[0001|ffff]}!
096	Oooh, I get to destroy an {[0001|1a00]}{color[0400]}apple\n{color[ffff]}{[0001|ffff]}now, eh? Heh heh... Ka-squish...
097	Crush... Break... Destroy...
098	Erm... Yeah. OK then.\nLet's go the to {[0001|1a00]}{color[0400]}game screen{color[ffff]}{[0001|ffff]}.
112	Use {[0001|1a00]}{color[0400]} {color[ffff]}{[0001|ffff]}to jump.\nDon't forget to\nwatch the {color[0400]}{[0001|1a00]}apple{[0001|ffff]}{color[ffff]}!
113	See that?!\nThe {[0001|1a00]}{color[0400]}apple{color[ffff]}{[0001|ffff]} exploded!
114	You just saw how you can change\n{[0001|1a00]}{color[0400]}what the Destroy-Object Nodon breaks{color[ffff]}{[0001|ffff]}.\nYou can use that in all kinds of cool setups!
115	This time, we used {[0001|1a00]}{color[0400]}a jump to trigger the\nbreakage of an apple{color[ffff]}{[0001|ffff]}, but I'm sure you'll\nthink of even more exciting uses than that.
116	Let's go back to the\n{[0001|1a00]}{color[0400]}program screen{color[ffff]}{[0001|ffff]} one last time.
117	Welcome back! You know...\nYou look more knowledgeable\nthan you did when we started.
118	Now you know how to change\nthe {[0001|1a00]}{color[0400]}Constant Nodon{color[ffff]}{[0001|ffff]}'s settings\nto change {[0001|1a00]}{color[0400]}where something breaks{color[ffff]}{[0001|ffff]}...
119	and how to change what breaks\nby changing the {[0001|1a00]}{color[0400]}Destroy-Object\nNodon{color[ffff]}{[0001|ffff]}'s settings too!
120	Just think of how many ways you\ncould use this new knowledge in\ngames of your own invention.
121	See you again soon! I'll break\nanything for you... Any time you want...\nYou just gotta ask...
Guidebook_FreeSlide.msbt
00.00.Alice	Hello there, {[0201]}!
00.01.Alice	On the game screen, you can see\na box balanced on a cylinder.
00.02.Alice	This time you can use {color[0400]}{[0001|1a00]}{[0001|ffff]}{color[ffff]} and {color[0400]}{[0001|1a00]} {[0001|ffff]}{color[ffff]}to move\nthe blue box, instead of the normal .
00.03.Alice	See? You can move the box in all\ndirections, but the way the box itself\nis facing doesn't actually change.
00.04.Alice	This time I'll explain how you can\ncreate such complex movements\nusing the {[0001|1a00]}{color[0400]}Free-Slide-Connector Nodon{color[ffff]}{[0001|ffff]}.
00.05.Alice	Let's start by going to the program screen.
01.00.Free	Uh... What?
01.02.Button	Well press my soul, {[0201]}!\nWhat are you doing here?
01.04.Button	Oh, let me guess: you want\nto learn all about the\n{[0001|1a00]}{color[0400]}Free-Slide-Connector Nodon{color[ffff]}{[0001|ffff]}.
01.05.Button	Hey! That means you,\nFree-Slide-Connector Nodon!
01.06.Free	Yeah... Not really in the mood\nfor a chat right now, you know?
01.07.Button	Seriously?
01.08.Button	Well, fine. I suppose it's up\nto us to get the ball rolling.
01.09.Sylinder	Heyo. Object Nodon here.\nI'm generating a {color[0400]}{[0001|1a00]}cylinder{[0001|ffff]}{color[ffff]}.\n{[0001|1a00]}{color[0400]}Steady and unmoving{color[ffff]}{[0001|ffff]}, uh-huh.
01.10.Cube	I'm making a {color[0400]}{[0001|1a00]}blue box{[0001|ffff]}{color[ffff]}.\nIt can {color[0400]}{[0001|1a00]}move around{[0001|ffff]}{color[ffff]}.
01.12.Cube	We have a {color[0400]}{[0001|1a00]}vertical connection{[0001|ffff]}{color[ffff]}, so\non the game screen the box is\non top of the cylinder. Got it?
01.13.Sylinder	But it's not a direct\nconnection, you'll notice.
01.14.Sylinder	I'm connected to yonder\nFree-Slide-Connector Nodon.
01.15.Cube	I'm connected to the\nFree-Slide-Connector Nodon too.
01.16.Button	So you see that the {[0001|1a00]}{color[0400]}Free-Slide-\nConnector Nodon's sandwiched\n{color[ffff]}{[0001|ffff]}between the two Object Nodon!
01.18.Free	Oh, hey. Appreciate your patience.\nI'm feeling more motivated now.
01.18-01.Free	I guess I'll explain\na bit about myself.
01.19.Free	If you {color[0400]}{[0001|1a00]}connect objects to both ends of me{[0001|ffff]}{color[ffff]},\nthose objects will be able to {color[0400]}{[0001|1a00]}slide{[0001|ffff]}{color[ffff]}!
01.20.Free	Do you know the Slide-Connector\nNodon? Yeah, it's like that.
01.21.Free	But I'm a bit different. I have\nthree {[0001|1a00]}{color[0400]}input ports{color[ffff]}{[0001|ffff]}. {[0001|1a00]}{color[0400]}X{color[ffff]}{[0001|ffff]}, {[0001|1a00]}{color[0400]}Y{color[ffff]}{[0001|ffff]}, {[0001|1a00]}{color[0400]}Z{color[ffff]}{[0001|ffff]}. Count 'em.
01.22.Free	Use them to input numbers that\ndescribe exactly {color[0400]}{[0001|1a00]}how much slide-ocity\n{[0001|ffff]}{color[ffff]}the X, Y, and Z axes should have.
01.23.Free	Input {[0001|1a00]}{color[0400]}1.00{color[ffff]}{[0001|ffff]} to the {[0001|1a00]}{color[0400]}X port{color[ffff]}{[0001|ffff]}, and you\ncan {[0001|1a00]}{color[0400]}slide it 1.00 meter to the right{color[ffff]}{[0001|ffff]}.
01.24.Free	An input of {[0001|1a00]}{color[0400]}1.00{color[ffff]}{[0001|ffff]} to the {[0001|1a00]}{color[0400]}Y port{color[ffff]}\n{[0001|ffff]}will let it slide {[0001|1a00]}{color[0400]}1.00 meter upward{color[ffff]}{[0001|ffff]}.
01.25.Button	If both those inputs come in\nat the same time, then it'll be\nable to slide diagonally!
01.29.Free	You might think there'd be a hard\nrange from -1.00 to 1.00 or whatever,\nbut you'd be wrong.
01.30.Free	Whether you want to move 10 meters or\n100 meters, just tell my input ports and\nthey'll sliiide you right where you want to be.
01.34.Free	Oh, and I can also {color[0400]}{[0001|1a00]}ignore{[0001|ffff]}{color[ffff]} numbers\nthat come in to my input ports.
01.35.Free	I know that's bad because you've just\nspent all that effort setting up inputs,\nbut sometimes I just need to chill, you know?
01.36.Free	Whew... All that explaining wore me out. There's\nmore to tell, but I'm too tired. Come back later.
01.36-01.Free	See ya!
01.37.StickH	Unbelievable...
01.38.Alice	Not much we can do about that. Let's cut out the\nmiddle Nodon and take a look at the {color[0400]}{[0001|1a00]}ignore input\n{[0001|ffff]}{color[ffff]}settings ourselves, OK?
01.40.Alice	Select Free-Slide-Connector Nodon.
01.41.Alice	Open the settings screen.
01.42.Alice	This is where you can enable or\ndisable {[0001|1a00]}{color[0400]}Slide Motion Input{color[ffff]}.{[0001|ffff]}
01.43.Alice	The {[0001|1a00]}{color[0400]}X{color[ffff]}{[0001|ffff]}, {[0001|1a00]}{color[0400]}Y{color[ffff]}{[0001|ffff]}, and {[0001|1a00]}{color[0400]}Z{color[ffff]}{[0001|ffff]} {[0001|1a00]}{color[0400]}sections are enabled{color[ffff]}{[0001|ffff]}, which\nmeans the object can slide on all axes {color[0400]}{[0001|1a00]}according\nto the inputs{[0001|ffff]}{color[ffff]}.
01.44.Alice	First let's {color[0400]}{[0001|1a00]}disable Y{[0001|ffff]}{color[ffff]}.
01.45.Alice	OK, that should do it. Close the settings screen.
01.46.Alice	And let's take a sneak peek at the game screen.
02.00.Alice	The blue box fell to the floor!
02.01.Alice	Now that the {[0001|1a00]}{color[0400]}Y port{color[ffff]}{[0001|ffff]}'s input is being {[0001|1a00]}{color[0400]}ignored{color[ffff]}{[0001|ffff]}, it\nlooks like {[0001|1a00]}{color[0400]}gravity{color[ffff]}{[0001|ffff]}'s got the best of the blue box.
02.02.Alice	Test the {[0001|1a00]}Y {[0001|ffff]}port input with {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]}.
02.03.Alice	Anticlimactic, eh?
02.05.Alice	The number in the Y port is being\nvery efficiently ignored.
02.06.Alice	Now move {color[0400]}{[0001|1a00]}up, down, left, and right with {[0001|ffff]}{color[ffff]}.
02.07.Alice	It moves around, faithful\nto your every whim.
02.08.Alice	That's because the {[0001|1a00]}{color[0400]}Slide Motion{color[ffff]}\n{color[0400]}Input{color[ffff]}{[0001|ffff]} settings have {[0001|1a00]}{color[0400]}X{color[ffff]}{[0001|ffff]} and {[0001|1a00]}{color[0400]}Z{color[ffff]}{[0001|ffff]} {[0001|1a00]}{color[0400]}enabled{color[ffff]}{[0001|ffff]},\nso it moves {[0001|1a00]}{color[0400]}following your input{color[ffff]}{[0001|ffff]}.
02.09.Alice	When you're done checking out\nhow that moves, let's head back\nto the program screen.
03.00.Button	I can't believe it! You used  and everything!\nThat rude Nodon just ignored it!
03.03.Alice	Next let's mess around with the {color[0400]}{[0001|1a00]}z-axis{[0001|ffff]}{color[ffff]}!
03.04.Alice	Select the Free-Slide-Connector Nodon again.
03.05.Alice	Open up that settings screen.
03.06.Alice	This time try {color[0400]}{[0001|1a00]}disabling{[0001|ffff]}{color[ffff]} {color[0400]}{[0001|1a00]}Z{[0001|ffff]}{color[ffff]}.
03.07.Alice	And close it all up again.
03.10.Alice	This time we'll get a person to help us push\nthe objects around and see how they move.
03.11.Human	Hiya! I won't let you down!
03.12.Free	Oh calm down, will ya?
03.13.Alice	Let's see it in action on the game screen.
04.00.Alice	So this time the only input that should be obeyed\nis from the x-axis.
04.01.Alice	Test out how the blue box reacts by moving\n{color[0400]}{[0001|1a00]} in all directions{[0001|ffff]}{color[ffff]} and pressing {color[0400]}{[0001|1a00]}{[0001|ffff]}{color[ffff]}.
04.02.Alice	It looks like it'll only move left and right.
04.03.Alice	Next, try moving the person {color[0400]}{[0001|1a00]}in any direction\nwith {[0001|ffff]}{color[ffff]}, and give the box a push.
04.04.Alice	Aha! The person can move it forward and\nbackward.
04.05.Alice	It's {[0001|1a00]}{color[0400]}moving{color[ffff]}{[0001|ffff]} while ignoring\nany z-axis inputs.
04.06.Alice	The x-axis inputs are being obeyed, though, so\nthe person can't push it left and right no matter\nhow hard they try.
04.07.Alice	By the way, just in case you lose track of the\nbox or person on the screen, don't forget the\nRetry button is there to help you out.
04.08.Alice	When you're ready, take us\nback to the program screen.
05.01.StickV	I was swinging around beautifully and nobody\npaid any attention!
05.02.Alice	Finally, let's ignore the x-axis inputs too.
05.03.Alice	You know the drill by now. Select the\nFree-Slide-Connector Nodon.
05.04.Alice	Open the settings screen.
05.05.Alice	And {[0001|1a00]}{color[0400]}disable X{color[ffff]}{[0001|ffff]}.
05.06.Alice	Close those settings now.
05.07.Alice	Now all the numbers that have been input should\nbe ignored.
05.08.Alice	Let's check the game screen to make sure.
06.00.Alice	Try moving {color[0400]}{[0001|1a00]} in any direction{[0001|ffff]}{color[ffff]} and\n{color[0400]}{[0001|1a00]}pressing  {[0001|ffff]}{color[ffff]}to move the blue box.
06.01.Alice	Can't do it, can you?
06.02.Alice	Let's see if the player character can\ndo any better. Make it push the blue box,\npushing {[0001|1a00]}{color[0400]} in any direction{color[ffff]}{[0001|ffff]}.
06.03.Alice	Ah, it moved when the person pushed it.
06.04.Alice	It can move around just fine, forward, backward,\nleft, and right when the person pushes it.
06.07.Alice	When you've seen enough, let's go back to the\nprogram screen.
07.01.Free	All right, my break time's over.\nWhere were we?
07.02.Free	Oh, you're done? Well, feel free to wrap it all up.\nBuh-bye now.
07.09.Alice	Well, I just explained the whole thing but fine...\nDo you understand what Free-Slide-Connector\nNodon can do now?
07.10.Free	I make things slide, duh. Easy or what? Connect\nthem up, and whoosh!
07.11.Button	You can control the degree and movement of\nslide in the settings for the {[0001|1a00]}{color[0400]}three input ports{color[ffff]}{[0001|ffff]}.
07.13.Free	Yeah, but depending on the settings I might\nignore it.
07.14.Cube	When the input's ignored, an object can be moved\nin that direction freely by an external force.
07.16.Alice	You can use a Free-Slide-Connector Nodon to\nhelp you craft some nifty complex movements,\nso it's worth mastering.
07.17.Alice	And that's about all from me.
07.18.Human	Byeee!
07.19.Free	You want to make games more freely,\nright, {[0201]}?
07.20.Free	Well, they do say freedom is complicated...
07.21.Free	Well, I'm sure that before long you'll have\na game that shows off your unbridled creativity,\nright {[0201]}?
Guidebook_GameCamera.msbt
000	Hello there!
001	On the game screen you\ncan see two {[0001|1a00]}{color[0400]}boxes{color[ffff]}{[0001|ffff]}.
002	The one on the left is blue,\nand the one on the right is red.
003	Huh?
004	It looks like the red box\nis {[0001|1a00]}{color[0400]}poking off the side{color[ffff]}{[0001|ffff]} of\nthe game screen...
005	I wonder why that could be.\nLet's have a look on the {[0001|1a00]}{color[0400]}program\nscreen{color[ffff]}{[0001|ffff]} and try to figure it out.
006	It's our darling {[0201]}!
007	Oh, I'm so glad you're here! ♥
008	Heyo!
009	What can I do you for today?
010	Oooh, I know that one!
011	You came to find out all about\nme, didn't you? Tee-hee! I'm the\n{[0001|1a00]}{color[0400]}Game-Screen Nodon{color[ffff]}{[0001|ffff]}. ♥
012	I'm going to explain everything,\nso pay attention for a moment, dear.
013	My job is {[0001|1a00]}{color[0400]}to surround\nother Nodon{color[ffff]}{[0001|ffff]}. Like I'm\ngiving them a biiig hug!
014	And why do I do that?\nWell...
015	The Nodon that I surround are {[0001|1a00]}{color[0400]}displayed on\nthe game screen{color[ffff]}{[0001|ffff]} so that their fabulousness is\nconveyed to the audience! That's why, darling!
016	The {[0001|1a00]}{color[0400]}game screen {color[ffff]}{[0001|ffff]}you saw just now,\n{[0201]}, was displaying\nexactly {[0001|1a00]}{color[0400]}what I'm surrounding{color[ffff]}{[0001|ffff]}!
017	If I do say so myself, I think\nI did a good job of capturing\ntheir thrilling performance!
018	Er, actually, a box is\n{[0001|1a00]}{color[0400]}sticking out {color[ffff]}{[0001|ffff]}of the frame...
019	Ha—wha?! You can't be serious!
020	It's me, I'm afraid.
021	Eek! So it's TRUE?!
022	Just doin' my job, y'know.
023	No, no, NO! This is all wrong!\n{[0001|1a00]}{color[0400]}Perfectly displaying{color[ffff]}{[0001|ffff]} Nodon is\nmy job, you know!
024	{[c903]}{[0201]}, could you\nmove the {[0001|1a00]}{color[0400]}Object Nodon inside\nmy frame{color[ffff]}{[0001|ffff]}? Don't delay!
063	Move the Object Nodon\n{[0001|1a00]}{color[0400]}into the Game-Screen Nodon{color[ffff]}{[0001|ffff]}!
025	Now I'm over here.
026	Much better, now I'm getting\nObject Nodon's best side!
064	I...think we should go check\nthings out on the game screen.
028	Because we moved the {[0001|1a00]}{color[0400]}Object Nodon\n{color[ffff]}{[0001|ffff]}into the {[0001|1a00]}{color[0400]}Game-Screen Nodon's frame\n{color[ffff]}{[0001|ffff]}on the {[0001|1a00]}{color[0400]}program screen{color[ffff]}{[0001|ffff]}...
029	the red box is now {[0001|1a00]}{color[0400]}fully\ndisplayed {color[ffff]}{[0001|ffff]}on the {[0001|1a00]}{color[0400]}game screen{color[ffff]}{[0001|ffff]}!
030	That's a relief. Let's pop\nback to the program screen.
032	Well, what did you think?\nCould you see the red box\nin all its red, boxy glory?
033	So leave {[0001|1a00]}{color[0400]}capturing the game\nscreen{color[ffff]}{[0001|ffff]} to me, OK? I'll make\nsure to get its best performance.
034	Ooh, ooh, and...
035	it isn't only the {[0001|1a00]}{color[0400]}Object Nodon{color[ffff]}{[0001|ffff]} that\ncan move around, though. I can even\n{[0001|1a00]}{color[0400]}move the game screen itself{color[ffff]}{[0001|ffff]}!
036	Yoo-hoo, my sweet little\nred box Object Nodon!
037	Yes?
038	You're just so red and\nsquare and fabulous! I need\nyou center-screen, and fast.
040	Dear {[0201]}, won't you\nmove me so that our boxy Nodon friend\nis right in the {[0001|1a00]}{color[0400]}center{color[ffff]}{[0001|ffff]} of the shot?
067	Move the Game-Screen\nNodon to the right.
041	I need to be the right size too,\nso don't forget that! Tee-hee!
066	Change the size of the Nodon so\nthat it fits within the blue frame.
042	Wonderful!
043	Let's check on the game screen.
044	The red box is dead center\nand also looks nice and {[0001|1a00]}{color[0400]}big\n{color[ffff]}{[0001|ffff]}now, doesn't it?
045	By {[0001|1a00]}{color[0400]}moving{color[ffff]}{[0001|ffff]} the {[0001|1a00]}{color[0400]}Game-\nScreen Nodon{color[ffff]}{[0001|ffff]} around\nand {[0001|1a00]}{color[0400]}changing its size{color[ffff]}{[0001|ffff]}...
046	you can change {[0001|1a00]}{color[0400]}how\nthings are displayed\n{color[ffff]}{[0001|ffff]}on the game screen.
047	That being said, we've now\nmade it so that the blue box\nis off the screen entirely.
048	Let's head on back\nto the program screen.
049	Welcome back!
050	Well? The box was\n{[0001|1a00]}{color[0400]}perfectly centered{color[ffff]}{[0001|ffff]}, wasn't it?
051	It was, but that means\nthat the blue box is\ncompletely out of sight.
052	Any Nodon that are {[0001|1a00]}{color[0400]}outside of the Game-\nScreen Nodon's frame won't appear on-screen{color[ffff]}{[0001|ffff]}.\nThat's why the blue box no longer shows up.
053	Oh no! We simply\ncan't have that.
054	It's VERY important to me that\nthe other Nodon are captured\nproperly on the game screen.
055	Sweet {[0201]},\npleeease move the stray Object\nNodon so it's inside my frame again.
068	Just move it into the\nframe. That's the ticket.
056	Perfect! The camera loves\nyou as much as I do, darling!
057	Let's check on the game\nscreen just to be sure.
058	Because you made sure that\nboth {[0001|1a00]}{color[0400]}Object Nodon{color[ffff]}{[0001|ffff]} were inside\nthe {[0001|1a00]}{color[0400]}Game-Screen Nodon{color[ffff]}{[0001|ffff]}...
059	both {[0001|1a00]}{color[0400]}boxes{color[ffff]}{[0001|ffff]} are now nice\nand big in the game.
060	Just remember that you can {[0001|1a00]}{color[0400]}change\nwhat's shown in the game {color[ffff]}{[0001|ffff]}by changing\nwhat the Game-Screen Nodon surrounds!
061	Let's pop back to the\n{[0001|1a00]}{color[0400]}program screen{color[ffff]}{[0001|ffff]} one last time.
069	Welcome back!
070	{[c903]}{[0201]}! Let's always\ncollaborate and do justice to the magnificent\nvisuals of your mighty games, OK?
071	Together we'll make the\nbest-looking games EVER!
072	Well, buh-bye for now.
Guidebook_HingeRotate.msbt
000	Hello, hello.
001	How odd! Look at that sphere and box\narrangement on the right, there.
002	How about we teach you how to {color[0400]}{[0001|1a00]}make a box\nrotate around a sphere{[0001|ffff]}{color[ffff]}? Sounds like fun, eh?
003	Right now it's just {[0001|1a00]}{color[0400]}stuck in the air{color[ffff]}{[0001|ffff]}.\nNot moving at all.
004	Use {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]} to move the {[0001|1a00]}{color[0400]}UFO{color[ffff]}{[0001|ffff]} and bump it into the\nbox. See if it moves.
006	Nothing doing, eh? Let's go to the program\nscreen and see what's going on.
007	Hello, {[0201]}!
008	Wonderful! Today is just PERFECT for dancing!
009	That's what you want, isn't it? To learn how to\nmake objects {[0001|1a00]}{color[0400]}spin and twirl{color[ffff]}{[0001|ffff]}!
010	I'm so glad you want to spin with me!
011	It's me!\n{[0001|1a00]}{color[0400]}Hinge-Connector Nodon{color[ffff]}{[0001|ffff]}!
012	Let me introduce you to my besties on either side\nof me: strapping young {[0001|1a00]}{color[0400]}Object Nodon{color[ffff]}{[0001|ffff]}!
013	Hi. I'm a {[0001|1a00]}{color[0400]}sphere{color[ffff]}{[0001|ffff]}.
014	And I'm a {[0001|1a00]}{color[0400]}box{color[ffff]}{[0001|ffff]}.
014-01	I'm {[0001|1a00]}{color[0400]}connected{color[ffff]}{[0001|ffff]} to the sphere\nObject Nodon, you see.
015	Right, let's get that {[0001|1a00]}{color[0400]}box spinning{color[ffff]}{[0001|ffff]}!
016	Point number one! Get rid of that {[0001|1a00]}{color[0400]}connection\nbetween the box and the sphere{color[ffff]}{[0001|ffff]}! Bye-bye,\nconnection!
017	Select the {[0001|1a00]}{color[0400]}connection{color[ffff]}{[0001|ffff]} between the Object Nodon.
018	And {[0001|1a00]}{color[0400]}delete it{color[ffff]}{[0001|ffff]}.
019	Point number two! Time for a me sandwich!\n{color[0400]}{[0001|1a00]}Connect me up to them both{[0001|ffff]}{color[ffff]}, please!
020	First, connect the {color[0400]}{[0001|1a00]}box Object Nodon{[0001|ffff]}{color[ffff]} to the\nHinge-Connector Nodon.
021	Then connect the {color[0400]}{[0001|1a00]}sphere Object Nodon{[0001|ffff]}{color[ffff]} to the\nHinge-Connector Nodon.
022	Fantabulous! Now that boxamasphere thing will\n{color[0400]}{[0001|1a00]}spin{[0001|ffff]}{color[ffff]} beautifully!
026	Let's tango, Object Nodon!
027	Let's take a peek at the game screen.
028	Give the box a nudge with the UFO.
029	And watch it {[0001|1a00]}{color[0400]}rotate{color[ffff]}{[0001|ffff]}!
030	This is what happens when you connect a\n{[0001|1a00]}{color[0400]}Hinge-Connector Nodon{color[ffff]}{[0001|ffff]} in the middle of\nsomething.
031	The {[0001|1a00]}{color[0400]}connected objects spin around{color[ffff]}{[0001|ffff]}!
119	The sphere is set so it won't move. It acts\nas a {[0001|1a00]}{color[0400]}steady center that the box spins around{color[ffff]}{[0001|ffff]}.
032	Quick, back to the program screen before\nyour head starts spinning too.
033	Hey, {[0201]}! Did you see that\nexcellent box-twirling?
035	Did you have a nice dance, Object Nodon?
036	It was pretty nice.
037	I'm dizzy now. Whoa...
038	Oh, you do know that it's not JUST about the\ntwirling and the spinning, right?
039	You can set a {[0001|1a00]}{color[0400]}WHOLE RANGE{color[ffff]}{[0001|ffff]}! You can actually\nset a {[0001|1a00]}{color[0400]}rotation range{color[ffff]}{[0001|ffff]} in the settings. Can you\nbelieve it?
040	Get into my settings, {[0201]},\nand dig around! Change my {[0001|1a00]}{color[0400]}range{color[ffff]}{[0001|ffff]}!
041	Open up the Hinge-\nConnector Nodon's settings.
042	How far will the object rotate at this range?\nLooks like we can change the {[0001|1a00]}{color[0400]}range of the \nangle of rotation{color[ffff]}{[0001|ffff]}.
044	Set the left-hand slider to {[0001|1a00]}{color[0400]}-45.00{color[ffff]}{[0001|ffff]}, and the\nright-hand slider to {[0001|1a00]}{color[0400]}45.00{color[ffff]}{[0001|ffff]}.
046	That's quite a narrow {[0001|1a00]}{color[0400]}range{color[ffff]}{[0001|ffff]}, isn't it?
047	So now it should rotate {[0001|1a00]}{color[0400]}from -45 degrees\nto 45 degrees{color[ffff]}{[0001|ffff]}.
048	Close those settings now.
049	Time to foxtrot!
050	Let's head over to the game screen.
051	Give that box a good whack.
052	We set the {[0001|1a00]}{color[0400]}Hinge-Connector Nodon{color[ffff]}{[0001|ffff]}'s {[0001|1a00]}{color[0400]}range{color[ffff]}{[0001|ffff]} to a\nnarrower angle of rotation, you see.
053	The box seems to be{color[0400]}{[0001|1a00]} stuck in mid-rotation{[0001|ffff]}{color[ffff]}!
054	Let's get back to the program screen.
055	How did you like that? {color[0400]}{[0001|1a00]}It stopped right in the\nmiddle {[0001|ffff]}{color[ffff]}of the best part, the spin!
056	Extra info alert!
057	D'you wanna know what happens if you make\nthe {[0001|1a00]}{color[0400]}range{color[ffff]}{[0001|ffff]} teensy tiny?
058	The object TILTS! Yep! It {[0001|1a00]}{color[0400]}gets stuck diagonally{color[ffff]}{[0001|ffff]}!
059	Let's rummage around in those settings some\nmore and try it out.
060	Set the {[0001|1a00]}{color[0400]}left-hand slider{color[ffff]}{[0001|ffff]} to {[0001|1a00]}{color[0400]}45.00{color[ffff]}{[0001|ffff]}, just like the\nright-hand slider.
061	So the rotation {[0001|1a00]}{color[0400]}range{color[ffff]}{[0001|ffff]} is now {[0001|1a00]}{color[0400]}45 degrees\nto 45 degrees{color[ffff]}{[0001|ffff]}.
062	Which means that it can only be at\n{[0001|1a00]}{color[0400]}exactly 45 degrees{color[ffff]}{[0001|ffff]}!
063	Close the settings.
064	I wonder what the game screen looks like now.
065	Well, look at that! The box is neatly {color[0400]}{[0001|1a00]}slanted{[0001|ffff]}{color[ffff]}!
066	Not even our intrepid UFO friend can knock it\nout of orbit.
067	The {[0001|1a00]}{color[0400]}angle is fixed in place{color[ffff]}{[0001|ffff]}, so it's stuck fast and\nwon't move.
068	Let's go back to the program screen.
069	Let me guess... {color[0400]}{[0001|1a00]}It didn't move at all{[0001|ffff]}{color[ffff]}?
069-01	Are you in awe? Astounded? You are,\naren't you?
070	But wait! There's more!
071	Sending signals to my {[0001|1a00]}{color[0400]}input port{color[ffff]}{[0001|ffff]} can\nmake those objects twirl too.
072	First reset my {color[0400]}{[0001|1a00]}range{[0001|ffff]}{color[ffff]} settings. Let's go back to\nsquare one.
073	Open the Hinge-Connector Nodon's settings.
074	Set the left-hand slider to {[0001|1a00]}{color[0400]}-180.00{color[ffff]}{[0001|ffff]} and the\nright-hand slider to {[0001|1a00]}{color[0400]}180.00{color[ffff]}{[0001|ffff]}, just like they were\nbefore we started playing around with them.
114	Want to give it a look on the game screen?
115	You know what to do.\nSteer the UFO into the box!
116	Round and round and round it goes!
117	Now let's go back to the program screen.
076	Everything's ready and rarin' to go! Time for\nmy super bestie {[0001|1a00]}{color[0400]}Constant Nodon{color[ffff]}{[0001|ffff]} to put in an\nappearance!
077	I am the ever-steady, unrotating Constant Nodon.
080	Connect us up by my {[0001|1a00]}{color[0400]}input port{color[ffff]}{[0001|ffff]}!\nJoin us! Join us! Join us!
081	And now the objects will rotate at an {[0001|1a00]}{color[0400]}angle\n{color[ffff]}{[0001|ffff]}matching the {[0001|1a00]}{color[0400]}number input{color[ffff]}{[0001|ffff]}!
082	Let's get right in there and mess around, shall\nwe? Open up {[0001|1a00]}{color[0400]}Constant Nodon{color[ffff]}{[0001|ffff]}'s settings.
083	Set it to {[0001|1a00]}{color[0400]}90.00{color[ffff]}{[0001|ffff]}.
084	Close it all up again.
085	Connect that {[0001|1a00]}{color[0400]}Constant Nodon{color[ffff]}{[0001|ffff]} at {[0001|1a00]}90.00{[0001|ffff]} to the\n{[0001|1a00]}{color[0400]}Hinge-Connector Nodon {color[ffff]}{[0001|ffff]}and let's see what\nhappens.
086	Oh, nice! All fixed up at a sweet\n{color[0400]}{[0001|1a00]}90 degree rotation{[0001|ffff]}{color[ffff]}!
087	Let's have a look.
088	The {[0001|1a00]}{color[0400]}box{color[ffff]}{[0001|ffff]} has {[0001|1a00]}{color[0400]}rotated 90 degrees{color[ffff]}{[0001|ffff]}!
118	That's because of the input our\nHinge-Connector Nodon's getting,\nyou see? {color[0400]}{[0001|1a00]}90.00{[0001|ffff]}{color[ffff]} input means {color[0400]}{[0001|1a00]}90°{[0001|ffff]}{color[ffff]} rotation.
089	Our little UFO can't budge it.
090	So, got your head around what happens when\nyou give a Hinge-Connector Nodon input?
091	Good stuff! Let's get back to the {[0001|1a00]}{color[0400]}program screen{color[ffff]}{[0001|ffff]}.
092	You're baaack!
110	Any time you want to go for a spin, or take any\nother object out for a spin, I'm your Nodon!\nPROMISE ME you won't twirl without me!
111	I INSIST that I be your exclusive rotation\nspecialist! Now, spin with me,\n{[0201]}!
112	See ya 'round.
113	And round, and round, and round...
Guidebook_HingeSlide.msbt
000	Hello there!
001	On the screen we can see two {[0001|1a00]}{color[0400]}people{color[ffff]}{[0001|ffff]}, and this\nsetup here made of a blue {[0001|1a00]}{color[0400]}box{color[ffff]}{[0001|ffff]} and\na red {[0001|1a00]}{color[0400]}cylinder{color[ffff]}{[0001|ffff]}. Exciting stuff!
002	What happens if you make the {color[0400]}{[0001|1a00]} person{[0001|ffff]}{color[ffff]} and the\n{[0001|1a00]}{color[0400]} person{color[ffff]}{[0001|ffff]} mosey up to it and give it a bump?
003	The {[0001|1a00]}{color[0400]}box moves{color[ffff]}{[0001|ffff]} when the people hit it.
006	You guessed it! I'm going to show you \nhow to make {[0001|1a00]}{color[0400]}objects slide{color[ffff]}{[0001|ffff]}!
007	Go to the program screen, and let's get started.
008	Hey, {[0201]}! Remember your\nold pal {[0001|1a00]}{color[0400]}Slide-Connector Nodon{color[ffff]}{[0001|ffff]}?
009	Huh? Do you want to learn how to {[0001|1a00]}{color[0400]}make\nthings slide{color[ffff]}{[0001|ffff]}?
010	You'll make me blush! I never thought I'd see the\nday when you were interested in boring old me!
011	OK, OK, be cool...\nNO I CAN'T I'M JUST TOO HAPPY.
013	It'll be my honor to show you how to {[0001|1a00]}{color[0400]}make\nthings slide{color[ffff]}{[0001|ffff]}. I won't let you down!
014	I'm going to teach you like I've never taught\nanyone before, which I haven't! You're going to\nbe the best {[0001|1a00]}{color[0400]}thing-slider{color[ffff]}{[0001|ffff]} there is!
015	You leave it all up to your old pal!
016	On the game screen\nthere's a {[0001|1a00]}{color[0400]}blue box{color[ffff]}{[0001|ffff]} and {[0001|1a00]}{color[0400]}red\ncylinder{color[ffff]}{[0001|ffff]}, stuck together.
016-01	What's up. I'm a red cylinder.
016-02	How do. I'm a blue box.
017	Usually, when objects are stuck together, their\n{[0001|1a00]}{color[0400]}Object Nodon are connected{color[ffff]}{[0001|ffff]}, right?
018	That is certainly the usual way, yes.
019	But if you don't do that, and instead {[0001|1a00]}{color[0400]}sandwich\nme in the middle of the connection{color[ffff]}{[0001|ffff]}...
020	Bingo! {[0001|1a00]}{color[0400]}The connected object\nwill be able to slide{color[ffff]}{[0001|ffff]}!
021	Let's take a look at how that's set up!
022	First you {color[0400]}{[0001|1a00]}connect the box to me{[0001|ffff]}{color[ffff]}...
023	Then you {color[0400]}{[0001|1a00]}connect me to the cylinder{[0001|ffff]}{color[ffff]}!
024	And now the {color[0400]}{[0001|1a00]}box{[0001|ffff]}{color[ffff]} can {color[0400]}{[0001|1a00]}slide{[0001|ffff]}{color[ffff]}!
044-01	But you do know that I'm not only good for\nimparting the power of the slide, right?
045	Would you mind opening up my\nsettings for me, {[0201]}?
046	Once you're in the settings, you should be able\nto play around with my {color[0400]}{[0001|1a00]}slide range{[0001|ffff]}{color[ffff]}.
047	So let's give it a try.
048	Here's the {[0001|1a00]}{color[0400]}Range{color[ffff]}{[0001|ffff]}.
049	Moving those sliders left and\nright will change the {[0001|1a00]}{color[0400]}slide range{color[ffff]}{[0001|ffff]}.
050	Try setting the {color[0400]}{[0001|1a00]}left-hand\nslider{[0001|ffff]}{color[ffff]} to {color[0400]}{[0001|1a00]}0.00{[0001|ffff]}{color[ffff]}.
051	Close it up!
052	Gosh, thank you so much\nfor going into my settings and\nchanging things up just for me.
052-01	The {[0001|1a00]}{color[0400]}slide range{color[ffff]}{[0001|ffff]} goes\nfrom {[0001|1a00]}{color[0400]}0.00{color[ffff]}{[0001|ffff]} to {[0001|1a00]}{color[0400]}100.00{color[ffff]}{[0001|ffff]} now.
053	Which means you can only slide\nfrom the center to the right.\nMeaning, {[0001|1a00]}{color[0400]}no sliding left of center{color[ffff]}{[0001|ffff]}!
054	Let's see it in action\non the game screen.
055	First off, {color[0400]}{[0001|1a00]}move the right-hand person\nwith  {[0001|ffff]}{color[ffff]}and smash into the box.
056	Just as we thought, the\nbox {[0001|1a00]}{color[0400]}won't slide to the left{color[ffff]}{[0001|ffff]}.
057	Next let's have the {color[0400]}{[0001|1a00]}left person\n{[0001|ffff]}{color[ffff]}push into it, with {color[0400]}{[0001|1a00]}{[0001|ffff]}{color[ffff]}.
058	{[0001|1a00]}{color[0400]}It sliiides to the right{color[ffff]}{[0001|ffff]}!
059	This is because we set the {[0001|1a00]}{color[0400]}slide\nrange {color[ffff]}{[0001|ffff]}between {[0001|1a00]}{color[0400]}00.00{color[ffff]}{[0001|ffff]} and {[0001|1a00]}{color[0400]}100.00{color[ffff]}{[0001|ffff]}.
060	So it {[0001|1a00]}{color[0400]}can slide to the right{color[ffff]}{[0001|ffff]} of its starting\nposition, but it {[0001|1a00]}{color[0400]}can't slide to the left{color[ffff]}{[0001|ffff]} of it.
063	Now take us back to\nthe program screen.
064	So you see, I don't just give things\nthe power to slide, but I can {[0001|1a00]}{color[0400]}limit\n{color[ffff]}{[0001|ffff]}the range of their slides too!
065	Do you think I can maybe...be\nof some use to you, {[0201]}?
066	And another thing...
067	If you set the {[0001|1a00]}{color[0400]}range as narrow as\nyou can{color[ffff]}{[0001|ffff]}, then you can create a\n{[0001|1a00]}{color[0400]}slide position connection{color[ffff]}{[0001|ffff]}.
068	Let's give it a whirl!
069	Set the {[0001|1a00]}{color[0400]}left and right\nsliders{color[ffff]}{[0001|ffff]} both to {[0001|1a00]}{color[0400]}2.00{color[ffff]}{[0001|ffff]}.
070	So the range of movement\nis from {[0001|1a00]}{color[0400]}2.00{color[ffff]}{[0001|ffff]} to {[0001|1a00]}{color[0400]}2.00{color[ffff]}{[0001|ffff]}.
071	Which means it should be\n{[0001|1a00]}{color[0400]}fixed in place at 2.00{color[ffff]}{[0001|ffff]}.
072	Close the\nsettings now.
073	Let's test it out on\nthe game screen.
074	Look what changing the {[0001|1a00]}{color[0400]}Slide-\nConnector Nodon{color[ffff]}{[0001|ffff]}'s settings did!\nWe {[0001|1a00]}{color[0400]}fixed its position at 2.00{color[ffff]}{[0001|ffff]}.
075	So the box {[0001|1a00]}{color[0400]}slid all that\nway from the center{color[ffff]}{[0001|ffff]}!
076	Shove it all you want,\nbut {color[0400]}{[0001|1a00]}it's not moving{[0001|ffff]}{color[ffff]}!
077	Let's go back to the\nprogram screen.
078	Wait, I have even more to offer!\nMy {[0001|1a00]}{color[0400]}input port{color[ffff]}{[0001|ffff]} can take signals.
078-01	And then I can convert that signal\ninput into a {[0001|1a00]}{color[0400]}slide connection{color[ffff]}{[0001|ffff]}.
079	First, if you'd be so kind as to\nrevert my {[0001|1a00]}{color[0400]}range{color[ffff]}{[0001|ffff]} settings back\nto the way they were?
080	OK! Open {[0001|1a00]}{color[0400]}Slide-Connector Nodon{color[ffff]}{[0001|ffff]}'s settings.
081	Set it back between\n{[0001|1a00]}{color[0400]}-100.00{color[ffff]}{[0001|ffff]} and {[0001|1a00]}{color[0400]}100.00{color[ffff]}{[0001|ffff]}.
082	And close.
083	Here comes {[0001|1a00]}{color[0400]}Constant Nodon\n{color[ffff]}{[0001|ffff]}to give us a hand.
084	If it's constancy you need, there is\nnone better than a {[0001|1a00]}{color[0400]}Constant Nodon{color[ffff]}{[0001|ffff]}.
085	Let's go check out Constant Nodon's\nsettings, shall we?
086	Change the {[0001|1a00]}{color[0400]}Output Value{color[ffff]}{[0001|ffff]} to {[0001|1a00]}{color[0400]}-2.00{color[ffff]}{[0001|ffff]}.
087	And close!
088	Ah, I am emitting a\nblissfully eternal {[0001|1a00]}{color[0400]}-2.00{color[ffff]}{[0001|ffff]}.
089	Won't you connect me with\n{[0001|1a00]}{color[0400]}Constant Nodon{color[ffff]}{[0001|ffff]}, {[0201]}?\nNot to be any trouble...
103	Go ahead, connect them up.
090	I love that unchanging foreverness\nof the Constant Nodon's signal.\nGives me chills.
091	It makes me want to be strong\nand constant too, {[0001|1a00]}{color[0400]}fixing{color[ffff]}{[0001|ffff]} that\n{[0001|1a00]}{color[0400]}input number{color[ffff]}{[0001|ffff]} fast.
092	When it was {[0001|1a00]}{color[0400]}set to{color[ffff]}{[0001|ffff]} {[0001|1a00]}{color[0400]}2.00{color[ffff]}{[0001|ffff]},\nit {[0001|1a00]}{color[0400]}slid to the right{color[ffff]}{[0001|ffff]}.
093	Any guesses as to what\nhappens now that it's\n{[0001|1a00]}{color[0400]}fixed at -2.00{color[ffff]}{[0001|ffff]}?
094	Think about it, and\nthen let's have a look.
095	The box has {color[0400]}{[0001|1a00]}scooted\nover to the left{[0001|ffff]}{color[ffff]}!
096	Now that Slide-Connector Nodon's\nreceiving an input of {[0001|1a00]}{color[0400]}-2.00{color[ffff]}{[0001|ffff]},\n{[0001|1a00]}{color[0400]}everything's fixed to the left{color[ffff]}{[0001|ffff]}.
097	Not even the person\ncan budge it.
098	Time to go back to\nthe program screen.
099	What did you think of\nthat, {[0201]}?
100	I'm giving it my very best!
101	Whenever you {color[0400]}{[0001|1a00]}want to slide something\n{[0001|ffff]}{color[ffff]}or {color[0400]}{[0001|1a00]}need to fix something off-center{[0001|ffff]}{color[ffff]},\nremember your old pal.
102	Until we meet again!
Guidebook_JudgeWinOrLose.msbt
00.00.Alice	Hello hello, {[0201]}!
00.01.Alice	This time around I'm going to explain {[0001|1a00]}{color[0400]}how\nto find a winner{color[ffff]}{[0001|ffff]} in a game! It's a bit\ntricky though, so let's take it step by step.
00.02.Alice	First, note the {[0001|1a00]}{color[0400]}blue box\nwith a number on it{color[ffff]}{[0001|ffff]}.
00.03.Alice	Give {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]} a press.
00.04.Alice	See that? There was a sound, and\nthe number changed from 0 to 1.
00.05.Alice	Press {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]} again.
00.06.Alice	Nothing happened!
00.07.Alice	As soon as  has been\npressed once, nothing happens\nwhen it's pressed again.
00.09.Alice	This is actually an important\npart of programming in\nwin-or-lose outcomes.
00.10.Alice	Let's go to the program\nscreen for a closer look.
01.00.ButtonL	Hey, it's you again!\nHow you doing, {[0201]}?
01.01.FlagL	Zzzz... I'm Flag Nodon...\nShhhh... I'm sleepin'...
01.02.NumberL	Hello there, {[0201]}!\nI'm Number-Object Nodon, at your service.
01.03.NumberL	When Flag Nodon outputs a\nsignal, it's up to me to display\nit on the blue box.
01.04.EffectL	Back again to make a\nbig ol' fuss, are ya, {[0201]}?\nI am happy to oblige!
01.05.FlagL	Mmhmm...\nZzzz...
01.06.FlagL	Zzzz... {[c903]}{[0201]}?\nWhat're you doing here? Zzzz...
01.07.FlagL	Zzzz... Oh, victory outcome\nprogramming? That's nice...zzzz...
01.08.FlagL	Guess I should explain...what\nhappens...when you press......
01.08-01.FlagL	Sorry for sleeptalking...\nZzzz...
01.09.FlagL	First...I should be\n{[0001|1a00]}{color[0400]}set to off{color[ffff]}{[0001|ffff]}...zzzz...
01.10.NumberL	If Flag Nodon is {[0001|1a00]}{color[0400]}off{color[ffff]}{[0001|ffff]}, {[0001|1a00]}{color[0400]}no signal\ngets through{color[ffff]}{[0001|ffff]}, so I display 0.
01.11.ButtonL	If you were to give  a little\npress while Flag Nodon is off...
01.12.FlagL	Zzzz... Then {[0001|1a00]}{color[0400]}my on port gets\na signal and switches me on{color[ffff]}{[0001|ffff]}...
01.13.NumberL	Once Flag Nodon's {[0001|1a00]}{color[0400]}on{color[ffff]}{[0001|ffff]}, {[0001|1a00]}{color[0400]}the signal\ncomes through{color[ffff]}{[0001|ffff]}, and I display 1.
01.18.FlagL	And...once I'm {[0001|1a00]}{color[0400]}on, the signal\ncan hit my port as much as\nit likes, but I'm staying on{color[ffff]}{[0001|ffff]}...
01.19.NumberL	And that's why, once\nI've changed from 0 to 1,\nI'll stay at 1.
01.20.FlagL	What it all means is...I remember\n{[0001|1a00]}{color[0400]}whether  has been pressed, even\nif it was only pressed once{color[ffff]}{[0001|ffff]}... Zzzz...
01.21.ButtonL	But this isn't about victory or defeat\nat all! This wasn't an {[0001|1a00]}{color[0400]}outcome\njudgment {color[ffff]}{[0001|ffff]}lesson! Not even a little bit!
01.22.Alice	Well, next we have to\nintroduce the opposing\nteam, don't we?
01.23.ButtonR	Heyo! I'm here to let you know when\nsomeone presses . I'm SO much better\nthan that Button Nodon for  over there.
01.24.FlagR	Zzzz...
01.25.EffectR	Here I am! My counterpart\nmakes a lot of noise, doesn't he?
01.26.EffectR	Well, my bite's much worse\nthan my bark! I'm here for all\nyour damage effect needs!
01.28.NumberR	Hello, {[0201]}!\nI'm a Number-Object Nodon.
01.29.NumberR	I'm here to display the right-hand\nFlag Nodon's state on a nice red box.
01.30.Alice	Our new team here is set up pretty\nmuch the same as the old team.
01.31.Alice	Now that we've doubled the Nodon in\none fell swoop, we should take a peek\nat what we've done on the game screen.
01.32.Alice	So let's go to the game screen!
02.00.Alice	Look, a red box with a\nnumber on it. That's new.
02.01.Alice	Give {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]} a press.
02.02.Alice	The number on the box goes up from\n0 to 1, with added damage effect.
02.03.Alice	See what happens\nif you press {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]} again.
02.04.Alice	No response again.
02.05.Alice	Now try {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]}.
02.06.Alice	Same as before, {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]} stops responding\nonce you've pressed it once.
02.07.Alice	So that's how you can make various\nbuttons react separately to one press.
02.08.Alice	If you press Retry, both\nboxes will return to zero and\nyou can test it out again.
02.09.Alice	Once you've done enough button pushing,\nhead back to the program screen.
03.00.NumberR	Pretty nifty, eh?
03.01.FlagR	Zzzz...the red team...
03.02.FlagL	Zzzz...and the blue team...
03.03.NumberL	In the end, the same\nthings happened on\nboth sides.
03.04.ButtonL	Because the conditions were equal.\nLooks like our rivals aren't so bad.
03.05.ButtonR	Right, how shall we duke it out?\nMost push-ups in one minute?
03.06.FlagR	Errr... We can remember perfectly\n{[0001|1a00]}{color[0400]}if a button's been pushed or not{color[ffff]}{[0001|ffff]}.
03.07.FlagL	We cannot remember how many\ntimes a button has been pushed.
03.08.NumberL	Then how about a competition to\nsee {[0001|1a00]}{color[0400]}who's the fastest button-pusher{color[ffff]}{[0001|ffff]}?
03.09.NumberR	Yes, let's see {[0001|1a00]}{color[0400]}whether  or  is\npressed faster{color[ffff]}{[0001|ffff]} when the game starts!
03.10.Alice	OK, now it's time to get\ninto how we judge outcomes.
03.11.Alice	Let's make it so only the first\nbutton that's pressed reacts.
03.12.Alice	The Flag Nodon keep track\nof {[0001|1a00]}{color[0400]}whether a button has\nbeen pressed{color[ffff]}{[0001|ffff]}, right?
03.13.Alice	So you have to make the opposing Flag Nodon\n{[0001|1a00]}{color[0400]}react when it's off and the button is pressed{color[ffff]}{[0001|ffff]}.
03.14.Alice	We can {[0001|1a00]}{color[0400]}stop the Flag Nodon from\nreacting to a button press{color[ffff]}{[0001|ffff]} when the\n{[0001|1a00]}{color[0400]}opposing Flag Nodon is set to on{color[ffff]}{[0001|ffff]}.
03.15.Alice	Let's start by programming\nthe red team on the right.
03.16.Alice	Select the connection for the\nButton Nodon {[0001|1a00]}{[0001|ffff]} on the right.
03.17.Alice	And you can get rid of that.
03.20.Alice	Now we need an {[0001|1a00]}{color[0400]}AND Nodon\n{color[ffff]}{[0001|ffff]}to give us a hand.
03.21.AndR	Well hello there! And I say\nhello, young {[0201]}!
03.22.AndR	When I {[0001|1a00]}{color[0400]}receive a signal to both of my\ninput ports{color[ffff]}{[0001|ffff]}, then I shall jolly well output\na signal of my own, yes?
03.23.Alice	We want there to be a signal when {[0001|1a00]}{color[0400]}the opposing\nFlag Nodon is off{color[ffff]}{[0001|ffff]} and {[0001|1a00]}{color[0400]}the button is pressed{color[ffff]}{[0001|ffff]}.
03.24.ButtonR	Link me up!
03.25.FlagL	Hmm... The other condition\nis that I be {[0001|1a00]}{color[0400]}off{color[ffff]}{[0001|ffff]}?
03.26.FlagL	But...nyam, nyam, nyam... I {[0001|1a00]}{color[0400]}only\noutput a signal when I'm on{color[ffff]}{[0001|ffff]}.
03.27.NumberL	Hmmm... So if we connect it to the\nAND Nodon, then {color[0400]}{[0001|1a00]}the Flag Nodon\nwill be on{[0001|ffff]}{color[ffff]}...
03.28.FlagR	OK, let me get this straight. You want me to\noutput a signal when I'm {[0001|1a00]}{color[0400]}off{color[ffff]}{[0001|ffff]}, not when I'm {[0001|1a00]}{color[0400]}on{color[ffff]}{[0001|ffff]}.
03.29.Alice	Oh, then we need\na {[0001|1a00]}{color[0400]}NOT Nodon{color[ffff]}{[0001|ffff]}!
03.30.NotR	Heh heh heh, I'm not unlike\na NOT Nodon. Or am I?
03.31.NumberL	NOT Nodon output {[0001|1a00]}{color[0400]}the opposite signal\nto what they receive{color[ffff]}{[0001|ffff]}, so they can {[0001|1a00]}{color[0400]}output\na signal even when there is none{color[ffff]}{[0001|ffff]}.
03.32.NotR	You can't not unconnect me as\nyou wish! Or just join me up.
03.32-01.Flag	Oh, I get it. I'm {[0001|1a00]}{color[0400]}off{color[ffff]}{[0001|ffff]}, but NOT Nodon is on.
03.32-02.AndR	Getting that signal loud and\nclear! And clear and loud!
03.32-03.Flag	And when I'm {[0001|1a00]}{color[0400]}on{color[ffff]}{[0001|ffff]}?
03.32-04.AndR	Then I shouldn't hear a peep\nfrom you. And I, consequently,\nwill stand down.
03.33.AndR	Right-o, that looks like both of the\nold input ports are wired up nicely.
03.35.FlagR	So now I'll only get a signal when both\nof those conditions are fulfilled? Huh.
03.36.Alice	Now it'll only react when {[0001|1a00]}{color[0400]} is pressed\nbefore {color[ffff]}{[0001|ffff]}. Nice programming work.
03.37.Alice	Let's test it out on the game screen.
04.00.Alice	Don't forget, you can hit Retry\nto reset to the starting\nconditions if you need to.
04.01.Alice	So, first press {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]}.
04.01.Alice_00	Hit {color[0400]}{[0001|1a00]}Retry{[0001|ffff]}{color[ffff]} for another attempt.\nJust press {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]}!
04.02.Alice	Big noise, blue box\nchanged to 1. Good.
04.03.Alice	So far, everything looks pretty much\nthe same as before, doesn't it?
04.04.Alice	Now that the blue box is\nshowing a 1, press {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]}.
04.05.Alice	I'll wait.
04.06.Alice	Well, nothing happened!
04.07.Alice	Pressing  did nothing because\n{[0001|1a00]}{color[0400]} had already been pressed first{color[ffff]}{[0001|ffff]}.
04.08.Alice	So it seems that the red team\nhas been {[0001|1a00]}{color[0400]}judged the loser{color[ffff]}{[0001|ffff]}!
04.09.Alice	Now let's {[0001|1a00]}{color[0400]}retry{color[ffff]}{[0001|ffff]}.
04.10.Alice	Next let's try pressing {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]} first,\nfrom our starting conditions.
04.10.Alice_00	Hit {color[0400]}{[0001|1a00]}Retry{[0001|ffff]}{color[ffff]} for another attempt.\nJust press {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]}!
04.11.Alice	Damage effect and a 1\non the red box. Lovely.
04.12.Alice	{[0001|1a00]}{color[0400]}Pressing  before {color[ffff]}{[0001|ffff]} means the red team\nhave been judged the winners this time.
04.13.Alice	So, when you've seen all there is to see,\nlet's reconvene on the program screen.
05.00.FlagL	So, did you enjoy it?
05.01.FlagL	Depending on whether I was\noff or on, or rather, whether\n had been pressed or not...
05.02.ButtonR	Pressing  gives you a\ndifferent result now, right?
05.03.NumberR	Well, now we can tell when the blue\nteam over there on the left has won\nand the red team has lost, at least.
05.04.EffectR	But you gotta admit, that's\na kinda one-sided, isn't it?
05.05.Alice	It really is.
05.06.Alice	Let's even things up a bit and get\nthe blue team programmed as well.
05.07.Alice	Select the connection coming from\nthe left-hand Button Nodon {[0001|1a00]}{[0001|ffff]}.
05.08.Alice	We won't be needing\nthat. Delete!
05.11.Alice	We'll need an AND Nodon and\na NOT Nodon, just like before.
05.12.AndL	Jolly nice to see you! AND Nodon here,\nreporting for duty. Ready to take on the\n{[0001|1a00]}{color[0400]}outcome judgment{color[ffff]}{[0001|ffff]} of the blue team! Huzzah!
05.13.NotL	Heh heh heh... I won't say I'm\nnot a second NOT Nodon.
05.14.Alice	Now join up the connections the same\nway they are in the red team on the right.
05.15.Alice	Ah, but look at the connection from the\nright-hand Flag Nodon's output port.
05.16.Alice	It needs to get all the way to the\nsecond NOT Nodon's input port.
05.17.Alice	But the program screen would\nlook a bit cluttered with all those\ncriss-crossing connections.
05.18.Alice	Well, let's connect it up\nanyway and test it all out.
05.19.Alice	Now we have a {[0001|1a00]}{color[0400]}complete\nprogram for judging outcomes{color[ffff]}{[0001|ffff]}.
05.20.Alice	Time to go to the\ngame screen!
06.01.Alice	Don't forget, you can revert everything\nto the starting conditions with Retry.
06.02.Alice	Now, first things first. Press {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]}.
06.02.Alice_00	Hit {color[0400]}{[0001|1a00]}Retry{[0001|ffff]}{color[ffff]} for another attempt.\nJust press {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]}!
06.03.Alice	All as expected? Number changed to\na 1 on the blue box with a nice bang?
06.04.Alice	Now press {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]}.
06.05.Alice	Nothing happened!
06.06.Alice	{[0001|1a00]}{color[0400]} has already been pressed{color[ffff]}{[0001|ffff]}, so\nthat's a blue victory and a red loss.
06.07.Alice	Now let's {[0001|1a00]}{color[0400]}retry{color[ffff]}{[0001|ffff]}.
06.08.Alice	This time, let's\nstart by pressing {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]}.
06.08.Alice_00	Hit {color[0400]}{[0001|1a00]}Retry{[0001|ffff]}{color[ffff]} for another attempt.\nJust press {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]}!
06.09.Alice	There's our damage effect, and the\nred box is showing a nice shiny 1.
06.10.Alice	Time to give {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]} a press.
06.11.Alice	Well, look at that! Nothing happened.
06.12.Alice	This time, {[0001|1a00]}{color[0400]} was pressed first{color[ffff]}{[0001|ffff]}. Which\nmeans a red victory and a blue loss!
06.13.Alice	Why not hit Retry and play around\nwith it? {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]}, {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]}, try them in whatever\n{[0001|1a00]}{color[0400]}order{color[ffff]}{[0001|ffff]} you like! Go wild.
06.14.Alice	When you're satisfied, mosey\non back to the program screen.
07.00.FlagR	Zzzz...Uh.\nOh. Enjoy yourself?
07.01.ButtonL	Now we can\nhave a real duel!
07.02.NumberL	It's a little tricky, but master\nit and nothing will faze you!
07.03.Alice	Let's run down the important stuff.\nFirst, you need {[0001|1a00]}{color[0400]}two Flag Nodon{color[ffff]}{[0001|ffff]}.
07.04.Alice	They start in an {[0001|1a00]}{color[0400]}off{color[ffff]}{[0001|ffff]} state.
07.05.FlagL	{[0001|1a00]}{color[0400]}I switch on{color[ffff]}{[0001|ffff]} when the blue\nteam on the left winszzzzz...
07.06.FlagR	And {[0001|1a00]}{color[0400]}I switch on{color[ffff]}{[0001|ffff]} when the\nred team on the right wins...\nZzzz...
07.07.AndL	And who judges the winners and\nlosers of these feats of daring?
07.08.AndR	We AND Nodon do!
07.09.NumberL	And then you have the trick that comes\ninto play once the AND Nodon make their\njudgment and {[0001|1a00]}{color[0400]}one Flag Nodon switches on{color[ffff]}{[0001|ffff]}.
07.10.NumberR	Once that happens, the other\nFlag Nodon {[0001|1a00]}{color[0400]}can't switch on{color[ffff]}{[0001|ffff]}!
07.10-01.Alice	A few Nodon have to work\ntogether to make it all happen.
07.11.EffectL	We Effect Nodon don't really have much\nto do with the whole judgment business.
07.12.EffectR	But who cares? We make our own fun. And we\nmake it easier to tell who's won!
07.13.EffectL	We're truly the unsung heroes\nof this whole program...thing.
07.14.EffectR	What are you babbling about?\nUnSUNG heroes? No way!
07.15.NotR	Heh heh, love those\nEffect Nodon.
07.16.EffectL	Well, at least someone\nappreciates us!
07.18.Alice	Seems like a good enough\nplace to call it a day.
Guidebook_MoveFancyRigid.msbt
000	Hi there!
001	That sure is a {[0001|1a00]}{color[0400]}tuna{color[ffff]}{[0001|ffff]}, huh?
002	Try moving it from\nside to side with {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]}.
003	See? The tuna moved!
004	This tuna is actually\na {color[0400]}{[0001|1a00]}fancy object{[0001|ffff]}{color[ffff]}, so it\nusually {color[0400]}{[0001|1a00]}can't be moved{[0001|ffff]}{color[ffff]}.
005	This time around, I'm going to\nshow you {color[0400]}{[0001|1a00]}how to make it so\nthat you can move fancy objects{[0001|ffff]}{color[ffff]}.
006	First, let's head to\nthe program screen.
097	Ooh, hello there,\n{[0201]}! ♥
007	Today we're going to give you\nthe latest on fancy objects.
008	Tuna are all the rage right now!\nAren't they dazzling?! Those scales!
009	These beautiful fish spend\nmost of their lives in motion.
010	That's why a tuna is the\nperfect fancy object for\nus to make move today. ♥
012	The secret to making\nthe tuna move is...
013	to {color[0400]}{[0001|1a00]}connect me to a\nMoving-Object Nodon{[0001|ffff]}{color[ffff]}. ♥
014	That's my cue! I'm a\n{[0001|1a00]}{color[0400]}Moving-Object Nodon{color[ffff]}{[0001|ffff]}!
015	I hope you're feeling limber and\nready to play, {[0201]}.
016	In any case, I receive\ninput from the {[0001|1a00]}{color[0400]}Stick Nodon\n{color[ffff]}{[0001|ffff]}to my left. That's right!
017	Totally! I output the\n{[0001|1a00]}{color[0400]}right-to-left movements for{color[ffff]}{[0001|ffff]} {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]}.
018	And I get that input from the\n{[0001|1a00]}{color[0400]}Stick Nodon{color[ffff]}{[0001|ffff]} and use it to move\nthe object on-screen right or left.
018-01	{color[0400]}{[0001|1a00]}Visible{[0001|ffff]}{color[ffff]} is currently {color[0400]}{[0001|1a00]}disabled{[0001|ffff]}{color[ffff]} in my\n{color[0400]}{[0001|1a00]}properties{[0001|ffff]}{color[ffff]}, so you can't actually see\nme move on the game screen at all.
018-02	But you can trust that I'm\nbursting with energy and moving\nleft and right with all my might.
020	Don't forget me! I'm {[0001|1a00]}{color[0400]}connected\n{color[ffff]}{[0001|ffff]}to the Moving-Object Nodon too.
021	That means the tuna's {color[0400]}{[0001|1a00]}tight with\nthe Moving-Object Nodon{[0001|ffff]}{color[ffff]} and\nmoves when the Nodon does. ♥
022	Me an' the tuna have been training together!\nIt's going swimmingly. We're so in tuna with each\nother. The way we get along is...uncanny.
023	In any case, {[0201]},\nif you want to see what's really\nmaking that tuna move...
024	all you'll need to do is {[0001|1a00]}{color[0400]}enable\nVisible{color[ffff]}{[0001|ffff]} in my {[0001|1a00]}{color[0400]}properties{color[ffff]}{[0001|ffff]}.
025	Right! Select the Moving-Object\nNodon, and open its settings.
026	Then, {[0001|1a00]}{color[0400]}enable{color[ffff]}{[0001|ffff]} {[0001|1a00]}{color[0400]}Visible{color[ffff]}{[0001|ffff]}\nin its {[0001|1a00]}{color[0400]}properties{color[ffff]}{[0001|ffff]}.
027	That's all! You can\nclose the settings now.
028	Let's pop over to the game\nscreen to see what's changed.
029	You should now be able\nto see a {[0001|1a00]}{color[0400]}box{color[ffff]}{[0001|ffff]} over the {[0001|1a00]}{color[0400]}tuna{color[ffff]}{[0001|ffff]}.
030	That's the {[0001|1a00]}{color[0400]}Moving-Object Nodon\n{color[ffff]}{[0001|ffff]}at work.
031	Try using {[0001|1a00]}{color[0400]} {color[ffff]}{[0001|ffff]}to move\nthe tuna again.
032	See? The box and the\ntuna {[0001|1a00]}{color[0400]}move together{color[ffff]}{[0001|ffff]}!
033	What you're actually moving\nwhen you tilt {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]} left and right\nis the {[0001|1a00]}{color[0400]}Moving-Object Nodon{color[ffff]}{[0001|ffff]}.
034	The {[0001|1a00]}{color[0400]}tuna{color[ffff]}{[0001|ffff]} is connected to\nthe {[0001|1a00]}{color[0400]}Moving-Object Nodon{color[ffff]}{[0001|ffff]},\nso the two move together!
035	So you're not REALLY\nmoving the tuna itself at all.\nAt least, not directly.
036	Let's head back to the\nprogram screen now.
037	Did you see the tuna moving together\nwith the {[0001|1a00]}{color[0400]}Moving-Object Nodon{color[ffff]}{[0001|ffff]}?
038	The tuna and the Moving-Object\nNodon, in perfect harmony... Bwaaaah!\nIt's just so beautiful! I'm... Well, I'm moved!
039	♥ I've never seen a box and a fish\nso in tuna with each other! ♥
040	In any case, you can move all sorts\nof {color[0400]}{[0001|1a00]}fancy objects{[0001|ffff]}{color[ffff]} as long as they're\nstuck to a {color[0400]}{[0001|1a00]}Moving-Object Nodon{[0001|ffff]}{color[ffff]}.
041	Why don't we try out a\ndifferent fancy object now?\nOooh, what'll it be? ♥
042	Ta-da! If you want to see the new fancy\nobject in all its glory, you'll have to\nlook on the game screen! ♥
043	But that's not all! We've also\nwelcomed a lovely {[0001|1a00]}{color[0400]}up/down\nStick Nodon{color[ffff]}{[0001|ffff]}! Hello there, dear.
044	Hellooo! I keep track of the\n{color[0400]}{[0001|1a00]}up and down{[0001|ffff]}{color[ffff]} movements for {color[0400]}{[0001|1a00]}{[0001|ffff]}{color[ffff]}.
045	This time, try moving the\nfancy object {[0001|1a00]}{color[0400]}forward and back\n{color[ffff]}{[0001|ffff]}instead of left to right.
046	Before you can do that, though, you'll need\nto {[0001|1a00]}{color[0400]}connect{color[ffff]}{[0001|ffff]} me to the Moving-Object Nodon.\nTake it away, {[0201]}! ♥
047	That's your cue! Connect\nthe {[0001|1a00]}{color[0400]}Fancy-Object Nodon{color[ffff]}{[0001|ffff]} to\nthe {[0001|1a00]}{color[0400]}Moving-Object Nodon{color[ffff]}{[0001|ffff]}.
048	Woo! Time to move!
049	Er, yes. Let's try it out\non the game screen.
100	A...{color[0400]}{[0001|1a00]}sumo wrestler{[0001|ffff]}{color[ffff]}?\nThat was unexpected.
050	Anyway, try tilting {[0001|1a00]}{color[0400]} forward\nand backward{color[ffff]}{[0001|ffff]} to move it.
051	See that? The {[0001|1a00]}{color[0400]}sumo\nwrestler{color[ffff]}{[0001|ffff]} moved!
052	It doesn't look quite like he's\nwalking. More like...wiggling?
053	Ahem. That's how you {color[0400]}{[0001|1a00]}make a\nfancy object movable{[0001|ffff]}{color[ffff]}—by connecting\nit to a {color[0400]}{[0001|1a00]}Moving-Object Nodon{[0001|ffff]}{color[ffff]}.
054	{[0001|1900]}Let's pop back to the\nprogram screen, shall we?{[0001|ffff]}
056	Did you see that {[0001|1a00]}{color[0400]}sumo wrestler\n{color[ffff]}{[0001|ffff]}move? Didn't he just ooze power?\nI bet he's a champion!
057	♥ How fancy! ♥
058	I still can't get that stunning {color[0400]}{[0001|1a00]}tuna\n{[0001|ffff]}{color[ffff]}out of my head, though...
059	If only we could see it\nswimming, wild and free...\nSo beautiful... So majestic...
060	Ooh, I feel another\nchange coming on!
061	Hello there, {[0001|1a00]}{color[0400]}UFO Nodon{color[ffff]}{[0001|ffff]}, love!
062	Hello there! I fly around in\nthe air, light as can be!
063	If you {[0001|1a00]}{color[0400]}connect{color[ffff]}{[0001|ffff]} the {[0001|1a00]}tuna{[0001|ffff]} Fancy-Object\nNodon—that's me—to the {[0001|1a00]}{color[0400]}UFO Nodon{color[ffff]}{[0001|ffff]}...
064	you should be able to make\na {[0001|1a00]}{color[0400]}tuna that swims in the air{color[ffff]}{[0001|ffff]}!\nTalk about wow factor!
065	Now this I'd like to see. Go ahead\nand {[0001|1a00]}{color[0400]}connect {color[ffff]}{[0001|ffff]}the {[0001|1a00]}{color[0400]}Fancy-Object\nNodon {color[ffff]}{[0001|ffff]}to the {[0001|1a00]}{color[0400]}UFO Nodon{color[ffff]}{[0001|ffff]}.
068	Doing so will stick the\ntuna to the UFO so that\nthey move together.
069	But don't take my word for it!\nLet's look on the game screen.
070	{[0001|1900]}Hm... It's true that you\ncan move the tuna with {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|1900]}...{[0001|ffff]}
071	{[0001|1900]}But the tuna seems heavy, and\nit doesn't move around easily.{[0001|ffff]}
073	Back to the drawing board...by which\nI mean the program screen.
074	Oh... It seems like this earthling\ncreature is rather {color[0400]}{[0001|1a00]}heavy and not\neasy to move{[0001|ffff]}{color[ffff]}, hm?
076	Never fear! All you need to do is change\nthe {color[0400]}{[0001|1a00]}Fancy-Object Nodon{[0001|ffff]}{color[ffff]}'s {color[0400]}{[0001|1a00]}Material{[0001|ffff]}{color[ffff]} to\n{color[0400]}{[0001|1a00]}Zero gravity{[0001|ffff]}{color[ffff]}. That'll make it {color[0400]}{[0001|1a00]}weightless{[0001|ffff]}{color[ffff]}!
077	Let's give it a try, shall we?\nSelect the Nodon, then open\nits settings screen.
078	Select {[0001|1a00]}{color[0400]}Material{color[ffff]}{[0001|ffff]} here.
079	Then, change this\nsetting to {[0001|1a00]}{color[0400]}Zero gravity{color[ffff]}{[0001|ffff]}.
081	That sounded complicated, but\nwe're already done! Go ahead\nand close the settings.
085	Now we can try moving\nthe tuna around again\non the game screen.
086	Look at that! The tuna now\n{color[0400]}{[0001|1a00]}moves around without falling{[0001|ffff]}{color[ffff]}!
087	Test it out for yourself with {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]}.
088	The tuna... It's, well...\nIt's swimming in midair!
089	I suppose that IS kind of fancy.
090	As you can see, you can {color[0400]}{[0001|1a00]}connect {[0001|ffff]}{color[ffff]}fancy\nobjects to a {color[0400]}{[0001|1a00]}UFO Nodon{[0001|ffff]}{color[ffff]} if you want to be\nable to {color[0400]}{[0001|1a00]}move them around more freely{[0001|ffff]}{color[ffff]}.
091	Once you've had your fill\nof the tuna, head back to\nthe program screen.
092	Ooh, welcome back!
093	A {[0001|1a00]}{color[0400]}tuna{color[ffff]}{[0001|ffff]}, released from the\nbonds of its watery world\nto fly free as a bird...
093-01	What a striking image! It's shaken\nme to my core. How...♥ FANCY! ♥
094	{[c903]}{[0201]}, you should expand the\nhorizons of your games by connecting me\nto {[0001|1a00]}{color[0400]}Moving-Object Nodon{color[ffff]}{[0001|ffff]} and {[0001|1a00]}{color[0400]}UFO Nodon{color[ffff]}{[0001|ffff]}.
095	Try moving any object that strikes\nyour fancy. The sky's the limit! ♥
Guidebook_MoveRigid.msbt
000	Hello!
001	This yellow box right\nhere is, in actual fact...
003	{[0001|1a00]}{color[0400]}a movable object{color[ffff]}{[0001|ffff]}!\nTry moving it {[0001|1a00]}{color[0400]}left and right with {color[ffff]}{[0001|ffff]}.
004	If you lose the box, press\n{[0001|1a00]}{color[0400]}Retry {color[ffff]}{[0001|ffff]}for another attempt.
005	The box is programmed so\nthat it can be moved with .
006	This time around, I'm going\nto tell you all about {[0001|1a00]}{color[0400]}how to\nprogram objects that move{color[ffff]}{[0001|ffff]}.
007	Let's go to the program screen!
008	Hey there!\nWorking hard I hope?
009	I'm the {[0001|1a00]}{color[0400]}Moving-Object Nodon{color[ffff]}{[0001|ffff]}!
010	Yeah! Nothin' like movin'\nyour bod and doin' a bit\nof exercise! Feels great!
011	Hello! Boing!
012	I'll be outputting a signal that tells\nyou exactly how much  has been\ntilted to the {[0001|1a00]}{color[0400]}right or left{color[ffff]}{[0001|ffff]}.
013	The Moving-Object Nodon isn't\nquite like the other Object Nodon.
014	As the name suggests, it's a Nodon\nthat generates {[0001|1a00]}{color[0400]}moving{color[ffff]}{[0001|ffff]} objects.
015	When I get the signal...
016	{[0001|1a00]}{color[0400]}IT'S TIME TO MOVE!{color[ffff]}{[0001|ffff]} HURGH!
017	Um, yeah, like that...
018	The Moving-Object\nNodon has three ports.
019	Yeah! Three ports! Each one is\nfor a different {[0001|1a00]}{color[0400]}direction of force{color[ffff]}{[0001|ffff]}.
020	The first is {[0001|1a00]}{color[0400]}X{color[ffff]}{[0001|ffff]}.\nThat's force in the\ndirection of {[0001|1a00]}{color[0400]}left or right{color[ffff]}{[0001|ffff]}.
021	The second is {[0001|1a00]}{color[0400]}Y{color[ffff]}{[0001|ffff]}.\nThat's force that\ngoes {[0001|1a00]}{color[0400]}up and down{color[ffff]}{[0001|ffff]}.
022	And lastly... {[0001|1a00]}{color[0400]}Z{color[ffff]}{[0001|ffff]}!\nThat's force in the {[0001|1a00]}{color[0400]}forward\nand backward {color[ffff]}{[0001|ffff]}directions.
023	Since the Stick Nodon's output\nis going into the Moving-Object\nNodon's {[0001|1a00]}X{[0001|ffff]} port...
024	that means the object in the\ngame can be moved left and right.
025	Left and right's all well\nand good... But I wanna sprint\nall over the place! I gotta mooove!
026	Hey, {[0201]}!\nHow about you get some signal\nto my {[0001|1a00]}{color[0400]}Z port{color[ffff]}{[0001|ffff]} as well?
027	We'll need to call another\nStick Nodon for that.
028	Boing!
029	I'll be sending out output when\n is tilted {[0001|1a00]}{color[0400]}up or down{color[ffff]}{[0001|ffff]}.
030	We want to make it so that \nmoves the object {[0001|1a00]}{color[0400]}back and forth{color[ffff]}{[0001|ffff]}.
031	To do that, connect the output of\nthe up/down Stick Nodon to the\n{[0001|1a00]}Z {[0001|ffff]}port on the Moving-Object Nodon.
032	Yeah! Awesome!\nThanks a bunch, dude!
033	OK, let's go to the game screen\nand try moving the object.
034	Try using  to move the\nobject {[0001|1a00]}{color[0400]}back and forth{color[ffff]}{[0001|ffff]}.
035	If the object goes out of view,\npress {[0001|1a00]}{color[0400]}Retry{color[ffff]}{[0001|ffff]} to reset its location.
037	Since force is applied to both the X\nand Z directions, the object can move\nleft and right, as well as back and forth.
038	Let's retry. There's something\nelse I want to show you.
039	This time just tilt  {[0001|1a00]}{color[0400]}a tiny little bit{color[ffff]}{[0001|ffff]}...
040	When you only apply a little\nbit of pressure to the control\nstick, the object moves slowly.
041	Looks like the state of the control\nstick is closely related to the way\nthe box moves, huh?
042	Let's check it out on the program screen.
043	Oh yeah! Nothing beats movin'\naround in four directions!
044	{[c903]}{[0201]}!\nWanna train with me, dude?
045	Remember how, when you\ntilted the control stick just a\nlittle bit, the object moved slowly?
046	Yeah, dude! I remember that all right!
047	If the {[0001|1a00]}{color[0400]}signal gets smaller{color[ffff]}{[0001|ffff]},\nthe {[0001|1a00]}{color[0400]}force{color[ffff]}{[0001|ffff]} I put out {[0001|1a00]}{color[0400]}gets smaller{color[ffff]}{[0001|ffff]} too.
048	Boing! The signal I output depends on how\nmuch the control stick is tilted. If it's only\ntilted a bit, I only send a little bit of signal.
049	That's right! And thanks to that, you can use\nthe position of the control stick to {[0001|1a00]}{color[0400]}control{color[ffff]}{[0001|ffff]} the\namount of force that's applied to the object.
050	Oh yeah! When {[0201]}\napplies force to the control stick,\nI convert it into object-pushing force!
051	Now you know the difference between the\nMoving-Object Nodon and the Object Nodon:\npushing power!
052	Yeah! I'm still kinda like\nan Object Nodon though...
053	I've got different {[0001|1a00]}{color[0400]}shapes{color[ffff]}{[0001|ffff]} and {[0001|1a00]}{color[0400]}properties{color[ffff]}{[0001|ffff]},\njust like a regular Object Nodon.
054	Let's try changing the shape of the\nMoving-Object Nodon so that it's a\nrolling {[0001|1a00]}{color[0400]}sphere{color[ffff]}{[0001|ffff]}.
055	Select the Moving-Object Nodon.
056	Now, open its settings.
057	Just like for the Object Nodon,\nyou can change the object's {[0001|1a00]}{color[0400]}shape{color[ffff]}{[0001|ffff]},\n{[0001|1a00]}{color[0400]}properties{color[ffff]}{[0001|ffff]}, {[0001|1a00]}{color[0400]}color{color[ffff]}{[0001|ffff]}, and more!
058	Change {[0001|1a00]}Object Shape{[0001|ffff]} to {[0001|1a00]}{color[0400]}Sphere{color[ffff]}{[0001|ffff]}.
059	Close the settings...
060	Oh yeah! Can't wait\nto rock 'n' roll, duuuude!
061	Let's take a look at the game screen.
062	Use  to roll the\nsphere around a little.
063	If you lose sight of it,\nhit {[0001|1a00]}{color[0400]}Retry{color[ffff]}{[0001|ffff]} for a do-over.
064	Now that the box has become\na sphere, it can roll. Neat!
065	Let's go back to the program screen.
066	Rolling around is the awesomest\nway to move, dude!\nMakes me dizzy though...
067	Yo, {[0201]}!\nLet's try it together, buddy!
068	Just a little too fast, maybe?
069	Whoa, bud! So much power!\nYou're getting faster and faster!
070	Argh! Can't...stop!
071	Er, right. Moving objects {[0001|1a00]}{color[0400]}accelerate{color[ffff]}{[0001|ffff]}\nwhen force is applied to them.
072	I got a few different {[0001|1a00]}{color[0400]}movement modes{color[ffff]}{[0001|ffff]},\ny'know, dude. Try changing them!
073	Select the Moving-Object Nodon.
074	Open its settings...
075	Then, select {[0001|1a00]}Mode{[0001|ffff]}.
076	The Moving-Object Nodon has two\nmodes: {[0001|1a00]}{color[0400]}Acceleration{color[ffff]}{[0001|ffff]} and {[0001|1a00]}{color[0400]}Speed{color[ffff]}{[0001|ffff]}.
077	The current mode is {[0001|1a00]}{color[0400]}Acceleration{color[ffff]}{[0001|ffff]}.
078	What's meant by {[0001|1a00]}{color[0400]}acceleration{color[ffff]}{[0001|ffff]} here\nis {[0001|1a00]}{color[0400]}how fast something can become\nin the space of a single second{color[ffff]}{[0001|ffff]}.
079	Put another way, {[0001|1a00]}{color[0400]}the speed increases\n{color[ffff]}{[0001|ffff]}as the Nodon continues to receive a signal.
080	The other mode is {[0001|1a00]}{color[0400]}Speed{color[ffff]}{[0001|ffff]}.
081	In this case, {[0001|1a00]}{color[0400]}speed{color[ffff]}{[0001|ffff]} refers to {[0001|1a00]}{color[0400]}the\ndistance that the moving object\ncan travel within one second{color[ffff]}{[0001|ffff]}.
082	Or, put another way, the number\nthe Nodon receives as input is\nconverted directly to the {[0001|1a00]}{color[0400]}speed{color[ffff]}{[0001|ffff]}.
083	We're in {[0001|1a00]}{color[0400]}acceleration mode{color[ffff]}{[0001|ffff]} right now.
084	That means the object will keep\ngetting faster and faster as long\nas force is being applied.
085	So that we can tame the velocity a bit,\nlet's change the mode to {[0001|1a00]}{color[0400]}Speed{color[ffff]}{[0001|ffff]}.
104	Then, so the object won't roll around,\nchange the {[0001|1a00]}Object Shape{[0001|ffff]} setting to {[0001|1a00]}{color[0400]}Box{color[ffff]}{[0001|ffff]}.
086	Now, close the settings.
087	Yeah, dude! You changed my mode\nfrom acceleration to speed! Woo, yeah!
088	Now I'll be able to move at\na less dangerous pace!
089	Let's see how the object moves in\nspeed mode over on the game screen.
090	Try moving the box with .
091	If it disappears from\nview, just hit {[0001|1a00]}{color[0400]}Retry{color[ffff]}{[0001|ffff]}.
092	It's moving at a more\nsensible speed now, hm?
093	If the mode is set to {[0001|1a00]}Speed{[0001|ffff]}, then\n{[0001|1a00]}{color[0400]}the signal's value is converted directly\nto the object's movement speed{color[ffff]}{[0001|ffff]}.
094	And since it doesn't get faster and\nfaster like in acceleration mode...
095	the speed is a lot easier to control!\nThat's a major benefit of speed mode.
096	Back to the program screen!
097	When you want to go faster and\nfaster...you want acceleration mode.
098	If you want to stay in control of the speed,\nthen you want to use speed mode.
099	Keep in mind what kind of\nmovement you're looking for.
100	That'll help you choose\nthe most appropriate mode.
101	Dude, a word of advice: if you're ever wondering\nwhich mode to use, go to the game screen and\ntest the movement out a bit.
102	Yeah, a bit of action might help the\nold noodle, dude! Always make sure to\ntest things out when you're programming!
Guidebook_Not.msbt
Guidebook_NotB.msbt
00.00.Alice	Welcome to the battleground!
00.01.Alice	Would you like to learn how\nto stop these constant\nexplosions? I know I would!
00.02.Alice	See what happens if\nyou press and hold {color[0400]}{[0001|1a00]}{[0001|ffff]}{color[ffff]}.
00.03.Alice	Aha, while 's pressed down,\nthe explosions stop! We can\nhear ourselves think at last.
00.04.Alice	You'd think it would be the other way\naround, right, so pressing a button\nwould trigger an explosion? Mysterious!
00.05.Alice	Let's see what on earth is going\non over at the program screen.
01.00.Button	Heyo, {[0201]}!\nThe button's ready. I'm ready.\nAre YOU ready?! YEAH!
01.02.Effect	Yes, yes, we're all excited. Don't mind\nButton Nodon, {[0201]}.
01.03.Effect	But DO mind the DYNAmite! Eh? Eh?!
01.04.Effect	Aww, the cat's outta the bag now!\nI am indeed responsible for the\nexplosions on the game screen.
01.05.Button	Hey, I get it. Some Nodon just like\nto be loud on the game screen and\nthe program screen.
01.06.Button	Anyway, what can we do\nfor you today, {[0201]}?
01.07.Button	Wait, let me guess! You\nwant to learn how to stop\nthe effects! Am I right?
01.08.Button	That's {color[0400]}{[0001|1a00]}NOT Nodon{[0001|ffff]}{color[ffff]}'s cue!
01.09.Not	Heh heh, I'm NOT...a NOT Nodon!\nNOT!
01.10.Not	None of this has\nnothing to do with me.
01.11.Effect	No need to be shy, NOT Nodon.\nYou're the hero of this tale!
01.13.Button	Well, I guess I'll just\ndo the explaining.
01.14.Button	So I'm sending the state of \nto the NOT Nodon's input port.
01.15.Not	Heh heh heh, and then I {[0001|1a00]}{color[0400]}flip{color[ffff]}{[0001|ffff]} it between\nmy input and output ports. Except they're\nmy output and input ports really...
01.17.Alice	Actually...no. This is going to get complicated\nif you butt in, NOT Nodon, so shush for now.
01.18.Not	Happy enough to not talk\nas to not do anything else.
01.19.Button	OK, where was I?
01.20.Alice	NOT Nodon likes to express himself\nin a topsy-turvy way, with everything {color[0400]}{[0001|1a00]}reversed{[0001|ffff]}{color[ffff]}.
01.21.Alice	Likewise, any signal that enters\na NOT Nodon's input port is {[0001|1a00]}{color[0400]}reversed\n{color[ffff]}{[0001|ffff]}and then sent from the output port.
01.22.Button	Let me give you an example. Let's\nsay {color[0400]}{[0001|1a00]}I'm not outputting a signal at all{[0001|ffff]}{color[ffff]}.
01.23.Alice	As a result, {[0001|1a00]}{color[0400]}NOT Nodon isn't receiving\nany signal{color[ffff]}{[0001|ffff]}, and this causes it to flip\nthe situation and {[0001|1a00]}{color[0400]}output a signal{color[ffff]}{[0001|ffff]}.
01.24.Effect	And when I get that signal,\nit's my cue fer fireworks!
01.25.Button	And that's why the explosions continue\n{[0001|1a00]}{color[0400]}as long as the button isn't pressed{color[ffff]}{[0001|ffff]}. Logic!
01.27.Button	Oh wait. But then what happens\nif you press the button?
01.28.Alice	Well, when a NOT Nodon {color[0400]}{[0001|1a00]}receives signal\ninput{[0001|ffff]}{color[ffff]}, then it gives {color[0400]}{[0001|1a00]}no signal{[0001|ffff]}{color[ffff]} as output.
01.29.Effect	And without a signal,\nya get no explosions.
01.30.Button	So to put it simply, {color[0400]}{[0001|1a00]}if you press\nthe button{[0001|ffff]}{color[ffff]}, the explosions stop!
01.31.Not	It isn't not unlike that.\nNOT!
01.32.Alice	Yes, you've got it right.
01.33.Alice	Let me explain it in\na bit more detail.
01.33.Alice_00	When a NOT Nodon receives a signal\nof 0.00, it outputs 1.00. And {[0001|1a00]}{color[0400]}anything\nother than{color[ffff]}{[0001|ffff]} 0.00 is output as 0.00.
01.34.Button	Whatever numbers NOT Nodon gets as\ninput will be output as either {color[0400]}{[0001|1a00]}0.00{[0001|ffff]}{color[ffff]} or {color[0400]}{[0001|1a00]}1.00{[0001|ffff]}{color[ffff]}!
01.35.Alice	So, now we understand how NOT Nodon\nwork, shall we go back to the game screen?
02.00.Alice	Still loud, isn't it?
02.01.Alice	See if you can stop\nthe explosions with {color[0400]}{[0001|1a00]}{[0001|ffff]}{color[ffff]}.
02.02.Alice	Did you check how long you\ncould stop the explosions for?
02.03.Alice	Right, then let's go to\nthe program screen.
03.00.Not	Heh heh, did understanding my\ninner workings make you not\nunhappy? I bet it didn't not.
03.01.Effect	Yeah, those NOT Nodon can't stop\nthemselves from switching things up. But they\ndo keep things interesting, that's for sure!
03.02.Alice	Don't forget that NOT Nodon\nmake everything {color[0400]}{[0001|1a00]}opposite{[0001|ffff]}{color[ffff]}.
03.03.Button	If there's {color[0400]}{[0001|1a00]}no{[0001|ffff]}{color[ffff]} input, it {color[0400]}{[0001|1a00]}will{[0001|ffff]}{color[ffff]} output!\nIt there {color[0400]}{[0001|1a00]}is{[0001|ffff]}{color[ffff]} input, it {color[0400]}{[0001|1a00]}won't{[0001|ffff]}{color[ffff]} output!\nLike clockwork!
03.04.Alice	In programming, there are a lot of\ntimes when you'll want ABC to\nhappen when XYZ isn't happening.
03.05.Alice	Those are prime chances to use\nNOT Nodon, so keep it in mind.
03.06.Not	Or at least don't make\nsure to not unforget it.
03.07.Effect	That's...not the spirit. That NOT Nodon can\nbe a right centurion when they want to be.
03.08.Effect	No, wait, that's not what I mean. {color[0400]}{[0001|1a00]}Contrarian{[0001|ffff]}{color[ffff]}.\nContrarian is the word I want. Imagine a NOT\nNodon at the head of a legion... Or, don't.
03.09.Not	Heh heh, always a not ungood time\nwhen the Effect Nodon are out.
03.10.Effect	You gotta watch yourself around the\nNOT Nodon. Everything's all mixed up!
Guidebook_OnOffFlag.msbt
000	Hello, there.
001	This time the game screen has a {[0001|1a00]}{color[0400]}person\n{color[ffff]}{[0001|ffff]}and some {[0001|1a00]}{color[0400]}boxes in a very fetching light blue{color[ffff]}{[0001|ffff]}.
002	What happens\nif you press {color[0400]}{color[ffff]}?
003	When you press {color[0400]}{color[ffff]}, {[0001|1a00]}{color[0400]}the person fires\nspheres with sound effects{color[ffff]}{[0001|ffff]}!\nSo exciting!
004	You don't have to hold\n{[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]} down or anything.
005	So what happens\nif you press {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]}?
006	Oh! The sounds and spheres have {[0001|1a00]}{color[0400]}stopped{color[ffff]}{[0001|ffff]}.
007	So {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]} turns the firing {[0001|1a00]}{color[0400]}on{color[ffff]}{[0001|ffff]}, and\n{[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]} turns it {[0001|1a00]}{color[0400]}off{color[ffff]}{[0001|ffff]}. Let's test it out.
008	This is what we'll be looking at today,\nhow to {[0001|1a00]}{color[0400]}turn features on or off{color[ffff]}{[0001|ffff]}.
009	So without any further ado,\nto the program screen!
010	Hi, {[0201]}!
011	Heyo!
012	Here we are...
013	All in a row.
014	Dun duh-duuuuuh!\nHello! How are you?
016	Eureka! You're here to find out\n{[0001|1a00]}{color[0400]}how to turn sounds and attacks\non and off by pressing a button{color[ffff]}{[0001|ffff]}!
017	♪Leave that to me me me!♪
018	I'll teach you how! Ka-pow!
020	But first, let me explain\nmyself through song.
021	♪When your world is all in binary\nAnd you want to get your code on...♪
022	♪For all your on and off-ish needs\nJust call your friend, Flag Nodoooon!♪
023	Zzzzz...
024	Knock knock.\n{[0001|1a00]}{color[0400]}Flag Nodon{color[ffff]}{[0001|ffff]}?
025	Uh... Who's there?\n{[0001|1a00]}{color[0400]}Flag Nodon{color[ffff]}{[0001|ffff]}'s my name...\nDon't wear it out...
026	I just crooned my heart out\nto you, and you're snoring?!
101	Well, whatever. Back\nto teaching mode.
027	Look at the {[0001|1a00]}{color[0400]}Flag Nodon{color[ffff]}{[0001|ffff]}'s\n{[0001|1a00]}{color[0400]}input ports{color[ffff]}{[0001|ffff]}, if you please!
102	Once that {color[0400]}{[0001|1a00]}on port{[0001|ffff]}{color[ffff]} receives a signal...whoosh!
103	Then ping! The {color[0400]}{[0001|1a00]}Flag\nNodon{[0001|ffff]}{color[ffff]} will switch {color[0400]}{[0001|1a00]}on{[0001|ffff]}{color[ffff]}!
104	After that, the {[0001|1a00]}{color[0400]}Flag Nodon will output\na signal continuously{color[ffff]}{[0001|ffff]}! Swooooosh!
105	But if a signal hits the {[0001|1a00]}{color[0400]}off port{color[ffff]}{[0001|ffff]}, then\na {[0001|1a00]}{color[0400]}Flag Nodon{color[ffff]}{[0001|ffff]} will switch {[0001|1a00]}{color[0400]}off{color[ffff]}{[0001|ffff]}! Bzzrt!
033	And then {color[0400]}{[0001|1a00]}no more\nsignal will be output{[0001|ffff]}{color[ffff]}!
033-01	Thank you very much for all your\nefforts there, Flag Nodon...
107	Zzzzz...
033-02	Huh... Anyway, Flag Nodon can be\nin one of two states: {[0001|1a00]}{color[0400]}on{color[ffff]}{[0001|ffff]} or {[0001|1a00]}{color[0400]}off{color[ffff]}{[0001|ffff]}.
033-03	When they're {[0001|1a00]}{color[0400]}on{color[ffff]}{[0001|ffff]}, they {[0001|1a00]}{color[0400]}output{color[ffff]}{[0001|ffff]} a signal\nconstantly, and when they're {[0001|1a00]}{color[0400]}off{color[ffff]}{[0001|ffff]}, they\n{[0001|1a00]}{color[0400]}don't output{color[ffff]}{[0001|ffff]} anything. That's the gist.
034	There's a {[0001|1a00]}{color[0400]}Button Nodon for \n{color[ffff]}{[0001|ffff]}connected to the {[0001|1a00]}{color[0400]}on port{color[ffff]}{[0001|ffff]}, you see.
035	So when you press that {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]},\nthe {[0001|1a00]}{color[0400]}Flag Nodon{color[ffff]}{[0001|ffff]} switches {[0001|1a00]}{color[0400]}on{color[ffff]}{[0001|ffff]}.
036	Zzzzz... When I'm {[0001|1a00]}{color[0400]}on{color[ffff]}{[0001|ffff]}...\nI'll output a signal...zzzz...
037	Then I'll send a signal to the\n{[0001|1a00]}{color[0400]}Play-Sound Nodon{color[ffff]}{[0001|ffff]} and the\n{[0001|1a00]}{color[0400]}Launch-Object Nodon{color[ffff]}{[0001|ffff]}.
038	And then comes the BOOM and the\nBAM and the PEW PEW PEW!
039	Send me that signal, and then\nthe party really starts! FIRE AWAY!\nBOOM!
040	I have a strong {[0001|1a00]}{color[0400]}connection{color[ffff]}{[0001|ffff]} with\n{[0001|1a00]}{color[0400]}Person Nodon{color[ffff]}{[0001|ffff]}, as you can see.
041	Which means {[0001|1a00]}{color[0400]}Person Nodon\n{color[ffff]}{[0001|ffff]}here can {[0001|1a00]}{color[0400]}fire some spheres{color[ffff]}{[0001|ffff]}.
044	You'll also see that the {[0001|1a00]}{color[0400]}Button Nodon\nfor  {color[ffff]}{[0001|ffff]}is connected to the {[0001|1a00]}{color[0400]}off port{color[ffff]}{[0001|ffff]}.
045	Hey! If you press {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]},\nthe {[0001|1a00]}{color[0400]}Flag Nodon{color[ffff]}{[0001|ffff]}\nwill switch {[0001|1a00]}{color[0400]}off{color[ffff]}{[0001|ffff]}!
045-01	Zzzzz... No signal if I'm {[0001|1a00]}{color[0400]}off{color[ffff]}{[0001|ffff]}...
045-02	And without a signal,\nthere's less PEW PEW,\nand more phlpbbbbt...
047-01	That's one way of putting it, I suppose.\nPut another way, it's like this...
047-02	Switching the {[0001|1a00]}{color[0400]}Flag Nodon on\nand off {color[ffff]}{[0001|ffff]}switches the sound\nand spheres on and off.
048	Anyway, now you've learned\na little bit about Flag Nodon.
049	Want to give it another look\nover on the game screen?
050	Press {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]} to start up the\nsounds and spheres.
051	Once you press {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]}, that switches\n{[0001|1a00]}{color[0400]}Flag Nodon{color[ffff]}{[0001|ffff]} to {[0001|1a00]}{color[0400]}on{color[ffff]}{[0001|ffff]}, remember.
052	The reason you get all the sound\nand light show is because the\nFlag Nodon is {color[0400]}{[0001|1a00]}outputting{[0001|ffff]}{color[ffff]} a signal.
054	If you press {color[0400]}{color[ffff]}, on the other hand,\nthe {[0001|1a00]}{color[0400]}Flag Nodon{color[ffff]}{[0001|ffff]} will switch {[0001|1a00]}{color[0400]}off{color[ffff]}{[0001|ffff]}.
055	That {[0001|1a00]}{color[0400]}shuts off{color[ffff]}{[0001|ffff]} the signal, and things\naround here get a lot more peaceful.
056	Remember this whenever you\nwant to {[0001|1a00]}{color[0400]}switch signals on and\noff {color[ffff]}{[0001|ffff]}using some kind of action.
057	{[0001|1a00]}{color[0400]}Flag Nodon{color[ffff]}{[0001|ffff]}'s your Nodon!
058	Let's go back to the program screen.
061	Zzzzz... Do you have more of\nan idea about what I do now?
062	If you change the Nodon connected\nto my {[0001|1a00]}{color[0400]}on port{color[ffff]}{[0001|ffff]}, then the {[0001|1a00]}{color[0400]}trigger{color[ffff]}{[0001|ffff]} that\nswitches me on changes too.
063	Like if you wanted to make it so {[0001|1a00]}{color[0400]}picking\nup an apple made you able to jump{color[ffff]}{[0001|ffff]}.
064	Want to try it out?
064-01	OK, first, it's time to say\ngood-bye to the Object Nodon.
064-02	We need a {[0001|1a00]}{color[0400]}Fancy-Object\nNodon{color[ffff]}{[0001|ffff]} to make us an {[0001|1a00]}{color[0400]}apple{color[ffff]}{[0001|ffff]}.
064-03	An apple that makes you jump?\nThat's the opposite of Newton's apple!
064-04	A very rebellious design!\nAnd it's so YOU, {[0201]}!\nAlways on the cutting edge. ♥
065	Now select the {[0001|1a00]}{color[0400]}Flag Nodon{color[ffff]}{[0001|ffff]}.
066	Copy.
067	Let's move this one\nover to the left.
068	Zzzzz...
069	Next, we're going to need\nan {[0001|1a00]}{color[0400]}Object-Break Nodon{color[ffff]}{[0001|ffff]}.
070	Well, hello there! Do you\nwant to know the {[0001|1a00]}{color[0400]}exact\nmoment an apple breaks{color[ffff]}{[0001|ffff]}?
071	Then I'm your gal, honey!
072	When the apple breaks, it pings\nme a li'l old signal, you see.
075	Now we need to connect\nthe {[0001|1a00]}{color[0400]}Object-Break Nodon {color[ffff]}{[0001|ffff]}to\nthe {[0001|1a00]}{color[0400]}Flag Nodon{color[ffff]}{[0001|ffff]}'s {[0001|1a00]}{color[0400]}on port{color[ffff]}{[0001|ffff]}.
076	And now we've made it so\nthat {[0001|1a00]}{color[0400]}breaking the apple will\nswitch the Flag Nodon on{color[ffff]}{[0001|ffff]}!
078	Now we just have to make it so that\nwhen the {[0001|1a00]}{color[0400]}Flag Nodon{color[ffff]}{[0001|ffff]} is switched {[0001|1a00]}{color[0400]}on{color[ffff]}{[0001|ffff]},\nthe {[0001|1a00]}{color[0400]}person becomes able to jump{color[ffff]}{[0001|ffff]}.
079	A {[0001|1a00]}{color[0400]}Button Nodon{color[ffff]}{[0001|ffff]} and an {[0001|1a00]}{color[0400]}AND Nodon\n{color[ffff]}{[0001|ffff]}should be able to help us with that.
080	Yo! I got {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]} covered!
081	And I'll be keeping a sharp eye\nout for signals from the {[0001|1a00]}{color[0400]}Button Nodon\nfor  {color[ffff]}{[0001|ffff]}and the {[0001|1a00]}{color[0400]}Flag Nodon{color[ffff]}{[0001|ffff]}.
082	Let's get programming.
083	Connect up the {[0001|1a00]}{color[0400]}Flag Nodon\n{color[ffff]}{[0001|ffff]}and the {[0001|1a00]}{color[0400]}AND Nodon{color[ffff]}{[0001|ffff]}.
084	Now link the {[0001|1a00]}{color[0400]}Button Nodon\n{color[ffff]}{[0001|ffff]}to the {[0001|1a00]}{color[0400]}AND Nodon{color[ffff]}{[0001|ffff]}.
085	And finally, connect the {[0001|1a00]}{color[0400]}AND Nodon{color[ffff]}{[0001|ffff]}'s\noutput to the {[0001|1a00]}{color[0400]}Person Nodon{color[ffff]}{[0001|ffff]}'s {[0001|1a00]}{color[0400]}jump port{color[ffff]}{[0001|ffff]}.
086	So now when the apple breaks, the person\nwill {[0001|1a00]}{color[0400]}become able to jump {color[ffff]}{[0001|ffff]}with {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]}. If you like, you\ncan think of breaking the apple as grabbing it!
087	Let's see it in action\non the game screen.
088	First, press {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]}.
089a_00	Oh, I meant you should press \n{[0001|1a00]}{color[0400]}before you take the apple{color[ffff]}{[0001|ffff]}...
089a_01	Well, let's just retry.
089a_02	Right, this time {[0001|1a00]}{color[0400]}press \nbefore taking the apple{color[ffff]}{[0001|ffff]}.
089a_03	Ah... Not quite. Remember, you need\nto {[0001|1a00]}{color[0400]}press  before you take the apple{color[ffff]}{[0001|ffff]}.
089a_04	Let's hit retry again.
089	If you {[0001|1a00]}{color[0400]}don't take the apple{color[ffff]}{[0001|ffff]},\nthe person {[0001|1a00]}{color[0400]}can't jump{color[ffff]}{[0001|ffff]}.
090	Now, take the {[0001|1a00]}{color[0400]}apple{color[ffff]}{[0001|ffff]}.
091	Press {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]} again.
092	And now that you've {color[0400]}{[0001|1a00]}taken\nthe apple{[0001|ffff]}{color[ffff]}, you can {color[0400]}{[0001|1a00]}jump{[0001|ffff]}{color[ffff]}!
093	It's a pretty nifty little\ngame trick, isn't it?
094	If you want to {[0001|1a00]}{color[0400]}enable things due to something\nhappening in the game{color[ffff]}{[0001|ffff]}, Flag Nodon has your\nback. This is great for creating power-up items!
094-01	Remember it well!
095	Let's get back to the\nprogram screen.
096	Welcome back!
097	♪If you need to turn things off and on♪
097-01	♪Call your old pal, the {[0001|1a00]}{color[0400]}Flag Nodon{color[ffff]}{[0001|ffff]}!♪
097-02	Zzzzz...
097-03	Tell me Flag Nodon's\nnot sleeping again.
098	Zzzz... Fire all the marshmallows...\nI'll eat 'em all...mmrf mmrf mmrf...
099	What kind of dream is that?
Guidebook_PrintDebug.msbt
00.00.Alice	Hi, {[0201]}.
00.01.Alice	As you can see, there's a stopped\ncar on the left side of the game screen,\nand a red line on the right side.
00.02.Alice	I wanted to make it so that\n{[0001|1a00]}{color[0400]}party poppers go off{color[ffff]}{[0001|ffff]} when\nthe car gets to the {[0001|1a00]}{color[0400]}red line{color[ffff]}{[0001|ffff]}.
00.03.Alice	But, well, I'm not sure\nI've done it. Try making\nthe car go with {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]}.
00.04.Alice	See? {[0001|1a00]}{color[0400]}Nothing happens{color[ffff]}{[0001|ffff]} when\nthe car crosses the red line.
00.05.Alice	It appears that, right now, there's a\n{color[0400]}{[0001|1a00]}problem in the programming{[0001|ffff]}{color[ffff]} that's\nkeeping the party poppers from going off.
00.06.Alice	This time around, I'll introduce some\n{color[0400]}{[0001|1a00]}debug{[0001|ffff]}{color[ffff]} methods for figuring out why this\nkind of problem might be happening.
00.07.Alice	Let's head to the program screen.
01.00.Car	Vroom, vroom!\nI'm a Car Nodon!
01.01.Rigid	Heyo! I'm an Object Nodon.\nI'm that red line in the game.
01.02.Sensor	I'm a Location-Sensor Nodon. My current\nspecialty is...anything you want to know\nabout the Car Nodon's location.
01.03.Effect	Good ta see ya, {[0201]}!\nI hope yer ready for a rip-roarin' time!
01.04.Effect	Anyhoo, what can we do you for?
01.05.Effect	Ah, wait. It's me, isn't it? I'm not takin' my cue\nand goin' off like I should, right? Well, believe\nme, I wanna know what's goin' on too!
01.06.Effect	I guess it's time to explain\nwhat conditions I react to in\nthe first place, right?
01.07.Car	First things first, when I get the signal\nfrom the Button Nodon in my {[0001|1a00]}{color[0400]}accelerate\nport{color[ffff]}{[0001|ffff]} I go roaring{[0001|1a00]} {color[0400]}to the right{color[ffff]}{[0001|ffff]}.
01.08.Sensor	And I'm connected\nto the Car Nodon.
01.09.Sensor	I can output the {[0001|1a00]}{color[0400]}car's position{color[ffff]}{[0001|ffff]},\nwhether on the x, y, or z-axis.
01.10.Compare	I'm a Comparison Nodon!
01.11.Compare	I take the numbers output by\nthe Location-Sensor Nodon.
01.12.Compare	And I take the number I get\nfrom the Constant Nodon.
01.13.Compare	Aaand I put them together to see\nwhich one's the {color[0400]}{[0001|1a00]}biggest{[0001|ffff]}{color[ffff]}! Be honest,\nyou want to know too, don't you?
01.14.Constant	I am a Constant Nodon, exuding\na radiant, perpetual 4.00.
01.15.Constant	And if the {color[0400]}{[0001|1a00]}number of the Location-\nSensor Nodon's output{[0001|ffff]}{color[ffff]} is greater\nthan the {color[0400]}{[0001|1a00]}4.00 {[0001|ffff]}{color[ffff]}which I am transmitting...
01.16.Constant	Then that's my cue! Got it?
01.17.Constant	4.00 is actually {[0001|1a00]}{color[0400]}my position{color[ffff]}{[0001|ffff]} on\nthe x-axis. Funny old world, eh?
01.19.Alice	Let's do a quick settings\ncheck just to be sure.
01.20.Alice	Select the Object Nodon.
01.21.Alice	And open the settings screen.
01.23.Alice	Yep, that's definitely at {color[0400]}{[0001|1a00]}X: 4.00m{[0001|ffff]}{color[ffff]}.
01.24.Alice	When you've had a good\nlook, close the settings again.
01.25.Effect	It certainly looks like when the car\nreaches the red object, I should be\nlettin' loose with those party poppers.
01.25-01.Car	But that definitely hasn't\nbeen happening.
01.26.Alice	Which means there's a {color[0400]}{[0001|1a00]}problem\n{[0001|ffff]}{color[ffff]}with the programming somewhere.
01.27.Alice	An easy way to detect a problem like\nthis is to have the {[0001|1a00]}{color[0400]}numbers being output by\nthe Nodon displayed on the game screen{color[ffff]}{[0001|ffff]}.
01.28.Alice	I know exactly who can help us with our\ndebug! {[0001|1a00]}{color[0400]}Number-Object Nodon{color[ffff]}{[0001|ffff]}!
01.29.Number	Hello, {[0201]}!
01.30.Number	Just connect me up to the output port\nof {color[0400]}{[0001|1a00]}the Nodon whose numbers you want\nme to display{[0001|ffff]}{color[ffff]}, and that should do it.
01.31.Alice	OK, our problem is that the {color[0400]}{[0001|1a00]}Effect Nodon\ndoesn't react when we think it should{[0001|ffff]}{color[ffff]}.
01.32.Alice	Which might mean that another Nodon isn't\n{[0001|1a00]}{color[0400]}outputting the number we thought it was{color[ffff]}{[0001|ffff]}.
01.33.Alice	If we check them one by one, then\nwe'll find the cause of the problem.
01.34.Alice	First, let's see. Where is the Effect Nodon\ngetting its input from? Hmm... Let's take\na look at the {[0001|1a00]}{color[0400]}Comparison Nodon's output{color[ffff]}{[0001|ffff]}.
01.35.Alice	Connect the Number-Object Nodon\nto the Comparison Nodon's output.
01.36.Alice	And let's pop on over to the game\nscreen and see what's going on.
02.00.Alice	See that {[0001|1a00]}{color[0400]}0.00{color[ffff]}{[0001|ffff]} in the middle?
02.01.Alice	That's {[0001|1a00]}{color[0400]}the number that the\nComparison Nodon is outputting{color[ffff]}{[0001|ffff]}.
02.02.Alice	Keep an eye on that number,\nand move the car with {color[0400]}{[0001|1a00]}{[0001|ffff]}{color[ffff]}.
02.03.Alice	Oh! The number is at 0.00 even\nwhen the car crosses the red line.
02.04.Alice	Remember, you can hit Retry\nif you want to check again.
02.05.Alice	That 0.00 number is interesting.\nIt means the Comparison Nodon\nisn't {[0001|1a00]}{color[0400]}outputting a signal{color[ffff]}{[0001|ffff]}.
02.06.Alice	Let's see what we can do\nin the program screen.
03.00.Number	Is everything OK? I was displaying\na {[0001|1a00]}{color[0400]}steady 0.00 {color[ffff]}{[0001|ffff]}the whole time there.
03.01.Effect	I was waitin' fer that\nsignal, but nothin' came.
03.01-01.Effect	I'm mostly sure I didn't\naccidentally close my eyes.
03.02.Alice	Nothing jumped out at me in particular,\nso let's move on. Next let's check out\nthe {[0001|1a00]}{color[0400]}Comparison Nodon's input{color[ffff]}{[0001|ffff]}.
03.03.Constant	I am sending a beatific 4.00.\nIt will not change. It cannot change.
03.04.Sensor	The number I output {[0001|1a00]}{color[0400]}changes\nwhen the car moves{color[ffff]}{[0001|ffff]}!
03.05.Alice	The Constant Nodon's output is definitely\nnot going to change, so let's take a closer\nlook at the {[0001|1a00]}{color[0400]}Location-Sensor Nodon{color[ffff]}{[0001|ffff]}.
03.06.Sensor	Ooh, you want to check out my\noutput? Roger that! Eyes open!
03.08.Alice	OK, select the connection from the\nComparison Nodon's output port.
03.09.Alice	And delete it!
03.09-01.Alice	Now join it up to the {[0001|1a00]}{color[0400]}Location-\nSensor Nodon{color[ffff]}{[0001|ffff]}'s output port.
03.10.Alice	OK, let's see what the game\nscreen has to show us now.
04.00.Alice	OK, the number\nis now {[0001|1a00]}{color[0400]}0.77{color[ffff]}{[0001|ffff]}.
04.00-01.Alice	So this is the number that the\nLocation-Sensor Nodon is sending\nto the Comparison Nodon.
04.00-02.Alice	So we can deduce that the Comparison\nNodon is comparing this {[0001|1a00]}{color[0400]}0.77{color[ffff]}{[0001|ffff]} to the {[0001|1a00]}{color[0400]}4.00\n{color[ffff]}{[0001|ffff]}that the Constant Nodon is sending out.
04.00-03.Alice	And when the Comparison Nodon\nchecks the number to see if it's {[0001|1a00]}{color[0400]}bigger\nthan{color[ffff]}{[0001|ffff]} the Constant Nodon's {[0001|1a00]}{color[0400]}4.00{color[ffff]}{[0001|ffff]}...
04.01.Alice	{[0001|1a00]}{color[0400]}0.77 is smaller than 4.00{color[ffff]}{[0001|ffff]}, so\n{[0001|1a00]}{color[0400]}the Comparison Nodon isn't\noutputting a signal{color[ffff]}{[0001|ffff]}.
04.02.Alice	So! You know the drill. Keep an eye on\nthat number while you move that car with {color[0400]}{[0001|1a00]}{[0001|ffff]}{color[ffff]}.
04.03.Alice	Even when the car moves\nthe number stays at 0.77...
04.04.Alice	Well, no matter where you\nmake the car go, it's never\ngoing to reach 4.00, is it?
04.05.Alice	So the problem is to do with this 4.00 number\nand the Comparison Nodon... There's something\nodd about {[0001|1a00]}{color[0400]}the Location-Sensor Nodon's output{color[ffff]}{[0001|ffff]}.
04.06.Alice	Well, let's get back to\nthe program screen.
05.00.Number	Was that helpful? It looks like I was\noutputting {color[0400]}{[0001|1a00]}0.77 the whole time{[0001|ffff]}{color[ffff]}.
05.01.Compare	4.00 is bigger than\n0.77, right? Right?
05.03.Effect	So why aren't the numbers changin',\neven when the car's zoomin' around?
05.04.Sensor	How strange! When the car\nmoves to the right my {color[0400]}{[0001|1a00]}X\n{[0001|ffff]}{color[ffff]}output definitely changes.
05.05.Number	Er... {color[0400]}{[0001|1a00]}X{[0001|ffff]}{color[ffff]}?
05.06.Number	Forgive me, Location-Sensor Nodon,\nbut it's not your {[0001|1a00]}{color[0400]}X{color[ffff]}{[0001|ffff]} {[0001|1a00]}{color[0400]}port{color[ffff]}{[0001|ffff]} that's connected.\nIt's your {color[0400]}{[0001|1a00]}Y{[0001|ffff]}{color[ffff]} {[0001|1a00]}{color[0400]}port{color[ffff]}{[0001|ffff]}...
05.07.Sensor	Oh, you're right! It's my\n{color[0400]}{[0001|1a00]}Y{[0001|ffff]}{color[ffff]} {[0001|1a00]}{color[0400]}port{color[ffff]}{[0001|ffff]} that's connected!
05.08.Sensor	But it's my {color[0400]}{[0001|1a00]}X{[0001|ffff]}{color[ffff]} {[0001|1a00]}{color[0400]}port{color[ffff]}{[0001|ffff]} that's transmitting\nthe Car Nodon's left-right movement!
05.09.Compare	So what I'm comparing isn't actually\nthe Car Nodon's {color[0400]}{[0001|1a00]}horizontal position{[0001|ffff]}{color[ffff]},\nbut its {color[0400]}{[0001|1a00]}vertical position{[0001|ffff]}{color[ffff]}!
05.10.Number	Then the problem is clear.
05.10-01.Effect	Yer sayin' the {color[0400]}{[0001|1a00]}connection was made\nto the wrong port{[0001|ffff]}{color[ffff]}? That's an easy fix.
05.11.Alice	What a relief! Let's\nget that fixed, then.
05.12.Alice	Select the connection between the\nLocation-Sensor Nodon's {[0001|1a00]}{color[0400]}Y port{color[ffff]}{[0001|ffff]}\nand the Number-Object Nodon.
05.13.Alice	Delete it.
05.14.Alice	And the connection to\nthe Comparison Nodon.
05.15.Alice	That can go too.
05.16.Sensor	Connecting up my {[0001|1a00]}{color[0400]}X port{color[ffff]}{[0001|ffff]} \nshould solve the problem.
05.17.Alice	There. That should do it.
05.18.Alice	Let's check the game screen.
06.00.Alice	So now it's displaying\na minus number.
06.02.Alice	Put the {color[0400]}{[0001|1a00]}{[0001|ffff]}{color[ffff]} to the metal!
06.03.Alice	The number's going up!
06.04.Alice	And when it hit 4.00 the\nparty popper went off!
06.05.Alice	Let's relive our triumph!\nJust hit {color[0400]}{[0001|1a00]}Retry{[0001|ffff]}{color[ffff]}.
06.05-01.Alice	Yep, looks like we\nsquashed that bug flat!
06.06.Alice	When you're satisfied, let's go\nback to the program screen.
07.00.Effect	Well, how was that fer\ngoin' out with a bang?
07.01.Sensor	The lesson is to always check\nwhich port your connections\nare linked to.
07.02.Number	Even simple things can\ncause tricky problems.
07.03.Alice	Do you understand how to use a Number-\nObject Nodon to help with your debug?
07.06.Number	Just hook me up to whatever input\nyou want to check on, and I'll show\nyou the numbers on the game screen.
07.07.Effect	And when you aren't gettin' the results\nyou want...don't sweat it! Take it slow\nand easy, Nodon by Nodon.
07.08.Number	Do that, and you'll always be able to\npinpoint the source of the problem.
07.09.Effect	You know what they say, right?\n{[0001|1a00]}{color[0400]}Haste makes paste{color[ffff]}{[0001|ffff]}. And paste\nwon't help you make a game.
07.10.Effect	Wait, no that makes no sense. {[0001|1a00]}{color[0400]}Haste\nmakes WASTE{color[ffff]}{[0001|ffff]}! I don't know where\nI got paste from... Too hasty, I guess.
07.11.Alice	I...think that's all you're\ngoing to learn for now.
07.12.Car	Vroom vroom!\nCome back soon!
Guidebook_PunchAndBreak.msbt
000	Hello, there.
001	Well, here's a nice\ncolorful {[0001|1a00]}{color[0400]}box mountain{color[ffff]}{[0001|ffff]}.
002	Use {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]} to move around,\nand {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]} to {[0001|1a00]}{color[0400]}punch the boxes{color[ffff]}{[0001|ffff]}.
003	See how the {color[0400]}{[0001|1a00]}boxes break{[0001|ffff]}{color[ffff]}\nwhen they're punched?\nFeels good, right?
106	Go on, smash 'em up!
004	Ahhh, that's the stuff!
005	Actually, that's what\nthis guide is all about...
006	{color[0400]}{[0001|1a00]}How to make things break\nwhen the player punches them{[0001|ffff]}{color[ffff]}!
105	Let's start off on\nthe program screen.
007	Hiyaah! Huuurgh! Yaaaaah!
008	Oh, {[0201]}!\nDidn't see you there. Hello.
009	Anyway, check this out!\nI've got a new ability!
010	I can {color[0400]}{[0001|1a00]}break things{[0001|ffff]}{color[ffff]} just by {color[0400]}{[0001|1a00]}punching\nthem{[0001|ffff]}{color[ffff]}! With my bare hands!
011	Yup. We're feeling\na bit delicate today.
012	Oh, peeps! Isn't this the coolest thing?!
014	And do you know how I got\nthis awesome power?
014-01	{[0001|1a00]}{color[0400]}Button Nodon{color[ffff]}{[0001|ffff]} and {[0001|1a00]}{color[0400]}Destroy-Object\nNodon{color[ffff]}{[0001|ffff]} bestowed it upon me!
014-02	Yo! Push-ups make your punches\nstronger! Push that button down,\nthen push it up again!
014-03	How terrible...to not know\none's own strength... Heh.
015	The{[0001|1a00]}{color[0400]} Button Nodon{color[ffff]}{[0001|ffff]}'s connected\nto my {[0001|1a00]}{color[0400]}action port{color[ffff]}{[0001|ffff]}, see?
016	Give {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]} a press and\nI'll fire off a {[0001|1a00]}{color[0400]}signal{color[ffff]}{[0001|ffff]} to\nthe {[0001|1a00]}{color[0400]}Person Nodon{color[ffff]}{[0001|ffff]}.
017	And when my {[0001|1a00]}{color[0400]}action port {color[ffff]}{[0001|ffff]}detects\na {[0001|1a00]}{color[0400]}signal{color[ffff]}{[0001|ffff]}, it triggers my set {[0001|1a00]}{color[0400]}action{color[ffff]}{[0001|ffff]}.
018	Right now the action that's\nbeen set for me is a {[0001|1a00]}{color[0400]}punch{color[ffff]}{[0001|ffff]}.
019	So basically, pressing\n{[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]} makes me {[0001|1a00]}{color[0400]}punch{color[ffff]}{[0001|ffff]}.
020	That's not the whole story though. Giving\na person the power of fisticuffs doesn't\ngive them the power to {[0001|1a00]}{color[0400]}break things{color[ffff]}{[0001|ffff]}.
021	We're going to need to program in some\n{[0001|1a00]}{color[0400]}object destruction{color[ffff]}{[0001|ffff]} to make that happen!
024	Heh heh...
025	Hey! {[0001|1a00]}{color[0400]}Destroy-Object Nodon{color[ffff]}{[0001|ffff]}!
026	If you want things destroyed,\nI'm here to make it happen.
027	{[0001|1a00]}{color[0400]}When the person punches{color[ffff]}{[0001|ffff]}, I'm the\none that actually{[0001|1a00]}{color[0400]} breaks the object{color[ffff]}{[0001|ffff]}.
028	{[0001|1a00]}{color[0400]}Whatever I touch{color[ffff]}{[0001|ffff]}...heh heh...breaks.
029	{[0001|1a00]}{color[0400]}Connecting{color[ffff]}{[0001|ffff]} me to the Person\nNodon sticks me {[0001|1a00]}{color[0400]}to their front{color[ffff]}{[0001|ffff]}.
029-01	And you see I'm linked to\nthe {[0001|1a00]}{color[0400]}Button Nodon{color[ffff]}{[0001|ffff]} too?
029-02	When the Button Nodon gives me the\nsignal...which is to say when {[0001|1a00]}{color[0400]} is pressed{color[ffff]}{[0001|ffff]}...\nit's curtains for anything I'm touching.
029-03	And pressing  triggers\na {[0001|1a00]}{color[0400]}punch{color[ffff]}{[0001|ffff]} from me, remember.
029-04	So when the {[0001|1a00]}{color[0400]}person punches{color[ffff]}{[0001|ffff]}, {[0001|1a00]}{color[0400]}the\nobject they're touching is blasted to\nsmithereens at the exact same time{color[ffff]}{[0001|ffff]}!
029-05	Heh, you're a perceptive\none, aren't ya? I like you.
041	And you, {[0201]}, you\ntoo shall understand the nature of\nmy duties. Let me...show you. Heh.
042	Make me...{[0001|1a00]}{color[0400]}visible{color[ffff]}{[0001|ffff]}.
043	Open up the {[0001|1a00]}{color[0400]}Destroy-\nObject Nodon{color[ffff]}{[0001|ffff]}'s settings.
044	{color[0400]}{[0001|1a00]}Enable Visible{[0001|ffff]}{color[ffff]} in\nthe {color[0400]}{[0001|1a00]}properties{[0001|ffff]}{color[ffff]}.
045	Close the settings screen now.
046	Now you'll be able to\nsee...exactly where\nI'm lurking... Heh.
047	Now you will see...heh\nheh...{color[0400]}{[0001|1a00]}how I destroy things{[0001|ffff]}{color[ffff]}.
053	Now, {[0201]}, give in\nto your most destructive instincts!
054	Let's go and break\nthings, I guess!
055	Oh, there, you see? That {[0001|1a00]}{color[0400]}square\nframe {color[ffff]}{[0001|ffff]}stuck to the player character.
056	That frame is due to the\n{color[0400]}{[0001|1a00]}Destroy-Object Nodon\n{[0001|ffff]}{color[ffff]}connected to the person.
057	Punch with {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]} to see {[0001|1a00]}{color[0400]}what happens\nto the boxes touching the frame{color[ffff]}{[0001|ffff]}.
058	Bye-bye, boxes!
059	So that's how a Destroy-Object\nNodon can break objects when\na punch is thrown.
060	And that's {[0001|1a00]}{color[0400]}how to break things\nwith a punch{color[ffff]}{[0001|ffff]}. Or at least how\nto look like you're doing it.
061	Let's head back to\nthe program screen.
062	How about...we break\nthings...{[0001|1a00]}{color[0400]}in a different way{color[ffff]}{[0001|ffff]}?
063	Let's rearrange\nthe {[0001|1a00]}{color[0400]}Object Nodon{color[ffff]}{[0001|ffff]}...
064	See ya, boss.
065	All done, bud.
067	Let's take a look at the game\nscreen and see what's changed.
068	Ah, a lovely {color[0400]}{[0001|1a00]}floating\n{[0001|ffff]}{color[ffff]}parade of boxes.
068-01	Oh, but I don't think you can\nreach them with a simple\npunch now, can you?
069	Shall we see if we can program\na way to {color[0400]}{[0001|1a00]}punch from below{[0001|ffff]}{color[ffff]} and\nbreak them that way?
071	{[0001|1900]}To the program screen!{[0001|ffff]}
074	First let's change the {[0001|1a00]}{color[0400]}person's\naction{color[ffff]}{[0001|ffff]} that's associated with pressing {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]}.
075	Select {[0001|1a00]}{color[0400]}Action{color[ffff]}{[0001|ffff]}.
076	Change it to {[0001|1a00]}{color[0400]}Celebrate{color[ffff]}{[0001|ffff]}.
077	Now close this screen.
079	It's time to see what\nkind of action this is!
080	Get underneath\na box and press {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]}.
081	Our person friend\n{color[0400]}{[0001|1a00]}punched up from below{[0001|ffff]}{color[ffff]}!
081-01	But it {color[0400]}{[0001|1a00]}didn't break{[0001|ffff]}{color[ffff]} the\nbox. Not even a dent.
082	Even though the punch hit\nhome, {[0001|1a00]}{color[0400]}Destroy-Object Nodon{color[ffff]}{[0001|ffff]}'s\nwhite frame didn't {[0001|1a00]}{color[0400]}touch{color[ffff]}{[0001|ffff]} the box.
084	{[0001|1900]}Let's get back to\nthe program screen.{[0001|ffff]}
085	Heh heh... Looks like you're\nhaving trouble destroying\nthings, {[0201]}.
086	I understand your frustration.\nBut I'm here to help. Heh...
087	Change my {[0001|1a00]}{color[0400]}Connection Point{color[ffff]}{[0001|ffff]}.
088	Open the {[0001|1a00]}{color[0400]}Destroy-Object\nNodon{color[ffff]}{[0001|ffff]}'s settings screen.
089	Open {[0001|1a00]}Connection Point{[0001|ffff]}.
090	The boxes are above the person, so\nwe want the {[0001|1a00]}{color[0400]}Target Connection Point\n{color[ffff]}{[0001|ffff]}to be {[0001|1a00]}{color[0400]}above the person too{color[ffff]}{[0001|ffff]}, on {[0001|1a00]}{color[0400]}Y+{color[ffff]}{[0001|ffff]}.
091	Now close that screen.
092	And close this too.
093	Let's have a peek\nat the game screen.
094	Now the white frame is stuck\nto the {[0001|1a00]}{color[0400]}top of the person{color[ffff]}{[0001|ffff]}.
095	So what happens this time if\nyou press {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]} underneath a box?
096	{[0001|1900]}Take that, box!{[0001|ffff]}
097	This time Destroy-Object Nodon\nwas {color[0400]}{[0001|1a00]}touching{[0001|ffff]}{color[ffff]} the box, so it {color[0400]}{[0001|1a00]}broke{[0001|ffff]}{color[ffff]}.
098	So that's an important thing to keep in\nmind when you want to {color[0400]}{[0001|1a00]}align a person's\naction and an object breaking{[0001|ffff]}{color[ffff]}.
099	Always bear in mind the Destroy-\nObject Nodon's {color[0400]}{[0001|1a00]}Connection Point {[0001|ffff]}{color[ffff]}.
100	When you're done messing around,\nlet's go back to the program screen.
101	Hello again!
102	Heh, now I am one with\nthe person's actions...
104	Together we will make beautiful music...\nA symphony of destruction... Heh heh...
Guidebook_RotateRigid.msbt
00.00.Alice	Hello, {[0201]}.
00.01.Alice	There's a nice floating box\non the game screen today.
00.02.Alice	You can move it around by moving\n{color[0400]}{[0001|1a00]} up or down{[0001|ffff]}{color[ffff]}. Give it a try!
00.03.Alice	Ooh, it rotated.
00.04.Alice	This box is a {color[0400]}{[0001|1a00]}rotating object{[0001|ffff]}{color[ffff]}.
00.05.Alice	And oddly enough, we're going to be\nlearning about {color[0400]}{[0001|1a00]}rotating objects{[0001|ffff]}{color[ffff]} this time.
00.06.Alice	Let's kick things off on\nthe program screen.
01.00.Rotate	Tralalalaaa! Rotation is my\nlife, and my life is rotation!
01.01.Rotate	I am called {color[0400]}{[0001|1a00]}Rotating-Object Nodon{[0001|ffff]}{color[ffff]}, and\nI am pleased to make your acquaintance.
01.02.Stick	Boing! I'm sending input\nfrom the control stick to\nthe Rotating-Object Nodon!
01.03.Rotate	The joy of tripping the light fantastic with\na dance partner! Pure {[0001|1a00]}{color[0400]}weightlessness{color[ffff]}{[0001|ffff]}!
01.04.Rotate	To whirl in perfect freedom,\none must not be weighed\ndown! Come! Spin with me!
01.05.Stick	Whooo! Oh, yeah... Was\nthere something you\nwanted, {[0201]}?
01.06.Rotate	Ohoho! You want to learn\nthe secrets of setting an\nobject all a-twizzle?
01.06-01.Rotate	I shall accompany you!\nI shall impart to you the\nsecrets of graceful prancing!
01.07.Stick	Firstly, see how my  up/down\nmovement is connected to the\nRotating-Object Nodon's {color[0400]}{[0001|1a00]}x-axis port{[0001|ffff]}{color[ffff]}.
01.08.Rotate	The {[0001|1a00]}{color[0400]}x-axis{color[ffff]}{[0001|ffff]} is the horizontal\naxis, strong as a ballet barre!
01.09.Rotate	That {color[0400]}{[0001|1a00]}strong, stable object{[0001|ffff]}{color[ffff]} will rotate\naccording to the value of the signal\nreceived at the x-axis port.
01.10.Stick	Tilting  up and down made the object\nrotate {color[0400]}{[0001|1a00]}to the front and back{[0001|ffff]}{color[ffff]}, correct?
01.11.Rotate	The input number can change the\n{color[0400]}{[0001|1a00]}rotation direction{[0001|ffff]}{color[ffff]} and {color[0400]}{[0001|1a00]}speed{[0001|ffff]}{color[ffff]} alike.
01.12.Stick	Imagine you tilted  up, and\nI sent an output of {[0001|1a00]}{color[0400]}1.00{color[ffff]}{[0001|ffff]}.
01.13.Rotate	Then the rotation would take place\nin a {color[0400]}{[0001|1a00]}forward{[0001|ffff]}{color[ffff]} direction, at a speed\nof {color[0400]}{[0001|1a00]}one rotation per second{[0001|ffff]}{color[ffff]}.
01.14.Stick	And then imagine you tilted  down from\nthe neutral position, but only halfway.\nI'd output {[0001|1a00]}{color[0400]}-0.50{color[ffff]}{[0001|ffff]}!
01.15.Rotate	An elegant spin, and a stately {color[0400]}{[0001|1a00]}half-\nturn-per-second{[0001|ffff]}{color[ffff]} rotation to the {color[0400]}{[0001|1a00]}back{[0001|ffff]}{color[ffff]}!
01.21.Stick	Hey, what would happen if one of\nthe other input ports had a number\ninput in it? How would it rotate then?
01.22.Alice	There's only one way to find out.\nLet's play with the {color[0400]}{[0001|1a00]}y-axis port{[0001|ffff]}{color[ffff]}.
01.23.Alice	We'll give the Stick Nodon a rest and\ncall on a {color[0400]}{[0001|1a00]}Constant Nodon {[0001|ffff]}{color[ffff]}for this one.
01.24.Stick	Byeee!
01.25.Constant	I am Constant Nodon, bestowing\na serene 4.00 upon all I survey.
01.26.Rotate	Constant Nodon, may\nI have this dance?
01.26-01	So, this Constant Nodon is\noutputting a signal of {color[0400]}{[0001|1a00]}4.00{[0001|ffff]}{color[ffff]}.
01.28.Rotate	How rapturous! A {[0001|1a00]}{color[0400]}y-axis{color[ffff]}{[0001|ffff]} rotation\nspeed of {[0001|1a00]}{color[0400]}four rotations per second{color[ffff]}{[0001|ffff]}!\nI am positively giddy at the thought!
01.29.Alice	Let's see how it looks!
02.00.Alice	Goodness. That's\nquite the spin.
02.02.Alice	So this is how it looks when you\nrotate it like this on the y-axis.
02.03.Alice	Right, back to the program screen.
03.00.Rotate	Oh la, such immaculately swift\npirouettes on the y-axis are my forte!
03.04.Constant	The {[0001|1a00]}{color[0400]}y-axis{color[ffff]}{[0001|ffff]} gives a spin\naround a vertical {color[0400]}{[0001|1a00]}center line{[0001|ffff]}{color[ffff]}.
03.05.Rotate	Think of the upright spin of the\nfigure skater, en pointe on the ice,\ntwirling, twirling! I have frissons!
03.08.Constant	I must ask myself how the {color[0400]}{[0001|1a00]}z-axis\nport{[0001|ffff]}{color[ffff]} affects rotation, though.
03.09.Rotate	The {[0001|1a00]}{color[0400]}z-axis{color[ffff]}{[0001|ffff]} is the {[0001|1a00]}{color[0400]}inner direction axis{color[ffff]}{[0001|ffff]}.\nIts rotation is as of the hands of a clock.
03.10.Alice	The best way to\nfind out is to do it!
03.11.Alice	Let's connect up a\n{color[0400]}{[0001|1a00]}Button Nodon{[0001|ffff]}{color[ffff]} this time.
03.12.Constant	I enjoyed our dance.\nDo call on me again.
03.13.Button	Heya! I'm in charge of  today!
03.14.Button	You want to test out the\nRotating-Object Nodon's\nz-axis? I'm here to help!
03.19.Alice	Interesting! Let's see what\nkind of rotation this gives us.
04.00.Alice	Give {color[0400]}{[0001|1a00]}{[0001|ffff]}{color[ffff]} a press.
04.01.Alice	Ooh, {color[0400]}{[0001|1a00]}counterclockwise{[0001|ffff]}{color[ffff]}.
04.02.Alice	OK, when you've wrapped\nyour mind around this, let's go\nback to the program screen.
05.01.Rotate	How did you like it?
05.02.Rotate	A {color[0400]}{[0001|1a00]}positive number{[0001|ffff]}{color[ffff]} in the z-axis port\nwill create a {color[0400]}{[0001|1a00]}counterclockwise spin{[0001|ffff]}{color[ffff]}.
05.03.Button	Whoa, really? I thought it was\nspinning to the left because\nI'm in charge of .
05.04.Rotate	Hohoho! Alas,\n'tis not the case!
05.06.Rotate	When one is passionate for dancing,\none must understand {color[0400]}{[0001|1a00]}the rules of rotation{[0001|ffff]}{color[ffff]}.
05.07.Alice	For example, the x-axis will\ngive a {color[0400]}{[0001|1a00]}counterclockwise rotation\nas seen from the X- side{[0001|ffff]}{color[ffff]}.
05.07-01.Alice	And the y-axis will give a {color[0400]}{[0001|1a00]}counterclockwise\nrotation as seen from the Y- side{[0001|ffff]}{color[ffff]}.
05.08.Rotate	And these rules hold true even\n{[0001|1a00]}{color[0400]}when multiple ports are receiving\ninput at the same time{color[ffff]}{[0001|ffff]}!
05.09.Button	Whoa, whoa, whoa! Hold your horses.\nAre you telling me you can turn on\ndifferent axes at the same time?!
05.10.Rotate	Hohoho, but of course!
05.11.Alice	Well, I think we need to test\nthis one out, don't you?\nLet's do some experimenting.
05.12.Alice	We're going to need the Stick Nodon\nto come back and give us a hand.
05.13.Stick	Hey, nice to see you\nagain, {[0201]}!
05.14.Rotate	Stick Nodon, I am grateful that my\neyes have the honor of beholding\nyou once more!
05.15.Rotate	This dance shall be rather more of\na challenge. So I'd better take the lead.\nThe steps may be a trifle complicated.
05.16.Stick	Be gentle!
05.17.Alice	Let's see them take to the\nfloor on the game screen.
06.00.Alice	Tilting {color[0400]}{[0001|1a00]} up and down{[0001|ffff]}{color[ffff]} should rotate along the\nx-axis. Pressing {color[0400]}{[0001|1a00]}{[0001|ffff]}{color[ffff]} should rotate counterclockwise\nalong the z-axis at the same time. Try it!
06.02.Alice	Mixing it up along different axes can help\nyou get some complex rotation like this.
06.03.Alice	Oh, hit Retry if you want everything to go\nback to the way it was in the beginning.
06.04.Alice	If your eyes are starting to spin,\ngo back to the program screen.
07.00.Rotate	Marvelous! Simply marvelous! Was\nI not the soul of grace, weightless\nas a feather? I was! I know it!
07.01.Button	I, er... I'm not sure\nwhat just happened...\nI might need to sit down.
07.02.Stick	That was a really tricky one!
07.03.Rotate	You aren't required to understand\nevery nuance of my complex\nsteps and twirls.
07.04.Rotate	It is enough to enjoy it in\nyour heart! That is all I ask!
07.06.Alice	And that's how to make good use of\na {color[0400]}{[0001|1a00]}Rotating-Object Nodon{[0001|ffff]}{color[ffff]} to fill your\ngame screen with rotating objects.
07.15.Rotate	Call me up whenever you need me!\nI'll keep my dance card free for you.
07.16.Button	See you next time!
Guidebook_Scroll.msbt
000	Hello, {[0201]}!
001	I wonder what that is at\nthe edge of the screen...\nI can't quite see it all.
002	Is that...{color[0400]}{[0001|1a00]}a person{[0001|ffff]}{color[ffff]}?
003	In this guide, we're going to try to get the {color[0400]}{[0001|1a00]}person\nat the edge of the screen{[0001|ffff]}{color[ffff]} into {color[0400]}{[0001|1a00]}the center of the\nscreen{[0001|ffff]}{color[ffff]}. That'll make them easier to see.
004	Well, let's see what's going\non in the program screen.
005	Oh, it's {[0201]}!\nMarvelous to see you, darling!
006	Hiya, {[0201]}!
008	You saw my dilemma, yes?\nThe poor person cut off by\nthe edge of the screen?
009	It's a cinematic disaster!\nMy framing is all wrong!\nMy star MUST be centered!
009-01	What we want, is to be\nable to {color[0400]}{[0001|1a00]}move the focus\nof the game screen{[0001|ffff]}{color[ffff]}.
009-02	I have a confession: you can move the\ngame screen around even though I, {color[0400]}{[0001|1a00]}the\nGame-Screen Nodon, remain stationary{[0001|ffff]}{color[ffff]}.
009-03	Zoom in on my {color[0400]}{[0001|1a00]}X port{[0001|ffff]}{color[ffff]}!
010	You see the input to my {color[0400]}{[0001|1a00]}X port{[0001|ffff]}{color[ffff]}?\n{color[0400]}{[0001|1a00]}The game screen can move on the\nx-axis according to the input number{[0001|ffff]}{color[ffff]}.
011	Let me call my assistant, {color[0400]}{[0001|1a00]}Constant\nNodon{[0001|ffff]}{color[ffff]}! Don't be shy, my darling!
012	I am here at your service to\nhelp move the game screen.
012-01	It's outputting {color[0400]}{[0001|1a00]}5.00{[0001|ffff]}{color[ffff]},\nat the moment.
013	Be a dear, {[0201]}, and\nconnect the {[0001|1a00]}{color[0400]}Constant Nodon{color[ffff]}{[0001|ffff]} to my {[0001|1a00]}{color[0400]}X port{color[ffff]}{[0001|ffff]}.
014	Go ahead. Connect the\nConstant Nodon to the\nGame-Screen Nodon's {color[0400]}{[0001|1a00]}X port{[0001|ffff]}{color[ffff]}.
015	Now the screen should have moved\n{color[0400]}{[0001|1a00]}5.00m along the x-axis{[0001|ffff]}{color[ffff]}. Take two!
017	And now the person should be\nfront and center, perfectly framed!
018	Let's look at the game\nscreen to check.
019	Perfect! They're right in\nthe {color[0400]}{[0001|1a00]}middle of the screen{[0001|ffff]}{color[ffff]}.
020	That must be because the game screen\nscooted over {color[0400]}{[0001|1a00]}5.00m on the x-axis{[0001|ffff]}{color[ffff]}.
02100	Hmm... But there's something\nhalf-visible at the right side\nof the screen...
022	Is... Is that a chick?
023	Let's get back to the program\nscreen and see what's what.
024	Ah, did you spot it?
025	Shifting the game screen\nover revealed the chick!
026	Enter Fancy-Object Nodon,\nto brighten up the scene!
027	Yes, I have decided. You\nshall be my new star!
028	And I must have {color[0400]}{[0001|1a00]}the\nchick center-stage{[0001|ffff]}{color[ffff]}!
029	Time for my junior associate\nassistant, {color[0400]}{[0001|1a00]} Stick Nodon{[0001|ffff]}{color[ffff]}!
030	Hellooo!
031	If I could just get a connection from my {color[0400]}{[0001|1a00]}X port\n{[0001|ffff]}{color[ffff]}to the {color[0400]}{[0001|1a00]} Stick Nodon{[0001|ffff]}{color[ffff]}, that would be lovely.
032	Then the {color[0400]}{[0001|1a00]}game screen would move{[0001|ffff]}{color[ffff]} in\naccordance with the movement of .
033	OK, connect the Stick Nodon, then.
034	And now let's check\nthe game screen.
035	Tilt {color[0400]}{[0001|1a00]}{[0001|ffff]}{color[ffff]} to the right.
036	Look how the screen slides\nto the right along with .
037	Hmm, but it only moves a bit.
038	We still can't get a good\nview of that chick.
039	Let's go back to the\nprogram screen.
039-01	Yes, that could have\ngone a tiiiny bit better...
040	It looks like however much you tilt ,\nthe Stick Nodon doesn't {color[0400]}{[0001|1a00]}output more\nthan 1.00{[0001|ffff]}{color[ffff]}...
041	So we can only move 1.00m!
042	I think the time has come for this\nepisode's guest star: {color[0400]}{[0001|1a00]}Map Nodon{[0001|ffff]}{color[ffff]}!\nThat's your cue, darling!
043	Did I hear my name?
044	I'm a {color[0400]}{[0001|1a00]}Map Nodon{[0001|ffff]}{color[ffff]}.
045	And what's this?
046	When I look at the Stick Nodon\nand Game-Screen Nodon...
047	Is it just me or is that a very\nodd connection between them?
048	Oh? It's just me?
050	The talent of the Map Nodon\nis to {color[0400]}{[0001|1a00]}convert a number input\ninto a different number{[0001|ffff]}{color[ffff]}.
052	Should we root around in\nthe Map Nodon's settings?
053	There are two separate\nsettings for the {color[0400]}{[0001|1a00]}Input Range\n{[0001|ffff]}{color[ffff]}and the {color[0400]}{[0001|1a00]}Output Range{[0001|ffff]}{color[ffff]}.
054	The{[0001|1a00]} Input Range\n{[0001|ffff]}is{[0001|1a00]} {[0001|ffff]}{color[0400]}{[0001|1a00]}0.00 to 1.00{[0001|ffff]}{color[ffff]}{[0001|1a00]}.{[0001|ffff]}
055	And the {[0001|1a00]}Output Range\n{[0001|ffff]}is {[0001|1a00]}{color[0400]}0.00 to 10.00{color[ffff]}{[0001|ffff]}.
056	So in this setup, an input between\n{[0001|1a00]}{color[0400]}0.00 and 1.00 will be converted into\na number between 0.00 and 10.00{color[ffff]}{[0001|ffff]}.
057	For example, inputting {color[0400]}{[0001|1a00]}1.00 {[0001|ffff]}{color[ffff]}will\ngive you an output of {color[0400]}{[0001|1a00]}10.00{[0001|ffff]}{color[ffff]}.\nIt was scaled up by a factor of 10.
058	And an input of {color[0400]}{[0001|1a00]}0.50 {[0001|ffff]}{color[ffff]}will\ngive you an output of {color[0400]}{[0001|1a00]}5.00{[0001|ffff]}{color[ffff]}.
059	And an input of {color[0400]}{[0001|1a00]}0.00 {[0001|ffff]}{color[ffff]}will\ngive you an output of{color[0400]}{[0001|1a00]} 0.00{[0001|ffff]}{color[ffff]}.
060	So, the {[0001|1a00]}{color[0400]}input{color[ffff]}{[0001|ffff]} is changed to scale according to\nboth the {[0001|1a00]}Input Range{[0001|ffff]} and {[0001|1a00]}Output Range{[0001|ffff]} that we\nset for the Nodon. Then, it's sent as {[0001|1a00]}{color[0400]}output{color[ffff]}{[0001|ffff]}.
06100	OK, let's close this screen.
062	Now select the connection\nbetween the Stick Nodon and\nthe Game-Screen Nodon.
063	Delete it.
064	Now connect the {color[0400]}{[0001|1a00]}Stick\nNodon{[0001|ffff]}{color[ffff]} to the {color[0400]}{[0001|1a00]}Map Nodon{[0001|ffff]}{color[ffff]}.\n
065	Connect the {color[0400]}{[0001|1a00]}Map Nodon{[0001|ffff]}{color[ffff]}'s output to\nthe {color[0400]}{[0001|1a00]}Game-Screen Nodon's X port{[0001|ffff]}{color[ffff]}.
066	So now when the Map Nodon\nreceives {[0001|1a00]}{color[0400]}output in the range of\n0.00 to 1.00 from the Stick Nodon{color[ffff]}{[0001|ffff]}...
067	it'll {[0001|1a00]}{color[0400]}scale it up to a number between\n0.00 and 10.00{color[ffff]}{[0001|ffff]}, and then send that\nright along to the Game-Screen Nodon.
068	Let's see how that changes up the\nmovement on the game screen.
069	Tilt {color[0400]}{[0001|1a00]}{[0001|ffff]}{color[ffff]} to the right.
070	Ooh, now it {color[0400]}{[0001|1a00]}moves even further than\nbefore{[0001|ffff]}{color[ffff]}, and you can see the chick too!
071	That's because the Stick Nodon's\noutput of {color[0400]}{[0001|1a00]}0.00 to 1.00{[0001|ffff]}{color[ffff]}...
072	gets converted by the {color[0400]}{[0001|1a00]}Map Nodon\n{[0001|ffff]}{color[ffff]}to {color[0400]}{[0001|1a00]}a larger output of 0.00 to 10.00{[0001|ffff]}{color[ffff]}.
073	Hmm... Try moving\nto the right again.
074	Let's see if we can bring\nthat into view too.
076	How marvelous! Don't you agree?\nThe chemistry of a Stick Nodon and\nMap Nodon is box-office gold, I tell you!
07600	You're doing great, darlings! Just a couple of\ntiny adjustments that we need to make to raise\nyour performance to the pinnacle of artistry.
07601	Here is the grand finale!\nAnd we change our cast!
07602	HELLO {[0201]} I AM\nCALLED {color[0400]}{[0001|1a00]}COUNTER NODON\n{[0001|ffff]}{color[ffff]}BECAUSE THAT IS MY NAME.
07603	I AM CONNECTED TO A {color[0400]}{[0001|1a00]}CONSTANT NODON{[0001|ffff]}{color[ffff]}.
077	And who have we here?\nCounter Nodon? Is that you?
078	And Constant Nodon too, connected\nup right beside Counter Nodon!
079	A three-way connection!\nOh my, it's getting complicated...
080	YOU CAN CALM DOWN, MAP NODON,\nBECAUSE I CAN ASSURE YOU THAT\nEVERYTHING IS WITHIN PARAMETERS.
081	With the Constant Nodon providing\ninput to the Counter Nodon...
081-01	Counter Nodon's number will increase\nat {[0001|1a00]}{color[0400]}a rate of 60 per second{color[ffff]}{[0001|ffff]}.
082	And then the Counter Nodon's output will\nreach {color[0400]}{[0001|1a00]}Map Nodon{[0001|ffff]}{color[ffff]} as input. Do you see?
083	Let's take a look in the\nMap Nodon's settings.
084	The {[0001|1a00]}Input Range{[0001|ffff]} is\nbetween{[0001|1a00]} {[0001|ffff]}{color[0400]}{[0001|1a00]}0.00 and 60.00{[0001|ffff]}{color[ffff]}.
084-01	We've seen the number {color[0400]}{[0001|1a00]}60.00{[0001|ffff]}{color[ffff]} before, haven't\nwe? That's the same number that the Counter\nNodon {color[0400]}{[0001|1a00]}counts in a second{[0001|ffff]}{color[ffff]}.
085	Ah, and now the {[0001|1a00]}Output Range{[0001|ffff]}\nis between {color[0400]}{[0001|1a00]}0.00 and 2.00{[0001|ffff]}{color[ffff]}.
086	These settings will convert an input\nof {color[0400]}{[0001|1a00]}60.00{[0001|ffff]}{color[ffff]} into an output of {color[0400]}{[0001|1a00]}2.00{[0001|ffff]}{color[ffff]}.
087	And an input of {color[0400]}{[0001|1a00]}30.00\n{[0001|ffff]}{color[ffff]}becomes an output of {color[0400]}{[0001|1a00]}1.00{[0001|ffff]}{color[ffff]}.
088	Before, the numbers were converted to be larger,\nbut this time the numbers are converted {color[0400]}{[0001|1a00]}smaller{[0001|ffff]}{color[ffff]}.\nSo they're scaled down this time.
088-01	Counter Nodon's number increases\nat a rate of {[0001|1a00]}{color[0400]}60.00 per second{color[ffff]}{[0001|ffff]}, and is\nsent to the Map Nodon as input.
088-02	Since 60.00 converts to 2.00, the number sent\nas output increases by {[0001|1a00]}{color[0400]}2.00 per second{color[ffff]}{[0001|ffff]}.
089	Close the settings now.
089-01	Connect the Map Nodon to the\nGame-Screen Nodon's {color[0400]}{[0001|1a00]}X port{[0001|ffff]}{color[ffff]}.
090	If the Game-Screen Nodon gets an\ninput {color[0400]}{[0001|1a00]}increasing by 2.00 per second{[0001|ffff]}{color[ffff]}...
091	what will happen to the game screen?
092	The game screen is {color[0400]}{[0001|1a00]}autoscrolling{[0001|ffff]}{color[ffff]}!
093	By using the Counter Nodon and\nMap Nodon to generate an input\n{color[0400]}{[0001|1a00]}increasing by 2.00 per second{[0001|ffff]}{color[ffff]}...
094	you can make the game screen scroll\nat a speed of {color[0400]}{[0001|1a00]}2.00 meters per second{[0001|ffff]}{color[ffff]}.
095	Oh, goodness! Someone's\nbeen very busy.
096	Let's go back to the program screen.
097	Splendid, you return!
098	What an award-winning performance! It would\nwring tears from the hardest-hearted Nodon!
099	Be sure to test autoscroll\nyourself, {[0201]}.
100	Thanks for coming to see us!
101	You were a great audience!
Guidebook_Shot.msbt
000	Hello, there.
002	There are {[0001|1a00]}{color[0400]}boxes{color[ffff]}{[0001|ffff]} being {[0001|1a00]}{color[0400]}launched\n{color[ffff]}{[0001|ffff]}from the center of the screen!
004	Ever wondered {[0001|1a00]}{color[0400]}how to launch objects{color[ffff]}{[0001|ffff]}?\nThen today's your lucky day!
005	Let's get started on\nthe {[0001|1a00]}{color[0400]}program screen{color[ffff]}{[0001|ffff]}.
007	Hmm? WAIT! IT'S {[0201]}?!
008	Do you want something?\nWell? DO YOU?!
009	You want to know {[0001|1a00]}{color[0400]}how to launch\nobjects{color[ffff]}{[0001|ffff]}? OH, IS THAT ALL?!
010	IT'S NOT A TRICK! I'll show\nyou, OK? Just because it's\nyou, {[0201]}.
011	Who, me? I'm a {[0001|1a00]}{color[0400]}Launch-Object\nNodon{color[ffff]}{[0001|ffff]}. WHY? WHO'S ASKING?
012	I've got the BEST job. Just plonk me\ndown anywhere, and from there I just\n{[0001|1a00]}{color[0400]}LAUNCH OBJEEEECTS{color[ffff]}{[0001|ffff]}! OH YEAH!
013	You can change {[0001|1a00]}{color[0400]}what I launch{color[ffff]}{[0001|ffff]} and {[0001|1a00]}{color[0400]}how\nI launch it{color[ffff]}{[0001|ffff]} in the settings screen. \nYOU KNOW YOU WANT TO TRY IT!
014	We're on it! Select the\n{[0001|1a00]}{color[0400]}Launch-Object Nodon{color[ffff]}{[0001|ffff]}.
015	Open up the settings.
016	This is where you can {[0001|1a00]}{color[0400]}change the\nshape of the launched object{color[ffff]}{[0001|ffff]}.
017	Let's test it out by\nchanging it to a {[0001|1a00]}{color[0400]}sphere{color[ffff]}{[0001|ffff]}.
018	OK, close the settings screen.
019	Let's take a peek at\nthe game screen.
021	And now we can dodge\na storm of {[0001|1a00]}{color[0400]}spheres{color[ffff]}{[0001|ffff]}!
023	So now we know how to change the\n{[0001|1a00]}{color[0400]}type of object being launched{color[ffff]}{[0001|ffff]} from\nthe Launch-Object Nodon's settings.
024	Now let's pop back to\nthe {[0001|1a00]}{color[0400]}program screen{color[ffff]}{[0001|ffff]}.
025	Did you see it?\nWell? DID YOU?
026	The {[0001|1a00]}{color[0400]}object that was launched\n{color[ffff]}{[0001|ffff]}was different! Wasn't it?!
027	What next? OH! Next\nlet's change...THE\nLAUNCH METHOD!
028	How about...the speed? If you up the {[0001|1a00]}{color[0400]}launch\nspeed{color[ffff]}{[0001|ffff]}, you can get a really dramatic launch!
029	Let's change it in the {[0001|1a00]}{color[0400]}Object-\nLaunch Nodon{color[ffff]}{[0001|ffff]}'s settings.
030	The {[0001|1a00]}{color[0400]}Launch Speed{color[ffff]}{[0001|ffff]} is\ncurrently 4.00.
031	Why not set it to {[0001|1a00]}{color[0400]}12.00{color[ffff]}{[0001|ffff]}?
032	Close the settings now.
033	And let's get back to\nthe game screen.
036	Gosh, they're being ejected\nwith so much force...
038	It looks like there are other things we can\ntinker with as well as the {[0001|1a00]}{color[0400]}launch speed{color[ffff]}{[0001|ffff]}.
039	Let's try them out on\nthe {[0001|1a00]}{color[0400]}program screen{color[ffff]}{[0001|ffff]}.
040	Open up the {[0001|1a00]}{color[0400]}Launch-Object\nNodon{color[ffff]}{[0001|ffff]}'s settings screen again.
041	Ooh, this is the {[0001|1a00]}{color[0400]}Launch Interval{color[ffff]}{[0001|ffff]} setting.
042	That's the {[0001|1a00]}{color[0400]}amount of time\nbetween one object being\nlaunched and the next{color[ffff]}{[0001|ffff]}.
101	It's at {[0001|1a00]}{color[0400]}1.00{color[ffff]}{[0001|ffff]} now, so the launch\ninterval is {[0001|1a00]}{color[0400]}one second{color[ffff]}{[0001|ffff]}.
043	I wonder what would\nhappen if we set it to {[0001|1a00]}{color[0400]}0.10{color[ffff]}{[0001|ffff]}?
044	Hee hee! Now the launch\ninterval should be {[0001|1a00]}{color[0400]}0.1 second{color[ffff]}{[0001|ffff]}.
045	Close the settings now.
046	I SAW THAT! You changed the launch\ninterval to {[0001|1a00]}{color[0400]}0.1 second{color[ffff]}{[0001|ffff]}, didn't you?!
047	That's going to be INTERESTING!\nI am VERY EXCITED to see what\nwill happen!
049	Let's get ready for the\nshow on the {[0001|1a00]}{color[0400]}game screen{color[ffff]}{[0001|ffff]}.
051	Oh my goodness!
052	That is impressive!
053	You can change the {[0001|1a00]}{color[0400]}speed{color[ffff]}{[0001|ffff]} and\n{[0001|1a00]}{color[0400]}launch interval {color[ffff]}{[0001|ffff]}settings pretty\nfreely to make your launches perfect.
055	Let's go back to the {[0001|1a00]}{color[0400]}program screen{color[ffff]}{[0001|ffff]}.
059	WELL? Did you like the projectiles?\nI WORKED REALLY HARD ON THEM.
060	Did you know you can change the {[0001|1a00]}{color[0400]}launch\ndirection{color[ffff]}{[0001|ffff]} in my settings too? DID YOU?
061	Let's get into those settings and try it.
062	Aha! The {[0001|1a00]}{color[0400]}Launch Direction{color[ffff]}{[0001|ffff]} setting...
063	Right now it's set to {[0001|1a00]}{color[0400]}X+{color[ffff]}{[0001|ffff]}.
064	{[0001|1a00]}{color[0400]}X+{color[ffff]}{[0001|ffff]} is {[0001|1a00]}{color[0400]}to the right{color[ffff]}{[0001|ffff]}, so that's\nthe direction the objects\nwill be launched in.
065	Let's change it to {color[0400]}{[0001|1a00]}Y+{[0001|ffff]}{color[ffff]}, to\nangle the launch {color[0400]}{[0001|1a00]}upward{[0001|ffff]}{color[ffff]}.
067	Close the settings screen.
068	Let's see how it looks!
069	And there we go. The spheres\nare being launched {color[0400]}{[0001|1a00]}upward{[0001|ffff]}{color[ffff]}.
070	If we can change the\n{color[0400]}{[0001|1a00]}launch direction{[0001|ffff]}{color[ffff]} like this...
071	we should be able to aim\nlaunches {[0001|1a00]}{color[0400]}up{color[ffff]}{[0001|ffff]}, {[0001|1a00]}{color[0400]}down{color[ffff]}{[0001|ffff]}, {[0001|1a00]}{color[0400]}forward{color[ffff]}{[0001|ffff]},\nor {[0001|1a00]}{color[0400]}backward{color[ffff]}{[0001|ffff]}. 
072	OK, let's go back to\nthe {[0001|1a00]}{color[0400]}program screen{color[ffff]}{[0001|ffff]}.
073	Did you like my firepower?\nPLEASE SAY YOU DID.
074	Now you know to use me when\nyou want to {[0001|1a00]}{color[0400]}launch objects{color[ffff]}{[0001|ffff]}!
075	And you can change the {[0001|1a00]}{color[0400]}shape of the\nobject{color[ffff]}{[0001|ffff]}, the {[0001|1a00]}{color[0400]}launch speed{color[ffff]}{[0001|ffff]}, and the\n{[0001|1a00]}{color[0400]}launch interval{color[ffff]}{[0001|ffff]} as well...
076	I can do your bespoke\nlaunchings! BESPOKE!
083	Wait, what's wrong? Why are\nyou making that face? WHY?
083-01	I know what you're thinking! {[0001|1a00]}{color[0400]}Can't you\nlaunch with a button command instead\nof automatically? {color[ffff]}{[0001|ffff]}That's it, isn't it?
083-02	You think I can't even do an easy little thing\nlike that? WELL I CAN! AND IT'S EASY!
083-03	Just ask a Button Nodon!
084	Well, let's call up a {[0001|1a00]}{color[0400]}Button\nNodon{color[ffff]}{[0001|ffff]} and do just that.
087	Hey, Launch-Object Nodon! Working hard or\nhardly working? No need to answer, I can tell\nby the ringing in my ears.
088	I always work hard...\nAnyway, connect us up!
089	Join the {[0001|1a00]}{color[0400]}Button Nodon's output port{color[ffff]}{[0001|ffff]}\nto the {[0001|1a00]}{color[0400]}Launch-Object Nodon's input port{color[ffff]}{[0001|ffff]}.
090	OK! Just press {color[0400]}{[0001|1a00]}{[0001|ffff]}{color[ffff]} to give the\n{[0001|1a00]}{color[0400]}signal {color[ffff]}{[0001|ffff]}to {[0001|1a00]}{color[0400]}Launch-Object Nodon{color[ffff]}{[0001|ffff]}.
091	Let's test it out on the {[0001|1a00]}{color[0400]}game screen{color[ffff]}{[0001|ffff]}.
092	Try pressing {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]}.
093	And with one push of a button,\nour launch is a GO!
093-01	So now you know how to combine a\nButton Nodon and a Launch-Object Nodon\nto {[0001|1a00]}{color[0400]}launch objects with the push of a button{color[ffff]}{[0001|ffff]}.
094	Pressing the button repeatedly will\ngive you {[0001|1a00]}{color[0400]}repeated launches{color[ffff]}{[0001|ffff]}, but...
095	it won't launch at a faster rate than\nthe {[0001|1a00]}{color[0400]}launch interval{color[ffff]}{[0001|ffff]}, so be aware.
096	Let's go back to the {[0001|1a00]}{color[0400]}program screen{color[ffff]}{[0001|ffff]}.
097	That was some nice\nbutton-pressing!
098	Do you believe me now? Did you\nsee how easily I managed it?\nWERE YOU ENTERTAINED?
098-01	Anyway, I hope you\nunderstand me better now.
099	Which is to say that FROM THIS\nDAY FORTH you and I are FRIENDS!\nFRIENDS, DO YOU HEAR ME?
100	Call on me whenever you need\nanything launched! I'm free any time!
Guidebook_StickAndHuman.msbt
000	Hello!
001	This time there's a {[0001|1a00]}{color[0400]}person\n{color[ffff]}{[0001|ffff]}on the game screen.
002	Move them {[0001|1a00]}{color[0400]}left and right{color[ffff]}{[0001|ffff]} with {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]}.
003	Next, let's look into how to {[0001|1a00]}{color[0400]}program a\nperson to move using the control stick{color[ffff]}{[0001|ffff]}.
004	OK, let's start over at the program screen.
005	Hi, {[0201]}.
006	Hello peeps! How are things?
007	Oh, I get it. You want to learn how to {[0001|1a00]}{color[0400]}make\npeople move with control sticks{color[ffff]}{[0001|ffff]}!
008	Well, today's your lucky\nday! I can show you.
009	Let me tell you all about {[0001|1a00]}{color[0400]}Stick Nodon{color[ffff]}{[0001|ffff]}. I'm an\nexpert on Stick Nodon, because I am one.\nBoing!
010	You might have guessed from my\nname that I take input from the\n{[0001|1a00]}{color[0400]}Nintendo Switch control sticks{color[ffff]}{[0001|ffff]}.
011	And any Nodon {[0001|1a00]}{color[0400]}connected{color[ffff]}{[0001|ffff]} to me\ngets the {[0001|1a00]}{color[0400]}control stick movement\n{color[ffff]}{[0001|ffff]}information transmitted to them.
012	That means me! I get it!
013	So right now I'm sending{[0001|1a00]}{color[0400]} left and\nright movement {color[ffff]}{[0001|ffff]}information from {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]}.\nSo if {[0001|1a00]}{color[0400]} {color[ffff]}{[0001|ffff]}is tilted left or right, I pass it on.
014	I'm only getting the {[0001|1a00]}{color[0400]}left and right {color[ffff]}{[0001|ffff]}movement\nfrom {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]} though. The up and down movements\naren't coming through.
015	But that's a matter of choice! If you wanted, I\ncould alternatively send {[0001|1a00]}{color[0400]}up and down{color[ffff]}{[0001|ffff]} data from\n{[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]} as well.
016	You can change up {[0001|1a00]}{color[0400]}which\ncontrol stick {color[ffff]}{[0001|ffff]}and {[0001|1a00]}{color[0400]}which directions\n{color[ffff]}{[0001|ffff]}I send on in my {[0001|1a00]}{color[0400]}settings screen{color[ffff]}{[0001|ffff]}.
017	OK, select the {[0001|1a00]}{color[0400]}Stick Nodon{color[ffff]}{[0001|ffff]}.
018	Now open the\n{[0001|1a00]}{color[0400]}settings screen{color[ffff]}{[0001|ffff]}.
019	Ah, you see? You can select {[0001|1a00]}{color[0400]} or \n{color[ffff]}{[0001|ffff]}in that {[0001|1a00]}Which Stick? {[0001|ffff]}setting.
020	And you can use this {[0001|1a00]}Direction{[0001|ffff]} setting to\nselect the {[0001|1a00]}{color[0400]}control stick direction{color[ffff]}{[0001|ffff]} to transmit.
021	Let's try changing the {[0001|1a00]}{color[0400]}Which\nStick? {color[ffff]}{[0001|ffff]}setting to {[0001|1a00]}{color[0400]}Right Stick{color[ffff]}{[0001|ffff]}.
022	Close the settings screen.
023	Shall we check what's changed\non the game screen?
024	Try tilting {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]}.
025	Now the person won't move in\nresponse to , but to {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]}, you see?
026	So now you know how you can\n{[0001|1a00]}{color[0400]}configure the Stick Nodon's\nsettings to change the controls{color[ffff]}{[0001|ffff]}.
027	So, without further ado, let's\ngo to the program screen.
028	What did you think?
029	Did you notice that you had to\nuse {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]} to move the person?
030	Hey, can I ask\nyou a question?
031	Yeah, go ahead.
032	So what happens if Stick Nodon\nwere to transmit an {[0001|1a00]}{color[0400]}up and down\n{color[ffff]}{[0001|ffff]}direction instead of left and right?
033	I'm kind of curious!
034	Oh... Huh...
035	We can always test it and\nfind out. It's basic science!
035000	Sounds good. Select\nthe Stick Nodon.
036	Open the settings\nscreen again.
037	Select {[0001|1a00]}{color[0400]}Up/Down{color[ffff]}{[0001|ffff]} in the\n{[0001|1a00]}{color[0400]}Direction{color[ffff]}{[0001|ffff]} setting.
038	Close the settings screen.
039	That's all done. Now I'll send the Person Nodon\nthe {[0001|1a00]}{color[0400]}up and down movement{color[ffff]}{[0001|ffff]} information from {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]}.
040	I wonder what'll happen?
041	Let's have a look on the game screen.
042	Try tilting {[0001|1a00]}{color[0400]} up and down{color[ffff]}{[0001|ffff]}.
043	Oh! Even though you're tilting \n{[0001|1a00]}{color[0400]}up and down{color[ffff]}{[0001|ffff]}, the person is moving\n{[0001|1a00]}{color[0400]}left and right{color[ffff]}{[0001|ffff]}!
044	What do you think of that?
045	Let's think about it back\non the program screen.
046	Pretty cool, eh?
047	You moved {[0001|1a00]}{color[0400]} up and down{color[ffff]}{[0001|ffff]}, but the\n{[0001|1a00]}{color[0400]}person moved left and right{color[ffff]}{[0001|ffff]}...right?
048	That's so weird! They moved left and right even\nthough you were moving them up and down?
049	Oh, wait, I think\nI understand!
050	The Stick Nodon's input is\ngoing into my {[0001|1a00]}{color[0400]}left/right port{color[ffff]}{[0001|ffff]}!
051	Exactly.
052	Right now, the control stick\nmovement is being sent to the\nPerson Nodon's {[0001|1a00]}{color[0400]}left/right port{color[ffff]}{[0001|ffff]}.
053	The Person Nodon's {[0001|1a00]}{color[0400]}left/right port\n{color[ffff]}{[0001|ffff]}is used to convert input into {[0001|1a00]}{color[0400]}the\nperson's left and right movement{color[ffff]}{[0001|ffff]}.
054	So really it doesn't matter\nwhich direction the Stick\nNodon is sending over.
055	As long as the Person Nodon's {[0001|1a00]}{color[0400]}left/right\nport {color[ffff]}{[0001|ffff]}is receiving it, it gets converted into\n{[0001|1a00]}{color[0400]}left and right movement{color[ffff]}{[0001|ffff]}.
056	Bingo!
057	So even if the {[0001|1a00]}{color[0400]}up/down{color[ffff]}{[0001|ffff]} setting\nis enabled, if the Stick Nodon is\nconnected to my {[0001|1a00]}{color[0400]}left/right port{color[ffff]}{[0001|ffff]}...
058	{[0001|1a00]}{color[0400]}moving the control stick up and down will\nmake the person move left and right{color[ffff]}{[0001|ffff]}!
059	Why not try connecting to my\n{[0001|1a00]}{color[0400]}forward/backward port{color[ffff]}{[0001|ffff]} instead\nof my left/right port?
060	Select that {[0001|1a00]}{color[0400]}connection{color[ffff]}{[0001|ffff]}.
061	{[0001|1a00]}{color[0400]}Delete{color[ffff]}{[0001|ffff]} it with this icon.
062	Now let's connect the {[0001|1a00]}{color[0400]}Stick\nNodon {color[ffff]}{[0001|ffff]}to the {[0001|1a00]}{color[0400]}Person Nodon's\nforward/backward port{color[ffff]}{[0001|ffff]}.
063	OK, let's check the game screen.
064	What happens if you tilt {[0001|1a00]}{color[0400]} up and down{color[ffff]}{[0001|ffff]} now?
065	The person moved {[0001|1a00]}{color[0400]}forward and backward{color[ffff]}{[0001|ffff]}!
066	So the Person Nodon's {[0001|1a00]}{color[0400]}forward/backward\nport {color[ffff]}{[0001|ffff]}makes the {[0001|1a00]}{color[0400]}person move forward\nand backward like this{color[ffff]}{[0001|ffff]}.
067	Let's go back to the program screen.
068	How was it?
069	Take my control stick settings...
070	and my left/right and forward/backward\nports, and connect them together...
071	and you can move a person\naround in any direction.
074	We make the best programming\nteam! Right, peeps?
075	And don't you forget it!
Guidebook_ThirdPersonCamera.msbt
002	Hello, {[0201]}.
003	Ooh, it looks like a {color[0400]}{[0001|1a00]}sumo\n{[0001|ffff]}{color[ffff]}match is about to begin!
004	But with the camera right above everything,\nyou don't get much atmosphere, do you?
005	We could fix it if we could\njust move the {color[0400]}{[0001|1a00]}camera{[0001|ffff]}{color[ffff]}.
007	I'm sure we can get that camera\nmoving from the program screen.
008	Oh, {[0201]}!\nYou're looking radiant as ever, darling!
009	What's that? You want to\nimprove the {color[0400]}{[0001|1a00]}camera{[0001|ffff]}{color[ffff]} work?
010	Well, I too am a camera.\nSort of. Let me try to help...
011	Is what I'd LOVE to be able to say,\nbut honestly that kind of dynamic angle\nstuff isn't my forte. Not at all, darling.
014	I'm afraid all I'm good for is {[0001|1a00]}{color[0400]}displaying\nthe things that I surround on the screen{color[ffff]}{[0001|ffff]}.
019	But no matter! Instead I shall introduce\nyou to a camera colleague of mine!
020	That colleague's name?\n{[0001|1a00]}{color[0400]}Camera Nodon{color[ffff]}{[0001|ffff]}!
026	Camera Nodon! Would you be\na dove and lend us a hand?
027	Yeah, leave it to me.
028	I'm a {color[0400]}{[0001|1a00]}Camera Nodon{[0001|ffff]}{color[ffff]}.
087	You can change the atmosphere\nof a game screen a lot depending \non your camera angle.
091	Getting the best angle and position from which\nto capture my subject, that's my job. Got it?
091-01	The Camera Nodon is different\nthan the Game-Screen Nodon.
091-02	The game screen is captured from the\nCamera Nodon's {[0001|1a00]}{color[0400]}position{color[ffff]}{[0001|ffff]}, with the\nCamera Nodon's {[0001|1a00]}{color[0400]}angle{color[ffff]}{[0001|ffff]}.
091-03	So the Camera Nodon's position\nand angle are very important!
029	Let's watch the Camera Nodon\nat work to get a better idea.
030	Let's have a look. The subject's\na sumo match, right?
031	Hmm, we want\nsomething intense.
032	First let's come in {[0001|1a00]}{color[0400]}face-on{color[ffff]}{[0001|ffff]}\non the wrestling ring.
033	OK, let's move the Camera Nodon\nso it faces the wrestling ring.
034	Yeah, that's good.
035	When you change the camera angle,\nalways check it on the game screen.
036	That's what the pros do!\nLet's go to the game screen.
038	Changing the camera angle means that now\nwe can see the {[0001|1a00]}{color[0400]}wrestling ring from the front{color[ffff]}{[0001|ffff]}.
039	We have a better view of the\nwrestlers, but I can't help thinking\nwe could punch it up a bit more.
040	Let's go back to the program\nscreen and tinker a bit.
041	Punch it up? We can get in a smidgen\ncloser. That would make them bigger.
042	Want to give that a try?
043	Move the Camera Nodon.
088	How's this?
044	Let's check the game screen.
045	Oh, that's a powerful shot!
046	So bringing the camera in {color[0400]}{[0001|1a00]}close{[0001|ffff]}{color[ffff]} makes\nthe things on screen {color[0400]}{[0001|1a00]}bigger{[0001|ffff]}{color[ffff]}, eh?\nOr they look bigger, at least.
047	I think this is a good distance between\nthe camera and its subject, don't you?
048	Shall we try out some\ndifferent angles, though?
049	Let's head back to\nthe program screen.
050	Right, got it. How about we take a look\nat a sumo wrestler from {[0001|1a00]}{color[0400]}behind{color[ffff]}{[0001|ffff]}?
051	Move the Camera Nodon behind\none of the sumo wrestlers.
052	Got the camera position just right?
053	Great. Now {[0001|1a00]}{color[0400]}point the\ncamera in the right direction{color[ffff]}{[0001|ffff]}.
054	A tip from an old hand: remember\nto point the camera at whatever you\nwant to film. It's easy!
055	OK, aim the Camera Nodon\nat the sumo wrestler.
056	There, how's that?
057	Let's give it a look\non the game screen.
058	Now we have a diagonal angle\non the sumo wrestler from behind.
060	So now we know how to change\nthe Camera Nodon's position\nand angle for effect.
061	Hmm, but now we can't see the\nsumo wrestler's classic topknot!
062	We can't have that. Let's go back\nto the program screen and fix this.
063	Yeah, I see what you mean.\nA sumo wrestler's topknot\nis pretty important.
064	You might want to try {color[0400]}{[0001|1a00]}raising\n{[0001|ffff]}{color[ffff]}the camera a tad. See if that\nfixes it.
065	I think this will all be easier\nif we can get a {color[0400]}{[0001|1a00]}side view{[0001|ffff]}{color[ffff]}.
066	Change the {color[0400]}{[0001|1a00]}view{[0001|ffff]}{color[ffff]}.
068	Move the Camera\nNodon {color[0400]}{[0001|1a00]}higher{[0001|ffff]}{color[ffff]}.
069	And adjust the camera\n{color[0400]}{[0001|1a00]}direction {[0001|ffff]}{color[ffff]}while you're there.
070	An angle of about {[0001|1a00]}{color[0400]}30 degrees\ndownward{color[ffff]}{[0001|ffff]} should do it.
070-01	You can set the downward camera angle by\nadjusting the {[0001|1a00]}{color[0400]}X-Axis Rotation{color[ffff]}{[0001|ffff]} in the settings.
072	Open the settings.
073	And set the {[0001|1a00]}X-Axis Rotation{[0001|ffff]} to {[0001|1a00]}{color[0400]}30.00°{color[ffff]}{[0001|ffff]}.
074	Close the settings again.
075	OK! Rolling!
076	Let's see how it looks now.
077	Now that's an angle\nfull of excitement!
079	Now that we're {[0001|1a00]}{color[0400]}looking down from behind{color[ffff]}{[0001|ffff]},\nwe've got a great view of that topknot.
080	Let's get back to the program screen.
081	Not a bad job, if I\ndo say so myself.
083	Using a Camera Nodon gives you\na lot of freedom with your angles.
084	If you want to get the best out of your screen,\nalways keep in mind camera {[0001|1a00]}{color[0400]}placement\n{color[ffff]}{[0001|ffff]}and {[0001|1a00]}{color[0400]}angle{color[ffff]}{[0001|ffff]}. And do some experimenting!
085	And always check your changes\non the game screen. That's how\nthe greats do it.
085-01	Remember that, OK?
086	Can we start the match now?
092	Fight! Fight! Fight!
Guidebook_UFO.msbt
000	Hello!
001	What's that floating thing?
002	Goodness, a {[0001|1a00]}{color[0400]}UFO{color[ffff]}{[0001|ffff]}!
003	See if you can move it\nby tilting {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]} left and right.
103	It glides so mysteriously!
004	How about a little {[0001|1a00]}{color[0400]}UFO{color[ffff]}{[0001|ffff]} study?\nSome extraterrestrial investigation?
005	Let's go to the program screen.
006	Greetings, {[0201]}!\nI've been waiting for you!
009	I thought perhaps you wanted\nto know more about me and\nshare in my cosmic secrets!
010	You have really good timing!
011	OK, so, let me tell\nyou all about {[0001|1a00]}{color[0400]}UFOs{color[ffff]}{[0001|ffff]}.
012	We UFOs like to spend our time\nfloating around freely in the sky.\nThat's kind of our thing.
013	So you know how when you put\n{[0001|1a00]}{color[0400]}people and objects{color[ffff]}{[0001|ffff]} in the sky,\nthey just kind of {[0001|1a00]}{color[0400]}fall to the ground{color[ffff]}{[0001|ffff]}?
014	Well, UFOs are different! We\ndon't drop. We {[0001|1a00]}{color[0400]}float in midair{color[ffff]}{[0001|ffff]}!
014-01	We're all like swoooooosh\nand wheeeeee!
028	Let me see... What else?
029	Oh, yeah! You can make me flit and\nfloat {[0001|1a00]}{color[0400]}left and right{color[ffff]}{[0001|ffff]} by tilting {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]}.
030	That's because I'm connected\nto a {[0001|1a00]}{color[0400]}Stick Nodon{color[ffff]}{[0001|ffff]}!
031	Hello!
032	You see that the {[0001|1a00]}{color[0400]}UFO Nodon\n{color[ffff]}{[0001|ffff]}has {[0001|1a00]}{color[0400]}three input ports{color[ffff]}{[0001|ffff]}.
033	From the top they're {[0001|1a00]}{color[0400]}forward/backward{color[ffff]}{[0001|ffff]},\n{[0001|1a00]}{color[0400]}left/right{color[ffff]}{[0001|ffff]}, and {[0001|1a00]}{color[0400]}up/down{color[ffff]}{[0001|ffff]} ports.
034	Right now {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]} is sending {[0001|1a00]}{color[0400]}left and\nright movement{color[ffff]}{[0001|ffff]} information\nto the {[0001|1a00]}{color[0400]}left/right port{color[ffff]}{[0001|ffff]}.
035	So if you tilt {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]}, the {[0001|1a00]}{color[0400]}UFO\n{color[ffff]}{[0001|ffff]}will move {[0001|1a00]}{color[0400]}left and right{color[ffff]}{[0001|ffff]}.
036	That's right!
037	But you want to be able to move\nthe UFO {[0001|1a00]}{color[0400]}up and down{color[ffff]}{[0001|ffff]} as well as\n{[0001|1a00]}{color[0400]}left and right{color[ffff]}{[0001|ffff]}...right, {[0201]}?
038	Call up a {[0001|1a00]}{color[0400]}Stick Nodon{color[ffff]}{[0001|ffff]} to transmit\n{[0001|1a00]}{color[0400]}up and down movement{color[ffff]}{[0001|ffff]}!
039	Connect it to the UFO Nodon's {[0001|1a00]}{color[0400]}up/down\nport{color[ffff]}{[0001|ffff]}, and you'll be able to move it.
040	All right, let's bring out\nan {[0001|1a00]}{color[0400]}up/down Stick Nodon{color[ffff]}{[0001|ffff]}!
045-01	If you want to transmit signals when \nmoves up or down, I'm your Stick Nodon!
046	Connect the Stick Nodon to\nthe UFO Nodon's {[0001|1a00]}{color[0400]}up/down port{color[ffff]}{[0001|ffff]}.
047	So now, as well as {[0001|1a00]}{color[0400]}left and\nright {color[ffff]}{[0001|ffff]}movement from {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]}...
048	I'll transmit {[0001|1a00]}{color[0400]}up/down\n{color[ffff]}{[0001|ffff]}movement data too!
049	Let's check it out on the game screen.
050	Tilt {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]} around and see what happens.
051	Now it can move {[0001|1a00]}{color[0400]}up, down, left, and right{color[ffff]}{[0001|ffff]}!
052	So when you connect up the {[0001|1a00]}{color[0400]}up/down port{color[ffff]}{[0001|ffff]},\nthe UFO can move up and down like this.
054	Let's go back to the program screen.
055	Easy, right? OK, what's next?
056	Oh, let's try moving in different directions!
057	Switch the destination of the {[0001|1a00]}{color[0400]}up/down\ncontrol stick movement{color[ffff]}{[0001|ffff]} from my up/down\nport to my {[0001|1a00]}{color[0400]}forward/backward{color[ffff]}{[0001|ffff]} port.
058	Select the {[0001|1a00]}{color[0400]}up/down port{color[ffff]}{[0001|ffff]}'s {[0001|1a00]}{color[0400]}connection{color[ffff]}{[0001|ffff]}.
059	We won't be needing that.\nGo ahead and delete it.
060	Instead, make another connection to the\nUFO Nodon's {[0001|1a00]}{color[0400]}forward/backward port{color[ffff]}{[0001|ffff]}.
061	So, what kind of movement\nwill we see now?
062	Tilt {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]} and let's see!
063	Now it can move {[0001|1a00]}{color[0400]}left, right,\nforward, and backward{color[ffff]}{[0001|ffff]}!
064	So, you can program a UFO to go along any\nof the {[0001|1a00]}{color[0400]}three dimensions{color[ffff]}{[0001|ffff]}: forward/backward,\nleft/right, and up/down.
065	Make good use of those direction ports\nto fit the game you want to make.
066	Let's get back to the program screen.
067	Oh, yeah, {[0201]}.
068	How fast do you want\nthe UFO to move?
069	Zoom zoom {[0001|1a00]}{color[0400]}super fast{color[ffff]}{[0001|ffff]}? Or a\ndoot-doot-doot {[0001|1a00]}{color[0400]}leisurely flutter{color[ffff]}{[0001|ffff]}?
070	I can do pretty much any speed!
071	Did you know you can {[0001|1a00]}{color[0400]}change the\nspeed{color[ffff]}{[0001|ffff]} in my settings? Now you do!
072	Open the {[0001|1a00]}{color[0400]}UFO Nodon{color[ffff]}{[0001|ffff]}'s settings.
073	You can change {[0001|1a00]}{color[0400]}the speed of horizontal\nmovements{color[ffff]}{[0001|ffff]} with this {[0001|1a00]}{color[0400]}Horizontal Speed{color[ffff]}{[0001|ffff]} setting.
074	And you can change the {[0001|1a00]}{color[0400]}up and down movement\nspeed {color[ffff]}{[0001|ffff]}from the {[0001|1a00]}{color[0400]}Vertical Speed{color[ffff]}{[0001|ffff]} setting.
075	Let's change the {color[0400]}{[0001|1a00]}Horizontal Speed {[0001|ffff]}{color[ffff]}to {color[0400]}{[0001|1a00]}2.00{[0001|ffff]}{color[ffff]}.
076	And close it up.
077	What kind of speed\nwill this give us?
078	Give that UFO a\nnudge and let's see.
079	That's quite a bit\nfaster than before!
080	The {[0001|1a00]}{color[0400]}left and right{color[ffff]}{[0001|ffff]} movement is faster, and\nso is the {[0001|1a00]}{color[0400]}forward and backward {color[ffff]}{[0001|ffff]}movement!
081	{[0001|1a00]}{color[0400]}Horizontal speed{color[ffff]}{[0001|ffff]} affects not only {[0001|1a00]}{color[0400]}left and right{color[ffff]}{[0001|ffff]},\nbut {[0001|1a00]}{color[0400]}forward and backward movement{color[ffff]}{[0001|ffff]} too. Forward\nand backward are horizontal too, you see!
082	When you've had a good zoom around,\nlet's head back to the program screen.
083	Did you enjoy changing\nthe {[0001|1a00]}{color[0400]}horizontal speed{color[ffff]}{[0001|ffff]}?
084	Then I have a suggestion! Try\nchanging the {[0001|1a00]}{color[0400]}vertical speed{color[ffff]}{[0001|ffff]} too!\nBeep boop zoooooom!
085	Let's try making it {[0001|1a00]}{color[0400]}slower{color[ffff]}{[0001|ffff]} this time.
086	Set the {color[0400]}{[0001|1a00]}Vertical Speed{[0001|ffff]}{color[ffff]} to {color[0400]}{[0001|1a00]}0.30{[0001|ffff]}{color[ffff]}.
087	And close the\nsettings again.
088	Let's set the UFO to move up and\ndown again instead of back and forth.
089	Select the {[0001|1a00]}{color[0400]}connection{color[ffff]}{[0001|ffff]} leading\nto the {[0001|1a00]}{color[0400]}forward/backward port{color[ffff]}{[0001|ffff]}.
090	And delete it!
091	Now link it to the\n{[0001|1a00]}{color[0400]}up/down port{color[ffff]}{[0001|ffff]} instead.
092	So now we should be able to move\nit {[0001|1a00]}{color[0400]}up, down, left, and right{color[ffff]}{[0001|ffff]} again.
093	How will it move now?
094	Try moving the UFO\n{[0001|1a00]}{color[0400]}up and down{color[ffff]}{[0001|ffff]} with {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]}.
095	Now that the {[0001|1a00]}{color[0400]}vertical speed{color[ffff]}{[0001|ffff]} has\nbeen reduced, it moves more\n{[0001|1a00]}{color[0400]}slowly up and down{color[ffff]}{[0001|ffff]}.
097	So now we know how to play around with the\nsettings to really customize the UFO's speed.
098	Let's go back to the program screen.
099	You're back!
100	Promise you'll make\ntons of flitting, floating,\nwhooshing UFOs!
101	Make a game that's...out of this world!
102	See you around!
Guidebook_ViewChange.msbt
BU_001	Hello!
BU_002	Have you heard anything about\n{[0001|1a00]}{color[0400]}viewpoints{color[ffff]}{[0001|ffff]}, {[0201]}?
BU_003	The viewpoint is the {[0001|1a00]}{color[0400]}angle{color[ffff]}{[0001|ffff]} from\nwhich you see the game space.
BU_003_01	Right now, the game screen's\nviewpoint is set to {[0001|1a00]}{color[0400]}side view{color[ffff]}{[0001|ffff]}.
BU_003_03	Here, we have an apple right in the\nmiddle, and the blue sky in the distance.
BU_003_04	This is a view where you're\n{[0001|1a00]}{color[0400]}looking at the game from the side{color[ffff]}{[0001|ffff]}.\nThe name says it all, really.
BU_003_05	But sometimes you want to make a game\nwhere you look {[0001|1a00]}{color[0400]}down from above{color[ffff]}{[0001|ffff]}, right?
BU_003_06	You can get that by {[0001|1a00]}{color[0400]}changing the viewpoint{color[ffff]}{[0001|ffff]}.
BU_004	{[0001|1a00]}{color[0400]}Changing the viewpoint{color[ffff]}{[0001|ffff]} changes\nthe way you view the game.
BU_005	I'll explain the basics\nusing this handy apple.
BU_015	Let's start on the program screen.
BU_016	Oh, hello there, {[0201]}!
BU_017	A bright red apple! Is\nthere anything sweeter?
BU_018	Such crisp roundness!\nSuch vivid color! Delightful.
BU_019	Anyway, there are two types of viewpoints.
BU_020	Right now, we're looking at\nthe game space from the side.\nWe call that {[0001|1a00]}{color[0400]}side view{color[ffff]}{[0001|ffff]}.
BU_021	There's another way you can\nlook at it though: from above.\nAlso known as {[0001|1a00]}{color[0400]}overhead view{color[ffff]}{[0001|ffff]}.
BU_022	You can switch between these\ntwo views on the program screen.
BU_023	It's easy!
BU_024	All you need to do is press this\n{[0001|1a00]}{color[0400]}viewpoint change icon{color[ffff]}{[0001|ffff]} here.
BU_025	Give it a try now.
BU_028	Now the view over on the game screen\nhas switched from a {[0001|1a00]}{color[0400]}side view{color[ffff]}{[0001|ffff]} to an\n{[0001|1a00]}{color[0400]}overhead view{color[ffff]}{[0001|ffff]}.
BU_030	Let's see how the game screen\nlooks from a bird's eye view!
BU_031	What a lovely leaf that apple has!
BU_036	So, this is an {[0001|1a00]}{color[0400]}overhead\nview {color[ffff]}{[0001|ffff]}of the game screen.
BU_037	Let's go back to the\nprogram screen for now.
BU_038	What a dear little green\nleaf! So succulent!
BU_039	You've discovered a whole\nnew side of the humble apple.
BU_041	Shall we change it back from an\n{[0001|1a00]}{color[0400]}overhead view{color[ffff]}{[0001|ffff]} to a {[0001|1a00]}{color[0400]}side view{color[ffff]}{[0001|ffff]}?
BU_042	Can you guess how to put the\nview back to how was before?
BU_043	Just press the {[0001|1a00]}{color[0400]}change\nviewpoint icon{color[ffff]}{[0001|ffff]}!
BU_046	Now it's changed back from an\noverhead view to a {[0001|1a00]}{color[0400]}side view{color[ffff]}{[0001|ffff]} again.
BU_048	Let's go back to the game screen and\nsee how everything looks from the side.
BU_049	Everything's back to the\nway it was before, see?
BU_052	So that's how you can {[0001|1a00]}{color[0400]}change the angle\nfrom which you view the game space{color[ffff]}{[0001|ffff]}.
BU_053	Our game space has three directions\nalso known as dimensions. And each\none has its own name.
BU_056	The left-to-right dimension\nis called the {[0001|1a00]}{color[0400]}X dimension{color[ffff]}{[0001|ffff]}.
BU_057	The down-to-up dimension\nis called the {[0001|1a00]}{color[0400]}Y dimension{color[ffff]}{[0001|ffff]}.
BU_058	The front-to-back dimension\nis called the {[0001|1a00]}{color[0400]}Z dimension{color[ffff]}{[0001|ffff]}.
BU_059	And what do we get when we put those\n{[0001|1a00]}{color[0400]}three dimensions{color[ffff]}{[0001|ffff]} together in a game?
BU_060	{[0001|1a00]}{color[0400]}3D{color[ffff]}{[0001|ffff]}! You have a three-dimensional space.
BU_061	How about we move a Nodon around on\nthe program screen and explore it a bit?
BU_062	So this is the program\nscreen viewed from the side.
BU_063	The {[0001|1a00]}{color[0400]}x-axis{color[ffff]}{[0001|ffff]}, which is {[0001|1a00]}{color[0400]}horizontal{color[ffff]}{[0001|ffff]}.
BU_064	And the {[0001|1a00]}{color[0400]}y-axis{color[ffff]}{[0001|ffff]}, which is vertical.
BU_065	Try moving the Fancy-Object Nodon up\non the program screen. Which is to say,\nalong the {[0001|1a00]}{color[0400]}y-axis{color[ffff]}{[0001|ffff]}.
BU_066	It doesn't matter where you move it\nalong the y-axis, the apple will continue\nto be as charming as ever. ♥
BU_067	So what happens on the game\nscreen when you move a Nodon\nalong the y-axis?
BU_068	There's only one way to find\nout! To the game screen!
BU_069	The apple's hovering above\nwhere it was before!
BU_070	So this is what happens when you\nmove a Nodon up the {[0001|1a00]}{color[0400]}y-axis{color[ffff]}{[0001|ffff]} on\nthe program screen.
BU_071	Its corresponding object will\nmove {[0001|1a00]}{color[0400]}upward{color[ffff]}{[0001|ffff]} as well.
BU_073	Let's get back to the program screen.
BU_074	Let's bring the Fancy-Object Nodon\nback to where it was before.
BU_075	A floating apple is all well and good,\nbut an apple firmly on the ground\nis the best kind.
BU_076	Now let's see what happens when we\nmove a Nodon from an {[0001|1a00]}{color[0400]}overhead view{color[ffff]}{[0001|ffff]}.
BU_077	Change the viewpoint.
BU_079	Let's go see the game screen from the top.
BU_080	Changing to an overhead view changes\nthe angle from which you're looking.
BU_081	The {[0001|1a00]}{color[0400]}left-to-right{color[ffff]}{[0001|ffff]} direction on the\ngame screen is the {[0001|1a00]}{color[0400]}X dimension{color[ffff]}{[0001|ffff]}.
BU_082	{[0001|1a00]}{color[0400]}Up and down{color[ffff]}{[0001|ffff]} on the\nscreen is the {[0001|1a00]}{color[0400]}Z dimension{color[ffff]}{[0001|ffff]}.
BU_083	Which is now {[0001|1a00]}{color[0400]}forward\nand backward{color[ffff]}{[0001|ffff]}, see?
BU_084	Let's go back to the program screen.
BU_085	So you saw now that the {[0001|1a00]}{color[0400]}axis directions{color[ffff]}{[0001|ffff]}\non the program screen changed when we\nchanged to {[0001|1a00]}{color[0400]}overhead view{color[ffff]}{[0001|ffff]}, right?
BU_086	The {[0001|1a00]}{color[0400]}x-axis{color[ffff]}{[0001|ffff]} stays the same...\n{[0001|1a00]}{color[0400]}Horizontal{color[ffff]}{[0001|ffff]}!
BU_087	But the vertical axis is now the {[0001|1a00]}{color[0400]}z-axis{color[ffff]}{[0001|ffff]}. \nIt used go in the backward and forward\ndirections, remember?
BU_088	So now, if we move the Fancy-Object Nodon\nup the program screen, we're actually\nmoving it along the {[0001|1a00]}{color[0400]}z-axis{color[ffff]}{[0001|ffff]}. Give it a try!
BU_089	An apple by any other\naxis remains as sweet!
BU_090	What do you think will happen on\nthe game screen when we move\nsomething along the z-axis?
BU_091	Let's go to the game\nscreen and find out.
BU_092	It's moved further toward\nthe background now.
BU_093	And now we know what happens\nwhen you move a Nodon along the\n{[0001|1a00]}{color[0400]}z-axis{color[ffff]}{[0001|ffff]} on the program screen.
BU_094	The corresponding object will move further back.
BU_096	Let's go back to the program screen.
BU_097	We just learned that, when you change\nthe viewpoint, the axes change on\nthe game screen too.
BU_098	They're different depending on whether you\nhave a {[0001|1a00]}{color[0400]}side view{color[ffff]}{[0001|ffff]} or an {[0001|1a00]}{color[0400]}overhead view{color[ffff]}{[0001|ffff]}.
BU_099	Do you remember the names\nof the {[0001|1a00]}{color[0400]}three dimensions{color[ffff]}{[0001|ffff]}?
BU_100	The {[0001|1a00]}{color[0400]}X dimension{color[ffff]}{[0001|ffff]}, the {[0001|1a00]}{color[0400]}Y dimension{color[ffff]}{[0001|ffff]},\nand the {[0001|1a00]}{color[0400]}Z dimension{color[ffff]}{[0001|ffff]}.
BU_101	They're quite important in\ngame programming, so be\nsure to remember them!
BU_102	Changing your angle of view can\nchange your whole view of the world.
BU_103	It's a good thing to try once in a while!
Guidebook_Warp.msbt
000	Hello, {[0201]}!
001	These two hoops...are {[0001|1a00]}{color[0400]}teleport gates{color[ffff]}{[0001|ffff]}!
003	Move the person into the\n{color[0400]}{[0001|1a00]}right-hand hoop{[0001|ffff]}{color[ffff]} using .
004	And they've teleported!
006	Enter the hoop on the right, and\nyou warp to the hoop on the left.
007	Now go through the {color[0400]}{[0001|1a00]}hoop on the left{[0001|ffff]}{color[ffff]}.
008	Hmm, looks like you can't\nteleport from left to right.
009	This is a {[0001|1a00]}{color[0400]}one-way {color[ffff]}{[0001|ffff]}teleport\nfrom right to left.
010	This time around, I'm going\nto teach you all about setups\nthat involve {[0001|1a00]}{color[0400]}teleporting{color[ffff]}{[0001|ffff]}.
011	So let's head over to the program\nscreen and have a look at what\nmakes the teleporting happen.
012	Hi, {[0201]}!
013	Did you see the person warp?!\nIt was like a magic trick!
014	Hello! I'm taking care of the right-hand hoop.
015	An iridescent wheel,\nglimmering with rainbows...
016	As though one is being flung\nthrough the arch of the rainbow itself! ♥
017	I am the hoop on the left.
018	We Fancy-Object Nodon were a little hard\nto see because we overlap other Nodon, so\nwe decided to slant at a jaunty angle for you.
019	Rather fetching, don't you think? ♥
020	Those fancy hoops are just the\nvisible markers of the place where\nyou can teleport.
021	The actual person-shifting is\ndone by another Nodon entirely.
022	I am {[0001|1a00]}{color[0400]}Teleport-Object-Entrance Nodon{color[ffff]}{[0001|ffff]}.
023	I perceive that you have come here to this\nplace on the strength of your curiosity.\nThere is something you wish to know, correct?
023-01	The deepest mysteries of our {color[0400]}{[0001|1a00]}powers{[0001|ffff]}{color[ffff]},\nperhaps. Yes...we shall teach you.
024	The nature of my own ability is to {color[0400]}{[0001|1a00]}send that\nwhich touches us into a subspace realm{[0001|ffff]}{color[ffff]}.
025	Greetings. I am {color[0400]}{[0001|1a00]}Teleport-\nObject-Exit Nodon{[0001|ffff]}{color[ffff]}.
026	My gift is to {color[0400]}{[0001|1a00]}retrieve objects from\nthe self-same subspace realm{[0001|ffff]}{color[ffff]}.
027	Our powers are at their most\npotent when used in tandem.
028	With our help, objects can {color[0400]}{[0001|1a00]}travel at\ngreat speeds{[0001|ffff]}{color[ffff]} through subspace.
029	This is what you call {color[0400]}{[0001|1a00]}teleporting{[0001|ffff]}{color[ffff]}.
031	Put a little more simply, this Nodon\nlets you warp objects between a\n{[0001|1a00]}{color[0400]}teleport entrance{color[ffff]}{[0001|ffff]} and {[0001|1a00]}{color[0400]}exit{color[ffff]}{[0001|ffff]}.
033	Shall we take a look at the {[0001|1a00]}{color[0400]}Teleport-\nObject-Entrance Nodon{color[ffff]}{[0001|ffff]}'s settings?
034	OK then, open\nthe settings.
035	Oh! You can specify the kinds of\nthings you want to be teleported\nusing the {color[0400]}{[0001|1a00]}Teleport What?{[0001|ffff]}{color[ffff]} setting.
036	You can see that\n{color[0400]}{[0001|1a00]}Person {[0001|ffff]}{color[ffff]}is enabled.
037	And look under {[0001|1a00]}Properties{[0001|ffff]}.\n{color[0400]}{[0001|1a00]}Visible{[0001|ffff]}{color[ffff]} is {color[0400]}{[0001|1a00]}disabled{[0001|ffff]}{color[ffff]}.
039	Let's {color[0400]}{[0001|1a00]}enable Visible{[0001|ffff]}{color[ffff]} for now.
040	Now close the settings.
041	Now let's get into the {color[0400]}{[0001|1a00]}Teleport-\nObject-Exit Nodon{[0001|ffff]}{color[ffff]}'s settings.
042	Select it.
043	Open the settings.
044	{color[0400]}{[0001|1a00]}Visible{[0001|ffff]}{color[ffff]} is {color[0400]}{[0001|1a00]}disabled{[0001|ffff]}{color[ffff]} under\n{[0001|1a00]}Properties{color[0400]} {color[ffff]}{[0001|ffff]}here as well.
045	Let's {color[0400]}{[0001|1a00]}enable Visible{[0001|ffff]}{color[ffff]}.
046	Now close the settings.
047	Let's go to the game screen and\nsee what it looks like when you\ncan watch the warping happen.
048	Look really closely into the hoops.\nCan you see the {[0001|1a00]}{color[0400]}white frames{color[ffff]}{[0001|ffff]}?
049	This white frame is the {[0001|1a00]}{color[0400]}teleport entrance{color[ffff]}{[0001|ffff]}.
050	Certain things that touch\nit get warped away.
051	This white frame is the {[0001|1a00]}{color[0400]}teleport exit{color[ffff]}{[0001|ffff]}.
052	So whatever teleports through\nthe entrance exits here.
053	Move the person to the entrance frame,\nand let's watch the magic happen!
054	They warp at the exact\nmoment they touch the\nframe.
055	So you see the real teleport entrance isn't\nthe hoop at all, but that white frame.
056	But having the hoop there makes it easier\nto know where to go if you want to teleport.
057	OK, let's get back to the program screen.
060	Hey, I have a\nquestion, actually.
061	What happens if you go through a teleport\nentrance when {color[0400]}{[0001|1a00]}there's no teleport exit{[0001|ffff]}{color[ffff]}?\nWhere do you go?!
062	An entrance, but no exit...\nA subspace dimension with\nno way out...
063	With no way out of the subspace realm,\nthe conclusion is obvious, is it not?
065	Natural and obvious indeed.\nWhy, such an unfortunate would\n{[0001|1a00]}{color[0400]}vanish from the game screen{color[ffff]}{[0001|ffff]}.
066	I'm not sure I get it, so let's\ndelete the {[0001|1a00]}{color[0400]}Teleport-Object-Exit\nNodon {color[ffff]}{[0001|ffff]}and just see what happens.
067	Select the Teleport-Object-Exit Nodon.
068	And bid them goodbye for now!
069	Hmm, select the Fancy-Object\nNodon for the exit hoop as well.
070	And delete!
071	I wonder what'll happen to the\nperson who gets transported into\nsubspace with no way out...
072	What's going to happen?! Ahhhh!
073	Let's go to the game\nscreen! For science!
074	OK, let's do this. Move the person\nto the teleport entrance.
075	And they've {color[0400]}{[0001|1a00]}vanished{[0001|ffff]}{color[ffff]}!
076	Use {[0001|1a00]}Retry{[0001|ffff]} if you\nwant to see it again.
077	So if there's no teleport exit, things just...\n{[0001|1a00]}{color[0400]}vanish when they touch the entrance{color[ffff]}{[0001|ffff]}...
078	Let's go back to the program screen.
079	Vanishment is one of the\npossible uses of my powers.
079-01	A shudder of fear is the seasoning\nthat adds spice to a game...
080	Sure. Anyway, now that we've seen it for\nourselves, let's bring back the Teleport-Object-\nExit Nodon and the Fancy-Object Nodon.
081	The teleport path is connected\nonce again to its exit.
082	Just as it was before.
083	To teleport, both an entrance and an\nexit are required, the two joined as one\nlike two cherries on the stem.
084	When an entrance and an exit are connected\nto the same pocket of subspace, then and\nonly then can the teleportation succeed.
085	An identifier is needed for an entrance\nand an exit to know that they are linked\nto one another.
086	Gaze into the settings and find the\n{[0001|1a00]}{color[0400]}Teleport ID{color[ffff]}{[0001|ffff]}. All shall become clear.
086-01	OK... Let me get my head around this. So the\nteleport entrance and exit need to have the\nsame {[0001|1a00]}{color[0400]}Teleport ID{color[ffff]}{[0001|ffff]}, or else they won't work.
087	Let's poke around in the {[0001|1a00]}{color[0400]}Teleport-\nObject-Exit Nodon{color[ffff]}{[0001|ffff]}'s settings.
088	Open them up!
089	Ah, here's the {color[0400]}{[0001|1a00]}Teleport ID{[0001|ffff]}{color[ffff]}.
091	An exit and an entrance are linked as long\nas their settings show the same {color[0400]}{[0001|1a00]}Teleport ID{[0001|ffff]}{color[ffff]}.
092	So the exit's {[0001|1a00]}Teleport ID{[0001|ffff]} is {color[0400]}{[0001|1a00]}A{[0001|ffff]}{color[ffff]}.
093	Once you've got that firmly in\nmind, close the settings again.
094	Let's have a look at the\nentrance's {[0001|1a00]}Teleport ID{[0001|ffff]}.
095	Select it.
096	And open the settings.
097	Ah, there, you see? The entrance's\n{[0001|1a00]}Teleport ID{[0001|ffff]} is set to {color[0400]}{[0001|1a00]}A{[0001|ffff]}{color[ffff]} as well.
098	Because these {[0001|1a00]}{color[0400]}Teleport IDs{color[ffff]}{[0001|ffff]} are the same,\nthe entrance and exit gates are {[0001|1a00]}{color[0400]}connected{color[ffff]}{[0001|ffff]}.\nThat's how we can determine what goes where.
099	We've seen all we need to see,\nso close the settings again.
101	That means that we can create an\nentirely new teleport path using\n{color[0400]}{[0001|1a00]}Teleport IDs{[0001|ffff]}{color[ffff]}! Let's try it.
102	I am an {color[0400]}{[0001|1a00]}entrance into subspace{[0001|ffff]}{color[ffff]}.
103	I am an {color[0400]}{[0001|1a00]}exit from subspace{[0001|ffff]}{color[ffff]}.
104	There are our teleporting Nodon.\nWe have both entrance and exit types.
105	And here are our Fancy-Object Nodon\nto give the gates some pizzazz.
109	We should check the {[0001|1a00]}{color[0400]}Teleport IDs{color[ffff]}{[0001|ffff]} to make\nsure they're all lined up and ready to teleport.
110	Let's start with the exit's {[0001|1a00]}{color[0400]}Teleport ID{color[ffff]}{[0001|ffff]}.
111	Open the settings.
112	The {[0001|1a00]}Teleport ID{[0001|ffff]}\nis set to {[0001|1a00]}{color[0400]}B{color[ffff]}{[0001|ffff]}!
113	Close the settings.
114	Now select the entrance.
115	Open up those settings.
116	And the {[0001|1a00]}Teleport ID{[0001|ffff]} is...\nOh, it's {color[0400]}{[0001|1a00]}A{[0001|ffff]}{color[ffff]}!
117	That means it's connected to the first\nteleport exit instead of the new one!
118	We'll fix that. Set the\nTeleport ID to {color[0400]}{[0001|1a00]}B{[0001|ffff]}{color[ffff]} instead.
119	What next? Well, we want to teleport\npeople, so we should set them in the\n{color[0400]}{[0001|1a00]}Teleport What?{[0001|ffff]}{color[ffff]} option.
120	Under {[0001|1a00]}{color[0400]}Teleport What?{color[ffff]}{[0001|ffff]}, {[0001|1a00]}{color[0400]}enable{color[ffff]}{[0001|ffff]} {[0001|1a00]}{color[0400]}Person{color[ffff]}{[0001|ffff]}.
121	Close this screen now.
122	And close the settings.
123	Our teleports should\nbe all set up now!
124	A new path has been forged through\nsubspace. A light has sparked into\nbeing at the crossing of the ways.
125	OK, let's have a look\nat the game screen.
126	On the right are the teleport entrances,\nand on the left are the teleport exits.
127	The top teleport entrance is\nthe one assigned to {[0001|1a00]}Teleport ID{[0001|ffff]} {[0001|1a00]}{color[0400]}B{color[ffff]}{[0001|ffff]}.\nTry heading through it!
128	The {[0001|1a00]}{color[0400]}B{color[ffff]}{[0001|ffff]} entrance is connected to the\nexit which is assigned to {[0001|1a00]}Teleport ID{[0001|ffff]} {[0001|1a00]}{color[0400]}B{color[ffff]}{[0001|ffff]}.
129	Next try going through the entrance\nassigned to {[0001|1a00]}Teleport ID{[0001|ffff]} {[0001|1a00]}{color[0400]}A{color[ffff]}{[0001|ffff]}.
130	The Teleport ID {[0001|1a00]}{color[0400]}A{color[ffff]}{[0001|ffff]} entrance is, naturally,\nconnected to the exit linked to Teleport ID {[0001|1a00]}{color[0400]}A{color[ffff]}{[0001|ffff]}.
131	So, as you can see, they're all linked\nby their Teleport IDs. Clever!
132	Let's go back to the\nprogram screen.
133	But why stop there? If you wish to\nmaster the skills, let us teach you\nmore advanced techniques.
134	Consider a simple teleport exit.\nWhat if I told you {color[0400]}{[0001|1a00]}it could lead from many\n{[0001|ffff]}{color[ffff]}teleport entrances, though it be but one?
135	Many entrances with the {[0001|1a00]}{color[0400]}same ID{color[ffff]}{[0001|ffff]} will\nall lead to the exit assigned to {[0001|1a00]}{color[0400]}that ID{color[ffff]}{[0001|ffff]}.
135-01	So you're saying that even if there's more than\none entrance with the same ID, they all transport\nthings to the exit with the same ID?
136	Exits must have {[0001|1a00]}{color[0400]}unique IDs{color[ffff]}{[0001|ffff]}.\nThis is the law. They may\nnot share IDs.
137	I see. So you can't have more\nthan one exit with the same ID.
138	Why not satisfy your curiosity and try\nto link two entrances to a single exit?
139	Well, why not? Select this\nTeleport-Object-Entrance Nodon.
140	Open the settings.
141	And change the Teleport ID to {color[0400]}{[0001|1a00]}B{[0001|ffff]}{color[ffff]}.
142	Close the settings.
143	The dimensions shift and warp...\nI am now connected to exit {[0001|1a00]}{color[0400]}B{color[ffff]}{[0001|ffff]}.
144	Let's see how it all looks on\nthe game screen, OK?
145	First try teleporting through the top entrance.
146	Now see what happens if you\ngo through the bottom entrance.
147	Ha! They both came out at the same exit!
148	The upper and lower entrances are\nboth set to {[0001|1a00]}Teleport ID{[0001|ffff]} {[0001|1a00]}{color[0400]}B{color[ffff]}{[0001|ffff]}, right?
149	So whichever {color[0400]}{[0001|1a00]}B{[0001|ffff]}{color[ffff]} entrance you go\nthrough, you come out at the same exit!
150	Let's get back to the program screen.
151	If we have been able to satisfy your curiosity\neven a little, then this brings us joy.
152	You are initiated in the secrets of\nhigh-speed travel through subspace.\nWhat mortals call teleportation.
153	Use this power to move objects in the\nblink of an eye, or wipe them from the\ngame screen entirely.
154	This power to cross dimensions\nwill surely aid you in your creative\nendeavors.
155	Journey between worlds with us!
155-01	We will meet again.
156	And, er...that's all we have on teleporting.
157	Whew! It really makes you think!
LessonCommon.msbt
Dialog_Finish_Body	Are you sure you want to finish here?
Dialog_Finish_Button1	Yes
Dialog_Finish_Button2	No
LessonName.msbt
00	Programming 101
01	Tag Showdown
02	On a Roll
03	Alien Blaster
04	Risky Run
05	Mystery Room
06	Thrill Racer
07	Super Person World
ChexkPoint00	Checkpoints - An Introduction
ChexkPoint01	Checkpoint 1
ChexkPoint02	Checkpoint 2
ChexkPoint03	Checkpoint 3
ChexkPoint04	Checkpoint 4
ChexkPoint05	Checkpoint 5
ChexkPoint06	Checkpoint 6
ChexkPoint07	Extra Checkpoint
Explain_00	Get hands-on in the Game Builder Garage,\nand learn about interactive lessons!
Explain_01	One-on-one tag action.\nMaster programming basics.
Explain_02	Rock and roll at full tilt!\nGet a new perspective on programming.
Explain_03	Destroy swarms of aliens in a space battle!\nAdd a little self-expression to the game!
Explain_04	Make side-scrolling action with no fuss!\nLearn to connect various objects!
Explain_05	A puzzling room...with hidden treasure.\nChallenge your mind in three dimensions.
Explain_06	Burn rubber in player vs. program racing.\nTake pole position as a programmer.
Explain_07	Finally, a fully-fledged 3D action game.\nUse your programming skills to the max.
CheckPoint_00	A mysterious checkpoint appeared...\nPrepare to enter...
CheckPoint_01	Test your skills at the checkpoint.\nDon't worry! You can do it!
CheckPoint_02	Test your skills at the checkpoint.\nHave no fear! You can do it!
CheckPoint_03	Test your skills at the checkpoint.\nOK! You can do it!
CheckPoint_04	Test your skills at the checkpoint.\nFocus! You can do it!
CheckPoint_05	Test your skills at the checkpoint.\nChin up! You can do it!
CheckPoint_06	Test your skills at the checkpoint.\nI believe in you! You can do it!
CheckPoint_07	Now that you've mastered all the lessons,\nwhy not try some extraspecial puzzles?
Lesson_2DAction_00.msbt
000000	Hey, welcome to Lesson 4!
000	All righty! You know, I really feel like we're\ncoming to a decisive point of these\ninteractive lessons!
001	The game we'll be creating\nthis time is called...
002	Risky Run!
003	It's an action game! You've got to overcome\nall sorts of obstacles to get to the goal.
004	I'm so excited! You're well on the way\nto mastering the art of programming!
005	OK, let's get down to some programming!
006	To the program screen!\nGo go go!
007	First we'll need a movable {color[0400]}{[0001|1a00]}person\n{[0001|ffff]}{color[ffff]}as our player character.
008	Let's call up a {color[0400]}{[0001|1a00]}Person Nodon{[0001|ffff]}{color[ffff]}.
009	Hi there, peeps! Great to be\nworking with you again!
010	Let's make our player small\nand stick them on the floor.
011	Will you please open the\nPerson Nodon's settings?
012	Open {color[0400]}{[0001|1a00]}Color{[0001|ffff]}{color[ffff]}.
013	And select {color[0400]}{[0001|1a00]}Light blue{[0001|ffff]}{color[ffff]}.
014	Next, could you set \n{color[0400]}{[0001|1a00]}Jump Strength{[0001|ffff]}{color[ffff]} to {color[0400]}{[0001|1a00]}0.50{[0001|ffff]}{color[ffff]}?
015	Now, in this game our player will\nbe moving to the right.
016	So please set {color[0400]}{[0001|1a00]}Y-Axis Rotation{[0001|ffff]}{color[ffff]} to {color[0400]}{[0001|1a00]}-90.00°\n{[0001|ffff]}{color[ffff]}to make the player face right.
017	And that's it for the settings.
018	Next, we want to be able to move\nthe player with the controller.
019	Let's call up a {color[0400]}{[0001|1a00]}Stick Nodon{[0001|ffff]}{color[ffff]} for {[0001|1a00]} Left/Right.{[0001|ffff]}
020	Boing! We're seeing each other a lot,\n{[0201]}!
021	Now just move the\nStick Nodon to the left.
022	And connect the Stick Nodon\nto the Person Nodon's {color[0400]}{[0001|1a00]}left/right port{[0001|ffff]}{color[ffff]}.
023	Now we'll need a {color[0400]}{[0001|1a00]}Button Nodon for {[0001|ffff]}{color[ffff]}.
024	Yo! Press that button as many times as\nyou need, buddy! Smash bang pow!
025	Shift the Button Nodon\nover to the left as well.
026	Now connect the Button Nodon\nto the Person Nodon's {color[0400]}{[0001|1a00]}jump port{[0001|ffff]}{color[ffff]}.
027	Now look what you can do\nwith the {[0001|1a00]}{color[0400]}person{color[ffff]}{[0001|ffff]}!
028	It can move {[0001|1a00]}{color[0400]}left and right{color[ffff]}{[0001|ffff]} with {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]}!
029	It {color[0400]}{[0001|1a00]}jumps {[0001|ffff]}{color[ffff]}when you press {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]}!
030	OK! Let's take a look at the game screen.
031	Try moving the player\ncharacter with {color[0400]}{[0001|1a00]}{[0001|ffff]}{color[ffff]} and {color[0400]}{[0001|1a00]}{[0001|ffff]}{color[ffff]}.
032	Great! Now we can\nmove it around.
033	I guess it's been a while since we used\na person as a player character. But I'm\nbetting you've got the hang of it by now.
034	So, in this game we'll\nmove across a {color[0400]}{[0001|1a00]}long\nstage {[0001|ffff]}{color[ffff]}to get to the goal.
035	If we want a long stage, we'll need the {[0001|1a00]}{color[0400]}game\nscreen to follow the player{color[ffff]}{[0001|ffff]} as they move.
036	You know what that means...\nTime for more programming!
037	First, let's call up our old friend\nthe {[0001|1a00]}{color[0400]}Game-Screen Nodon{color[ffff]}{[0001|ffff]}.
038	Well hello, {[0201]}!
039	OK, darling! Time for you to dazzle me\nwith your radiant programming!\nJust let it flow naturally, yes?
040	Let's make the game screen a little bigger.
041	Now we'll make it so the game\nscreen follows the player around.
042	How to do that, you ask?
043	By {color[0400]}{[0001|1a00]}connecting{[0001|ffff]}{color[ffff]} the Game-Screen\nNodon to the Person Nodon!
044	You're saying I get to do some full coverage\non the player? My pleasure, darling!
045	No matter where they go, my camera's\ngoing to stick to them like glue.
046	Now that's dedication!\nLet's see how this looks.
047	Try moving the player\nwith  and .
048	Now the game screen is\nfollowing the player!
049	This way you can play even\nlong stages with ease.
050	Now to create the level's environment.
051	First, call up the {[0001|1a00]}{color[0400]}World Nodon{color[ffff]}{[0001|ffff]} so we\ncan remove the floor we have now.
052	I can see the future clearly...\nYou shall endure a long trial\nto gain something irreplaceable.
053	Open up the World Nodon's settings.
054	Set the {color[0400]}{[0001|1a00]}World Shape{[0001|ffff]}{color[ffff]} to {color[0400]}{[0001|1a00]}None{[0001|ffff]}{color[ffff]}.
055	Now close the screen.
056	Now you'll need to call up a\n{[0001|1a00]}{color[0400]}box{color[ffff]}{[0001|ffff]} {color[0400]}{[0001|1a00]}Object Nodon{[0001|ffff]}{color[ffff]}.
057	Heya, bud! It's me again.\nObject Nodon.
058	Make the Object Nodon nice and wide.
059	Now open Object Nodon's settings.
060	We want to use this object as\na platform, so under {[0001|1a00]}{color[0400]}Properties{color[ffff]}{[0001|ffff]},\nenable only {color[0400]}{[0001|1a00]}Visible{[0001|ffff]}{color[ffff]} and {color[0400]}{[0001|1a00]}Solid{[0001|ffff]}{color[ffff]}.
061	Nice!
062	Let's take a peek at the game screen.
063	We made our first platform!
064	Next up, we'll be adding a\nwhole bunch of platforms.
065	To the program screen!
066	And with that...
067	You've cleared Step 1!
068a	Good work!
068c	Marvelous, darling!
068d	Yup. Looks great.
069	So how was your first step\nin making Risky Run?
070	Having the {[0001|1a00]}{color[0400]}game screen follow your character\n{color[ffff]}{[0001|ffff]}makes it feel like a real game, right?
071	Next time, we're going to program\nin some {[0001|1a00]}{color[0400]}enemy characters{color[ffff]}{[0001|ffff]}! Yikes!
072	See you in Step 2!
Lesson_2DAction_01.msbt
000	Ah, there you are!
001	Welcome to Step 2 of Risky Run.
002	Let's start by controlling\nthe person with  and .
003	Remember how we made the game\nscreen follow the person around?
004	In Step 2, we're going to place\nsome {color[0400]}{[0001|1a00]}aliens as enemy characters{[0001|ffff]}{color[ffff]}.
005	I bet you know where we're headed...\nThat's right! To the program screen!
006	Now call up a {[0001|1a00]}{color[0400]}Fancy-Object Nodon{color[ffff]}{[0001|ffff]},\nspecifically, the {[0001|1a00]}{color[0400]}Round Fancy Object\n{color[ffff]}{[0001|ffff]}type. Even more specifically, an {[0001|1a00]}{color[0400]}alien{color[ffff]}{[0001|ffff]}!
007	Oh! I feel as if I'm about to be\nsucked into the deep vortex of\na humongous eye.
008	And the glistening beauty of a\nnon-carbon-based body... This is\nsimply to die for! ♥
009	Erm... I guess beauty is in the eye (or eyes!)\nof the beholder... Anyway, can you put the\nFancy-Object Nodon above the platform?
010	Then open up the settings screen.
011	Under {[0001|1a00]}{color[0400]}Properties{color[ffff]}{[0001|ffff]}, {[0001|1a00]}{color[0400]}enable Visible{color[ffff]}{[0001|ffff]},\n{[0001|1a00]}{color[0400]}Solid{color[ffff]}{[0001|ffff]}, {[0001|1a00]}{color[0400]}Destructible{color[ffff]}{[0001|ffff]}, and {[0001|1a00]}{color[0400]}Destructive{color[ffff]}{[0001|ffff]}.
011000	OK!
012	We want the alien to be facing the player...
013	So let's rotate the alien around the\nvertical axis! Set {[0001|1a00]}{color[0400]}Y-Axis Rotation{color[ffff]}{[0001|ffff]} to {[0001|1a00]}{color[0400]}90.00°{color[ffff]}{[0001|ffff]}.
014	Close the settings screen.
014-01	And now let's add\na few more aliens.
015	Try {color[0400]}{[0001|1a00]}copying{[0001|ffff]}{color[ffff]} the Fancy-Object Nodon.
016	And place the copy next to the first one.
017	Two aliens! Looks like the\nstart of an alien invasion!
018	Next, open the Person Nodon's settings screen.
019	We want the player to break when\ntouched by an alien, so {[0001|1a00]}{color[0400]}enable\nDestructible{color[ffff]}{[0001|ffff]} under {[0001|1a00]}{color[0400]}Properties{color[ffff]}{[0001|ffff]}.
020	And you're done.
021	I think we'd better see what these\naliens are up to on the game screen...
022	Now, this will go against your instincts, but I want\nyou to walk right into the alien blocking your way.
023	And it broke, just like it's supposed to.
024	But don't you think something's missing?
025	That's right! When the player breaks,\nwe want an {color[0400]}{[0001|1a00]}automatic retry{[0001|ffff]}{color[ffff]}.
026	Let's add in our usual suspect\nto make that happen.
027	Go ahead and call up\nthe {color[0400]}{[0001|1a00]}Object-Break Nodon{[0001|ffff]}{color[ffff]}.
028	Well now... Same as usual, hon?\nWant me to check when\nsomething breaks?
028000	I can tell you about objects \nbreaking 'til the cows come home!
029	Move the Object-Break Nodon a little.
030	And open its settings screen.
031	Open up {color[0400]}{[0001|1a00]}Check What?{[0001|ffff]}{color[ffff]}
032	And {[0001|1a00]}{color[0400]}enable{color[ffff]}{[0001|ffff]} {color[0400]}{[0001|1a00]}Person{[0001|ffff]}{color[ffff]} only.
033	Now close this screen...
034	And then close the settings screen.
035	So you want me to check {color[0400]}{[0001|1a00]}when\nthe player breaks{[0001|ffff]}{color[ffff]}, huh, honey?
035-01	You just leave that to me.
036	Now you'll need to call\nup the {color[0400]}{[0001|1a00]}Timer Nodon{[0001|ffff]}{color[ffff]}.
037	Ugh... Do you have to call me\nup here for EVERY lesson?
037000	It would just really help me if you\ncould TRY to check my schedule\nbeforehand and stick to it.
038	Uh... Right... Anyway...\nLet's give our Timer\nNodon a little nudge.
039	Then you can connect the {color[0400]}{[0001|1a00]}Object-Break\nNodon {[0001|ffff]}{color[ffff]}to the {color[0400]}{[0001|1a00]}Timer Nodon{[0001|ffff]}{color[ffff]}.
040	And last but not least, we'll\ncall up the {color[0400]}{[0001|1a00]}Retry Nodon{[0001|ffff]}{color[ffff]}.
041	Oh, how I wish I could undo things...
042	What's the matter?
043	Earlier, I accidentally\ncalled the Object-Break\nNodon "Mom."
044	So embarrassing. I just\nwant to undo my mistake...
045	Aww, don't worry about it.
045-01	I'll watch over you if\nyou're feeling lost...
046	...
047	Anyway... Let's just move\nthe Retry Nodon.
048	Now connect it to the {color[0400]}{[0001|1a00]}Timer Nodon{[0001|ffff]}{color[ffff]}.
049	So now, {color[0400]}{[0001|1a00]}when the player breaks, you\nget to try again one second later{[0001|ffff]}{color[ffff]}.
050	Now things are running the\nway they're supposed to.
051	How does it look on the game screen?
052	Can you try bumping into an alien?
053	The retry works like a charm!
054	But I'm detecting one\ntiny little problem...
055	Could you try {color[0400]}{[0001|1a00]}falling off the platform{[0001|ffff]}{color[ffff]}?
056	Yeah. Nothing happens.
057	{color[0400]}{[0001|1a00]}Falling off the platform {[0001|ffff]}{color[ffff]}should\nresult in a retry too, ideally.
058	And you'll learn how to do that...\nin the next step!
059	That's it for now! Let's go back\nto the program screen.
060	You know what I'm going\nto say next, right?
061	Step 2 is done!
062-00	Great job! ♥
062-01	Congratulations, honey!
062-02	Another triumph...
062-03	Well done, well done.
063	In Step 3 we'll go through\n{color[0400]}{[0001|1a00]}how to trigger a retry when\nfalling off the stage{[0001|ffff]}{color[ffff]}.
064	There'll also be some new\nNodon to look forward to.
065	All right then, see you in the next step!
Lesson_2DAction_02.msbt
000	Hello hello!
001	Time to start Step 3\nof Lesson 4!
002	Last time we set up an alien\nas an {color[0400]}{[0001|1a00]}enemy character{[0001|ffff]}{color[ffff]}.
002-001	And we made it so the game\nautomatically {color[0400]}{[0001|1a00]}resets {[0001|ffff]}{color[ffff]}if the alien\ndestroys the player character.\n
003	And stay with me here but... Well,\ncould you try falling off the stage?
004	Yep. Nothing but an eternal plunge\ninto a bottomless abyss.
005	You just keep falling forever.
006	I guess we could rethink this. Call\nour game "Forever Fall" instead...
007	Nah. Let's fix it so that you get\na {color[0400]}{[0001|1a00]}retry{[0001|ffff]}{color[ffff]} if you {[0001|1a00]}{color[0400]}fall off the stage{color[ffff]}{[0001|ffff]}.
008	To the program screen!
009	Go go go!
009-01	We know the game gives you a retry\n{color[0400]}{[0001|1a00]}when the player is destroyed{[0001|ffff]}{color[ffff]}.
009-02	So we should make it so that\n{color[0400]}{[0001|1a00]}falling from the stage also\ndestroys the player{[0001|ffff]}{color[ffff]}.
010	But how do we trigger something\nwhen the player falls off the stage?
011	By checking the {[0001|1a00]}{color[0400]}player's location{color[ffff]}{[0001|ffff]}!
013	To be more precise, by using a Nodon\nthat monitors a thing's location.\nNamely, the {color[0400]}{[0001|1a00]}Location-Sensor Nodon{[0001|ffff]}{color[ffff]}.
014	Select {[0001|1a00]}Objects{[0001|ffff]} {[0001|0400]}{[0001|ffff]} {[0001|1a00]}Sensors{[0001|ffff]} {[0001|0400]}{[0001|ffff]} {[0001|1a00]}Location Sensor{[0001|ffff]}\nto call up the {[0001|1a00]}{color[0400]}Location-Sensor Nodon{color[ffff]}{[0001|ffff]}.
015	How do you do! I'm the\nLocation-Sensor Nodon!
016	You want me to keep an eye\nout for where the player is?
017	Of course! Just leave it to me.
018	Let's put the Location-Sensor\nNodon above the Person Nodon.
019	And open the Location-Sensor\nNodon's settings screen.
020	{[0001|1a00]}{color[0400]}Disable Visible{color[ffff]}{[0001|ffff]}, under {[0001|1a00]}{color[0400]}Properties{color[ffff]}{[0001|ffff]}.
021	Now close the screen.
022	Next we'll {color[0400]}{[0001|1a00]}connect{[0001|ffff]}{color[ffff]} the {color[0400]}{[0001|1a00]}Location-Sensor\nNodon {[0001|ffff]}{color[ffff]}to the {color[0400]}{[0001|1a00]}Person Nodon{[0001|ffff]}{color[ffff]}.
023	Now the Location-Sensor Nodon is\noutputting {color[0400]}{[0001|1a00]}the player's position{[0001|ffff]}{color[ffff]}.
024	Next, we'll make it so that we can\n{color[0400]}{[0001|1a00]}detect whether the player is above\nthe level's floor or not{[0001|ffff]}{color[ffff]}.
025	For that, we'll need the {color[0400]}{[0001|1a00]}Comparison Nodon{[0001|ffff]}{color[ffff]}.
026	Call up the {color[0400]}{[0001|1a00]}Comparison Nodon{[0001|ffff]}{color[ffff]}!\nYou'll want the {[0001|1a00]}{color[0400]}<{color[ffff]}{[0001|ffff]} {[0001|1a00]}{color[0400]}(less than){color[ffff]}{[0001|ffff]} type.
027	Huh? Did the player fall off the\nplatform yet? Hmmm? Did they?\nDid they? I need to know!
028	Drag the Comparison Nodon over to\nthe side of Location-Sensor Nodon...
029	First, connect the Location-Sensor\nNodon's {color[0400]}{[0001|1a00]}Y port{[0001|ffff]}{color[ffff]} to the Comparison\nNodon's {color[0400]}{[0001|1a00]}input 1 port{[0001|ffff]}{color[ffff]}.
030	Now, the {color[0400]}{[0001|1a00]}player's Y position{[0001|ffff]}{color[ffff]}, or {[0001|1a00]}{color[0400]}the height\nof the player's location{color[ffff]}{[0001|ffff]}, is an input for\nthe Comparison Nodon.
031	And to compare whether {color[0400]}{[0001|1a00]}the\nheight of the player's location\n{[0001|ffff]}{color[ffff]}is {color[0400]}{[0001|1a00]}lower than the stage{[0001|ffff]}{color[ffff]}...
032	we'll need the {color[0400]}{[0001|1a00]}Constant Nodon{[0001|ffff]}{color[ffff]}!
033	Constant Nodon reporting\nfor duty! And I'm feeling as\nunchangingly steadfast as ever!
033-01	So by comparing this Constant Nodon\nwith {[0001|1a00]}{color[0400]}the height of the player's location{color[ffff]}{[0001|ffff]}\nfrom earlier...
033-02	we can detect {color[0400]}{[0001|1a00]}if the player\nis below the floor{[0001|ffff]}{color[ffff]}!
034	Open the Constant\nNodon's settings screen.
035	To check whether the player's position is\nlower than the floor, we'll set a {color[0400]}{[0001|1a00]}number\nlower than the floor's position{[0001|ffff]}{color[ffff]}.
036	Set it to {color[0400]}{[0001|1a00]}-3.00{[0001|ffff]}{color[ffff]}.
037	Now we can leave the settings screen.
038	And we'll move the Constant Nodon.
039	Next, connect the Constant Nodon to\nthe Comparison Nodon's {color[0400]}{[0001|1a00]}input 2 port{[0001|ffff]}{color[ffff]}.
040	Now, {[0001|1a00]}{color[0400]}if the player falls off\nthe platform{color[ffff]}{[0001|ffff]}, their position\nwill definitely be below {color[0400]}{[0001|1a00]}-3.00{[0001|ffff]}{color[ffff]}.
041	The Comparison Nodon will detect\nthis and {[0001|1a00]}{color[0400]}send out a signal{color[ffff]}{[0001|ffff]}.
042	With that, our program can determine\n{color[0400]}{[0001|1a00]}when the player has fallen out of the level{[0001|ffff]}{color[ffff]}!
043	Using this, we'll want to make it so\nthat {color[0400]}{[0001|1a00]}the player is destroyed{[0001|ffff]}{color[ffff]} when they\nfall off the platform.
044	Now go to {[0001|1a00]}Objects{[0001|ffff]} {[0001|0400]}{[0001|ffff]} {[0001|1a00]}Launch/Destroy/Attract{[0001|ffff]} {[0001|0400]}\n{[0001|ffff]}{[0001|1a00]}Destroy Object{[0001|ffff]}, and select the {color[0400]}{[0001|1a00]}Destroy-Object\nNodon{[0001|ffff]}{color[ffff]}.
045	Well, well, well...\nWhat do we have here?
046	Looks like somebody wants\nsomething broken...
047	Don't worry, we've all been\nthere. You just leave that\nto little old me.
048	I live for this stuff. I'll destroy whatever\nyou want, just the way you want.
049	As you might have guessed,\nthe Destroy-Object Nodon\n{color[0400]}{[0001|1a00]}destroys anything it's touching{[0001|ffff]}{color[ffff]}.
050	Let's move it over a bit...
051	and open the settings screen.
052	Now {[0001|1a00]}{color[0400]}disable{color[ffff]}{[0001|ffff]} {color[0400]}{[0001|1a00]}Visible{[0001|ffff]}{color[ffff]} under {color[0400]}{[0001|1a00]}Properties{[0001|ffff]}{color[ffff]}.
053	Open up {color[0400]}{[0001|1a00]}Destroy What?{[0001|ffff]}{color[ffff]}
054	Here's where you can tell the\nDestroy-Object Nodon what to destroy.
055	We just want to destroy the player,\nwho is a person, so {[0001|1a00]}{color[0400]}enable{color[ffff]}{[0001|ffff]} {color[0400]}{[0001|1a00]}Person{[0001|ffff]}{color[ffff]} only.
056	Perfect!
057	Now close the settings screen.
058	Could you {color[0400]}{[0001|1a00]}connect{[0001|ffff]}{color[ffff]} the {color[0400]}{[0001|1a00]}Destroy-Object\nNodon{[0001|ffff]}{color[ffff]} to the {color[0400]}{[0001|1a00]}Person Nodon{[0001|ffff]}{color[ffff]}?
059	The Destroy-Object Nodon and\nPerson Nodon are now linked.
060	So {[0001|1a00]}{color[0400]}the player is constantly in contact\nwith the Destroy-Object Nodon{color[ffff]}.{[0001|ffff]}
061	This'll be fun!
067	To finish up, connect the\n{color[0400]}{[0001|1a00]}Comparison Nodon {[0001|ffff]}{color[ffff]}to the\n{color[0400]}{[0001|1a00]}Destroy-Object Nodon{[0001|ffff]}{color[ffff]}.
068	Great! This way {color[0400]}{[0001|1a00]}the player will be\ndestroyed {[0001|ffff]}{color[ffff]}whenever {color[0400]}{[0001|1a00]}the Comparison\nNodon sends an output signal{[0001|ffff]}{color[ffff]}.
069	In other words, if the player\nwere to suffer an unfortunate\nfall from the level...
070	I'll be only too happy to\ndo some breaking...\nIt'd be a kindness, really.
071	Though of course I do hope\nit won't come to that. Heh heh.
072	Wow... Uh, anyway...\nLet's see how that all\nlooks on the game screen.
073	Try falling off the level!
074	Falling from the level\ndestroys the player, and\nwe get an automatic retry!
075	Looks like we've got \nan action game going!
076	Let's go to the program screen.
077	You know what this means!
078	Start the fanfare! You've\ncleared Step 3!
079-00	Congratulations!
079-01	Excellent...
079-02	Great!
079-03	Good job!
080	We've made a program that\ndestroys the player if they\nfall off the level.
082	In the next step, we'll set up a bunch\nof cool new features for the level.
083	See you next time!
Lesson_2DAction_03.msbt
000	Welcome, welcome!
001	This is Step 4 of Risky Run.
002	Let's go over what we did last time.
003	Try falling off the level now.
004	Right! We made it so the player is\ndestroyed when they fall off the stage.
006	We'll be getting into the gritty details\nthis time. We're going to start filling\nour level with tricks and traps!
007	Let's start with a {color[0400]}{[0001|1a00]}seesaw{[0001|ffff]}{color[ffff]}\nto shake things up!
008	OK! Let's head straight\nto the program screen.
009	Go go go!
010	First we need to call up a\n{color[0400]}{[0001|1a00]}sphere Object Nodon {[0001|ffff]}{color[ffff]}to serve\nas a base for the seesaw.
011	Heyo! Want me to function as a nice,\nsturdy base while you build something\non top of me? I can do that.
012	Place the Object Nodon just\nafter the first platform.
013	And enter the settings screen.
014	We'll use this as a base, so we\nonly need to enable {color[0400]}{[0001|1a00]}Visible\n{[0001|ffff]}{color[ffff]}under {color[0400]}{[0001|1a00]}Properties{[0001|ffff]}{color[ffff]}.
015	Now pop out of the settings screen.
016	Next, call up a {[0001|1a00]}{color[0400]}box Object Nodon{color[ffff]}{[0001|ffff]} to\nact as the plank for the seesaw.
017	I guess I'll be rocking up and\ndown. Sounds like fun!
018	Change the shape of the box Object Nodon to\nsomething like a seesaw plank. Then put it above\nthe sphere Object Nodon.
019	Open the settings screen.
020	Under {[0001|1a00]}{color[0400]}Properties{color[ffff]}{[0001|ffff]}, {[0001|1a00]}{color[0400]}enable Visible{color[ffff]}{[0001|ffff]},\n{[0001|1a00]}{color[0400]}Solid{color[ffff]}{[0001|ffff]}, and {[0001|1a00]}{color[0400]}Movable{color[ffff]}{[0001|ffff]}.
021	Now open the {color[0400]}{[0001|1a00]}Color{[0001|ffff]}{color[ffff]} menu.
022	Let's go with a nice {color[0400]}{[0001|1a00]}yellow{[0001|ffff]}{color[ffff]}.
023	Open up {color[0400]}{[0001|1a00]}Connection Point{[0001|ffff]}{color[ffff]}.
024	Set both the {[0001|1a00]}{color[0400]}Own Connection Point{color[ffff]}{[0001|ffff]}\nand {[0001|1a00]}{color[0400]}Target Connection Point{color[ffff]}{[0001|ffff]}\nto {[0001|1a00]}{color[0400]}Center{color[ffff]}{[0001|ffff]}.
025	Close this screen.
026	And close the settings menu!
027	{color[0400]}{[0001|1a00]}Connect{[0001|ffff]}{color[ffff]} the box Object Nodon\nto the sphere Object Nodon we're\nusing as the base.
028	Let's take a look and\nsee if it's all working.
029	Go through the stage and\njump on the yellow seesaw!
030	I mean, I guess it looks\nlike a seesaw...
031	But it doesn't move\nwhen you jump on it!
032	I know some things about seesaws,\nand I'm pretty sure that's just wrong.
033	Let's turn this mock seesaw\ninto a rock seesaw!
034	And how do we do that?
035	By using a {color[0400]}{[0001|1a00]}special connection{[0001|ffff]}{color[ffff]}!
036	It's actually not that complicated.
037	Go to {[0001|1a00]}Objects{[0001|ffff]} {[0001|0400]}{[0001|ffff]} {[0001|1a00]}Connections{[0001|ffff]} {[0001|0400]}{[0001|ffff]}\n{[0001|1a00]}Hinge Connectors{[0001|ffff]} {[0001|0400]}{[0001|ffff]} {[0001|1a00]}Z Hinge{[0001|ffff]} to call\nup the {color[0400]}{[0001|1a00]}Hinge-Connector Nodon{[0001|ffff]}{color[ffff]}!
038	Woo! Hey, guys!
039	I'm here, and I'm ready to\nGET THINGS MOVING!
040	In a sec, we'll slot our enthusiastic\nfriend {color[0400]}{[0001|1a00]}between those two Object Nodon{[0001|ffff]}{color[ffff]}...
041	And I think you'll find it'll {color[0400]}{[0001|1a00]}spin\n{[0001|ffff]}{color[ffff]}any object it's connected to.
042	Oh, you got that right!\nI was born to MOVE!
043	Now put me in there so I can\nget spinning! LET'S DANCE!
044	Ha! OK! Loving the passion! Let's {color[0400]}{[0001|1a00]}remove\nthe connection {[0001|ffff]}{color[ffff]}between the box Object Nodon\nand the sphere Object Nodon.
045	Now insert the Hinge-Connector\nNodon into that space.
046	Then, {color[0400]}{[0001|1a00]}connect the box Object Nodon\nto the Hinge-Connector Nodon{[0001|ffff]}{color[ffff]}.
047	Next, {color[0400]}{[0001|1a00]}connect the Hinge-Connector Nodon\nto the sphere Object Nodon{[0001|ffff]}{color[ffff]}.
048	Here we go! I'll get that {[0001|1a00]}{color[0400]}box\n{color[ffff]}{[0001|ffff]}spinning! Watch me!
049	Ohhh, this might be a bad time to\nmention my motion sickness...
050	I didn't hear that. Let's go make\nsure everything's working.
051	OK, just like before, try\nhopping onto the seesaw.
052	Well... That's an A for effort.
053	But that might be too much enthusiasm.\nIt's more buzz saw than seesaw...
054	Let's see what we\ncan do about that.
055	Sure thing! One seesaw\ncomin' right up!
056	All you've gotta do is\nmess around with my\n{color[0400]}{[0001|1a00]}Range{[0001|ffff]}{color[ffff]} setting.
057	Yeah! Open up the Hinge-Connector\nNodon's settings screen.
057-01	We can adjust the {color[0400]}{[0001|1a00]}range\nof angles it'll spin through\n{[0001|ffff]}{color[ffff]}with the {color[0400]}{[0001|1a00]}Range{[0001|ffff]}{color[ffff]} setting.
058	Set the left slider to {color[0400]}{[0001|1a00]}-45.00{[0001|ffff]}{color[ffff]}\nand the right slider to {color[0400]}{[0001|1a00]}45.00{[0001|ffff]}{color[ffff]}.
059	That sets the spin {color[0400]}{[0001|1a00]}range{[0001|ffff]}{color[ffff]} to between\n{color[0400]}{[0001|1a00]}-45 degrees {[0001|ffff]}{color[ffff]}and {color[0400]}{[0001|1a00]}45 degrees{[0001|ffff]}{color[ffff]}.
060	You can close the\nsettings screen.
061	Time to see if it worked.
062	Try jumping on the\nyellow seesaw!
063	We're in business! It's moving\nlike a seesaw should!
064	All thanks to the mighty\nHinge-Connector Nodon.
065	Once you're done checking,\nhead back to the program screen.
066	And there you have it.
067	Step 4 is done!
068-00	Yuss.
068-01	Woo-hoo! Good job!
068-02	I feel dizzy...
069	You've learned how to\ncreate a seesaw using\nthe Hinge-Connector Nodon.
070	But next time we'll be\nprogramming something\na little different.
071	Looking forward to seeing\nyou in the next step!
Lesson_2DAction_04.msbt
000	Here we go! It's Step 5 of\nRisky Run!
001	Let's review what\nwe did last time.
002	Go through the stage, and\njump on the yellow seesaw.
003	That's right. We used the\n{color[0400]}{[0001|1a00]}Hinge-Connector Nodon{[0001|ffff]}{color[ffff]} to\ncreate a seesaw mechanism.
004	Now we're going to learn\nhow to create a {color[0400]}{[0001|1a00]}pushable box{[0001|ffff]}{color[ffff]}.
005	OK, say it with me now...
006	To the program screen!
007	Go go go!
008	Let's start off by\nmaking a platform.
009	Call up a {[0001|1a00]}{color[0400]}box\nObject Nodon{color[ffff]}{[0001|ffff]}.
010	Now let's make it big enough\nfor a platform and put it in the\nblue frame.
011	Open the settings screen.
012	Under {color[0400]}{[0001|1a00]}Properties{[0001|ffff]}{color[ffff]},\n{color[0400]}{[0001|1a00]}enable Visible{[0001|ffff]}{color[ffff]} and {color[0400]}{[0001|1a00]}Solid{[0001|ffff]}{color[ffff]}.
013	And we're done with the settings,\nat least for the moment.
014	Next up we want another {color[0400]}{[0001|1a00]}box\nObject Nodon{[0001|ffff]}{color[ffff]} to play the part\nof the {color[0400]}{[0001|1a00]}pushable box{[0001|ffff]}{color[ffff]}.
015	Some people call me a\npushover. Maybe they're right...
016	Let's put this one\nabove the platform.
017	And now we'll do a little\nsettings adjustment.
018	{color[0400]}{[0001|1a00]}Enable Visible{[0001|ffff]}{color[ffff]}, {color[0400]}{[0001|1a00]}Solid{[0001|ffff]}{color[ffff]}, and\n{color[0400]}{[0001|1a00]}Movable{[0001|ffff]}{color[ffff]}, under {color[0400]}{[0001|1a00]}Properties{[0001|ffff]}{color[ffff]}.
019	We should make the pushable box\neasy to recognize, so open up the\n{color[0400]}{[0001|1a00]}Color{[0001|ffff]}{color[ffff]} menu.
020	{color[0400]}{[0001|1a00]}Light blue {[0001|ffff]}{color[ffff]}should do, I think.
021	Now you can close\nthe settings screen.
022	Time to give this a test run.
023	Can you get to the platform\nafter the seesaw?
025	Try pushing the {color[0400]}{[0001|1a00]}light blue box{[0001|ffff]}{color[ffff]}!
026	See if you can push\nit right off the platform.
027	And there it goes!
028	Well, I mean, of course\nit fell off...
029	But actually, believe it or not, we want\na box that {color[0400]}{[0001|1a00]}doesn't fall{[0001|ffff]}{color[ffff]} when you push\nit off the platform.
030	Time for more programming!
031	We'll need something extra so we\ncan both push it and make sure it\ndoesn't fall off the platform.
032	And that something is yet\nanother {color[0400]}{[0001|1a00]}special connector{[0001|ffff]}{color[ffff]}.
033	I'll need you to go to {[0001|1a00]}Objects{[0001|ffff]} {[0001|0400]}{[0001|ffff]}\n{[0001|1a00]}Connections{[0001|ffff]} {[0001|0400]}{[0001|ffff]} {[0001|1a00]}Slide Connectors{[0001|ffff]} {[0001|0400]}{[0001|ffff]} {[0001|1a00]}X Slide{[0001|ffff]}\nto call up a {color[0400]}{[0001|1a00]}Slide-Connector Nodon{[0001|ffff]}{color[ffff]}.
034	Ah, you're this programmer I've\nbeen hearing so much about!
035	My name is...\nSlide-Connector Nodon!
036	And I will follow you always!
037	If the Slide-Connector Nodon is \n{color[0400]}{[0001|1a00]}connected on both sides{[0001|ffff]}{color[ffff]}...
038	the objects it's connected to\nwill {color[0400]}{[0001|1a00]}move along one axis{[0001|ffff]}{color[ffff]}.
039	That's right!
040	Just give me the order,\n{[0201]}!
041	No arguments here!\nLet's give it a try then.
043	So, the box... Could you connect\nthe {color[0400]}{[0001|1a00]}upper Object Nodon{[0001|ffff]}{color[ffff]} to\nthe {color[0400]}{[0001|1a00]}Slide-Connector Nodon{[0001|ffff]}{color[ffff]}?
044	Now connect the {color[0400]}{[0001|1a00]}Slide-Connector Nodon\n{[0001|ffff]}{color[ffff]}to the {color[0400]}{[0001|1a00]}lower Object Nodon{[0001|ffff]}{color[ffff]}. You know,\nthe one in charge of the platform.
045	Good!
046	What I do is on the {[0001|1a00]}{color[0400]}x-axis{color[ffff]}{[0001|ffff]}.
047	Meaning the box can\n{color[0400]}{[0001|1a00]}only move left or right{[0001|ffff]}{color[ffff]}.
048	Watch how awesome it'll\nbe, {[0201]}!
049	Time to see it in action!
050	Let's get to the box and\ngive it a little shove.
051	Off the platform it goes!\nIt even floated in the air!
052	Heh, that was fun.
053	Although it'll be a little hard to use if\nit just flies off into the sunset, so\nlet's do some adjusting.
054	Head to the program screen.
055	How did you like that,\n{[0201]}?! Cool, huh?
056	What? You need it to\nNOT fly off forever?!
057	I'm so sorry. I take\nfull responsibility.
058	Whoa, whoa! It's OK.\nIt's not that big a deal.
059	Right, {[0201]}?\nLet's open up the Slide-Connector\nNodon's settings screen.
060	With the {color[0400]}{[0001|1a00]}Range{[0001|ffff]}{color[ffff]} option we can\nconfigure the {[0001|1a00]}{color[0400]}range of movement{color[ffff]}{[0001|ffff]}\nfor what it's connected to.
061	Set the left slider to {[0001|1a00]}{color[0400]}0.00\n{color[ffff]}{[0001|ffff]}and the right slider to {color[0400]}{[0001|1a00]}3.00{[0001|ffff]}{color[ffff]}.
062	Now close the settings screen.
063	A second chance to prove myself...
064	Thank you, {[0201]}!\nI'll make the most of this opportunity.
065	You're a good apple, Nodon.\nNow let's look at the game screen.
066	Give the box a push.
067	It stopped midway!
068	That should make it a bit\neasier to use, eh?
069	Back to the program screen!
070	Was that...OK?
071	YES! It went well!\nWhat a relief.
072	I thought for sure\nthat {[0201]}\nwould delete me...
073	Er... Yeah... Let's make\nthe next platform.
074	Can you copy\nthis Object Nodon?
075	Adjust the size, and move it\ninto the blue frame.
076	Now, copy this platform.
077	And place it a little lower.
078	Copy it again.
079	And put this\neven lower.
080	Now we've got\nsomething like stairs.
081	Give it a try on the\ngame screen.
082	Push the box so you can\nuse it to get to the stairs.
083	Looks like we've got some\ncool stuff in this level now!
084	Once you're done \nchecking everything,\ngo to the program screen.
085	And cue drumroll!
086	Step 5 is finished!
087-00	Very well done!
087-01	Nice one.
087-02	All you needed\nwas a good push.
088	So, we used the Slide-Connector\nNodon to push around a box.
089	In the next step, things are\ngoing to get even more technical.
090	I hope you're looking\nforward to it!
Lesson_2DAction_05.msbt
000	Well hello again!
001	We're moving into the last\nhalf of our build for Risky Run.
002	And we still have plenty more\nfeatures to add to our game.
003	This time we've got\nsomething really cool.
004	{color[0400]}{[0001|1a00]}Moving platforms{[0001|ffff]}{color[ffff]}!
005	You know what to do!
006	To the program screen!
007	Hup hup hup hup!
008	OK then. Before we make\nany moving platforms...
009	I think it's a bit of a pain to go \nthrough the whole level every\ntime just so we can check things.
010	What if we could just teleport\nright to where we need to be?
011	And any time there's\nteleporting to be done...
012	we need the help of the\n{color[0400]}{[0001|1a00]}Teleport-Object-Entrance\nNodon{[0001|ffff]}{color[ffff]}! Call it up!
013	O, seeker of the way,\nthou must trust in the\npath before thee.
014	Stack the Teleport-Object-Entrance Nodon\n{[0001|1a00]}{color[0400]}on top of the Person Nodon{color[ffff]}{[0001|ffff]}.
015	Now open the settings screen.
016	Set the {color[0400]}{[0001|1a00]}Teleport ID{[0001|ffff]}{color[ffff]} to {color[0400]}{[0001|1a00]}H{[0001|ffff]}{color[ffff]}.
017	Open {[0001|1a00]}{color[0400]}Teleport What?{color[ffff]}{[0001|ffff]}
018	{[0001|1a00]}{color[0400]}Enable{color[ffff]}{[0001|ffff]} {color[0400]}{[0001|1a00]}Person only{[0001|ffff]}{color[ffff]}.
019	Close this screen.
020	And then close the\nsettings screen.
021	Now place a {color[0400]}{[0001|1a00]}Teleport-Object-\nExit Nodon{[0001|ffff]}{color[ffff]} at the stairway.
022	O seeker, though the way\nahead is unknown to thee,\nthou must enter without hesitation.
023	Place the Teleport-Object-Exit Nodon\nwhere we want to warp to.
024	And open the settings screen.
025	Set the {color[0400]}{[0001|1a00]}Teleport ID{[0001|ffff]}{color[ffff]} to {color[0400]}{[0001|1a00]}H{[0001|ffff]}{color[ffff]}.
026	Now close the settings screen.
027	So now, when we start a game, we'll\nwarp straight to the stairway part\nof the level.
028	Let's check it out.
029	We've zipped straight\nto the stairway!
030	This should make checking\nthings much easier.
031	OK, now to the main event:\nmaking a moving platform.
032	In order to make a moving platform,\nwe'll need to ask our friend\n{color[0400]}{[0001|1a00]}Slide-Connector Nodon {[0001|ffff]}{color[ffff]}for help.
033	But before that, please call\nup a {color[0400]}{[0001|1a00]}sphere Object Nodon{[0001|ffff]}{color[ffff]}.
034	Next, move the {color[0400]}{[0001|1a00]}Object Nodon\n{[0001|ffff]}{color[ffff]}to the blue frame.
035	Now open the settings screen\nfor the {color[0400]}{[0001|1a00]}sphere Object Nodon{[0001|ffff]}{color[ffff]}.
036	Under {color[0400]}{[0001|1a00]}Properties{[0001|ffff]}{color[ffff]}, {[0001|1a00]}{color[0400]}enable{color[ffff]}{[0001|ffff]} {color[0400]}{[0001|1a00]}Visible{[0001|ffff]}{color[ffff]} only.
037	OK!
038	Now we're going to call a {[0001|1a00]}{color[0400]}box Object\nNodon{color[ffff]}{[0001|ffff]} to act as the platform.
039	It's all good. Guess I'll be moving\nyou around a bit. No problem.
040	Change it to a platform shape,\nand move it to the blue frame.
041	Now can you open its\nsettings screen?
042	In {color[0400]}{[0001|1a00]}Properties{[0001|ffff]}{color[ffff]}, {[0001|1a00]}{color[0400]}enable{color[ffff]}{[0001|ffff]} {color[0400]}{[0001|1a00]}Visible{[0001|ffff]}{color[ffff]},\n{color[0400]}{[0001|1a00]}Solid{[0001|ffff]}{color[ffff]}, and {color[0400]}{[0001|1a00]}Movable{[0001|ffff]}{color[ffff]} only.
043	Now open {color[0400]}{[0001|1a00]}Color{[0001|ffff]}{color[ffff]}.
044	Let's go for {color[0400]}{[0001|1a00]}lime green{[0001|ffff]}{color[ffff]}.
045	Now let's open the {color[0400]}{[0001|1a00]}Connection Point{[0001|ffff]}{color[ffff]} settings.
046	Set both the {color[0400]}{[0001|1a00]}Own Connection Point\n{[0001|ffff]}{color[ffff]}and the {color[0400]}{[0001|1a00]}Target Connection Point{[0001|ffff]}{color[ffff]} to {color[0400]}{[0001|1a00]}Center{[0001|ffff]}{color[ffff]}.
047	Close the screen.
048	Now we're done with\nthe settings.
049	Next, please call up a\n{color[0400]}{[0001|1a00]}Y Slide-Connector Nodon{[0001|ffff]}{color[ffff]}.
050	What a pleasure it is to be of use\nto you again, {[0201]}!
051	I tell you, no matter what happens\nI'll follow you until the end.
051-01	This time I'm a {color[0400]}{[0001|1a00]}Y Slide{[0001|ffff]}{color[ffff]}, so I'll\nmove whatever I'm connected\nto {color[0400]}{[0001|1a00]}up and down{[0001|ffff]}{color[ffff]}!
052	Let's put our friend where\nthe blue frame is.
053	And connect to the {[0001|1a00]}{color[0400]}box Object Nodon{color[ffff]}{[0001|ffff]}.
054	Then connect the {color[0400]}{[0001|1a00]}Slide-Connector\nNodon {[0001|ffff]}{color[ffff]}to the {color[0400]}{[0001|1a00]}sphere Object Nodon{[0001|ffff]}{color[ffff]}.
055	OK then, that's two Object\nNodon connected on either side\nof the {color[0400]}{[0001|1a00]}Slide-Connector Nodon{[0001|ffff]}{color[ffff]}.
056	I can't wait to check this one out...
057	Oops... The platform fell off.
057-01	If you missed the action, you can just do\na {color[0400]}{[0001|1a00]}retry{[0001|ffff]}{color[ffff]} and take another look.
058	Let's work some magic and make\nthis platform {color[0400]}{[0001|1a00]}move up and down{[0001|ffff]}{color[ffff]}.
059	Head to the program screen.
060	So you want to make this platformy\nbox thing move up and down, right?
061	Then you're going to need to\nadd a value to my input port.
062	If you do that, I'll {color[0400]}{[0001|1a00]}slide{[0001|ffff]}{color[ffff]} the box\nbased on the {color[0400]}{[0001|1a00]}value that I receive{[0001|ffff]}{color[ffff]}.
063	Just what we need!\nLet's give it a try.
064	Can you call up a {color[0400]}{[0001|1a00]}Constant Nodon{[0001|ffff]}{color[ffff]}?
065	Behold! I am Constant Nodon!\nI am immutable, steadfast, unchanging!
066	Connect the Constant Nodon to\nthe Slide-Connector Nodon.
067	Now the Slide-Connector Nodon is\nreceiving an input of {color[0400]}{[0001|1a00]}1.00{[0001|ffff]}{color[ffff]}.
068	Let's see what happens when the\nSlide-Connector Nodon receives that input.
069	Aha! The platform doesn't fall!
070	Plus, its {color[0400]}{[0001|1a00]}position is fixed\nrelative to the ball{[0001|ffff]}{color[ffff]}.
071	So that's how that works. When we input\na value to the Slide-Connector Nodon...
072	it {color[0400]}{[0001|1a00]}slides an object{[0001|ffff]}{color[ffff]} based\non the size of the value.
073	Now let's use this to program\na {color[0400]}{[0001|1a00]}moving platform{[0001|ffff]}{color[ffff]}.
074	Could you delete the connection\nbetween the Constant Nodon and\nthe Slide-Connector Nodon?
075	Great! Instead we'll connect...\nsome kind of Nodon that {color[0400]}{[0001|1a00]}outputs\na changing value{[0001|ffff]}{color[ffff]}...
077	The {color[0400]}{[0001|1a00]}Counter Nodon{[0001|ffff]}{color[ffff]}!\nGo ahead and call it up!
078	I WILL COUNT OUT SOME NUMBERS\nAND SEND THOSE NUMBERS AS AN\nOUTPUT. THANKS.
079	Please connect the Constant Nodon to\nthe Counter Nodon's {color[0400]}{[0001|1a00]}count up port{[0001|ffff]}{color[ffff]}.
080	This way, the Counter Nodon will\n{color[0400]}{[0001|1a00]}count out numbers continuously{[0001|ffff]}{color[ffff]}.
081	Now we need to have a look at\nthe Counter Nodon's settings.
082	Switch {color[0400]}{[0001|1a00]}Mode{[0001|ffff]}{color[ffff]} to {color[0400]}{[0001|1a00]}Bounce{[0001|ffff]}{color[ffff]}.
083	Then, under {color[0400]}{[0001|1a00]}Count Range{[0001|ffff]}{color[ffff]},\nset the left slider to {color[0400]}{[0001|1a00]}-3\n{[0001|ffff]}{color[ffff]}and the right slider to {color[0400]}{[0001|1a00]}3{[0001|ffff]}{color[ffff]}.
084	Now the Counter Nodon will count\n{color[0400]}{[0001|1a00]}bouncing between -3 and 3{[0001|ffff]}{color[ffff]}.
085	Close the settings screen.
086	OK, connect the Counter Nodon\nto the Slide-Connector Nodon.
087	How will this affect the movement?\nGood question! Let's head to the game\nscreen and find out.
088	Yikes! That's a bit extreme.
089	With the platform moving so fast,\nI'd find it hard to use no matter\nhow many times I'd try.
090	So let's maybe fix that\non the program screen.
091	The Constant Nodon is\nputting out a value of {color[0400]}{[0001|1a00]}1.00{[0001|ffff]}{color[ffff]}.
092	That means the Counter Nodon\nadds {color[0400]}{[0001|1a00]}1.00 {[0001|ffff]}{color[ffff]}to the value each time\nit counts.
093	If the speed keeps increasing\nlike that, the platform gets way\ntoo fast.
094	Looks like we'll have to fiddle\nwith the Constant Nodon's\nsettings a little.
095	Go to {color[0400]}{[0001|1a00]}Output Value{[0001|ffff]}{color[ffff]}, and use\nthe number pad to enter {color[0400]}{[0001|1a00]}0.03{[0001|ffff]}{color[ffff]}.
096	Close the settings screen.
097	Time to see how\nthat affects things!
098	Ah, now the platform's\nmoving at just the right speed.
099	Lastly, we don't want to see\nthat white sphere in the middle.
100	So head to the program\nscreen where we can make\nit invisible.
101	Open the sphere Object Nodon's\nsettings screen.
102	Under {color[0400]}{[0001|1a00]}Properties{[0001|ffff]}{color[ffff]},\n{[0001|1a00]}{color[0400]}disable{color[ffff]}{[0001|ffff]} {color[0400]}{[0001|1a00]}Visible{[0001|ffff]}{color[ffff]}.
103	Back out of the\nsettings screen.
104	And let's check out\nour handiwork.
105	Not a white sphere in sight!
106	Now, we're using the platform to\nclimb up, so we'll need a new\nplatform to climb up to!
107	Copy this platform.
108	Make it bigger, and pop it\ninside the blue frame.
109	Give it a try.
110	Get on the moving platform\nand try going up.
111	Nice, now you're on\na new platform.
112	Looks like our level\nis filling out little by little.
113	Hop over to the program screen,\nand we'll see what else we can do.
114	But maybe not now,\nbecause...
115	that's the end of Step 6!
116-00	Knew you could do it!
116-01	AWESOME 1...\nAWESOME 2...\nAWESOME 3...
116-02	Clean work.
117	We made some pretty tricky\nmechanisms this time, eh?
118	Moving platforms really make this\nfeel like a proper game. This is\ngetting pretty exciting!
119	Next time it'll be even more like a\ngame. We'll make an {color[0400]}{[0001|1a00]}item{[0001|ffff]}{color[ffff]} that will\nlet you punch things! Kapow!
120	It's a little bit more difficult,\nbut I know you can do it, {[0201]}!
121	See you in the next step, friend!
Lesson_2DAction_06.msbt
000	Welcome to Step 7 of\nRisky Run!
001	Previously we learned how\nto make a {color[0400]}{[0001|1a00]}moving platform{[0001|ffff]}{color[ffff]}.
001-01	We're well on our way to \nfilling this level with lots of\ncool features. Let's keep it up!
002	This time, we'll add some {[0001|1a00]}{color[0400]}items{color[ffff]}{[0001|ffff]}!
003	We're going to make an item that will let us\n{[0001|1a00]}{color[0400]}defeat aliens by punching{color[ffff]}{[0001|ffff]} them!
004	This step will be long and a bit\nchallenging, but I know you've got\nthe skills to ace it.
005	OK! Let's see what we can\nget up to on the program screen.
006	Are you ready?
007	Go go go!
008	First, we'll make things easy on\nourselves and adjust our teleport.
009	Move the Teleport-Object-Exit\nNodon inside the blue frame.
010	Now when you next start the game,\nyou'll teleport to the area just after\nthe moving platform. Cool, right?
011	Give it a try.
012	Yay, the teleport worked!
013	Time to get to work adding\nsome aliens, then!
014	To the program screen!
015	Do you think this area is\nmaybe a little...simple?
016	Let's {[0001|1a00]}{color[0400]}add a layer{color[ffff]}{[0001|ffff]} to it.
017	If you could copy this platform...
018	adjust the size, and put it\nabove the other platform...
019	Now we've got multiple levels.
020	Now call up an {color[0400]}{[0001|1a00]}alien Fancy-Object\nNodon{[0001|ffff]}{color[ffff]} from the {color[0400]}{[0001|1a00]}Round Fancy Objects{[0001|ffff]}{color[ffff]} list.
021	Ooh, let's fill this place up\nwith gorgeous glitzy aliens! ♥
022	Put the Fancy-Object Nodon\nabove the platform.
023	And open the settings screen.
024	Under {color[0400]}{[0001|1a00]}Properties{[0001|ffff]}{color[ffff]}, {[0001|1a00]}{color[0400]}enable{color[ffff]}{[0001|ffff]}\n{color[0400]}{[0001|1a00]}Visible{[0001|ffff]}{color[ffff]}, {color[0400]}{[0001|1a00]}Solid{[0001|ffff]}{color[ffff]}, {color[0400]}{[0001|1a00]}Destructible{[0001|ffff]}{color[ffff]},\nand {color[0400]}{[0001|1a00]}Destructive{[0001|ffff]}{color[ffff]} only.
025	Make it face left by setting\nthe {color[0400]}{[0001|1a00]}Y-Axis Rotation{[0001|ffff]}{color[ffff]} to {color[0400]}{[0001|1a00]}90.00°{[0001|ffff]}{color[ffff]}.
026	That's it for the settings.
027	Now copy the Fancy-Object Nodon.
028	And put the second alien next to the first.
029	Copy it again.
030	And put this one above the\nupper level.
031	Just keep the aliens coming!
032	Put this one down where you\ncome off the raised area.
033	So. Many. Aliens! ♥
034	And there's an almost painful\nbeauty to the rhythm you've\nplaced them with...
035	You are clearly a genius\nwith amazing taste.\nAnd I should know!
036	Well, let's get a good look\nat these amazing aliens then.
037	Whew! We made a few\nof these, didn't we?
038	But there's no way for us\nto deal with these aliens\nright now.
040	If there's one thing that can beat\nan alien, it's a good left hook. We need\nto make {color[0400]}{[0001|1a00]}an item that lets us punch{[0001|ffff]}{color[ffff]}.
041	To the program screen!
042	Let's place an {[0001|1a00]}{color[0400]}apple{color[ffff]}{[0001|ffff]}.\nThis will be our item.
043	Call up an {color[0400]}{[0001|1a00]}apple Fancy-Object\nNodon{[0001|ffff]}{color[ffff]} from the {color[0400]}{[0001|1a00]}Round Fancy\nObjects{[0001|ffff]}{color[ffff]} list.
044	Place the apple Fancy-Object\nNodon in midair.
045	And open its settings screen.
046	Under {color[0400]}{[0001|1a00]}Properties{[0001|ffff]}{color[ffff]}, set {color[0400]}{[0001|1a00]}Visible{[0001|ffff]}{color[ffff]},\n{color[0400]}{[0001|1a00]}Solid{[0001|ffff]}{color[ffff]}, and {color[0400]}{[0001|1a00]}Destructible{[0001|ffff]}{color[ffff]}.
047	Close the settings screen.
048	So we've placed an apple\nin our game.
049	Now could you open the settings\nscreen for the Person Nodon?
050	{[0001|1a00]}{color[0400]}Enable{color[ffff]}{[0001|ffff]} {color[0400]}{[0001|1a00]}Destructive{[0001|ffff]}{color[ffff]} under {color[0400]}{[0001|1a00]}Properties{[0001|ffff]}{color[ffff]}.
051	Back out of the settings screen.
051-01	Now the player should be\nable to destroy the apple.
052	Let's give it a try.
053	Go ahead and grab the apple.
054	Perfect! You got it.
055	But of course, it's not like\nthe player can punch just because\nthey grabbed an apple.
056	So here's the main event: we'll\nmake it so grabbing the apple\nlets us {color[0400]}{[0001|1a00]}throw punches{[0001|ffff]}{color[ffff]}.
057	We'll be having the player\ngrab the apple here, but...
058	we could also think of this as\n{color[0400]}{[0001|1a00]}the apple being destroyed{[0001|ffff]}{color[ffff]}.
059	In other words, if we know {color[0400]}{[0001|1a00]}when the\napple has been destroyed{[0001|ffff]}{color[ffff]}, then we\ncan determine {color[0400]}{[0001|1a00]}if it's been grabbed{[0001|ffff]}{color[ffff]}.
060	So, there's a Nodon we can\nuse that I think you're familiar with.
061	Could you call up the{[0001|1a00]}{color[0400]}\nObject-Break Nodon{color[ffff]}{[0001|ffff]}?
062	How're things? Is somebody about\nto fall to pieces again? Some people\ncan't help themselves!
063	I guess it's up to little old\nme to tell you when they do!
064	Let's place the Object-Break\nNodon up above.
065	And then take a look at\nthe settings screen.
066	Open up {[0001|1a00]}{color[0400]}Check What?{color[ffff]}{[0001|ffff]}
067	And enable {[0001|1a00]}{color[0400]}Apple {color[ffff]}{[0001|ffff]}only.
068	Now close this screen.
069	We're finished with\nthe settings.
070	So you need to know\nwhen this apple breaks,\ndo you, sugar?
071	But you do know {[0001|1a00]}{color[0400]}I can only tell you\nthe moment it breaks{color[ffff]}{[0001|ffff]}, right? Anything\nafter that and you're on your own.
072	Hmmm... The Nodon's got a point.
073	Object-Break Nodon only outputs\na signal {[0001|1a00]}{color[0400]}at the moment the apple\nbreaks{color[ffff]}{[0001|ffff]}.
074	But right now, what we need is\nsomething that {[0001|1a00]}{color[0400]}continuously sends\na signal after the apple breaks{color[ffff]}{[0001|ffff]}.
075	That's why we need it to {[0001|1a00]}{color[0400]}remember\nthe apple is broken{color[ffff]}{[0001|ffff]} and {[0001|1a00]}{color[0400]}continuously\nsend{color[ffff]}{[0001|ffff]} a signal.
076	Go to {[0001|1a00]}Middle{[0001|ffff]} {[0001|0400]}{[0001|ffff]} {[0001|1a00]}Flag/Counter/Random\n{[0001|ffff]}{[0001|0400]}{[0001|ffff]} {[0001|1a00]}Flag{[0001|ffff]}, and select the {[0001|1a00]}{color[0400]}Flag Nodon{color[ffff]}{[0001|ffff]}.
077	Zzzzzz...
077-01	ZZZZzzzzz...
078	Zzzzz... But I don't like broccoli, Mom...\nZZZzzz...
079	Well, Rip Van Winkle here's\nasleep right now...
080	But when it receives an\ninput signal, it wakes up.
081	So when the Flag Nodon wakes\nup, we can say it's {[0001|1a00]}{color[0400]}switched on{color[ffff]}{[0001|ffff]}.
081000	Now I need you to plop the Flag Nodon\ndown next to the Object-Break Nodon.
082	Since we need the {[0001|1a00]}{color[0400]}Flag Nodon to\nswitch on {color[ffff]}{[0001|ffff]}when the apple breaks...
083	you'll need to connect the\nObject-Break Nodon to the\nFlag Nodon's {[0001|1a00]}{color[0400]}on port{color[ffff]}{[0001|ffff]}.
084	Wake me up when that\napple breaks... ZZZZzzzz.
084-01	Once the Flag Nodon gets the signal from\nthe Object-Break Nodon, it'll {[0001|1a00]}{color[0400]}switch on{color[ffff]}{[0001|ffff]}.
085	It'll {[0001|1a00]}{color[0400]}send an output signal the\nwhole time{color[ffff]}{[0001|ffff]} it's switched{[0001|1a00]}{color[0400]} on{color[ffff]}{[0001|ffff]}!
086	In other words, {[0001|1a00]}{color[0400]}once the\napple breaks{color[ffff]}{[0001|ffff]}, a signal will\nbe {[0001|1a00]}{color[0400]}sent out constantly{color[ffff]}{[0001|ffff]}.
087	Now we can work on using the\nFlag Nodon to make the player\nthrow some punches! Ka-POW!
087-01	What we want next is to\nmake a connection to the\n{[0001|1a00]}{color[0400]}Person Nodon's action port{color[ffff]}{[0001|ffff]}...
088	But, since the Person Nodon is far\naway, that might not work out.
089	But there's a way around this!\nWe can use a special Nodon that\nlets us make {[0001|1a00]}{color[0400]}long connections{color[ffff]}{[0001|ffff]}.
090	Go to {[0001|1a00]}Middle{[0001|ffff]} {[0001|0400]}{[0001|ffff]} {[0001|1a00]}Program Layout{[0001|ffff]} {[0001|0400]}{[0001|ffff]}\n{[0001|1a00]}Wormhole Entrance{[0001|ffff]}, and call up the\n{[0001|1a00]}{color[0400]}Wormhole-Entrance Nodon{color[ffff]}{[0001|ffff]}.
091	This is Entrance A. I repeat,\nthis is Entrance A. Come in.
092	Will transmit signal once Sleeping\nBeauty wakes up, over.
093	This {[0001|1a00]}{color[0400]}Wormhole-Entrance Nodon{color[ffff]}{[0001|ffff]}\nis a little hole in space that lets\nus {[0001|1a00]}{color[0400]}connect to far-off places{color[ffff]}{[0001|ffff]}!
093000	Set the Wormhole-Entrance Nodon\ndown next to the Flag Nodon.
094	And add a connection\nbetween the two.
095	Now we're all ready to warp the\nconnection from the Flag Nodon.
096	All we need now is a place\nfor the connection to reappear.
097	Go to {[0001|1a00]}Middle{[0001|ffff]} {[0001|0400]}{[0001|ffff]} {[0001|1a00]}Program Layout{[0001|ffff]} {[0001|0400]}{[0001|ffff]}\n{[0001|1a00]}Wormhole Exit{[0001|ffff]}, and call up the\n{[0001|1a00]}{color[0400]}Wormhole-Exit Nodon{color[ffff]}{[0001|ffff]}.
098	Breaker breaker, this is\nExit A. Repeat, Exit A.
099	Transmit signal once target returns\nfrom the beyond, over.
100	We've got that signal going\nto the Wormhole-Entrance Nodon.
101	And now that signal will come\nout of this Wormhole-Exit Nodon!
102	Can you move the Wormhole-Exit\nNodon over to the blue frame?
103	So if you recall, we want to\nmake the player {[0001|1a00]}{color[0400]}throw punches\nonce the apple is broken{color[ffff]}{[0001|ffff]}.
104	First, we'll make it so\nwe can punch with {color[0400]}{[0001|1a00]}{[0001|ffff]}{color[ffff]}.
105	Could you call up a\n{color[0400]}{[0001|1a00]}Button Nodon for {[0001|ffff]}{color[ffff]}?
106	Yo! There's only one way to\npunch, and that's as fast as\nyou can, forever! Blammo!
107	Sharp as ever! Move it over\nto the blue frame, will you?
107000	Now open up the\nButton Nodon's settings.
107001	Change the {[0001|1a00]}{color[0400]}Output Timing{color[ffff]}{[0001|ffff]}\nto {[0001|1a00]}{color[0400]}On press{color[ffff]}{[0001|ffff]}.
107002	Now, the Button Nodon will send a signal\n{[0001|1a00]}{color[0400]}only at the exact moment when  is pressed{color[ffff]}{[0001|ffff]}.\nNot for the whole time the button is held down!
107003	You can close this screen.
108	Now, we don't want the player to\npunch just any old time we press .
109	We need it so they {[0001|1a00]}{color[0400]}punch with \nonce they've picked up an apple{color[ffff]}{[0001|ffff]}.
110	That means we're going to\nneed the {[0001|1a00]}{color[0400]}AND Nodon{color[ffff]}{[0001|ffff]}!
111	And OK! If those two are ready,\nI'll send off that signal, got it?
111000	Let's pop the AND Nodon in\nthis blue frame here.
112	Then connect the {[0001|1a00]}{color[0400]}Wormhole-Exit\nNodon {color[ffff]}{[0001|ffff]}to the {[0001|1a00]}{color[0400]}AND Nodon's\ninput 1 port{color[ffff]}{[0001|ffff]}.
113	Next, connect the {[0001|1a00]}{color[0400]}Button Nodon{color[ffff]}{[0001|ffff]} to\nthe {[0001|1a00]}{color[0400]}AND Nodon's input 2 port{color[ffff]}{[0001|ffff]}.
114	Nice! So condition one is\nthe {[0001|1a00]}{color[0400]}apple breaking{color[ffff]}{[0001|ffff]}.
115	And condition two is\npushing {color[0400]}{[0001|1a00]}{[0001|ffff]}{color[ffff]}. That. Is. So. Cool.
116	Once those two are both ready,\nI'll send out a signal.
117	Now you need to connect the\nAND Nodon to the {[0001|1a00]}{color[0400]}Person\nNodon's action port{color[ffff]}{[0001|ffff]}.
118	The action port will only receive a\nsignal {color[0400]}{[0001|1a00]}when pushing  while the\napple is broken{[0001|ffff]}{color[ffff]}.
119	Can you open up the Person\nNodon's settings screen?
120	Now open {[0001|1a00]}{color[0400]}Action{color[ffff]}{[0001|ffff]}.
121	Here we can determine {[0001|1a00]}{color[0400]}what\naction will be taken{color[ffff]}{[0001|ffff]} when the Person\nNodon's action port receives a signal.
122	We'll want to set this to {[0001|1a00]}{color[0400]}Punch{color[ffff]}{[0001|ffff]}, of course!
123	Now we can close this screen.
124	Hoo! That was a lot of work!\nNow we can go and see the\nfruits of our labor.
125	Grab that apple!
126	Now try pressing !
127	All right! Now we're punching!
128	Could you hit retry?
128-01	Can you check by pushing \nthat we can't punch before\npicking up the apple?
128-02	There we go, we can't punch\nbefore we have the apple!
128-03	You ended up grabbing the apple,\nso we'll have to retry that one.
129	So, I know I said we can punch\nnow that we have the apple...
130	but with a punch like that\nwe're never going to get\nthrough all those aliens!
131	Time to boost our punching power\nwith a bit of programming.
132	The punch has to be strong\nenough to smash those aliens.
133	So we're going to need\nthe help of a Nodon that\n{[0001|1a00]}{color[0400]}destroys things{color[ffff]}{[0001|ffff]}.
134	Time to call up our friend\n{[0001|1a00]}{color[0400]}Destroy-Object Nodon{color[ffff]}{[0001|ffff]}!
135	Did you need something, darling?
136	You want something destroyed\nagain, eh? Naughty naughty...
137	Let's make this Nodon\na little smaller, shall we?
138	Now let's take a look\nat the settings screen.
139	Go to {[0001|1a00]}{color[0400]}Properties{color[ffff]}{[0001|ffff]}, and\ndisable {[0001|1a00]}{color[0400]}Visible{color[ffff]}{[0001|ffff]}.
140	Now open up\n{[0001|1a00]}{color[0400]}Destroy What?{color[ffff]}{[0001|ffff]}
141	We want to enable {[0001|1a00]}{color[0400]}Alien{color[ffff]}{[0001|ffff]} only.
142	You can close this.
143	And now open {[0001|1a00]}{color[0400]}Connection Point{color[ffff]}{[0001|ffff]}.
144	To do a punch that breaks objects,\nwe need to connect the Destroy-Object\nNodon to the {[0001|1a00]}{color[0400]}front of the player{color[ffff]}{[0001|ffff]}.
146	Set {[0001|1a00]}{color[0400]}Own Connection Point{color[ffff]}{[0001|ffff]} to {[0001|1a00]}{color[0400]}X-{color[ffff]}{[0001|ffff]}\nand {[0001|1a00]}{color[0400]}Target Connection Point{color[ffff]}{[0001|ffff]} to {[0001|1a00]}{color[0400]}Z-{color[ffff]}{[0001|ffff]}.
147	Now close this screen.
148	That's it for settings.
150	Next, connect the Destroy-Object\nNodon to the Person Nodon.
151	Now the Destroy-Object Nodon is\nlinked to the {[0001|1a00]}{color[0400]}front of the player{color[ffff]}{[0001|ffff]}.
152	In other words, if an alien\nis right in front of the player,\nthat alien can be destroyed.
153	Though that means right now all the\nperson needs to do is get in front of\nan alien and it will be destroyed...
154	Let's change it so that the Destroy-Object\nNodon destroys an alien {[0001|1a00]}{color[0400]}only when we\nthrow a punch{color[ffff]}{[0001|ffff]}.
155	So, we know that when we\npunch, this {[0001|1a00]}{color[0400]}AND Nodon is\nsending out a signal{color[ffff]}{[0001|ffff]}.
156	Now we can connect the AND Nodon\nto the Destroy-Object Nodon!
157	And now we should be able to destroy\naliens by punching them! Ker-smack!
158	Check how that works\non the game screen.
159	Grab the apple,\nand take care of\nthose aliens!
160	Woo-hoo! Now that's what\nI'm talking about!
161	Now we're done making an\n{[0001|1a00]}{color[0400]}item{color[ffff]}{[0001|ffff]} that lets us punch.
162	But there's just one thing\nthat's been bugging me.
163	Is the {[0001|1a00]}{color[0400]}person playing the game{color[ffff]}{[0001|ffff]} going \nto know that when they pick up an apple,\nthey'll be able to punch enemies?
164	Let's do something that {[0001|1a00]}{color[0400]}lets\nthe player know{color[ffff]}{[0001|ffff]} they can punch\nby picking up apples.
165	OK, just one final push.\nTo the program screen!
166	How do we communicate\nthings to the player?
167	We'll use the {[0001|1a00]}{color[0400]}Text-Object Nodon{color[ffff]}{[0001|ffff]}!\nGo ahead and call it up.
168	Ahh, the everyday, magical\npower of words...
169	Even a single word can be all it\ntakes to make someone smile.
171	That was...profound.\nLet's make this guy a little\nbigger and place it above.
172	Take a dive into the\nText-Object Nodon's\nsettings screen.
173	Go to {[0001|1a00]}{color[0400]}Properties{color[ffff]}{[0001|ffff]}, and\n{[0001|1a00]}{color[0400]}enable{color[ffff]}{[0001|ffff]} {[0001|1a00]}{color[0400]}Visible{color[ffff]}{[0001|ffff]} only.
174	Next, set {[0001|1a00]}{color[0400]}Z{color[ffff]}{[0001|ffff]} under {[0001|1a00]}{color[0400]}Size{color[ffff]}{[0001|ffff]}\nto {[0001|1a00]}{color[0400]}0.10m{color[ffff]}{[0001|ffff]}.
175	We'll make the Text-Object Nodon\nwrite a little message to the player.
176	Select {[0001|1a00]}{color[0400]}Edit{color[ffff]}{[0001|ffff]}, then enter\n"{[0001|1a00]}{color[0400]}Press Y to punch.{color[ffff]}{[0001|ffff]}"
177	Did you enter\n"{[0001|1a00]}{color[0400]}Press Y to punch.{color[ffff]}{[0001|ffff]}"?
yes	Yes
no	No
178	OK, now close the\nsettings screen.
179	Next, we'll arrange it so that the\nText-Object Nodon displays the\nmessage when the apple breaks.
180	Can you call up the\n{[0001|1a00]}{color[0400]}Teleport-Object-Entrance\nNodon{color[ffff]}{[0001|ffff]}?
181	Words have considerable\npower...the power to influence\nthe world around us...
182	You can stack this guy on top\nof the Text-Object Nodon.
183	Now I need you to connect\nthe {[0001|1a00]}{color[0400]}Object-Break Nodon {color[ffff]}{[0001|ffff]}to the\n{[0001|1a00]}{color[0400]}Teleport-Object-Entrance Nodon{color[ffff]}{[0001|ffff]}.
184	Now call up a {[0001|1a00]}{color[0400]}Teleport-\nObject-Exit Nodon{color[ffff]}{[0001|ffff]}.
185	One does not simply\ndismiss the power of\nwords.
186	Place this one above the platform...
187	And open its settings screen.
188	Go to {[0001|1a00]}{color[0400]}Properties{color[ffff]}{[0001|ffff]}, and\n{[0001|1a00]}{color[0400]}disable{color[ffff]}{[0001|ffff]} {[0001|1a00]}{color[0400]}Visible{color[ffff]}{[0001|ffff]}.
189	Set {[0001|1a00]}{color[0400]}Z{color[ffff]}{[0001|ffff]} under {[0001|1a00]}{color[0400]}Position{color[ffff]}{[0001|ffff]} to {[0001|1a00]}{color[0400]}0.80m{color[ffff]}{[0001|ffff]}\nso it will appear a bit further\ninside from the platform.
190	Now close the screen.
191	Time to see how this will\nlook on the game screen.
192	Pick up the apple...
193	Ah, there's our message!
194	This way the player knows\nthat they can throw punches.\nPerfect!
195	Let's head back to\nthe program screen.
196	And now it's time for me to say...
197	Step 7 is done!
198-00	Excellent!
198-01	Zzzz... Huh? Oh, good job...\nZZZzzz...
198-02	Entrance A here.\nMission accomplished. Out.
199	That was seriously a marathon of\na step, but you made it. Great work!
200	I just knew you could hang in there\nuntil the end, {[0201]}.
201	All righty! We're getting closer\nand closer to completing our game.
202	In the next step we'll be\nworking on...a {[0001|1a00]}{color[0400]}boss{color[ffff]}{[0001|ffff]}!
203	See you then!
Lesson_2DAction_07.msbt
000	Hey there!\nNice to see you!
001	Let's get started on\nStep 8 of Risky Run.
002	Last time, we made an item\nthat lets us punch enemies\nwhen collected.
003	This time, we're going to work\non a {[0001|1a00]}{color[0400]}boss enemy{color[ffff]}{[0001|ffff]}!
005	To the program screen!
006	Go go go!
007	OK, first off we'll need a nice\narena that's fit for a boss fight.
008	Copy the {[0001|1a00]}{color[0400]}Object Nodon\n{color[ffff]}{[0001|ffff]}for this platform.
009	Make it a little smaller,\nand place it within the\nblue frame.
010	Copy it again.
011	Place it a little lower.
012	Now copy it again.
013	This one goes even lower.
014	Getting tired yet?\nCopy again!
015	But make this one a little bigger.
016	Let's check out our\nnew platforms.
017	Try moving through\nthe platforms a little.
018	I'd say we've got a fun,\nmultileveled game environment!
019	Plenty of room for a death-defying\nboss fight!
020	Now... Let's head back to\nthe program screen and\nmake a {[0001|1a00]}{color[0400]}BOSS{color[ffff]}{[0001|ffff]}.
021	Our boss is going to be\na bigger alien.
022	Could you copy this\nFancy-Object Nodon?
023	Now we can make it HUGE and\nstick it near the end of the stage,\nexactly where a boss should be!
024	But that's not all! We need\nthis boss to come out fighting.
025	Call up a {[0001|1a00]}{color[0400]}Launch-Object Nodon{color[ffff]}{[0001|ffff]}.\nYou want one that launches 10 objects.
026	Well, well, well, if it isn't\n{[0201]}.
027	WHAAAAT?!\nYou want to use me as\na boss attack?!
028	Ever since I was a kid\nI dreamed of being a hero,\nfighting on the side of justice.
029	AND NOW YOU'RE SAYING\nYOU WANT ME TO HELP\nTHE BAD GUY?!
030	I mean... Well... I guess\nthat could be kinda fun...
031	Ahh, why not?\nOK, I GOT THIS.
032	Wow. I'm glad we got that figured out.\nLet's make the Nodon smaller\nand put it right in front of the boss.
033	Now open the Launch-Object\nNodon's settings screen.
034	Open {[0001|1a00]}{color[0400]}Launch Direction{color[ffff]}{[0001|ffff]}.
035	They'll be aiming to the {[0001|1a00]}{color[0400]}left{color[ffff]}{[0001|ffff]},\nso change it to {[0001|1a00]}{color[0400]}X-{color[ffff]}{[0001|ffff]}.
036	Now set {[0001|1a00]}{color[0400]}Launch Speed{color[ffff]}{[0001|ffff]}\nto {[0001|1a00]}{color[0400]}3.00{color[ffff]}{[0001|ffff]}.
037	Set {[0001|1a00]}{color[0400]}Launch Interval{color[ffff]}{[0001|ffff]}\nto {[0001|1a00]}{color[0400]}3.00{color[ffff]}{[0001|ffff]}.
038	Lastly, open {[0001|1a00]}{color[0400]}Material{color[ffff]}{[0001|ffff]}.
039	And choose {[0001|1a00]}{color[0400]}Zero gravity{color[ffff]}{[0001|ffff]}.
040	With these settings, all the shots\nwill {[0001|1a00]}{color[0400]}fly straight ahead without falling{color[ffff]}{[0001|ffff]}.
041	Close the settings screen.
042	Hmm... The shots are going\nto fly forever. That's not so\ngreat, is it?
043	They could cause problems\nwith the game, so we need a\nway to make them {[0001|1a00]}{color[0400]}disappear{color[ffff]}{[0001|ffff]}.
044	To do that, we'll need the help of\nour friend {[0001|1a00]}{color[0400]}Teleport-Object-Entrance Nodon{color[ffff]}{[0001|ffff]}!
045	Yahhmmm... Destruction and creation\nare but two sides of the same coin.
046	Wow, that's pretty heavy.\nLet's make it bigger and put\nit inside the blue frame.
047	Now you need to open the\nNodon's settings screen.
048	Set the {[0001|1a00]}{color[0400]}Teleport ID{color[ffff]}{[0001|ffff]} to {[0001|1a00]}{color[0400]}B{color[ffff]}{[0001|ffff]}...
049	Go to {[0001|1a00]}{color[0400]}Properties{color[ffff]}{[0001|ffff]}, and\n{[0001|1a00]}{color[0400]}disable{color[ffff]}{[0001|ffff]} {[0001|1a00]}{color[0400]}Visible{color[ffff]}{[0001|ffff]}.
050	We're done with\nthis screen.
051	Let's check on how\nthings are going.
052	Wait. Hold up a minute...
053	For now, we can make Person\n{[0001|1a00]}{color[0400]}invulnerable{color[ffff]}{[0001|ffff]}. That'll make it\neasier to check things!
054	Open up the settings\nfor the {[0001|1a00]}{color[0400]}Person Nodon{color[ffff]}{[0001|ffff]}.
055	{[0001|1a00]}{color[0400]}Disable{color[ffff]}{[0001|ffff]} {[0001|1a00]}{color[0400]}Destructible{color[ffff]}{[0001|ffff]} under {[0001|1a00]}{color[0400]}Properties{color[ffff]}{[0001|ffff]}.
056	Close this menu.
057	Aaaand...take two!\nLet's see how it looks.
058	Keep defeating the aliens\nuntil you get to the boss.
059	Shots incoming!
060	Yikes, that is one\nHUGE alien!
061	Give it a good thumpin'!
062	Yes! Very nice!
063	Though it's not like you were\nin any danger this time, so it\nwas kind of easy...
064	But if you play it for real, you can\nbet it'll be tough to dodge those\nshots. That's just good programming.
065	Only... Did you happen\nto notice anything weird?
066	Even though you beat\nthe boss, {[0001|1a00]}{color[0400]}shots are\nstill being fired{color[ffff]}{[0001|ffff]}!
067	We can fix it so {[0001|1a00]}{color[0400]}shots\nwon't be fired after the\nboss is defeated{color[ffff]}{[0001|ffff]}.
068	And how are we going to {[0001|1a00]}{color[0400]}stop{color[ffff]}{[0001|ffff]}\nthe shots from firing?
069	We can {[0001|1a00]}{color[0400]}connect{color[ffff]}{[0001|ffff]} another Nodon to the\nLaunch-Object Nodon, {[0001|1a00]}{color[0400]}giving it a signal{color[ffff]}{[0001|ffff]}\nto shoot.
070	Then when the boss is destroyed\nwe can {[0001|1a00]}{color[0400]}stop the signal{color[ffff]}{[0001|ffff]}, which will\nstop shots from being fired.
071	First we'll need a Nodon\nthat observes {[0001|1a00]}{color[0400]}whether or\nnot the boss alien is destroyed{color[ffff]}{[0001|ffff]}.
072	Checking whether or not something is\ndestroyed... Usually that would be\na job for Object-Break Nodon.
073	But Object-Break Nodon will send out\na signal {[0001|1a00]}{color[0400]}when any alien is defeated,\nnot just the boss{color[ffff]}{[0001|ffff]}.
074-01	So the usual method for\nfixing this problem won't cut it.
075	Can you go to {[0001|1a00]}Objects {[0001|ffff]}{[0001|0400]}{[0001|ffff]} {[0001|1a00]}Sensors {[0001|ffff]}{[0001|0400]}{[0001|ffff]}\n{[0001|1a00]}Destroyed Sensor{[0001|ffff]} and call up\nthe {[0001|1a00]}{color[0400]}Destroyed-Sensor Nodon{color[ffff]}{[0001|ffff]}?
076	Hello! I'm {[0001|1a00]}{color[0400]}Destroyed-Sensor\nNodon{color[ffff]}{[0001|ffff]}! Yes indeed!
077	I'll do my absolute, utmost best\nto watch over you! Nothing\nunsafe will happen on my watch!
078	And, if somehow something\ngets destroyed despite my\nunwavering diligence...
079	I will do my utmost, absolute very\nbest to let you know the instant\nit happens! I SWEAR IT!
080	Heh. It's a bit in-your-face, but that's\nDestroyed-Sensor Nodon for you.
081	It keeps an eye on whether the\n{[0001|1a00]}{color[0400]}object it's connected to{color[ffff]}{[0001|ffff]} is\n{[0001|1a00]}{color[0400]}destroyed or not{color[ffff]}{[0001|ffff]}.
082	It {[0001|1a00]}{color[0400]}only looks at the object it's\nconnected to{color[ffff]}{[0001|ffff]}, so it works a little\ndifferently than Object-Break Nodon.
083	Yes indeed! I'll keep watch over\neverything, keep it safe, keep it warm,\ngive it a protective squeeze! Safety hug!
084	Anyway, let's move this\nNodon a little.
085	Now connect the {[0001|1a00]}{color[0400]}Destroyed-Sensor\nNodon{color[ffff]}{[0001|ffff]} to the {[0001|1a00]}{color[0400]}Fancy-Object Nodon{color[ffff]}{[0001|ffff]}.
086	Next, open the Destroyed-Sensor\nNodon's settings screen.
087	{[0001|1a00]}{color[0400]}Disable Visible{color[ffff]}{[0001|ffff]} under\n{[0001|1a00]}{color[0400]}Properties{color[ffff]}{[0001|ffff]}.
088	Now you can close\nthis screen.
089	I'll devote my entire being to watching over\nthis boss alien. I'll try not to be too obvious.\nYOU CAN COUNT ON ME!
090	Knock 'em dead, darling! ♥
091	So to recap, the Destroyed-Sensor Nodon\nwill {[0001|1a00]}{color[0400]}send out a signal{color[ffff]}{[0001|ffff]} when the boss alien\nis {[0001|1a00]}{color[0400]}destroyed{color[ffff]}{[0001|ffff]}.
092	But we also want the Launch-Object\nNodon to {[0001|1a00]}{color[0400]}receive a signal{color[ffff]}{[0001|ffff]} from the\nboss alien {[0001|1a00]}{color[0400]}while it isn't destroyed{color[ffff]}{[0001|ffff]}.
092000	So we want a Nodon that will {[0001|1a00]}{color[0400]}send\nout a signal{color[ffff]}{[0001|ffff]} while the Destroyed-Sensor\nNodon {[0001|1a00]}{color[0400]}isn't sending its own signal{color[ffff]}{[0001|ffff]}.
092001	Looks like we need a Nodon\nwho likes to do the {[0001|1a00]}{color[0400]}opposite{color[ffff]}{[0001|ffff]}\nof everyone else...
093	Who do you think that might be?\nTime to call up our charming friend\n{[0001|1a00]}{color[0400]}NOT Nodon{color[ffff]}{[0001|ffff]}!
094	Tee-hee-hee-heeee!\nYou can't say I'm not\nunafraid of no boss alien!
095	Let's stick the NOT Nodon up\nnext to the Destroyed-Sensor Nodon.
096	Now we can {[0001|1a00]}{color[0400]}connect{color[ffff]}{[0001|ffff]}\nthem together.
097	Now connect the {[0001|1a00]}{color[0400]}NOT Nodon{color[ffff]}{[0001|ffff]}\nto the {[0001|1a00]}{color[0400]}Launch-Object Nodon{color[ffff]}{[0001|ffff]}.
098	When the {[0001|1a00]}{color[0400]}boss alien is destroyed{color[ffff]}{[0001|ffff]},\nshots will {[0001|1a00]}{color[0400]}stop firing{color[ffff]}{[0001|ffff]}! Yay!
099	Check it out on\nthe game screen!
100	Give the boss a good thumping.
101	...
102	Perfect! No more\nshots flying around.
103	Our work on the\nboss is finished.
104	However...I think that defeating\nthe boss should have {[0001|1a00]}{color[0400]}more of\nan impact{color[ffff]}{[0001|ffff]}, don't you?
106	On the program screen, we can\nadd a sound effect for when we\ndefeat the boss. Let's do it.
107	In order to play sound effects, you'll\nneed to call up a {[0001|1a00]}{color[0400]}Play-Sound Nodon{color[ffff]}{[0001|ffff]}.
108	If it's sound effects you want,\nI'm your Nodon! KA-CHING!
110	Let's open up the Play-Sound\nNodon's settings screen.
111	Select {[0001|1a00]}{color[0400]}Funny{color[ffff]}{[0001|ffff]}.
112	And then select {[0001|1a00]}{color[0400]}Huge explosion{color[ffff]}{[0001|ffff]}!
113	That's it! That's the sort\nof thing you should hear\nwhen taking out a boss.
114	Now we can close this.
115	And leave the settings screen.
116	Next, connect the {[0001|1a00]}{color[0400]}Destroyed-\nSensor Nodon {color[ffff]}{[0001|ffff]}to the {[0001|1a00]}{color[0400]}Play-Sound\nNodon{color[ffff]}{[0001|ffff]}'s play port.
117	How will this work\non the game screen?
118	Listen for the sound when\nyou defeat the boss...
120	Now that's a boss-busting\nsound if I ever heard one!
122	I think it's time to turn off\nthe player's invulnerability.
123	Let's see the Person\nNodon's settings screen.
124	Go to {[0001|1a00]}{color[0400]}Properties{color[ffff]}{[0001|ffff]}, and\n{[0001|1a00]}{color[0400]}enable Destructible{color[ffff]}{[0001|ffff]}.
125	And voilà!
126	We've put the player\nback to normal.
127	Time to check\nthe game screen.
128	Yep, if the player bumps\ninto a shot or an alien,\nthey get destroyed.
129	You should totally challenge the boss!\nDo you have what it takes?
130	Once you're done, head back\nto the program screen.
131	All right! You did it!
132	That's the end of Step 8!
133-00	You're safe! Great!
133-01	Congratulations! KABLAMO!
133-02	ALL RIGHT, BUDDY!
134	We're done making our boss!
135	Next we're going to finish\nthis game...by making a {[0001|1a00]}{color[0400]}goal{color[ffff]}{[0001|ffff]}.
136	Risky Run is nearly complete.
137	I'll be waiting at the next step.
Lesson_2DAction_08.msbt
000	Come on in!
001	Things are really coming to\na close for our Risky Run build.
002	We've been filling our level with\nall kinds of things: mechanisms,\nitems, bosses...
003	This time we'll be making a {[0001|1a00]}{color[0400]}goal{color[ffff]}{[0001|ffff]}.\nThe end is in sight.
004	Without further ado, let's\nget to the program screen.
005	Go go go!
006	To start off, let's make a few\nmore platforms for our level.
007	Copy this Object Nodon.
008	Make it a little smaller, and\nplace it within the blue frame.
009	Make another copy.
010	We should make this one bigger\nand place it within the frame.
011	Here we can put down a\n{[0001|1a00]}{color[0400]}treasure chest{color[ffff]}{[0001|ffff]} as a goal.
012	Go to {[0001|1a00]}Fancy Objects {[0001|ffff]}{[0001|0400]}{[0001|ffff]} {[0001|1a00]}Rectangular\nFancy Objects {[0001|ffff]}{[0001|0400]}{[0001|ffff]} {[0001|1a00]}Treasure Chest{[0001|ffff]} to call up\nthe {[0001|1a00]}{color[0400]}Fancy-Object Nodon{color[ffff]}{[0001|ffff]}.
013	Ooh, a treasure chest! I'm sure\nthere's something wonderful\ninside this gorgeous little thing! ♥
014	Put this Fancy-Object Nodon\nat the end of the platform.
015	And open its settings screen.
016	Under {[0001|1a00]}{color[0400]}Properties{color[ffff]}{[0001|ffff]},\ndisable {[0001|1a00]}{color[0400]}Movable{color[ffff]}{[0001|ffff]}.
017	Now you can close this.
018	And move where the player will\nteleport to. That should make\nchecking the level easier.
019	Place this {[0001|1a00]}{color[0400]}Teleport-Object-Exit\nNodon{color[ffff]}{[0001|ffff]} in the blue frame.
020	OK!
021	Let's check all this\non the game screen.
022	Travel along the platforms.
023	There's our treasure chest!
024	I think we need to make it so\nthat touching the treasure chest\nstarts a {[0001|1a00]}{color[0400]}goal sequence{color[ffff]}{[0001|ffff]}.
025	To the program screen!
026	Right now we need to determine\n{[0001|1a00]}{color[0400]}whether or not the treasure chest\nhas been touched{color[ffff]}{[0001|ffff]}.
027	To do that, we need to call\nup a {[0001|1a00]}{color[0400]}Touch-Sensor Nodon{color[ffff]}{[0001|ffff]}!
028	Yikes! You can't just call\nsomebody up out of the blue!\nYou startled me!
029	I thought I wasn't even\ngonna be in this one...
030	Let's make this poor Nodon\na bit bigger and stack it on top\nof the Fancy-Object Nodon.
031	Now open the Touch-Sensor\nNodon's settings screen.
032	Go to {[0001|1a00]}{color[0400]}Properties{color[ffff]}{[0001|ffff]}, and\n{[0001|1a00]}{color[0400]}disable{color[ffff]}{[0001|ffff]} {[0001|1a00]}{color[0400]}Visible{color[ffff]}{[0001|ffff]}.
033	Then open {[0001|1a00]}{color[0400]}Check What?{color[ffff]}{[0001|ffff]}
034	{[0001|1a00]}{color[0400]}Enable Person{color[ffff]}{[0001|ffff]} only.
035	Close this screen.
036	Close the settings\nscreen.
037	Next up, we want a {[0001|1a00]}{color[0400]}sound to play{color[ffff]}{[0001|ffff]}\nwhen we {[0001|1a00]}{color[0400]}touch the treasure chest{color[ffff]}{[0001|ffff]}.
038	Can you call up a \n{[0001|1a00]}{color[0400]}Play-Sound Nodon{color[ffff]}{[0001|ffff]}?
039	Doot doo doooot!\nNeed something congratulatory?\nLeave it to me!
041	Open up the Play-Sound Nodon's\nsettings screen.
042	Open {[0001|1a00]}{color[0400]}Jingles{color[ffff]}{[0001|ffff]}.
043	Select {[0001|1a00]}{color[0400]}Super happy{color[ffff]}{[0001|ffff]}.
044	Close this screen.
045	And close the settings screen.
046	Connect the {[0001|1a00]}{color[0400]}Touch-Sensor\nNodon{color[ffff]}{[0001|ffff]} to the {[0001|1a00]}{color[0400]}Play-Sound\nNodon{color[ffff]}{[0001|ffff]}'s {[0001|1a00]}play port{[0001|ffff]}.
047	When you touch that treasure\nchest, prepare to be amazed!\nTA-DA!
048	I think just having a sound alone\nisn't going to be enough. This is the\nend of a level we're talking about here...
049	Call up a {[0001|1a00]}{color[0400]}party popper\nEffect Nodon{color[ffff]}{[0001|ffff]}!
050	All right, bud. It's yer\npal, Effect Nodon.
051	This game's called Risky Bun, right?\nYeah, I've had a few o' them in my time, lemme\ntell ya. One time I had this blueberry muffin...
052	It'd been in its pack for a while, an' the blue\nmighta been a bit green, but I was super hungry,\nand I figured it'd be fine...
053	Anyway, I bit into it, and it shouted at me!\nY'see, it'd been stewin' in its pack so long it'd\nactually achieved some semblance of sentience!
054	Eh? Yer sayin' the game's called Risky Run?\nOh, wow. Well, I've had a few o' them in my\ntime, lemme tell ya. This one time...
055	Erm... I'll forget this conversation\nif you will, {[0201]}.\nLet's just move Effect Nodon...
059	Now, connect the {[0001|1a00]}{color[0400]}Touch-Sensor\nNodon{color[ffff]}{[0001|ffff]} to the {[0001|1a00]}{color[0400]}Effect Nodon{color[ffff]}{[0001|ffff]}.
060	Lastly, when we pick up\nthe treasure chest, we want\nthe {[0001|1a00]}{color[0400]}game to reset{color[ffff]}{[0001|ffff]} itself.
061	To do that we'll need\na {[0001|1a00]}{color[0400]}Timer Nodon{color[ffff]}{[0001|ffff]}.
062	Place it below the\nPlay-Sound Nodon.
063	And open the Timer\nNodon's settings screen.
064	Set {[0001|1a00]}{color[0400]}Output after How Many\nSeconds?{color[ffff]}{[0001|ffff]} to {[0001|1a00]}{color[0400]}3.00{color[ffff]}{[0001|ffff]}.
065	Now you can close this.
066	Connect the {[0001|1a00]}{color[0400]}Touch-Sensor\nNodon{color[ffff]}{[0001|ffff]} to the {[0001|1a00]}{color[0400]}Timer Nodon{color[ffff]}{[0001|ffff]}.
067	Now we'll call in the\n{[0001|1a00]}{color[0400]}Retry Nodon{color[ffff]}{[0001|ffff]} for help.
068	We'll just put it next to\nthe Timer Nodon.
069	And then connect\nthe two together.
070	All righty! That's one goal\ndone and dusted!
071	But, will it all work together?\nLet's find out!
072	Touch the treasure chest!
073	The game did an automatic restart\nafter the goal sequence!
074	Now we're finished with\nthe goal!
075	Let's head to the\nprogram screen.
076	Aaand...here it comes!
077	Step 9 is done!
078-00	Eek! Erm, c-congrats.
078-01	Good goin', pal.
078-02	Woop woop woop!
079	With this goal, Risky Run\nis all but done.
080	All that's left is the\nnext step...
081	It's all about putting your own\npersonal spin on the game.
082	See you in the final step!
Lesson_2DAction_09.msbt
000	Welcome to the last\nstep of Risky Run!
001	We've done all kinds of work\non this game, and now we're\nfinally at the finishing touches.
002	In this last step you're going\nto put your own personal\nspin on the game.
003	First, we'll make a little adjustment\nto the shots the boss fires.
004	OK, you know the drill...
005	To the program screen!
006	Let's get to it!
007	Here we have our {[0001|1a00]}{color[0400]}Launch-\nObject Nodon{color[ffff]}{[0001|ffff]}.
008	Did you know we can connect\nit to a {[0001|1a00]}{color[0400]}Texture Nodon{color[ffff]}{[0001|ffff]}?
009	If we link up our\nTexture Nodon here...
010	you can {[0001|1a00]}{color[0400]}add your own\ndrawing{color[ffff]}{[0001|ffff]} to what's being\nfired! Amazing, right?
011	But first we need to prepare\nby opening up the {[0001|1a00]}{color[0400]}Launch-Object\nNodon{color[ffff]}{[0001|ffff]}'s settings screen.
012	Set the {[0001|1a00]}{color[0400]}Object Shape{color[ffff]}{[0001|ffff]} to {[0001|1a00]}{color[0400]}Box{color[ffff]}{[0001|ffff]}.
013	Then, go to {[0001|1a00]}{color[0400]}Properties{color[ffff]}, {[0001|ffff]}and\n{[0001|1a00]}{color[0400]}disable{color[ffff]}{[0001|ffff]} {[0001|1a00]}{color[0400]}Visible{color[ffff]}{[0001|ffff]}.
014	That's it for the groundwork.
015	Now call up a\n{[0001|1a00]}{color[0400]}Texture Nodon{color[ffff]}{[0001|ffff]}.
016	A picture is like a mirror\nthat reflects who you are.
017	No need to fear! Just draw\nwhatever you can come up\nwith.
017000	Let's make this the same\nsize as Launch-Object Nodon\nand place it above.
018	Now we just connect the two...
019	And we'll take a look at the\nTexture Nodon's settings screen.
020	Let's open {[0001|1a00]}{color[0400]}Texture Face{color[ffff]}{[0001|ffff]}.
021	You want to\n{[0001|1a00]}{color[0400]}enable{color[ffff]}{[0001|ffff]} just {[0001|1a00]}{color[0400]}Z-{color[ffff]}{[0001|ffff]}.
022	Now you can close\nthis screen.
023	OK. Now. Let's draw something!
024	It can be anything you want.\nWhatever comes to mind.
025	Once you're done, you\ncan close the settings screen.
026	Now, we'll do our usual\nthing before checking\nour work.
027	That's right, we'll move where\nthe player teleports to!
028	Place this {[0001|1a00]}{color[0400]}Teleport-Object-Exit\nNodon{color[ffff]}{[0001|ffff]} in the blue frame.
029	OK, let's take a look\nat what gets fired,\nshall we?
030	There are your lethal creations,\n{[0201]}!
031	You could totally change the\nfeel of it by changing the image\nto lightning, fire, or whatever.
032	Now switch to the\nprogram screen.
033	I think there's something \nelse this game might be\nlacking...
034	And that's some music!\nWe need some good\nsound in the background.
035	Time to call up a\n{[0001|1a00]}{color[0400]}Background-Music Nodon{color[ffff]}{[0001|ffff]}.
036	Yeah, baby! You're buildin' up those\ngame-making skills! I gotta shout\n'cuz it's giving me chills!
037	Unveilin' programming secrets\nin the light of day! You're makin'\na game anybody can play!
038	We're also going to need\na {[0001|1a00]}{color[0400]}Constant Nodon{color[ffff]}{[0001|ffff]} to\ntrigger the music.
039	Place the Constant Nodon next\nto the Background-Music Nodon.
040	And connect it to the Background-\nMusic Nodon's {[0001|1a00]}play{[0001|ffff]} port.
041	Now open up the Background-\nMusic Nodon's settings screen.
042	Could you open the {[0001|1a00]}{color[0400]}Theme {color[ffff]}{[0001|ffff]}settings?
043	Next, select {[0001|1a00]}{color[0400]}Skipping{color[ffff]}{[0001|ffff]}.
044	I think this fits the feel of our\ngame pretty well, don't you?
045	OK, you can close this screen.
046	Now, let's see if that works.
047	Wow, having {[0001|1a00]}{color[0400]}music{color[ffff]}{[0001|ffff]} on\nreally does give things a\ndifferent atmosphere!
048	Off to the program screen!
049	So now we're done\nwith preparations.
050	All that's left now is for you\nto put some finishing touches\non this game yourself.
051	There's all kinds of things you can do!\nYou could use {[0001|1a00]}{color[0400]}Texture Nodon{color[ffff]}{[0001|ffff]} to\ndraw something for the boss's attacks...
052	You could adjust the {[0001|1a00]}{color[0400]}background\nmusic{color[ffff]}{[0001|ffff]} however you want...
053	Or you could change the\n{[0001|1a00]}{color[0400]}colors{color[ffff]}{[0001|ffff]} of the level's platforms.
054	Plus, you can freely move this\n{[0001|1a00]}{color[0400]}Teleport-Object-Exit Nodon{color[ffff]}{[0001|ffff]} around.
055	Using that to check your progress\nwhile you work should make things\neasier.
056	As always, when you're done,\njust push the {[0001|1a00]}{color[0400]}Done{color[ffff]}{[0001|ffff]} button.
057	All that's left to say is...
058	Start programming!
059	Done already?
060	In that case, we can get\nrid of this {[0001|1a00]}{color[0400]}Teleport-Object-\nEntrance Nodon{color[ffff]}{[0001|ffff]}.
061	And we'll remove this {[0001|1a00]}{color[0400]}Teleport-\nObject-Exit Nodon{color[ffff]}{[0001|ffff]}.
062	OK, show me the game screen!
063	Ooh! So this is Risky Run,\n{[0201]}-style!
063-01	Oh, I see! Sometimes it's\ngood to leave things as\nthey are too.
064	{[c903]}{[0201]}, I can\nfeel your style just flowing\nfrom the game screen!
065	Well, here we are at the end.\nWe're finally done with building\nRisky Run.
066	When you're done, let's go\nto the program screen.
067	There was some pretty high-level\nstuff we had to program for this\ngame.
068	But I just knew you\nhad what it takes,\n{[0201]}!
069	Now that we're done with this game, we\ncan line it up with the others like before.
069-01	Back to the menu we go!
WireWarpOutNode	This is Exit A. Eagle has\nbuilt the nest. Repeat: Eagle\nhas built the nest. Over.
PlzPositionSensorNode	Awesome! This game looks\nlike so much fun!
PlzBindCommanderNode	Delicious...
PlzJointHingeNode	You're amazing,\n{[0201]}!
PlzJointSingleAxisSliderNode	I'll follow you forever,\n{[0201]}!
FlagNode	I'm shocked! I close my eyes\nfor a second, and then I find\nsomebody's built a whole game!
PlzBrokenSensorNode	If it means we can get things like this, I'll\nkeep watch through all sorts of adverse\nconditions! Wind! Hail! Volcanic eruption!
PlzRigidNode	Nice work, {[0201]}.\nKnew you could do it.
Lesson_3DAction_00.msbt
000	Hello!
001	Here we are!\nThe final lesson!
002	This is the very last time that we'll\nbe working through a lesson together...
003	Hello hello!
004	Hm?\nOh... Hello?
005	Is it OK if I listen in on the lesson?\nYou won't even know I'm here!
006	I mean... Sure? Just be sure\nyou don't get in the way!
007	Yep! Just pretend I'm not here.\nOK, on with the lesson!
008	Uh... On with the lesson indeed!
009	The final game we'll be creating\nis {[0001|1a00]}{color[0400]}Super Person World{color[ffff]}{[0001|ffff]}!
010	It'll be a 3D action game, and it'll have\nyou traversing the level not only left to\nright but front to back too.
010-01	It's quite the fitting finale for our\ninteractive lessons, don't you think?
011	OK!\nLet's get programming!
012	First, let's switch to the {[0001|1a00]}{color[0400]}overhead view{color[ffff]}{[0001|ffff]}.\nIt'll make things a bit easier for us.
013	Since we'll be placing objects {[0001|1a00]}{color[0400]}along the back-\nand-forth dimension{color[ffff]}{[0001|ffff]}, (that's the {[0001|1a00]}{color[0400]}Z dimension{color[ffff]}{[0001|ffff]}) it'll\nbe much easier to work if we're looking down.
014	OK, so if you could {[0001|1a00]}{color[0400]}change\nthe viewpoint{color[ffff]}{[0001|ffff]} for me...
015	Next, let's get rid of the original\nfloor. Call up a {[0001|1a00]}{color[0400]}World Nodon{color[ffff]}{[0001|ffff]} to do that.
016	Finally, the apex, the omega\nof the interactive lessons...
017	I foresee new awakenings...
020	Open up the World Nodon's\nsettings screen.
020-000	And set the {[0001|1a00]}{color[0400]}World Shape\n{color[ffff]}{[0001|ffff]}to {[0001|1a00]}{color[0400]}None{color[ffff]}{[0001|ffff]}.
020-001	Close the settings screen.
020000	Now move the World Nodon\nso that it's underneath.
021	Moving on...
021-01	Since we've lost the original floor,\nwe'll need to call up an {[0001|1a00]}{color[0400]}Object Nodon{color[ffff]}{[0001|ffff]}\nto act as the level's first {[0001|1a00]}{color[0400]}platform{color[ffff]}{[0001|ffff]}.
022	...Ahem.\nOK! Call up a {[0001|1a00]}{color[0400]}box Object Nodon{color[ffff]}{[0001|ffff]}.
023	Ayup! Need my help, do ya?\nI reckon you'll be needing\nquite a few of us!
025	OK, you'll have to make this Object\nNodon as huge as possible.
026	So open up the Object Nodon's\nsettings screen.
027	This one will function as a platform,\nso for the {[0001|1a00]}{color[0400]}Properties{color[ffff]}{[0001|ffff]}, please {[0001|1a00]}{color[0400]}enable\nVisible{color[ffff]}{[0001|ffff]} and {[0001|1a00]}{color[0400]}Solid{color[ffff]}{[0001|ffff]} only.
028	For the {[0001|1a00]}{color[0400]}color{color[ffff]}{[0001|ffff]}, let's go with a nice {[0001|1a00]}{color[0400]}green{color[ffff]}{[0001|ffff]}.
029	Close the settings.
029-01	We're going to adjust the height\nof the platform here, so switch to\nthe {[0001|1a00]}{color[0400]}side view{color[ffff]}{[0001|ffff]} to make that easier.
029-02	Move it down a little bit.
029-03	Awesome!
029-04	Now that we've done that, let's\nreturn to the overhead view.
030	And let's see how it looks on the game screen!
031	Hey! That's my line!
032	Whew... Just keep calm, Bob.\nOK... Time to head over to the\ngame screen.
033	Aaaand we've got a big green box\nfloating serenely in space.
034	We'll be arranging a whole set\nof these platforms to create our\nlevel, you see...
035	Hey! Enough! Stop\ngetting ahead of me!
036	You said you wouldn't\nbe in the way!
037	OH! Sorry...\nI'll be quiet.
038	We'll see...\nNext we'll need to set out a {[0001|1a00]}{color[0400]}person{color[ffff]}{[0001|ffff]}\nto serve as our player character.
039	To the program screen!
040	Call up a {[0001|1a00]}{color[0400]}Person Nodon{color[ffff]}{[0001|ffff]}.
041	Hey, peeps!\nLast lesson, eh?
042	I'm so proud that you chose me to\nbe the hero of your final masterpiece!\nThanks!
048	Now, we'll need to set up some\ncontrols for the Person Nodon.
049	So let's call up a {[0001|1a00]}{color[0400]}Stick Nodon{color[ffff]}{[0001|ffff]}.\nYou'll first want one for {[0001|1a00]} Left/Right{[0001|ffff]}.
050	Boing!
050000	Move the Stick Nodon over\nto the left a little bit.
051	Connect the {[0001|1a00]}{color[0400]}Stick Nodon{color[ffff]}{[0001|ffff]} to the\n{[0001|1a00]}{color[0400]}Person Nodon{color[ffff]}{[0001|ffff]}'s {[0001|1a00]}{color[0400]}left/right port{color[ffff]}{[0001|ffff]}.
052	We're going to need a {[0001|1a00]}{color[0400]}Stick Nodon {color[ffff]}{[0001|ffff]}to\nhandle the up and down movements too.\nCall one up for {[0001|1a00]} Up/Down{[0001|ffff]}.
053	Wahoo!
053000	Let's put this Stick Nodon on top.
054	Connect the {[0001|1a00]}up/down{[0001|ffff]} {[0001|1a00]}{color[0400]}Stick Nodon{color[ffff]}{[0001|ffff]} to the\n{[0001|1a00]}{color[0400]}Person Nodon{color[ffff]}{[0001|ffff]}'s {[0001|1a00]}{color[0400]}forward/back port{color[ffff]}{[0001|ffff]}.
056	And how about calling up\na {[0001|1a00]}{color[0400]}Button Nodon for {color[ffff]}{[0001|ffff]}?
057	Yo!\nDon't stop mashing buttons 'til the\nbutton-bashing's done! Mash away!
057000	Let's stash the Button Nodon\nbelow the others.
058	Then connect the Button Nodon to the\n{[0001|1a00]}{color[0400]}jump port{color[ffff]}{[0001|ffff]} on the Person Nodon.
059	OK... Now...\nLet's check it out on the game screen!
060	Try moving the player\nwith  and .
061	Awesome!
062	Next, let's set up the {[0001|1a00]}{color[0400]}camera{color[ffff]}{[0001|ffff]} to\nmake our game easier to play.
063	To the program screen!
064	Call up a {[0001|1a00]}{color[0400]}Camera Nodon{color[ffff]}{[0001|ffff]}.
065	Just point me in the direction of \nwhatever needs camera-ing!
066	Hello!\nIt'll be me, mostly.
067	Got you covered!\nNo problem.
068	{[0001|1a00]}{color[0400]}Connect{color[ffff]}{[0001|ffff]} the {[0001|1a00]}{color[0400]}Camera Nodon{color[ffff]}{[0001|ffff]}\nto the {[0001|1a00]}{color[0400]}Person Nodon{color[ffff]}{[0001|ffff]}.
069	Now open up the settings screen\nfor the Camera Nodon.
072	Now set the {[0001|1a00]}{color[0400]}Offset Distance{color[ffff]}{[0001|ffff]}.\n{[0001|1a00]}{color[0400]}4.00{color[ffff]}{[0001|ffff]} for {[0001|1a00]}{color[0400]}Y{color[ffff]}{[0001|ffff]}, {[0001|1a00]}{color[0400]}-6.00{color[ffff]}{[0001|ffff]} for {[0001|1a00]}{color[0400]}Z{color[ffff]}{[0001|ffff]}.
073	OK, now close the\nsettings screen.
074	Let's see how that looks\nover on the game screen.
075	Oh!\nWhat a great angle!
076	The camera is all set up!
077	Uhm... Are you sure about that?
078	I thought I told you to\nbutt out already?
079	You could make it so that  can\n{[0001|1a00]}{color[0400]}control the camera's movement{color[ffff]}{[0001|ffff]}...
080	That's what you'd hope for\nin a 3D action game, right?
081	Actually, I hadn't really\nplanned to...
082	But it's so cool!\nLet's give it a try!
083	To the program screen,\n{[0201]}!
084	...
085	Call up a {[0001|1a00]}{color[0400]}Stick Nodon{color[ffff]}{[0001|ffff]} for\n{[0001|1a00]} Up/Down{[0001|ffff]}, please!
086	Boing boing boooing!\nWheee!
086000	Place this Stick Nodon up above.
087	Now connect this {[0001|1a00]}{color[0400]}Stick Nodon{color[ffff]}{[0001|ffff]}'s output\nto the Camera Nodon's {[0001|1a00]}{color[0400]}up/down{color[ffff]}{[0001|ffff]} port.
087-01	By connecting the output of the {[0001|1a00]}{color[0400]}Stick Nodon{color[ffff]}{[0001|ffff]} to\nthe {[0001|1a00]}{color[0400]}Camera Nodon's input port{color[ffff]}{[0001|ffff]}, you'll be able to\n{[0001|1a00]}{color[0400]}turn the camera with the control stick{color[ffff]}{[0001|ffff]}!
088	Let's call another {[0001|1a00]}{color[0400]}Stick Nodon{color[ffff]}{[0001|ffff]} for\n{[0001|1a00]} Left/Right{[0001|ffff]}.
089	This {[0001|1a00]}{color[0400]}Stick Nodon{color[ffff]}{[0001|ffff]} connects to the\nCamera Nodon's {[0001|1a00]}{color[0400]}horizontal port{color[ffff]}{[0001|ffff]}.
090	Thanks to all that, we ought to be\nable to control the camera's\nmovement with !
091	Hey! This is MY lesson!
092	Let's check it out on the game screen!
093	Try using  to move the camera around.
094	Did you see that?\nYou moved the camera!
095	Oh... Wow!
096	Now we've got exactly the\nkind of camera control you'd\nexpect in a 3D action game!
097	Oh... I... Uh...
098	Sorry. I guess I did step on your toes\na little bit there. Please...carry on.
099	I mean, I have to admit... Controlling\nthe camera with the stick is a pretty\ncool feature.
100	You actually made the\ngame a little better...
101	Anyway, let's get back on track.\nWe need to make some adjustments\nto the {[0001|1a00]}{color[0400]}Person Nodon{color[ffff]}{[0001|ffff]}.
102	To the program screen!
103	Open up the settings screen\nfor the Person Nodon.
104	First, set the {[0001|1a00]}{color[0400]}Y-Axis Rotation\n{color[ffff]}{[0001|ffff]}to {[0001|1a00]}{color[0400]}180.00{color[ffff]}{[0001|ffff]}.
105	This will turn the player so that\nthey're pointed forward, that is,\nin the {[0001|1a00]}{color[0400]}Z+ direction{color[ffff]}{[0001|ffff]}, to be precise.
106	While we're at it, let's set the\nplayer's {[0001|1a00]}{color[0400]}color{color[ffff]}{[0001|ffff]} to {[0001|1a00]}{color[0400]}red{color[ffff]}{[0001|ffff]} too.
107	Oh, really? Actually, to be honest,\nI think blue would be much nicer...
108	Erm... Alice! We talked about this!\nYou said you'd stay out of our way!
109	Now... Since we can hear ourselves\nthink, let's close the settings screen.
110	Time to check it out on the game screen!
111	Our player is facing forward.\nAnd it's a dashing red!
112	Blue would have been\nbetter though...
113	Looking good!\nLet's head back to\nthe program screen.
114	So... It seems...
115	Step 1 is complete!
116-00	Great job, peeps!
116-01	Wahoo! Nice work!
116-02	Looks good!
117	Sorry if that was longer than expected!\nWe took a bit of a detour along the way,\ndidn't we?
118	I mean, it all worked out, didn't it?
119	Ugh. Next time around, we'll be\ncreating a setup to {[0001|1a00]}{color[0400]}automatically retry\nwhen the player falls off the platform{color[ffff]}{[0001|ffff]}.
120	See you in the next step!
121	See you!
Lesson_3DAction_01.msbt
000	Hello again!
001	Hello hello!\nGreat to see you again, {[0201]}!
002	All righty!\nSo we're all set to continue with programming\nfor {[0001|1a00]}{color[0400]}Super Person World{color[ffff]}{[0001|ffff]}!
003	Alice!\nYou're going to sit in with us...again?
004	Yep!\nIn fact, I'm going to sit in on all the steps!\nCool, huh?
005	Well...\nJust try not to get in the way, OK?
006	Now. Where were we?\nLet's do a quick review of what\nwe've accomplished so far.
007	In the last step, we built a platform\nand made it so that we could control\nthe player with {color[0400]}{[0001|1a00]}{[0001|ffff]}{color[ffff]} and {color[0400]}{[0001|1a00]}{[0001|ffff]}{color[ffff]}.
008	And I showed you how to set up\nthe {[0001|1a00]}{color[0400]}camera {color[ffff]}{[0001|ffff]}so that it could be controlled\nwith {color[0400]}{[0001|1a00]}{[0001|ffff]}{color[ffff]}! Don't forget about that!
009	And...this time...we're going to arrange\nit so that {[0001|1a00]}{color[0400]}the player breaks when they\nfall off the platform{color[ffff]}{[0001|ffff]}.
010	To the program screen!
011	First things first, let's call up\na {[0001|1a00]}{color[0400]}Location-Sensor Nodon{color[ffff]}{[0001|ffff]}.
012	Oh my! We've finally\nmade it to the last lesson!
012000	Move the Location-Sensor Nodon\nup above here.
013	And open up its settings.
014	{[0001|1a00]}{color[0400]}Disable Visible{color[ffff]}{[0001|ffff]} under {[0001|1a00]}{color[0400]}Properties{color[ffff]}{[0001|ffff]}.
018	OK!\nNow close the settings screen.
019	{[0001|1a00]}{color[0400]}Connect{color[ffff]}{[0001|ffff]} the {[0001|1a00]}{color[0400]}Location-Sensor Nodon{color[ffff]}{[0001|ffff]}\nto the {[0001|1a00]}{color[0400]}Person Nodon{color[ffff]}{[0001|ffff]}.
021	With those two linked up, the\n{[0001|1a00]}{color[0400]}Location-Sensor Nodon{color[ffff]}{[0001|ffff]} will send the\n{[0001|1a00]}{color[0400]}player character's{color[ffff]}{[0001|ffff]} position as an output.
022	We'll use that output to determine\n{[0001|1a00]}{color[0400]}when the player has fallen off the\nplatform{color[ffff]}{[0001|ffff]}.
023	{[0001|1a00]}{color[0400]}If the player's position is lower than\nthe platform{color[ffff]}{[0001|ffff]}, that means that the player\nhas fallen off.
024	That means we'll need to compare the output of\nthe Location-Sensor Nodon's {[0001|1a00]}{color[0400]}Y port{color[ffff]}{[0001|ffff]} to see if it's\n{[0001|1a00]}{color[0400]}lower than the platform's height{color[ffff]}{[0001|ffff]}.
025	Sure, if you want to get all detailed\nabout it... But stop interrupting!
026	Getting back on track...\nLet's call up a {[0001|1a00]}{color[0400]}Constant Nodon{color[ffff]}{[0001|ffff]}.
027	Planets, stars, nebulae...\nWhen they are gone, only I will remain.\nI am the Constant Nodon.
027000	Yikes. Anyway...\nMove the Constant Nodon up.
028	And open up the settings screen.
029	Set it to a number that's lower than\nthe position of the platform. {[0001|1a00]}{color[0400]}-10.00{color[ffff]}{[0001|ffff]} should do it.
030	Close the settings screen.
031	{[0001|1a00]}{color[0400]}-10.00{color[ffff]}{[0001|ffff]}, you say? You'd better believe\nthis won't change. {[0001|1a00]}{color[0400]}-10.00{color[ffff]}{[0001|ffff]}...
032	Next we'll need to call a {[0001|1a00]}{color[0400]}Comparison Nodon\n{color[ffff]}{[0001|ffff]}of the {[0001|1a00]}{color[0400]}greater than{color[ffff]}{[0001|ffff]} ({[0001|1a00]}{color[0400]}>{color[ffff]}{[0001|ffff]}) type.
033	Oh, I'm burning with curiosity!\nIs the player lower than the platform?\nIs it? I NEED TO KNOW!
033000	Put the Comparison Nodon\nover by the Location-Sensor Nodon.
034	Connect the {[0001|1a00]}{color[0400]}Location-Sensor Nodon's{color[ffff]}{[0001|ffff]}\n{[0001|1a00]}{color[0400]}Y port{color[ffff]}{[0001|ffff]} and the {[0001|1a00]}{color[0400]}Comparison Nodon's{color[ffff]}{[0001|ffff]}\n{[0001|1a00]}{color[0400]}input 2 port{color[ffff]}{[0001|ffff]}.
035	Next, connect the {[0001|1a00]}{color[0400]}Constant Nodon\n{color[ffff]}{[0001|ffff]}to the {[0001|1a00]}{color[0400]}Comparison Nodon's{color[ffff]}{[0001|ffff]}\n{[0001|1a00]}{color[0400]}input 1 port{color[ffff]}{[0001|ffff]}.
036	Now the {[0001|1a00]}{color[0400]}Comparison Nodon{color[ffff]}{[0001|ffff]} will output\na signal whenever the player's position\nis {[0001|1a00]}{color[0400]}lower than -10.00{color[ffff]}{[0001|ffff]}.
037	That's...right!
038	But you're interrupting! AGAIN!
039	It's really important to explain\nhow the setups work though, Bob.
040	Moving on...\nNext we'll need a {[0001|1a00]}{color[0400]}Destroy-Object Nodon{color[ffff]}{[0001|ffff]}.\nCall one up, please.
041	Hee hee... Sometimes you have to destroy\nsomething to create something else, dear!
041000	Put the Destroy-Object Nodon\nover by the Comparison Nodon.
042	Open up the Destroy-Object Nodon's\nsettings screen.
043	{[0001|1a00]}{color[0400]}Disable Visible{color[ffff]}{[0001|ffff]} under {[0001|1a00]}{color[0400]}Properties{color[ffff]}{[0001|ffff]}.
046	Open up {[0001|1a00]}{color[0400]}Destroy What?{color[ffff]}{[0001|ffff]} if you could.
047	{[0001|1a00]}{color[0400]}Enable Person{color[ffff]}{[0001|ffff]} only.
048	Then close this screen.
049	And now close the settings screen.
049000	Now connect the\n{[0001|1a00]}{color[0400]}Destroy-Object Nodon{color[ffff]}{[0001|ffff]}\nto the {[0001|1a00]}{color[0400]}Person Nodon{color[ffff]}{[0001|ffff]}.
050	Finally, open up the settings screen\nfor the {[0001|1a00]}{color[0400]}Person Nodon{color[ffff]}{[0001|ffff]}...
051	Under {[0001|1a00]}{color[0400]}Properties{color[ffff]}{[0001|ffff]},\n{[0001|1a00]}{color[0400]}enable Destructible{color[ffff]}{[0001|ffff]}.
052	Close the settings screen.
053	Connect up the {[0001|1a00]}{color[0400]}Comparison Nodon{color[ffff]}{[0001|ffff]}\nand the {[0001|1a00]}{color[0400]}Destroy-Object Nodon{color[ffff]}{[0001|ffff]},\nand we're done!
054	OK. Let's test that out on the game screen!
055	Go ahead and make the player\nfall off the platform...
056	As you can see, the player breaks\nwhen they fall off the screen now!
057	And for our next feature, let's set up\n{[0001|1a00]}{color[0400]}an automatic retry{color[ffff]}{[0001|ffff]}, {[0001|1a00]}{color[0400]}triggered when the\nplayer breaks{color[ffff]}{[0001|ffff]}!
058	Yeah...\nLike we always do...
059	O...K...\nTo the program screen!
060	First, call up an {[0001|1a00]}{color[0400]}Object-Break Nodon{color[ffff]}{[0001|ffff]}.
061	Hey, hon! It's your last lesson, huh?\nI must say, you've impressed me...
061-01	Just need to stay on track a little longer now.\nThen you'll be a fully-fledged programmer!
061000	Move the Object-Break Nodon a little...
062	Open up the settings screen.
063	And then open the {[0001|1a00]}{color[0400]}Check What?{color[ffff]}{[0001|ffff]} settings.
064	{[0001|1a00]}{color[0400]}Enable Person{color[ffff]}{[0001|ffff]}.
065	Now close this screen.
066	And close the settings screen too.
068	Next, we'll need a {[0001|1a00]}{color[0400]}Timer Nodon{color[ffff]}{[0001|ffff]}.\nCall one up, please.
069	A little bird told me that\nthis is the final lesson!
070	You really should have told me\nabout that in advance! How else\nam I supposed to prepare for it?
071	Sorry about that, Timer Nodon...\nPlop it over by the Object-Break Nodon!
072	Now connect up the {[0001|1a00]}{color[0400]}Timer Nodon\n{color[ffff]}{[0001|ffff]}and the {[0001|1a00]}{color[0400]}Object-Break Nodon{color[ffff]}{[0001|ffff]}.
073	Next, call up a {[0001|1a00]}{color[0400]}Retry Nodon{color[ffff]}{[0001|ffff]},\nif you would.
074	The last lesson, eh? My advice\nto you is to give it your all. Or you'll\nend up mired in regret...
074000	Move the Retry Nodon...
075	Then connect the {[0001|1a00]}{color[0400]}Retry Nodon{color[ffff]}{[0001|ffff]}\nand the {[0001|1a00]}{color[0400]}Timer Nodon{color[ffff]}{[0001|ffff]}.
076	Aaaand done!\nNow, {[0001|1a00]}{color[0400]}when the person breaks, the game will\nrestart{color[ffff]}{[0001|ffff]} automatically.
077	Let's test it over on the game screen!
078	Try falling off the platform...
079	The retry was triggered automatically!
080	We still need to add a few more\n{[0001|1a00]}{color[0400]}platforms{color[ffff]}{[0001|ffff]}, but I'd say we've pretty\nmuch wrapped things up for this step.
081	Back to the program screen!
082	Copy this Object Nodon.
083	And place it up here.
084	Copy again.
085	And put this one over on the right.
086	Copy again!
087	Put this one on the right as well.
088	We've got a little parade\nof platforms now.
089	Let's see how it looks on the game screen.
090	We've made a nice, simple set of platforms.\nGreat!
091	Ummmm...\nHow about making these into a stairway?\nThat would be a lot more fun, right?
092	Ugh... Actually, I was planning to keep\nit simple here, Alice...
093	Come on! Why don't we try it out?
094	To the program screen,\n{[0201]}!
095	Copy this Object Nodon...
096000	Make it a touch smaller,\nand drag it to the blue frame.
097	Hmmm... Maybe we should raise the\nheight a bit if it's going to serve as\nthe first step of a stairway.
098	Switch over to the {[0001|1a00]}{color[0400]}side view{color[ffff]}{[0001|ffff]}!
099	Now drag the Object Nodon from\nbefore above this platform.
101	Now open the settings so that\nwe can change the color.
102	Set the {[0001|1a00]}{color[0400]}color{color[ffff]}{[0001|ffff]} to {[0001|1a00]}{color[0400]}brown{color[ffff]}{[0001|ffff]}, please.
103	Close the settings screen.
104	We'll build the stairway, step by step!
105	Copy the Object Nodon.
106	Make it a little bigger, and move it\nto the right to create a difference\nbetween the levels.
108	Copy it again!
109	Now to make it larger and\nplace it over to the right...
111	And there we have our stairway!
111-01	Let's switch back over to overhead view.
112	OK!\nLet's check it out on the game screen.
113	Go over to where the stairway is!
114	Yesss, there it is!
115	Doesn't that look fun?
115-01	Er... Maybe I got a little bit\ncarried away there...
117	You think?! I have to admit, though,\nit does look pretty fun...
118	Right?
119	Well, now that we have our\nstairway, can we please head\nback to the program screen?
120	OK... So...
121	Step 2 is complete!
122-01	Congratulations, hon!
122-02	Splendid!
122-03	Oh, very nice...
122-04	Hee hee hee!
123	I got a bit sidetracked...again...\nSo it took a while.
124	But our game is getting\nthere, little by little.
125	In the next step, we'll be adding\nsome cool gimmicks to our level.
126	Gimmicks, huh?
127	See you in the next step!
128	Bye!
Lesson_3DAction_02.msbt
000	Welcome to Step 3!
001	Great to see you again,\n{[0201]}!
002	As usual, let's review\nwhat we've accomplished\nso far.
003	First, try running the player off the platform.
004	As you just saw, we made a {[0001|1a00]}{color[0400]}setup\nthat breaks the player when they\nfall off the platform{color[ffff]}{[0001|ffff]}.
005	On top of that, we built up the level's\nenvironment with some extra platforms.
006	We also made the design even\nmore fun with a cool stairway!
007	So, this time around, we're going to liven\nup our level with a great gimmick!
008	I know, I know. You're wondering,\n"What's this incredible gimmick?"\n
009	Well... It's a {[0001|1a00]}{color[0400]}moving platform{color[ffff]}{[0001|ffff]}!
010	Oh, I see!\nAnd I suppose you'll be using a\n{[0001|1a00]}{color[0400]}Slide-Connector Nodon{color[ffff]}{[0001|ffff]} for that.
011	Alice! Spoilers!
012	But, you're right. We'll be making a\n{[0001|1a00]}{color[0400]}moving platform{color[ffff]}{[0001|ffff]}, just like the one\nwe made in {[0001|1a00]}{color[0400]}Risky Run{color[ffff]}{[0001|ffff]}.
013	OK, let's get to it.
014	Hey, wait a sec...
015	I thought we agreed that you\nwouldn't interrupt anymore...
016	But if you already made a moving platform with a\nSlide-Connector Nodon...why not try something\ndifferent this time?
017	We could use the {[0001|1a00]}{color[0400]}Hinge-Connector Nodon{color[ffff]}{[0001|ffff]}\nto make a {[0001|1a00]}{color[0400]}revolving hazard bar{color[ffff]}{[0001|ffff]}! It'll be so cool!
018	Uh, no... I was planning on\nmaking a moving platform...
019	Oh, come on! There's no plan\nthat can't be improved!
020	Anyway, {[0201]} is the one\ndoing all the actual programming.\nShouldn't we see which one they'd prefer?
021	Makes sense I suppose.\nOK, let's ask.
022	Hey, {[0201]}! We want you\nto decide which way this game's going to go!
023	Which would you like to build?\nA {[0001|1a00]}{color[0400]}moving platform{color[ffff]}{[0001|ffff]} or\na {[0001|1a00]}{color[0400]}revolving{color[ffff]}{[0001|ffff]} {[0001|1a00]}{color[0400]}hazard bar{color[ffff]}{[0001|ffff]}?
023a	Moving platform!
023b	Hazard bar!
024	Great! Excellent choice.
025	Uhhhmmm...
026	Well, if that's what\n{[0201]} wants...
027	I'm glad that's settled.\nLet's get programming.
028	Yeah! Good stuff!
029	Fine. If that's what\n{[0201]} wants...
030	Great! Let's get to it!
Lesson_3DAction_02a.msbt
000	OK! Let's start working on\nour moving platform.
001	Copy the Object Nodon...
002	And put it in the blue frame.
003	Let's have our {[0001|1a00]}{color[0400]}moving platform{color[ffff]}{[0001|ffff]}\nin the gap between these platforms.
004	Copy this Object Nodon again.
006	Make it smaller, and move\nit over to the gap.
007	Now open up the settings screen.
008	{[0001|1a00]}{color[0400]}Disable{color[ffff]}{[0001|ffff]} everything in {[0001|1a00]}{color[0400]}Properties{color[ffff]}{[0001|ffff]}.
009	Now close the settings screen.
010	Next, we need a {[0001|1a00]}{color[0400]}Slide-Connector Nodon{color[ffff]}{[0001|ffff]}.\nCall up one of the {[0001|1a00]}{color[0400]}X Slide{color[ffff]}{[0001|ffff]} type.
011	Oh, {[0201]}! You're\ngoing to use me in the final lesson!\nWhat an honor!
011-01	You can count on me!\nI'll follow you to the end!
013	{[0001|1a00]}{color[0400]}Connect{color[ffff]}{[0001|ffff]} the {[0001|1a00]}{color[0400]}Slide-Connector Nodon{color[ffff]}{[0001|ffff]}\nto the {[0001|1a00]}{color[0400]}Object Nodon{color[ffff]}{[0001|ffff]}.
014	Next you'll need to make another\ncopy of this Object Nodon.
015	We'll want it to be a bit smaller\nto serve as a {[0001|1a00]}{color[0400]}platform{color[ffff]}{[0001|ffff]}. Shrink\nit, and move it up above.
017	Open the settings screen,\nif you don't mind.
018	{[0001|1a00]}{color[0400]}Enable Movable{color[ffff]}{[0001|ffff]} under {[0001|1a00]}{color[0400]}Properties{color[ffff]}{[0001|ffff]}.
019	Set the {[0001|1a00]}{color[0400]}color{color[ffff]}{[0001|ffff]} to a nice {[0001|1a00]}{color[0400]}yellow{color[ffff]}{[0001|ffff]}.
021	OK! Under {[0001|1a00]}{color[0400]}Connection Point{color[ffff]}{[0001|ffff]}, set\n{[0001|1a00]}Own Connection Point{[0001|ffff]} to {[0001|1a00]}{color[0400]}Center{color[ffff]}{[0001|ffff]},\nand {[0001|1a00]}Target Connection Point{[0001|ffff]} to {[0001|1a00]}{color[0400]}Center{color[ffff]}{[0001|ffff]} as well.
022	Now close this screen.
023	And close the settings screen too.
024	Now let's have the {[0001|1a00]}{color[0400]}Slide-Connector Nodon{color[ffff]}{[0001|ffff]}\n{[0001|1a00]}{color[0400]}connected{color[ffff]}{[0001|ffff]} up to this {[0001|1a00]}{color[0400]}Object Nodon{color[ffff]}{[0001|ffff]}.
025	If you remember, we {[0001|1a00]}{color[0400]}disabled{color[ffff]}{[0001|ffff]} the\n{[0001|1a00]}{color[0400]}Movable property{color[ffff]}{[0001|ffff]} for this Object Nodon.
026	Thanks to that, the {[0001|1a00]}{color[0400]}connected platform won't fall{color[ffff]}{[0001|ffff]}.\nAnd thanks to the Slide-Connector Nodon,\n{[0001|1a00]}{color[0400]}it'll only move along the X direction{color[ffff]}{[0001|ffff]}.
027	Yes... That's...right...
028	MOVING ON! Call up a\n{[0001|1a00]}{color[0400]}Constant Nodon{color[ffff]}{[0001|ffff]}, please.
030	Ploink it into the blue frame.
031	We'll be pairing this Constant Nodon\nwith a {[0001|1a00]}{color[0400]}Counter Nodon{color[ffff]}{[0001|ffff]}. Call one up!
032	By teaming up the {[0001|1a00]}{color[0400]}Constant Nodon{color[ffff]}{[0001|ffff]} and the\n{[0001|1a00]}{color[0400]}Counter Nodon{color[ffff]}{[0001|ffff]}, we'll be able to output a\n{[0001|1a00]}{color[0400]}steadily increasing number{color[ffff]}{[0001|ffff]}!
033	Yep, that's right!\nErm... I mean...
034	Alice! You keep interrupting!\nYou're really messing with my flow here!\nYou're ripping my lesson to shreds!
035	That's kind of an exaggeration,\ndon't you think?
035-01	I can't even keep track of the\nnumber of times you've butted in!
036	Sorry about that, {[0201]}.\nNow, getting back on track...\nCall up a {[0001|1a00]}{color[0400]}Counter Nodon{color[ffff]}{[0001|ffff]}!
037	ACCORDING TO MY COUNT, ALICE\nHAS INTERRUPTED FOUR TIMES\nDURING THIS STEP.
038	See? That's hardly anything. Right?
039	Whatever...\nMove the Counter Nodon\nover to the blue frame, please!
040	Now open the settings screen.
041	Change the {[0001|1a00]}{color[0400]}Mode{color[ffff]}{[0001|ffff]} to {[0001|1a00]}{color[0400]}Bounce{color[ffff]}{[0001|ffff]}.
042	Set the {[0001|1a00]}{color[0400]}Count Range{color[ffff]}{[0001|ffff]} to run\nfrom {[0001|1a00]}{color[0400]}-100{color[ffff]}{[0001|ffff]} to {[0001|1a00]}{color[0400]}100{color[ffff]}{[0001|ffff]}.
043	With the {[0001|1a00]}{color[0400]}Counter Nodon{color[ffff]}{[0001|ffff]} connected to the\n{[0001|1a00]}{color[0400]}Slide-Connector Nodon{color[ffff]}{[0001|ffff]} like this, the platform\nwill move through a range of {[0001|1a00]}{color[0400]}-100m{color[ffff]}{[0001|ffff]} to {[0001|1a00]}{color[0400]}100m{color[ffff]}{[0001|ffff]}!
044	We're going to need a {[0001|1a00]}{color[0400]}Map Nodon{color[ffff]}{[0001|ffff]}\nto fit into this smaller space, aren't we?
045	Five times now!\nThat's five times you've\ninterrupted my lesson!
046	It's OK, Bob... Deep breaths...\nOK, let's close the settings screen!
047	Connect the {[0001|1a00]}{color[0400]}Constant Nodon{color[ffff]}{[0001|ffff]} to the\n{[0001|1a00]}{color[0400]}Counter Nodon{color[ffff]}{[0001|ffff]}'s {[0001|1a00]}{color[0400]}count up port{color[ffff]}{[0001|ffff]}.
048	Then call up a {[0001|1a00]}{color[0400]}Map Nodon{color[ffff]}{[0001|ffff]}.
049	Hello! I'm sensing some tension\nbetween Bob and Alice here...
049-01	Could this be a job for my mediation skills?\nWhat's the problem? I hope you aren't\nfighting on my account!
050	Bring the Map Nodon over to the\nside of the Counter Nodon.
051	And open up the settings screen.
052	The {[0001|1a00]}{color[0400]}Input Range{color[ffff]}{[0001|ffff]} is\nbetween {[0001|1a00]}{color[0400]}-100.00{color[ffff]}{[0001|ffff]} and {[0001|1a00]}{color[0400]}100.00{color[ffff]}{[0001|ffff]}.
053	Set the {[0001|1a00]}{color[0400]}Output Range{color[ffff]}{[0001|ffff]} to be\nbetween {[0001|1a00]}{color[0400]}-3.00{color[ffff]}{[0001|ffff]} and {[0001|1a00]}{color[0400]}3.00{color[ffff]}{[0001|ffff]}.
054	Hey, guys! Get ready for interruption\nnumber six!
055	The {[0001|1a00]}{color[0400]}Counter Nodon{color[ffff]}{[0001|ffff]} will be outputting values\nbetween {[0001|1a00]}{color[0400]}-100{color[ffff]}{[0001|ffff]} and {[0001|1a00]}{color[0400]}100{color[ffff]}{[0001|ffff]}...
056	The Map Nodon will convert those\nvalues into something {[0001|1a00]}{color[0400]}between -3.00\nand 3.00 {color[ffff]}{[0001|ffff]}and output them.
057	If we connect that output to the\n{[0001|1a00]}{color[0400]}Slide-Connector Nodon{color[ffff]}{[0001|ffff]}, our {[0001|1a00]}{color[0400]}moving platform\n{color[ffff]}{[0001|ffff]}will move {[0001|1a00]}{color[0400]}between -3.00m and 3.00m{color[ffff]}{[0001|ffff]}.
058	Yes... Alice is right... Again.
059	Now close the settings screen...
060	Connect the {[0001|1a00]}{color[0400]}Counter Nodon\n{color[ffff]}{[0001|ffff]}and the {[0001|1a00]}{color[0400]}Map Nodon{color[ffff]}{[0001|ffff]}.
061	And now, connect the {[0001|1a00]}{color[0400]}Map Nodon{color[ffff]}{[0001|ffff]}\nto the {[0001|1a00]}{color[0400]}Slide-Connector Nodon{color[ffff]}{[0001|ffff]}.
062	And with that, our {[0001|1a00]}{color[0400]}moving platform{color[ffff]}{[0001|ffff]} is complete.
063	Let's check it out on the game screen!
064	Walk the player to the moving platform...
065	Awesome!\nThe moving platform is\nbehaving just like it should.
066	I think the hazard bar\nwould have been better...\nBut it's still pretty cool!
067	Nice to have your approval, Alice...
068	Well, when you're done testing that out,\nhop back over to the program screen.
069	And...yes...that's right...
070	Step 3 is complete!
071-01	Congratulations!
071-02	Good job!
071-03	SATISFACTORY WORK.
072-00	This time around, we made our very first\ngimmick for this level...a moving platform.
072	In the next step, we'll be making a\n{[0001|1a00]}{color[0400]}switch-based gimmick{color[ffff]}{[0001|ffff]}. But be prepared—\nit's a bit more complicated than this one.
073	Mysterious...
074	Well, I'm looking forward to it...
075	Me too!
076	See you at the next step!
077	Be there, or be square!
Lesson_3DAction_02b.msbt
000	OK! First, let's make a\nplatform for the gimmick.
001	Copy this Object Nodon.
002	And put it over to the right.
003	Now copy it again.
004	And put it over the right\nlike you did before.
005	We'll be building our hazard bar\nabove this platform.
007	Let's call up a {[0001|1a00]}{color[0400]}cylinder Object Nodon{color[ffff]}{[0001|ffff]}.\nThis will serve as an axis for our\nhazard bar to rotate around.
008	Ayup!\nHazard bar's going to\nrotate around me, eh?
009	Put this Object Nodon right\nin the center of the platform.
015	Open the settings screen,\nif you would be so kind.
016	The cylinder's going to be the central point\nthat our hazard bar will rotate around, so\nunder {[0001|1a00]}{color[0400]}Properties{color[ffff]}{[0001|ffff]}, {[0001|1a00]}{color[0400]}enable Visible{color[ffff]}{[0001|ffff]} and {[0001|1a00]}{color[0400]}Solid{color[ffff]}{[0001|ffff]} only.
017	This will prevent the cylinder\nfrom moving around.
018	Now let's set the {[0001|1a00]}{color[0400]}color{color[ffff]}{[0001|ffff]} to {[0001|1a00]}{color[0400]}white{color[ffff]}{[0001|ffff]}.
019	Now close the settings screen.
020	Now to {[0001|1a00]}{color[0400]}connect{color[ffff]}{[0001|ffff]} this nonmoving cylinder\nObject Nodon to the {[0001|1a00]}{color[0400]}Hinge-Connector Nodon{color[ffff]}{[0001|ffff]}...
021	That's because {[0001|1a00]}{color[0400]}connecting{color[ffff]}{[0001|ffff]} the\n{[0001|1a00]}{color[0400]}Object Nodon {color[ffff]}{[0001|ffff]}to the {[0001|1a00]}{color[0400]}Hinge-Connector\nNodon {color[ffff]}{[0001|ffff]}is {[0001|1a00]}{color[0400]}how you make objects rotate{color[ffff]}{[0001|ffff]}!
022	OK, let's call up a {[0001|1a00]}{color[0400]}Hinge-Connector Nodon{color[ffff]}{[0001|ffff]}.\nYou'll want a {[0001|1a00]}{color[0400]}Y Hinge{color[ffff]}{[0001|ffff]} type, to rotate\naround the y-axis.
023	{[c903]}{[0201]}! Great to see you!\nYou've danced and pranced all the way through\nto the final lesson! Fantabulous!
024	Move the Hinge-Connector Nodon\nup above the Object Nodon.
025	Now connect the {[0001|1a00]}{color[0400]}Hinge-Connector Nodon{color[ffff]}{[0001|ffff]}\nand the {[0001|1a00]}{color[0400]}Object Nodon{color[ffff]}{[0001|ffff]}.
026	Next, we call up a {[0001|1a00]}{color[0400]}sphere Object Nodon{color[ffff]}{[0001|ffff]}.
027	Now we just need to make\nthe {[0001|1a00]}{color[0400]}sphere rotate{color[ffff]}{[0001|ffff]}, {[0001|1a00]}{color[0400]}connect it to\nthe hazard bar{color[ffff]}{[0001|ffff]}, and then it'll be done.
029	OK, move the {[0001|1a00]}{color[0400]}sphere Object\nNodon {color[ffff]}{[0001|ffff]}up here, please.
030	Open the settings screen.
031	Hmmm, so we want the\nsphere to rotate...
032	In {[0001|1a00]}{color[0400]}Properties{color[ffff]}{[0001|ffff]}, {[0001|1a00]}{color[0400]}enable Movable{color[ffff]}{[0001|ffff]} only.
033	Then, under {[0001|1a00]}{color[0400]}Connection Point{color[ffff]}{[0001|ffff]}, set\n{[0001|1a00]}Own{[0001|ffff]} {[0001|1a00]}Connection Point{[0001|ffff]} to {[0001|1a00]}{color[0400]}Center{color[ffff]}{[0001|ffff]} and\n{[0001|1a00]}Target Connection Point{[0001|ffff]} to {[0001|1a00]}{color[0400]}Center{color[ffff]}{[0001|ffff]}, as well.
035	Now close this screen.
036	All the settings are good now,\nso you can close the settings screen.
037	Now {[0001|1a00]}{color[0400]}connect{color[ffff]}{[0001|ffff]} the {[0001|1a00]}{color[0400]}sphere\nObject Nodon{color[ffff]}{[0001|ffff]} to the\n{[0001|1a00]}{color[0400]}Hinge-Connector Nodon{color[ffff]}{[0001|ffff]}.
039	Now call up another {[0001|1a00]}{color[0400]}box Object Nodon{color[ffff]}{[0001|ffff]}.
040	Make it the same size as the bar,\nand put it on the side of the\n{[0001|1a00]}{color[0400]}cylinder Object Nodon{color[ffff]}{[0001|ffff]}.
042	Now open up the settings screen.
043	Under {[0001|1a00]}{color[0400]}Properties{color[ffff]}{[0001|ffff]}, {[0001|1a00]}{color[0400]}disable{color[ffff]}{[0001|ffff]} {[0001|1a00]}{color[0400]}Destructible{color[ffff]}{[0001|ffff]}.
044	As for the {[0001|1a00]}{color[0400]}color{color[ffff]}{[0001|ffff]}...\nLet's go with a nice {[0001|1a00]}{color[0400]}pink{color[ffff]}{[0001|ffff]}!
045	And for {[0001|1a00]}{color[0400]}Connection Point{color[ffff]}{[0001|ffff]},\n{[0001|1a00]}Own Connection Point{[0001|ffff]} should be {[0001|1a00]}{color[0400]}X-{color[ffff]}{[0001|ffff]}, and\n{[0001|1a00]}Target Connection Point{[0001|ffff]} should be {[0001|1a00]}{color[0400]}X+{color[ffff]}{[0001|ffff]}.
045-01	This will attach the side of the\nbox to the side of the sphere.
047	Now close this screen.
048	And now the settings screen.
048000	Now {[0001|1a00]}{color[0400]}attach{color[ffff]}{[0001|ffff]} the {[0001|1a00]}{color[0400]}box Object Nodon\n{color[ffff]}{[0001|ffff]}to the {[0001|1a00]}{color[0400]}sphere Object Nodon{color[ffff]}{[0001|ffff]}.
049	OK...so next...
050	Don't you think it's about time to\ncheck all this on the game screen?
051	Checking what you've done\nis very important, after all!
052	Yes...I guess you've got a point...
053	OK! {[c903]}{[0201]}!\nLet's go to the game screen!
054	Let's head over to the hazard bar!
055	Yep, right where it should be.
056	All we need now is to\nhave it rotate.
057	Let's go back to the program screen\nand handle that then.
058	So we want a setup here\nthat makes something rotate.
059	The {[0001|1a00]}{color[0400]}Hinge-Connector Nodon{color[ffff]}{[0001|ffff]} will control the\n{[0001|1a00]}{color[0400]}angle{color[ffff]}{[0001|ffff]} of objects that it's connected to,\naccording to the input that it receives.
060	The Hinge-Connector Nodon is connected to the\nsphere Object Nodon, so {[0001|1a00]}{color[0400]}the sphere will rotate\ndepending on the input it receives{color[ffff]}{[0001|ffff]}.
061	We could link a Constant Nodon to the Counter\nNodon, link that in turn to the Map Nodon... If we\nhave a continuous output between 0 and 180...
062	Hey, Alice! Why don't you save the explanation\nfor later, and just stick with the part where you\nactually make the thing?
063	Oh... OK... Well then... {[c903]}{[0201]}!\nPlease call up a {[0001|1a00]}{color[0400]}Constant Nodon{color[ffff]}{[0001|ffff]}!
064	I am the inexorable, the immobile,\nthe indefatigable Constant Nodon.
065	Put the Constant Nodon\nin the blue frame.
066	Next, call up a {[0001|1a00]}{color[0400]}Counter Nodon{color[ffff]}{[0001|ffff]}.
067	HELLO. THERE HAVE BEEN\nSEVEN LESSONS IN TOTAL.\nSEVEN IS THE FINAL LESSON.
068	Put the {[0001|1a00]}{color[0400]}Counter Nodon{color[ffff]}{[0001|ffff]} to the\nside of the {[0001|1a00]}{color[0400]}Constant Nodon{color[ffff]}{[0001|ffff]}.
069	Open up the settings screen.
070	Set the {[0001|1a00]}{color[0400]}Mode{color[ffff]}{[0001|ffff]} to {[0001|1a00]}{color[0400]}Loop{color[ffff]}{[0001|ffff]}.
071	Set the {[0001|1a00]}{color[0400]}Count Range{color[ffff]}{[0001|ffff]} to\n{[0001|1a00]}{color[0400]}between 0 and 180{color[ffff]}{[0001|ffff]}.
072	Now close the settings screen.
073	Connect the {[0001|1a00]}{color[0400]}Constant Nodon{color[ffff]}{[0001|ffff]} to the\n{[0001|1a00]}{color[0400]}count up port{color[ffff]}{[0001|ffff]} of the {[0001|1a00]}{color[0400]}Counter Nodon{color[ffff]}{[0001|ffff]}.
074	That'll make the Counter Nodon\ncount {[0001|1a00]}{color[0400]}between 0 and 180{color[ffff]}{[0001|ffff]}, {[0001|1a00]}{color[0400]}looping\nback{color[ffff]}{[0001|ffff]} when it maxes out.
074-01	The Counter Nodon will\ncount 60 times per second...
074-02	so counting from {[0001|1a00]}{color[0400]}0 to 180{color[ffff]}{[0001|ffff]}\nwill take exactly 3 seconds!
075	OK, so next, let's call up a {[0001|1a00]}{color[0400]}Map Nodon{color[ffff]}{[0001|ffff]}.
076	Oh! Alice!\nIt's unusual to run into you in a lesson!
076-01	I've got such a tingling premonition!\nLike something really special's going to happen!
077	You're not wrong! Let's put\nthe Map Nodon over to the\nside of the Counter Nodon.
078	Now to connect the {[0001|1a00]}{color[0400]}Counter Nodon\n{color[ffff]}{[0001|ffff]}and the {[0001|1a00]}{color[0400]}Map Nodon{color[ffff]}{[0001|ffff]}.
079	Open up the Map Nodon's\nsettings.
080	This Map Nodon will be getting an\ninput value {[0001|1a00]}{color[0400]}between 0 and 180 from\nthe Counter Nodon{color[ffff]}{[0001|ffff]}.
081	Set the {[0001|1a00]}{color[0400]}Input Range{color[ffff]}{[0001|ffff]} to {[0001|1a00]}{color[0400]}between\n0.00 and 180.00{color[ffff]}{[0001|ffff]}.
082	Thanks to that, the {[0001|1a00]}{color[0400]}Hinge-Connector Nodon\n{color[ffff]}{[0001|ffff]}will use the input value it receives as an {[0001|1a00]}{color[0400]}angle{color[ffff]}{[0001|ffff]}\nto rotate the object.
083	We'll want the bar to rotate through\n{[0001|1a00]}{color[0400]}360 degrees{color[ffff]}{[0001|ffff]}, so set the {[0001|1a00]}{color[0400]}Output Range{color[ffff]}{[0001|ffff]}\nto {[0001|1a00]}{color[0400]}between 0.00 and 360.00{color[ffff]}{[0001|ffff]}.
084	Now close the settings screen.
085	So now the Map Nodon will {[0001|1a00]}{color[0400]}loop{color[ffff]}{[0001|ffff]}\nthrough values {[0001|1a00]}{color[0400]}0.00 to 360{color[ffff]}{[0001|ffff]} and\nsend them as {[0001|1a00]}{color[0400]}output{color[ffff]}{[0001|ffff]}.
086	Finally, connect the {[0001|1a00]}{color[0400]}Map Nodon{color[ffff]}{[0001|ffff]}\nto the {[0001|1a00]}{color[0400]}Hinge-Connector Nodon{color[ffff]}{[0001|ffff]}.
087	And with that, our {[0001|1a00]}{color[0400]}revolving\nhazard bar{color[ffff]}{[0001|ffff]} is complete!
088	Let's go to the game screen and test it out!
089	Head over to the hazard bar...
090	Nice, look at it spin!
091	Awesome!\nWhat a cool gimmick!
092	I mean, we've taken a bit of a detour\nfrom my plan here. But I've got to\nadmit, this is pretty nifty.
093	Right?
094	OK, {[0201]}!\nWhen you've checked that out enough,\nhead back to the program screen.
095	Yes...looks like...
096	Step 3 is complete!
097-01	Good stuff!
097-02	Congratulations!
097-03	YOUR GOOD WORK CONTINUES.
098	That was my line...
099	Uhm, anyhow...\nWe completed our game's\nfirst gimmick.
100	In the next step, we'll be\nmaking an even more\ncomplex {[0001|1a00]}{color[0400]}switch-based gimmick{color[ffff]}{[0001|ffff]}!
101	Switches, eh?
102	Looking forward to it!
103	You can say that again!
104	See you again at the next step!
105	Be there, or be square!
Lesson_3DAction_03.msbt
000	All right! Here we are at Step 4!
001	Let's review what we've done so far.
002	Bit by bit, our level environment for\n{[0001|1a00]}{color[0400]}Super Person World{color[ffff]}{[0001|ffff]} is getting more\nand more exciting!
003	This time around we'll add a brand\nnew gimmick, {[0001|1a00]}{color[0400]}a bridge that\nappears when you flick a switch{color[ffff]}{[0001|ffff]}!
004	Really? I thought it would be more {[0001|1a00]}{color[0400]}a switch\nthat makes a bridge appear{color[ffff]}{[0001|ffff]}, but {[0001|1a00]}{color[0400]}the bridge\nvanishes after a certain length of time{color[ffff]}{[0001|ffff]}...
005	But...Alice... That's going to be\nreally hard to do...
006	Oh, sure, it's got a few tricky parts...\nBut {[0201]} is up to the task!\nIsn't that right, {[0201]}?
007	Well, {[0201]}...\nWhat do you think? Which\nway do you want to go?
008	Do you want to make my nice,\n{[0001|1a00]}{color[0400]}simple switch{color[ffff]}{[0001|ffff]} setup?
009	Or my complex\n{[0001|1a00]}{color[0400]}timed switch{color[ffff]}{[0001|ffff]}?
010	What will it be?
010a	The simple switch.
010b	The timed switch.
011	Good choice! Keep things on\ntrack with the simple switch!
012	Oh, {[0201]}...\nI'm sure you could have\nhandled the challenge...
013	Let's get to it, without\nfurther ado!
014	Yes, {[0201]}!\nI knew it!
015	{[c903]}{[0201]}...\nAre you sure this is wise?
016	Come on, Bob, it'll be fine!\n{[c903]}{[0201]} must be used\nto challenges by this point, right?
017	OK!\nLet's get started!\nTo the program screen!
Lesson_3DAction_03a.msbt
000	OK!\nMaybe I'd better give you a few details\nabout the type of gimmick I have in mind.
001	We'll be creating {[0001|1a00]}{color[0400]}a setup that\ncauses a bridge to appear when\na crate is placed on a switch{color[ffff]}{[0001|ffff]}.
002	So the first thing we'll need is a crate!
003	Call up a {[0001|1a00]}{color[0400]}crate Fancy Object{color[ffff]}{[0001|ffff]} from\nthe {[0001|1a00]}{color[0400]}Rectangular Fancy Objects{color[ffff]}{[0001|ffff]} menu.
004	A crate...\nCrates are good for putting things in!\nProbably the start of a new trend!
005	Sometimes the wrapping is\nmore important than the present,\ndon't you think? It's a matter of style!
012	Drag the Fancy-Object Nodon\nover to the blue frame.
013	Let's see how that's looking\non the game screen.
014	Oof...\nIt's quite a trek over to the crate.\nWhat a mission!
015	We could make life easier with a\n{[0001|1a00]}{color[0400]}Teleport-Object Nodon{color[ffff]}{[0001|ffff]} to {[0001|1a00]}{color[0400]}warp{color[ffff]}{[0001|ffff]}\nover to the crate in the blink of an eye.
016	To the program screen!
017	First, let's call up a {[0001|1a00]}{color[0400]}Teleport-\nObject-Entrance Nodon\n{color[ffff]}{[0001|ffff]}for the starting point.
018	You need our dimension-bending\npowers to develop your ambition...\nLet us aid you...
019	We are open to you, noble programmer...\nAn open door to mystery and might,\nat your disposal.
022	Place the {[0001|1a00]}{color[0400]}Teleport-Object-Entrance Nodon{color[ffff]}{[0001|ffff]}\nover the top of Person Nodon.
024	Open up the settings screen for the\nTeleport-Object-Entrance Nodon.
025	Now set the {[0001|1a00]}{color[0400]}Teleport ID {color[ffff]}{[0001|ffff]}to {[0001|1a00]}{color[0400]}H{color[ffff]}{[0001|ffff]}.
026	Touch {[0001|1a00]}{color[0400]}Teleport What?{color[ffff]}{[0001|ffff]} to open the menu.
027	{[0001|1a00]}{color[0400]}Enable Person{color[ffff]}{[0001|ffff]} only here.
027000	Close this screen.
028	Now close the settings screen as well.
030	Now we'll need to call up a\n{[0001|1a00]}{color[0400]}Teleport-Object-Exit Nodon{color[ffff]}{[0001|ffff]}.\nGo ahead.
031	I have heard all about your brave ambition\nfrom my compatriots, noble programmer...\nWe salute you.
032	Let us aid in your creative endeavors\nwith our powers of teleportation.
034	Switch to {[0001|1a00]}{color[0400]}side view{color[ffff]}{[0001|ffff]}.
035	Make the Teleport-Object-Exit Nodon\na little bigger, and place it above the platform.
035-01	Return to the {[0001|1a00]}{color[0400]}overhead view{color[ffff]}{[0001|ffff]}...
036	Open the settings screen for the\nTeleport-Object-Exit Nodon.
037	Now set the {[0001|1a00]}{color[0400]}Teleport ID{color[ffff]}{[0001|ffff]} to {[0001|1a00]}{color[0400]}H{color[ffff]}{[0001|ffff]}.
040	Now we can close the settings screen.
042	It'll be a bit easier to inspect what\nwe've done from that viewpoint.
043	Let's check it out on the game screen!
044	Great! You've warped to\nwhere the crate is!
045	The crate seems to be present and correct.\nOn to our next programming task,\ncreating the switch.
046	Hey...Bob...\nWait a sec!
047	What's up?
048	Try pushing the crate,\n{[0201]}.
049	See how the crate is swiveling around?\nIt makes it hard to push, right?
050	You...have a point...
051	Hey, I had a really\ncool brainstorm.
052	...
053	OK. Why don't you take it\nfrom here for a bit?
054	Sure!
055	OK, {[0201]}!\nHead back to the program screen!
056	We want to make it so that the crate\n{[0001|1a00]}{color[0400]}doesn't change which way it faces{color[ffff]}{[0001|ffff]}\nwhen you push it.
057	We can make use of a\n{[0001|1a00]}{color[0400]}Free-Slide-Connector Nodon\n{color[ffff]}{[0001|ffff]}for that.
058	Oh, I get it!
059	Let's give it a try!
060	First, let's shift this {[0001|1a00]}{color[0400]}Fancy-Object Nodon{color[ffff]}{[0001|ffff]}\nover to the side.
061	Now call up a {[0001|1a00]}{color[0400]}box Object Nodon{color[ffff]}{[0001|ffff]}.
062	Ayup!
067	Put this {[0001|1a00]}{color[0400]}Object Nodon{color[ffff]}{[0001|ffff]} in the\n{[0001|1a00]}{color[0400]}Fancy-Object Nodon{color[ffff]}{[0001|ffff]}'s {[0001|1a00]}{color[0400]}original position{color[ffff]}{[0001|ffff]}.
067-01	Now open up the Object Nodon's\nsettings screen.
067-02	{[0001|1a00]}{color[0400]}Disable{color[ffff]}{[0001|ffff]} all of the {[0001|1a00]}{color[0400]}Properties{color[ffff]}{[0001|ffff]}.
067-03	Close the settings screen.
068	Call up a {[0001|1a00]}{color[0400]}Free-Slide-Connector Nodon{color[ffff]}{[0001|ffff]}.
069	Sweet! This sounds like fun!\nMind if I join?
070	It's a bit short notice, but who cares?\nYou gotta be spontaneous if you want\nthe creativity to flow!
070000	Drag the {[0001|1a00]}{color[0400]}Free-Slide-Connector Nodon{color[ffff]}{[0001|ffff]}\nover to the blue frame.
070-01	{[0001|1a00]}{color[0400]}Connect{color[ffff]}{[0001|ffff]} the {[0001|1a00]}{color[0400]}Object Nodon {color[ffff]}{[0001|ffff]}to the\n{[0001|1a00]}{color[0400]}Free-Slide-Connector Nodon{color[ffff]}{[0001|ffff]}.
070-02	Open the settings screen for\nthe {[0001|1a00]}{color[0400]}Fancy-Object Nodon{color[ffff]}{[0001|ffff]}.
070-03	{[0001|1a00]}{color[0400]}Under Connection Point{color[ffff]}{[0001|ffff]}, set\n{[0001|1a00]}Own Connection Point {[0001|ffff]}to {[0001|1a00]}{color[0400]}Center{color[ffff]}{[0001|ffff]} and\n{[0001|1a00]}Target Connection Point {[0001|ffff]}to {[0001|1a00]}{color[0400]}Center{color[ffff]}{[0001|ffff]}, as well.
070-04	Now close this screen.
070-05	Close the settings screen.
070-06	{[0001|1a00]}{color[0400]}Connect{color[ffff]}{[0001|ffff]} the {[0001|1a00]}{color[0400]}Fancy-Object Nodon{color[ffff]}{[0001|ffff]} to the\n{[0001|1a00]}{color[0400]}Free-Slide-Connector Nodon{color[ffff]}{[0001|ffff]}.
070001	Now let's open up the settings for\nthe Free-Slide-Connector Nodon.
070002	{[0001|1a00]}{color[0400]}Disable{color[ffff]}{[0001|ffff]} everything under {[0001|1a00]}{color[0400]}Slide Motion Input{color[ffff]}{[0001|ffff]}.
070003	Thanks to this setting, {[0001|1a00]}{color[0400]}the connected\ncrate can now slide around freely{color[ffff]}{[0001|ffff]}.
070004	Close the settings screen.
080	Let's go to the game screen and\ncheck the results of our efforts!
081	Try pushing the crate.
082	See that?\nThe crate isn't swiveling\naround anymore!
083	Awesome!
084	Because the crate is {[0001|1a00]}{color[0400]}attached to an\ninvisible box{color[ffff]}{[0001|ffff]}, {[0001|1a00]}{color[0400]}it won't swivel on the\nspot anymore{color[ffff]}{[0001|ffff]}, but...
085	since the {[0001|1a00]}{color[0400]}Free-Slide-Connector Nodon's{color[ffff]}{[0001|ffff]}\n{[0001|1a00]}{color[0400]}Slide Motion Input{color[ffff]}{[0001|ffff]} option is {[0001|1a00]}{color[0400]}disabled{color[ffff]}{[0001|ffff]},\nthe crate can {[0001|1a00]}{color[0400]}move freely{color[ffff]}{[0001|ffff]}!
086	Oh, I'm sorry... I barged in again,\ndidn't I? Please continue!
087	What can I say? You made it\nbetter! Thanks!
089	Yes, the crate is moving a whole lot better now.\nSo let's carry on and get this {[0001|1a00]}{color[0400]}switch{color[ffff]}{[0001|ffff]} built.
090	So, for the {[0001|1a00]}{color[0400]}switch{color[ffff]}{[0001|ffff]}...\nCall up a {[0001|1a00]}{color[0400]}box Object Nodon{color[ffff]}{[0001|ffff]}, please.
090-01	Now flip the viewpoint over to {[0001|1a00]}{color[0400]}side view{color[ffff]}{[0001|ffff]},\nif you will.
092	Let's make it look more like a switch\nby placing the Object Nodon so\n{[0001|1a00]}{color[0400]}it's poking out from the platform{color[ffff]}{[0001|ffff]}.
092-01	Switch back to the {[0001|1a00]}{color[0400]}overhead view{color[ffff]}{[0001|ffff]}.
092-02	Move the Object Nodon\nunderneath.
093	And now open up the \nObject Nodon's settings screen.
095	Under {[0001|1a00]}{color[0400]}Properties{color[ffff]}{[0001|ffff]}, {[0001|1a00]}{color[0400]}enable Visible{color[ffff]}{[0001|ffff]} only.
097	How about a nice {[0001|1a00]}{color[0400]}light blue\n{color[ffff]}{[0001|ffff]}for the {[0001|1a00]}{color[0400]}color{color[ffff]}{[0001|ffff]}?
098	Close the settings screen.
099	I wonder how that's\nlooking now...\nCould you take a look?
100	Oh! We have a {[0001|1a00]}{color[0400]}switch{color[ffff]}{[0001|ffff]}! Doesn't it just\nlook like something amazing would\nhappen if you pressed it?
101	If you remember, the plan is to\n{[0001|1a00]}{color[0400]}have a bridge appear when the\ncrate is on top of the switch{color[ffff]}{[0001|ffff]}.
102	So let's get programming!
103	We'll need something to let us know\n{[0001|1a00]}{color[0400]}when the crate is over the switch{color[ffff]}{[0001|ffff]}.
104	A {[0001|1a00]}{color[0400]}Touch-Sensor Nodon{color[ffff]}{[0001|ffff]} is just the\nthing for that. Let's call one up.
105	Meep...\nD-did you call?
106	{[0001|1a00]}{color[0400]}Connect{color[ffff]}{[0001|ffff]} the {[0001|1a00]}{color[0400]}Touch-Sensor Nodon{color[ffff]}{[0001|ffff]} to the\nswitch's {[0001|1a00]}{color[0400]}Object Nodon {color[ffff]}{[0001|ffff]}please.
107	Open up the settings screen\nfor the Touch-Sensor Nodon.
107-01	Under {[0001|1a00]}{color[0400]}Connection Point{color[ffff]}{[0001|ffff]}, set\n{[0001|1a00]}Own Connection Point {[0001|ffff]}to {[0001|1a00]}{color[0400]}Y-{color[ffff]}{[0001|ffff]} and\n{[0001|1a00]}Target Connection Point {[0001|ffff]}to {[0001|1a00]}{color[0400]}Y+{color[ffff]}{[0001|ffff]}.
107-02	You've just connected the Touch Sensor\nto {[0001|1a00]}{color[0400]}the top of the switch{color[ffff]}{[0001|ffff]}.
107-03	Close this screen.
108	Now open up the\n{[0001|1a00]}{color[0400]}Check What?{color[ffff]}{[0001|ffff]} settings.
109	{[0001|1a00]}{color[0400]}Enable Crate{color[ffff]}{[0001|ffff]} only.
110	Now close this screen.
110-01	And {[0001|1a00]}{color[0400]}disable Visible{color[ffff]}{[0001|ffff]} under {[0001|1a00]}{color[0400]}Properties{color[ffff]}{[0001|ffff]}.
111	And the settings are done, so\nlet's close the settings screen.
112	Now {[0001|1a00]}{color[0400]}when a box is placed over\nthe switch{color[ffff]}{[0001|ffff]}, the Touch-Sensor Nodon\nwill {[0001|1a00]}{color[0400]}output a signal{color[ffff]}{[0001|ffff]}.
113	All that remains is to make {[0001|1a00]}{color[0400]}the bridge\nthat appears{color[ffff]}{[0001|ffff]} when you hit the switch.
114	And what will we need for our\nmagically appearing bridge?
116	A {[0001|1a00]}{color[0400]}Teleport-Object-Entrance Nodon{color[ffff]}{[0001|ffff]}!\nCall one up!
117	Now {[0001|1a00]}{color[0400]}increase the size{color[ffff]}{[0001|ffff]} of this Nodon.\nMake it huge!
118	Now call up a {[0001|1a00]}{color[0400]}box Object Nodon{color[ffff]}{[0001|ffff]}.\nThis will be our bridge.
120	Scale up the Object Nodon so that\nit's large enough to serve as a bridge.
121	Open up the settings screen\nof the Object Nodon.
122	{[0001|1a00]}{color[0400]}Enable{color[ffff]}{[0001|ffff]} {[0001|1a00]}{color[0400]}Visible{color[ffff]}{[0001|ffff]} and {[0001|1a00]}{color[0400]}Solid\n{color[ffff]}{[0001|ffff]}only under {[0001|1a00]}{color[0400]}Properties{color[ffff]}{[0001|ffff]}.
123	Next, let's change its {[0001|1a00]}{color[0400]}color\n{color[ffff]}{[0001|ffff]}to a dynamic {[0001|1a00]}{color[0400]}yellow{color[ffff]}{[0001|ffff]}.
125	Now close the settings screen.
126	Next, open up the settings screen for the\nTeleport-Object-Entrance Nodon.
127	Under {[0001|1a00]}{color[0400]}Properties{color[ffff]}{[0001|ffff]},\n{[0001|1a00]}{color[0400]}disable Visible{color[ffff]}{[0001|ffff]}.
128	Open the {[0001|1a00]}{color[0400]}Teleport What?{color[ffff]}{[0001|ffff]} settings.
129	{[0001|1a00]}{color[0400]}Enable Box{color[ffff]}{[0001|ffff]} only.
130	Now close this screen.
131	And close the settings screen too.
133	We'll need an exit to go with the entrance.\nSo call up a {[0001|1a00]}{color[0400]}Teleport-Object-Exit Nodon{color[ffff]}{[0001|ffff]}.
134-01	We'll need to adjust the height a bit...\nFlip over to {[0001|1a00]}{color[0400]}side view{color[ffff]}{[0001|ffff]} to make it easier.
134-02	Move the Teleport-Object-Exit Nodon\nto the same height as the platform.
134-03	Flip back to the {[0001|1a00]}{color[0400]}overhead view{color[ffff]}{[0001|ffff]}.
135	Open the settings screen for\nthe Teleport-Object-Exit Nodon.
136	Under {[0001|1a00]}{color[0400]}Properties{color[ffff]}{[0001|ffff]}, {[0001|1a00]}{color[0400]}disable Visible{color[ffff]}{[0001|ffff]}.
137	Now close the settings screen.
138	OK! We've laid down some\nimportant groundwork for our\nappearing bridge.
139	When the {[0001|1a00]}{color[0400]}Touch-Sensor Nodon{color[ffff]}{[0001|ffff]} outputs to\nthe {[0001|1a00]}{color[0400]}Teleport-Object-Entrance Nodon{color[ffff]}{[0001|ffff]},\nthat should make the bridge warp.
141	It's a long way off, so it'll be tricky\nto connect them directly... Call up a\n{[0001|1a00]}{color[0400]}Wormhole-Entrance Nodon{color[ffff]}{[0001|ffff]}!
142	Entrance A, preparing for contact with\nTouch-Sensor Nodon, over.
143	Pop it over to the side of\nthe Touch-Sensor Nodon.
144	Connect the {[0001|1a00]}{color[0400]}Touch-Sensor Nodon{color[ffff]}{[0001|ffff]} and\nthe {[0001|1a00]}{color[0400]}Wormhole-Entrance Nodon{color[ffff]}{[0001|ffff]}.
145	We've got the entrance, and\nnow we'll need an exit. Let's\ncall up a {[0001|1a00]}{color[0400]}Wormhole-Exit Nodon{color[ffff]}{[0001|ffff]}.
146	This is Exit A, solid copy.\nConnecting to destination,\nover and out!
147	Take that over to the side of the\nTeleport-Object-Entrance Nodon.
148	And connect the {[0001|1a00]}{color[0400]}Wormhole-Exit Nodon{color[ffff]}{[0001|ffff]}\nto the {[0001|1a00]}{color[0400]}Teleport-Object-Entrance Nodon{color[ffff]}{[0001|ffff]}.
149	And there we have it! With that final touch,\n{[0001|1a00]}{color[0400]}putting the crate on the switch will cause\nthe bridge to appear{color[ffff]}{[0001|ffff]}! This is so great!
150	Let's check it out on the game screen!
151	Push the crate over the switch...\nOoh, exciting!
152	And out of nowhere, there's our bridge!
153	Ta-daa! Go ahead and clap.\nYou know you want to.
154	Hmmm...\nThe whole deal of the bridge materializing\nout of thin air... It's not very clear, is it?
155	Haha! Underestimate me\nat your peril, Alice!
156	We're not quite done here yet!\nI've got more to show you!
157	I've planned some thrilling\neffects to accompany the\nappearance of the bridge.
158	Ooh!
159	We're going to need just a bit more\nprogramming from you, {[0201]}!
160	Let's call up a {[0001|1a00]}{color[0400]}smoke Effect Nodon{color[ffff]}{[0001|ffff]}!
161	Oh! Hello!
162	So, you've got a fancy bridge appearing out\nof nowhere, and you want to make a big\nsong and dance about it, eh?
163	Yeah, a bridge appearing out of\nthin air is all well and good, but...
164	I just hope it doesn't disappear back\ninto thin air while you're jogging over\nit! 'Cause that's not so great!
166	OK, make the Effect Nodon\na touch bigger.
166000	Open up the Effect Nodon's settings screen.
166001000	Set {[0001|1a00]}{color[0400]}Effect Location{color[ffff]}{[0001|ffff]} to {[0001|1a00]}{color[0400]}World{color[ffff]}{[0001|ffff]}.
166001001	And under {[0001|1a00]}{color[0400]}Properties{color[ffff]}{[0001|ffff]}, {[0001|1a00]}{color[0400]}disable Visible{color[ffff]}{[0001|ffff]}.
166002	Now just close the settings screen.
167	Next, if you could call up\na {[0001|1a00]}{color[0400]}Wormhole-Exit Nodon{color[ffff]}{[0001|ffff]}.
167000	Place it over to the side\nof the Effect Nodon.
168	Then connect the {[0001|1a00]}{color[0400]}Wormhole-Exit Nodon\n{color[ffff]}{[0001|ffff]}to the {[0001|1a00]}{color[0400]}Effect Nodon{color[ffff]}{[0001|ffff]}.
169	The Wormhole-Exit Nodon's\n{[0001|1a00]}{color[0400]}Wormhole ID{color[ffff]}{[0001|ffff]} is {[0001|1a00]}{color[0400]}A{color[ffff]}{[0001|ffff]}, so...
170	{[0001|1a00]}{color[0400]}the output from the\nTouch-Sensor Nodon\n{color[ffff]}{[0001|ffff]}will warp over here.
171	That's right, Alice!
172	And that's what will make the\nsmoke effect trigger {[0001|1a00]}{color[0400]}at the same\ntime that bridge appears{color[ffff]}{[0001|ffff]}!
173	Let's see how it works\non the game screen.
174	Push the crate over on top of\nthe switch to make the bridge appear...
175	And presto! The bridge appeared, and\nthe smoke effect triggered! Brilliant!
176	Pretty cool!
177	It's a whole lot easier to\nsee what's going on now.
178	You get it?
179	OK! Back to the program screen!
186	One last thing to tell you now...
187	Step 4 is complete!
188-01	Tastefully done!
188-02	Job well done!
188-03	Meep... Congratulations!
189	With this gimmick, we're edging\never closer to completing\nSuper Person World.
190	In the next step, we'll be upping\nthe ante with an enemy character!
191	An enemy character? Good idea!
192	I can hardly stand\nthe anticipation!
193	See you at the next step!
194	Looking forward to it!
Lesson_3DAction_03b.msbt
000	OK, since you chose my gimmick,\nI'd better explain it again.
001	We're going to make {[0001|1a00]}{color[0400]}a bridge that\nappears when you activate a switch,\nbut disappears after 10 seconds{color[ffff]}{[0001|ffff]}.
002	It'll be more challenging if\nthere's a time limit, right?\nAnd more fun!
003	Let's get started by\nmaking the {[0001|1a00]}{color[0400]}switch{color[ffff]}{[0001|ffff]}.
004	First, call up a {[0001|1a00]}{color[0400]}box Object Nodon{color[ffff]}{[0001|ffff]}.
005	Ayup.\nMakin' a switch, huh?
005-01	Flip to the {[0001|1a00]}{color[0400]}side view{color[ffff]}{[0001|ffff]}.
005-02	We'll need it to jut up and out from the\nplatform a bit, just like a switch.\nCould you move it into position?
005-03	OK, back to the {[0001|1a00]}{color[0400]}overhead view{color[ffff]}{[0001|ffff]}.
005000	Move the Object Nodon underneath.
006	Open up the Object Nodon's settings menu.
007	Under {[0001|1a00]}{color[0400]}Properties{color[ffff]}{[0001|ffff]}, {[0001|1a00]}{color[0400]}enable Visible{color[ffff]}{[0001|ffff]} only.
009	Let's set the {[0001|1a00]}{color[0400]}color{color[ffff]}{[0001|ffff]} to {[0001|1a00]}{color[0400]}light blue{color[ffff]}{[0001|ffff]}\nwhile we're here.
012	OK!\nClose the settings screen.
013	Time to check it out on the game screen!
014	Hmm...\nIt's quite a hike over to\nthe switch, right?
015	Let's head back to the program screen\nand {[0001|1a00]}{color[0400]}make it so that you can travel to\nthe switch instantly{color[ffff]}{[0001|ffff]}.
016	{[0001|1a00]}{color[0400]}Teleport-Object Nodon {color[ffff]}{[0001|ffff]}are just\nthe thing for traveling instantly\nto our switch.
017	First, let's call up a\n{[0001|1a00]}{color[0400]}Teleport-Object-Entrance Nodon{color[ffff]}{[0001|ffff]}.
018	You need our dimension-bending\npowers to develop your ambition.\nLet us aid you.
019	We are open to you, noble programmer.\nAn open door to mystery and might,\nat your disposal.
020	We'll use this {[0001|1a00]}{color[0400]}Teleport-Object-Entrance Nodon\n{color[ffff]}{[0001|ffff]}to warp our player.
022	Place the {[0001|1a00]}{color[0400]}Teleport-Object-Entrance Nodon{color[ffff]}{[0001|ffff]}\nover the top of Person Nodon.
023	Open the settings screen for the\nTeleport-Object-Entrance Nodon.
024	Set the {[0001|1a00]}{color[0400]}Teleport ID {color[ffff]}{[0001|ffff]}to {[0001|1a00]}{color[0400]}H{color[ffff]}{[0001|ffff]}.
025	Now open the {[0001|1a00]}{color[0400]}Teleport What?{color[ffff]}{[0001|ffff]} menu.
026	{[0001|1a00]}{color[0400]}Enable Person{color[ffff]}{[0001|ffff]} only.
027	Now, if you could close this screen...
028	and close the settings screen...
030	Now we'll need an exit to go with the entrance.\nCall up a {[0001|1a00]}{color[0400]}Teleport-Object-Exit Nodon{color[ffff]}{[0001|ffff]}.
031	I have heard all about your brave ambition\nfrom my compatriots, noble programmer.\nWe salute you.
032	Let us aid in your creative endeavors\nwith our powers of teleportation.
032-01	Now flip over to the {[0001|1a00]}{color[0400]}side view{color[ffff]}{[0001|ffff]}.
032-02	Increase the Teleport-Object-Exit Nodon's\nsize a bit, and place it above the platform.
032-03	Now flip back to the {[0001|1a00]}{color[0400]}overhead view{color[ffff]}{[0001|ffff]}...
036	Open up the settings screen for the\nTeleport-Object-Exit Nodon.
037	Set the {[0001|1a00]}{color[0400]}Teleport ID{color[ffff]}{[0001|ffff]} to {[0001|1a00]}{color[0400]}H{color[ffff]}{[0001|ffff]}.
038	Now close the settings screen.
040	OK, we need to check this\nout on the game screen!
041	Yes, that switch is looking\nsuitably switchy, if you ask me.
042	We've got the switch, so now we need\nto make {[0001|1a00]}{color[0400]}the bridge that appears when\nthe switch is pressed{color[ffff]}{[0001|ffff]}.
043	Let's call up a {[0001|1a00]}{color[0400]}Touch-Sensor Nodon{color[ffff]}{[0001|ffff]} first.
044	Meep... Oh, it's you, Alice!\nDo you need me to do something?
045	{[0001|1a00]}{color[0400]}Connect{color[ffff]}{[0001|ffff]} the {[0001|1a00]}{color[0400]}Touch-Sensor Nodon\n{color[ffff]}{[0001|ffff]}to the switch's {[0001|1a00]}{color[0400]}Object Nodon{color[ffff]}{[0001|ffff]}.
046	Open the Touch-Sensor Nodon's\nsettings screen.
046000	Under {[0001|1a00]}{color[0400]}Properties{color[ffff]}{[0001|ffff]}, {[0001|1a00]}{color[0400]}disable Visible{color[ffff]}{[0001|ffff]}.
047	Open the {[0001|1a00]}{color[0400]}Check What?{color[ffff]}{[0001|ffff]} menu.
048	{[0001|1a00]}{color[0400]}Enable Person{color[ffff]}{[0001|ffff]} only.
049	Now close this screen.
050	And close the settings screen.
051	Thanks to all of that, {[0001|1a00]}{color[0400]}when the player\npresses the button{color[ffff]}{[0001|ffff]}, {[0001|1a00]}{color[0400]}the Touch-Sensor\nNodon will output a signal{color[ffff]}{[0001|ffff]}.
052	Next, we'll need to make {[0001|1a00]}{color[0400]}the bridge\nthat will appear{color[ffff]}{[0001|ffff]} when the Touch-Sensor\nNodon outputs its signal.
053	We'll be using another pair of\n{[0001|1a00]}{color[0400]}Teleport-Object Nodon {color[ffff]}{[0001|ffff]}for the\nappearing bridge.
054	To get started, let's\ncall up a {[0001|1a00]}{color[0400]}Teleport-Object-Entrance Nodon{color[ffff]}{[0001|ffff]}.
055	Now scale it up.
056	Next, call up a {[0001|1a00]}{color[0400]}box Object Nodon{color[ffff]}{[0001|ffff]}.\nThis is going to serve as our bridge.
057	Ayup.\nMakin' a bridge eh? Cool.
058	Make the Object Nodon bigger\nso it's bridge-sized.
059	Open up the Object Nodon's settings screen.
060	Under {[0001|1a00]}{color[0400]}Properties{color[ffff]}{[0001|ffff]}, {[0001|1a00]}{color[0400]}enable{color[ffff]}{[0001|ffff]}\nonly {[0001|1a00]}{color[0400]}Visible{color[ffff]}{[0001|ffff]} and {[0001|1a00]}{color[0400]}Solid{color[ffff]}{[0001|ffff]}.
062	While we're here, set the\n{[0001|1a00]}{color[0400]}color{color[ffff]}{[0001|ffff]} to {[0001|1a00]}{color[0400]}yellow{color[ffff]}{[0001|ffff]}.
063	Close the settings screen.
064	Now open up the settings screen for the\n{[0001|1a00]}{color[0400]}Teleport-Object-Entrance Nodon{color[ffff]}{[0001|ffff]}.
065	{[0001|1a00]}{color[0400]}Disable Visible{color[ffff]}{[0001|ffff]} under {[0001|1a00]}{color[0400]}Properties{color[ffff]}{[0001|ffff]}.
066	Now open up the {[0001|1a00]}{color[0400]}Teleport What?{color[ffff]}{[0001|ffff]} menu.
067	Enable {[0001|1a00]}{color[0400]}Box{color[ffff]}{[0001|ffff]} and nothing else.
068	Now close this screen.
069	Close the settings screen too.
070	Now let's complete the pair with\na {[0001|1a00]}{color[0400]}Teleport-Object-Exit Nodon{color[ffff]}{[0001|ffff]}.
070-01	We'll be adjusting the height here.\nLet's switch to {[0001|1a00]}{color[0400]}side view{color[ffff]}{[0001|ffff]} to make\nthat a bit easier.
070-02	Move the Teleport-Object-Exit Nodon\nso that it's at the same height as the\ntop of the platform.
070-03	Now flip back to {[0001|1a00]}{color[0400]}overhead view{color[ffff]}{[0001|ffff]}.
072	Open up the settings screen for the\nTeleport-Object-Exit Nodon.
073	Under {[0001|1a00]}{color[0400]}Properties{color[ffff]}{[0001|ffff]}, {[0001|1a00]}{color[0400]}disable Visible{color[ffff]}{[0001|ffff]}.
074	Now close the settings screen.
075	OK! We're done with the prep\nwork for our appearing bridge.
076	If we send the output from the\n{[0001|1a00]}{color[0400]}Touch-Sensor Nodon{color[ffff]}{[0001|ffff]} to the\n{[0001|1a00]}{color[0400]}Teleport-Object-Entrance Nodon{color[ffff]}{[0001|ffff]}...
076-01	the Teleport-Object-Exit Nodon\nwill trigger, and {[0001|1a00]}{color[0400]}the bridge will seem\nto appear out of nowhere{color[ffff]}{[0001|ffff]}.
078	OK, now for a bit of housekeeping...\nCall up a {[0001|1a00]}{color[0400]}Wormhole-Entrance Nodon{color[ffff]}{[0001|ffff]} to get\nthe output from the Touch-Sensor Nodon.
079	Entrance A, preparing for contact with\nTouch-Sensor Nodon, over.
080	Pull the Wormhole-Entrance Nodon\nover to the blue frame.
081	Now link the {[0001|1a00]}{color[0400]}Touch-Sensor Nodon{color[ffff]}{[0001|ffff]}\nto the {[0001|1a00]}{color[0400]}Wormhole-Entrance Nodon{color[ffff]}{[0001|ffff]}.
082	Now call up a {[0001|1a00]}{color[0400]}Wormhole-Exit Nodon{color[ffff]}{[0001|ffff]},\nplease.
083	This is Exit A, solid copy.\nConnecting to destination,\nover and out!
084	Place it over to the side of the\nTeleport-Object Nodon.
085	Now connect the {[0001|1a00]}{color[0400]}Wormhole-Exit Nodon{color[ffff]}{[0001|ffff]}\nand the {[0001|1a00]}{color[0400]}Teleport-Object-Entrance Nodon{color[ffff]}{[0001|ffff]}.
086	The final touches for that are all wrapped up!\nNow {[0001|1a00]}{color[0400]}pressing the switch will cause the\nbridge to appear{color[ffff]}{[0001|ffff]}.
087	Let's check that on the game screen!
088	Try pushing the switch.
089	There you go!\nThe bridge appeared!
090	Well, I mean, it appeared, sure.\nI didn't really FEEL it appear though.\nKind of a weak entrance, no?
091	Hmmm...\nYou've got a point, Bob.
092	Hey, Alice! I've got an idea!
093	OK...\nDo you mind sharing?
094	{[c903]}{[0201]}!\nTo the program screen!
095	We want to really hammer\nhome the bridge appearing.\nLike, POW! It's a bridge!
096	Call up a {[0001|1a00]}{color[0400]}smoke Effect Nodon{color[ffff]}{[0001|ffff]}.
097	Oof, hello!
098	So, you've got a fancy bridge appearing out\nof nowhere, and you want to make a big\nsong and dance about it, eh?
099	Yup, a bridge appearing out of\nnowhere's all well and good.
100	But if nobody notices it appearing,\nthat's not so good!
101	Er... Wise words!\nOK, make the Effect Nodon larger.
102000	Open up the settings screen\nfor the Effect Nodon.
102001	Set the {[0001|1a00]}{color[0400]}Effect Location{color[ffff]}{[0001|ffff]}\nto {[0001|1a00]}{color[0400]}World{color[ffff]}{[0001|ffff]}.
1020031000	Then, under {[0001|1a00]}{color[0400]}Properties{color[ffff]}{[0001|ffff]},\n{[0001|1a00]}{color[0400]}disable Visible{color[ffff]}{[0001|ffff]}.
102002	Now close the settings screen.
103	Next, call up a\n{[0001|1a00]}{color[0400]}Wormhole-Exit Nodon{color[ffff]}{[0001|ffff]}.
103000	Place it over to the\nside of the Effect Nodon.
104	Connect the Effect Nodon\nto the Wormhole-Exit Nodon.
105	Ah...\nSo the {[0001|1a00]}{color[0400]}Wormhole ID{color[ffff]}{[0001|ffff]} of this\n{[0001|1a00]}{color[0400]}Wormhole-Exit Nodon{color[ffff]}{[0001|ffff]} is {[0001|1a00]}{color[0400]}A{color[ffff]}{[0001|ffff]}...
106	That means the {[0001|1a00]}{color[0400]}Touch-Sensor Nodon's\noutput{color[ffff]}{[0001|ffff]} will warp over here!
107	Correct!
108	And thanks to that, the effect will\ntrigger {[0001|1a00]}{color[0400]}at the same moment as the\nbridge warps{color[ffff]}{[0001|ffff]}!
109	OK, time to check it out\nover on the game screen!
110	Try pushing the switch...
111	There we go!\nThe bridge appeared in a puff of {[0001|1a00]}{color[0400]}smoke{color[ffff]}{[0001|ffff]}!
112	Oh!
113	That's a nice effect!
114	Right?
115	Oh... Wow... Uh...\nSorry for butting in...
116	Not at all!\nIt's looking great now.
117	Thanks...
118	Next up, we'll be adding to the\nsetup so that {[0001|1a00]}{color[0400]}the bridge disappears\nafter 10 seconds{color[ffff]}{[0001|ffff]}.
119	OK, back to the program screen!
120	I should warn you, {[0201]}...\nIt's going to get a little tricky from here.\nBut I'm sure you can handle it.
121	Let's start by calling\nup a {[0001|1a00]}{color[0400]}Flag Nodon{color[ffff]}{[0001|ffff]}.
122	Zzz...
123	Move the Flag Nodon, like so...
124	And connect the Touch-Sensor Nodon\nto the Flag Nodon's {[0001|1a00]}{color[0400]}on port{color[ffff]}{[0001|ffff]}.
125	Now, {[0001|1a00]}{color[0400]}when the player pushes\nthe switch, the Flag Nodon will\nswitch on{color[ffff]}{[0001|ffff]} as well.
126	Zzzz...I'll wake up...when the\nswitch is pressed... Zzz...
127	Next, if you could call\nup a {[0001|1a00]}{color[0400]}Timer Nodon{color[ffff]}{[0001|ffff]}...
128	Tsk... Calling me up...again!
129	Something tells me this lesson\nisn't running according to schedule.\nDo you even have a schedule?
130	I don't have time to file a formal complaint,\nbut you really ought to schedule things\nproperly and precisely, you know!
131	Sure... It's good to be organized.\nBut going off track and just making\nwhat you like... That's fun too!
132	Hmmm... Well, like I said, I don't\nhave time to file a complaint.
133	Now that the Timer Nodon has had its say,\ndrag it over to the side of the Flag Nodon.
134	Connect the Flag Nodon\nand the Timer Nodon.
135	Now when the player pushes\nthe switch, the {[0001|1a00]}{color[0400]}Flag Nodon will\nturn on{color[ffff]}{[0001|ffff]}. And then...
136	the Timer Nodon will\nstart to {[0001|1a00]}{color[0400]}output a signal\nevery second{color[ffff]}{[0001|ffff]}.
137	OK, now we'll need to keep\ntrack of the passing seconds.\nCall up a {[0001|1a00]}{color[0400]}Counter Nodon{color[ffff]}{[0001|ffff]}.
138	ONCE THE SWITCH IS PUSHED, WE MUST\nCOUNT HOW MANY SECONDS PASS.\nI AM UNIQUELY PREPARED FOR THIS TASK.
139	Put the Counter Nodon over\nto the side of the Timer Nodon,\nif you could...
140	Now connect the Timer Nodon to\nthe Counter Nodon's {[0001|1a00]}{color[0400]}count up port{color[ffff]}{[0001|ffff]}.
141	And with that, our {[0001|1a00]}{color[0400]}second-counting\nsetup{color[ffff]}{[0001|ffff]} is complete.
142	Next, we'll need to find a way\nto calculate the {[0001|1a00]}{color[0400]}remaining time{color[ffff]}{[0001|ffff]}.
143	So, the plan is to create a bridge\nthat vanishes after {[0001|1a00]}{color[0400]}10 seconds{color[ffff]}{[0001|ffff]}.
144	If we subtract {[0001|1a00]}{color[0400]}the number of seconds\nthat pass after the player hits the switch\n{color[ffff]}{[0001|ffff]}from the constant value {[0001|1a00]}{color[0400]}10.00{color[ffff]}{[0001|ffff]}...
145	then we'll be able to calculate\nthe {[0001|1a00]}{color[0400]}remaining time{color[ffff]}{[0001|ffff]}.
146	OK, so first, call up a \n{[0001|1a00]}{color[0400]}Constant Nodon{color[ffff]}{[0001|ffff]} please.
147	I am the Constant Nodon,\nwholly unaffected by the\npassing of the eons!
148	Place the Constant Nodon\nabove the Counter Nodon.
149	Open up the settings screen.
150	And set the Constant Nodon's\nvalue to {[0001|1a00]}{color[0400]}10.00{color[ffff]}{[0001|ffff]}.
150000	Now close the settings screen.
151	Now call up a {[0001|1a00]}{color[0400]}subtraction\nCalculator Nodon{color[ffff]}{[0001|ffff]}.
152	I AM A VERY GOOD CALCULATOR.\nI WILL CALCULATE THE REMAINING\nSECONDS.
153	Put the Calculator Nodon over\nto the side of the Counter Nodon.
154	Now connect the Constant Nodon\nto the Calculator Nodon's {[0001|1a00]}{color[0400]}input 1 port{color[ffff]}{[0001|ffff]}.
155	Next, connect the Counter Nodon\nto the Calculator Nodon's {[0001|1a00]}{color[0400]}input 2 port{color[ffff]}{[0001|ffff]}.
156	Now {[0001|1a00]}{color[0400]}the{color[ffff]}{[0001|ffff]} {[0001|1a00]}{color[0400]}Calculator Nodon will\noutput the remaining seconds{color[ffff]}{[0001|ffff]}.
157	Now, we need to figure out\na way to {[0001|1a00]}{color[0400]}display the remaining\ntime on the game screen{color[ffff]}{[0001|ffff]}.
158	Let's make it so that the remaining\nseconds display just off to the side\nof the bridge.
159	So for displaying numbers, let's\ncall up a {[0001|1a00]}{color[0400]}Number-Object Nodon{color[ffff]}{[0001|ffff]}.
160	Ah... The remaining time is {[0001|1a00]}{color[0400]}calculated\nby subtracting the elapsed time from\nthe time limit{color[ffff]}{[0001|ffff]}. Make a note of that!
161	You can use this to calculate remainders for all\nkinds of things, like remaining lives, missiles,\nor enemies. Useful indeed!
161-01	Very informative!\nSwitch to the {[0001|1a00]}{color[0400]}side view{color[ffff]}{[0001|ffff]}, please!
161-02	Now make the Number-Object Nodon bigger.
161-03	And flip back to {[0001|1a00]}{color[0400]}overhead view{color[ffff]}{[0001|ffff]}.
162	Open up the settings screen\nfor the Number-Object Nodon.
163	Under {[0001|1a00]}{color[0400]}Properties{color[ffff]}{[0001|ffff]}, {[0001|1a00]}{color[0400]}enable Visible{color[ffff]}{[0001|ffff]} only.
164	Now close the settings screen.
165	We'll want to put the {[0001|1a00]}{color[0400]}output{color[ffff]}{[0001|ffff]} from\nthe {[0001|1a00]}{color[0400]}Calculator Nodon{color[ffff]}{[0001|ffff]} into the\nNumber-Object Nodon here.
166	But it's kind of far away, right?\nCall up a {[0001|1a00]}{color[0400]}Wormhole-Entrance Nodon{color[ffff]}{[0001|ffff]}!
167	Open up the settings screen.
168	Now set the {[0001|1a00]}{color[0400]}Wormhole ID{color[ffff]}{[0001|ffff]} to {[0001|1a00]}{color[0400]}C{color[ffff]}{[0001|ffff]}.
169	Close the settings screen.
170	Connect the Calculator Nodon\nand the Wormhole-Entrance Nodon.
171	Now call up a {[0001|1a00]}{color[0400]}Wormhole-Exit Nodon{color[ffff]}{[0001|ffff]}.
172	Open up the settings screen.
173	Then set the {[0001|1a00]}{color[0400]}Wormhole ID{color[ffff]}{[0001|ffff]} to {[0001|1a00]}{color[0400]}C{color[ffff]}{[0001|ffff]}.
174	Close the settings screen.
175	And connect the Wormhole-Exit Nodon\nand the Number-Object Nodon.
176	OK, so this setup should be displaying\nthe calculation result, in other words,\nthe {[0001|1a00]}{color[0400]}remaining time{color[ffff]}{[0001|ffff]}.
177	Let's take a look on the game screen!
178	Press the switch...
179	The timer over to the side of the\nbridge is {[0001|1a00]}{color[0400]}counting down{color[ffff]}{[0001|ffff]}, as it should!
180	So now you'll know exactly {[0001|1a00]}{color[0400]}how long\nyou have left{color[ffff]}{[0001|ffff]} until the bridge vanishes.
181	Of course, the bridge isn't vanishing just yet.\nLet's fix that with some more programming.
182	Before we look at that...\nSee the numerals on the countdown timer?
182-01	Hit the switch again so we can\nlook at the numerals, would you?
183	They're into {[0001|1a00]}{color[0400]}minus{color[ffff]}{[0001|ffff]} numbers now.
184	{[0001|1a00]}{color[0400]}So the count doesn't stop at zero{color[ffff]}{[0001|ffff]}.\nIt just keeps on going.
185	So we'll need to make a few\nchanges to have the {[0001|1a00]}{color[0400]}countdown\nstop when it reaches zero{color[ffff]}{[0001|ffff]}.
186	What do we need to make\nthe count stop at zero?
187	First, we'll need a way to check whether\nor not {[0001|1a00]}{color[0400]}the remaining time has hit zero{color[ffff]}{[0001|ffff]}.
188	And which Nodon helps us\nwhen we want to do that?
189	The {[0001|1a00]}{color[0400]}Comparison Nodon{color[ffff]}{[0001|ffff]}!\nCall one up, the {[0001|1a00]}{color[0400]}={color[ffff]}{[0001|ffff]} type.
190	Oh... The remaining time... Is it zero yet?\nIs it? I'm so curious!
191	Put the Comparison Nodon over to the\nside of the Calculator Nodon.
192	Now call up another {[0001|1a00]}{color[0400]}Constant Nodon{color[ffff]}{[0001|ffff]}.
193	Place that one above\nthe Calculator Nodon.
194	Open up the Constant Nodon's settings.
196	Set the value to {[0001|1a00]}{color[0400]}0.00{color[ffff]}{[0001|ffff]}.
197	Now close the settings screen.
198	Connect the Constant Nodon to the\nComparison Nodon's {[0001|1a00]}{color[0400]}input 1 port{color[ffff]}{[0001|ffff]}.
199	Then connect the Calculator Nodon\nto the Comparison Nodon's {[0001|1a00]}{color[0400]}input 2 port{color[ffff]}{[0001|ffff]}.
200	This setup will let us know {[0001|1a00]}{color[0400]}when\nthe remaining time has reached zero{color[ffff]}{[0001|ffff]}.
201	Now call up a {[0001|1a00]}{color[0400]}Wormhole-Entrance Nodon{color[ffff]}{[0001|ffff]}.
202	And put it by the Comparison Nodon.
203	Open the settings screen.
204	Set the {[0001|1a00]}{color[0400]}Wormhole ID{color[ffff]}{[0001|ffff]} to {[0001|1a00]}{color[0400]}B{color[ffff]}{[0001|ffff]}.
205	And close the settings screen.
206	So, we just connect this\nto the Comparison Nodon...
207	and now information on {[0001|1a00]}{color[0400]}whether or not the\nremaining time is zero{color[ffff]}{[0001|ffff]} will be received by\n{[0001|1a00]}{color[0400]}Wormhole-Entrance Nodon B{color[ffff]}{[0001|ffff]}.
207000	If you remember, our aim here is to stop\nthe countdown when the timer hits zero.
208	So we'll use the {[0001|1a00]}{color[0400]}B Wormhole-Exit Nodon\n{color[ffff]}{[0001|ffff]}to turn the {[0001|1a00]}{color[0400]}Flag Nodon{color[ffff]}{[0001|ffff]} off.
209	OK, call up a {[0001|1a00]}{color[0400]}Wormhole-Exit Nodon{color[ffff]}{[0001|ffff]}, please!
210	Put it underneath the Flag Nodon here.
211	And open the settings screen.
212	Set the {[0001|1a00]}{color[0400]}Wormhole ID{color[ffff]}{[0001|ffff]} to {[0001|1a00]}{color[0400]}B{color[ffff]}{[0001|ffff]}.
213	Now close the settings screen.
214	Connect the {[0001|1a00]}{color[0400]}Wormhole-Exit Nodon\n{color[ffff]}{[0001|ffff]}to the {[0001|1a00]}{color[0400]}Flag{color[ffff]}{[0001|ffff]} {[0001|1a00]}{color[0400]}Nodon{color[ffff]}{[0001|ffff]}'s {[0001|1a00]}{color[0400]}off port{color[ffff]}{[0001|ffff]}.
215	Now the {[0001|1a00]}{color[0400]}Flag Nodon{color[ffff]}{[0001|ffff]} will switch off\n{[0001|1a00]}{color[0400]}when the remaining time hits zero{color[ffff]}{[0001|ffff]}.
216	So {[0001|1a00]}{color[0400]}when the signal to\nthe Timer Nodon stops{color[ffff]}{[0001|ffff]}...
217	{[0001|1a00]}{color[0400]}the countdown will stop{color[ffff]}{[0001|ffff]} as well!
218	Next up, let's make it so that, {[0001|1a00]}{color[0400]}when the\nFlag Nodon goes off{color[ffff]}{[0001|ffff]}, the remaining time\nwill return to {[0001|1a00]}{color[0400]}10{color[ffff]}{[0001|ffff]}.
219	When the Flag Nodon is off, we'll\nneed the {[0001|1a00]}{color[0400]}Counter Nodon{color[ffff]}{[0001|ffff]} to reset.
220	Since this is going to happen when an\noutput is off, we'll need a {[0001|1a00]}{color[0400]}NOT Nodon{color[ffff]}{[0001|ffff]}.\nCall one up!
221	Well, if it isn't {[0201]}!\nThis isn't the last game you're making...\nor is it?
222	To be honest, I wasn't not half\nlooking forward to it!
224	Connect the Flag Nodon and\nthe NOT Nodon.
225	Then connect the NOT Nodon to\nthe Counter Nodon's {[0001|1a00]}{color[0400]}reset port{color[ffff]}{[0001|ffff]}.
226	And that completes the setup for\n{[0001|1a00]}{color[0400]}resetting the remaining time to 10\nwhen it hits zero{color[ffff]}{[0001|ffff]}.
227	Let's check it out on the game screen!
228	Try pushing the switch...
229	Pay attention to the number\nto the side of the bridge...
229-01	Hit the switch again!
230	There you go!\nThe remaining time counted down\nto zero, and then it went back to 10!
231	So our 10-second counter is complete.
232	Hey, you know... We've really done\na heck of a lot of programming here...
233	{[c903]}{[0201]}, you must\nbe exhausted!
234	Oh, come on. {[c903]}{[0201]}'s\ngot a ton of energy!
235	Just a little bit more,\nand we're done.
236	The last thing we need is {[0001|1a00]}{color[0400]}the bridge that\nwill disappear{color[ffff]}{[0001|ffff]} when our timer hits zero.
237	But before we get to work\non our disappearing bridge...
238	take a look at the {[0001|1a00]}{color[0400]}Wormhole-Entrance Nodon{color[ffff]}{[0001|ffff]},\nthe one with {[0001|1a00]}{color[0400]}Wormhole ID A{color[ffff]}{[0001|ffff]}.
239	This Wormhole-Entrance Nodon\nreceives a signal {[0001|1a00]}{color[0400]}every time the\nswitch is pressed{color[ffff]}{[0001|ffff]}.
240	This signal will warp to the\nWormhole-Exit Nodon that's\n{[0001|1a00]}{color[0400]}connected to the Effect Nodon{color[ffff]}{[0001|ffff]}.
242	So that means that each time\nthe button is pressed, the effect\nwill be triggered.
243	It doesn't look too good\nthough, does it?
244	Can we improve it?\nI think we can!
245	{[0001|1a00]}{color[0400]}Delete the connection{color[ffff]}{[0001|ffff]} between\nthe Touch-Sensor Nodon and the\nWormhole-Entrance Nodon.
246	Move the {[0001|1a00]}{color[0400]}A Wormhole-Entrance\nNodon{color[ffff]}{[0001|ffff]} to the side.
247	Now connect the {[0001|1a00]}{color[0400]}Flag Nodon{color[ffff]}{[0001|ffff]} to\nthe {[0001|1a00]}{color[0400]}Wormhole-Entrance Nodon{color[ffff]}{[0001|ffff]}.
248	Thanks to this change, the effect will\ntrigger only when the {[0001|1a00]}{color[0400]}Flag Nodon\nswitches from off to on{color[ffff]}{[0001|ffff]}.
249	Much neater!
250	OK, back to the main task!
251	Which is...{[0001|1a00]}{color[0400]}making a bridge that\ndisappears when the timer hits zero{color[ffff]}{[0001|ffff]}.
252	So, we'll be making something disappear...\nCall up a {[0001|1a00]}{color[0400]}Teleport-Object-Entrance Nodon{color[ffff]}{[0001|ffff]}\nto help us with that.
254	Open the settings screen.
255	Set the {[0001|1a00]}{color[0400]}Teleport ID{color[ffff]}{[0001|ffff]} to {[0001|1a00]}{color[0400]}B{color[ffff]}{[0001|ffff]}.
255000	{[0001|1a00]}{color[0400]}Disable Visible{color[ffff]}{[0001|ffff]} under {[0001|1a00]}{color[0400]}Properties{color[ffff]}{[0001|ffff]}.
255001	Open up the {[0001|1a00]}{color[0400]}Teleport What?{color[ffff]}{[0001|ffff]} menu.
255002	{[0001|1a00]}{color[0400]}Enable Box{color[ffff]}{[0001|ffff]} only.
255003	Now close this screen.
256	And the settings screen.
257	Make the Teleport-Object-Entrance Nodon bigger.
257-01	We'll adjust its height here, so flip\nthe view over to {[0001|1a00]}{color[0400]}side view{color[ffff]}{[0001|ffff]}.
257-02	We'll be warping the bridge, so\nmake the Nodon the same height.
257-03	Now go back to the {[0001|1a00]}{color[0400]}overhead view{color[ffff]}{[0001|ffff]}.
258	Hey, do you remember which Nodon\nwe're using to tell us {[0001|1a00]}{color[0400]}when the\nremaining time hits zero{color[ffff]}{[0001|ffff]}?
259	That would be...\nthe {[0001|1a00]}{color[0400]}Wormhole-Exit Nodon{color[ffff]}{[0001|ffff]} with the\n{[0001|1a00]}{color[0400]}Wormhole ID B{color[ffff]}{[0001|ffff]}.
260	Now call up a {[0001|1a00]}{color[0400]}Wormhole-Exit Nodon{color[ffff]}{[0001|ffff]}.
261	And open up its settings screen.
262	Set the {[0001|1a00]}{color[0400]}Wormhole ID{color[ffff]}{[0001|ffff]} to {[0001|1a00]}{color[0400]}B{color[ffff]}{[0001|ffff]}.
263	Now close the settings screen.
264	Connect the Wormhole-Exit Nodon to\nthe Teleport-Object-Entrance Nodon.
265	Now {[0001|1a00]}{color[0400]}the bridge will vanish when\nthe remaining time hits zero{color[ffff]}{[0001|ffff]}.
266	But, when the bridge has vanished,\nit won't come back...
267	That's too unforgiving, don't you think?
268	Just a little, yeah...
269	So let's make it so that {[0001|1a00]}{color[0400]}the bridge reappears\nwhen the switch is pressed again{color[ffff]}{[0001|ffff]}!
270	It's tricky, but we can do it.
271	Perhaps we could use a {[0001|1a00]}{color[0400]}Teleport-Object-Exit\nNodon{color[ffff]}{[0001|ffff]} with {[0001|1a00]}{color[0400]}Teleport ID B{color[ffff]}{[0001|ffff]} to {[0001|1a00]}{color[0400]}warp{color[ffff]}{[0001|ffff]} the object back\nto its original position instead of disappearing it.
272	Call up a {[0001|1a00]}{color[0400]}Teleport-Object-Exit Nodon{color[ffff]}{[0001|ffff]}.
274	Open up the settings screen.
275	The {[0001|1a00]}{color[0400]}Teleport ID{color[ffff]}{[0001|ffff]} is already set to {[0001|1a00]}{color[0400]}B{color[ffff]}{[0001|ffff]}.
275000	All we need to do is {[0001|1a00]}{color[0400]}disable Visible\n{color[ffff]}{[0001|ffff]}under {[0001|1a00]}{color[0400]}Properties{color[ffff]}{[0001|ffff]}.
276	Close the settings screen.
277	Now place the Teleport-Object-Exit Nodon\nin the center of the bridge.
278	{[0001|1a00]}{color[0400]}When the timer hits zero{color[ffff]}{[0001|ffff]},\n{[0001|1a00]}{color[0400]}the bridge will warp here{color[ffff]}{[0001|ffff]}, so...
279	{[0001|1a00]}{color[0400]}when the switch is pressed again{color[ffff]}{[0001|ffff]}, {[0001|1a00]}{color[0400]}the bridge\nwill reappear here{color[ffff]}{[0001|ffff]}, thanks to the {[0001|1a00]}{color[0400]}Teleport-Object-\nEntrance Nodon{color[ffff]}{[0001|ffff]}.
280	OK, let's check it out on the game screen!
281	Now try pressing the switch.
282-00	Stay on top of it...
282	Wait for the timer to hit zero...
282-01	Let's try again, from the part\nwhere you hit the switch.
283	And presto! The bridge is gone!\nNow to press the switch again...
284	And there it is again! The bridge is back!
284-01	The timer reached zero,\nand the bridge disappeared.
284-02	You were on top of the switch there.\nSo the switch was pressed, and the\nbridge appeared!
285	Amazing!\nThat is so cool!
286	And with that, our timer switch is complete.
287	Can you go back to\nthe program screen?
293	OK! So...finally...
294	Step 4 is complete!
295-01	Zzz... Well done...
295-02	Great work!
295-03	Yayyyy!
296	That was a tricky one, but\nI knew you could handle it!
297	I have to admit I'm impressed too,\n{[0201]}!
298	You took care of that complex\nprogramming with style and skill.
299	We're really close to completing this game\nnow. Just a little more to go!
300	What kind of game will it be?\nThat's up to you, {[0201]}!
301	Next, we're going to add a fiendish enemy\nto the game... Scary.
302	An enemy, eh?
303	See you in the next step!
304	See you there!
Lesson_3DAction_04.msbt
000	Hello!
001	Look who it is!
002	Here we go!\nSo this time around, we'll be creating\nan {[0001|1a00]}{color[0400]}enemy character{color[ffff]}{[0001|ffff]}!
003	Here's the plan... {[0001|1a00]}{color[0400]}When the player moves\nforward, they'll be charged at by an enemy{color[ffff]}{[0001|ffff]}!\nAnd we'll be making that enemy!
004	Oh really? I was thinking more like {[0001|1a00]}{color[0400]}an\nenemy that follows the player and blasts\naway at them{color[ffff]}{[0001|ffff]}. More exciting, no?
005	Well...I guess we're going to need\n{[0201]} to settle it\nfor us again, then.
006	So, what'll it be?\n{[0001|1a00]}{color[0400]}A charging enemy{color[ffff]}{[0001|ffff]}?\nOr {[0001|1a00]}{color[0400]}a blasting enemy{color[ffff]}{[0001|ffff]}?
006a	A charging enemy.
006b	A blasting enemy.
007	OK! Good choice!\n{[0001|1a00]}{color[0400]}A charging enemy{color[ffff]}{[0001|ffff]} it is then!
008	I'll lend a hand too, of course.
008000	Thanks, Alice!
009	Let's get programming!\nTo the program screen!
010	Very good!\nSo you want the {[0001|1a00]}{color[0400]}blasting\nenemy that follows you{color[ffff]}{[0001|ffff]}!
011	Sounds like we're going to have\na fun enemy to contend with here.
012	Right?
013	OK!\nTo the program screen!
Lesson_3DAction_04a.msbt
000	OK, so the plan is to create {[0001|1a00]}{color[0400]}an\nenemy that charges forward as\nsoon as they spot the player{color[ffff]}{[0001|ffff]}.
001	First, let's make a {[0001|1a00]}{color[0400]}platform{color[ffff]}{[0001|ffff]} around\nhere for the enemy to stand on.
001-01	How about this area here for the platform?\nLet's make it a little bit different too.
002	First, if you could copy\nthis Object Nodon here...
002-01	Shrink it down a bit...
003	Now {[0001|1a00]}{color[0400]}scroll up the program screen\n{color[ffff]}{[0001|ffff]}a bit, and put it in the blue frame.
006	Copy the Object Nodon again.
007	This time we'll stretch it vertically.\n{[0001|1a00]}{color[0400]}Scroll up the program screen{color[ffff]}{[0001|ffff]} while\nyou drag it.
008	Now copy this Object Nodon again.
009	Scroll up the program screen,\nand {[0001|1a00]}{color[0400]}place it up above{color[ffff]}{[0001|ffff]}.
009000	Copy this Object Nodon again.
009001	Scroll up the program screen,\nand place it up above, please.
010	Ah, we've created a real twisty-turny,\nbendy-windy level here, right?
011	Eh? Did someone say twisty turny?
014	Let's move this {[0001|1a00]}{color[0400]}Teleport-Object-Exit Nodon{color[ffff]}{[0001|ffff]}\nto make it easier to check our work. Remember,\nthis Nodon is only here to help us check anyway.
015	Scroll through the program screen,\nand place the {[0001|1a00]}{color[0400]}Teleport-Object-Exit Nodon\n{color[ffff]}{[0001|ffff]}near the {[0001|1a00]}{color[0400]}twisty part of the level{color[ffff]}{[0001|ffff]}.
032	OK! To the game screen!
033	We warped straight to the\ntwisty part of the level!
035	What do you think?\nPretty fun, right?
036	This is where our terrifying\nenemy will confront the player.
037	Let's go back to the program\nscreen and make it happen.
038	I was thinking we'd use {[0001|1a00]}{color[0400]}an alien\n{color[ffff]}{[0001|ffff]}from the {[0001|1a00]}{color[0400]}Fancy-Object Nodon\n{color[ffff]}{[0001|ffff]}for our enemy.
039	But of course, {[0001|1a00]}{color[0400]}aliens{color[ffff]}{[0001|ffff]} don't\nmove all by themselves.
040	So...
041	Call up a {[0001|1a00]}{color[0400]}box Moving-Object Nodon{color[ffff]}{[0001|ffff]}.
042	Hey friend! Ready to take\nthings to the extreme?
043	You made it through to the final lesson?\nYou got some staying power, buddy!
044	I hope you'll use some of that staying\npower in a megaworkout sometime!
047	Put the Moving-Object Nodon\nover to the right.
047-01	Next, call up a {[0001|1a00]}{color[0400]}Fancy-Object Nodon{color[ffff]}{[0001|ffff]}.\nWe want the {[0001|1a00]}{color[0400]}alien{color[ffff]}{[0001|ffff]} type, from the\n{[0001|1a00]}{color[0400]}Round Fancy Objects {color[ffff]}{[0001|ffff]}menu.
047-02	An extraterrestrial... An unknown life-form,\nregarding this earth with envious eyes...
047-03	I have to say, choosing the alien\nreflected very well on your good taste,\n{[0201]}. ♥
047-04	Make the Fancy-Object Nodon a\nlittle bigger, and move it up above\nthe Moving-Object Nodon.
047-05	Now open up the settings screen\nfor the Fancy-Object Nodon.
047-06	Under {[0001|1a00]}{color[0400]}Properties{color[ffff]}{[0001|ffff]}, {[0001|1a00]}{color[0400]}enable Destructive{color[ffff]}{[0001|ffff]}.
047-08	Under {[0001|1a00]}{color[0400]}Connection Point{color[ffff]}{[0001|ffff]}, set\n{[0001|1a00]}Own Connection Point{[0001|ffff]} to {[0001|1a00]}{color[0400]}Center{color[ffff]}{[0001|ffff]}, and set\n{[0001|1a00]}Target Connection Point{[0001|ffff]} to {[0001|1a00]}{color[0400]}Center{color[ffff]}{[0001|ffff]} as well.
047-09	Close this screen.
047-10	And close the settings screen.
047-11	Now {[0001|1a00]}{color[0400]}connect{color[ffff]}{[0001|ffff]} the {[0001|1a00]}{color[0400]}Fancy-Object Nodon\n{color[ffff]}{[0001|ffff]}to the {[0001|1a00]}{color[0400]}Moving-Object Nodon{color[ffff]}{[0001|ffff]}.
047-12	Now, if you could open up\nthe settings screen for the\n{[0001|1a00]}{color[0400]}Moving-Object Nodon{color[ffff]}{[0001|ffff]}.
047-13	Under {[0001|1a00]}{color[0400]}Properties{color[ffff]}{[0001|ffff]}, {[0001|1a00]}{color[0400]}enable Solid{color[ffff]}{[0001|ffff]} only.
047-1300	Open up the {[0001|1a00]}{color[0400]}Mode{color[ffff]}{[0001|ffff]} menu.
047-1301	And set the mode to {[0001|1a00]}{color[0400]}Speed{color[ffff]}{[0001|ffff]}.
047-14	Close the settings screen.
047-1400	So now the {[0001|1a00]}{color[0400]}Fancy-Object Nodon{color[ffff]}{[0001|ffff]}\nand the {[0001|1a00]}{color[0400]}invisible Moving-Object Nodon{color[ffff]}{[0001|ffff]}\nare {[0001|1a00]}{color[0400]}connected{color[ffff]}{[0001|ffff]}.
047-1401	Meaning our {[0001|1a00]}{color[0400]}alien{color[ffff]}{[0001|ffff]} is able to {[0001|1a00]}{color[0400]}move{color[ffff]}{[0001|ffff]}.
047-15	That's right, Alice!
047-16	Let's check it out on\nthe game screen!
047-17	There's the alien!
047-18	Next, let's position this alien so it's\n{[0001|1a00]}{color[0400]}facing left{color[ffff]}{[0001|ffff]} and {[0001|1a00]}{color[0400]}charges at the player\nwhen it sees them{color[ffff]}{[0001|ffff]}.
047-19	To the program screen!
047-20	First, let's point the alien to the left.
047-21	{[0001|1a00]}{color[0400]}Rotate{color[ffff]}{[0001|ffff]} the {[0001|1a00]}{color[0400]}Moving-Object Nodon\n90 degrees clockwise{color[ffff]}{[0001|ffff]}.
047-22	Thanks to the {[0001|1a00]}{color[0400]}connection{color[ffff]}{[0001|ffff]} between\nthe {[0001|1a00]}{color[0400]}Fancy-Object Nodon{color[ffff]}{[0001|ffff]} and the\n{[0001|1a00]}{color[0400]}Moving-Object Nodon{color[ffff]}{[0001|ffff]}...
047-23	when {[0001|1a00]}{color[0400]}the Moving-Object Nodon\nrotates{color[ffff]}{[0001|ffff]}, {[0001|1a00]}{color[0400]}the{color[ffff]}{[0001|ffff]} {[0001|1a00]}{color[0400]}alien will rotate{color[ffff]}{[0001|ffff]} too.
047-24	That's right, Alice!\nThanks for chiming in!
047-25	OK! Now let's make it so that {[0001|1a00]}{color[0400]}the\nalien charges when it sees the player{color[ffff]}{[0001|ffff]}.
053	OK, so first, we need to find a way to\ndetermine {[0001|1a00]}{color[0400]}when the player is in front\nof the alien{color[ffff]}{[0001|ffff]}.
054	Call up a {[0001|1a00]}{color[0400]}Touch-Sensor Nodon{color[ffff]}{[0001|ffff]}, please.
055	Meep!\nWhat is it now?
057	Make the {[0001|1a00]}{color[0400]}Touch-Sensor Nodon{color[ffff]}{[0001|ffff]} bigger,\nthen place it over to the left, please.
058	Now flip to the {[0001|1a00]}{color[0400]}side view{color[ffff]}{[0001|ffff]}.
059	Make it a bit taller, and place\nit above the platform.
060	Flip back to the overhead viewpoint.
061	Open up the settings screen for the\nTouch-Sensor Nodon.
062	{[0001|1a00]}{color[0400]}Disable Visible{color[ffff]}{[0001|ffff]}, under {[0001|1a00]}{color[0400]}Properties{color[ffff]}{[0001|ffff]}.
063	Open up the {[0001|1a00]}{color[0400]}Check What?{color[ffff]}{[0001|ffff]} menu.
064	{[0001|1a00]}{color[0400]}Enable Person{color[ffff]}{[0001|ffff]} only.
065	Now close this screen.
066	And close the settings screen too.
068	Next, we'll make it so that {[0001|1a00]}{color[0400]}when the player\ncomes into contact {color[ffff]}{[0001|ffff]}with the touch sensor,\n{[0001|1a00]}{color[0400]}the alien will start to run{color[ffff]}{[0001|ffff]}.
068-01	First, let's call up a {[0001|1a00]}{color[0400]}Flag Nodon{color[ffff]}{[0001|ffff]}. This will\ntake care of remembering when the\ntouch sensor has been touched.
068-02	Zzz...\nI'm not getting up... Not until...\nthe player is in front of the alien...
068-03	Put the Flag Nodon to the side of\nthe Touch-Sensor Nodon...
068-04	Connect the Touch-Sensor Nodon\nto the Flag Nodon's {[0001|1a00]}{color[0400]}on port{color[ffff]}{[0001|ffff]}, if you\nwould.
068-05	Now, when the touch sensor\ncomes into contact with the player,\nthe {[0001|1a00]}{color[0400]}Flag Nodon will switch on{color[ffff]}{[0001|ffff]}.
068-06	So, our next goal is to make it so\nthat {[0001|1a00]}{color[0400]}the alien moves whenever\nthe Flag Nodon is on{color[ffff]}{[0001|ffff]}.
069	We want the alien to go left.\nSo we want it to move in an {[0001|1a00]}{color[0400]}X- direction{color[ffff]}{[0001|ffff]}.
070	So that means we'll need to supply\nthe Moving-Object Nodon's {[0001|1a00]}{color[0400]}X port{color[ffff]}{[0001|ffff]}\nwith a {[0001|1a00]}{color[0400]}minus value signal{color[ffff]}{[0001|ffff]}.
071	First, let's call up a {[0001|1a00]}{color[0400]}Constant Nodon{color[ffff]}{[0001|ffff]}.
072	I'm the Constant Nodon...\nNever compromise...
073	Move the Constant Nodon over a bit.
074	Open up the settings screen.
075	Set the output value to {[0001|1a00]}{color[0400]}-5.00{color[ffff]}{[0001|ffff]}.
076	Now close the settings screen.
077	The {[0001|1a00]}{color[0400]}Moving-Object Nodon{color[ffff]}{[0001|ffff]} should be\ngetting an {[0001|1a00]}{color[0400]}input of -5.00 whenever\nthe Flag Nodon is on{color[ffff]}{[0001|ffff]}.
080	Correct, Alice! Let's call up a \n{[0001|1a00]}{color[0400]}multiplication Calculator Nodon{color[ffff]}{[0001|ffff]}\nto help us with that.
081	I AM A VERY GOOD CALCULATOR.
082	Put the Calculator Nodon\nover to the left of the\nMoving-Object Nodon.
083	Connect the {[0001|1a00]}{color[0400]}Flag Nodon{color[ffff]}{[0001|ffff]} to the\n{[0001|1a00]}{color[0400]}Calculator Nodon{color[ffff]}{[0001|ffff]}'s {[0001|1a00]}{color[0400]}input 1 port{color[ffff]}{[0001|ffff]}.
084	Then connect the {[0001|1a00]}{color[0400]}Constant Nodon{color[ffff]}{[0001|ffff]} to the\n{[0001|1a00]}{color[0400]}Calculator Nodon{color[ffff]}{[0001|ffff]}'s {[0001|1a00]}{color[0400]}input 2 port{color[ffff]}{[0001|ffff]}.
085	Now connect the Calculator Nodon\nto the Moving-Object Nodon's {[0001|1a00]}{color[0400]}X port{color[ffff]}{[0001|ffff]}.
086	Now, {[0001|1a00]}{color[0400]}the alien will start to move\nwhen the touch sensor comes\ninto contact with the player{color[ffff]}{[0001|ffff]}! Neat!
087	But what about {[0001|1a00]}{color[0400]}before the player comes\ninto contact{color[ffff]}{[0001|ffff]} with the touch sensor?
088	While the {[0001|1a00]}{color[0400]}Flag Nodon is off{color[ffff]}{[0001|ffff]}, it won't\ntransmit any signal, right?
089	There's no signal going to the Calculator\nNodon right now. So {[0001|1a00]}{color[0400]}even if it multiplies,\nthe output will remain at zero{color[ffff]}{[0001|ffff]}, I believe...
090	But {[0001|1a00]}{color[0400]}after{color[ffff]}{[0001|ffff]} the player {[0001|1a00]}{color[0400]}touches\n{color[ffff]}{[0001|ffff]}the touch sensor...
091	the {[0001|1a00]}{color[0400]}Flag Nodon will flip on{color[ffff]}{[0001|ffff]}, and the\nCalculator Nodon will start to receive\na signal of {[0001|1a00]}{color[0400]}1.00{color[ffff]}{[0001|ffff]}.
092	And since 1.00 × -5.00 = {[0001|1a00]}{color[0400]}-5.00{color[ffff]}{[0001|ffff]},\nthat's the input that the\nMoving-Object Nodon gets.
093	Correct! Great summary, Alice.
094	OK!\nLet's check that out on the game screen!
095	Try walking the player in front of the alien.
096	Waa!\nHere comes the alien!
097	So our sight-activated dashing\nalien enemy is complete! Excellent!
097-01	Here's a tip: try using jump to dodge it!
097-02	That's right!
133	Hoo! This is all so exciting!\nTo the program screen!
134	OK... Looks like...
135	Step 5 is complete!
136-01	Very tasteful... ♥
136-02	Great job!
136-03	Meep... Nice.
137	We added an enemy, and the\ngame got a whole lot more fun\nas a result.
138	That's right!
139	For the next step, we'll be creating\nan end point for our game...\nA {[0001|1a00]}{color[0400]}goal{color[ffff]}{[0001|ffff]}, if you like.
140	We're almost done!
141	Well, see you in the next step!
142	Hang in there!
Lesson_3DAction_04b.msbt
000	OK, so you settled on the {[0001|1a00]}{color[0400]}enemy\nthat follows you and blasts you\nat the same time{color[ffff]}{[0001|ffff]}. Cool!
001	Let's make a platform first.
002	Copy this Object Nodon.
003	And {[0001|1a00]}{color[0400]}scroll through the program screen\n{color[ffff]}{[0001|ffff]}to fit it into the {color[0400]}{[0001|1a00]}upper{[0001|ffff]}{color[ffff]} blue frame.
004	Copy this Object Nodon again.
005	Scroll through the program screen\nto place it.
006	Well, now that platform's taken care of.
006-01	To make things easier when we're checking\nour work, move the {[0001|1a00]}{color[0400]}Teleport-Object-Exit Nodon\n{color[ffff]}{[0001|ffff]}that we used to warp the player.
006-02	Scroll up through the program screen,\nand put the {[0001|1a00]}{color[0400]}Teleport-Object-Exit Nodon\n{color[ffff]}{[0001|ffff]}near the platform that we created earlier.
007	Let's take a look at it on the game screen.
028	Yes, we warped over to the platform\nwe created before, as we'd hoped.
029	This is where we're going to put our {[0001|1a00]}{color[0400]}enemy{color[ffff]}{[0001|ffff]}.\nAnd we'll have it {[0001|1a00]}{color[0400]}moving left or right,\ndepending on the player's movements{color[ffff]}{[0001|ffff]}.
030	OK, let's go to the program screen\nand put our nose to the grindstone!
031	So, for our enemy... Let's use an\n{[0001|1a00]}{color[0400]}alien{color[ffff]}{[0001|ffff]} Fancy-Object Nodon.
032	But, as you know, {[0001|1a00]}{color[0400]}aliens{color[ffff]}{[0001|ffff]} can't\nmove all by themselves.
033	We'll need to make use of\n{[0001|1a00]}{color[0400]}Moving-Object Nodon{color[ffff]}{[0001|ffff]} as well.
034	OK!\nCall up a {[0001|1a00]}{color[0400]}box Moving-Object Nodon{color[ffff]}{[0001|ffff]}, please.
035	Hey, friend! Ready to take\nthings to the extreme?
036	You made it through to the final lesson?\nYou got some staying power, buddy!
037	I hope you'll use some of that staying\npower in a megaworkout sometime!
037000	Open up the settings screen\nfor the Moving-Object Nodon.
037001	Open up the {[0001|1a00]}{color[0400]}Mode{color[ffff]}{[0001|ffff]} menu.
037002	We don't want our alien to\nbe too light on its feet, so...\nChoose {[0001|1a00]}{color[0400]}Speed{color[ffff]}{[0001|ffff]}...
037002-01	Under {[0001|1a00]}{color[0400]}Properties{color[ffff]}{[0001|ffff]}, {[0001|1a00]}{color[0400]}enable\nSolid{color[ffff]}{[0001|ffff]} and {[0001|1a00]}{color[0400]}Movable{color[ffff]}{[0001|ffff]} only.
037003	OK!\nClose the settings screen.
037-01	When we {[0001|1a00]}{color[0400]}connect {color[ffff]}{[0001|ffff]}a {[0001|1a00]}{color[0400]}Fancy-Object Nodon\n{color[ffff]}{[0001|ffff]}to this {[0001|1a00]}{color[0400]}Moving-Object Nodon{color[ffff]}{[0001|ffff]}, we'll be able\nto make the {[0001|1a00]}{color[0400]}alien move{color[ffff]}{[0001|ffff]}.
037-02	From the {[0001|1a00]}{color[0400]}Round Fancy Objects{color[ffff]}{[0001|ffff]} menu,\ncall up an {[0001|1a00]}{color[0400]}alien Fancy-Object Nodon{color[ffff]}{[0001|ffff]},\nplease.
037-03	An extraterrestrial... An unknown lifeform,\nregarding this earth with envious eyes...
037-04	I have to say, choosing the alien\nreflected very well on your good taste,\n{[0201]}! ♥
037-05	Make the {[0001|1a00]}{color[0400]}Fancy-Object Nodon{color[ffff]}{[0001|ffff]} a\nlittle bigger, and drag it up above.
037-06	Open up the settings screen.
037-08	Under {[0001|1a00]}{color[0400]}Connection Point{color[ffff]}{[0001|ffff]}, set\n{[0001|1a00]}Own Connection Point{[0001|ffff]} to {[0001|1a00]}{color[0400]}Center{color[ffff]}{[0001|ffff]}, and\n{[0001|1a00]}Target Connection Point{[0001|ffff]} to {[0001|1a00]}{color[0400]}Center {color[ffff]}{[0001|ffff]}too.
037-09	Close this screen.
037-10	And close the settings screen.
037-11	Now, {[0001|1a00]}{color[0400]}connect{color[ffff]}{[0001|ffff]} the {[0001|1a00]}{color[0400]}Fancy-Object Nodon\n{color[ffff]}{[0001|ffff]}to the {[0001|1a00]}{color[0400]}Moving-Object Nodon{color[ffff]}{[0001|ffff]}.
037-12	Looking good!\nWe're ready to make our alien move!
037-13	Let's check it out on the game screen!
037-14	And there's our alien.
037-15	We need to make it so that it {[0001|1a00]}{color[0400]}moves\nleft or right depending on the player's\nposition{color[ffff]}{[0001|ffff]}, though.
037-16	Let's handle that on the program screen!
046	Like I just said, the plan is to have the\nalien {[0001|1a00]}{color[0400]}move left or right depending on\nthe player's position{color[ffff]}{[0001|ffff]}.
047	And to do that, it would help if we could\ndetermine {[0001|1a00]}{color[0400]}the difference between the\nalien's position and the player's position{color[ffff]}{[0001|ffff]}.
048	Then, if we have the alien move only\nby the same amount as this {[0001|1a00]}{color[0400]}difference{color[ffff]}{[0001|ffff]}...
049	the alien will move {[0001|1a00]}{color[0400]}based on\nthe player's position{color[ffff]}{[0001|ffff]}!
050	Let's take care of that now.
051	We'll need to track the {[0001|1a00]}{color[0400]}alien's position{color[ffff]}{[0001|ffff]} here,\nso call up a {[0001|1a00]}{color[0400]}Location-Sensor Nodon{color[ffff]}{[0001|ffff]}.
052	No problem! Watching out\nfor the alien's position!
053	Roger!\nI've gotcha!
054	Move the Location-Sensor Nodon a bit.
055	Now open the settings screen.
056	Under {[0001|1a00]}{color[0400]}Properties{color[ffff]}{[0001|ffff]}, {[0001|1a00]}{color[0400]}disable Visible{color[ffff]}{[0001|ffff]}.
057	Close the settings screen.
058	{[0001|1a00]}{color[0400]}Connect{color[ffff]}{[0001|ffff]} the {[0001|1a00]}{color[0400]}Location-Sensor Nodon\n{color[ffff]}{[0001|ffff]}to the {[0001|1a00]}{color[0400]}alien Fancy-Object Nodon{color[ffff]}{[0001|ffff]}.
061	So now we can track {[0001|1a00]}{color[0400]}the alien's position{color[ffff]}{[0001|ffff]}!
062	Since we'll be calculating the\nrelative difference, we'll need\nto track the {[0001|1a00]}{color[0400]}player's position{color[ffff]}{[0001|ffff]} too.
063	As it happens, we already have {[0001|1a00]}{color[0400]}a\nLocation-Sensor Nodon connected\nto the Person Nodon{color[ffff]}{[0001|ffff]}.
064	So we can just use a {[0001|1a00]}{color[0400]}Wormhole-Entrance\nNodon {color[ffff]}{[0001|ffff]}to warp over the output of the\n{[0001|1a00]}{color[0400]}Location-Sensor Nodon{color[ffff]}{[0001|ffff]}'s {[0001|1a00]}{color[0400]}X port{color[ffff]}{[0001|ffff]}.
065	Call up a {[0001|1a00]}{color[0400]}Wormhole-Entrance Nodon{color[ffff]}{[0001|ffff]}.
065000	Drag it over to the upper right\nof the Location-Sensor Nodon.
066	Open up the settings screen.
067	Set the {[0001|1a00]}{color[0400]}Wormhole ID{color[ffff]}{[0001|ffff]} to {[0001|1a00]}{color[0400]}X{color[ffff]}{[0001|ffff]}.
068	Close the settings screen.
069	Now link the {[0001|1a00]}{color[0400]}Location-Sensor Nodon{color[ffff]}{[0001|ffff]}'s\n{[0001|1a00]}{color[0400]}X port{color[ffff]}{[0001|ffff]} to the {[0001|1a00]}{color[0400]}Wormhole-Entrance Nodon{color[ffff]}{[0001|ffff]}.
070	Now call up a {[0001|1a00]}{color[0400]}Wormhole-Exit Nodon{color[ffff]}{[0001|ffff]} to\nbring the output over here.
071	Place it above the Location-Sensor Nodon.
072	Open the settings screen.
073	Set the {[0001|1a00]}{color[0400]}Wormhole ID{color[ffff]}{[0001|ffff]} to {[0001|1a00]}{color[0400]}X{color[ffff]}{[0001|ffff]}.
074	Now close the settings screen.
075	So now we know how to get the\n{[0001|1a00]}{color[0400]}X position{color[ffff]}{[0001|ffff]} for both the {[0001|1a00]}{color[0400]}player {color[ffff]}{[0001|ffff]}and\nthe {[0001|1a00]}{color[0400]}alien{color[ffff]}{[0001|ffff]}.
076	Now we just need to calculate the\n{[0001|1a00]}{color[0400]}difference{color[ffff]}{[0001|ffff]} between those two positions.
077	Call up a {[0001|1a00]}{color[0400]}subtraction Calculator Nodon{color[ffff]}{[0001|ffff]},\nplease.
078	CALCULATOR NODON IS MY NAME\nAND SUBTRACTION IS MY GAME.\nAT THIS POINT IN TIME.
078000	Move the\nCalculator Nodon.
079	Connect the {[0001|1a00]}{color[0400]}Wormhole-Exit Nodon{color[ffff]}{[0001|ffff]} to\nthe {[0001|1a00]}{color[0400]}Calculator Nodon{color[ffff]}{[0001|ffff]}'s {[0001|1a00]}{color[0400]}input 1 port{color[ffff]}{[0001|ffff]}.
080	Then connect the {[0001|1a00]}{color[0400]}X port{color[ffff]}{[0001|ffff]} of the other\n{[0001|1a00]}{color[0400]}Location-Sensor Nodon{color[ffff]}{[0001|ffff]} to the\n{[0001|1a00]}{color[0400]}Calculator Nodon{color[ffff]}{[0001|ffff]}'s {[0001|1a00]}{color[0400]}input 2 port{color[ffff]}{[0001|ffff]}.
081	Now we'll be able to calculate the\n{[0001|1a00]}{color[0400]}difference in position{color[ffff]}{[0001|ffff]} between the\nalien and the player.
082	Let's use a {[0001|1a00]}{color[0400]}Wormhole-Entrance Nodon\n{color[ffff]}{[0001|ffff]}to get the calculated output where we\nneed it.
083	Call up a {[0001|1a00]}{color[0400]}Wormhole-Entrance Nodon{color[ffff]}{[0001|ffff]}.
084	Put it to the right of the Calculator Nodon.
085	Open the Wormhole-Entrance Nodon's\nsettings screen.
086	Set the {[0001|1a00]}{color[0400]}Wormhole ID{color[ffff]}{[0001|ffff]} to {[0001|1a00]}{color[0400]}D{color[ffff]}{[0001|ffff]}.
087	Close the settings screen.
088	Connect the {[0001|1a00]}{color[0400]}Calculator Nodon{color[ffff]}{[0001|ffff]} to the\n{[0001|1a00]}{color[0400]}Wormhole-Entrance Nodon{color[ffff]}{[0001|ffff]}.
089	Thanks to that, the {[0001|1a00]}{color[0400]}difference in position{color[ffff]}{[0001|ffff]} between\nthe alien and the player will be sent as output from\nthe {[0001|1a00]}{color[0400]}D Wormhole-Exit Nodon{color[ffff]}{[0001|ffff]} we'll call up.
090	So let's do that now!
091	Place it to the left of the\nMoving-Object Nodon.
092	Now open up its settings screen.
093	Set the {[0001|1a00]}{color[0400]}Wormhole ID{color[ffff]}{[0001|ffff]} to {[0001|1a00]}{color[0400]}D{color[ffff]}{[0001|ffff]}.
094	Now close the settings screen.
095	Now just connect up the {[0001|1a00]}{color[0400]}D Wormhole-Exit Nodon\n{color[ffff]}{[0001|ffff]}to the {[0001|1a00]}{color[0400]}Moving-Object Nodon{color[ffff]}{[0001|ffff]}'s {[0001|1a00]}{color[0400]}X port{color[ffff]}{[0001|ffff]}.
096	And with that, we're done programming\nmovement for the alien. {[0001|1a00]}{color[0400]}The alien will now\nchase the player as they move left or right{color[ffff]}{[0001|ffff]}.
097	Let's check it out on the game screen!
098	Oh... It looks weird, doesn't it?\nWhy is it moving that way?
099	Hmmm... What is up with that?
100	Ah...\nHey, Alice, could it be...
101	the {[0001|1a00]}{color[0400]}start point{color[ffff]}{[0001|ffff]}? It's a really long\nway over to the {[0001|1a00]}{color[0400]}left{color[ffff]}{[0001|ffff]}.
102	So right after the game starts, {[0001|1a00]}{color[0400]}the difference\nin position between the player and the alien\n{color[ffff]}{[0001|ffff]}is very {[0001|1a00]}{color[0400]}large{color[ffff]}{[0001|ffff]}, right?
103	And because of that, the alien moves with {[0001|1a00]}{color[0400]}too\nmuch force{color[ffff]}{[0001|ffff]} when things {[0001|1a00]}{color[0400]}start up{color[ffff]}{[0001|ffff]}. That's causing\nthe strange movement we saw!
104	Ah...\nYes, I see...
105	I should have plotted it out in\nmy head a little more carefully.
106	I guess there are just some things you can't\nwork out until you test them!
107	So where were we?\nWe've established that it causes us problems\n{[0001|1a00]}{color[0400]}if the alien is moving when the game starts{color[ffff]}{[0001|ffff]}.
108	What if we make it so that the\nalien only starts to move {[0001|1a00]}{color[0400]}when the\nplayer reaches the alien's area{color[ffff]}{[0001|ffff]}?
110	Let's go to the program screen\nand see what we can do.
111	How are we going to\nfix this, {[0201]}?
112	What if we use a combination of a\n{[0001|1a00]}{color[0400]}Touch-Sensor Nodon{color[ffff]}{[0001|ffff]}, a {[0001|1a00]}{color[0400]}Flag Nodon{color[ffff]}{[0001|ffff]},\nand a {[0001|1a00]}{color[0400]}Calculator Nodon{color[ffff]}{[0001|ffff]}?
113	First, let's call up a {[0001|1a00]}{color[0400]}Touch-Sensor Nodon{color[ffff]}{[0001|ffff]}.
114	Meep...\nAnything wrong?
115	{[0001|1a00]}{color[0400]}When the player touches{color[ffff]}{[0001|ffff]} this\ntouch sensor, that'll be{[0001|1a00]}{color[0400]} the alien's\ncue to start moving{color[ffff]}{[0001|ffff]}.
117	Open up the Touch-Sensor Nodon's\nsettings screen.
118	{[0001|1a00]}{color[0400]}Disable Visible{color[ffff]}{[0001|ffff]}, under {[0001|1a00]}{color[0400]}Properties{color[ffff]}{[0001|ffff]}.
119	Open up the {[0001|1a00]}{color[0400]}Check What?{color[ffff]}{[0001|ffff]} menu.
120	{[0001|1a00]}{color[0400]}Enable Person{color[ffff]}{[0001|ffff]} only.
121	Close this screen.
122	And close the settings screen.
123	We want to make sure that the\nplayer trips the sensor, so let's\nmake it a whole lot wider.
125	Let's flip over to {[0001|1a00]}{color[0400]}side view{color[ffff]}{[0001|ffff]}.
126	And now make it tall like a wall.
127	Good work!\nYou can flip back to {[0001|1a00]}{color[0400]}overhead view{color[ffff]}{[0001|ffff]} now.
128	Next call up a {[0001|1a00]}{color[0400]}Flag Nodon{color[ffff]}{[0001|ffff]}.
129	Zzz...\nI'll wake up...when the person gets here...
131	Bring the Flag Nodon over\nto the right side of the\ntouch sensor...
132	Connect the {[0001|1a00]}{color[0400]}Touch-Sensor Nodon{color[ffff]}{[0001|ffff]} to\nthe {[0001|1a00]}{color[0400]}Flag Nodon{color[ffff]}{[0001|ffff]}'s {[0001|1a00]}{color[0400]}on port{color[ffff]}{[0001|ffff]}.
133	Call up another\n{[0001|1a00]}{color[0400]}Wormhole-Entrance Nodon{color[ffff]}{[0001|ffff]}.
134	Bring it over to the right of the Flag Nodon.
135	Open up the settings screen.
136	Set the {[0001|1a00]}{color[0400]}Wormhole ID{color[ffff]}{[0001|ffff]} to {[0001|1a00]}{color[0400]}E{color[ffff]}{[0001|ffff]}.
137	Close the settings screen.
138	Connect the {[0001|1a00]}{color[0400]}Flag Nodon{color[ffff]}{[0001|ffff]} to the\n{[0001|1a00]}{color[0400]}Wormhole-Entrance Nodon{color[ffff]}{[0001|ffff]}.
140	Now, when the player touches the\nsensor, the {[0001|1a00]}{color[0400]}E Wormhole-Entrance\nNodon{color[ffff]}{[0001|ffff]} will output a signal.
141	Let's call up another {[0001|1a00]}{color[0400]}Wormhole-Exit Nodon{color[ffff]}{[0001|ffff]}\nto team up with the entrance.
142	Open up the settings screen.
143	Set the {[0001|1a00]}{color[0400]}Wormhole ID{color[ffff]}{[0001|ffff]} to {[0001|1a00]}{color[0400]}E{color[ffff]}{[0001|ffff]}.
144	Now close the settings screen.
145	Put it up above the\n{[0001|1a00]}{color[0400]}D Wormhole-Exit Nodon{color[ffff]}{[0001|ffff]}.
146	Next, {[0001|1a00]}{color[0400]}delete the connection{color[ffff]}{[0001|ffff]} between\nthe {[0001|1a00]}{color[0400]}D Wormhole-Exit Nodon{color[ffff]}{[0001|ffff]} and the\n{[0001|1a00]}{color[0400]}Moving-Object Nodon{color[ffff]}{[0001|ffff]}.
147	Now we'll call up a {[0001|1a00]}{color[0400]}Calculator Nodon{color[ffff]}{[0001|ffff]}.\nWe want the type that does {[0001|1a00]}{color[0400]}multiplication{color[ffff]}{[0001|ffff]}.
148	Put the {[0001|1a00]}{color[0400]}Calculator Nodon\n{color[ffff]}{[0001|ffff]}over to the left of the\n{[0001|1a00]}{color[0400]}Moving-Object Nodon{color[ffff]}{[0001|ffff]}.
149	This {[0001|1a00]}{color[0400]}D Wormhole-Exit Nodon{color[ffff]}{[0001|ffff]} will\nnow output {[0001|1a00]}{color[0400]}the difference in location\nbetween the player and the alien{color[ffff]}{[0001|ffff]}.
150	Plus, the {[0001|1a00]}{color[0400]}E Wormhole-Exit Nodon{color[ffff]}{[0001|ffff]} will\ntell us {[0001|1a00]}{color[0400]}when the player reaches the\narea that we mapped out before{color[ffff]}{[0001|ffff]}.
151	Now, we're going to {[0001|1a00]}{color[0400]}multiply{color[ffff]}{[0001|ffff]}\nthese two outputs together.
152	{[0001|1a00]}{color[0400]}When the player enters the area that\nwe designated before{color[ffff]}{[0001|ffff]}, the {[0001|1a00]}{color[0400]}E Wormhole-\nExit Nodon{color[ffff]}{[0001|ffff]} will output a signal...
152-01	And the {[0001|1a00]}{color[0400]}D Wormhole-Exit Nodon{color[ffff]}{[0001|ffff]} will\noutput {[0001|1a00]}{color[0400]}the difference between the player\nand the alien's position{color[ffff]}{[0001|ffff]}.
153	Now link the {[0001|1a00]}{color[0400]}E Wormhole-Exit Nodon\n{color[ffff]}{[0001|ffff]}and the {[0001|1a00]}{color[0400]}Calculator Nodon{color[ffff]}{[0001|ffff]}'s {[0001|1a00]}{color[0400]}input 1 port{color[ffff]}{[0001|ffff]}.
154	Then connect the {[0001|1a00]}{color[0400]}D Wormhole-Exit Nodon\n{color[ffff]}{[0001|ffff]}to the {[0001|1a00]}{color[0400]}Calculator Nodon{color[ffff]}{[0001|ffff]}'s {[0001|1a00]}{color[0400]}input 2 port{color[ffff]}{[0001|ffff]}.
155	Now if we just connect the\n{[0001|1a00]}{color[0400]}Calculator Nodon {color[ffff]}{[0001|ffff]}to the\n{[0001|1a00]}{color[0400]}Moving-Object Nodon{color[ffff]}{[0001|ffff]}'s {[0001|1a00]}{color[0400]}X port{color[ffff]}{[0001|ffff]}...
156	our {[0001|1a00]}{color[0400]}setup to trigger the alien's\nmovement when the player reaches\nits area is complete{color[ffff]}{[0001|ffff]}!
157	Let's check it out on the game screen!
158	Try moving forward...
159	When you move left or right,\nthe alien follows suit!
159-01	The alien fell off...\nLet's retry!
160	Nice! It's following the player's left and\nright movements, just like it should!
178	OK. So all we need to take care of now\nis to get the alien {[0001|1a00]}{color[0400]}blasting {color[ffff]}{[0001|ffff]}the player.
179	And if we're going to be firing projectiles...
180	we'll need a {[0001|1a00]}{color[0400]}Launch-Object Nodon{color[ffff]}{[0001|ffff]}.\nCall up one of the {[0001|1a00]}{color[0400]}10 object{color[ffff]}{[0001|ffff]} type.
181	Ready for the BOOM? The BLAMMO?\nI hope you are! I KNOW I AM!
182	Oh... I waited so long...\nI thought I'd never go KABOOM!
184	Well, we can help with that!\nOpen up the Launch-Object\nNodon's settings screen.
186	{[0001|1a00]}{color[0400]}Under Connection Points{color[ffff]}{[0001|ffff]}, set\n{[0001|1a00]}Own Connection Point{[0001|ffff]} to {[0001|1a00]}{color[0400]}Z+{color[ffff]}{[0001|ffff]} and\n{[0001|1a00]}Target Connection Point{[0001|ffff]} to {[0001|1a00]}{color[0400]}Z-{color[ffff]}{[0001|ffff]}.
187	Now close the screen.
188	Now open up {[0001|1a00]}{color[0400]}Launch Direction{color[ffff]}{[0001|ffff]}.
189	And set it to {[0001|1a00]}{color[0400]}Z-{color[ffff]}{[0001|ffff]}.
189-01	Let's make the {[0001|1a00]}{color[0400]}color{color[ffff]}{[0001|ffff]} a monstrous {[0001|1a00]}{color[0400]}pink{color[ffff]}{[0001|ffff]}.
190	Now close the settings screen.
191	Next, {[0001|1a00]}{color[0400]}connect{color[ffff]}{[0001|ffff]} the {[0001|1a00]}{color[0400]}Launch-Object Nodon\n{color[ffff]}{[0001|ffff]}to the {[0001|1a00]}{color[0400]}Fancy-Object Nodon{color[ffff]}{[0001|ffff]}.
194	Then connect the {[0001|1a00]}{color[0400]}E Wormhole-Exit Nodon\n{color[ffff]}{[0001|ffff]}to the {[0001|1a00]}{color[0400]}Launch-Object Nodon{color[ffff]}{[0001|ffff]}.
195	By linking those together, the alien\nwill only start blasting when the\nplayer reaches the area.
196	OK! Let's see how that works\nout on the game screen.
197	Try moving forward...
197-01	The alien fell off...\nLet's retry!
198	And there we have it!\nThe alien is moving from side to side\nand firing projectiles at the player!
198000	So, our plan for this step is complete!\nWe've made {[0001|1a00]}{color[0400]}an alien that tracks the player's\nleft to right movements while blasting{color[ffff]}{[0001|ffff]}!
198001	Great job, guys! And a fearsome enemy indeed!
204	Hehehe...\nWhen you're done admiring your work,\nmeet me back at the program screen!
205	And with that...
206	Step 5 is complete!
207-01	BOOM! Nice one!
207-02	Good job!
207-03	Well done!
208	You added a whole new dimension\nto the fun with the enemy character!
209	Yeah, I guess we did!
210	In the next step, let's create an\nend point for our game... A {[0001|1a00]}{color[0400]}goal{color[ffff]}{[0001|ffff]}.
211	Wow... We're almost done...
212	See you again at the next step!
213	Just hang in there a little longer!
Lesson_3DAction_05.msbt
000	Ah, we're so very close to\ncompleting {[0001|1a00]}{color[0400]}Super Person World{color[ffff]}{[0001|ffff]}!\nYou can feel the tension in the air!
001	...
002	Of course, there were a few...interjections here\nand there. The game is shaping up to be a little\ndifferent from the original plan now.
003	But in many ways, it's even better\nthan we had planned.
004	Oh!
005	You just need to stick with it a\nlittle longer now, {[0201]}.
006	In this step, we're going to create\na thrilling climax for our game...\n{[0001|1a00]}{color[0400]}a goal{color[ffff]}{[0001|ffff]}.
007	Let's go to the program screen\nand get it done!
008	Let's start by building\na {[0001|1a00]}{color[0400]}platform{color[ffff]}{[0001|ffff]}.
009	Just like always, right?
010	That's right!\nOK, copy this Object Nodon\nhere, if you could!
011	{[0001|1a00]}{color[0400]}Now scroll up the screen{color[ffff]}{[0001|ffff]}, and\nplace the Object Nodon please.
012	Make another copy of\nthis Object Nodon.
013	Place it above again.
014	Copy again.
015	And place it above again.
016	OK! Let's check it out\non the game screen!
017	Hey! Hang on!
018	I think you forgot something!\nThe teleport that we use for checking!
019	Oh... You're right.
019-01	{[c903]}{[0201]}, could you move\nthis {[0001|1a00]}{color[0400]}Teleport-Object-Exit Nodon\n{color[ffff]}{[0001|ffff]}up, please?
038	OK! Now...
039	Let's see how that's looking\non the game screen.
040	Yep, this is the final area.
041	Pretty roomy, isn't it?
042	Yes! OK, to the program screen\nso we can program our goal.
043	So, this is the spot where\nwe're going to add in our {[0001|1a00]}{color[0400]}goal{color[ffff]}{[0001|ffff]}.
044	So how should we represent\nour {[0001|1a00]}{color[0400]}goal{color[ffff]}{[0001|ffff]}? A {[0001|1a00]}{color[0400]}treasure chest{color[ffff]}{[0001|ffff]}\nwould be perfect, I think.
045	Call up a {[0001|1a00]}{color[0400]}treasure chest Fancy-Object Nodon\n{color[ffff]}{[0001|ffff]}from the {[0001|1a00]}{color[0400]}Rectangular Fancy Objects{color[ffff]}{[0001|ffff]} menu.
046	Oh, who doesn't love a grand,\ninviting treasure chest!\nThey're absolutely classic!
047	Trust you to have such\nfantastic stylistic instincts,\n{[0201]}! ♥
047000	Now move that {[0001|1a00]}{color[0400]}Fancy-Object Nodon\n{color[ffff]}{[0001|ffff]}over a little bit.
051	Open up the settings screen.
052	Under {[0001|1a00]}{color[0400]}Properties{color[ffff]}{[0001|ffff]}, {[0001|1a00]}{color[0400]}disable Movable{color[ffff]}{[0001|ffff]}.
053	Right! We don't want the treasure chest\nmoving around if it gets nudged or something.
054	That's right!
055	OK!\nClose the settings screen.
056	So... How about we make it so that\n{[0001|1a00]}{color[0400]}a party popper effect is triggered when\nthe player touches the treasure chest{color[ffff]}{[0001|ffff]}?
057	Good idea.\nOK, let's get started on that.
058	{[0201]}, could you call up a\n{[0001|1a00]}{color[0400]}Touch-Sensor Nodon{color[ffff]}{[0001|ffff]} please?
059	Meep...\nOh... Nothing funny going on here, I hope...\nI'm rather sensitive, you know...
060	Place the Touch-Sensor Nodon to the\nright of the Fancy-Object Nodon, and\nmake it a little bigger.
061	We made it a little bigger than the\ntreasure chest so that it's easy\nto trigger.
062	Good call!
063	OK!\nOpen up the settings screen for\nthe Touch-Sensor Nodon!
064	Under {[0001|1a00]}{color[0400]}Properties{color[ffff]}{[0001|ffff]}, {[0001|1a00]}{color[0400]}disable{color[ffff]}{[0001|ffff]} {[0001|1a00]}{color[0400]}Visible{color[ffff]}{[0001|ffff]}.
065	Now open up the {[0001|1a00]}{color[0400]}Check What?{color[ffff]}{[0001|ffff]} menu.
066	{[0001|1a00]}{color[0400]}Enable Person{color[ffff]}{[0001|ffff]} only.
067	Close this screen.
068	And close the settings screen.
069	Now, if you could {[0001|1a00]}{color[0400]}connect{color[ffff]}{[0001|ffff]} this\n{[0001|1a00]}{color[0400]}Touch-Sensor Nodon{color[ffff]}{[0001|ffff]} to the\n{[0001|1a00]}{color[0400]}Fancy-Object Nodon{color[ffff]}{[0001|ffff]}...
070	So the setup we've just created {[0001|1a00]}{color[0400]}will\noutput a signal when the player touches\nthe treasure box{color[ffff]}{[0001|ffff]}.
071	It's simple but... Well, it's pretty cool!
072	All we need to do now is call up an\n{[0001|1a00]}{color[0400]}Effect Nodon{color[ffff]}{[0001|ffff]} for our {[0001|1a00]}{color[0400]}party popper\n{color[ffff]}{[0001|ffff]}effect.
073	What is it now?
074	So you want some kind of fancy\npopper going off when you're\ntouchin' the treasure chest, eh?
075	You know, I can't stand it when you find a\ntreasure chest, but you open it up and\nnothing happens.
076	If you could put the Effect Nodon over to\nthe right of the Touch-Sensor Nodon...
077	Now connect the Touch-Sensor Nodon\nto the Effect Nodon.
077-01	OK. Now, when we get to\nthe treasure chest, the party\npopper effect will be unleashed.
077-02	Ah... Uhm... Bob?
077-03	How about we double down on the\nvictory vibe with a nice, noisy {[0001|1a00]}{color[0400]}fanfare{color[ffff]}{[0001|ffff]}?
077-04	Love it.\nA rousing, regal fanfare\nis just what we need.
077-05	{[c903]}{[0201]}!\nCall up a {[0001|1a00]}{color[0400]}Play-Sound Nodon{color[ffff]}{[0001|ffff]} from\nthe {[0001|1a00]}{color[0400]}Play SFX{color[ffff]}{[0001|ffff]} menu please!
077-0501	If it's a finale you need,\nI've got it covered! Ta-daa!
077-06	Place it just beneath the Effect Nodon.
077-07	Now open up the settings screen.
077-08	Select {[0001|1a00]}{color[0400]}Jingles{color[ffff]}{[0001|ffff]}.
077-09	Then select {[0001|1a00]}{color[0400]}Fanfare{color[ffff]}{[0001|ffff]}.
077-10	Oh, that's a good one.\nThis is really going to give some\noomph to the moment of victory.
077-11	OK.\nClose this screen.
077-12	And close the settings screen.
077-13	Now if you could connect the\n{[0001|1a00]}{color[0400]}Touch-Sensor Nodon{color[ffff]}{[0001|ffff]} to the\n{[0001|1a00]}{color[0400]}play port{color[ffff]}{[0001|ffff]} of the {[0001|1a00]}{color[0400]}Play-Sound Nodon{color[ffff]}{[0001|ffff]}...
078	And we're done!
079	Our goal setup is complete.
080	Great job!
081	Time to check it out on the game screen!
082	OK, {[0201]}!\nMove over to the treasure chest\nand touch it!
083	There's the party popper...
084	and the fanfare too!\nStirring stuff!
085	Very nice! So, finally, let's remove the\nteleport we were using for checking,\nso the game starts from the beginning.
086	We can say goodbye to this\n{[0001|1a00]}{color[0400]}Teleport-Object-Exit Nodon{color[ffff]}{[0001|ffff]}...
087	and a fond farewell for the\n{[0001|1a00]}{color[0400]}Teleport-Object-Entrance Nodon{color[ffff]}{[0001|ffff]} too.
088	Great. We're all set\nfor our final test.
089	Here we are at the starting point!
090	The game is now complete, from\nthe start to the goal! Awesome!
091	We made it through to the end at last.\nThat took a lot of effort!
092	If you could head back to\nthe program screen...
093	OK... And with that...
094	It looks like...
095	Step 6 is complete!
096	Step 6 is complete!
097-01	Another victory for good taste! ♥
097-02	Oh yeaaaaah!
097-03	Yeah! Good job!
098	Well, that's the goal taken care of.\nWe've got a start-to-finish game now.\nBut...
099	Is there still something\nwe need to do?
100	Actually, yes! There's one more\nthing for {[0201]}\nto handle.
101	And that is...
102	Oh my...
103	Well, you'll find out in the next step!
104	Which is, in fact, the final step\nof the interactive lessons!\nWe're finally there!
105	Just one more step!\nHang in there,\n{[0201]}!
Lesson_3DAction_06.msbt
000	{[c903]}{[0201]}!\nThere you are!
001	Hi!
002	It's been a long road...\nBut we're here at the last step\nof the interactive lessons.
003	Before we continue, let's give the work\nwe've done on {[0001|1a00]}{color[0400]}Super Person World\n{color[ffff]}{[0001|ffff]}a thorough test.
004	When you're done testing it out,\nhead over to the program screen.
005	For our final step, we're going to\ncreate one more gimmick to fill the\nspace in front of the goal.
006	...
007	So far, you've been following\nour instructions perfectly.
008	But for the final gimmick, I want\nyou to unleash your own creativity\nby making something of your own.
009	Oh! Interesting!
010	You could create a final, fearsome boss...or use\nsomething we've used elsewhere...or make a\nbrand-new feature we've never seen before.
011	Whatever it is, it will\nbe your creation entirely,\n{[0201]}.
012	Maybe you could even improve on\nthe gimmicks we've made so far?
013	Sure! You could even do that.
013-01	Now {[0001|1a00]}{color[0400]}you can program your way{color[ffff]}{[0001|ffff]}, and\nthis game is yours to change as you\nsee fit, {[0201]}.
014	You've really done a whole lot\nof programming by now. I have\ntotal confidence in you.
015	You've tackled everything in the\nGame Builder Garage, and a\nbunch of puzzles, so...you'll be fine!
016	But if you get into a jam while\nyou're experimenting, just select\n{[0001|1a00]}{color[0400]}Restart this step {color[ffff]}{[0001|ffff]}from the pause menu.
017	I can't wait to see what you\nhave in store for us, {[0201]}.
018	When your game is complete, let us\nknow by pressing the {[0001|1a00]}{color[0400]}Done{color[ffff]}{[0001|ffff]} button.
019	If you take a break, any progress that\nyou make will be saved. So go ahead\nand take a break if you need to.
020	OK...
021	Start programming!
022	Good luck!
1000	All done?
1000-01	Without further ado, let's head to\nthe game screen and take a look!
1001	So... This is how your game turned\nout in the end, {[0201]}...
1002	It's incredible!\nUnique! Unmistakably a masterpiece\nof {[0001|1a00]}{color[0400]}{[0201]} game design{color[ffff]}!{[0001|ffff]}
1003	This might be the only one\nlike it in the world!
1003-01	Wow...\nLet's go back to the program screen.
1004	One final piece of housekeeping to do.
1005	We need to add your game to the game list!
Lesson_BallRoll_00.msbt
000	Hey, {[0201]}!\nYou made it to Lesson 2!
001	In the previous lesson, we made\nourselves the no-holds-barred\nTag Showdown. And you were great!
004	If you'd care to join me, I've got plenty\nmore to show you in Lesson 2.
006	Now, on to the topic of\nour next game...
007	For this one, you're going to be {[0001|1a00]}{color[0400]}tilting\n{color[ffff]}{[0001|ffff]}your Nintendo Switch console around\nlike it's a pinball machine.
008	And the name of this game\nis {[0001|1a00]}{color[0400]}On a Roll{color[ffff]}{[0001|ffff]}!
009	I've got a video here that should\ndemonstrate it nicely.
010	Just imagine there's a ball in\nthe center of the screen\nwhile you watch.
011	Basically, you have to roll a ball around\nby {[0001|1a00]}{color[0400]}tilting your console{color[ffff]}{[0001|ffff]}.
013	This one's going to be all about\n{[0001|1a00]}{color[0400]}tilting your controller{color[ffff]}{[0001|ffff]}.
014	And the name of this game\nis {[0001|1a00]}{color[0400]}On a Roll{color[ffff]}{[0001|ffff]}.
015	You're best off playing the game\nin {[0001|1a00]}{color[0400]}handheld mode{color[ffff]}{[0001|ffff]}, I'd say!
016	Try watching the next video\nlike you're looking {[0001|1a00]}{color[0400]}from above{color[ffff]}{[0001|ffff]}\nat a box with a ball inside.
017	Basically, you have to {[0001|1a00]}{color[0400]}tilt your controller\n{color[ffff]}{[0001|ffff]}like you'd tilt a box with a ball inside.
019	As you can probably guess,\nthat means for this lesson, we'll be\ndoing our work in {[0001|1a00]}{color[0400]}overhead view{color[ffff]}{[0001|ffff]}.
020	All right then, off we go to\nthe program screen!
021	One thing before we switch\nto {[0001|1a00]}{color[0400]}overhead view{color[ffff]}{[0001|ffff]}.
022	First we need to place one of\nthis game's most important items:\nthe humble {[0001|1a00]}{color[0400]}apple{color[ffff]}{[0001|ffff]}.
023	For that, you'll want to call up\na {[0001|1a00]}{color[0400]}Fancy-Object Nodon{color[ffff]}{[0001|ffff]}.
024	Open {[0001|1a00]}{color[0400]}Objects{color[ffff]}{[0001|ffff]} here...
025	Select {[0001|1a00]}{color[0400]}Fancy Objects{color[ffff]}{[0001|ffff]}...
026	Then {[0001|1a00]}{color[0400]}Round Fancy Objects{color[ffff]}{[0001|ffff]}...
027	Now select {[0001|1a00]}{color[0400]}Apple{color[ffff]}{[0001|ffff]} to call up\na {[0001|1a00]}{color[0400]}Fancy-Object Nodon{color[ffff]}{[0001|ffff]}.
028	And what a fancy\nobject it is too!
030	It's so ripe and juicy looking...
031	The {[0001|1a00]}{color[0400]}apple {color[ffff]}{[0001|ffff]}of my eye! ♥
032	There we go. Now you know\nhow to place apples.
033	Let's head over to the\ngame screen.
034	If I had a mouth, I'd be tempted\nto take a bite!
036	OK, time for the\nmain event.
037	Let's view the apple from above\nusing {[0001|1a00]}{color[0400]}overhead view{color[ffff]}{[0001|ffff]}.
038	Fortunately, it's very easy\nto switch views.
039	Just select the {[0001|1a00]}{color[0400]}overhead view\noption{color[ffff]}{[0001|ffff]} here.
040	Gosh! ♥\nIs it me, or did something big\nhappen on the game screen?
041	Just like that, we're\nin {[0001|1a00]}{color[0400]}overhead view{color[ffff]}{[0001|ffff]}.
042	I say we check out\nthe game screen.
043	Come on, let's\nhead that way.
044	Well, what have we here?
045	Our apple was all, you know,\n{[0001|1a00]}{color[0400]}sidey-widey{color[ffff]}{[0001|ffff]} before...
046	But now it's {[0001|1a00]}{color[0400]}abovey-wovey{color[ffff]}{[0001|ffff]}!\nRight? You know what I'm saying.
047	This is the view we'll be using\nto create a level for the ball to\nroll around in.
049	And on that note, it's time to\nstart making the level itself.
050	First, we need to decide {[0001|1a00]}{color[0400]}how big\nthe game screen will be{color[ffff]}{[0001|ffff]}.
051	Open {[0001|1a00]}{color[0400]}Objects{color[ffff]}{[0001|ffff]}.
052	Select {[0001|1a00]}{color[0400]}Game Screen and Camera{color[ffff]}{[0001|ffff]}.
053	Now call up a {[0001|1a00]}{color[0400]}Game-Screen Nodon{color[ffff]}{[0001|ffff]}\nfrom {[0001|1a00]}{color[0400]}Game Screen{color[ffff]}{[0001|ffff]}.
054	Why, hello there, darling!
055	Don't you worry about the\ngame screen. I've got it\naaall under control.
056	OK, let's resize our fabulous\nGame-Screen Nodon friend\nto fit the {[0001|1a00]}{color[0400]}blue frame{color[ffff]}{[0001|ffff]}.
057	Absolutely gorgeous!\nI can tell I'm going to\nfit right in here!
058	OK. That's done.
060	Now we'll use some {[0001|1a00]}{color[0400]}Object Nodon{color[ffff]}{[0001|ffff]}\nto make the outer {[0001|1a00]}{color[0400]}walls{color[ffff]}{[0001|ffff]}.
061	Open {[0001|1a00]}{color[0400]}Objects{color[ffff]}{[0001|ffff]}.
062	Select {[0001|1a00]}{color[0400]}Simple Objects{color[ffff]}{[0001|ffff]}.
063	And then {[0001|1a00]}{color[0400]}Box{color[ffff]}{[0001|ffff]}.
064	Howdy.\nI'm a wall.
067	Let's fit it into the blue frame\nat the top of the screen.
069	There you go!
070	Now we need to tweak our\nwall's settings a bit.
071	Open the Object Nodon's settings.
072	Let's only enable {color[0400]}{[0001|1a00]}Visible{[0001|ffff]}{color[ffff]} and\n{color[0400]}{[0001|1a00]}Solid{[0001|ffff]}{color[ffff]}, under {[0001|1a00]}Properties{[0001|ffff]}.
073	Let's also change\nthe {[0001|1a00]}{color[0400]}color{color[ffff]}{[0001|ffff]}.
074	Bright {[0001|1a00]}{color[0400]}red {color[ffff]}{[0001|ffff]}should do nicely.
075	Great.\nNow close those settings.
076	Now to build the other\nthree walls.
077	{[0001|1a00]}{color[0400]}Copy {color[ffff]}{[0001|ffff]}the Object Nodon.
078	Slide it down to the\nbottom of the screen.
079	I might be the bottom wall,\nbut I'm at the top of my game!
080	{[0001|1a00]}{color[0400]}Copy{color[ffff]}{[0001|ffff]} again, please.
081	{[0001|1a00]}{color[0400]}Stretch this one out tall{color[ffff]}{[0001|ffff]}, and fit it\ninto the blue frame on the left.
082	I'm the left wall, sure,\nbut I'll treat you right.
083	{[0001|1a00]}{color[0400]}Copy {color[ffff]}{[0001|ffff]}one last time now.
084	Move it over to the right\nof the screen.
085	Yup. I reckon we've got the\nwhole screen walled up.
086	Beautiful!
087	Let's go see\nhow it all looks!
089	Looks like we've got ourselves\na {[0001|1a00]}{color[0400]}level to work with{color[ffff]}{[0001|ffff]}!
090	You could say we're\n"on a roll"... Right?!
092	OK, I think it's time we slid on\nover to the program screen.
093	And there you have it.
094	Step 1 is done.
095	Well, fancy that! ♥
096	Oh darling, you were\nmagnificent!
097	Give yourself\na pat on the back!
098	Terrific!
099	In this step, we learned how to\nenter {[0001|1a00]}{color[0400]}overhead view{color[ffff]}{[0001|ffff]}.
100	And we created the {[0001|1a00]}{color[0400]}play area{color[ffff]}{[0001|ffff]}\nfor our game.
103	In the next step, we'll work on\n{[0001|1a00]}{color[0400]}getting the ball to roll around{color[ffff]}{[0001|ffff]}.
105	Catch you later!
Lesson_BallRoll_01.msbt
000	Welcome to Step 2 of...\nOn a Roll!
001	Last time, we learned how to\nenter {[0001|1a00]}{color[0400]}overhead view{color[ffff]}{[0001|ffff]}.
002	We also put up some\n{[0001|1a00]}{color[0400]}walls to make our level{color[ffff]}{[0001|ffff]}.
003	Now, I think Step 2 should\nbe pretty interesting.
004	We're going to get the ball to\n{[0001|1a00]}{color[0400]}roll around{color[ffff]}{[0001|ffff]} as you tilt your\nNintendo Switch console.
005	We're going to get the ball\nto {[0001|1a00]}{color[0400]}roll around{color[ffff]}{[0001|ffff]} as you tilt\nyour controller.
006	It's going to be rolling here,\nthere, and everywhere!
007	OK, time to get our ball bearings\nin this {[0001|1a00]}{color[0400]}topsy-turvy world{color[ffff]}{[0001|ffff]}!
008	Let's roll!
009	Before we do anything else, we will\nof course first need to place a ball.
011	Time to call up a {[0001|1a00]}{color[0400]}sphere\nMoving-Object Nodon{color[ffff]}{[0001|ffff]}.
012	Open {[0001|1a00]}{color[0400]}Objects{color[ffff]}{[0001|ffff]}.
013	Select {[0001|1a00]}{color[0400]}Special Objects{color[ffff]}{[0001|ffff]}.
014	Now {[0001|1a00]}{color[0400]}Moving-Object Nodon{color[ffff]}{[0001|ffff]}.
015	And from here, we can call up a\n{[0001|1a00]}{color[0400]}sphere Moving-Object Nodon{color[ffff]}{[0001|ffff]}.
016	Hoo! Hah!\n{[0001|1a00]}{color[0400]}Moving-Object Nodon{color[ffff]}{[0001|ffff]} here!\nReady for action!
017	Shake out those limbs, folks,\n'cause it's time to get moving!
018	Or even better—you do the\nmental workout, and I'll take\ncare of the heavy lifting!
019	Can't wait to work with you, friend!
021	First, let's make the Moving-Object\nNodon a teensy bit smaller.
022	That's right. Just like that.
023	Now to open its settings.
024	{[0001|1a00]}{color[0400]}Disable Destructible{color[ffff]}{[0001|ffff]} in {[0001|1a00]}Properties{[0001|ffff]}.
025	I reckon we can change\nthe {[0001|1a00]}{color[0400]}color{color[ffff]}{[0001|ffff]}.
026	How about {[0001|1a00]}{color[0400]}blue{color[ffff]}{[0001|ffff]}?
027	Set the {[0001|1a00]}Y position{[0001|ffff]} to {[0001|1a00]}{color[0400]}0.30m{color[ffff]}{[0001|ffff]}.
028	Perfect.\nClose the settings now.
030	Time to see it on the\ngame screen.
031	Roll on up, and feast your\neyes upon the incredible\nsoon-to-be-rolling ball!
033	OK, try {[0001|1a00]}{color[0400]}tilting the console\nto move the ball around{color[ffff]}{[0001|ffff]}.
034	OK, try {[0001|1a00]}{color[0400]}tilting the controller\nto move the ball around{color[ffff]}{[0001|ffff]}.
035	...
036	You had one job, ball!
038	You know why it won't move?\nIt's because we never "taught"\nit {[0001|1a00]}{color[0400]}how to roll{color[ffff]}{[0001|ffff]}.
039	Let's fix that right now.
040	We need the ball to roll when\nyou {[0001|1a00]}{color[0400]}tilt the console{color[ffff]}{[0001|ffff]}, right?
041	We need the ball to roll when\nyou {[0001|1a00]}{color[0400]}tilt the controller{color[ffff]}{[0001|ffff]}, right?
042	Then we're going to have\nto call up a {[0001|1a00]}{color[0400]}Tilt Nodon{color[ffff]}{[0001|ffff]}.
043	Open up {[0001|1a00]}{color[0400]}Input{color[ffff]}{[0001|ffff]}.
044	Select {[0001|1a00]}{color[0400]}Motion{color[ffff]}{[0001|ffff]}.
045	Then select {[0001|1a00]}{color[0400]}Tilt{color[ffff]}{[0001|ffff]}.
046	And now call up a\n{[0001|1a00]}{color[0400]}Tilt Nodon {color[ffff]}{[0001|ffff]}from {[0001|1a00]}{color[0400]}Auto{color[ffff]}{[0001|ffff]}.
047	Pleasure to be here!
048	Tilting the console, are we?
049	Tilting the controller, are we?
050	Take care, then. You need a\nsteady hand and a calm mind\nfor this type of work.
057	OK then! Keep calm, and\nplace it in the blue frame.
059	First, we'll make the {[0001|1a00]}{color[0400]}ball{color[ffff]}{[0001|ffff]} roll\nto the {[0001|1a00]}{color[0400]}sides{color[ffff]}{[0001|ffff]} when we tilt the\n{[0001|1a00]}{color[0400]}console left and right{color[ffff]}{[0001|ffff]}.
060	First, we'll make the {[0001|1a00]}{color[0400]}ball{color[ffff]}{[0001|ffff]} roll\nto the {[0001|1a00]}{color[0400]}sides{color[ffff]}{[0001|ffff]} when we tilt the\n{[0001|1a00]}{color[0400]}controller left and right{color[ffff]}{[0001|ffff]}.
061	To the Tilt Nodon's settings!
069	Can you set {[0001|1a00]}Range{[0001|ffff]}\nfrom {[0001|1a00]}{color[0400]}0.00{color[ffff]}{[0001|ffff]} to {[0001|1a00]}{color[0400]}0.15{color[ffff]}{[0001|ffff]}?
071	Nice. Go ahead and close\nthose settings now.
072	Next, connect the Tilt Nodon to the\n{[0001|1a00]}{color[0400]}X port {color[ffff]}{[0001|ffff]}of the Moving-Object Nodon.
072-01	At this point we should be able to\nroll the {[0001|1a00]}{color[0400]}ball{color[ffff]}{[0001|ffff]} {[0001|1a00]}{color[0400]}sideways{color[ffff]}{[0001|ffff]} by tilting the\n{[0001|1a00]}{color[0400]}console left and right{color[ffff]}{[0001|ffff]}.
072-02	At this point we should be able to\nroll the {[0001|1a00]}{color[0400]}ball{color[ffff]}{[0001|ffff]} {[0001|1a00]}{color[0400]}sideways{color[ffff]}{[0001|ffff]} by tilting the\n{[0001|1a00]}{color[0400]}controller left and right{color[ffff]}{[0001|ffff]}.
073	I should point out that {[0001|1a00]}{color[0400]}X\n{color[ffff]}{[0001|ffff]}here refers to {[0001|1a00]}{color[0400]}left and right\nmovement{color[ffff]}{[0001|ffff]}.
079	OK, time to head over to the\ngame screen to check out our\nball in action.
080	Tilt the {[0001|1a00]}{color[0400]}console{color[ffff]}{[0001|ffff]} to the side\nand see what happens...
081	Tilt the {[0001|1a00]}{color[0400]}controller{color[ffff]}{[0001|ffff]} to the side\nand see what happens...
082	And we are rolling!
083	So now we can move the ball\nin two out of four directions.
084	Now try tilting the console\n{[0001|1a00]}{color[0400]}toward and away from you{color[ffff]}{[0001|ffff]}.
085	Now try tilting the controller\n{[0001|1a00]}{color[0400]}toward and away from you{color[ffff]}{[0001|ffff]}.
086	Not so much movement, of course,\nbecause we haven't programmed\nit to do anything yet.
087	Well, we just have to make\nit happen. Let's get the ball\nrolling {[0001|1a00]}{color[0400]}back and forward{color[ffff]}{[0001|ffff]}.
088	Select the Tilt Nodon.
089	Now copy it.
090	Heyo!
091	I just want to say, tilting\ndoesn't come easy.
092	When you start to weigh up the\nimportant things in life, it's hard\nto get the right balance, you know?
093	Sometimes you start leaning\nhard into one direction and then\nyour whole world just...tilts.
094	Uh... So wait... Is it easy to tilt,\nor hard to tilt? Seems like opinion\nis what's tilting back and forth here...
095	Let's slide our new Tilt Nodon\ndown to the bottom before we\nreally end up going askew!
096	Open the settings, and we'll set up\nthe {[0001|1a00]}{color[0400]}output {color[ffff]}{[0001|ffff]}for our {[0001|1a00]}{color[0400]}forward-backward\ntilt movement{color[ffff]}{[0001|ffff]}.
097	We can {[0001|1a00]}{color[0400]}tilt forward and backward\n{color[ffff]}{[0001|ffff]}by rotating around the {[0001|1a00]}{color[0400]}x-axis{color[ffff]}{[0001|ffff]}.
098	This means our {[0001|1a00]}Axis of Rotation{[0001|ffff]}\nneeds to be {[0001|1a00]}{color[0400]}X{color[ffff]}{[0001|ffff]}.
100	Good stuff.\nLet's close the settings.
101	Connect the Tilt Nodon up to the\nMoving-Object Nodon's {[0001|1a00]}{color[0400]}Z port{color[ffff]}{[0001|ffff]}.
101-01	Now when you tilt the {[0001|1a00]}{color[0400]}console\nback and forward{color[ffff]}{[0001|ffff]}, the {[0001|1a00]}{color[0400]}ball{color[ffff]}{[0001|ffff]} should\nmove that way too.
101-02	Now when you tilt the {[0001|1a00]}{color[0400]}controller\nback and forward{color[ffff]}{[0001|ffff]}, the {[0001|1a00]}{color[0400]}ball{color[ffff]}{[0001|ffff]} should\nmove that way too.
102	{[0001|1a00]}{color[0400]}Z{color[ffff]}{[0001|ffff]} deals with {[0001|1a00]}{color[0400]}forward-backward\nmovement{color[ffff]}{[0001|ffff]}.
108	OK! Let's test it out\non the game screen!
109	Move your {[0001|1a00]}{color[0400]}console back and forward\n{color[ffff]}{[0001|ffff]}to roll the {[0001|1a00]}{color[0400]}ball back and forth{color[ffff]}{[0001|ffff]}.
110	Move your {[0001|1a00]}{color[0400]}controller back and forward\n{color[ffff]}{[0001|ffff]}to roll the {[0001|1a00]}{color[0400]}ball back and forth{color[ffff]}{[0001|ffff]}.
111	That's how we roll!
113	And that's it for the\n{[0001|1a00]}{color[0400]}ball-rolling mechanic{color[ffff]}{[0001|ffff]}.
116	I think we can head back now.
117	So, are we done then?
118	The answer is yes!\nThat's it for Step 2!
119	You've got this!
120	Sweet!
121	Great job!
122	Did you enjoy working\non the tilt mechanic?
125	I hope this demonstrates that\nyou {[0001|1a00]}{color[0400]}don't always have to rely on\nbuttons {color[ffff]}{[0001|ffff]}for every game.
126	Finding out new styles of play\nlike this is part of the fun of\n{[0001|1a00]}{color[0400]}Game Builder Garage{color[ffff]}{[0001|ffff]}!
130	In the next step, we're going to make\nthe {[0001|1a00]}{color[0400]}level{color[ffff]}{[0001|ffff]} that the ball rolls around in\na whole lot more interesting.
131	So...\nSee you in the next step!
Lesson_BallRoll_02.msbt
000	Heya, {[0201]}!\nIt's time for Step 3 of On a Roll!
001	In the last step, we worked on\ngetting the ball to roll, right?
002	Try rolling the ball so that it\nbumps into the {[0001|1a00]}{color[0400]}apple{color[ffff]}{[0001|ffff]}.
003	Yeah! You showed that apple\nwhat's up! Take THAT, apple!
004	You know what we need? MORE APPLES!\nAnd more walls! And less rectangular...ness.
005	I guess what I'm saying is,\nlet's make this space more\nfun to play around in!
006	If that sounds good to you,\nthen let's head on over to the\nprogram screen.
008	First let's get some {[0001|1a00]}{color[0400]}walls {color[ffff]}{[0001|ffff]}to\nstart building a course with.
009	Select the {[0001|1a00]}{color[0400]}Object Nodon{color[ffff]}{[0001|ffff]}.
010	Now copy it.
011	Adjust it into the blue frame,\nand then we can get building!
012	Yep. I'm a wall, but I'm also\nthe building block from which\nall other walls shall rise!
013	Uh... Copy it again, please.
014	And drop it in the\nblue frame.
015	Under or over?\nI'm up for whatever.
016	Copy one last time,\nif you could...
017	Make this one a bit longer, and\nplace it in the blue frame.
018	Centered and solid here.\nI'm king of the walls!
019	Done with that,\nthank goodness.
020	Let's head to the game\nscreen! Quick!
021	Looks like we've got our walls\nright where we want them.
022	We covered up our apple\nin the process, but never\nmind that for now.
023	See if you can roll the ball\ninto the {[0001|1a00]}{color[0400]}bottom-right area{color[ffff]}{[0001|ffff]}.
024	Hey, you're a natural at this!
026	It's a lot more fun to steer the ball now\nthat the level's more complex, right?
027	OK, time for us to save that apple\nfrom the wall's stony embrace!
029	Select the apple\nFancy-Object Nodon...
030	Make it a tad larger, and shift it over\nto the bottom-left-hand corner.
031	Perfect.
032	Whew! Do you realize how\nstuffy it is inside there?!
033	OK, let's see how it looks now.
034	Nice! Our apple is no longer\nAWOL! And it's no longer "a wall!"\nGet it? Because... Never mind.
035	OK, try bumping into the apple\nwith the ball again.
036	It just rolls around when\nthe ball hits it, huh?
037	Instead, why don't we make it\nso that you "collect" the apple\nby bumping into it?
039	To the program screen!
040	Select the apple\nFancy-Object Nodon.
041	Open the settings.
042	Under {[0001|1a00]}Properties{[0001|ffff]}, we'll want to\n{color[0400]}{[0001|1a00]}enable Visible{[0001|ffff]}{color[ffff]}, {color[0400]}{[0001|1a00]}Solid{[0001|ffff]}{color[ffff]}, and {[0001|1a00]}{color[0400]}Destructible{color[ffff]}{[0001|ffff]}.
043	{[0001|1a00]}{color[0400]}Enabling Destructible{color[ffff]}{[0001|ffff]} means that\nas soon as the {[0001|1a00]}{color[0400]}ball touches the apple{color[ffff]}{[0001|ffff]},\nthe apple will be {[0001|1a00]}{color[0400]}destroyed{color[ffff]}{[0001|ffff]}!
044	OK, close the settings.
045	Let's see what happens\nwhen the ball hits the apple.
046	Roll the ball into the apple,\nplease!
047	Applesauce!
048	So you "collected" the apple.\n(Take THAT, apple!)
049	When you {[0001|1a00]}{color[0400]}destroy an apple\n{color[ffff]}{[0001|ffff]}this way, it can actually {[0001|1a00]}{color[0400]}look like\nyou've picked it up{color[ffff]}{[0001|ffff]}.
050	Great! I think we should place some\nmore apples around the level, liven the\nplace up a bit. What do you say?
052	Buckle up, because we're about to {[0001|1a00]}{color[0400]}copy{color[ffff]}{[0001|ffff]}\na basketload of {[0001|1a00]}{color[0400]}Fancy-Object Nodon{color[ffff]}{[0001|ffff]}.
053	Start out by selecting\na {[0001|1a00]}{color[0400]}Fancy-Object Nodon{color[ffff]}{[0001|ffff]}.
054	And copy it.
055	Put it up in the top right.
056	Copy it again.
057	Now put this in the bottom right.
058	Copy again!
059	This one's for the top right.
060	One last copy...
061	And this one can go\nat the bottom.
061-01	There. That makes\nfive apples in all.
062	Time for a check on\nthe game screen.
063	Looks like we've got\nourselves a five-apple squad!
064	Why don't you see if you\ncan "collect" them all?
065	You're handling the\ncontrols like a pro!
066	Haha, looks like you were way\nahead of me! Nice going!
067	With more apples on the playing field,\nour game looks way more exciting now,\ndon't you think?
069	Time to head back!
070	That should be it for now.
071	The curtain closes on Step 3.
072	How'd ya like\nthem apples?
073	So exciting!
074	Radiant work,\nas always! ♥
075	Loving the level\ndesign! ♥
076	This time, we added more walls and\napples to give us a proper {[0001|1a00]}{color[0400]}level{color[ffff]}{[0001|ffff]}.
077	Every step brings us closer to the\nfun game we're working toward.
078	Nothing really happens yet\nwhen you pick up the apples,\nbut that will change.
079	Next time, we'll be focusing on\ncounting {[0001|1a00]}{color[0400]}how many apples have\nbeen collected{color[ffff]}{[0001|ffff]}.
080	See you in the next step!
Lesson_BallRoll_03.msbt
000	Your attention, please! Step 4\nof On a Roll is about to begin!
001	Last time we filled our level\nwith walls and apples to make\nit feel more alive.
003	This time, we'll start working on\na {[0001|1a00]}{color[0400]}rule{color[ffff]}{[0001|ffff]} that should really capture\nthe feel of a maze game:
004	"{[0001|1a00]}{color[0400]}Collect five apples\nto win the game{color[ffff]}{[0001|ffff]}"!
006	So for this step, we'll need to\nmake a way to {[0001|1a00]}{color[0400]}count how many\napples have been collected{color[ffff]}{[0001|ffff]}.
008	Let's head over to\nthe program screen.
009	{[0001|1a00]}{color[0400]}Counting{color[ffff]}{[0001|ffff]} apples...
010	Seems like {[0001|1a00]}{color[0400]}Counter Nodon{color[ffff]}{[0001|ffff]} would\nbe the right Nodon for us here.
011	Select {[0001|1a00]}{color[0400]}Middle{color[ffff]}{[0001|ffff]}...
012	Then {[0001|1a00]}{color[0400]}Flag/Counter/Random{color[ffff]}{[0001|ffff]}...
013	Now select {[0001|1a00]}{color[0400]}Counter{color[ffff]}{[0001|ffff]} to\ncall up a {[0001|1a00]}{color[0400]}Counter Nodon{color[ffff]}{[0001|ffff]}.
014	I HAVE COUNTED ALL THE NODON IN\nTHIS LESSON. I AM THE {[0001|1a00]}{color[0400]}17TH{color[ffff]}{[0001|ffff]} TO BE\nSUMMONED, BUT NO LESS IMPORTANT.
014-01	YOU ARE ASKING ME TO COUNT\nTHE NUMBER OF APPLES THAT\nHAVE BEEN COLLECTED?
014-02	YES, OK. I WILL COUNT FOR YOU.\nYOU CAN COUNT ON ME.
015	Move the Counter Nodon over\nto the side a little bit, could you?
019	To get the Counter Nodon to\ncount something, we have to\n{[0001|1a00]}{color[0400]}input a signal{color[ffff]}{[0001|ffff]} to it.
020	And we're looking to count the\n{[0001|1a00]}{color[0400]}number of apples collected{color[ffff]}{[0001|ffff]}.\nHmm...
021	We need a Nodon that outputs\na signal for us whenever we\n{[0001|1a00]}{color[0400]}pick up an apple{color[ffff]}{[0001|ffff]}.
022	I say "pick up," but really the\n{[0001|1a00]}{color[0400]}apple gets destroyed{color[ffff]}{[0001|ffff]}, right?
024	So our rule should be "if destroyed,\noutput signal." We can call up an\n{[0001|1a00]}{color[0400]}Object-Break Nodon{color[ffff]}{[0001|ffff]} for that.
025	Open up {[0001|1a00]}{color[0400]}Input{color[ffff]}{[0001|ffff]}, please.
026	Now select {[0001|1a00]}{color[0400]}State Change{color[ffff]}{[0001|ffff]}.
027	And finally, {[0001|1a00]}{color[0400]}Object-Break Nodon{color[ffff]}{[0001|ffff]}.
029	Hey there, sweetie! A little bird\ntells me you're making a game\nabout {[0001|1a00]}{color[0400]}breaking lots of apples{color[ffff]}{[0001|ffff]}?
030	Um, technically it's about\n{[0001|1a00]}{color[0400]}collecting apples{color[ffff]}{[0001|ffff]}...
031	Same difference! Anyway, I've\ngot it covered. I'll watch for the\n{[0001|1a00]}{color[0400]}exact moment they break{color[ffff]}{[0001|ffff]}!
033	Sounds...reassuring? Let's\ngo and open the Object-Break\nNodon's settings.
034	Open the {[0001|1a00]}{color[0400]}Check What? {color[ffff]}{[0001|ffff]}option.
035	We only need to\n{[0001|1a00]}{color[0400]}enable Apple{color[ffff]}{[0001|ffff]} here.
036	Great! Now close the\ndetailed settings.
037	And close the settings\naltogether.
038	Let's move the Object-Break\nNodon over just a bit...
039	Now link the {[0001|1a00]}{color[0400]}Object-Break\nNodon {color[ffff]}{[0001|ffff]}to the Counter Nodon's\n{[0001|1a00]}{color[0400]}count up port{color[ffff]}{[0001|ffff]}.
040	Oh, I'll be watching, sweetness.\nAs soon as an apple is destroyed,\nI'll tell you right there and then.
041	AND I WILL COUNT HOW MANY\nTIMES IT HAPPENS.
042	And that about does it.\nOur {[0001|1a00]}{color[0400]}"apples collected" counter{color[ffff]}{[0001|ffff]}\nshould now be fully functional.
044	Let's see what's happening\non the game screen.
045	Call up a {[0001|1a00]}{color[0400]}Number-Object Nodon{color[ffff]}{[0001|ffff]}.
046	Open {[0001|1a00]}{color[0400]}Objects{color[ffff]}{[0001|ffff]}.
047	Select {[0001|1a00]}{color[0400]}Special Objects{color[ffff]}{[0001|ffff]}.
048	Now call a {[0001|1a00]}{color[0400]}Number-Object Nodon\n{color[ffff]}{[0001|ffff]}from {[0001|1a00]}{color[0400]}Number Object{color[ffff]}{[0001|ffff]}.
049	Delighted to be working\nwith you, my friend.
050	Notwithstanding technical difficulties,\nI will display the {[0001|1a00]}{color[0400]}number{color[ffff]}{[0001|ffff]} that the {[0001|1a00]}{color[0400]}objects\non the game screen{color[ffff]}{[0001|ffff]} have {[0001|1a00]}{color[0400]}input{color[ffff]}{[0001|ffff]}.
050-01	Simply tell me the number that you\nwant me to display, and I will show\nit to the best of my ability.
051	OK, let's make our eloquent friend a bit\nsmaller and put it somewhere that's\neasy to see on the game screen.
052	Time to open the settings.
053	Under {[0001|1a00]}{color[0400]}Properties{color[ffff]}{[0001|ffff]},\nwe should {[0001|1a00]}{color[0400]}enable Visible{color[ffff]}{[0001|ffff]}.
054	And change the {[0001|1a00]}{color[0400]}color{color[ffff]}{[0001|ffff]}.
055	I like {[0001|1a00]}{color[0400]}red{color[ffff]}{[0001|ffff]}.
056	We'll want to change the\ncolor of the number too, so\ngo ahead and open {[0001|1a00]}{color[0400]}Text Color{color[ffff]}{[0001|ffff]}.
057	This should be {[0001|1a00]}{color[0400]}white{color[ffff]}{[0001|ffff]}.
058	I think {[0001|1a00]}{color[0400]}one digit {color[ffff]}{[0001|ffff]}should\nbe enough for us.
059	So, please set the\n{[0001|1a00]}Whole Number Digits\n{[0001|ffff]}to {[0001|1a00]}{color[0400]}1{color[ffff]}{[0001|ffff]}.
060	Let's also set the {[0001|1a00]}{color[0400]}Y Position{color[ffff]}{[0001|ffff]}\nto, say, {[0001|1a00]}{color[0400]}0.60m{color[ffff]}{[0001|ffff]}.
061	Great!\nNow close the settings.
062	Next, we link the Counter Nodon\nand Number-Object Nodon together.
063	If all goes well, the {[0001|1a00]}{color[0400]}number of apples\nwe've collected{color[ffff]}{[0001|ffff]} should now be\nshown on the game screen.
064	Fingers crossed!
065	And presto! Our {[0001|1a00]}{color[0400]}apple hoard{color[ffff]}{[0001|ffff]}\nis being displayed as...
066	absolutely zilch!
067	Well, we messed up somewhere...\nWe didn't take into account the fact that\nthe game screen is in {[0001|1a00]}{color[0400]}overhead view{color[ffff]}{[0001|ffff]}.
068	We need to make sure\nthat the {[0001|1a00]}{color[0400]}number display{color[ffff]}{[0001|ffff]}\nis pointing upward!
069	Let's fix that now so we can\n{[0001|1a00]}{color[0400]}see the number from above{color[ffff]}{[0001|ffff]}.
070	Select the Number-Object Nodon.
071	Open the settings.
072	Now open {[0001|1a00]}{color[0400]}Text Display Side{color[ffff]}{[0001|ffff]}.
073	We want our number to\npoint upward, right?
074	That means we need to\nset this option to {[0001|1a00]}{color[0400]}Y+{color[ffff]}{[0001|ffff]}.
074-01	Keep in mind that {[0001|1a00]}{color[0400]}Y{color[ffff]}{[0001|ffff]} corresponds\nto {[0001|1a00]}{color[0400]}moving up and down{color[ffff]}{[0001|ffff]}.
075	Now if you could\nclose the settings...
076	This time, we should\nbe able to see it.\nDeep breath...
077	Whew! Excellent work!\nOur number is visible!
079	Now that we're up and running,\nlet's get back to saucing apples!
080	Yep! It was showing the {[0001|1a00]}{color[0400]}number\nyou squished{color[ffff]}{[0001|ffff]}... Err... {[0001|1a00]}{color[0400]}Collected{color[ffff]}{[0001|ffff]}.
081	Time to head back, methinks.
082	And we're done for now!
083	Step 4 is a wrap, so give\nyourself a pat on the back.
084	Not gonna lie. That\nwas pretty good!
085	IT IS A GLORIOUS DAY\nFOR COUNTING.
086	Perfectly pleasurable\nperformance.
087	This time, we worked out\na way to count the apples\nthat we've collected.
088	Next up, we'll be using this number\nto work out when we've picked up\nall the apples to {[0001|1a00]}{color[0400]}win the game{color[ffff]}{[0001|ffff]}!
090	The programming we did here\nis going to help us out a bunch\nin the next step.
091	And what we do in the next step\nwill help us even further along\nthe way.
092	That's one of the coolest things about\nprogramming: the fact that everything you\ndo builds toward something even better.
094	Can't wait to see you\nin the next step!
Lesson_BallRoll_04.msbt
000	How are you this fine step?\nAre you feeling ready to roll?
001	Last time, we implemented a {[0001|1a00]}{color[0400]}way\nto count the number of apples\nwe collect{color[ffff]}{[0001|ffff]}.
002	In this step, I have some other\nplans in store for {[0001|1a00]}{color[0400]}that number{color[ffff]}{[0001|ffff]}...
003	Like figuring out {[0001|1a00]}{color[0400]}how many apples\nwe still have left to collect{color[ffff]}{[0001|ffff]}.
004	And that's not all! We're going to do\neven more mathematical magic to\ncreate a {[0001|1a00]}{color[0400]}win condition {color[ffff]}{[0001|ffff]}for our game!
011	But enough of my blathering.\nLet's hop right in.
016	At the moment, the game screen\ntells us {[0001|1a00]}{color[0400]}how many apples we've\ncollected in total{color[ffff]}{[0001|ffff]}.
017	But we really want it to show\n{[0001|1a00]}{color[0400]}how many apples we still need\nto collect{color[ffff]}{[0001|ffff]}. Time to fix that!
018	So... Our goal is clear.\n{[0001|1a00]}{color[0400]}When there are no apples\nleft to collect, we win{color[ffff]}{[0001|ffff]}.
019	Let's see. We have to collect\nfive apples in total...
020	So we can work out how many apples\nare left by {[0001|1a00]}{color[0400]}subtracting the number we\ncollected from five{color[ffff]}{[0001|ffff]}.
021	For calculations like this, we've\ngot our trusty {[0001|1a00]}{color[0400]}Calculator Nodon{color[ffff]}{[0001|ffff]}.\nLet's call one up now.
022	Open up {[0001|1a00]}{color[0400]}Middle{color[ffff]}{[0001|ffff]}.
023	Select {[0001|1a00]}{color[0400]}Calculate (＋－×÷){color[ffff]}{[0001|ffff]}.
024	And now call up a Calculator Nodon\nfrom {color[0400]}{[0001|1a00]}－{[0001|ffff]}{color[ffff]}{[0001|1a00]}{color[0400]} (Subtraction){color[ffff]}{[0001|ffff]}.
025	I EXCEL IN PERFORMING\nQUICK, PRECISE, AND LOGICAL\nCALCULATIONS. 
026	I NEED ONLY FLOURISH MY\nARITHMETIC WAND AND LET\nTHE SCIENCE HAPPEN.
027	{[0001|1a00]}{color[0400]}SUBTRACTING {color[ffff]}{[0001|ffff]}THE NUMBER IN THE\n{[0001|1a00]}{color[0400]}INPUT 2 PORT {color[ffff]}{[0001|ffff]}FROM THE {[0001|1a00]}{color[0400]}INPUT 1 PORT{color[ffff]}{[0001|ffff]},\nFOR INSTANCE, IS CHILD'S PLAY.
028	THE RESULT OF THE {[0001|1a00]}{color[0400]}CALCULATION{color[ffff]}{[0001|ffff]}\nWILL EMERGE AT MY {[0001|1a00]}{color[0400]}OUTPUT PORT{color[ffff]}{[0001|ffff]}.
031	Yep. Can't argue with that.\nLet's move the Calculator Nodon\ninto the blue frame.
032	Connect the {[0001|1a00]}{color[0400]}Counter Nodon {color[ffff]}{[0001|ffff]}to the\n{[0001|1a00]}{color[0400]}Calculator Nodon's input 2 port{color[ffff]}{[0001|ffff]}.
033	THIS VALUE IS THE\n{[0001|1a00]}{color[0400]}NUMBER OF APPLES\nYOU HAVE OBTAINED{color[ffff]}{[0001|ffff]}.
034	NOW I WILL NEED A NUMBER\nAT MY {[0001|1a00]}{color[0400]}INPUT 1 PORT{color[ffff]}{[0001|ffff]}. IF YOU\nWOULD BE SO KIND.
036	We need to connect the total number of\napples to the {[0001|1a00]}{color[0400]}input 1 port{color[ffff]}{[0001|ffff]}. So we need a\nNodon that'll output {[0001|1a00]}{color[0400]}the number 5{color[ffff]}{[0001|ffff]} for us.
037	For {[0001|1a00]}{color[0400]}fixed numbers{color[ffff]}{[0001|ffff]} such as this,\nwe have the {[0001|1a00]}{color[0400]}Constant Nodon{color[ffff]}{[0001|ffff]}.\nLet's call one up now.
038	First, we open {[0001|1a00]}{color[0400]}Input{color[ffff]}{[0001|ffff]}.
039	Now from {[0001|1a00]}{color[0400]}Constant{color[ffff]}{[0001|ffff]}, let's get\n{[0001|1a00]}{color[0400]}Constant Nodon{color[ffff]}{[0001|ffff]} called up.
040	There is but one immutable,\nunchanging truth in this world.
041	I, Nodon of unyielding spirit,\nyour {[0001|1a00]}{color[0400]}constant {color[ffff]}{[0001|ffff]}companion,\nshall be your rock to lean on.
043	Glad to hear it!\nOK, let's move it over\nto the blue frame.
044	Open the settings now.
045	Set the {[0001|1a00]}Output Value{[0001|ffff]} to {[0001|1a00]}{color[0400]}5.00{color[ffff]}{[0001|ffff]}.
046	And close the settings.
047	So 5.00, then? This number shall\ngo on in living memory. Oh, five...\nOh, five... Five-point-oh-oh...
048	Connect the {[0001|1a00]}{color[0400]}Constant Nodon{color[ffff]}{[0001|ffff]} to\nthe {[0001|1a00]}{color[0400]}Calculator Nodon{color[ffff]}{[0001|ffff]}'s {[0001|1a00]}{color[0400]}input 1 port{color[ffff]}{[0001|ffff]}.
049	{[0001|1a00]}{color[0400]}FIVE{color[ffff]}{[0001|ffff]}. A VERY GOOD NUMBER.
050	I WILL SUBTRACT THE {[0001|1a00]}{color[0400]}NUMBER OF APPLES\nCOLLECTED{color[ffff]}{[0001|ffff]} FROM {[0001|1a00]}{color[0400]}FIVE {color[ffff]}{[0001|ffff]}AND OUTPUT THE\nRESULT WITH MY SUPERIOR ALGORITHMS.
051	Now to connect the Nodon\nthat we want to be input to\nthe Number-Object Nodon.
052	Select the connection between\nthe Counter Nodon and the\nNumber-Object Nodon.
053	We won't be needing it\nanymore.
054	Instead, we link the {[0001|1a00]}{color[0400]}Calculator Nodon\n{color[ffff]}{[0001|ffff]}with the {[0001|1a00]}{color[0400]}Number-Object Nodon{color[ffff]}{[0001|ffff]}.
055	We sandwich the Calculator Nodon\n{[0001|1a00]}{color[0400]}in between{color[ffff]}{[0001|ffff]} the other Nodon, like so,\nto {[0001|1a00]}{color[0400]}process calculations{color[ffff]}{[0001|ffff]} for us.
057	With that done, we should be able to\nsee the {[0001|1a00]}{color[0400]}number of apples left{color[ffff]}{[0001|ffff]} now.
058	Game screen time!
059	We're at the beginning and it\nsays "{[0001|1a00]}{color[0400]}5{color[ffff]}{[0001|ffff]}," so that looks right.
060	Try to pick up all\nthe apples now.
061	It's counting down\nfrom 5 to 0!
062	Looks like we have a working\ncounter for the {[0001|1a00]}{color[0400]}remaining apples{color[ffff]}{[0001|ffff]}.
063	Now we can get to the part where\nyou {[0001|1a00]}{color[0400]}win if you get all the apples{color[ffff]}{[0001|ffff]}.
064	Quick! To the\nprogram screen!
065	OK. Now. What our "{[0001|1a00]}{color[0400]}if you get all the\napples{color[ffff]}{[0001|ffff]}" condition really means\nis "{[0001|1a00]}{color[0400]}if you get five apples{color[ffff]}{[0001|ffff]}."
068	To find out whether the player's got\nfive apples or not, we need a Nodon\nthat'll help us to {[0001|1a00]}{color[0400]}compare {color[ffff]}{[0001|ffff]}things.
070	Select {[0001|1a00]}{color[0400]}Middle{color[ffff]}{[0001|ffff]}.
071	{[0001|1a00]}{color[0400]}Comparison{color[ffff]}{[0001|ffff]}.
072	And now call up a {[0001|1a00]}{color[0400]}Comparison Nodon{color[ffff]}{[0001|ffff]}\nfrom {[0001|1a00]}{color[0400]}={color[ffff]}{[0001|ffff]}.
073	Why do people insist that some\nthings are "beyond compare"?\nI compare pretty much everything!
074	Right now, I've got my eye on\nwhether the number of apples\ncollected equals five.
074-01	Just input the value you want\nme to compare it with at my\n{[0001|1a00]}{color[0400]}input 2 port{color[ffff]}{[0001|ffff]}.
075	We can do that!
076	Move the Comparison Nodon\nover into the blue frame.
077	And now connect the Constant\nNodon to the Comparison Nodon's\n{[0001|1a00]}{color[0400]}input 1 port{color[ffff]}{[0001|ffff]}.
078	{[0001|1a00]}{color[0400]}Five{color[ffff]}{[0001|ffff]}, huh? Got it!
079	Connect the Counter Nodon to the\nComparison Nodon's {[0001|1a00]}{color[0400]}input 2 port{color[ffff]}{[0001|ffff]}.
080	{[0001|1a00]}{color[0400]}Number of apples collected{color[ffff]}{[0001|ffff]}?\nI am all about that!
081	OK, I'll compare the number {[0001|1a00]}{color[0400]}5{color[ffff]}{[0001|ffff]} with\nthe {[0001|1a00]}{color[0400]}number of apples collected{color[ffff]}{[0001|ffff]}, and\n{[0001|1a00]}{color[0400]}when they match{color[ffff]}{[0001|ffff]} I'll output a signal.
084	Cool! So now we'll know\n{[0001|1a00]}{color[0400]}when the player has collected\nfive apples{color[ffff]}{[0001|ffff]}.
096	With all this in place, we can celebrate\n{[0001|1a00]}{color[0400]}when five apples are collected{color[ffff]}{[0001|ffff]}. I'm \nthinking {[0001|1a00]}{color[0400]}party poppers{color[ffff]}{[0001|ffff]}!
097	Party poppers are an effect, so it\nlooks like it's finally time to call in\nthe life of the party: {[0001|1a00]}{color[0400]}Effect Nodon{color[ffff]}{[0001|ffff]}!
099	Select {[0001|1a00]}{color[0400]}Objects{color[ffff]}{[0001|ffff]}.
100	Then {[0001|1a00]}{color[0400]}Special Objects{color[ffff]}{[0001|ffff]}.
101	Then {[0001|1a00]}{color[0400]}Effects{color[ffff]}{[0001|ffff]}.
102	Now from {[0001|1a00]}{color[0400]}Party Popper{color[ffff]}{[0001|ffff]} we can\ncall up an {[0001|1a00]}{color[0400]}Effect Nodon{color[ffff]}{[0001|ffff]}.
103	Hello, stranger!\nGreat to see you!
104	I'm Effect Nodon, and I'm here\nto entertain your socks off!
105	You want me to set off some\nparty poppers when you finish\nthe game, right?
107	This party's gonna be...POPPIN'!
108	Heh, sorry. I tend to pop off\nwith terrible puns whenever\nI'm in a party mood.
109	Yeah. We asked for party poppers,\nnot party stoppers. Now, move it\ninto the corner there.
110	So...let's connect the {[0001|1a00]}{color[0400]}Comparison\nNodon {color[ffff]}{[0001|ffff]}to the {[0001|1a00]}{color[0400]}Effect Nodon{color[ffff]}{[0001|ffff]}. Quickly.
110-01	And now the {[0001|1a00]}{color[0400]}party popper effect{color[ffff]}{[0001|ffff]}\nshould go off {[0001|1a00]}{color[0400]}once you've picked up\nfive apples{color[ffff]}{[0001|ffff]}.
111	Do I even need to tell you\nwhere we're headed? Hint: It\nrhymes with "shmame shmrene."
112	Try getting all the apples!
113	Yes! The party poppers went off\nwhen you picked up the last apple!
115	Still... I feel there's something\nmissing. Party poppers alone\naren't quite cutting it...
116	This is a big moment! We've won the\ngame here! It wouldn't be right without\nsome kind of {[0001|1a00]}{color[0400]}sound effect{color[ffff]}{[0001|ffff]} too!
117	It's time we headed over\nto the program screen.
118	Let's make some noise. Let's\ncall up a {[0001|1a00]}{color[0400]}Play-Sound Nodon{color[ffff]}{[0001|ffff]}.
119	For that, you'll need\nto open {[0001|1a00]}{color[0400]}Output{color[ffff]}{[0001|ffff]}...
120	Then {[0001|1a00]}{color[0400]}Play Sound{color[ffff]}{[0001|ffff]}.
121	Then from {[0001|1a00]}{color[0400]}Play SFX{color[ffff]}{[0001|ffff]},\ncall up a {[0001|1a00]}{color[0400]}Play-Sound Nodon{color[ffff]}{[0001|ffff]}.
122	♪Bahp-bah-bah-baaaaaaah!♪
126	Don't think you're getting\nthis party started without\nme! No, sirree!
127	OK, let's put the Play-Sound\nNodon in the blue frame.
128	And now open the settings.
128-01	Here on the settings screen,\nwe can choose {[0001|1a00]}{color[0400]}what sound our\nPlay-Sound Nodon will play{color[ffff]}{[0001|ffff]}.
129	This time, I'd like you\nto select {[0001|1a00]}{color[0400]}Voice{color[ffff]}{[0001|ffff]}...
130	and then {[0001|1a00]}{color[0400]}Yeah!{color[ffff]}{[0001|ffff]}
130-01	That's the kind of sound we\nwant to liven the mood!
131	OK, you can close the\ndetailed settings now.
132	And now the settings.
133	Connect the {[0001|1a00]}{color[0400]}Comparison Nodon\n{color[ffff]}{[0001|ffff]}to the Play-Sound Nodon's\n{[0001|1a00]}{color[0400]}play port {color[ffff]}{[0001|ffff]}now please.
134	And let's head over to \nthe game screen.
135	Let's see you try to finish the\ngame now. Aaand action!
136	Yeah, awesome!\nWe've nailed it!
137	The sound effect really adds some\noomph, doesn't it? Gives you the\nsatisfying feeling of victory.
138	OK, I think we've got this\n{[0001|1a00]}{color[0400]}win condition{color[ffff]}{[0001|ffff]} in the bag.
139	It's home time.
140	That brings us to the\nend of this session.
141	Hope you enjoyed Step 5!
142	CONGRATULATIONS ARE\nIN ORDER, ASCENDING.
143	I remain impressed.
144	I could compare you\nto a summer's day!
145	You've got some\nreal talent.
147	We did a lot this time round, eh?\nWe got our game to {[0001|1a00]}{color[0400]}calculate the\nnumber of apples left to collect{color[ffff]}{[0001|ffff]}...
148	And we also {[0001|1a00]}{color[0400]}compared the number\nof collected apples {color[ffff]}{[0001|ffff]}to work out if the\ngame is won.
150	Next time, we'll be introducing\nsome things that'll {[0001|1a00]}{color[0400]}make the game\neasier to play{color[ffff]}{[0001|ffff]}.
151	Catch you later!
Lesson_BallRoll_05.msbt
107	Hiya, {[0201]}!
000	All raring to go for Step 6, are we?\nThat's what I like to see!
001	Last time, we made a way for the\ngame to recognize that the player\n{[0001|1a00]}{color[0400]}finished the game{color[ffff]}{[0001|ffff]}.
003	This time we'll be adding some things\nthat'll make the game easier to play.
005	First, take a look at\nthe game screen.
008	It's kind of difficult to tell\n{[0001|1a00]}{color[0400]}what exactly you're supposed\nto be doing{color[ffff]}{[0001|ffff]}, isn't it?
007	I feel like we'll have to\n{[0001|1a00]}{color[0400]}tell the player what they're\nsupposed to do{color[ffff]}{[0001|ffff]}.
009	There are a few ways to do that.
010	But let's keep things simple and\nspell it out with {[0001|1a00]}{color[0400]}text{color[ffff]}{[0001|ffff]}.
011	If we want {[0001|1a00]}{color[0400]}text{color[ffff]}{[0001|ffff]} to show up on\nthe game screen, we'll need to\ncall up a {[0001|1a00]}{color[0400]}Text-Object Nodon{color[ffff]}{[0001|ffff]}.
013	You just need to select {[0001|1a00]}{color[0400]}Objects{color[ffff]}{[0001|ffff]}.
014	Then {[0001|1a00]}{color[0400]}Special Objects{color[ffff]}{[0001|ffff]}.
015	And now call up a {[0001|1a00]}{color[0400]}Text-Object\nNodon {color[ffff]}{[0001|ffff]}from {[0001|1a00]}{color[0400]}Text Object{color[ffff]}{[0001|ffff]}.
017	Text! O text!\nWhat a joy—what a wonder that we\nmay express ourselves with text!
018	Through {[0001|1a00]}{color[0400]}text {color[ffff]}{[0001|ffff]}shall we weave our\nwords to the player and aid them\nin their gaming endeavor!
019	Okey-dokey. Time to write some\n{[0001|1a00]}{color[0400]}informative text{color[ffff]}{[0001|ffff]} to the player that\ntells them what they need to do.
016	Stretch the Text-Object Nodon\nout nice and long, and move it here.
020	Now open its settings.
022	Hit the edit icon next to\n{[0001|1a00]}Display Text{[0001|ffff]} and enter\n"{[0001|1a00]}{color[0400]}Get the apples!{color[ffff]}{[0001|ffff]}"
023	All done? Did you enter\n"{[0001|1a00]}{color[0400]}Get the apples!{color[ffff]}"{[0001|ffff]}?
024	Yep
025	Nope
026	Then you need to type that in!\nGo enter "{[0001|1a00]}{color[0400]}Get the apples!{color[ffff]}{[0001|ffff]}"
028	OK, we've just got a few\nmore settings to adjust.
029	Under {[0001|1a00]}Properties{[0001|ffff]},\nenable only {[0001|1a00]}{color[0400]}Visible{color[ffff]}{[0001|ffff]}.
030	We'll also change\nthe {[0001|1a00]}{color[0400]}color{color[ffff]}{[0001|ffff]}.
031	Let's go for {[0001|1a00]}{color[0400]}red{color[ffff]}{[0001|ffff]}. Did I\nmention that I like {[0001|1a00]}{color[0400]}red{color[ffff]}{[0001|ffff]}?
032	The {[0001|1a00]}{color[0400]}text color{color[ffff]}{[0001|ffff]} should\nchange too.
033	How about {[0001|1a00]}{color[0400]}white {color[ffff]}{[0001|ffff]}for that?
034	Let's not forget to edit the\n{[0001|1a00]}{color[0400]}Text Display Side {color[ffff]}{[0001|ffff]}settings.
035	We need the text to point upward,\nso this should be {[0001|1a00]}{color[0400]}Y+{color[ffff]}{[0001|ffff]}.
037	And now we'll set the\n{[0001|1a00]}{color[0400]}Y Position {color[ffff]}{[0001|ffff]}to {[0001|1a00]}{color[0400]}0.60m{color[ffff]}{[0001|ffff]}.
038	Right on.\nNow close the settings.
039	Now it's off to the game screen\nto see how that all looks.
040	Hurray! Our text is legible!
041	Now we know what we're\nsupposed to be doing in\nour game.
042	OK, what's next?
042-01	We can't really tell {[0001|1a00]}{color[0400]}what this number\nhere is supposed to mean{color[ffff]}{[0001|ffff]}, can we?\nLet's clear up any confusion.
043	To the program screen!
044	Select the {[0001|1a00]}{color[0400]}Text-Object Nodon{color[ffff]}{[0001|ffff]}.
045	Copy it.
046	Make it a bit smaller. Oh, and put it\nnext to the Number-Object Nodon.
047	Open the settings.
048	Select {[0001|1a00]}Edit{[0001|ffff]} under {[0001|1a00]}{color[0400]}Display Text{color[ffff]}{[0001|ffff]}, and\nenter "{[0001|1a00]}{color[0400]}Remaining:{color[ffff]}{[0001|ffff]}" in the text box.
049	All done? Have you entered\n"{[0001|1a00]}{color[0400]}Remaining:{color[ffff]}{[0001|ffff]}"?
050	I did!
051	No...
052	No worries.\nJust enter "{[0001|1a00]}{color[0400]}Remaining:{color[ffff]}{[0001|ffff]}"\nin the text field.
053	OK, go ahead and\nclose the settings.
054	We need a little peek at the\ngame screen now.
055	Great! Looks like the text\nwe set is displaying A-OK.
056	There shouldn't be any doubt about\nwhat that number means now.
057	Ah, but before we move on, could you\ntry collecting all the apples again first?
058	Beautiful!
059	Say... If you wanted another try at the\ngame, you'd probably be hoping for\na way to {[0001|1a00]}{color[0400]}redo it{color[ffff]}{[0001|ffff]}, wouldn't you?
060	I see you went ahead and finished\nthe game already. Perfect timing.
061	Players who want another try\nwould probably be expecting a way\nto {[0001|1a00]}{color[0400]}redo it{color[ffff]}{[0001|ffff]} at this point, huh?
062	Let's streamline the process and\n{[0001|1a00]}{color[0400]}make the game automatically\nrestart when the player wins{color[ffff]}{[0001|ffff]}.
063	Program screen, please!
065	It's time to call up\na {[0001|1a00]}{color[0400]}Retry Nodon{color[ffff]}{[0001|ffff]}.
066	Go into {[0001|1a00]}{color[0400]}Output {color[ffff]}{[0001|ffff]}here.
067	Select {[0001|1a00]}{color[0400]}Retry/End/Swap{color[ffff]}{[0001|ffff]}.
068	Then {[0001|1a00]}{color[0400]}Retry Game{color[ffff]}{[0001|ffff]}.
069	And slap it into\nthe blue frame.
070	Awww, I'm so embarrassed.
071	What's wrong?
072	You know {[0001|1a00]}{color[0400]}Timer Nodon{color[ffff]}{[0001|ffff]}?\nI sort of misheard the name and\nthought it was {[0001|1a00]}{color[0400]}Rhymer Nodon{color[ffff]}{[0001|ffff]}...
073	So I was all like, "You're no fool,\nstay in school!" And I got the\nweirdest look. I want a do-over...
075	It's never as bad as you think.\nWell, almost never...\nAnyway, let's call up {[0001|1a00]}{color[0400]}Timer Nodon{color[ffff]}{[0001|ffff]}.
076	Select {[0001|1a00]}{color[0400]}Middle{color[ffff]}{[0001|ffff]}.
077	And now {[0001|1a00]}{color[0400]}Timer{color[ffff]}{[0001|ffff]}.
077-01	Seriously?!\nWho mixes up "timer" and "rhymer"?!
077-02	I'm not mad because you\ngot my name wrong. I'm mad\nbecause it's such a stretch!
077-03	S-sorry...
077-04	Eh, I'm not even that bothered really.\nThere's no need to apologize. Just...\ntry to remember my name.
078	All's well that ends well, I suppose.\nLet's slide the Timer Nodon into\nthe blue frame, OK?
085	Now open the settings,\nif you please.
086	Set {[0001|1a00]}Output after How Many\nSeconds? {[0001|ffff]}to {[0001|1a00]}{color[0400]}2.00{color[ffff]}{[0001|ffff]}.
087	And close the settings.
088	Connect the {[0001|1a00]}{color[0400]}Comparison Nodon{color[ffff]}{[0001|ffff]}\nto the Timer Nodon's {[0001|1a00]}{color[0400]}input port{color[ffff]}{[0001|ffff]}.
089	We also want to connect the\n{[0001|1a00]}{color[0400]}Timer Nodon{color[ffff]}{[0001|ffff]} with the {[0001|1a00]}{color[0400]}Retry Nodon{color[ffff]}{[0001|ffff]}.
089-01	So now, two seconds after you\nfinish the game, it should restart.
092	I KNOW you want to check it\nout on the game screen.
093	Pick up all the apples\nand win the game.
094	And just like that, we're\nback at the start!
108	That's much easier now,\nisn't it?
095	All righty, we can head back\nto the program screen now.
096	How about that?
097	Step 6 is done!
098	Your words\nare poetry!
099	I've never seen\nsuch syllables!
100	I, uh...\nThanks.
101	You're making\ngreat progress!
102	We made a few quality-of-life\nimprovements this time, like {[0001|1a00]}{color[0400]}using text\nto explain{color[ffff]}{[0001|ffff]} how to play.
103	And we also added a {[0001|1a00]}{color[0400]}way to retry\nthe game{color[ffff]}{[0001|ffff]} after you've finished it.
104	Next time we're going to up the\nante and add some "{[0001|1a00]}{color[0400]}teleport traps{color[ffff]}{[0001|ffff]}"\nto keep you on your toes!
106	See you in the next step!
Lesson_BallRoll_06.msbt
000	Hiya! Ready to "roll" up your\nsleeves and work on Step 7?
001	In the last step, we added some\non-screen hints to tell the player\n{[0001|1a00]}{color[0400]}how to play the game{color[ffff]}{[0001|ffff]}.
003	Could you please try \nbeating the game for me?
004	Nice!\nI like the way you roll!
005	And our retry feature is\nworking as intended.
006	It's fun enough as it is now,\nfor sure, but I think we could\nstill do better.
008	You know what this game needs?\nMore {[0001|1a00]}{color[0400]}spice{color[ffff]}{[0001|ffff]}!
010	How about this time, we make some\nobstacles for our player to overcome?\nLike some {[0001|1a00]}{color[0400]}teleport {color[ffff]}{[0001|ffff]}traps, for instance.
011	That's sure to give people\nthe {[0001|1a00]}{color[0400]}thrill {color[ffff]}{[0001|ffff]}they deserve.
012	How do you make a {[0001|1a00]}{color[0400]}teleport{color[ffff]}{[0001|ffff]} trap?\nI'm very glad you asked.
013	We simply enlist the services of\na very talented teleport expert:\n{[0001|1a00]}{color[0400]}Teleport-Object-Entrance Nodon{color[ffff]}{[0001|ffff]}.
014	Select {[0001|1a00]}{color[0400]}Objects{color[ffff]}{[0001|ffff]}.
015	Then {[0001|1a00]}{color[0400]}Launch/Destroy/Attract{color[ffff]}{[0001|ffff]}.
016	Then {[0001|1a00]}{color[0400]}Teleport Object{color[ffff]}{[0001|ffff]}.
017	And now from {[0001|1a00]}{color[0400]}Teleport Object:\nEntrance{color[ffff]}{[0001|ffff]}, call up a {[0001|1a00]}{color[0400]}Teleport-Object-\nEntrance Nodon{color[ffff]}{[0001|ffff]}.
018	Mmm?\nIt was you who summoned\nme to this mortal realm?
019	My power can reach beyond the veil,\na feat no normal Nodon could achieve.
020	Thus, I can pass objects into the realm\nof subspace, should you desire it.
021	We might take you up on that offer!\nLet's send the ball into, uh...subspace...\nand see how that goes.
022	Make the Teleport-Object-Entrance\nNodon a bit smaller, and put it in\nthe blue frame.
023	Open the settings.
024	Let's start by making the\nentrance itself look {[0001|1a00]}{color[0400]}round{color[ffff]}{[0001|ffff]}.
025	You'll want to set the\n{[0001|1a00]}Object Shape {[0001|ffff]}to {[0001|1a00]}{color[0400]}Sphere{color[ffff]}{[0001|ffff]}.
026	Next, we want the {[0001|1a00]}{color[0400]}ball {color[ffff]}{[0001|ffff]}to be the\nobject that's being warped.
027	Select {[0001|1a00]}{color[0400]}Teleport What?{color[ffff]}{[0001|ffff]}
028	Here we enable {[0001|1a00]}{color[0400]}Sphere{color[ffff]}{[0001|ffff]}.
029	Perfect. Now close\nthe detailed settings.
030	And also the settings.
031	When one enters the realm of subspace,\none's corporeal presence is diminished.\nThey will be lost from the game screen.
032	Do you still wish to cross\ninto the void?
033	Yeah, buddy!\nSo pumped for this!
034	Well then, let's see it embark\non its incredible voyage!
035	To the game screen!
036	The sphere at the center that you\ncan see faintly outlined in white is\nthe {[0001|1a00]}{color[0400]}teleport entrance{color[ffff]}{[0001|ffff]}.
037	Now, try rolling the ball into\nthe {[0001|1a00]}{color[0400]}teleport entrance{color[ffff]}{[0001|ffff]}.
038	It disappeared!
039	Where'd the ball go? It vanished\ninto the teleport entrance!
040	Spooky!
042	Actually, ghosts have nothing to\ndo with this. We did it all with\nprogramming!
043	Well, now that our ball is\nnowhere to be seen, our only\noption is to retry.
044	The difficulty level as it is now\nmight be a little steep...
045	Maybe after the ball vanishes, it should\nreappear at the {[0001|1a00]}{color[0400]}start point{color[ffff]}{[0001|ffff]}?
046	More specifically, when the ball enters\nthe subspace realm, we need to make\nit {[0001|1a00]}{color[0400]}come out again at the start point{color[ffff]}{[0001|ffff]}.
047	We've already got a warp entrance.\nIt shouldn't come as a big surprise to\nhear that there's also a teleport exit.
048	Call up a {[0001|1a00]}{color[0400]}Teleport-Object-Exit Nodon{color[ffff]}{[0001|ffff]},\nand let's see what we can do.
049	Open up {[0001|1a00]}{color[0400]}Objects{color[ffff]}{[0001|ffff]}.
050	Select {[0001|1a00]}{color[0400]}Launch/Destroy/Attract{color[ffff]}{[0001|ffff]}.
051	And now {[0001|1a00]}{color[0400]}Teleport Object{color[ffff]}{[0001|ffff]}.
052	And now from {[0001|1a00]}{color[0400]}Teleport Object: Exit{color[ffff]}{[0001|ffff]},\ncall up a {[0001|1a00]}{color[0400]}Teleport-Object-Exit Nodon{color[ffff]}{[0001|ffff]}.
053	Was it you who summoned me\nfrom the astral plane?
054	Let your desire be known.
055	I can instantly manifest any object\nwhose material form lies in subspace.
056	You need only position me at the {[0001|1a00]}{color[0400]}place{color[ffff]}{[0001|ffff]}\n{[0001|1a00]}{color[0400]}you wish the objects to reappear{color[ffff]}{[0001|ffff]}.
057	Well then, let's place the Teleport-Object-\nExit Nodon at the {[0001|1a00]}{color[0400]}starting point{color[ffff]}{[0001|ffff]}.
058	And of course we want to\ncheck it on the game screen.
059	The white rectangular outline at\nthe start point is the teleport exit.
060	Try moving the ball into\nthe {[0001|1a00]}{color[0400]}teleport entrance {color[ffff]}{[0001|ffff]}now.
061	Oh, did you see that?\nThe ball came out at the\nstart point!
063	I guess that means we're done\nwith the {[0001|1a00]}{color[0400]}teleport feature{color[ffff]}{[0001|ffff]}.
064	Although...it's a bit difficult to tell\nwhat it is exactly that you touch\nto trigger the teleport.
065	Let's make it a bit easier\nto recognize visually.
066	We can use a {[0001|1a00]}{color[0400]}Fancy-Object Nodon{color[ffff]}{[0001|ffff]}\nto place a {[0001|1a00]}{color[0400]}hoop{color[ffff]}{[0001|ffff]} at the teleport point.
067	Go into {[0001|1a00]}{color[0400]}Objects{color[ffff]}{[0001|ffff]}.
068	Then {[0001|1a00]}{color[0400]}Fancy Objects{color[ffff]}{[0001|ffff]}.
069	{[0001|1a00]}{color[0400]}Other Fancy Objects{color[ffff]}{[0001|ffff]}.
070	And then we can call up a\n{[0001|1a00]}{color[0400]}hoop Fancy-Object Nodon{color[ffff]}{[0001|ffff]}.
071	We can put it where the Teleport-Object-\nEntrance Nodon is right now.
072	So the ball keeps warping back\nto the start, like music on loop.
073	On a loop like a hoop...\nWhat a marvelous metaphor! ♥
075	Open the Fancy-Object Nodon's\nsettings.
076	Under {[0001|1a00]}Properties{[0001|ffff]}, {[0001|1a00]}{color[0400]}enable Visible{color[ffff]}{[0001|ffff]}.
077	Now close the settings.
078	Now let's place another hoop right at\nthe start, where the Teleport-Object-Exit\nNodon is.
079	Copy that hoop\n{[0001|1a00]}{color[0400]}Fancy-Object Nodon{color[ffff]}{[0001|ffff]}.
080	Put it just next to\nthe teleport exit.
081	It'd be great if we could make it\nlook like it's attached to the wall,\ndon't you think?
082	Open the Fancy-Object Nodon's\nsettings.
083	Set the {[0001|1a00]}{color[0400]}Z Axis Rotation{color[ffff]}\n{[0001|ffff]}to {color[0400]}{[0001|1a00]}90.00°{[0001|ffff]}{color[ffff]}.
083-01	That should have rotated it\nto line up with the wall.
084	You can close the\nsettings now.
085	Time to see it on\nthe game screen.
086	Yep, our hoop is looking\npretty hoopy about that!
087	There's probably no need for us\nto see the white outline of the\n{[0001|1a00]}{color[0400]}teleport {color[ffff]}{[0001|ffff]}anymore, is there?
088	We can make that invisible\non the program screen!
089	So, our plan is to {[0001|1a00]}{color[0400]}hide the\nteleport point's appearance{color[ffff]}{[0001|ffff]}.
090	First, select a {[0001|1a00]}{color[0400]}Teleport-Object-\nEntrance Nodon{color[ffff]}{[0001|ffff]}.
091	Now go into the settings.
092	And here under {[0001|1a00]}Properties,\n{[0001|ffff]}we {[0001|1a00]}{color[0400]}disable Visible{color[ffff]}{[0001|ffff]}.
093	And close those settings.
094	I am here in mind, but not in body...\nA strange experience.
095	We ought to hide the\n{[0001|1a00]}{color[0400]}teleport exit {color[ffff]}{[0001|ffff]}as well.
096	Select the {[0001|1a00]}{color[0400]}Teleport-Object-\nExit Nodon{color[ffff]}{[0001|ffff]}.
097	There's a rumbling\nin the settings...
098	It tells me you should {color[0400]}{[0001|1a00]}disable\nVisible{[0001|ffff]}{color[ffff]}, under {[0001|1a00]}Properties{[0001|ffff]}!
099	Cool beans!\nNow close the settings.
100	Even without corporeal form,\nmy power persists...
101	Let's check that out on\nthe game screen.
102	The white teleport lines are nowhere\nto be seen. Good job!
103	Having just one teleport trap doesn't\nreally generate the level of excitement\nwe were hoping for, though, does it?
104	We want action! We want nail-biting\nsuspense! And for that reason, we're\ngoing to throw in some more!
105	The program screen awaits!
106	It's like I always say: you can\nnever have enough teleporters!
107	OK, start by selecting the\n{[0001|1a00]}{color[0400]}Teleport-Object-Entrance Nodon{color[ffff]}{[0001|ffff]}.
108	And copy it.
109	Now move it to the blue frame.
110	Fear not the warp.\nIt is merely an invitation to\na world yet undiscovered.
111	Now copy it again.
112	Put it up in the top-right-\nhand corner.
113	There is no need for alarm.
114	Though you may not see me,\nI am always right here by your side.
115	One final copy, if you please!
116	And the final teleport\nentrance goes...here.
117	Belief is the power that expands\none's world. Believe it or not.
118	We've got more teleport entrances\nnow, but they're all connected to\nthe {[0001|1a00]}{color[0400]}exit that's at the start{color[ffff]}{[0001|ffff]}.
119	Even if a myriad {[0001|1a00]}{color[0400]}Teleport-Object-\nEntrance Nodon{color[ffff]}{[0001|ffff]} should rain down\nfrom the skies...
120	my door will guide all lost souls to\nthis world for as long as I remain.
121	We're going to need a\nwhole bunch of hoops, huh?
122	Select this {[0001|1a00]}hoop{[0001|ffff]}\n{[0001|1a00]}{color[0400]}Fancy-Object Nodon {color[ffff]}{[0001|ffff]}here...
123	And copy it.
124	Line it up with the\nteleport entrance.
125	I'll be sure to block anything\ntrying to come through this\npassage here. Tee-hee! ♥
126	Keep up the copying!
127	And the positioning!
128	You'd better slow down when you\ncome this way, or somebody's\ngoing to get hooped! ♥
129	Copy one more time.
130	Get that right into position...
131	Hoop-hoopie-doop!\nYou're not gonna get\npaaast meeee! ♥
132	OK, time to check out our fancy\nfixtures on the game screen.
133	Look at all those teleport entrances!
134	I remember back when all we had to\ndo was roll the ball into the apples.
135	Now we've transformed our level\ninto a real gauntlet that'll have you\non the edge of your seat!
136	Take it on...if you dare!
137	Wow, that was really well done!\nYou made it through!
138	OK, let's get on over to\nthe program screen.
139	Just head over to the program\nscreen whenever you're ready.
140	How about that?
141	It's time to close the\ndoor on Step 7!
142	An achievement of\ngreat merit.
143	A most worthy effort.
144	Ascension is nigh.
145	Positively\nthrilling! ♥
146	Well done! This time we spiced\nup our level up with some\ntricky {[0001|1a00]}{color[0400]}teleport traps{color[ffff]}{[0001|ffff]}.
147	We're nearly done with the\nwhole lesson at this point!
148	Next time, we'll be adding the\n{[0001|1a00]}{color[0400]}finishing touches{color[ffff]}{[0001|ffff]} for that final\nbit of polish.
149	We can give it some {[0001|1a00]}{color[0400]}background\nmusic{color[ffff]}{[0001|ffff]}, and that'll be that!
150	All righty then. See you\nin the next step!
Lesson_BallRoll_07.msbt
000	Glad you could make it,\n{[0201]}!
001	Here we are at the\n{[0001|1a00]}{color[0400]}final step {color[ffff]}{[0001|ffff]}of On a Roll.
002	This time I'd also like you to add\nsome of your own personal flair.
003	OK then, to the program screen!
004	We still have a bit of legwork\nto do before we can change\nthe game's {[0001|1a00]}{color[0400]}look{color[ffff]}{[0001|ffff]}, though.
005	It's time to call up a certain Nodon\nthat can meld the world like putty:\n{[0001|1a00]}{color[0400]}World Nodon{color[ffff]}{[0001|ffff]}!
006	Simply select {[0001|1a00]}{color[0400]}Objects{color[ffff]}{[0001|ffff]}.
007	And then call up a\n{[0001|1a00]}{color[0400]}World Nodon {color[ffff]}{[0001|ffff]}from {[0001|1a00]}{color[0400]}World{color[ffff]}{[0001|ffff]}.
009	We like that look in your eyes.\nIt is a look of great resolve.
012	Let us go forth and create\nthe world you envision.
012-01	World Nodon here has the power to\nchange the {[0001|1a00]}{color[0400]}shape {color[ffff]}{[0001|ffff]}and {[0001|1a00]}{color[0400]}appearance{color[ffff]}{[0001|ffff]}\nof the game screen.
013	We can test it out now by\nchanging the floor texture.
014	Open the settings.
015	Then open {[0001|1a00]}{color[0400]}World Appearance{color[ffff]}{[0001|ffff]}.
016	And set it to {[0001|1a00]}{color[0400]}Metal{color[ffff]}{[0001|ffff]}.
017	All done?\nThen close the settings.
023	I'm pretty curious to see\nhow this one looks.
024	Hey, that's a lot different\nfrom how it used to be!
025	Changing the {[0001|1a00]}{color[0400]}World Appearance{color[ffff]}{[0001|ffff]} with\n{[0001|1a00]}{color[0400]}World Nodon{color[ffff]}{[0001|ffff]} lets you {[0001|1a00]}{color[0400]}completely alter\nthe mood of your game{color[ffff]}{[0001|ffff]}.
026	Okey-dokey! Next up, we need to\nput in some {[0001|1a00]}{color[0400]}background music{color[ffff]}{[0001|ffff]}.
033	For this, we can call up the aptly\nnamed {[0001|1a00]}{color[0400]}Background-Music Nodon{color[ffff]}{[0001|ffff]}.
034	Go to {[0001|1a00]}{color[0400]}Output{color[ffff]}{[0001|ffff]}.
035	And now call up a {[0001|1a00]}{color[0400]}Background-Music\nNodon {color[ffff]}{[0001|ffff]}from {[0001|1a00]}{color[0400]}Play BGM{color[ffff]}{[0001|ffff]}.
036	Yeah, baby! Are you ready to amp\nup this joint? It's been a while, but\nnow we're back in style!
037	Hey there, everynodon!\nAre you ready to make some noise?!
038	YEAAAH!
039	What's that?\nI can't hear yooou!
040	YEEEEEAAAAAH!
041	One more time—\nsay it with me!
042	YEEEEEEAAAAAAAAAH!
043	Now THAT'S more like it!\nYou've been a wonderful audience.\nPEACE!
050	To get music playing, we'll have\nto feed {[0001|1a00]}{color[0400]}Background-Music Nodon\n{color[ffff]}{[0001|ffff]}an {[0001|1a00]}{color[0400]}input signal{color[ffff]}{[0001|ffff]}.
051	So call up a {[0001|1a00]}{color[0400]}Constant Nodon{color[ffff]}{[0001|ffff]},\nand we can connect it up.
052	Open up {[0001|1a00]}{color[0400]}Input{color[ffff]}{[0001|ffff]}.
053	And call up a {[0001|1a00]}{color[0400]}Constant Nodon{color[ffff]}{[0001|ffff]}\nfrom {[0001|1a00]}{color[0400]}Constant{color[ffff]}{[0001|ffff]}.
054	Put it over by our musical friend.
055	I've got unceasing passion, and\nI never miss a beat! Constant Nodon\nis in the house!
056	Now there's a Nodon who's\ngot their groove on!
058	Connect the Constant Nodon\nto the Background-Music Nodon's\n{[0001|1a00]}{color[0400]}play port{color[ffff]}{[0001|ffff]}.
059	Funky! Now let's bop on over\nand check out our track.
060	That's a nice, upbeat tune\nwe've got going!
061	So there you go. Adding background\nmusic is as simple as that.
062	Of course, the Background-Music Nodon\nhas a much bigger repertoire than this.
063	In fact, I can show you that now.\nLet's {[0001|1a00]}{color[0400]}change the music{color[ffff]}{[0001|ffff]}.
064	Go ahead and select the\n{[0001|1a00]}{color[0400]}Background-Music Nodon{color[ffff]}{[0001|ffff]}.
065	Open up the settings.
066	Do you hear the music?
067	I think we should try\nchanging it to something\ncompletely different!
068	First, we'll select a {[0001|1a00]}{color[0400]}theme{color[ffff]}{[0001|ffff]}.
069	Hmm, let's see...\nHow about you pick {[0001|1a00]}{color[0400]}Steady{color[ffff]}{[0001|ffff]}?
070	See? The music changed!
071	You can also combine the {[0001|1a00]}{color[0400]}melody{color[ffff]}{[0001|ffff]},\n{[0001|1a00]}{color[0400]}main accompaniment{color[ffff]}{[0001|ffff]}, {[0001|1a00]}{color[0400]}sub accompaniment{color[ffff]}{[0001|ffff]},\nand {[0001|1a00]}{color[0400]}rhythm {color[ffff]}{[0001|ffff]}however you like.
072	Mix and match them to come up\nwith your own creations!
073	For instance, try setting the {[0001|1a00]}main\naccompaniment{[0001|ffff]} to {[0001|1a00]}{color[0400]}acoustic guitar{color[ffff]}{[0001|ffff]}.
075	And now you can hear {[0001|1a00]}{color[0400]}guitar\nstrings {color[ffff]}{[0001|ffff]}in the foreground!
076	Next, try setting the main part\nto {[0001|1a00]}{color[0400]}wah-wah guitar{color[ffff]}{[0001|ffff]}.
077	This guitar made our music start to\nsound a little more out of the ordinary.
081	And now try setting the\nmain part to {[0001|1a00]}{color[0400]}silent{color[ffff]}{[0001|ffff]}.
082	Now our wah-wah guitar\nis gone, and there's no main\naccompaniment playing at all.
084	Let's set the sub accompaniment\nto {[0001|1a00]}{color[0400]}silent{color[ffff]}{[0001|ffff]} as well.
085	Now we've got a background track\nwith only a {[0001|1a00]}{color[0400]}melody {color[ffff]}{[0001|ffff]}and {[0001|1a00]}{color[0400]}rhythm{color[ffff]}{[0001|ffff]}.
086	You can adjust the tone and number\nof instruments like this and {[0001|1a00]}{color[0400]}tailor your\ntrack {color[ffff]}{[0001|ffff]}exactly to your liking.
087	Let's close the\nsettings for now.
088	We should just quickly go see\nthat the music definitely changed\non the game screen.
089	There it is!\nThe music we've all been waiting for!
091	OK, we can go back to\nthe program screen now.
092	This next part is entirely up to you,\n{[0201]}!
094	You can change the {[0001|1a00]}{color[0400]}World\nAppearance {color[ffff]}{[0001|ffff]}to anything you like.
095	Get creative with the\n{[0001|1a00]}{color[0400]}background music{color[ffff]}{[0001|ffff]}.
096	Maybe add {[0001|1a00]}{color[0400]}text {color[ffff]}{[0001|ffff]}with the Text-Object\nNodon... Really make it your own!
097	As soon as you're finished with the\ntweaking, just hit the {[0001|1a00]}{color[0400]}Done {color[ffff]}{[0001|ffff]}button.
098	Are you ready?
099	Then start programming!
100	All done?\nIs it time to see the finished product?
101	Go on, then. Show me what\nOn a Roll looks like with you\nat the helm!
102	Wow! You're really serious\nabout this! It just screams\n"{[0201]}!"
103	Interesting. You kept everything just\nas it is. That's fine too, of course.
104	Well then, that about does it.
105	On a Roll is ready for\nits official debut!
106	How amazing is that?!
107	Come on, I'll see you over\nat the program screen.
108	Hooo, yeah! You ain't just\n"on a roll" here. You're on\na ROCK AND ROLL!
109	So proud of you!
110	YOUR CALCULATIONS AFFORD\nME INCREMENTAL JOY.
111	Your text has touched the\nhearts of many. And I pray\nyour game does too.
112	The odds are not tilted in\nyour favor in this game.\nI'm inclined to like that.
113	Sweet game, buddy!\nI'm so hyped, there's sweat\ndripping from my eyes!
114	I've said it before,\nand I'll say it again:\nyou've got style. ♥
115	To manipulate subspace\nwith such skill... You are\nno ordinary mortal.
125	We dealt with a number of tricky\naspects this lesson. {[0001|1a00]}{color[0400]}Tilting{color[ffff]}{[0001|ffff]}, making\n{[0001|1a00]}{color[0400]}calculations{color[ffff]}{[0001|ffff]}, {[0001|1a00]}{color[0400]}comparing {color[ffff]}{[0001|ffff]}values...
126	But you breezed through it all\nlike it was nothing, {[0201]}!\nYou really are a natural!
128	I hope you're looking forward to the\nnext lesson, because I certainly am.
129	OK, let's add On a Roll to\nyour My Games list!
130	Once again, well done!\nGive yourself a huge pat on the back,\nand I'll see you back at the menu!
Lesson_CarRace_00.msbt
000	Hey there,\n{[0201]}!
001	I hope you're ready to\nburn some rubber!
002	Because this time we're\ngoing to be making...
003	{[0001|1a00]}{color[0400]}Thrill Racer{color[ffff]}{[0001|ffff]}!
004	That's right, we're looking at\na high-octane racing game!
005	The pounding of your heart\nas the countdown begins...
006	The roar of the engines as the cars\ntear across the starting line...
007	The exhilaration of crossing the\nfinish line in pole position...
008	Now that's what\nI call a thrill!
009	OK then, let's get it in gear\nover on the program screen!
010	Three...two...one...
011	GO GO GO!
012	First...
013	Let's start by changing the\nperspective to {[0001|1a00]}{color[0400]}overhead view{color[ffff]}{[0001|ffff]}.
014	Good.
015	Now, since this is a racing game,\nwe'll probably need some {color[0400]}{[0001|1a00]}vehicles{[0001|ffff]}{color[ffff]}.
016	Clearly, this is a job\nfor a {[0001|1a00]}{color[0400]}Car Nodon{color[ffff]}{[0001|ffff]}!
017	Call one up from\n{[0001|1a00]}Objects{[0001|ffff]} {[0001|0400]} {[0001|ffff]}{[0001|1a00]}Characters{[0001|ffff]} {[0001|0400]}{[0001|ffff]} {[0001|1a00]}{color[0400]}Car{color[ffff]}{[0001|ffff]}.
018	Vrrrooom! {color[0400]}{[0001|1a00]}Car Nodon{[0001|ffff]}{color[ffff]} here,\nall revved up and ready to go!
019	You can program me to drive\nin any way you want!
020	I'm always livin' life in the fast lane!\nVrrrooom! Neeeeaaawww!
022	Seems like this Car Nodon is\nready for a test drive. Shall we?
023	First, move it over to the start\nposition, and make it small.
024	Purrrrrr...
025	Now we'll need a little\nsomething to get it moving.
026	A thing I like to call...acceleration!
027	Call up a {[0001|1a00]}{color[0400]}Button Nodon for {color[ffff]}{[0001|ffff]},\nand plop it in the blue frame.
028	Heyo!
029	Now connect the {[0001|1a00]}{color[0400]}Button Nodon{color[ffff]}{[0001|ffff]} to\nthe Car Nodon's {[0001|1a00]}{color[0400]}accelerate port{color[ffff]}{[0001|ffff]}.
030	Im-PRESS-ive!\nNow you can hit the gas with !
031	Vrrrooom!\nVrrr-room-room-room-rooooom!
032	Next, we need to be able to\nturn to the left and right.
033	For this, we'll need to\nimplement steering.
034	Call up a {[0001|1a00]}{color[0400]}Stick Nodon for  Left/Right{color[ffff]}{[0001|ffff]}\nand place it in the blue frame.
035	Left, right, left, right!\nI won't steer you wrong!
036	Connect the {[0001|1a00]}{color[0400]}Stick Nodon{color[ffff]}{[0001|ffff]}\nto the Car Nodon's\n{[0001|1a00]}{color[0400]}steering wheel port{color[ffff]}{[0001|ffff]}.
037	Wahoo! Let's roll!
038	Could you open the {[0001|1a00]}{color[0400]}Car Nodon{color[ffff]}{[0001|ffff]}'s{[0001|1a00]}{color[0400]}\n{color[ffff]}{[0001|ffff]}settings for me, please?
039	Set the {[0001|1a00]}Movement Speed{[0001|ffff]} to {[0001|1a00]}{color[0400]}0.50{color[ffff]}{[0001|ffff]}.
040	Set the {[0001|1a00]}Y Position{[0001|ffff]} to {[0001|1a00]}{color[0400]}0.40m{color[ffff]}{[0001|ffff]}.
041	That's it.\nNow close the settings.
042	Good! Our car is now\nfully operational!
043	Let's head on over to the game screen\nand put the pedal to the metal!
044	Give the car a spin with {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]}.
045	Now there's a road-worthy vehicle.
047	But, at this rate, it's going to\ndrive right off the screen...
049	But don't worry! There's a solution for this.\nWe'll make the screen move with the car!
050	Racing games are all about\ntrying to get ahead, right?
051	That means we want the {[0001|1a00]}{color[0400]}camera{color[ffff]}{[0001|ffff]}\nto be placed behind the car.
052	First, spin the {[0001|1a00]}{color[0400]}Car Nodon {color[ffff]}{[0001|ffff]}around to\n{[0001|1a00]}{color[0400]}face the opposite direction{color[ffff]}{[0001|ffff]}.
053	Call up a {[0001|1a00]}{color[0400]}Camera Nodon{color[ffff]}{[0001|ffff]},\nand place it behind the car.
054	Who are we filming\ntoday, boss?
055	In Mystery Room, we used\na fixed camera angle.
056	But here, we can have the camera\n{[0001|1a00]}{color[0400]}follow the car around{color[ffff]}{[0001|ffff]}.
057	Reading you loud and clear.
058	Just like we did with the \nGame-Screen Nodon\nin Risky Run...
059	the Camera Nodon can be\n{[0001|1a00]}{color[0400]}connected {color[ffff]}{[0001|ffff]}to other Nodon,\nand it'll {[0001|1a00]}{color[0400]}follow them around{color[ffff]}{[0001|ffff]}.
060	Link the {[0001|1a00]}{color[0400]}Camera Nodon\n{color[ffff]}{[0001|ffff]}to the {[0001|1a00]}{color[0400]}Car Nodon{color[ffff]}{[0001|ffff]} now.
061	Try to get my best angle, OK?
062	Trust me. I'm a professional.
063	Heh. If we're going to be snazzing\nthings up, we'll need to open the\n{[0001|1a00]}{color[0400]}Camera Nodon{color[ffff]}{[0001|ffff]}'s settings.
064	Set the {[0001|1a00]}Camera Field of View\n{[0001|ffff]}to {[0001|1a00]}{color[0400]}60.00{color[ffff]}{[0001|ffff]}, would you?
065	{[0001|1a00]}{color[0400]}Enable Track Character's Y Rotation{color[ffff]}{[0001|ffff]}.
066	Set the {[0001|1a00]}Offset Distance{[0001|ffff]} to {[0001|1a00]}{color[0400]}0.50m{color[ffff]}{[0001|ffff]}\nfor Y and {[0001|1a00]}{color[0400]}3.00m{color[ffff]}{[0001|ffff]} for Z.
067	Nice. Now close the settings.
069	And now we have a camera\nthat follows the car around!
070	Want to go take a peek?
071	Pretty cool, right?
072	See how the camera's nicely\npositioned behind the car?
073	Much better suited to the racing\ngenre, don't you think?
074	Try driving the car\nwith {[0001|1a00]}{color[0400]} {color[ffff]}{[0001|ffff]}and {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]}.
075	Car and camera, together at last.\nGood stuff!
076	OK, time to head back to\nthe program screen.
077	Whoa. I'm surprised you\ncan keep up with me!
078	Nothing I can't handle, bud.\nI shoulda been a racer...
079	You know...
080	We got the car to move {[0001|1a00]}{color[0400]}forward{color[ffff]}{[0001|ffff]},\nand we can steer {[0001|1a00]}{color[0400]}left{color[ffff]}{[0001|ffff]} and {[0001|1a00]}{color[0400]}right{color[ffff]}{[0001|ffff]}.
081	But we can't move {[0001|1a00]}{color[0400]}backward{color[ffff]}{[0001|ffff]}.
082	Sometimes you just have to go in\nreverse, even in a racing game.
083	Let's figure out how to back up.
084	Let me tell you a secret about\nCar Nodon's {[0001|1a00]}{color[0400]}accelerate port{color[ffff]}{[0001|ffff]}...
085	You can use a negative number\nto {[0001|1a00]}{color[0400]}brake and reverse{color[ffff]}{[0001|ffff]}!
087	We're going to make it possible\nto move in reverse with .
088	Let's start off by calling a {[0001|1a00]}{color[0400]}Button Nodon (){color[ffff]}{[0001|ffff]}\nand placing it in the blue frame.
089	Yo!
090	What should we do to make\n's output {[0001|1a00]}{color[0400]}negative{color[ffff]}{[0001|ffff]}?
091	The answer is simple:\n{[0001|1a00]}{color[0400]}subtraction{color[ffff]}{[0001|ffff]}!
092	We're going to arrange the value\nof the two Button Nodon so that\n{[0001|1a00]}{color[0400]} is subtracted from {color[ffff]}{[0001|ffff]}.
092-01	So pressing {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]} will give an\noutput of {[0001|1a00]}{color[0400]}1{color[ffff]}{[0001|ffff]}, and pressing {color[0400]}{[0001|1a00]}\n{[0001|ffff]}{color[ffff]}will give an output of {[0001|1a00]}{color[0400]}-1{color[ffff]}{[0001|ffff]}.
093	Call a {[0001|1a00]}{color[0400]}subtraction Calculator Nodon{color[ffff]}{[0001|ffff]},\nand put it in the blue frame.
094	SUBTRACTION ACKNOWLEDGED.\nPATIENTLY AWAITING YOUR\nCALCULATIONS.
095	Link the {[0001|1a00]}{color[0400]}Button Nodon () {color[ffff]}{[0001|ffff]}to the \nCalculator Nodon's {[0001|1a00]}{color[0400]}input 1 port{color[ffff]}{[0001|ffff]}.
096	Link the {[0001|1a00]}{color[0400]}Button Nodon () {color[ffff]}{[0001|ffff]}to the\nCalculator Nodon's {[0001|1a00]}{color[0400]}input 2 port{color[ffff]}{[0001|ffff]}.
097	{[0001|1a00]}{color[0400]}Delete the connection{color[ffff]}{[0001|ffff]} between\nthe Car Nodon and Button Nodon ({[0001|1a00]}){[0001|ffff]}.
098	Link the {[0001|1a00]}{color[0400]}Calculator Nodon{color[ffff]}{[0001|ffff]} to the\nCar Nodon's {[0001|1a00]}{color[0400]}accelerate port{color[ffff]}{[0001|ffff]}.
099	MIRROR, SIGNAL, MIRROR,\nMANEUVER. STEADY NOW.
100	ALL SYSTEMS RUNNING PERFECTLY.\n(IT COULD NOT BE OTHERWISE.)
101	That's it for programming in\nour reverse movement.
102	How about we give it a little test?
103	Try {[0001|1a00]}{color[0400]}backing up {color[ffff]}{[0001|ffff]}with {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]}.
104	Looks like we can move in reverse!
105	Which means the car can now\nbe steered in any direction.
106	By the by, what do you think of the\ncar's design? Pretty cool, right?
107	I can just imagine those big, chunky\ntires blazing through the sand...
108	That's bound to be amazing!
109	While we're on the subject, how about\nwe make the world look like a desert?
110	Let's hop back to the program screen.
111	Call up a {[0001|1a00]}{color[0400]}World Nodon{color[ffff]}{[0001|ffff]}, and\nplace it in the blue frame.
112	We expected you would\nhave need of us.
113	Go to the settings, and change the\n{[0001|1a00]}World Appearance{[0001|ffff]} to {[0001|1a00]}{color[0400]}Sand{color[ffff]}{[0001|ffff]}.
114	Great! Now if you could\nclose the settings...
115	OK, let's see if that worked.
116	Off-roading in the blazing\ndesert? Yes, please!
117	Head back to the program screen\nonce you're done puttering around.
118	I thiiink...
119	Yep. That just about\nwraps it up for Step 1.
120	Congrats! You really\npushed that envelope!
121	Pretty good.
122	A COMMENDABLE PERFORMANCE.
123	You have pleased us.
124	In the next step, we're going to be making\nthe {[0001|1a00]}{color[0400]}finish line{color[ffff]}{[0001|ffff]}...and {[0001|1a00]}{color[0400]}an opponent{color[ffff]}{[0001|ffff]}!
125	I'm sure you'll enjoy it!
126	See you there!
Lesson_CarRace_01.msbt
000	Hey there, {[0201]}!
001	So, you remember how we\nworked on programming the\n{[0001|1a00]}{color[0400]}car{color[ffff]}{[0001|ffff]} and {[0001|1a00]}{color[0400]}camera{color[ffff]}{[0001|ffff]} last time?
002	Let's give the car a test run\njust so we're up to speed.
003	The controls are\n Accelerate\t Reverse/Brake\n Steer
004	And we've got the camera\nfollowing the car from behind.
005	Now, on to our next topic...
006	Programming the {[0001|1a00]}{color[0400]}finish line\n{color[ffff]}{[0001|ffff]}and an {[0001|1a00]}{color[0400]}opponent{color[ffff]}{[0001|ffff]}.
007	OK, head on over to\nthe program screen.
008	We'll start with the {[0001|1a00]}{color[0400]}finish line{color[ffff]}{[0001|ffff]}.
009	This'll be a bit of a trek!
010	OK, now call up a {[0001|1a00]}{color[0400]}box Object Nodon{color[ffff]}{[0001|ffff]}.\nWe'll make that our finish line.
011	Ayup. I'm a box.
012	Open the settings, would you?
013	Now {[0001|1a00]}{color[0400]}enable Visible only{color[ffff]}{[0001|ffff]}, in {[0001|1a00]}Properties{[0001|ffff]}.
014	Set the {[0001|1a00]}Y{[0001|ffff]} {[0001|1a00]}Size{[0001|ffff]} to {[0001|1a00]}{color[0400]}0.10m{color[ffff]}{[0001|ffff]}.
015	Finally, set the {[0001|1a00]}Y Position\n{[0001|ffff]}to {[0001|1a00]}{color[0400]}0.00m{color[ffff]}{[0001|ffff]}.
016	OK! Now, close the settings.
017	Voilà, the finish line is finished!
018	Except...it's just a plain old\nline across the ground.
019	But we can liven things up a bit\nwith a party popper effect.
020	If we want to check whether the\ncar's crossed the finish line...
021	we'll need to call ourselves\nup a {[0001|1a00]}{color[0400]}Touch-Sensor Nodon\n{color[ffff]}{[0001|ffff]}and put it at the finish line.
022	Whoa! Who's this long guy?\nWhat am I getting myself into?!
023	To the settings, please!
024	{[0001|1a00]}{color[0400]}Disable{color[ffff]}{[0001|ffff]} {[0001|1a00]}{color[0400]}Visible{color[ffff]}{[0001|ffff]} in {[0001|1a00]}Properties{[0001|ffff]}.
025	Then under {[0001|1a00]}Check What?{[0001|ffff]}\nenable {[0001|1a00]}{color[0400]}Car{color[ffff]}{[0001|ffff]} only.
026	Good, now close the settings.
027	Whuh?! I don't see anything here...\nYou sure there's a car coming?
028	Positive!\nSo please keep an eye out!
029	Of course, if all we're doing is checking,\nnot much is going to happen...
030	We need to make {[0001|1a00]}{color[0400]}party poppers pop\n{color[ffff]}{[0001|ffff]}when the sensor is triggered.
031	Call up a {[0001|1a00]}{color[0400]}party popper\nEffect Nodon{color[ffff]}{[0001|ffff]}, and put\nit near the finish line.
032-00	The lengths I go to for some people.\nAnd what do I get in return?
032-01	Don't suppose you could invite\nme to the post-victory feast?
032-02	Oh, don't give me that look.\nI'm just pulling your leg!
033	Link the {[0001|1a00]}{color[0400]}Touch-Sensor Nodon\n{color[ffff]}{[0001|ffff]}to the {[0001|1a00]}{color[0400]}Effect Nodon{color[ffff]}{[0001|ffff]}.
034	BANG-BANG-BANG-BANG!
035	Eeek! Uh... I mean,\nready and waiting!
036	Excellent. Let's get popping.
037	Drive straight ahead until\nyou cross the finish line.
038	If you get lost, hit Retry,\nand hold  to restart and\nkeep moving in a straight line.
039	AND IT'S ALL OVER!
040	{[c903]}{[0201]} crosses the\nline with a spectacular\ndisplay of programming!
042	Ahem.
043	Sorry, I got a bit into the whole\nrace announcer thing there.
044	But really though,\nwhat good is a race...
045	if you don't have any\nopponents to race against?
046	On that note, let's get around\nto making a {[0001|1a00]}{color[0400]}rival car{color[ffff]}{[0001|ffff]} for some\ncompetition.
047	Back we go to the\nstarting position.
048	{[0001|1a00]}{color[0400]}Copy {color[ffff]}{[0001|ffff]}the {[0001|1a00]}{color[0400]}Car Nodon{color[ffff]}{[0001|ffff]}, and put\nthe new one over to the side.
049	Vrrrooom, vrrrooom!
050	VRRROOOOOM!
051	Probably best to change\nthe colors a bit so we\ncan easily tell them apart.
052	Start off by making\nthe player's car red.
053	Select the player's Car Nodon.
054	And open its settings.
055	Set the color to {[0001|1a00]}{color[0400]}red{color[ffff]}{[0001|ffff]}.
056	OK! Now close the settings.
057	Next we can make our\nopponent's car a nice\nlight blue.
058	Select the opponent's Car Nodon.
059	And open the settings.
060	Set the color to {[0001|1a00]}{color[0400]}light blue{color[ffff]}{[0001|ffff]}.
061	We should also set the {[0001|1a00]}Movement\nSpeed {[0001|ffff]}to {[0001|1a00]}{color[0400]}0.45{color[ffff]}{[0001|ffff]} while we're at it.
062	That's perfect!\nNow close the settings.
063	Let's see where we're at.
064	What do you think?
065	It's starting to feel like a real\nracing game with the two\nvehicles side by side, no?
067	There's just one problem.\nOur light-blue buddy won't\nbudge an inch!
069	Kind of expected if we haven't done\nany programming for them, huh?
070	Let's get this automobile\ngeared up and ready to go!
071	Now, the enemy car won't be\ncontrolled by a human player.
072	We'll have to program it\nto drive all by itself.
073	Let's keep things simple\nfor this step and just have it\ndrive in a straight line.
074	To do that, we'll probably\nneed to use a constant.
075	And that constant will connect to the\naccelerate port of the Car Nodon!
076	Just imagine a car with the accelerator\npedal pressed down the whole time.
077	Call up the{[0001|1a00]} {color[0400]}Constant Nodon{color[ffff]}{[0001|ffff]},\nand put it by the Car Nodon.\nHi, Connie!
078	{[0001|1a00]}{color[0400]}Link it to{color[ffff]}{[0001|ffff]} the {[0001|1a00]}{color[0400]}accelerate port{color[ffff]}{[0001|ffff]}\nof the Car Nodon on the left.
079	FLOOR IT!
080	DRIIIIVE! DRIVE LIKE\nTHE WIIIIND!
081	Like the...wind? Let's just sit\nback and watch this, shall we?
082	That was actually...beautiful.
083	Your rival car is\ndriving all by itself!
086	Look! We've got an\n(admittedly fairly simple)\nracing game on our hands!
087	Let's pop back to\nthe program screen.
088	There's one last thing we need\nbefore we finish this step.
089	We should allow players to retry the game\nafter someone reaches the finish line.
090	To the finish line we go!
091	Call up a {[0001|1a00]}{color[0400]}Timer Nodon{color[ffff]}{[0001|ffff]}, and\nplace it in the blue frame.
092	Whuh?
093	Sorry, you're going to have to\ngive me a second.
094	Take your time.
095	I was sleeping during the last lesson.\nNow you expect me to run right off\nthe bat?
096	If you want me to be your timekeeper,\na little consideration wouldn't hurt.
097	As I've told you time and time again,\nyou must schedule me in advance...
098	Err... Duly noted! OK then,\nconnect the {[0001|1a00]}{color[0400]}Timer Nodon {color[ffff]}{[0001|ffff]}to\nthe {[0001|1a00]}{color[0400]}Touch-Sensor Nodon{color[ffff]}{[0001|ffff]}.
099	Now call up a {[0001|1a00]}{color[0400]}Retry Nodon{color[ffff]}{[0001|ffff]}.
100-00	♪Hmm mm mmmmm...♪\n♪Bah buh buh dat dow...♪\n♪Chick-a-chick-ah...♪
100-01	♪Skippedee doo wa waa♪\nShowadda waddy... Wah!\nDid you just call me up?
100-02	You heard me singing, didn't you?\nOof, that's really embarrassing...\nIf only I could undo that...
100-03	No, no! It was a lovely\nlittle ditty, honestly.
100-04	Ugh... If only I could turn back time...
106	Moving swiftly on, go and put the\n{[0001|1a00]}{color[0400]}Retry Nodon{color[ffff]}{[0001|ffff]} in the blue frame.
106-01	Connect the {[0001|1a00]}{color[0400]}Retry Nodon\n{color[ffff]}{[0001|ffff]}to the {[0001|1a00]}{color[0400]}Timer Nodon{color[ffff]}{[0001|ffff]}.
107	Excellent.
108	Let's try it out.
109	When either car reaches the\ngoal, the game will restart.
110	And we're back to\nthe beginning!
110-01	You can never get enough\nof a good heated race, eh?
111	OK, back to the\nprogram screen.
112	And here we are, at the end\nof yet another step.
113	Step 2 is finito!
114	C-congratulations...
115	Job's good!
116	You've outdone yourself.
117	Not half bad!
117-01	In this session, we made the finish\nline and an opponent. Those are\nfundamentals for any racing game.
118	Next time we're going to come up\nwith a way to {[0001|1a00]}{color[0400]}evaluate who wins{color[ffff]}{[0001|ffff]}.
119	We'll really be getting into the\nnitty-gritty, so look forward to that.
120	See you in the next step!
Lesson_CarRace_02.msbt
000	Hey there,\n{[0201]}!
001	Remember how we made ourselves\na {[0001|1a00]}{color[0400]}finish line{color[ffff]}{[0001|ffff]} and an {[0001|1a00]}{color[0400]}opponent{color[ffff]}{[0001|ffff]} last time?
002	We may have gotten the game\nto recognize when a car\nreaches the goal...
003	But since the same effect triggers\nno matter who gets there first, we\nhave a slight problem.
004	We've got no idea who won!
005	So for this session, we're going to\nadd a way to {[0001|1a00]}{color[0400]}evaluate who wins{color[ffff]}{[0001|ffff]}.
006	It's time to separate the champions\nfrom the runners-up!
007	Now, we've got the touch\nsensor at the finish line\nalready checking for {[0001|1a00]}{color[0400]}cars{color[ffff]}{[0001|ffff]}.
008	And it'll react as soon as {[0001|1a00]}{color[0400]}either car\n{color[ffff]}{[0001|ffff]}touches it. Which is a problem.
009	Let's give it an upgrade so that\nit can tell the difference between\nthe player's and opponent's cars.
012	The next set of instructions could\nbe a {[0001|1a00]}{color[0400]}tad tricky{color[ffff]}{[0001|ffff]}, so you'll want to pay\ncareful attention!
013	Okey-dokey! Start by calling up\na {color[0400]}{[0001|1a00]}Fancy-Object Nodon{[0001|ffff]} {color[ffff]}for {color[0400]}{[0001|1a00]}Joy-Con (R){[0001|ffff]}\n{color[ffff]}under {[0001|1a00]}Rectangular Fancy Objects{[0001|ffff]}.
014	When the shape of one Joy-Con is enough\nto make you picture the other...
015	you know you've got a winner\nin the design department. ♥
016	This Fancy-Object Nodon will be\nwhat lets us {[0001|1a00]}{color[0400]}tell the cars apart{color[ffff]}{[0001|ffff]}.
017	Oh my!
018	Is it time to teach\n{[0201]}\nmy {[0001|1a00]}{color[0400]}party trick{color[ffff]}{[0001|ffff]}?
020	Shrink the Fancy-Object Nodon\ndown to the size of the car.
021	Now link the {[0001|1a00]}{color[0400]}Fancy-Object Nodon{color[ffff]}{[0001|ffff]}\nto the {[0001|1a00]}{color[0400]}player's Car Nodon{color[ffff]}{[0001|ffff]}.
022	Next we'll want to open the\n{[0001|1a00]}{color[0400]}Fancy-Object Nodon{color[ffff]}{[0001|ffff]}'s settings.
023	Under {[0001|1a00]}{color[0400]}Connection Point{color[ffff]}{[0001|ffff]}, set\nboth {[0001|1a00]}Own Connection Point{[0001|ffff]} and\n{[0001|1a00]}Target Connection Point{[0001|ffff]} to {[0001|1a00]}{color[0400]}Center{color[ffff]}{[0001|ffff]}.
024	Close the detailed\nsettings screen.
025	Next, in {[0001|1a00]}Properties{[0001|ffff]},\n{[0001|1a00]}{color[0400]}enable Movable only{color[ffff]}{[0001|ffff]}.
026	That made our Fancy\nObject {[0001|1a00]}{color[0400]}disappear{color[ffff]}{[0001|ffff]}!
026-00	OK, could you please close\nthe settings screen?
027	I'm {[0001|1a00]}{color[0400]}invisible{color[ffff]}{[0001|ffff]} now?\nWell, there's hardly anything\nfancy about that!
028	Though I admit I do feel\nkind of...enigmatic! ★
029	That there is our answer!
030	{[0001|1a00]}{color[0400]}Linking an invisible fancy object{color[ffff]}{[0001|ffff]}\nis the tricky technique I wanted\nto teach you.
031	But we've still got a long road\nahead of us.
032	Let's zoom over to the finish line.
033	Would you mind opening the\n{[0001|1a00]}{color[0400]}Touch-Sensor Nodon's{color[ffff]}{[0001|ffff]} settings?
034	{[0001|1a00]}{color[0400]}Enable{color[ffff]}{[0001|ffff]} {[0001|1a00]}{color[0400]}Joy-Con (R)\n{color[ffff]}{[0001|ffff]}under {[0001|1a00]}Check What?{[0001|ffff]}
035	OK! Now close those settings.
036	It might be invisible,\nbut I can tell...
037	I see only cars, but I feel the\npresence of the {[0001|1a00]}{color[0400]}Joy-Con (R){color[ffff]}{[0001|ffff]}...\nIt's right there... Meep.
039	This means that {[0001|1a00]}{color[0400]}instead of looking for cars{color[ffff]}{[0001|ffff]},\nthe Touch-Sensor Nodon is now {[0001|1a00]}{color[0400]}checking for\na Joy-Con (R){color[ffff]}{[0001|ffff]} fancy object!
040	We need to see how this\nturned out. Let's go look.
041	First we'll {[0001|1a00]}{color[0400]}leave the controls alone{color[ffff]}{[0001|ffff]} and just\nwait for our opponent to reach the end.
04201	Oopsie...\nYou finished first.
04202	Let's wait {[0001|1a00]}{color[0400]}without touching the\ncontrols{color[ffff]}{[0001|ffff]} until the opponent\nfinishes first.
043	Our opponent made it to the finish line...\nbut nothing happened!
045	OK, now try racing to\nthe finish yourself.
046	YEEESSS! What a finish!\nThe crowd is going wild!
047	And it looks like our effect triggered\nnicely as soon as we hit the finish line.
049	This is because we weren't checking\nfor cars but for the {[0001|1a00]}{color[0400]}Joy-Con (R)\n{color[ffff]}{[0001|ffff]}connected to the player's car.
051	We weren't looking for visible{[0001|1a00]}{color[0400]} cars{color[ffff]}{[0001|ffff]}\nbut for an {[0001|1a00]}{color[0400]}invisible Joy-Con (R)\n{color[ffff]}{[0001|ffff]}fancy object.
052	I like to call this...
053	The {[0001|1a00]}{color[0400]}Hidden Fancy{color[ffff]}{[0001|ffff]}!
054	That was the secret technique\nI wanted to teach you.
055	Next up...
056	We need to make a {[0001|1a00]}{color[0400]}Hidden Fancy{color[ffff]}{[0001|ffff]}\nfor our opponent's car.
057	Let's go back to the starting point.
058	Select the {[0001|1a00]}{color[0400]}Fancy-Object Nodon{color[ffff]}{[0001|ffff]}.
059	Now we'll want to {[0001|1a00]}{color[0400]}copy {color[ffff]}{[0001|ffff]}that.
060	Open up the settings.
061	Change {[0001|1a00]}Appearance{[0001|ffff]} to\n{[0001|1a00]}{color[0400]}Joy-Con (L){color[ffff]}{[0001|ffff]}.
062	Aaand close the settings.
063	Ahh, I can tell that Joy-Con (R) and I\nare going to get along SO well together. ★
064	Let's make this one smaller\nas well, then move it over.
065	Connect the {[0001|1a00]}{color[0400]}Fancy-Object Nodon{color[ffff]}{[0001|ffff]} to\nyour {[0001|1a00]}{color[0400]}opponent's Car Nodon{color[ffff]}{[0001|ffff]}.
066	Now we have a {[0001|1a00]}{color[0400]}Hidden Fancy{color[ffff]}{[0001|ffff]} connected\nto the opponent's car, and it's different than\nthe one connected to the player.
067	Let's head over to the finish line now.
068	Here, we'll be making the effect for when\nyour opponent crosses the finish line.
069	{[0001|1a00]}{color[0400]}Copy{color[ffff]}{[0001|ffff]} the {[0001|1a00]}{color[0400]}Touch-Sensor Nodon{color[ffff]}{[0001|ffff]}...
070	And move it slightly off to the side.
071	This little tip should make it\neasier to connect things.
072	Now open the settings.
073	Enable {[0001|1a00]}{color[0400]}only Joy-Con (L)\n{color[ffff]}{[0001|ffff]}under {[0001|1a00]}Check What?{[0001|ffff]}
074	Close the settings.
075	There's a Joy-Con (L) around here\nsomewhere, and I don't like it...
076	Call up an {[0001|1a00]}{color[0400]}Effect Nodon (Failure)\n{color[ffff]}{[0001|ffff]}and put it in the blue frame.
077	Good to see ya!
078	I hear you need an effect for\nwhen it all goes wrong.
079	Speaking of wrongs, I've got a little\njoke for you...if I can remember it...
080	Let's see... It was something about\ntwo wrongs...and a right turn...and...
081	Huh. Well, it just goes to show that\na Failure effect can come in real\nhandy sometimes.
084	Connect the {[0001|1a00]}{color[0400]}Touch-Sensor Nodon\n{color[ffff]}{[0001|ffff]}that's checking for the Joy-Con (L)\nto the {[0001|1a00]}{color[0400]}Effect Nodon{color[ffff]}{[0001|ffff]}.
085	Now the Failure effect will play\nwhen our opponent crosses the\nfinish line.
086	Time to see it in action, I'd say!
087	Let's sit tight and wait for our\nopponent to reach the finish line.
088	There goes the Failure effect!
089	Really captures that feeling of\ndisappointment, doesn't it?
090	Now that we've got a {[0001|1a00]}{color[0400]}Party Popper{color[ffff]}{[0001|ffff]} effect\nfor when the player wins and a {[0001|1a00]}{color[0400]}Failure{color[ffff]}{[0001|ffff]} effect\nfor when the opponent wins...
091	we can find out which of the\ncars made it to the finish line.
092	But as things are now...
093	If both cars arrive at the finish line at {[0001|1a00]}{color[0400]}almost\nthe same time{color[ffff]}{[0001|ffff]}, the {[0001|1a00]}{color[0400]}Party Popper{color[ffff]}{[0001|ffff]} and {[0001|1a00]}{color[0400]}Failure{color[ffff]}{[0001|ffff]}\neffects are going to go off at the {[0001|1a00]}{color[0400]}same time{color[ffff]}{[0001|ffff]}!
094	We won't be able to work\nout who actually won!
095	But never fear: I have\nthe perfect plan.
096	We can work on a way to\n{[0001|1a00]}{color[0400]}evaluate who the winner is{color[ffff]}{[0001|ffff]}.
097	{[0001|1a00]}{color[0400]}Evaluating the winner {color[ffff]}{[0001|ffff]}might be a\nteensy bit on the challenging side.
098	So I'm going to do my best\nto {[0001|1a00]}{color[0400]}lay it out for you{color[ffff]}{[0001|ffff]} in the\nclearest way possible.
099	We'll tackle this part in two stages:\nwhat happens when we {[0001|1a00]}{color[0400]}win{color[ffff]}{[0001|ffff]}, and\nwhat happens when we {[0001|1a00]}{color[0400]}lose{color[ffff]}{[0001|ffff]}.
100	Since this could get confusing,\nit'll be easier if we add comments to\nhelp us remember which is which.
101	That's where the\n{[0001|1a00]}{color[0400]}Comment Nodon {color[ffff]}{[0001|ffff]}comes in.
102	Call them up from {[0001|1a00]}Middle{[0001|ffff]} {[0001|0400]}\n{[0001|ffff]}{[0001|1a00]}Program Layout {[0001|ffff]}{[0001|0400]}{[0001|ffff]} {[0001|1a00]}{color[0400]}Comment{color[ffff]}{[0001|ffff]}.
103	{[0001|1a00]}{color[0400]}Comment Nodon{color[ffff]}{[0001|ffff]},\nat your humble service.
104	I have the most terrible memory,\nmyself. Always jotting things down\nto jog the old brain cells.
105	That being said, dear {[0201]},\nif you have anything you need to\ncommit to text...
106	just give the word, and I will be only\ntoo happy to transcribe for you.
107	Let's enter a comment now.
108	First, move the {[0001|1a00]}{color[0400]}Comment Nodon\n{color[ffff]}{[0001|ffff]}into the blue frame and enlarge it.
109	Now open the settings.
110	Select {[0001|1a00]}Edit{[0001|ffff]} to begin.\nYou'll want to enter\nsomething like "Win."
111	Finished entering your comment?\nIt should say something like "Win."
112	All done!
113	Not yet...
114	You'll want to enter\nsomething like "Win."
115	We can close the settings now.
116	Unlike the very capable\nText-Object Nodon...
117	I'm afraid I don't display anything on\nthe game screen. In fact, unlike the others,\nI don't really do much of anything at all.
118	However, if I can help you to understand\nthings more clearly, {[0201]},\nthen I have more than served my purpose.
119	Aww, what a kind soul!\nOK, what's next...
120	{[0001|1a00]}{color[0400]}Copy{color[ffff]}{[0001|ffff]} the Comment Nodon, and\nplace it in the blue frame.
121	Let's open the settings now.
122	We should enter something\nalong the lines of "Lose."
123	Is your comment in?\nIdeally, it should say "Lose."
124	All done!
125	Not yet...
126	We should enter something\nalong the lines of "Lose."
127	Good stuff. Can you close\nthe settings now?
128	So we'll be using this area to\nprogram the {[0001|1a00]}{color[0400]}winning{color[ffff]}{[0001|ffff]} behavior...
129	and this one for the\n{[0001|1a00]}{color[0400]}losing {color[ffff]}{[0001|ffff]}behavior.
130	Yes, I see now.\nYour comments are truly inspiring.
131	If I may be so bold,\nI would like to express\nmy opinion in verse.
132	Did you win, or did you lose?\nOne must never the two confuse\nA comment always pays its dues.
133	It's true: {[0001|1a00]}{color[0400]}leaving clear and\nconcise comments {color[ffff]}{[0001|ffff]}is really\nwhat programming's all about.
134	OK, looks like we're all set.
135	Now for the meat of\nthe evaluation.
136	When we talk about\nwinning and losing...
137	what we really mean is\nwho makes it to the finish first:\nthe {[0001|1a00]}{color[0400]}player{color[ffff]}{[0001|ffff]} or the {[0001|1a00]}{color[0400]}opponent{color[ffff]}{[0001|ffff]}.
138	Let's add a couple of {[0001|1a00]}{color[0400]}Flag Nodon{color[ffff]}{[0001|ffff]}.\nWe'll use one that switches on\nwhen the {[0001|1a00]}{color[0400]}player gets to the end{color[ffff]}{[0001|ffff]}...
139	and another that switches on when\nthe {[0001|1a00]}{color[0400]}opponent gets to the end{color[ffff]}{[0001|ffff]}.
140	Call up a {[0001|1a00]}{color[0400]}Flag Nodon{color[ffff]}{[0001|ffff]}, and\nput it in the blue frame.
141	Zzzzzzz...\nWake me up when the\n{[0001|1a00]}{color[0400]}player finishes first{color[ffff]}{[0001|ffff]}...
142	Now call one more {[0001|1a00]}{color[0400]}Flag Nodon{color[ffff]}{[0001|ffff]},\nand drop it in this blue frame.
143	Zzzzzzz...\nMgh? {[0001|1a00]}{color[0400]}Opponent finished first{color[ffff]}{[0001|ffff]}?\nNo? I'm ready for another nap then...
144	OK. That's two\nFlag Nodon done.
145	Now, let's get to work on the {[0001|1a00]}{color[0400]}top\nFlag Nodon's trigger{color[ffff]}{[0001|ffff]}. It needs to turn on\nwhen the {[0001|1a00]}{color[0400]}player finishes first{color[ffff]}{[0001|ffff]}.
146	This sounds obvious, but what does\nthe "{[0001|1a00]}{color[0400]}player finishing first{color[ffff]}{[0001|ffff]}" really mean?
147	It means that {[0001|1a00]}{color[0400]}the player reached\nthe finish line {color[ffff]}{[0001|ffff]}and {[0001|1a00]}{color[0400]}the opponent didn't{color[ffff]}{[0001|ffff]}.
148	So we need to check for those two\nthings at the same time.
149	Good thing we've got just\nthe Nodon for the job.
150	It's the AND Nodon!
151	Call up an {[0001|1a00]}{color[0400]}AND Nodon{color[ffff]}{[0001|ffff]}, and\nput it down by the Flag Nodon.
152	We'll want to connect the {[0001|1a00]}{color[0400]}AND\nNodon {color[ffff]}{[0001|ffff]}to the {color[0400]}{[0001|1a00]}on port{[0001|ffff]}{color[ffff]} of the\nFlag Nodon just next to it.
153	Zzzzzzz...\nJust gonna snooze till the\n{[0001|1a00]}{color[0400]}player arrives first{color[ffff]}{[0001|ffff]}...
154	Reporting for duty!
155	Tell you what, young {[0201]}.\nYou sort out some inputs for me, and we\ncan see about getting this show on the road.
156	Let's get on that, then.\nThere are two things we want\nto input AND Nodon with.
157	One is {[0001|1a00]}{color[0400]}that the player has finished{color[ffff]}{[0001|ffff]}, and\nthe other is {[0001|1a00]}{color[0400]}that the opponent has not{color[ffff]}{[0001|ffff]}.
158	See how the {[0001|1a00]}{color[0400]}Touch-Sensor Nodon\n{color[ffff]}{[0001|ffff]}is checking {[0001|1a00]}{color[0400]}whether the player has\nreached the finish line{color[ffff]}{[0001|ffff]}?
159	Connect the {[0001|1a00]}{color[0400]}Touch-Sensor Nodon{color[ffff]}{[0001|ffff]} to\nthe {[0001|1a00]}{color[0400]}input 2 port{color[ffff]}{[0001|ffff]} of the AND Nodon.
160	{[0001|1a00]}{color[0400]}Player reaching the finish{color[ffff]}{[0001|ffff]}?\nI can check for that. Aaaand?
161	Now let's input the part about the\n{[0001|1a00]}{color[0400]}opponent not being at the finish{color[ffff]}{[0001|ffff]}.
162	Actually, didn't we call up another\nNodon to switch on when the\nopponent {[0001|1a00]}{color[0400]}got to the finish first{color[ffff]}{[0001|ffff]}?
163	Yawwwwn... Wha—\nSomeone talking about me?
164	How'd you know?\nWere your ears burning?
165	We don't want to get the connectors all\ntangled up, so we can start linking those\nwith Wormhole Entrance and Exit Nodon.
166	Call up a {[0001|1a00]}{color[0400]}Wormhole-Entrance Nodon{color[ffff]}{[0001|ffff]},\nand put it next to the Flag Nodon.
167	Now let's link the {[0001|1a00]}{color[0400]}Wormhole-Entrance\nNodon {color[ffff]}{[0001|ffff]}with the adjacent {[0001|1a00]}{color[0400]}Flag Nodon{color[ffff]}{[0001|ffff]}.
168	This is Entrance A, over!\nReady to report in {[0001|1a00]}{color[0400]}when the opponent\nreaches the finish first{color[ffff]}{[0001|ffff]}!
169	Call up a {[0001|1a00]}{color[0400]}Wormhole-Exit Nodon{color[ffff]}{[0001|ffff]},\nand put it in the blue frame.
170	This is Exit A, copy that!\nReady to output {[0001|1a00]}{color[0400]}when the opponent\nreaches the finish first{color[ffff]}{[0001|ffff]}!
171	Next we can call up a {[0001|1a00]}{color[0400]}NOT Nodon{color[ffff]}{[0001|ffff]}\nand place it in the blue frame.
172	Mind connecting the {[0001|1a00]}{color[0400]}Wormhole-Exit Nodon{color[ffff]}{[0001|ffff]}\nand {[0001|1a00]}{color[0400]}NOT Nodon{color[ffff]}{[0001|ffff]} for me?
173	The NOT Nodon will output the opposite\nof whatever you put in, so it's going to output\nwhen the opponent {[0001|1a00]}{color[0400]}is NOT at the finish{color[ffff]}{[0001|ffff]}.
174	Heh heh heh...
175	Connect the {[0001|1a00]}{color[0400]}NOT Nodon{color[ffff]}{[0001|ffff]} to the\n{[0001|1a00]}{color[0400]}input 1 port{color[ffff]}{[0001|ffff]} of the AND Nodon.
176	"Opponent {[0001|1a00]}{color[0400]}not reached the finish{color[ffff]}{[0001|ffff]}," eh?\nWell, no worries!
177	The "player reached the finish"\nand the "opponent has not"...
178	When these two conditions are satisfied,\nour Flag Nodon friend will wake up!
179	Yeah, totally got your back...zzzzzzz...
180	And that's our win condition:\nthe {[0001|1a00]}{color[0400]}player has arrived at the finish line{color[ffff]}{[0001|ffff]}\nwhile our {[0001|1a00]}{color[0400]}opponent has not{color[ffff]}{[0001|ffff]}.
181	We'll have to adjust the {[0001|1a00]}{color[0400]}party popper{color[ffff]}{[0001|ffff]}\nEffect Nodon a bit.
182	Delete the {[0001|1a00]}{color[0400]}party popper{color[ffff]}{[0001|ffff]}\nEffect Nodon's connection.
183	Let's move the {[0001|1a00]}{color[0400]}party popper\n{color[ffff]}{[0001|ffff]}Effect Nodon over a bit.
184	Now we link the {[0001|1a00]}{color[0400]}Flag Nodon{color[ffff]}{[0001|ffff]} to\nthe {[0001|1a00]}{color[0400]}party popper{color[ffff]}{[0001|ffff]} Effect Nodon.
185	Still with me?
186	Next, we'll work on getting the Flag Nodon to\nturn on {[0001|1a00]}{color[0400]}when the opponent finishes first{color[ffff]}{[0001|ffff]}.
187	Oh, I forgot to mention...
188	This could take a while, so I hope\nit doesn't wear you out too much.
189	If you're feeling tired, you could\nmaybe take a short break.
190	This next part is going to be\nan {[0001|1a00]}{color[0400]}exact mirror{color[ffff]}{[0001|ffff]} of the last one.
191	So it won't be too difficult.
192	Right... So, what do we mean by\n"{[0001|1a00]}{color[0400]}the opponent finishing first{color[ffff]}{[0001|ffff]}"?
193	We mean that the {[0001|1a00]}{color[0400]}opponent reached the\nfinish line {color[ffff]}{[0001|ffff]}at any time {[0001|1a00]}{color[0400]}before the player{color[ffff]}{[0001|ffff]}.
194	So we have to check for those two things\nat the same time. And yep, you guessed it:\nwe need another AND Nodon!
195	Call up an {[0001|1a00]}{color[0400]}AND Nodon{color[ffff]}{[0001|ffff]}, and\nplace it next to the Flag Nodon.
196	Connect the {[0001|1a00]}{color[0400]}AND Nodon{color[ffff]}{[0001|ffff]} to the\n{[0001|1a00]}{color[0400]}on port {color[ffff]}{[0001|ffff]}of the Flag Nodon beside it.
197	Zzzzzzz...\nLet me know if the {[0001|1a00]}{color[0400]}opponent\ngets here first{color[ffff]}{[0001|ffff]}...
199	See how the Touch-Sensor Nodon is\nchecking {[0001|1a00]}{color[0400]}whether the opponent has\nreached the finish{color[ffff]}{[0001|ffff]}?
200	Connect the {[0001|1a00]}{color[0400]}Touch-Sensor Nodon{color[ffff]}{[0001|ffff]} to\nthe {[0001|1a00]}{color[0400]}input 1 port{color[ffff]}{[0001|ffff]} of the AND Nodon.
201	{[0001|1a00]}{color[0400]}Opponent reaching the finish{color[ffff]}{[0001|ffff]}?\nI can check for that! Aaaaand?
202	Now let's input the part about the\n{[0001|1a00]}{color[0400]}player not being at the finish{color[ffff]}{[0001|ffff]}.
203	We're going to teleport the Flag Nodon's\noutput about the player {[0001|1a00]}{color[0400]}finishing first{color[ffff]}{[0001|ffff]}.
204	Call up a {[0001|1a00]}{color[0400]}Wormhole-Entrance Nodon\n{color[ffff]}{[0001|ffff]}and put it next to the Flag Nodon.
205	Open the settings, and set\nthe {[0001|1a00]}{color[0400]}Wormhole ID{color[ffff]}{[0001|ffff]} to {[0001|1a00]}{color[0400]}B{color[ffff]}{[0001|ffff]}.
206	Good stuff!\nNow close the settings.
207	Now connect the {[0001|1a00]}{color[0400]}Wormhole-Entrance\nNodon{color[ffff]}{[0001|ffff]} to the {[0001|1a00]}{color[0400]}Flag Nodon{color[ffff]}{[0001|ffff]}.
208	This is Entrance B, over!\nReady to report {[0001|1a00]}{color[0400]}when the player\nfinishes first{color[ffff]}{[0001|ffff]}!
209	Call up a {[0001|1a00]}{color[0400]}Wormhole-Exit Nodon{color[ffff]}{[0001|ffff]} and\nposition it in the blue frame.
210	Open the settings and set\nthe {[0001|1a00]}{color[0400]}Wormhole ID{color[ffff]}{[0001|ffff]} to {[0001|1a00]}{color[0400]}B{color[ffff]}{[0001|ffff]}.
211	There we go.\nNow close the settings.
212	This is Exit B! Roger, wilco.\nReady to output {[0001|1a00]}{color[0400]}when the player\nfinishes first{color[ffff]}{[0001|ffff]}!
213	Now call up a {[0001|1a00]}{color[0400]}NOT Nodon{color[ffff]}{[0001|ffff]}, and\nplace it in the blue frame.
214	Connect the {[0001|1a00]}{color[0400]}Wormhole-Exit Nodon{color[ffff]}{[0001|ffff]}\nwith the {[0001|1a00]}{color[0400]}NOT Nodon{color[ffff]}{[0001|ffff]}.
215	The NOT Nodon reverses the\ninput, so it'll send its output when\nthe player {[0001|1a00]}{color[0400]}has NOT finished{color[ffff]}{[0001|ffff]}.
216	Ho ho ho...
217	Connect the {[0001|1a00]}{color[0400]}NOT Nodon{color[ffff]}{[0001|ffff]} to the\n{[0001|1a00]}{color[0400]}input 2 port{color[ffff]}{[0001|ffff]} of the AND Nodon.
218	Player {[0001|1a00]}{color[0400]}not reached the finish{color[ffff]}{[0001|ffff]}, eh?\nGot it. Standing at ease!
219	The "opponent reached the finish"\nand the "player has not"...
220	When these two conditions are satisfied,\nthe Flag Nodon will wake up.
221	No need to rush... Zzzzz...
222	And there we have it.
223	Our lose condition is established:\n{[0001|1a00]}{color[0400]}when our opponent arrives at the\nfinish line first{color[ffff]}{[0001|ffff]}.
224	We'll adjust the Failure\nEffect Nodon a tad now.
225	Erase the {[0001|1a00]}{color[0400]}Failure{color[ffff]}{[0001|ffff]} Effect\nNodon's connection.
226	Move the {[0001|1a00]}{color[0400]}Failure {color[ffff]}{[0001|ffff]}Effect\nNodon over a bit.
227	Link the {[0001|1a00]}{color[0400]}Flag Nodon{color[ffff]}{[0001|ffff]} to the\n{[0001|1a00]}{color[0400]}Failure{color[ffff]}{[0001|ffff]} Effect Nodon.
228	And last but not least...
229	we need to create a retry feature for\nwhen one of the cars wins the race.
230	Select the {[0001|1a00]}{color[0400]}Retry Nodon{color[ffff]}{[0001|ffff]}, and\ndrag it to the blue frame.
231	Select the {[0001|1a00]}{color[0400]}Timer Nodon{color[ffff]}{[0001|ffff]}, and\nmove it to the blue frame.
232	{color[0400]}Erase the connection{color[ffff]} for the\nTimer Nodon input.
233	Connect the top {[0001|1a00]}{color[0400]}Flag Nodon{color[ffff]}{[0001|ffff]} to\nthe {[0001|1a00]}{color[0400]}Timer Nodon{color[ffff]}{[0001|ffff]}'s input port.
234	Now connect the bottom {[0001|1a00]}{color[0400]}Flag Nodon{color[ffff]}{[0001|ffff]}\nto the {[0001|1a00]}{color[0400]}Timer Nodon{color[ffff]}{[0001|ffff]}'s input port.
235	And stick a fork in it, because\nthe evaluation for winning...
236	is finally...
237	DONE!
238	I think it's time we saw it\nin action, don't you?
239	First, let your opponent get\nto the finish line before you.
240	Looks like the failure effect\nis working as intended!
241	Now get to the finish line\nbefore your opponent.
242	Good job!\nThere goes the party popper effect!
243	I'll let you drive around for a bit so\nyou can make sure that only {[0001|1a00]}{color[0400]}either{color[ffff]}{[0001|ffff]} the\n{[0001|1a00]}{color[0400]}party popper{color[ffff]}{[0001|ffff]} or {[0001|1a00]}{color[0400]}failure{color[ffff]}{[0001|ffff]} effect plays.
244	Once you're done checking, head on\nback to the program screen.
245	Cue the fanfare!
246	Step 3 has at last\ncome to a close!
247	C-congrats...
248	A superlative effort!\nAnd I do not say that lightly.
249	You did a fine job, over!
250	Zzzzz...\nGood...work...
251	Listen, I know this step may have\ndragged on a bit, but look!
252	We've nailed the {[0001|1a00]}{color[0400]}core element{color[ffff]}{[0001|ffff]} of\nthe race, the part that determines\nwho wins and who loses.
253	There's no way we would have seen\nthe past five games to completion\nif it weren't for your dedication.
254	Huge kudos to you,\n{[0201]}!
255	In the next step,
256	we're going to be working on\nthe {[0001|1a00]}{color[0400]}racecourse{color[ffff]}{[0001|ffff]}!
257	Seeing how hefty this step has been...
258	the next one should be\na breeze in comparison.
259	All right, then. See you\nin the next step!
Lesson_CarRace_03.msbt
000	Hi, {[0201]}!
001	Last time, we made a way to\nevaluate who wins the race.
002	That was a challenge, wasn't it?
003	But it was worth it, because\nit's made our racing game that\nmuch more race-like.
004	Now, for this step...
005	we're going to design one of\nthe most crucial elements of a\nracing game: the {[0001|1a00]}{color[0400]}racecourse{color[ffff]}{[0001|ffff]}!
006	It's not much fun if all you're doing is\ndriving in a straight line, after all.
007	OK, let's head on over to\nthe program screen and make\nourselves a course.
008	Call up a {[0001|1a00]}{color[0400]}box Object Nodon{color[ffff]}{[0001|ffff]},\nand put it over on the left.
009	Now open the settings of the\nObject Nodon we just placed.
010	We want the {[0001|1a00]}X{[0001|ffff]} Size to be {[0001|1a00]}{color[0400]}0.40m{color[ffff]}{[0001|ffff]},\nthe {[0001|1a00]}Y{[0001|ffff]} Size to be {[0001|1a00]}{color[0400]}0.40m{color[ffff]}{[0001|ffff]},\nand the {[0001|1a00]}Z{[0001|ffff]} Size to be {[0001|1a00]}{color[0400]}10.00m{color[ffff]}{[0001|ffff]}.
011	Oh, and could you change the\n{[0001|1a00]}Y Position {[0001|ffff]}to {[0001|1a00]}{color[0400]}0.20m{color[ffff]}{[0001|ffff]} as well?
012	In {[0001|1a00]}Properties{[0001|ffff]}, we just need to\nenable {[0001|1a00]}{color[0400]}Visible{color[ffff]}{[0001|ffff]} and {[0001|1a00]}{color[0400]}Solid{color[ffff]}{[0001|ffff]}.
013	Excellent!\nClose the settings now.
014	Ayup. Buildin' a wall, are ya?
015	You might want to {[0001|1a00]}{color[0400]}copy{color[ffff]}{[0001|ffff]} me a bunch.\nCould save yourself a ton of effort.
016	OK then, let's start building\nthe left wall using {[0001|1a00]}{color[0400]}Copy{color[ffff]}{[0001|ffff]}.
017	{[0001|1a00]}{color[0400]}Copy{color[ffff]}{[0001|ffff]} the Object Nodon,\nand place it above.
018	Now {[0001|1a00]}{color[0400]}copy{color[ffff]}{[0001|ffff]} that one and\nput the new one on top.
019	Two more times...
020	Once more...
021	There. The left wall is complete.
022	Whoa! Straight as an arrow! It's\nalmost like you've done this before.
023	I can't find anything negative to say.
024	Time for a quick check on\nthe game screen.
025	Yep, that left side's\nshaping up quite nicely.
026	Now let's do the same\nthing for the right wall.
027	Now, for this wall\non the right...
028	we want to place it so\nthat it forms a corner.
029	We can take pieces from the straight\nwall and place them at intervals.
030	{[0001|1a00]}{color[0400]}Copy{color[ffff]}{[0001|ffff]} the topmost Object Nodon,\nand move it over to the right.
031	Now {[0001|1a00]}{color[0400]}copy{color[ffff]}{[0001|ffff]} the Object Nodon\nthat we just copied.
032	Let's move this guy\na bit.
033	{[0001|1a00]}{color[0400]}Copy{color[ffff]}{[0001|ffff]} it again.
034	Move it again.
035	A little more {[0001|1a00]}{color[0400]}copying{color[ffff]}{[0001|ffff]}.
036	Hey, guess what?\nMore moving!
037	Now we're going to create\nsome {[0001|1a00]}{color[0400]}diagonal walls{color[ffff]}{[0001|ffff]}.
038	Select this Object Nodon here.
060	And {[0001|1a00]}{color[0400]}copy {color[ffff]}{[0001|ffff]}it.
039	We're going to {[0001|1a00]}{color[0400]}rotate{color[ffff]}{[0001|ffff]} this one\na bit before moving it.
040	I'm feeling very oblique, you know?
041	Now {[0001|1a00]}{color[0400]}copy{color[ffff]}{[0001|ffff]} this one, and\nmove it along.
042	After copying this next one,\nwe'll {[0001|1a00]}{color[0400]}shift the angle{color[ffff]}{[0001|ffff]} a bit.
043	One more to go now.\n{[0001|1a00]}{color[0400]}Copy {color[ffff]}{[0001|ffff]}this one, and fill in the gap.
044	And presto! That's our course!
045	You're just itching to try it\nout, aren't you? Me too!
047	Early on, all we had was sand,\nand now we've got our very own\nracecourse! How cool is that?
048	We're well on track to capturing\nthe feel of a real racing game.
049	I take it you want to try out our new\ncustom course? Well, go ahead!\nWhat are you waiting for?
050	Just head back to the program screen\nwhen you've had your fill of the thrill.
051	Whew! I think we're done for now.
052	Time to check Step 4 off the list.
053	Proud of ya!
057	Fine craftsmanship!
058	Must be teatime by now.
059	Seems like a good idea.
054-00	With our course all laid out, we're now\neven closer to the final product.
054	Next time we should do something\nabout our narrow-minded opponent.
055	Think we can program our rival\nto {[0001|1a00]}{color[0400]}outwit{color[ffff]}{[0001|ffff]} us? We shall see!
056	See you in the next step!
Lesson_CarRace_04.msbt
000	Good to see you again,\n{[0201]}!
001	We built our racecourse\nlast time, if you recall.
002	By the way, have you got a sec to\ntake a look at our {[0001|1a00]}{color[0400]}rival vehicle{color[ffff]}{[0001|ffff]}?
003	Just restart the level with the {[0001|1a00]}{color[0400]}Retry\nbutton{color[ffff]}{[0001|ffff]}, and we can watch it do its thing.\nNo need to touch the controls.
004	You don't need to do anything.\nJust watch the opponent's vehicle.
005	It {[0001|1a00]}{color[0400]}goes straight forward{color[ffff]}{[0001|ffff]} and then\nslams headfirst {[0001|1a00]}{color[0400]}into the wall{color[ffff]}{[0001|ffff]}...
006	It's an overly aggressive way of\ntackling things if you ask me,\nbut I like its spirit!
007	But it should be able to steer\naround corners, shouldn't it?
008	Which brings us to\nthe theme of this step!
010	We want to get this one-trick pony\nback on track so that it can {[0001|1a00]}{color[0400]}navigate\nthe curves of the course{color[ffff]}{[0001|ffff]}.
011	If you really want to impress your friends,\nyou can tell them that you're programming\na {[0001|1a00]}{color[0400]}fully autonomous driving AI{color[ffff]}{[0001|ffff]}!
012	Are you ready?\nThen let's get this AI\nshow on the road!
013	Since the star of today's\nshow is our opponent...
014	tracking them with the camera\nwill make it much easier for us\nto see what's going on.
015	Could you {[0001|1a00]}{color[0400]}remove the connection{color[ffff]}{[0001|ffff]}\nbetween the player's Car Nodon and\nCamera Nodon for me?
016	Connect the Camera Nodon with\nour opponent's Car Nodon.
017	Let's go see how it looks.
018	Good! The camera's chugging\nalong right behind them.
020	We'll also get a good view of\nthe inevitable accidents...
021	When you're done checking, head\nback over to the program screen.
022	OK, roll up your sleeves, because\nit's time to teach this car how to\n{[0001|1a00]}{color[0400]}navigate the racecourse{color[ffff]}{[0001|ffff]}.
023	First, we need to make it {[0001|1a00]}{color[0400]}turn right\nautomatically{color[ffff]}{[0001|ffff]} at the first bend.
024	The question is, {[0001|1a00]}{color[0400]}how exactly\ndo we make it turn right{color[ffff]}{[0001|ffff]}?
025	We're going to make sure that\nit turns right {[0001|1a00]}{color[0400]}whenever it sees\na wall ahead{color[ffff]}{[0001|ffff]}.
026	And for that we need...\na {[0001|1a00]}{color[0400]}Touch-Sensor Nodon{color[ffff]}{[0001|ffff]}.
029	Call up a {[0001|1a00]}{color[0400]}Touch-Sensor Nodon{color[ffff]}{[0001|ffff]},\nand position it in front of\nthe Car Nodon.
030	Now open the settings.
031	The {[0001|1a00]}Y Size{[0001|ffff]} will need\nto be, say, {[0001|1a00]}{color[0400]}0.40m{color[ffff]}{[0001|ffff]}.
032	Under {[0001|1a00]}{color[0400]}Connection Point{color[ffff]}{[0001|ffff]},\nset {[0001|1a00]}Own Connection Point{[0001|ffff]} to {[0001|1a00]}{color[0400]}Z+{color[ffff]}{[0001|ffff]}\nand {[0001|1a00]}Target Connection Point{[0001|ffff]} to {[0001|1a00]}{color[0400]}Z-{color[ffff]}{[0001|ffff]}.
033	Perfect.\nNow close the settings.
034	We're, uh...\nWe're crashing into walls now?
035	Meep.
036	Let's join up the {[0001|1a00]}{color[0400]}Touch-Sensor Nodon{color[ffff]}{[0001|ffff]}\nwith the {[0001|1a00]}{color[0400]}Car Nodon{color[ffff]}{[0001|ffff]}.
037	We also want to connect the\nTouch-Sensor Nodon to the\nCar Nodon's {[0001|1a00]}{color[0400]}steering wheel port{color[ffff]}{[0001|ffff]}.
038	Now if there's a wall in the way,\nthe car will turn right {[0001|1a00]}{color[0400]}when the\ntouch sensor hits it{color[ffff]}{[0001|ffff]}!
039	I'm looking forward to\nseeing this in action.
040	Breaking news!
041	The touch sensor has reacted!\nReliable sources say the car has\nturned right!
042	This is Bob, reporting.\nBack to you, Bob.
043	So after that turn, we need\nto turn left next, don't we?\nHmm...
044	But before that, first we should make it\neasier to tell exactly {[0001|1a00]}{color[0400]}when the touch sensor\nis reacting to something{color[ffff]}{[0001|ffff]}.
045	Call up a {[0001|1a00]}{color[0400]}Number-Object Nodon{color[ffff]}{[0001|ffff]},\nand put it in the blue frame.
046	Let's edit its settings.
047	Under {[0001|1a00]}Properties{[0001|ffff]}, enable\njust {[0001|1a00]}{color[0400]}Visible{color[ffff]}{[0001|ffff]} and {[0001|1a00]}{color[0400]}Movable{color[ffff]}{[0001|ffff]}.
051	Set {[0001|1a00]}Whole Number Digits{[0001|ffff]} to {[0001|1a00]}{color[0400]}1{color[ffff]}{[0001|ffff]}.
052	The {[0001|1a00]}Y Size{[0001|ffff]} should be {[0001|1a00]}{color[0400]}0.40m{color[ffff]}{[0001|ffff]}.
053	Good stuff.\nNow close the settings.
054	Connect the Touch-Sensor Nodon to\nthe Number-Object Nodon.
055	Now to {[0001|1a00]}{color[0400]}link up{color[ffff]}{[0001|ffff]} the Number-Object\nNodon to the Car Nodon.
056	You want me to display whether\nthis Touch-Sensor Nodon is\noutputting a signal, right?
057	Uhm, yeah!\nIt'd be great if you could let\n{[0201]} know!
059-00	Now we can see the number\nthat the Touch-Sensor Nodon\noutputs on the game screen.
059	Let's take a look.
060	Watch how the number changes\nas it approaches a wall.
061	The number changed to 1\nwhen it came up to the wall.
062	We can now tell the {[0001|1a00]}{color[0400]}exact moment{color[ffff]}{[0001|ffff]}\nthat the touch sensor "saw" it.
063	The Number-Object Nodon\ncan be really handy.
064	You can use it to get all sorts of\nnumbers that would normally be hidden\nto {[0001|1a00]}{color[0400]}show up on the game screen{color[ffff]}{[0001|ffff]}.
065	Remember, though, we're only using\nthis Number-Object Nodon to {[0001|1a00]}{color[0400]}make the\nprogramming process easier{color[ffff]}{[0001|ffff]}...
066	So we'll be saying goodbye\nto it when we're finished.
067	Come back when you're\ndone checking it out, OK?
068-00	Now, it's finally time to make the car\nturn {[0001|1a00]}{color[0400]}left and right automatically{color[ffff]}{[0001|ffff]}.
068	In order to do that...
069	we have to attach not one,\nbut {[0001|1a00]}{color[0400]}two touch sensors to the\nfront of the car{color[ffff]}{[0001|ffff]}.
070	The {[0001|1a00]}{color[0400]}sensor for turning right goes\non the front left{color[ffff]}{[0001|ffff]}, and the {[0001|1a00]}{color[0400]}one for\nturning left goes on the front right{color[ffff]}{[0001|ffff]}.
071	First of all...
072	we'll have to {[0001|1a00]}{color[0400]}change the connection\n{color[ffff]}{[0001|ffff]}of the current Touch-Sensor Nodon\nand move it a little to the left.
073	Start by {[0001|1a00]}{color[0400]}deleting the connection{color[ffff]}{[0001|ffff]}\nbetween the Touch-Sensor Nodon\nand the Car Nodon.
074	Now shift the Touch-Sensor\nNodon over to the left.
078	Now we'll want to call up\na {[0001|1a00]}{color[0400]}sphere Object Nodon {color[ffff]}{[0001|ffff]}and\nput it in front of the Car Nodon.
079	Time to poke around\nin the settings.
080	Under {[0001|1a00]}Properties{[0001|ffff]},\nenable {[0001|1a00]}{color[0400]}Movable only{color[ffff]}{[0001|ffff]}.
081	Under {[0001|1a00]}{color[0400]}Connection Point{color[ffff]}{[0001|ffff]},\nset {[0001|1a00]}Own Connection Point{[0001|ffff]} to {[0001|1a00]}{color[0400]}Z+{color[ffff]}{[0001|ffff]}\nand {[0001|1a00]}Target Connection Point{[0001|ffff]} to {[0001|1a00]}{color[0400]}Z-{color[ffff]}{[0001|ffff]}.
082	Perfect!\nClose the settings now.
083	Let's connect our {[0001|1a00]}{color[0400]}sphere{color[ffff]}{[0001|ffff]}\nObject Nodon to the {[0001|1a00]}{color[0400]}Car Nodon{color[ffff]}{[0001|ffff]}.
085	Ayup. Can't see nothin',\nbut I'll do my part.
075	Next, open the\nTouch-Sensor Nodon's settings.
076	Under {[0001|1a00]}{color[0400]}Connection Point{color[ffff]}{[0001|ffff]},\nset {[0001|1a00]}Own Connection Point{[0001|ffff]} to {[0001|1a00]}{color[0400]}X-{color[ffff]}{[0001|ffff]}\nand {[0001|1a00]}Target Connection Point{[0001|ffff]} to {[0001|1a00]}{color[0400]}X+{color[ffff]}{[0001|ffff]}.
077	That's how it's done!\nNow close the settings.
084	Link the {[0001|1a00]}{color[0400]}Touch-Sensor Nodon{color[ffff]}{[0001|ffff]}\nto our {[0001|1a00]}{color[0400]}spherical friend{color[ffff]}{[0001|ffff]}.
084-01	And just like that, we've placed\nthe sensor for turning right\non the {[0001|1a00]}{color[0400]}front left of the car{color[ffff]}{[0001|ffff]}.
086	Let's make sure it works.
087	So the touch sensor has\nmoved from the front of the\ncar to the front left.
088	Let's head back.
089	Now we'll work on\n{[0001|1a00]}{color[0400]}getting the car to turn left{color[ffff]}{[0001|ffff]}.
090	{[0001|1a00]}{color[0400]}Copy{color[ffff]}{[0001|ffff]} the {[0001|1a00]}{color[0400]}Touch-Sensor Nodon{color[ffff]}{[0001|ffff]},\nand place it on the opposite side.
091	Could you open the settings?
092	Under {[0001|1a00]}{color[0400]}Connection Point{color[ffff]}{[0001|ffff]},\nset {[0001|1a00]}Own Connection Point {[0001|ffff]}to {[0001|1a00]}{color[0400]}X+{color[ffff]}{[0001|ffff]}\nand {[0001|1a00]}Target Connection Point {[0001|ffff]}to {[0001|1a00]}{color[0400]}X-{color[ffff]}{[0001|ffff]}.
093	Close the settings.
094	Link the {[0001|1a00]}{color[0400]}Touch-Sensor Nodon{color[ffff]}{[0001|ffff]}\nwith the {[0001|1a00]}{color[0400]}sphere{color[ffff]}{[0001|ffff]} Object Nodon.
095	So we're going to bump into\na wall on the right? This all\nseems very wrong...
096	Of course, it'd be great if we\ncould use this Touch-Sensor\nNodon's {[0001|1a00]}{color[0400]}output for turning left{color[ffff]}{[0001|ffff]}.
097	If we want to turn left, we'll\nhave to input a {[0001|1a00]}{color[0400]}negative number{color[ffff]}{[0001|ffff]}\ninto the {[0001|1a00]}{color[0400]}steering wheel port{color[ffff]}{[0001|ffff]}.
098	Positive for turning right,\nnegative for turning left.\nThem's the "brakes"!
099	In order to turn the Touch-Sensor Nodon's\noutput into a negative number...
100	we'll need our old pal {[0001|1a00]}{color[0400]}Calculator\nNodon {color[ffff]}{[0001|ffff]}to crunch some digits.
101	Call up a {[0001|1a00]}{color[0400]}subtraction Calculator Nodon{color[ffff]}{[0001|ffff]},\nand put it in the blue frame.
102	I WILL TURN THE ART OF\nSTEERING INTO THE JOY OF\nNUMBERS. YOU ARE WELCOME.
103	{[0001|1a00]}{color[0400]}Erase the connection{color[ffff]}{[0001|ffff]}\nfrom the Car Nodon's\n{[0001|1a00]}{color[0400]}steering wheel port{color[ffff]}{[0001|ffff]}.
104	Connect the Touch-Sensor Nodon\n{[0001|1a00]}{color[0400]}on the left{color[ffff]}{[0001|ffff]} to the {[0001|1a00]}{color[0400]}input 1 port{color[ffff]}{[0001|ffff]} of the\nCalculator Nodon.
105	Similarly, connect the Touch-Sensor\nNodon {[0001|1a00]}{color[0400]}on the right{color[ffff]}{[0001|ffff]} to the {[0001|1a00]}{color[0400]}input 2 port\n{color[ffff]}{[0001|ffff]}of the Calculator Nodon.
106	To finish up, connect the\nCalculator Nodon's output to the\n{[0001|1a00]}{color[0400]}steering wheel port {color[ffff]}{[0001|ffff]}of the Car Nodon.
107	You're getting really good\nat this, my friend.
108	We should use a Number-Object Nodon\nto show us the number sent to the\n{[0001|1a00]}steering wheel port.{[0001|ffff]}
109	Erase the connector at the\nNumber-Object Nodon's input port.
110	Instead, we'll link the Calculator Nodon\nand Number-Object Nodon.
111	Allow me to present the results\nof the calculation received\nby the steering wheel port.
112	And that's done. You've\nreally, actually programmed\na self-turning car. Wow!
113	We need to see\nthis in action.
114	Feast your eyes on that!
115	It turns right...
116	It turns left...
117	And look—no hands!
118	It's just moving\nall by itself!
119	Our {[0001|1a00]}{color[0400]}fully autonomous\ndriving AI {color[ffff]}{[0001|ffff]}is up and running!
120	It's time for us to say farewell to\nthis view, though. Can't stick around\nour opponent's vehicle forever.
121	Head on back when you've\nsaid your goodbyes...
122	Lastly, we'll move the camera\nback to where it was.
123	{[0001|1a00]}{color[0400]}Erase the connection{color[ffff]}{[0001|ffff]} between\nthe Camera Nodon and your\nopponent's Car Nodon.
124	Now {[0001|1a00]}{color[0400]}connect the Camera Nodon\nback up {color[ffff]}{[0001|ffff]}to the player's Car Nodon.
125	And let's take another look at all\nthe awesomeness you've made.
126	Let's sit back and take a leisurely look\nat our autonomous driving vehicle.
127	It's fun seeing it from a fresh\nperspective, isn't it?
128	I still can't believe you've programmed\na {[0001|1a00]}{color[0400]}self-driving car{color[ffff]}{[0001|ffff]} that goes around\nthe course all by itself!
129	What a tremendous achievement!
130	We've got an exciting race pretty\nmuch in the bag at this point.
131	Time to head back.
132	So there we have it.
133	Step 5, done and dusted!
134	YOUR EFFORTS HAVE\nBEEN REGISTERED.
135	Superb!
136	You did great!
137	Smooth moves, racer!
137-01	So, this time we made a\n{[0001|1a00]}{color[0400]}fully autonomous driving AI{color[ffff]}{[0001|ffff]}.
137-02	Isn't it smashing to just see it all\nrun like clockwork? That's one of the\nbest things about programming.
138	Next time, we're going to work\non the start of the race to help\nraise the suspense...
139	with a countdown!
140	I can't wait! See you soon!
Lesson_CarRace_05.msbt
000	Hey, {[0201]}!
001	Last time, we made a self-driving\ncar, and it was amazing!
003	You'll be racing against the very\nartificial intelligence that you designed.\nHow exciting is that?!
004	Today we're going to be raising\nthe suspense at the start line.\nHow do we do that?
005	By implementing\na {[0001|1a00]}{color[0400]}countdown {color[ffff]}{[0001|ffff]}sequence!
006	To the program screen!
007	On your marks...\nGet set...
008	GO GO GO!
009	We want the countdown to start\n{[0001|1a00]}{color[0400]}when the game begins{color[ffff]}{[0001|ffff]}.
010	That means we'll need a\nNodon that {[0001|1a00]}{color[0400]}tells us when\nthe game has started{color[ffff]}{[0001|ffff]}.
011	For this, we have the\n{[0001|1a00]}{color[0400]}On-Start Nodon{color[ffff]}{[0001|ffff]}.
012	Call it up from {[0001|1a00]}Input{[0001|ffff]} {[0001|0400]}\n{[0001|ffff]}{[0001|1a00]}State Change {[0001|ffff]}{[0001|0400]}{[0001|ffff]} {[0001|1a00]}{color[0400]}On Start{color[ffff]}{[0001|ffff]}.
013	Heya, I'm {[0001|1a00]}{color[0400]}On-Start Nodon{color[ffff]}{[0001|ffff]},\nand I'll tell you when the\ngame starts! Yaaaay!
014	You can, uh...
015	Handle the rest...
016	The On-Start Nodon only ever outputs\na signal {[0001|1a00]}{color[0400]}when the game has begun{color[ffff]}{[0001|ffff]}.
017	After that, their job's\npretty much done.
018	They live for that one moment...\nNothing else matters. But they're\nhappy with that, so good for them.
018-01	But now I'm bored...
019	Next we need to call up\nan {[0001|1a00]}{color[0400]}Effect Nodon {color[ffff]}{[0001|ffff]}with\na {[0001|1a00]}{color[0400]}countdown{color[ffff]}{[0001|ffff]} effect.
020	I'm up! I'm awake!
021	Clean out your earwax, 'cause I've got\na little countdown joke for ya!
022	Picture this: Big day. Massive rocket\non the launch pad. All systems "go."
023	Pilot's on her coffee break.\nShe asks the control room,\n"Say, what time's the launch again?"
024	Several voices answer\ntogether: "Ten!"
025	Panicked voice on the loudspeaker:\n"What? We've started? Oh no!\nNINE...EIGHT...SEVEN..."\n
026	Get it? 'Cause she was just asking\nabout the time...
027	I don't even... I can't... Anyway, if we connect\nthe On-Start Nodon to the Effect Nodon...
027-01	we can get the countdown to start\nas soon as the game does.
028	But maybe it's a little too\nsudden to have it count down\nright from the get-go.
029	Let's use the Timer Nodon\nto give us a quick breather before\nthe countdown starts for real.
030	Call up a {[0001|1a00]}{color[0400]}Timer Nodon{color[ffff]}{[0001|ffff]}, and\ndrop it in the blue frame.
031	Excuse me? You can't just call me\nwithout an appointment. For starters,\nI need time to mentally prepare...
032	Exactly! The player needs some time\nto mentally prepare, which is why we need\nTimer Nodon's excellent timekeeping.
033	Ugh. You really know\nhow to twist my arm.
034	Could you please connect the\n{[0001|1a00]}{color[0400]}On-Start Nodon {color[ffff]}{[0001|ffff]}and {[0001|1a00]}{color[0400]}Timer Nodon{color[ffff]}{[0001|ffff]}?
035	The {[0001|1a00]}{color[0400]}Timer Nodon{color[ffff]}{[0001|ffff]} and {[0001|1a00]}{color[0400]}Effect Nodon{color[ffff]}{[0001|ffff]}\nneed to be connected up too.
036	Time to see if that worked.
037	Well, the countdown was\ncounting down all right...
038	But did you notice\nthe problem?
039	Our opponent {[0001|1a00]}{color[0400]}didn't even wait{color[ffff]}{[0001|ffff]}.\nIt just tore off down the track.
040	No one's going to {[0001|1a00]}{color[0400]}wait for us{color[ffff]}{[0001|ffff]}\njust because we programmed\nin an effect!
042	Let's make sure that the car\n{[0001|1a00]}{color[0400]}doesn't drive off{color[ffff]}{[0001|ffff]} during the\ncountdown sequence.
043	We can start by entering how\nmuch time we want the car\nto stop moving for.
044	The Effect Nodon has a three\nsecond count on it, so we should\nhave a {[0001|1a00]}{color[0400]}three second{color[ffff]}{[0001|ffff]} pause here too.
045	Call up a {[0001|1a00]}{color[0400]}Timer Nodon{color[ffff]}{[0001|ffff]}, and\nput it in the blue frame.
046	Open the settings.
047	For {[0001|1a00]}Output after How\nMany Seconds? {[0001|ffff]}put {[0001|1a00]}{color[0400]}3.00{color[ffff]}{[0001|ffff]}.
048	Good!\nNow close the settings.
051	Mind linking the two {[0001|1a00]}{color[0400]}Timer Nodon{color[ffff]}{[0001|ffff]}?
052	We can have a {[0001|1a00]}{color[0400]}Flag Nodon\nremember when the countdown ends{color[ffff]}{[0001|ffff]}.
054	Call up a {[0001|1a00]}{color[0400]}Flag Nodon{color[ffff]}{[0001|ffff]},\nand put it to the side.
055	Link the {[0001|1a00]}{color[0400]}Timer Nodon{color[ffff]}{[0001|ffff]}'s output to\nthe Flag Nodon's {[0001|1a00]}{color[0400]}on port{color[ffff]}{[0001|ffff]}.
056	Zzzz...\nWake me up when the\ncountdown's over...
057	We'll be using the Flag Nodon's output\nfor a whole bunch of things, actually.
058	Best if we link it to a Wormhole-\nEntrance Nodon and use a Wormhole-\nExit Nodon to get the info.
059	Call up a {[0001|1a00]}{color[0400]}Wormhole-Entrance Nodon{color[ffff]}{[0001|ffff]},\nand put it to the side.
060	Now we'll connect the {[0001|1a00]}{color[0400]}Flag Nodon{color[ffff]}{[0001|ffff]}\nto the {[0001|1a00]}{color[0400]}Wormhole-Entrance Nodon{color[ffff]}{[0001|ffff]}.
061	Open the settings of the\nWormhole-Entrance Nodon.
062	Change the {[0001|1a00]}Wormhole ID{[0001|ffff]} to {[0001|1a00]}{color[0400]}C{color[ffff]}{[0001|ffff]}.
063	There we go.\nNow close the settings.
064	This is Entrance C, over!\nReady and waiting for end\nof Operation Countdown!
065	Looks like we're all set.
066	OK, next on our plate is...
067	getting the cars to {[0001|1a00]}{color[0400]}stay still\n{color[ffff]}{[0001|ffff]}until the countdown is over.
068	We'll tackle the\nplayer's car first.
069	We need to {[0001|1a00]}{color[0400]}stop all input signals{color[ffff]}{[0001|ffff]}\nto the {[0001|1a00]}accelerate port{[0001|ffff]} up until\nthe countdown finishes.
072	First, we need to know {[0001|1a00]}{color[0400]}whether or not\nthe countdown is still going{color[ffff]}{[0001|ffff]}.
073	Call up a {[0001|1a00]}{color[0400]}Wormhole-Exit Nodon{color[ffff]}{[0001|ffff]},\nand place it in the blue frame.
074	Open the settings, and\nset the {[0001|1a00]}Wormhole ID{[0001|ffff]} to {[0001|1a00]}{color[0400]}C{color[ffff]}{[0001|ffff]}.
075	Good.\nNow close the settings.
076	Exit C, ready to report\nthe end of the countdown\nto the second!
077	The Wormhole-Exit Nodon\n{[0001|1a00]}{color[0400]}won't output a signal until\nour countdown ends{color[ffff]}{[0001|ffff]}.
07701	If a signal isn't being output,\nthat effectively means the\n{[0001|1a00]}{color[0400]}number is 0{color[ffff]}{[0001|ffff]}.
078	{[0001|1a00]}{color[0400]}Multiply that{color[ffff]}{[0001|ffff]} with the number going into the\n{[0001|1a00]}accelerate port,{[0001|ffff]} and we can stop a signal\ngoing into the port until the countdown ends.
079	{[0001|1a00]}{color[0400]}Erase the connection{color[ffff]}{[0001|ffff]} between the\nCar Nodon's {[0001|1a00]}accelerate port{[0001|ffff]} and\nthe {[0001|1a00]}{color[0400]}subtraction{color[ffff]}{[0001|ffff]} Calculator Nodon.
080	Call up a {[0001|1a00]}{color[0400]}multiplication Calculator Nodon{color[ffff]}{[0001|ffff]},\nand drop it in the blue frame.
081	Link the {[0001|1a00]}{color[0400]}Wormhole-Exit Nodon{color[ffff]}{[0001|ffff]} with\nthe multiplication Calculator Nodon's\n{[0001|1a00]}{color[0400]}input 1 port{color[ffff]}{[0001|ffff]}.
082	Link the {[0001|1a00]}{color[0400]}subtraction {color[ffff]}{[0001|ffff]}one with the\nmultiplication one's {[0001|1a00]}{color[0400]}input 2 port{color[ffff]}{[0001|ffff]}.
083	Now connect the {[0001|1a00]}{color[0400]}multiplication {color[ffff]}{[0001|ffff]}one\nto the Car Nodon's {[0001|1a00]}{color[0400]}accelerate port{color[ffff]}{[0001|ffff]}.
084	Now, no matter how hard you try,\nthe accelerator just won't budge\nuntil the countdown ends.
085	Let's make sure that it\ndefinitely doesn't move.
086	Try pressing {[0001|1a00]}{color[0400]} {color[ffff]}{[0001|ffff]}while\nthe countdown is running.
087	Oops, let's restart and try again.\nOr press Retry!
088	So the car won't move, no matter\nhow much you press .
089	The player's car won't move an inch\nuntil the countdown is over.
090	But we also need to stop our opponent's\ncar in its tracks, don't we?
091	It's much easier to do\nthis for our opponent.
092	We can {[0001|1a00]}{color[0400]}get rid{color[ffff]}{[0001|ffff]} of our\nConstant Nodon now.
093	Instead, call up a {[0001|1a00]}{color[0400]}Wormhole-\nExit Nodon{color[ffff]}{[0001|ffff]}, and put it in the\nblue frame.
094	Open the settings, and\nset the {[0001|1a00]}Wormhole ID{[0001|ffff]} to {[0001|1a00]}{color[0400]}C{color[ffff]}{[0001|ffff]}.
095	OK!\nNow close the settings.
096	Exit C, standing by for\ncountdown's end, over!
097	Connect the Wormhole-Exit Nodon to\nthe Car Nodon's {[0001|1a00]}{color[0400]}accelerate port{color[ffff]}{[0001|ffff]}.
098	And now our opponent's car\nshould wait patiently with us until\nthe countdown has finished.
099	Is this going to work?\nLet's find out!
100	Take a look at\nour opponent!
101	Looks like they really are waiting\nuntil the countdown finishes.
103	I think that's all we need to\ndo for the initial countdown.
104	Let's head on back to\nthe program screen.
105	Hey, guess what?
106	We're finished\nwith Step 6!
107	Congratulations, over!
108	ALL THIS COUNTING DOWN HAS\nBEEN RIGHT UP MY ALLEY.
109	No waaay! You did it!\nWell done!
110	Good one... Zzzzzzz...
111	So this time, we made a countdown\nto build tension before the race.
113	It's feeling more and more\nlike a real racing game.
114	Next time, we'll be adding\na little {[0001|1a00]}{color[0400]}secret {color[ffff]}{[0001|ffff]}to the course.
115	We'll also be {[0001|1a00]}{color[0400]}tidying up our program\n{color[ffff]}{[0001|ffff]}so that others can play around with it.
116	OK! See you in the next step!
Lesson_CarRace_06.msbt
000	Hi, {[0201]}!
001	Last time we made a countdown\nto liven up the start of the race.
002	I think this is already feeling\nlike a real racing game, but...
003	we can polish it even more\nby adding a little {[0001|1a00]}{color[0400]}secret{color[ffff]}{[0001|ffff]} and\n{[0001|1a00]}{color[0400]}cleaning up our programming{color[ffff]}{[0001|ffff]}.
004	First, the secret.
005	What kind of secret will we be\nadding? Well...that's a secret!
006	Just kidding! We'll be\nmaking a {[0001|1a00]}{color[0400]}teleport shortcut\n{color[ffff]}{[0001|ffff]}behind the starting line.
007	Anyone who knows it's there can\njust zip to the goal in no time flat.\nIt's the ultimate {[0001|1a00]}{color[0400]}cheat{color[ffff]}{[0001|ffff]}!
008	Huh? You want to know\nwhy we're even adding\nsomething like that?
009	Hey, every game needs a\nsecret or two up its sleeve!
011	Come on! Let's pull up a\n{[0001|1a00]}{color[0400]}Teleport-Object-Entrance Nodon{color[ffff]}{[0001|ffff]}.
012	As sure as the river finds the sea,\nso skips the programmer from A to B.
013	I feel wiser already!\nCan you open the settings?
014	Under {[0001|1a00]}{color[0400]}Properties{color[ffff]}{[0001|ffff]}, {[0001|1a00]}{color[0400]}disable Visible{color[ffff]}{[0001|ffff]}.
015	For {[0001|1a00]}Teleport What?{[0001|ffff]}\nenable {[0001|1a00]}{color[0400]}Car{color[ffff]}{[0001|ffff]} only.
016	Great, now close\nthe settings.
017	The car shall be carried through\nthe void. I have willed it.
018	To give players an indication, we'll call\nup a {[0001|1a00]}{color[0400]}hoop {color[ffff]}{[0001|ffff]}Fancy-Object Nodon from\n{[0001|1a00]}Other Fancy Objects{[0001|ffff]} and place it on top.
019	Open the settings, please.
020	Under {[0001|1a00]}Properties{[0001|ffff]},\nenable just {[0001|1a00]}{color[0400]}Visible{color[ffff]}{[0001|ffff]}.
021	Set the {[0001|1a00]}Y Position\n{[0001|ffff]}to {[0001|1a00]}{color[0400]}0.60m{color[ffff]}{[0001|ffff]}...
022	Set {[0001|1a00]}X-Axis Rotation\n{[0001|ffff]}to {[0001|1a00]}{color[0400]}90.00°{color[ffff]}{[0001|ffff]}.
023	Nice. Now close\nthe settings.
024	We'll check out the other end\nof the teleport now.
025	Call up a {[0001|1a00]}{color[0400]}Teleport-Object-\nExit Nodon{color[ffff]}{[0001|ffff]}.
026	Animal or mineral, all can be\nmade manifest via the void.
028	Open the settings.
029	Under {[0001|1a00]}{color[0400]}Properties{color[ffff]}{[0001|ffff]}, {[0001|1a00]}{color[0400]}disable Visible{color[ffff]}{[0001|ffff]}.
030	Nice.\nClose the settings now.
031	And that's it for\nour secret.
032	Time to test it out.
033	{[0001|1a00]}{color[0400]}Hold down  {color[ffff]}{[0001|ffff]}to reverse and\nback up into the warp tunnel.
034	We've done it!\nA quick lap through space-time!
035	So there you go. It can be fun\nto sneak in a few hidden extras\nlike these.
036	Think about it when you're\noff making your own games.
037	Now to tidy up our program so that\n{[0001|1a00]}{color[0400]}others can play around with it too{color[ffff]}{[0001|ffff]}.
038	We put out a few things to\nhelp us out while we program...
039	but let's go ahead and remove the\nstuff that we won't want in our finished\nversion now.
040	Let's {[0001|1a00]}{color[0400]}say goodbye{color[ffff]}{[0001|ffff]} to our\n{[0001|1a00]}{color[0400]}Number-Object Nodon{color[ffff]}{[0001|ffff]}.
041	Open the settings of the\n{[0001|1a00]}{color[0400]}left Touch-Sensor Nodon{color[ffff]}{[0001|ffff]}.
042	In {[0001|1a00]}Properties{[0001|ffff]}, {[0001|1a00]}{color[0400]}disable Visible{color[ffff]}{[0001|ffff]}.
043	Good, good.\nNow close the settings.
044	Then we open the settings for the\n{[0001|1a00]}{color[0400]}right Touch-Sensor Nodon{color[ffff]}{[0001|ffff]}.
045	We'll want to {[0001|1a00]}{color[0400]}disable Visible{color[ffff]}{[0001|ffff]}\nin {[0001|1a00]}Properties{[0001|ffff]} here too.
046	Super!\nClose the settings.
047	And now for a test run.
048	See our opponent's car?
049	It looks a whole lot cleaner\nwithout the touch sensors and\nthe number object, doesn't it?
050	Come back when you're\ndone looking at that.
051	OK! Looks like we're\ndone here.
052	Step 7 is a wrap.
053	Gorgeous! ♥
054	Vrrrooom!\nNow you're cruising!
055	Whu-huh?!
056	Yes! Fine!\nGreat! Good job!
057	To sum up, we added\na hidden warp tunnel.
058	And we cleaned up our program so\nthat others can play around with it.
059	At this point, Thrill Racer\nis almost done. Almost...
060	Next time we'll be applying\nthe {[0001|1a00]}{color[0400]}finishing touches{color[ffff]}{[0001|ffff]}.
061	You'll be able to add some of\nyour own personal flair to it,\n{[0201]}.
062	See you soon!
Lesson_CarRace_07.msbt
000	Hello!
001	Well, here we are at the\nfinal step of Thrill Racer!\nAre you excited?!
002	Last time, we cleaned up our program\nto make it easier for other people to \nmess around with, if they want to do that.
003	This time, you get to give your game\nsome of your own personal charm.
004	Buckle up, because we're rolling\non out to the program screen!
005	I'm letting you take the reins\non a couple of things here,\n{[0201]}.
006	Namely, the game's {[0001|1a00]}{color[0400]}appearance{color[ffff]}{[0001|ffff]}\nand {[0001|1a00]}{color[0400]}background music{color[ffff]}{[0001|ffff]}.
007	First, let's set up the\nbackground music.
008	Call up a {[0001|1a00]}{color[0400]}Background-\nMusic Nodon{color[ffff]}{[0001|ffff]}.
009	Yeah, yeah, yeah! Drivin' in the heat!\nFeel the thrill of the beat! Don't just\nplay the game—MAKE the game! Yeah!
010	Let the burnin' of the tires\nlight up your desires! It's time\nto WIN, with pro-gram-MIN'!
01001	Yeeeah... Open the settings, please.
01002	Set the theme to {[0001|1a00]}{color[0400]}Rivalry{color[ffff]}{[0001|ffff]}.
01003	Now there's a track that'll really\nrev up your racing spirit!
01005	Close the settings now.
011	Ideally, we'd want the music to\nstart playing after the countdown.
012	Connect the Flag Nodon's\noutput to the Background-\nMusic Nodon's {[0001|1a00]}{color[0400]}play port{color[ffff]}{[0001|ffff]}.
013	I'm sure you're reading my mind.\nWe have to check this out...
014	Wait for the countdown\nto finish, aaand...
015	There goes that sweet\nbackground music!
01501	So now we've got our racing music.\nBut you know...I think we could do a\nlittle bit more with it.
01502	Yeah, let's really shape it into\nsomething special this time.
01503	To the program screen!
01504	You'll notice that, aside from the\n{[0001|1a00]}{color[0400]}play port{color[ffff]}{[0001|ffff]}, the Background-Music\nNodon has two other ports.
01505	The first of these is the {[0001|1a00]}{color[0400]}speed\nport{color[ffff]}{[0001|ffff]}. We can use it to change the\n{[0001|1a00]}{color[0400]}speed that the music plays at{color[ffff]}{[0001|ffff]}.
01506	If you input any {[0001|1a00]}{color[0400]}number above\n1.00 {color[ffff]}{[0001|ffff]}into the {[0001|1a00]}speed port{[0001|ffff]}, the\nsong will play {[0001|1a00]}{color[0400]}faster{color[ffff]}{[0001|ffff]}.
01507	While any number {[0001|1a00]}{color[0400]}below 1.00{color[ffff]}{[0001|ffff]}\nwill {[0001|1a00]}{color[0400]}slow it down{color[ffff]}{[0001|ffff]}.
01508	Let's just see if we can {[0001|1a00]}{color[0400]}slow our\nmusic track down a touch{color[ffff]}{[0001|ffff]}.
01509	Call up a {[0001|1a00]}{color[0400]}Constant Nodon{color[ffff]}{[0001|ffff]},\nand drop it beside the\nBackground-Music Nodon.
01510	Open its settings screen.
01511	And let's set the\n{[0001|1a00]}Output Value {[0001|ffff]}to {[0001|1a00]}{color[0400]}0.95{color[ffff]}{[0001|ffff]}.
01512	Now close the settings screen.
01513	So, 0.95? Understood.\nThe value will be 0.95, and\n0.95 it will stay!
01514	{[0001|1a00]}{color[0400]}Before we connect{color[ffff]}{[0001|ffff]} the Constant\nNodon to the {[0001|1a00]}speed port{[0001|ffff]}, there's\nsomething we need to do first.
01515	Open up the Background-Music\nNodon's {[0001|1a00]}{color[0400]}settings{color[ffff]}{[0001|ffff]}, and listen once\nmore to the track's {[0001|1a00]}{color[0400]}normal speed{color[ffff]}{[0001|ffff]}.
01516	What you're hearing now is\nthe song's {[0001|1a00]}{color[0400]}default speed{color[ffff]}{[0001|ffff]}.
0151601	Just listen to it\nfor a moment.
01517	Got a feel for the pace?\nThen close the settings.
01518	Now connect the Constant Nodon\nto the Background-Music Nodon's\n{[0001|1a00]}{color[0400]}speed port{color[ffff]}{[0001|ffff]}.
01519	Ahh... Time to chill out\nfrom the thrill-out!
01520	Open the Background-Music\nNodon's settings again.
01521	What do you think? Now that the\nsong plays {[0001|1a00]}{color[0400]}slower{color[ffff]}{[0001|ffff]}, everything seems\nmore mellow now, doesn't it?
0152101	So yeah, this is how you change\nthe speed of a song: by{[0001|1a00]}{color[0400]} feeding\ninput signals to the speed port{color[ffff]}{[0001|ffff]}.
01522	When you're all done checking,\nclose the settings.
01524	Now let's listen to it\non the game screen.
01525	Wait for the countdown...
01526	As you can hear, the background\ntrack is slowed down on the game\nscreen too.
016	OK, we can\ngo back now.
017	Now the stage is set.
018	All that's left is for you to\nadd those final touches,\n{[0201]}.
019	You can play around with the cars,\ngive the course an overhaul...
020	change the music...
02001	And of course, feel free to adjust\nthe speed to your liking too!
021	Let me know once you're\nsatisfied with the result.
022	You can do so by hitting\nthe {[0001|1a00]}{color[0400]}Done{color[ffff]}{[0001|ffff]} button.
023	Off you go!
024	Start programming!
025	Looks like you're\nall done, eh?
026	OK! Show me the fruits of your\nlabors, {[0201]}!\nShow me a Thrill Racer like no other!
027	What a game!\nIt's got {[0201]}\nwritten all over it!
028	OK, I get it!\nKeeping everything the same\nis kind of a thrill in itself, huh?
029	You know what\nthis means, right?
030	It means Thrill Racer\nis done!
031	What an incredible\nachievement!
032	This calls for...a trip back\nto the programming screen!
033	WOOO-HOO!\nFeels good to be\na speed demon!
034	Three, two, one, yeaaaah!\nLet's go raaaaciiiiiing!
035	Exciting, isn't it?
036	I will spread word far and wide\nthrough resonant theta frequencies.
037	How come you get all those\ninvisible Fancy Objects?\nThat's cheating!
038	Caught in the slipstream, Nodon fall into place.\nBut PASSION is what makes a race!
039	Gameplay, check.\nStyle, check! Final verdict?\nA fine specimen of a game!
040	Standing by for {[0201]}'s\nglorious victory, over!
041	You stuck it out through all those\ntricky steps and brought this game to\ncompletion.
042	There's so much untapped potential\nin you, {[0201]}.\nNever let anyone hold you back.
043	Also, it looks like you've only got\none more lesson to go now.
044	I have a sneaking suspicion\nthat this one's going to lift your\nconsiderable skills to new heights!
045	I can't wait to see what sort of\nideas you'll come up with!
046	But first, let's add the racing game\nto My Games.
047	And it's back to the menu.\nCiao for now!
Lesson_Chase_00.msbt
000	Hey, {[0201]}!
001	I'm so glad you made it!
002	Welcome to the {[0001|1a00]}{color[0400]}interactive lessons{color[ffff]}{[0001|ffff]}!
002-001	Just in case you forgot,\nI'm {[0001|1a00]}{color[0400]}Bob{color[ffff]}{[0001|ffff]}.
002-002	And I can't wait to start\nworking with you.
003	Well, it's a day to remember,\nbecause you're going to make\nyour very first game...
004	Tag Showdown!
004000	In this game, a {[0001|1a00]}{color[0400]}tagger{color[ffff]}{[0001|ffff]} will chase\nafter a {[0001|1a00]}{color[0400]}runner{color[ffff]}{[0001|ffff]}, while dodging a\ntorrent of rolling balls!
004001	Sounds fun already, right?
005	And this thrilling game will\nbe played out right here, on\nthe {[0001|1a00]}{color[0400]}game screen{color[ffff]}{[0001|ffff]}!
008	Of course...you can't\nplay anything just yet.
009	I mean, you haven't even\nprogrammed the game yet!
010	From now on, the programming that\nyou do on the {[0001|1a00]}{color[0400]}program screen{color[ffff]}{[0001|ffff]} will be\nreflected right here on the {[0001|1a00]}{color[0400]}game screen{color[ffff]}{[0001|ffff]}.
011	Without further ado, let's head\nover to the {[0001|1a00]}{color[0400]}program screen{color[ffff]}{[0001|ffff]} and\nstart programming our game.
012	Let's go! Press this button!
013	Welcome to the {[0001|1a00]}{color[0400]}program screen{color[ffff]}{[0001|ffff]}!
014	This is where you'll call up {[0001|1a00]}{color[0400]}Nodon{color[ffff]}{[0001|ffff]}\nand program your game.
015	First, let's get our {[0001|1a00]}{color[0400]}player\ncharacter{color[ffff]}{[0001|ffff]} up and running.
016	For that, we'll need to\ncall a {[0001|1a00]}{color[0400]}Person Nodon{color[ffff]}{[0001|ffff]}.
017	Select {[0001|1a00]}{color[0400]}Objects{color[ffff]}{[0001|ffff]}...
018	Then {[0001|1a00]}{color[0400]}Characters{color[ffff]}{[0001|ffff]}...
019	Finally, select {[0001|1a00]}{color[0400]}Person{color[ffff]}{[0001|ffff]}...
020	Hello, peeps!\nI'm the {[0001|1a00]}{color[0400]}Person Nodon{color[ffff]}{[0001|ffff]}!
021	Nice to see you,\n{[0201]}!
023	Now the programming starts!
024	Yeah, great stuff!
025	Time for me to step into\nthe limelight, peeps.
027	OK... So what happened after\nwe placed the {[0001|1a00]}{color[0400]}Person Nodon{color[ffff]}{[0001|ffff]}?
028	Let's take a look at the\n{[0001|1a00]}{color[0400]}game screen{color[ffff]}{[0001|ffff]} and find out.
029	Press this button to switch\nto the game screen.
030	And here's our {[0001|1a00]}{color[0400]}person{color[ffff]}{[0001|ffff]}, on our blank,\nempty game screen!
031	Putting the {[0001|1a00]}{color[0400]}Person Nodon {color[ffff]}{[0001|ffff]}on the {[0001|1a00]}{color[0400]}program\nscreen{color[ffff]}{[0001|ffff]} makes a {[0001|1a00]}{color[0400]}person{color[ffff]}{[0001|ffff]} appear on the\n{[0001|1a00]}{color[0400]}game screen{color[ffff]}{[0001|ffff]}. Clear enough, right?
032	Next up, we'll want to be able to\n{color[0400]}{[0001|1a00]}control {[0001|ffff]}{color[ffff]}our player character\nusing the controller...
033	Try moving the person with {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]} now...\nDoes it do anything?
034	As you can see, the person\nisn't moving at all!
035	This is where the {[0001|1a00]}{color[0400]}programming {color[ffff]}{[0001|ffff]}comes in!\nLet's get our player character mobile.
036	We can take care of that now.\nLet's arrange for our buddy here\nto {[0001|1a00]}{color[0400]}move with {color[ffff]}{[0001|ffff]}.
037	If we want to move the player\nwith , then we'll need to\ncall on the {[0001|1a00]}{color[0400]}Stick Nodon{color[ffff]}{[0001|ffff]}...
038	Go to {[0001|1a00]}{color[0400]}Input{color[ffff]}{[0001|ffff]}...
039	Now {[0001|1a00]}{color[0400]}Stick Movement{color[ffff]}{[0001|ffff]}...
040	{[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]}...
040000	Select {[0001|1a00]}{color[0400]}Left/Right{color[ffff]}{[0001|ffff]}.
041	Boing!
042	You're {[0201]}, right?
043	I bet you can't wait to move\nthat control stick around.
044	We'll need to link up the\n{[0001|1a00]}{color[0400]}Stick Nodon's output port{color[ffff]}{[0001|ffff]}...
045	with the {color[0400]}{[0001|1a00]}left/right port{[0001|ffff]}\n{color[ffff]}of the {[0001|1a00]}{color[0400]}Person Nodon{color[ffff]}{[0001|ffff]}.
046	Hey, Sticky! Time to\ndo what you do best!
047	Sending over the output\nfrom the control stick.\nBoing!
048	OK! Let's see what's happening\nover on the game screen.
049	Try moving {[0001|1a00]}{color[0400]} left and right\n{color[ffff]}and see what happens.{[0001|ffff]}
050	Amazing! Our player\ncharacter is moving with !
051	Bravo!
052	Now, with that covered we\ncan move on to something else.
053	Wouldn't it be good if the person could\n{[0001|1a00]}{color[0400]}jump when a button is pressed{color[ffff]}{[0001|ffff]}?
054	Let's get jumping with !
055	First, move the {[0001|1a00]}{color[0400]}Stick Nodon\n{color[ffff]}{[0001|ffff]}over to the blue frame.
056	Then select {[0001|1a00]}{color[0400]}Input{color[ffff]}{[0001|ffff]}...
057	Next, {[0001|1a00]}{color[0400]}Button Press{color[ffff]}{[0001|ffff]}...
058	Finally, select {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]}.
059	Yo!
060	Call me {[0001|1a00]}{color[0400]}Button Nodon{color[ffff]}{[0001|ffff]}.\nI'm your button-bashing buddy!
061	Ah, if it ain't my\npal, {[0201]}!
063	If buttons are getting\nbashed, I got it covered.\nBop, bop, bop!
064	Fit the {color[0400]}{[0001|1a00]}Button Nodon{[0001|ffff]}\n{color[ffff]}inside the blue frame...
065	Then link up the {color[0400]}{[0001|1a00]}Button Nodon's\noutput port{[0001|ffff]} {color[ffff]}to the {[0001|1a00]}{color[0400]}Person Nodon's\njump port{color[ffff]}{[0001|ffff]}.
066	If that button gets bashed,\nyou can be sure I'll let\nyou know!
067	Thanks, bud!
068	Time to check it out\non the game screen!
069	Try pressing {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]}...
070	Great! The player jumped\nwhen you pressed !
071	When you're done testing\nthat out, head back over\nto the program screen.
072	OK... Guess what!
073	You've cleared Step 1!
074a	Good job, peeps!
074b	Boing! Bravo!
074c	Great job, buddy!
075-00	In this step, we made it\npossible to move the\nperson with the controller.
075	In the next step, we'll get\nready to build the {[0001|1a00]}{color[0400]}level{color[ffff]}{[0001|ffff]}\nfor our game of tag!
076	I don't mind saying, I'm\npretty excited about that!
077	See you in the next step!
Lesson_Chase_01.msbt
000	Welcome again, {[0201]}!
001	Let's get right back to\nbuilding our game of tag!
002	But first, let's have a\nlittle look back at what\nwe've already done.
003	Try using {[0001|1a00]}{color[0400]} {color[ffff]}{[0001|ffff]}and{[0001|1a00]}{color[0400]}  {color[ffff]}{[0001|ffff]}to\nmove the player character.
004	You got it! Thanks to your top-notch\nwork in the last lesson, we can now\n{[0001|1a00]}{color[0400]}move the player with the controller{color[ffff]}{[0001|ffff]}.
005	This time around, we'll be building\nthe {[0001|1a00]}{color[0400]}floor and walls{color[ffff]}{[0001|ffff]} that set the stage\nfor our game of tag.
006	Over to the program screen we go...
007	We'll be making the\nfloor and walls, but first...
007000	We need to decide {[0001|1a00]}{color[0400]}where\nwe're going to put the \nentire level{color[ffff]}{[0001|ffff]}.
007001	How about in this space\nup here? That should do.
007002	I'm glad that's settled. Now we\nneed to make sure this area is\n{[0001|1a00]}{color[0400]}shown on the game screen{color[ffff]}{[0001|ffff]}.
009	But if we're going to do that, we'll need\nthe help of the {[0001|1a00]}{color[0400]}Game-Screen Nodon{color[ffff]}{[0001|ffff]}!
010	Open up {[0001|1a00]}{color[0400]}Objects{color[ffff]}{[0001|ffff]}...
011	Select {[0001|1a00]}{color[0400]}Game Screen / Camera{color[ffff]}{[0001|ffff]}...
012	And now {[0001|1a00]}{color[0400]}Game Screen{color[ffff]}{[0001|ffff]}.
013	Hello, darlings! I must say,\nyou're looking radiant today!
013-01	Oh! And you must be {[0201]}!\nEveryone's saying you're the next big thing!
013-02	With you at the helm, this is going to\nbe a simply stunning production!\nWe're sure to rise to the very top, darling!
014	If we make use of the\n{[0001|1a00]}{color[0400]}Game-Screen Nodon{color[ffff]}{[0001|ffff]}...
015	we can determine {[0001|1a00]}{color[0400]}which part\nof the program screen{color[ffff]}{[0001|ffff]} will be\n{[0001|1a00]}{color[0400]}reflected on the game screen{color[ffff]}{[0001|ffff]}.
016	I couldn't have put it\nbetter myself, darling!
017	{[0001|1a00]}{color[0400]}Whatever I frame{color[ffff]}{[0001|ffff]} will appear,\nvividly and thrillingly, on the\ngame screen!
018	Let's make this Game-Screen\nNodon a little bit bigger...
018000	{[0001|1a00]}{color[0400]}Drag{color[ffff]}{[0001|ffff]} this icon until the Nodon\n{[0001|1a00]}{color[0400]}fits the blue frame exactly{color[ffff]}{[0001|ffff]}.\n
019	Now let's take a look and see what's\nhappening over on the game screen.
020	I think you'll notice that our player\ncharacter is nowhere to be seen!
021	You see, over on the program screen,\nthe {[0001|1a00]}{color[0400]}Person Nodon isn't surrounded{color[ffff]}{[0001|ffff]}\nby the {[0001|1a00]}{color[0400]}Game-Screen Nodon{color[ffff]}{[0001|ffff]}.
022	Let's head back over there\nand fix it so {[0001|1a00]}{color[0400]}the person appears\non the game screen{color[ffff]}{[0001|ffff]}.
023	OK then, let's move\nthe {[0001|1a00]}{color[0400]}Person Nodon{color[ffff]}{[0001|ffff]}.
024	Can you drag it over so that it's\nwithin the {[0001|1a00]}{color[0400]}Game-Screen Nodon{color[ffff]}{[0001|ffff]}?
025	Wonderful! Now the person is\nin the limelight! The camera\nloves you, darling!
026	Be sure to get my good side!
027	Let's see what's changed\non the game screen.
028	Look! Now we see the person\nreflected on the game screen!
029	Yikes... But not for long!
031	Uhhh, but anyhow...now we know that\n{[0001|1a00]}{color[0400]}whatever is surrounded by the Game-Screen\nNodon{color[ffff]}{[0001|ffff]} on the program screen...
032	{[0001|1a00]}{color[0400]}will be reflected on the game screen{color[ffff]}{[0001|ffff]},\nlike you just saw.
032000	But we're not in great shape\nif our player character can't stay\non the screen...
033	The obvious solution\nis a {[0001|1a00]}{color[0400]}floor{color[ffff]}{[0001|ffff]}, of course!
034	We will of course need an\n{[0001|1a00]}{color[0400]}Object Nodon {color[ffff]}{[0001|ffff]}to make the floor.
035	Go to {[0001|1a00]}{color[0400]}Objects{color[ffff]}{[0001|ffff]}...
036	Now {[0001|1a00]}{color[0400]}Simple Objects{color[ffff]}{[0001|ffff]}...
037	Lastly, select {[0001|1a00]}{color[0400]}Box{color[ffff]}{[0001|ffff]}.
038	Heyo! The name's Object Nodon.
039	True to their name, {[0001|1a00]}{color[0400]}Object Nodon\n{color[ffff]}{[0001|ffff]}are Nodon that {[0001|1a00]}{color[0400]}make objects\nappear on the game screen{color[ffff]}{[0001|ffff]}.
039-01	Well, he's not wrong...
040	Drag the Object Nodon\n{[0001|1a00]}{color[0400]}underneath the Person Nodon{color[ffff]}{[0001|ffff]}...
041	OK! To the game screen!
042	Whoa! Did you see that?
043	Oh, sorry! I should mention, with\nnothing to keep them up, objects\njust {[0001|1a00]}{color[0400]}drop {color[ffff]}{[0001|ffff]}right out of the screen.
044	Let's head back to the program screen\nand fix it so that the object {[0001|1a00]}{color[0400]}doesn't\nfall out{color[ffff]}{[0001|ffff]}.
045	First, select the {[0001|1a00]}{color[0400]}Object Nodon{color[ffff]}{[0001|ffff]}.
046	Open the {[0001|1a00]}{color[0400]}settings screen\n{color[ffff]}{[0001|ffff]}with this icon.
047	The settings screen is where\nyou can make {[0001|1a00]}{color[0400]}all kinds of\nchanges to a Nodon{color[ffff]}{[0001|ffff]}.
048	We'll need to adjust the {[0001|1a00]}{color[0400]}Properties\n{color[ffff]}{[0001|ffff]}settings to fix it so the object\ndoesn't fall anymore.
049	Now {[0001|1a00]}{color[0400]}disable{color[ffff]}{[0001|ffff]} the options {[0001|1a00]}{color[0400]}Movable{color[ffff]}{[0001|ffff]},\n{[0001|1a00]}{color[0400]}Destructible{color[ffff]}{[0001|ffff]}, and {[0001|1a00]}{color[0400]}Destructive{color[ffff]}{[0001|ffff]}.
050	If that's done, we can close\nthe settings screen...
051	and head on over\nto the game screen.
052	Perfect! The object is staying\nwhere it should.
052000	The person isn't falling\nout of the screen either!
053	Though, I'm not sure that floor is\nbig enough. I bet the person feels\na little uneasy there...
054	Head back to the program screen\nso that we can adjust the {[0001|1a00]}{color[0400]}size{color[ffff]}{[0001|ffff]}.
055	Select the {[0001|1a00]}{color[0400]}Object Nodon{color[ffff]}{[0001|ffff]}...
056	Then {[0001|1a00]}{color[0400]}drag{color[ffff]}{[0001|ffff]} this icon so it's\n{[0001|1a00]}{color[0400]}the same size and shape\n{color[ffff]}{[0001|ffff]}as the blue frame.
057	Perfect!
058	Let's check out what's happened\nto the floor on the game screen.
059	Now that's a much more\nreassuring size.
059-01	The player won't fall\noff quite so easily now.
060	Hmmm... The floor is doing its floor\nthing, but its {[0001|1a00]}{color[0400]}color{color[ffff]}{[0001|ffff]} is kind of plain, right?
060000	Let's see if we can\nchange the color too.
061	To the program screen!
062	Select the Object Nodon...
063	Open up the settings screen.
064	Now choose {[0001|1a00]}{color[0400]}Color{color[ffff]}{[0001|ffff]}.
065	Here's where you'll be able to\nselect a color for your object.
066	Let's try making it {[0001|1a00]}{color[0400]}brown{color[ffff]}{[0001|ffff]}.
068	Now close the settings screen...
069	Good job! Head over to\nthe game screen.
070	And the floor is now brown!
071	Awesome!
072	Well, the floor is\nall taken care of...
073	But if the player goes past the\nedge, it'll just fall off again.
074	Perhaps some {[0001|1a00]}{color[0400]}walls {color[ffff]}{[0001|ffff]}would\nmake this level a little safer.
075	Back to the program screen!
076	Just like with the floor, we'll need\nto make use of Object Nodon to\ncreate the walls.
077	Calling up more Object Nodon,\nchanging the settings again...\nSounds like hard work, right?
078	So let's save ourselves some\nwork and just {[0001|1a00]}{color[0400]}copy {color[ffff]}{[0001|ffff]}the floor\nto make the walls.
079	Select this Object Nodon...
080	Use this icon to {[0001|1a00]}{color[0400]}copy{color[ffff]}{[0001|ffff]}.
080000	I can be a wall. No problem.
081	And we've copied the Object Nodon!
082	Drag the new Object Nodon\nover to the blue frame.
083	Now we change its {[0001|1a00]}{color[0400]}height and width{color[ffff]}{[0001|ffff]}.
084	Now make a copy of the new Nodon.
085	And drag it over to the right edge.
086	Ta-da! And the {[0001|1a00]}{color[0400]}walls{color[ffff]}{[0001|ffff]} are complete!
087	To the game screen!
088	Behold! Some nice, safe, brown walls!
089	No need to worry about our player\nfalling into the abyss now.
090	Let's head back to the program screen.
091	OK... Let's see... Hmmm... Yes!
092	I hereby declare Step 2 complete!
093a	Good job, darling!
093b	Yup! Good for you!
093c	Well done.
093d	Great work!
094	In this step, we added\na floor and some walls.
094-01	In the next step, we'll add some\n{[0001|1a00]}{color[0400]}platforms{color[ffff]}{[0001|ffff]} to complete the level!
095	Bye for now! See you\nagain in Step 3!
Lesson_Chase_02.msbt
000	And there you are!
001	OK! Time to continue\nprogramming our game of tag.
002	Last time, we made the\nfloor and the walls.
003	Could you try moving the player\ncharacter with {[0001|1a00]}{color[0400]} {color[ffff]}{[0001|ffff]}and {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]}?
005	In Step 3, we're going to\nmake exciting changes to the\nlevel's environment.
006	But...does this place seem a little\nsmall for a game of tag, maybe?
006000	You could fiddle around with\nthe walls and floor to make\nthem a bit bigger...
007	Or you could just {[0001|1a00]}{color[0400]}make the person\nsmaller{color[ffff]}{[0001|ffff]}. This will have the same\neffect as {[0001|1a00]}{color[0400]}making the level bigger{color[ffff]}{[0001|ffff]}!
008	Program screen! Let's go!
009	Select the Person Nodon...
010	And fit it into the blue frame.
011	That's how you make a\nPerson Nodon smaller!
012	But what happened to our character\nover on the game screen?
013	As you might have guessed,\nit shrank in size...
014	and has a lot more space to\nmove around in, right?
015	Looks like we're all set to\ncontinue building our level.
015000	Back to the program screen!
015-01	This is where we'll liven things up\nby placing a whole bunch of {[0001|1a00]}{color[0400]}platforms{color[ffff]}{[0001|ffff]}.
016	Start by selecting the Object Nodon\nthat's making our floor...
017	And copy it.
018	Then adjust the new Nodon so that\nit's the same size as the blue frame.
019	Now take it over to the blue frame.
019-01	Hop on me all you want.\nI won't break.
020	Let's check out what we've done\nover on the game screen.
021	Now we've got a nice {[0001|1a00]}{color[0400]}platform{color[ffff]}{[0001|ffff]}\nright in the middle of our level.
022	And we're going to make a whole\nbunch more, just like this one.
023	Let's head back to the program screen.
024	I think you're ready to try\nmaking a {[0001|1a00]}{color[0400]}sloping platform{color[ffff]}{[0001|ffff]}.
024000	Start by selecting this Object Nodon.
025	And make a copy!
026	Then take the copy\nover to the blue frame.
027	You'll need to make\nit a little bit smaller.
028	Lastly, {[0001|1a00]}{color[0400]}rotate{color[ffff]}{[0001|ffff]} it, so that\nit's {[0001|1a00]}{color[0400]}on an angle{color[ffff]}{[0001|ffff]}.
029	Grab it with this handle, then\nturn it a little so that it fits\ninside the blue frame.
030	Oh, wow! I've gone\nall slidey-wise! Cool!
031	Let's make another one just like it\nbut over on the opposite side.
031000	Select this Nodon...
032	And copy!
033	Now take it over to the left side.
033000	Make it a little bit smaller.
034	Like you did before, use\nthe handle to rotate it.
035	Perfect fit!
036	Let's see what's changed\non the game screen.
037	Now we have two {[0001|1a00]}{color[0400]}sloping platforms{color[ffff]}{[0001|ffff]}!
038	Things are going great so far!
039	But we still have a few\nmore platforms to create.
040	Next, let's add some {[0001|1a00]}{color[0400]}slopes\n{color[ffff]}{[0001|ffff]}in the bottom corners.
040000	Select this Object Nodon...
041	And copy it.
042	Take it over to the lower right...
043	And rotate it like so.
044	Nice!
044000	Select the Object Nodon\none more time...
045	And, you guessed it: copy!
046	Take it over to the lower left...
047	And rotate it again.
048	Perfect!
049	Time to check it out\non the game screen!
050	These wacky sloping surfaces\nare going to give us a thrilling\ngame of tag, don't you think?
051	But you know what we really\nneed? More platforms!
051000	Select the Object Nodon in the middle there...
052	And copy it.
053	Now drag it up a little higher.
054	And let's make it\na bit smaller.
055	Next, we'll add some\nplatforms on either side.
056	Copy the Object Nodon...
057	Move it over to the right.
058	And copy.
059	Now to the left...
060	OK! I think we've got\nenough platforms now.
061	Let's see how things look\non the game screen.
062	Wow! This is looking pretty great!
063	Go ahead and move around a\nlittle bit using {[0001|1a00]}{color[0400]} {color[ffff]}{[0001|ffff]}and {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]}.
064	Just think of all the action-packed,\npulse-pounding games of tag in\nstore for you!
065	I can hardly wait!
066	OK. When you're done checking that out,\nhead back to the program screen.
067	And with that...
068	Step 3 is complete!
069a	Nice work, kid.
069b	Yeah! Cool level!
069c	Awesome!
069-01	So in this stage we added some\nplatforms to complete the level.
070	Buckle up, because in the next step\nwe'll be coming to a real turning point.
071	Our game of tag is about to\nbecome a {[0001|1a00]}{color[0400]}two-player game{color[ffff]}{[0001|ffff]}!
072	See you in the next step!
Lesson_Chase_03.msbt
000	Great to see you again!
001	We're already halfway through\nprogramming our game of tag.\nYou're zipping through this stuff!
002	In this step we're going to create a second\nperson to act as tagger. Then we'll have\na real-deal, bona fide two-player game!
003	Last time, we added some\ninteresting touches to our level.
004	Let's warm up by moving the\nplayer character around the level\na little bit using {[0001|1a00]}{color[0400]} {color[ffff]}{[0001|ffff]}and {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]}.
006	Imagine what it'll be like when there's a\n{[0001|1a00]}{color[0400]}tagger chasing the player{color[ffff]}{[0001|ffff]}... I get chills!
007	Let's go ahead and create a {[0001|1a00]}{color[0400]}tagger\n{color[ffff]}{[0001|ffff]}over on the program screen.
008	Before we make our {[0001|1a00]}{color[0400]}tagger{color[ffff]}{[0001|ffff]},\nlet's adjust the position of\nthe person a bit.
009	Move the Person Nodon {[0001|1a00]}{color[0400]}above\nthe platform on the right side{color[ffff]}{[0001|ffff]}.
010	It's a good idea to move over the other Nodon\nattached to the Person Nodon too. It'll make\nthings a bit easier to understand.
011	To start, let's move the {[0001|1a00]}{color[0400]}Stick Nodon{color[ffff]}{[0001|ffff]}.
012	Next, move the {[0001|1a00]}{color[0400]}Button Nodon{color[ffff]}{[0001|ffff]}.
013	OK!
014	Let's take a look at the game screen.
015	As you can see, our player has moved\nfrom the middle, out to the right side.
015000	OK! Those preparations\nare done.
016	Let's head over to the program\nscreen and create a {[0001|1a00]}{color[0400]}tagger{color[ffff]}{[0001|ffff]} to\nchase after our player.
016-01	We can use another {[0001|1a00]}{color[0400]}Person Nodon{color[ffff]}{[0001|ffff]}\nfor our {[0001|1a00]}{color[0400]}tagger{color[ffff]}{[0001|ffff]}.
017	Select the Person Nodon...
018	And copy it.
019	Hello, peeps!
020	How can I help?
021	Hahaha! You can count on me!\nI'm a reliable Person...Nodon.
022	Move this Person Nodon\nover to the left platform.
023	OK! Let's see how the\ngame screen is looking.
024	Now we have two characters.
025	Try moving them with {[0001|1a00]}{color[0400]} {color[ffff]}{[0001|ffff]}and {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]}.
026	Huh... The person on the\nleft-hand side isn't moving.
027	I guess it's not that surprising. We still\nneed to do the necessary {[0001|1a00]}{color[0400]}programming\n{color[ffff]}{[0001|ffff]}to control the second person.
028	Let's head back to the program\nscreen and handle that.
029	So... Now that we have two\ncharacters, we need to figure out\nhow each one will be controlled.
029-01	Since this is a two-player game...
030	we'll need to have two players\ncontrolling one person each, at\nthe same time.
030-01	Controlling one person with the left Joy-Con and\nthe other with the right would be ideal.
031	Let's arrange it so that the {[0001|1a00]}{color[0400]}tagger\n{color[ffff]}{[0001|1900]}on the left-hand side {[0001|1a00]}{color[0400]}moves with{color[ffff]}{[0001|ffff]} {[0001|1a00]}{color[0400]}\n{color[ffff]}{[0001|ffff]}and {[0001|1a00]}{color[0400]}jumps with{color[ffff]}{[0001|ffff]} {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]}.
032	As for the {[0001|1a00]}{color[0400]}runner{color[ffff]}{[0001|ffff]} on the right-hand side,\nlet's control them with {[0001|1a00]}{color[0400]} {color[ffff]}{[0001|ffff]}and {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]}.
033	Now that we've got a plan, we\ncan program the {[0001|1a00]}{color[0400]}controls{color[ffff]}{[0001|ffff]}. Let's\nstart with the {[0001|1a00]}{color[0400]}tagger{color[ffff]}{[0001|ffff]}.
034	First, we'll need to call on the {[0001|1a00]}{color[0400]}Stick Nodon{color[ffff]}{[0001|ffff]}.
035	Select {[0001|1a00]}{color[0400]}Input{color[ffff]}{[0001|ffff]}.
036	Now pick {[0001|1a00]}{color[0400]}Stick Movement{color[ffff]}{[0001|ffff]}.
037	{[0001|1a00]}{color[0400]} {color[ffff]}{[0001|ffff]}next.
038	Select {[0001|1a00]}{color[0400]}Left/Right{color[ffff]}{[0001|ffff]}.
039	Boing!
040	More control stick wiggling, eh?\nBring it on!
041	Drag this Stick Nodon over to the left...
042	And link it up to the\n{[0001|1a00]}{color[0400]}Person Nodon's left/right port{color[ffff]}{[0001|ffff]}.
043	Good to be collaborating with you, Sticky!
044	Boing! Looking forward to it!
045	Now we'll call up another {[0001|1a00]}{color[0400]}Button Nodon{color[ffff]}{[0001|ffff]}.
046	Select {[0001|1a00]}{color[0400]}Input{color[ffff]}{[0001|ffff]}.
047	Now pick {[0001|1a00]}{color[0400]}Button Press{color[ffff]}{[0001|ffff]}.
048	Select {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]}.
049	Yo! Good to be here!
050	Oh, I just know you wanna\nsmash  like there's no tomorrow!\nI would! Smash smash smash!
052	Now move the Button Nodon over\nto the left side with the others...
053	Then connect it with the\n{[0001|1a00]}{color[0400]}Person Nodon's jump port{color[ffff]}{[0001|ffff]}.
054	OK! The tagger is now ready\nto receive controls!
055	Next up, let's change the\ncontrols for the {[0001|1a00]}{color[0400]}runner{color[ffff]}{[0001|ffff]}.
055000	Let's program the Nodon so that\nour runner moves with {[0001|1a00]}{color[0400]} {color[ffff]}{[0001|ffff]}and {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]}.
056	Select the {[0001|1a00]}{color[0400]}Stick Nodon{color[ffff]}{[0001|ffff]}...
057	And open the settings screen.
058	Set the {[0001|1a00]}{color[0400]}Which Stick?\n{color[ffff]}{[0001|ffff]}setting to {[0001|1a00]}{color[0400]}Right Stick{color[ffff]}{[0001|ffff]}.
059	Now that that's done, you'll\nbe able to control the runner\nwith {[0001|1a00]}{color[0400]} {color[ffff]}{[0001|ffff]}instead of .
060	Now close the settings screen...
061	And select the {[0001|1a00]}{color[0400]}Button Nodon{color[ffff]}{[0001|ffff]}.
062	Next, open the settings screen...
063	And {[0001|1a00]}{color[0400]}disable{color[ffff]}{[0001|ffff]} {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]}.
064	And let's {[0001|1a00]}{color[0400]}enable{color[ffff]}{[0001|ffff]} {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]}.
065	Now you'll be able\nto {[0001|1a00]}{color[0400]}jump with {color[ffff]}{[0001|ffff]}!
066	Close the settings screen...
067	And get ready to check out the results\nof your work on the game screen.
068	Let's check the {[0001|1a00]}{color[0400]}tagger{color[ffff]}{[0001|ffff]}'s\ncontrols first.
069	Try moving the tagger\nwith {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]} and {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]}.
070	Excellent!
071	Next, let's try out\nthe {[0001|1a00]}{color[0400]}runner{color[ffff]}{[0001|ffff]}.
072	Try moving the runner\nwith {[0001|1a00]}{color[0400]} {color[ffff]}{[0001|ffff]}and {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]}.
073	Now we're cooking!
074	Now we can control our runner\nand tagger separately!
075	Oops... Right now, the runner and the\ntagger look exactly the same. That could\nbe a problem.
076	Let's head back to the program screen\nand see if we can make it a little\n{[0001|1a00]}{color[0400]}easier to tell them apart{color[ffff]}{[0001|ffff]}.
077	Select the {[0001|1a00]}{color[0400]}tagger{color[ffff]}{[0001|ffff]}'s\nPerson Nodon.
078	And open up the\nsettings screen.
079	Change the {[0001|1a00]}{color[0400]}color{color[ffff]}{[0001|ffff]}!
080	Let's make the tagger\na nice and dangerous {[0001|1a00]}{color[0400]}red{color[ffff]}{[0001|ffff]}.
081	Close the settings screen.
082	Next, select the {[0001|1a00]}{color[0400]}runner{color[ffff]}{[0001|ffff]}'s\nPerson Nodon.
083	Open the settings screen.
084	Change the {[0001|1a00]}{color[0400]}color{color[ffff]}{[0001|ffff]}!
085	Let's make the runner a lovely, tranquil {[0001|1a00]}{color[0400]}light blue{color[ffff]}{[0001|ffff]}.
086	Close the settings screen.
087	OK! Let's head to the\ngame screen!
088	Aha! Both of the person\ncharacters changed!
089	Now we can easily tell the tagger\nand the runner apart. That's great!
089000	Can we make it even better? It's a game of tag,\nso we should make it so that something happens\nwhen the {[0001|1a00]}{color[0400]}tagger catches the runner{color[ffff]}{[0001|ffff]}.
090	Try {[0001|1a00]}{color[0400]}running the tagger\ninto the runner {color[ffff]}{[0001|ffff]}and see\nwhat happens. Use {[0001|1a00]}{color[0400]} {color[ffff]}{[0001|ffff]}and {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]}.
091	Uh-oh... Nothing happens!
092	But that's understandable. If we want to make\nsomething happen, we'll need to do some\n{[0001|1a00]}{color[0400]}programming{color[ffff]}{[0001|ffff]} first, right? Right!
093	Let's make it so the runner is {[0001|1a00]}{color[0400]}destroyed{color[ffff]}{[0001|ffff]}\nwhen they collide with the tagger!
094	To the program screen!
095	First, select the {[0001|1a00]}{color[0400]}tagger{color[ffff]}{[0001|ffff]}'s\nPerson Nodon.
096	And open up the\nsettings screen.
097	Enable {[0001|1a00]}{color[0400]}Destructive\n{color[ffff]}{[0001|ffff]}under {[0001|1a00]}{color[0400]}Properties{color[ffff]}{[0001|ffff]}.
098	Close the settings screen.
099	Next, select the {[0001|1a00]}{color[0400]}runner{color[ffff]}{[0001|ffff]}'s\nPerson Nodon.
100	Open the settings screen.
101	And enable {[0001|1a00]}{color[0400]}Destructible{color[ffff]}{[0001|ffff]}\nunder {[0001|1a00]}{color[0400]}Properties{color[ffff]}{[0001|ffff]}.
102	Close the settings screen.
103	Now, if the {[0001|1a00]}{color[0400]}tagger{color[ffff]}{[0001|ffff]} comes into contact\nwith the runner, {[0001|1a00]}{color[0400]}the runner will be\nsmashed to smithereens{color[ffff]}{[0001|ffff]}!
104	I can't wait to test this out on\nthe game screen. Let's go!
105	Use {[0001|1a00]}{color[0400]} {color[ffff]}{[0001|ffff]}and {[0001|1a00]}{color[0400]} {color[ffff]}{[0001|ffff]}to move the\n{[0001|1a00]}{color[0400]}tagger into the runner{color[ffff]}{[0001|ffff]}.
106	That was so cool! We made it so\nthat the {[0001|1a00]}{color[0400]}tagger can destroy the runner{color[ffff]}{[0001|ffff]}!
106-01	{[0001|1a00]}{color[0400]}If the runner breaks{color[ffff]}{[0001|ffff]}, that means the\ntagger caught the runner. In other words,\n{[0001|1a00]}{color[0400]}the tagger won{color[ffff]}{[0001|ffff]}!
107	Our game of tag is now a true,\ntwo-player game! Wahoo!
108	If you've caught the runner and you want to\nplay again from the start, then you can press\nthe {[0001|1a00]}{color[0400]}Retry button {color[ffff]}{[0001|ffff]}for a do-over.
108-01	This way you can start the\ngame again from the beginning!
109	If you've tested that out enough, let's\nhead back over to the program screen.
110	OK. Everything seems to be in order...
111	Step 4 is clear!
112a	Congratulations!
112b	Nice job, peeps!
112c	Boing!
112d	Well done!
113	In this step, we made a tagger and\nturned our game of tag into an\nhonest-to-goodness two-player game.
113-01	Step by step, our game is coming\ninto focus. Pretty exciting, eh?
113-02	But it seems a little bit one-sided at the\nmoment, don't you think? The tagger\nkind of has an advantage...
114	So in the next step, we'll be\n{[0001|1a00]}{color[0400]}adding in a feature{color[ffff]}{[0001|ffff]} to even up\nthe odds a bit.
115	See you at the next step soon!
Lesson_Chase_04.msbt
000	Hello! Good to see you!
001	We're about to begin the\nsecond half of Lesson 1.
002	Let's quickly summarize\nwhat we've done so far.
003	We made it so that the {[0001|1a00]}{color[0400]}runner\n{color[ffff]}{[0001|ffff]}can be moved with {[0001|1a00]}{color[0400]} {color[ffff]}{[0001|ffff]}and {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]}.\nTry it out!
004	Similarly, we made it so that the\n{color[0400]}{[0001|1a00]}tagger{[0001|ffff]}{color[ffff]} is moved with {[0001|1a00]}{color[0400]} {color[ffff]}{[0001|ffff]}and {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]}.\nGive that a try too!
005	Try {[0001|1a00]}{color[0400]}moving the tagger into the runner{color[ffff]}{[0001|ffff]}...
006	As you just saw, we also made\nit so that the runner breaks up\nwhen colliding with the tagger.
007	That's already enough for a game of tag...
008	But it seems like the tagger\nis a little too strong, doesn't it?
009	Right now, there's no way\nfor the tagger to lose.\nThat's not really fair!
010	How about if we make things more interesting by\nadding some {[0001|1a00]}{color[0400]}rolling balls{color[ffff]}{[0001|ffff]} to the level? And what if\nthe balls {[0001|1a00]}{color[0400]}can destroy both the runner and tagger{color[ffff]}{[0001|ffff]}?
010-01	Our game of tag is about to reach\na whole new level of excitement!\nA whole new set of thrills!
011	Let's head over to the program\nscreen to get started.
012	So... First, the rolling balls.
013	We'll need a new type of Nodon,\na {[0001|1a00]}{color[0400]}Launch-Object Nodon{color[ffff]}{[0001|ffff]}.
014	Select {[0001|1a00]}{color[0400]}Objects{color[ffff]}{[0001|ffff]}...
015	{[0001|1a00]}{color[0400]}Launch/Destroy/Attract{color[ffff]}{[0001|ffff]}...
016	{[0001|1a00]}{color[0400]}Launch Objects{color[ffff]}{[0001|ffff]}...
017	Then select {[0001|1a00]}{color[0400]}10{color[ffff]}{[0001|ffff]}.
018	Gaah!\nWho's calling me?!
019	You need me to throw things?\nIS THAT WHAT YOU WANT?!
020	You want me to help build your game?!\nIS THAT IT?! GAAAAH!
021	Wait. You're the game programmer, aren't you?\nWHY DIDN'T YOU SAY SO?!
022	Of course I'll help!\nI love making stuff!\nJust tell me what you want!
023	Introducing the {[0001|1a00]}{color[0400]}Launch-Object Nodon{color[ffff]}{[0001|ffff]}!\nHe's full of hot air! And objects...
025	OK, let's get serious and drag our\n{[0001|1a00]}{color[0400]}Launch-Object Nodon{color[ffff]}{[0001|ffff]} to the upper\npart of the level.
026	Now let's confirm this over\non the game screen...
027	Look! A shower of spheres!\nA blizzard of balls!
028	That's exactly what the\n{[0001|1a00]}{color[0400]}Launch-Object Nodon\n{color[ffff]}{[0001|ffff]}can do for you.
add000	But... The balls might\nbe a bit too big, no?
add001	We can do something about\nthat on the program screen.
add002	Select the {[0001|1a00]}{color[0400]}Launch-Object Nodon{color[ffff]}{[0001|ffff]}...
add003	Shrink it a little so that\nit fits in the blue frame...
add004	OK!
add005	Let's take a quick peek\nat how this will work.
add006	There you go!\nThe balls are smaller.
029	However! I think we could have\nthem tumbling around this level\nin an even more exciting way.
030	Let's put an extra {[0001|1a00]}{color[0400]}platform{color[ffff]}{[0001|ffff]} above\nour runner and tagger.
031	OK! To the program screen!
032	First, select this {[0001|1a00]}{color[0400]}Object Nodon{color[ffff]}{[0001|ffff]}...
033	Copy it!
034	Take the copied Object Nodon and\nmove it to the upper right.
035	And rotate!
036	Yes! Brilliant!
037	We'll need one over on the left\nside too, so let's handle that now.
038	Select the {[0001|1a00]}{color[0400]}Object Nodon{color[ffff]}{[0001|ffff]} again...
039	And Copy!
040	Now take it over to the upper left.
041	And...rotate!
042	Good job!
043	Let's check the game screen.
044	Now our tagger and runner\nhave a little shelter from\nthe torrent above.
053	Hmmm... I think the torrent is a bit too\n{[0001|1a00]}{color[0400]}powerful{color[ffff]}{[0001|ffff]} right now. The balls aren't\nrolling right, are they?
054	We can adjust the power over\non the program screen.
055	Select the {[0001|1a00]}{color[0400]}Launch-Object Nodon{color[ffff]}{[0001|ffff]}.
056	And open up the settings screen.
057	Set the {[0001|1a00]}{color[0400]}Launch Speed {color[ffff]}{[0001|ffff]}to {[0001|1a00]}{color[0400]}4.00{color[ffff]}{[0001|ffff]}.
058	Close the settings screen...
059	And check the game screen!
060	That's much better. We've\ntamed the torrent now.
061	But, see how each ball breaks\nwhen it hits the next one?
061000	It looks like we'll need to make {[0001|1a00]}{color[0400]}the{color[ffff]}{[0001|ffff]}\n{[0001|1a00]}{color[0400]}interval between each ball launch\n{color[ffff]}{[0001|ffff]}a bit longer, right?
062	Time for some more programming!
063	Select the {[0001|1a00]}{color[0400]}Launch-Object Nodon{color[ffff]}{[0001|ffff]}.
064	And open the settings screen.
065	Set {[0001|1a00]}{color[0400]}Launch Interval (seconds){color[ffff]}{[0001|ffff]} to {[0001|1a00]}{color[0400]}7.00{color[ffff]}{[0001|ffff]}.
065-01	Now the {[0001|1a00]}{color[0400]}interval{color[ffff]}{[0001|ffff]} between\neach ball launch will be\nextended to {[0001|1a00]}{color[0400]}seven seconds{color[ffff]}{[0001|ffff]}.
066	Close the settings screen.
067	Let's see what's changed...
067000	Since we {[0001|1a00]}{color[0400]}extended the launch interval{color[ffff]}{[0001|ffff]},\nwe have to wait a little longer for the\nfirst launch.
067001	Just a sec...
068	Oh! There we go!
068000	With that fix, we've got the balls\nrolling the way we want them to.
069	I bet you're thinking, "We need\nsome rolling balls over on the\nother side now." Am I right?
070	Let's take care of that\non the program screen!
071	Select the {[0001|1a00]}{color[0400]}Launch-Object Nodon{color[ffff]}{[0001|ffff]}.
072	And Copy!
073	Huh? I'm needed again!\nI'M RARIN' TO GO! GAAAH!
074	I got you!\nBLAMMO!
075	Place the new {[0001|1a00]}{color[0400]}Launch-Object Nodon\n{color[ffff]}{[0001|ffff]}over on the left side.
075-01	Time to set it so that balls\ncome out on the {[0001|1a00]}{color[0400]}left{color[ffff]}{[0001|ffff]} side.
076	Open the settings screen.
077	Now select {[0001|1a00]}{color[0400]}Launch Direction{color[ffff]}{[0001|ffff]}.
078	Then select {[0001|1a00]}{color[0400]}X-{color[ffff]}{[0001|ffff]}.
079	Close the settings screen.
080	Time to check it out\non the game screen!
080000	Wait for it... Wait for it...
081	Now our shower of spheres comes\nfrom both the left and the right!
082	So, our rolling {[0001|1a00]}{color[0400]}balls{color[ffff]}{[0001|ffff]} are complete.\nAnd we have them {[0001|1a00]}{color[0400]}breaking on\nimpact{color[ffff]}{[0001|ffff]}, just like they should.
083	But...there's still something\nwe need to fix.
084	Try moving the {[0001|1a00]}{color[0400]}tagger{color[ffff]}{[0001|ffff]} with {[0001|1a00]}{color[0400]} {color[ffff]}{[0001|ffff]}and {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]}.\nSee what happens {[0001|1a00]}{color[0400]}when they come\ninto contact with a ball{color[ffff]}{[0001|ffff]}...
085	As you see, our tagger {[0001|1a00]}{color[0400]}isn't\ndamaged {color[ffff]}{[0001|ffff]}when the ball hits!
086	Let's fix it so that the {[0001|1a00]}{color[0400]}tagger{color[ffff]}{[0001|ffff]}\n{[0001|1a00]}{color[0400]}breaks{color[ffff]}{[0001|ffff]} when the ball hits.\nProgramming time!
087	Select the tagger's\nPerson Nodon...
088	Open the settings screen.
089	{[0001|1a00]}{color[0400]}Enable Destructible{color[ffff]}{[0001|ffff]}\nunder {[0001|1a00]}Properties{[0001|ffff]}.
090	Close the settings screen...
091	And switch to the game screen.
092	Now try walking the\ntagger into a ball.
093	Now the tagger breaks\nwhen the balls hit! Great!
093-01	Imagine! The tagger pursuing the\nrunner through a hail of tumbling\nballs! The drama! The peril!
093-02	We've got the makings\nof a truly thrilling contest!
102	When you're done checking it out,\nI'll return to the program screen.
103	And... Let's see...
104	Step 5 is clear!
105a	BLAMMO!
105b	GREAT JOB!
106	In this step, we used a\n{[0001|1a00]}{color[0400]}Launch-Object Nodon{color[ffff]}{[0001|ffff]} to\nliven up our game of tag.
107	In the next step, we'll make it\nso the game can be played\nagain and again.
108	See you in the next step!\nLooking forward to it!
Lesson_Chase_05.msbt
000	You made it! Great!
000-01	We're getting pretty close to\ncompleting the construction of\nour game of tag.
000-02	Let's refresh our memories\nabout progress so far.
000-03	Now, let me see...
001	In the last step, we really\nupped the danger by adding\nsome {[0001|1a00]}{color[0400]}destructive rolling balls{color[ffff]}{[0001|ffff]}.
006	We've done a lot already. In fact,\nour game is almost finished!
007	This time, we're going to make it a\nlittle bit easier to play. You could say\nwe're adding a quality-of-life upgrade!
008	Now, if the tagger or the runner breaks...
009	the player needs to press\nthe {[0001|1a00]}{color[0400]}Retry{color[ffff]}{[0001|ffff]} button themselves\nto play again.
010	It seems like a lot of hard work\nwhen you're supposed to be having\nfun, don't you think?
011	To make life easier, how about we add an\n{[0001|1a00]}{color[0400]}automatic retry{color[ffff]}{[0001|ffff]} to the game? If the tagger or\nthe runner breaks, a retry will be triggered.
012	OK! To the program screen!
013	First, we need to call a {[0001|1a00]}{color[0400]}Nodon that\nwatches out for things breaking{color[ffff]}{[0001|ffff]}.
014	Namely, the {[0001|1a00]}{color[0400]}Object-Break Nodon{color[ffff]}{[0001|ffff]}!
015	Select {[0001|1a00]}{color[0400]}Input{color[ffff]}{[0001|ffff]}...
016	{[0001|1a00]}{color[0400]}State Change{color[ffff]}{[0001|ffff]}...
017	Now select {[0001|1a00]}{color[0400]}Object Break{color[ffff]}{[0001|ffff]}.
017-01	Hi, honey! Something I\ncan help you with?
018	What's that you say, hon? There's\nsomething you'd like to ask me?\nDon't be shy, tee-hee-hee!
019	That's right! If the tagger\nor the runner breaks, we'd like\nyou to let us know about it.
020	I'll take care of it, sugar. Don't\nyou worry about a thing!
021	If that's what you're looking for, why don'tcha\nopen up the settings screen and take a look\nat my {[0001|1a00]}{color[0400]}Check What?{color[ffff]}{[0001|ffff]} setting?
022	Let's try that! Open up the\n{[0001|1a00]}{color[0400]}Object-Break Nodon{color[ffff]}{[0001|ffff]}'s\nsettings screen.
023	Then open up\n{[0001|1a00]}{color[0400]}Check What?{color[ffff]}{[0001|ffff]},\nlike the Nodon said.
024	This screen is where you can set\n{[0001|1a00]}{color[0400]}which breakages the Object-Break\nNodon watches out for{color[ffff]}{[0001|ffff]}.
025	{[0001|1a00]}{color[0400]}Disable{color[ffff]}{[0001|ffff]} {[0001|1a00]}{color[0400]}Box{color[ffff]}{[0001|ffff]}, {[0001|1a00]}{color[0400]}Cylinder{color[ffff]}{[0001|ffff]}, and {[0001|1a00]}{color[0400]}Sphere{color[ffff]}{[0001|ffff]}...
026	Then {[0001|1a00]}{color[0400]}enable Person{color[ffff]}{[0001|ffff]}!
027	Now close this screen...
028	Then close the settings screen.
029	That's the way to do it, honey!\nI'm all set now.
030	I'll keep a {[0001|1a00]}{color[0400]}lookout for a person breaking{color[ffff]}{[0001|ffff]}.\nIf that happens, I'll be sure to let you\nknow about it.
030-01	Don't worry about it, hon. I got you covered.\nYou just focus on what you do best...\nprogramming!
031	OK! Drag the Object-Break Nodon\nover to the left...
032	Next, we'll need another Nodon, one that\nmakes the automatic retry happen.
033	Namely, the {[0001|1a00]}{color[0400]}Retry Nodon{color[ffff]}{[0001|ffff]}!
034	Go to {[0001|1a00]}{color[0400]}Output{color[ffff]}{[0001|ffff]}.
035	Now {[0001|1a00]}{color[0400]}Retry/End/Swap{color[ffff]}{[0001|ffff]}.
036	Select {[0001|1a00]}{color[0400]}Retry Game{color[ffff]}{[0001|ffff]}.
036-01	Oh, dearie me...
037	Oh, if only I had my time to do over again...
038	Hey, old timer! What's up?
039	It was only yesterday... My backside was itchy,\nand I thought I was on my own, so I gave it a\ngood scratch.
039-01	But when I turned around, all the\nother Nodon were there looking\nat me...
040	Oh, I wish I had a do-over for that...
042	Oof... Awkward.\nErm, let's put our friend\nover on the right.
043	Then link it to the {[0001|1a00]}{color[0400]}Object-Break Nodon{color[ffff]}{[0001|ffff]}.
044	OK! Now {[0001|1a00]}{color[0400]}the game will restart\nevery time a character is destroyed{color[ffff]}{[0001|ffff]}.
045	Now let's check it...
046	Try to {[0001|1a00]}{color[0400]}destroy{color[ffff]}{[0001|ffff]} either the\n{[0001|1a00]}{color[0400]}runner{color[ffff]}{[0001|ffff]} or the{[0001|1a00]}{color[0400]} tagger{color[ffff]}{[0001|ffff]}.
047	As you saw, if one of\nthe characters is destroyed,\nthe game {[0001|1a00]}{color[0400]}automatically restarts{color[ffff]}{[0001|ffff]}.
048	But... Don't you think the interval \nbetween the character breaking and\nthe retry is a little short, maybe?
049	How about we slow it down a bit?
050	To the program screen! Let's {[0001|1a00]}{color[0400]}extend\nthe interval {color[ffff]}{[0001|ffff]}to give players a moment\nto catch their breath.
051	First, select the {[0001|1a00]}{color[0400]}connection{color[ffff]}{[0001|ffff]}\nbetween the {color[0400]}{[0001|1a00]}Retry Nodon{[0001|ffff]}{color[ffff]} and the\n{[0001|1a00]}{color[0400]}Object-Break Nodon{color[ffff]}{[0001|ffff]}.
052	Press the cross underneath\nit to {[0001|1a00]}{color[0400]}delete the connection{color[ffff]}{[0001|ffff]}.
053	And here's where we'll\ncall up a {color[0400]}{[0001|1a00]}Timer Nodon{[0001|ffff]}{color[ffff]}.
054	Select {[0001|1a00]}{color[0400]}Middle{color[ffff]}{[0001|ffff]}...
055	Then {[0001|1a00]}{color[0400]}Timer{color[ffff]}{[0001|ffff]}...
055-01	Tsk tsk...
056	You need my help? I hope you\naren't wasting my time!
057	We wouldn't dream of it! We just need\nsome of your programming expertise.
058	Oh really? Well, why\ndidn't you say so?
059	I'll help... But it causes me no\nshortage of headaches when\npeople don't make appointments.
060	Naturally, I want to help out, but what if I'd have\nbeen double-booked? I can hardly tick when I'm\nsupposed to be tocking, can I?
061	It always pays to have\none's schedule in order!
062	Um, sorry?
063	Well, as long as we're all\nin the same time zone...
064	(Let's move on...)
065	Connect the {[0001|1a00]}{color[0400]}Timer Nodon{color[ffff]}{[0001|ffff]} to the\n{[0001|1a00]}{color[0400]}Object-Break Nodon{color[ffff]}{[0001|ffff]}.
066	Then, connect the {[0001|1a00]}{color[0400]}Timer Nodon{color[ffff]}{[0001|ffff]}\nto the {[0001|1a00]}{color[0400]}Retry Nodon{color[ffff]}{[0001|ffff]}.
067	Now we'll have {[0001|1a00]}{color[0400]}a longer interval\n{color[ffff]}{[0001|ffff]}between a character breaking\nand the retry. Neat!
068	Let's take a look at\nthe game screen.
069	{[0001|1a00]}{color[0400]}Smash{color[ffff]}{[0001|ffff]} either the {[0001|1a00]}{color[0400]}runner or the\ntagger{color[ffff]}{[0001|ffff]} and see what happens.
070	There's {color[0400]}{[0001|1a00]}a longer interval{[0001|ffff]}{color[ffff]} between the\nbreakage and the retry now, see?
070-01	Now players will have a little\nbreathing room between matches.
071	If you're done checking that out,\nlet's head back to the program screen.
072	OK... So...
073	Step 6 is complete!
074a	Good job, honey!
074b	Timely execution!
074c	No need to redo this!
075-01	The next step will be the final one, and our\ngame of tag will be complete at last.
076	In the final step, I'll show you how\nto add some {[0201]}\nmagic to your game!
077	See you in the last step\nthen! Don't be a stranger!
Lesson_Chase_06.msbt
000	Hey, {[0201]}!\nCan you feel the excitement in the air?
001	This step will be the last one.\nAnd then our game of tag will be complete!
002	But first, let's recap everything\nwe've done so far.
003	We fixed it so that the {[0001|1a00]}{color[0400]}runner{color[ffff]}{[0001|ffff]} is\ncontrolled with {[0001|1a00]}{color[0400]} {color[ffff]}{[0001|ffff]}and {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]}. Likewise,\nthe {[0001|1a00]}{color[0400]}tagger{color[ffff]}{[0001|ffff]} is controlled with {[0001|1a00]}{color[0400]} {color[ffff]}{[0001|ffff]}and {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]}.
004	And we made it so that it's game over\nwhen a {[0001|1a00]}{color[0400]}ball{color[ffff]}{[0001|ffff]} hits either player.
005	It's fair to say we've got pretty much\neverything we need for an awesome\ngame of tag already! However...
006	A final touch is still lacking. And that's a\nsprinkling of color from your very own hand, \n{[0201]}!
007	OK! To the program screen!
007-01	So, next...
008	we'll harness your inspiration and creativity\nto change the {[0001|1a00]}{color[0400]}color of the level{color[ffff]}{[0001|ffff]}. Are you ready\nfor that, {[0201]}?
010	To start off, let's select\nthis {[0001|1a00]}{color[0400]}Object Nodon{color[ffff]}{[0001|ffff]}...
011	and open the settings screen.
012	Then, open the {[0001|1a00]}{color[0400]}Color{color[ffff]}{[0001|ffff]} screen.
013	Here's where you can change\nup the color of an object.
014	At the moment, this object is {[0001|1a00]}{color[0400]}brown{color[ffff]}{[0001|ffff]}.
015	But how about making it {[0001|1a00]}{color[0400]}black{color[ffff]}{[0001|ffff]} instead?
016	Close the settings screen.
017	And check it on the game screen.
018	Ta-da! We changed the color of\nthe middle platform to {[0001|1a00]}{color[0400]}black{color[ffff]}{[0001|ffff]}!
019	Now what I'd like you to do is change the colors\nof the other platforms {[0001|1a00]}{color[0400]}to whatever you'd like{color[ffff]}{[0001|ffff]}.\nExpress yourself! Let the hues flow out of you!
020	So, back to the program screen...
021	It's your time to shine, {[0201]}!\nRun wild with a rainbow of color!
022	You're going to {[0001|1a00]}{color[0400]}change the color of every\nsingle Object Nodon{color[ffff]}{[0001|ffff]} to whatever you like...
023	So start thinking about how\nyou'd like to paint the town\nin shades of {[0201]}!
023-01	To make things easier, I'll make it so\nthat {[0001|1a00]}{color[0400]}you can move the program screen's\nview{color[ffff]}{[0001|ffff]} around...
023-02	AND...you can use this button\nhere to {[0001|1a00]}{color[0400]}undo your last action{color[ffff]}{[0001|ffff]}!
024	When your creative endeavors are\ncomplete, let me know.
025	Just press {[0001|1a00]}{color[0400]}Done{color[ffff]}{[0001|ffff]} when you have\neverything the way you want it.
026	Ready, steady...
027	Start programming!
027000	Oh! Done already?
027001	Let's take a look at the finished article,\nyour first ever completed game!
028	Oh! What style! What flair!\nColor me impressed!
028001	You didn't change anything!\nIt was perfect as it was, huh?
029	OK!
030	With that, I can declare that development\nof this game is complete!
031	And what a magnificent\ngame it is!
032	I feel like a spoilsport interrupting this\nmomentous occasion, but if you could head\nback to the program screen for a moment...
098	You've come a long way\nalready, {[0201]}.
099	We've got the makings of a genius\nprogrammer in you—there's no\ndoubt about it!
100	Now all that remains is to have our game of tag\ntake a place of pride in the {[0001|1a00]}{color[0400]}Game List{color[ffff]}{[0001|ffff]}...
101	Back to the menu!
Reset	Making a game, eh?\nThat's the sort of thing\nI'd do, if I could do it all over.
Timer	For a first game, it's great.\nAnd right on schedule too!
Break	Well, just look at you go!
Gen	Good job...\nI SAID, GOOD JOB!
Camera	{[c903]}{[0201]}, darling...\nWhat can I say?\nIt's dazzling!
Stick	Boing!
Human	That's what I call teamwork, peeps!
Button	Every journey starts\nwith a single...BANG!
Lesson_Intro.msbt
000	Hey, it looks like you need some help!
001	What's with the weird look?\nOh! Yeah. Talking dot. Kinda\nstrange. Got it.
002	I should introduce myself.\nYou can call me {[0001|1a00]}{color[0400]}Bob{color[ffff]}{[0001|ffff]}!\nGlad that's out of the way...
003	Let me just say, I understand\nyour frustration. You can't\nfinish this simple game, right?
004	You can't jump by pressing ,\nso you can't reach the apple...
005	But there's a good reason for all that.\nYou see, the thing is...
006	This game is still under construction!
007	The way it is now, you'll never\nbeat the game, no matter how\nmany times you try to jump.
008	In situations like this, I like to say,\n"Don't get mad—get programming!"\nBut...I'm getting ahead of myself.
009	We need to do a deep dive into this\ngame to wrap things up. We need to\npeek {[0001|1a00]}{color[0400]}behind the curtain{color[ffff]}{[0001|ffff]}, so to speak.
010	So, uh...why don't we do that right now?
011	Could you press this?
012	Oooh, if it isn't our Bob!\nGood to see you, dear!
013	Heya, Bob!
014	Woo-hoo! Hi, Bob!\nBoing!
015	Welcome to the "inside" of the\ngame, {[0201]}!
016	So...you want to know about\nour friends here?
017	These beings are called {[0001|1a00]}{color[0400]}Nodon{color[ffff]}{[0001|ffff]}.
018	There are all kinds of different\n{[0001|1a00]}{color[0400]}Nodon{color[ffff]}{[0001|ffff]} living inside your\nNintendo Switch console.
019	If you call up Nodon on to this\nhere {[0001|1a00]}{color[0400]}program screen{color[ffff]}{[0001|ffff]}, then\nconnect them together...
020	And POW! You're actually altering\nthe game's {[0001|1a00]}{color[0400]}programming{color[ffff]}{[0001|ffff]}!
021	This place where we use\nNodon to do {[0001|1a00]}{color[0400]}programming {color[ffff]}{[0001|ffff]}has\na nifty little name. It's called...
022	the {[0001|1a00]}{color[0400]}Game Builder Garage{color[ffff]}{[0001|ffff]}!
024	That little fragment of a game you\nplayed earlier was {[0001|1a00]}{color[0400]}programmed{color[ffff]}{[0001|ffff]}\nin the Game Builder Garage.
025	But let's get down to business.\nWe'll use the Game Builder Garage\nto finish this game.
026	Ummm...\nWhat's with the blank look,\n{[0201]}?
027	You're going to use {[0001|1a00]}{color[0400]}programming{color[ffff]}{[0001|ffff]}\nto finish building this game!
028	It's not as daunting as it might\nsound! All we need to do is {[0001|1a00]}{color[0400]}make\nit so pressing  lets you jump{color[ffff]}{[0001|ffff]}.
029	See the {[0001|1a00]}{color[0400]}output port{color[ffff]}{[0001|ffff]} on this\n{[0001|1a00]}{color[0400]}Button Nodon{color[ffff]}{[0001|ffff]}?
030	Just connect it to the {[0001|1a00]}{color[0400]}jump port{color[ffff]}{[0001|ffff]}\non the {[0001|1a00]}{color[0400]}Person Nodon{color[ffff]}{[0001|ffff]}.
030000	Heyo!\nI'm {[0001|1a00]}{color[0400]}Button Nodon{color[ffff]}{[0001|ffff]}!
030000-01	I know exactly what you're gonna do!\nYou're gonna push the button, like pow!\nI'm kind of a genius about stuff like this.
030001	Hi there! I'm a {[0001|1a00]}{color[0400]}Person Nodon{color[ffff]}{[0001|ffff]}!\nNice to meet you!
030002	You saw the little character on the\ngame screen, right? I put that character\nthere, and I help it move around!
031_t	OK! I'll give you some directions.\n{[0001|1a00]}{color[0400]}Drag your finger over the screen{color[ffff]}{[0001|ffff]}\nto make the connection.
031_s	Now... {[0001|1a00]}{color[0400]}Hold down , and move the\ncursor with {color[ffff]}{[0001|ffff]} the way I show you,\nand we can make this connection.
031_jr	OK! {[0001|1a00]}{color[0400]}Hold down , and move the pointer\nby tilting the right Joy-Con controller\nto make the connection.{color[ffff]}{[0001|ffff]}
031_jl	OK! {[0001|1a00]}{color[0400]}Hold down , and move the pointer\nby tilting the left Joy-Con controller\nto make the connection.{color[ffff]}{[0001|ffff]}
031_m	OK! {[0001|1a00]}{color[0400]}Hold down the mouse button,\nand move the cursor{color[ffff]}{[0001|ffff]} following my\nmovements to {[0001|1a00]}{color[0400]}make the connection{color[ffff]}{[0001|ffff]}.
032	And presto! We've made it so\n{[0001|1a00]}{color[0400]}pressing  makes the character jump{color[ffff]}{[0001|ffff]}.
033	Now we should be able to\ncomplete the game!
034	Why don't we head back to\nthe game screen and give it a try?
035	You did it! Great job!
036	You got to finish building a game\nwith a bit of programming!
036-01	Well then, why don't we pop\nback to the program screen?
037	So, what do you think?
038	It's fun learning how to\nprogram a game, right?
039	Actually, I think you might have\na real knack for this,\n{[0201]}.
040	How about it? Do you want\nto program some more games?
041	If you do, then maybe you'd be interested\nin your new pal Bob's {[0001|1a00]}{color[0400]}interactive lessons{color[ffff]}{[0001|ffff]}?
042	Like just now, you'd go through\nprogramming all kinds of games\nwith me as your {[0001|1a00]}{color[0400]}guide{color[ffff]}{[0001|ffff]}.
043	And by the end...you'll have what\nyou need to {[0001|1a00]}{color[0400]}make your own game{color[ffff]}{[0001|ffff]},\nall by yourself!
044	So how about it? Do you feel like\ntaking some of Bob's patented\n{[0001|1a00]}{color[0400]}interactive lessons{color[ffff]}{[0001|ffff]}?
044000	Sure!
044001	Nah...
045	Perfect!
046	In that case, I've got an awesome\nbunch of games for you.
047	Let's take a look!
048	But this can't be! Leaving your talents\nunearthed would be a huge loss to\nthe world of programming!
Lesson_SecretRoom_00.msbt
000	Hello, {[0201]}! \nI've been expecting you!
001	Come in, come in!\nAnd welcome...to {[0001|1a00]}{color[0400]}Mystery Room{color[ffff]}{[0001|ffff]}!
002	Now, {[0001|1a00]}{color[0400]}Mystery Room {color[ffff]}{[0001|ffff]}is a little different\nthan the other games we've done.
003	Time to get your thinking cap on,\nbecause this one's going to be\nall about puzzle-solving.
004	This will also be our first\nforay into {[0001|1a00]}{color[0400]}3D space{color[ffff]}{[0001|ffff]}.
005	Our room will be adorned with\nall sorts of curious objects.
006	So our sleuth will need to comb\nthe place looking for clues.
007	And if they can solve the puzzle,\nthey just might get their hands\non the hidden treasure!
008	Doesn't that sound exciting?\nI know I'm already raring to go!
009	Let's open the door and see\nwhat this "mystery room" is\nall about, eh?
09-01	We're going to start off by\nbuilding the room itself, the main\nsetting for our puzzle game.
010	Switch us over to {[0001|1a00]}{color[0400]}overhead view{color[ffff]}{[0001|ffff]},\nwould you?
011	Perfect!
013	Let's start off by making\nsomething any good room\nshould have: a {[0001|1a00]}{color[0400]}floor{color[ffff]}{[0001|ffff]}.
014	But wait...
015	There's a floor right there on\nthe game screen, isn't there?
016	Hah! It looks like we've already\nstumbled upon the {[0001|1a00]}{color[0400]}Mystery Room's\nfirst mystery{color[ffff]}{[0001|ffff]}!
017	OK, let's call up a {[0001|1a00]}{color[0400]}box {color[ffff]}{[0001|ffff]}Object\nNodon and make it bigger.
018	Open the settings now.
019	Under {[0001|1a00]}Properties{[0001|ffff]}, you'll want to\nenable {[0001|1a00]}{color[0400]}Visible{color[ffff]}{[0001|ffff]} and {[0001|1a00]}{color[0400]}Solid{color[ffff]}{[0001|ffff]}.
020	Make the {[0001|1a00]}color{[0001|ffff]}\na nice {[0001|1a00]}{color[0400]}lime green{color[ffff]}{[0001|ffff]}.
021	OK, time to close\nthe settings.
022	"You step into the peculiar room,\nthe air charged with a strange\nand otherworldly quality..."
023	Yup. Don't know about\nmoral support, but I'm pretty\ngood at holding the floor up!
024	We'll also make another floor\nright next to that one.
025	{[0001|1a00]}{color[0400]}Copy{color[ffff]}{[0001|ffff]} the Object Nodon,\nand move it over.
026	Now open the settings.
027	Set the {[0001|1a00]}color{[0001|ffff]} to {[0001|1a00]}{color[0400]}black{color[ffff]}{[0001|ffff]}.
028	Great! Let's close the settings.
029	"Somewhere in this room,\nshrouded in darkness,\nmust lie a hidden alcove..."
030	Howdy! I'm the hidden alcove's floor,\nbut I reckon I'll keep myself hidden until\nthe mystery's all solved.
031	Did you hear that?\nA hidden alcove!
032	That's the objective of this\ngame: to solve the puzzle and\n{[0001|1a00]}{color[0400]}find the hidden alcove{color[ffff]}{[0001|ffff]}.
032-01	And the black floor we placed\nto the side is the floor of this\nvery alcove.
033	OK, let's take a look at the\nfloors we just made.
034	Looks like each floor is\na different color, eh?
035	The lime green floor is where we'll\nbe doing our puzzle-solving.
036	And the black floor is reserved\nfor our hidden space.
040	I think our detective is itching\nto get started, so let's go ahead\nand put them on this floor.
042	Can you call up a {[0001|1a00]}{color[0400]}Person Nodon{color[ffff]}{[0001|ffff]}?
043	"The map your dear friend\nentrusted to you has led you\nto this very room..."
044	I'll get to the bottom of\nthis mystery, I swear!
045	Go ahead and switch\nover to {[0001|1a00]}{color[0400]}side view{color[ffff]}{[0001|ffff]}.
046	Now slide the Person Nodon\nonto the floor.
047	Next, open the settings.
048	And set the {[0001|1a00]}Action{[0001|ffff]} to {[0001|1a00]}{color[0400]}Punch{color[ffff]}{[0001|ffff]}.
049	Great!\nNow close the settings.
050	In this game, the {[0001|1a00]}{color[0400]}Punch {color[ffff]}{[0001|ffff]}action is\ngoing to play a very important role.
051	OK, let's go back to\n{[0001|1a00]}{color[0400]}overhead view{color[ffff]}{[0001|ffff]}.
052	Now, if we want to be able to scour the room\nfor clues, the player needs to be able to\n{[0001|1a00]}{color[0400]}move forward, backward, left, and right{color[ffff]}{[0001|ffff]}.
054	Call up a {color[0400]}{[0001|1a00]}Stick Nodon{[0001|ffff]}{color[ffff]}\nfor {[0001|1a00]}{color[0400]} Up/Down{color[ffff]}{[0001|ffff]} and\nplop it in the blue frame.
055	Now call up a {color[0400]}{[0001|1a00]}Stick Nodon{[0001|ffff]}{color[ffff]}\nfor {[0001|1a00]}{color[0400]} Left/Right{color[ffff]}{[0001|ffff]} and put it\njust underneath that.
056	Connect the {[0001|1a00]}{color[0400]}up/down{color[ffff]}{[0001|ffff]} Stick Nodon to the\nPerson Nodon's {[0001|1a00]}{color[0400]}forward/backward port{color[ffff]}{[0001|ffff]}.
057	Then connect the {[0001|1a00]}{color[0400]}left/right{color[ffff]}{[0001|ffff]} Stick Nodon\nto the Person Nodon's {[0001|1a00]}{color[0400]}left/right port{color[ffff]}{[0001|ffff]}.
058	"You do a quick walk of the room,\ntaking in all of its subtleties..."
059	Wiggle me around, and you can\nreally start going places!
060	Now we'll work on setting up\nthe ability to {[0001|1a00]}{color[0400]}punch{color[ffff]}{[0001|ffff]}.
061	Call up a {[0001|1a00]}{color[0400]}Button Nodon for {color[ffff]}{[0001|ffff]} and\nput it in the blue frame.
062	Connect the Button Nodon for {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]} to the\nPerson Nodon's {[0001|1a00]}{color[0400]}action port{color[ffff]}{[0001|ffff]}.
063	"Hi-yaah! You throw a punch for no\napparent reason. Nothing happens,\nbut you feel a little sillier..."
064	Hey, don't let anybody stop you\nfrom punching the air if it makes\nyou feel better, bud!
065	Feeling better now? Great!\nNext, let's address the player's\nmovements.
066	Use  to move, and press \nas you're doing so.
067	Looks like you can run around punching\nas much as you like now.
069	I think we're done creating the hero\nof our story, clue-finder extraordinaire!
071	Seems a bit hard to see the\ngame screen from this bird's-\neye-view though, doesn't it?
073	Is there any way for us to view\nthings from a better angle?
074	That's right! We need a {[0001|1a00]}{color[0400]}camera{color[ffff]}{[0001|ffff]}!
075	To get a good view of the room and\nour protagonist, we need to create\nan {[0001|1a00]}{color[0400]}isometric{color[ffff]}{[0001|ffff]} perspective.
075-01	But there's a problem: we can't\nmake a complex angle like this with\nour usual Game-Screen Nodon.
076	And so please give a warm\nwelcome to our newest member\nof the Nodon family...
077	Call up a {[0001|1a00]}{color[0400]}Camera Nodon{color[ffff]}{[0001|ffff]} from\n{[0001|1a00]}Objects {[0001|0400]}{[0001|1a00]} Game Screen / Camera {[0001|ffff]}{[0001|0400]}{[0001|ffff]} {[0001|1a00]}{color[0400]}Camera{color[ffff]}{[0001|ffff]}!
078	Looks like you're in\nneed of my services.
079	Clue me in. What's the job?
080	We're looking to capture\nthe room and player from\nan isometric perspective.
081	Not a problem. I'm on the case.
082	Just what I wanted to hear!\nNow, let's switch to {[0001|1a00]}{color[0400]}side view{color[ffff]}{[0001|ffff]}.
083	Move the Camera Nodon up\nso that it's positioned higher\nthan the player.
084	The Camera Nodon will {[0001|1a00]}{color[0400]}act like a real\ncamera{color[ffff]}{[0001|ffff]}, so we need to put it {[0001|1a00]}{color[0400]}somewhere\nwith a good view{color[ffff]}{[0001|ffff]} of the game screen.
085	Lights! Camera! Action!
086	Wow!
087	What a great aerial view!\nThe game screen looks\ntotally different now!
089	When you put the Camera Nodon up high,\nthis is the kind of view you'll end up with.
090	Still...there's something\nnot quite right about this angle...
091	How about we slide it over\na little to the right?
092	If we rotate it a bit, we'll be able to\n{[0001|1a00]}{color[0400]}change the way the camera is facing{color[ffff]}{[0001|ffff]}.
093	Start out by switching to\n{[0001|1a00]}{color[0400]}overhead view{color[ffff]}{[0001|ffff]}.
094	Now turn the Camera Nodon\n{[0001|1a00]}{color[0400]}to the right{color[ffff]}{[0001|ffff]}.
095	Okey-dokey!\nLet's see how that\nchanged our view...
096	Looks like we can see more\nof the right side now!
098	See, when you change the Camera Nodon's\nposition and angle, it {[0001|1a00]}{color[0400]}affects the camera that\nshows the game screen in the same way{color[ffff]}{[0001|ffff]}.
100	Looking at the current angle we've got,\nI reckon we could tilt it down a bit more\nfor a better view.
101	Let's make that adjustment now.
102	We need to change the settings whenever\nwe want to tilt the camera {[0001|1a00]}{color[0400]}up or down\n{color[ffff]}{[0001|ffff]}or adjust the angle {[0001|1a00]}{color[0400]}slightly{color[ffff]}{[0001|ffff]}.
103	Open up the Camera Nodon's\nsettings screen.
104	Set {[0001|1a00]}X-Axis Rotation\n{[0001|ffff]}to {[0001|1a00]}{color[0400]}4.00°{color[ffff]}{[0001|ffff]}.
104-01	Now {[0001|1a00]}Y-Axis Rotation{[0001|ffff]} to {[0001|1a00]}{color[0400]}17.00°{color[ffff]}{[0001|ffff]}.
105	Excellent!\nNow close the settings.
106	Time to go and have a look.
107	Fantastic!
108	It's not too easy to see yet because\nall we've got is a floor...
109	But this is the exact camera\nangle that we need.
110	With that done, I think we can head on\nover to the program screen now.
111	Well, that's it!
112	We can mark Step 1 off our list!
113	Woo! Nice!
114	Good work.
115	Well done!
116	Way to go!
117	This time, we made a character,\na camera, and a floor.
119	Look forward to finishing off\nour room with walls, a window,\nand a ceiling in the next step.
120	"Light filters in, but nothing leaves.\nIn a room without an exit, do you\nyearn for the outside?"
121	"To be continued..."
122	Ha! Narration is fun!\nSee you in the next step!
Lesson_SecretRoom_01.msbt
000	Hello again, and welcome to\nStep 2 of Mystery Room!
001	Last time, we made ourselves a floor,\na player, and a camera.
002	I'll give you a quick recap.
003	The lime green floor will be our\nmain puzzle-solving area.
004	The black floor, however, will only\nappear after the puzzle is solved,\nrevealing a {[0001|1a00]}{color[0400]}hidden alcove{color[ffff]}{[0001|ffff]}.
005	We can also press {[0001|1a00]}{color[0400]} {color[ffff]}{[0001|ffff]}to make\nthe player punch.
006	So far, our room only has\na floor and nothing else.
007	We need to construct...or rather\nprogram...a proper {[0001|1a00]}{color[0400]}room{color[ffff]}{[0001|ffff]}!
008	Let's get on over to the\nprogram screen.
009	We'll start with the back wall.
010	Select this Object Nodon.
011	Now {[0001|1a00]}{color[0400]}copy{color[ffff]}{[0001|ffff]} it.
012	Make it thinner, and place it at\nthe back of the room.
013	Next, switch over to\n{[0001|1a00]}{color[0400]}side view{color[ffff]}{[0001|ffff]}.
014	Stretch it tall so it looks like\na proper wall.
015	And now open its settings.
016	You can go ahead and\nmake this one {[0001|1a00]}{color[0400]}white{color[ffff]}{[0001|ffff]}.
017	Cool beans!\nNow close the settings.
018	"The painstakingly plastered wall\nremains a brilliant white, even now..."
019	I put the "wall" in "wall-to-wall"!\nWell, one of 'em anyway...
020	Yeah... Let's go see how\nour wall looks.
021	OK! One part of our back wall is done.\nOne. Part. Yep! There's more to do.
023	We'll add a few more parts to turn\nthis into a wall with a window.
024	OK! Let's do it! One windowed\nwall, coming right up!
025	Select the Object Nodon.
026	Copy it.
027	Move it somewhere\naround the top.
028	{[0001|1a00]}{color[0400]}Copy{color[ffff]}{[0001|ffff]} it again, but this time stretch\nit vertically and place it to the left.
029	{[0001|1a00]}{color[0400]}Copy{color[ffff]}{[0001|ffff]} once more, and put\nthis one on the right.
030	We also need to extend the wall to include\nthe hidden alcove just across from us.
031	{[0001|1a00]}{color[0400]}Copy{color[ffff]}{[0001|ffff]} the Object Nodon, and\nput it on the right.
032	Since this wall is for the hidden alcove,\nwe'll need to change its color.
033	Open the settings.
034	Set the {[0001|1a00]}color{[0001|ffff]} to {[0001|1a00]}{color[0400]}black{color[ffff]}{[0001|ffff]}.
035	Now close the settings.
038	Are you curious about how it looks?\nBecause I sure am!
039	There we go. One made-to-order\nwall with a window-shaped hole!
040	Bit by bit, our room is\nbecoming, er...roomier...\nOh, you know what I mean!
041	Now, I know one way to get\nthis hole in the wall looking\nmore like a window...
042	And that's by giving it\na cross-shaped frame.
043	First, we'll use this Object Nodon.\nGo and select it.
044	Copy it.
045	Stretch it vertically to\nmake the bar.
046	Now {[0001|1a00]}{color[0400]}copy{color[ffff]}{[0001|ffff]} it again and stretch\nthis copy lengthwise.
047	"The fitted window appears to stop\nanyone from getting in...or, for that\nmatter, out."
048	Like Mom always says,\nyou can't see outside\nwithout a proper window.
049	Haha! She sounds very wise.\nCome on, let's take a look\nat our new window.
050	Now that is a very fine\nwindow indeed!
051	We really went to great\n"panes" with this one. Right?
053	OK then! I guess\nthat's it for our back wall.
055	Tell you what. I think the window could do\nwith a bit of sunlight streaming through it.\nWouldn't that be nice?
056	Call up a {[0001|1a00]}{color[0400]}World Nodon{color[ffff]}{[0001|ffff]}\nfor me, would you?
057	Open the World Nodon's\nsettings.
058	From here, open the {[0001|1a00]}{color[0400]}World Lighting{color[ffff]}{[0001|ffff]}.
058-01	Here you can change the {[0001|1a00]}{color[0400]}height of\nthe sun{color[ffff]}{[0001|ffff]} as well as the {[0001|1a00]}{color[0400]}direction\nof the sunlight{color[ffff]}{[0001|ffff]}.
059	To get light coming in through the window,\nwe'll need to change the {[0001|1a00]}Sun Direction{[0001|ffff]} to {[0001|1a00]}{color[0400]}0{color[ffff]}{[0001|ffff]}\nand the {[0001|1a00]}Sun Height{[0001|ffff]} to {[0001|1a00]}{color[0400]}40{color[ffff]}{[0001|ffff]}.
060	Perfect!\nNow close the settings.
061	"The sunlight streams into the room,\ndrawing a stencil of the window\nin the middle of the floor..."
062	Right on cue, the sun's power\ngrows ever stronger...
063	Should we go check how\nthe sun changed?
064	Oh! You can see the shadows\nso clearly now!
067	Yeah, I think we're setting\na nice mood here.
068	Come on, let's get to work\non the rest of the walls.
069-00	It's the side walls we need\nto be working on next.
069	Mind changing to {[0001|1a00]}{color[0400]}overhead view{color[ffff]}{[0001|ffff]}?
071	Select this wall Object Nodon.
072	Copy it over.
073	And now drop it on the\nleft-hand side of the room.
074	Now {[0001|1a00]}{color[0400]}copy {color[ffff]}{[0001|ffff]}it, and put the copy\nright up beside the hidden alcove.
075	Now if you could select\nthat left wall...
076	Aaaaand copy it.
077	Move it over to the right of\nthe hidden alcove.
079	Open the settings for\nthis Object Nodon.
080	Set the {[0001|1a00]}color{[0001|ffff]} to {[0001|1a00]}{color[0400]}black{color[ffff]}{[0001|ffff]}.
081	Now close the settings.
082	I can't wait to see our new walls!\nThis is going to be cool.
083	Left wall, check!\nRight wall, check!\nHidden alcove wall, check!
084	The side walls are looking good.
085	It's becoming more like a real\nroom by the minute.
086	The hidden alcove is still sort of\npeeking through, but that's OK.
087	We'll hide it better in the next step,\nso just pretend it's not there for now.
089	For now, we can put a lid on this place.\nAnd by "lid" I mean "ceiling," of course.
090	Select the floor Object Nodon.
091	Copy that guy!
092	We'll need to put it up top so\nthat it's covering the room.
093	Switch over to {[0001|1a00]}{color[0400]}side view{color[ffff]}{[0001|ffff]}...
094	And move it up to the top.
095	"You feel a sense of unease as the thought\nthat this ceiling might come crashing down\nupon your head flits across your mind..."
096	Don't worry! Since {[0001|1a00]}{color[0400]}Movable is disabled{color[ffff]}{[0001|ffff]} in\nthe ceiling's {[0001|1a00]}Properties{[0001|ffff]}, there's no risk of\nthat happening! I'm just being dramatic.
097	I love it! Even our ceiling is getting into the\nmood. Let's go and open the settings.
100	We'll set {[0001|1a00]}Color{[0001|ffff]} to {[0001|1a00]}{color[0400]}white{color[ffff]}{[0001|ffff]}.
101	Now close the settings.
102	And now to check things out!
103	There it is, a nice "lid"\nto our room.
105	We have thwarted the rain and\nits nefarious plans to mildly\ninconvenience us.
107	Erm... Anyhow, it looks like our room\nis pretty much complete.
108	Well...almost.
109	As you've already demonstrated...
110	if you move the player toward\nthe camera, they'll disappear...
111	Try moving the player up\ntoward the camera.
112	Oops. Yep. Fwoosh. Gone.
113	Would you mind bringing them\nback into the room for me?
114	Looks like we've lost them. Huh.
115	What's actually happened here is that\nthe player fell off the floor and is now\nstanding somewhere off camera.
118	That being the case, we'll need to\nfind a way to prevent them from quite\nliterally falling out of the room.
119	Change to {[0001|1a00]}{color[0400]}overhead{color[ffff]}{[0001|ffff]} {[0001|1a00]}{color[0400]}view{color[ffff]}{[0001|ffff]}, please.
120	Select a wall Object Nodon.
121	Copy it.
122	Stretch it lengthwise, and place it\nat the front of the room. We can\nthen use it as another wall.
123	OK, time to see if that worked.
124	...
125	Can't see anything, can we?
126	Makes sense, though. That's what\nwalls do: they're good at blocking\nour views.
127	So let's make this wall\ninvisible. I'd like to see our\nbeautiful room again!
128	Select the front wall.
129	Open the settings.
130	Under {[0001|1a00]}Properties{[0001|ffff]}, {[0001|1a00]}{color[0400]}disable{color[ffff]}{[0001|ffff]} {[0001|1a00]}{color[0400]}Visible{color[ffff]}{[0001|ffff]}.
131	Great! Now close\nthe settings.
132	Fingers crossed...
135	There we go. Our room can now\nbe seen again with perfect clarity.
136	Try moving the player to\nthe front of the room now.
137	With the invisible wall in place, there's\nno more risk of falling out of the room.
139	And now, at last, our room\nis finally finished.
140	Wander around a bit if you want, and\nthen come back when you're ready.
141	OK, that's a wrap!
142	Step 2 is done!
143	Bing, bam, boom!\nWe made a room!
144	Nice craftsmanship.
145	Kinda cozy, eh?
146	The light... It shines upon us,\nblessing us with its beauty!
148	This time, we worked on the walls,\nwindow, and ceiling. That's a whole\nroom, and you should be proud!
149	In the next step, we're going to\nwork on the {[0001|1a00]}{color[0400]}hidden alcove{color[ffff]}{[0001|ffff]}.
150	We'll also throw in some {[0001|1a00]}{color[0400]}curious objects{color[ffff]}{[0001|ffff]}\nto make our mystery room a whole lot\nmore mysterious!
151	"A wooden crate. A TV. A device on a wall.\nThese three seemingly mundane items may\nbecome your puzzle nemesis..."
152	"To be continued..."
153	OK then, see you\nin the next step!
Lesson_SecretRoom_02.msbt
000	You are cordially invited to\nStep 3 of Mystery Room!\nSo come on in!
001	Last time we built the {[0001|1a00]}{color[0400]}room{color[ffff]}{[0001|ffff]} that will\nact as our little mystery stage.
003	This time we'll be working on a\nwhole bunch of puzzle elements.
004	To the program screen!
005	We'll start off by working on the place\nthat only appears once all of the puzzles\nhave been solved:
006	the {[0001|1a00]}{color[0400]}hidden alcove{color[ffff]}{[0001|ffff]}!
011	First thing we need...is a {[0001|1a00]}{color[0400]}door{color[ffff]}{[0001|ffff]}.
012	Select the wall Object Nodon.
013	And copy it.
014	We can put it somewhere\nout of the way for now.
014-01	This is what we'll be\nusing as our {[0001|1a00]}{color[0400]}door{color[ffff]}{[0001|ffff]}.
014-02	So when {[0001|1a00]}{color[0400]}all of the puzzles have\nbeen solved{color[ffff]}{[0001|ffff]}, what we want is for\nthe door to {[0001|1a00]}{color[0400]}open all by itself{color[ffff]}{[0001|ffff]}.
014-03	To do that, we'll need to use a new\nspecial kind of connector that we\nhaven't used before.
014-04	Call up a {[0001|1a00]}{color[0400]}Free-Slide-Connector Nodon\n{color[ffff]}{[0001|ffff]}from {[0001|1a00]}Objects {[0001|0400]}{[0001|1a00]} Connections\n{[0001|0400]}{[0001|1a00]} Free Slide Connector{[0001|ffff]}.
014-06	You got somethin' you wanna\nsay to me?
014-07	Oh, I get it. You want me to move\nthe hidden door, right?
014-08	{[0001|1a00]}{color[0400]}Connect me at both ends{color[ffff]}{[0001|ffff]} and\nI can {[0001|1a00]}{color[0400]}move objects around freely{color[ffff]}{[0001|ffff]}.\nI'm as free as the wind.
014-09	Whatever you do after that...\nNot my problem.
014-10	Um, we were really hoping\nyou could get the hidden door\nto open {color[0400]}{[0001|1a00]}automatically{[0001|ffff]} {color[ffff]}at the end.\n
014-11	I suppose for this step,\nwe can start out by using {color[0400]}{[0001|1a00]}\n{[0001|ffff]}{color[ffff]}to move it manually.
014-12	First, {[0001|1a00]}{color[0400]}connect{color[ffff]}{[0001|ffff]} the Free-Slide-Connector\nNodon to the wall Object Nodon.
015	Then we open the settings of the\nObject Nodon that'll be our door.
016	Under {[0001|1a00]}Properties{[0001|ffff]}, enable\n{[0001|1a00]}{color[0400]}Visible{color[ffff]}{[0001|ffff]} and {[0001|1a00]}{color[0400]}Movable{color[ffff]}{[0001|ffff]}.
017	Under {[0001|1a00]}{color[0400]}Connection Point{color[ffff]}{[0001|ffff]}, we also need\nto change {[0001|1a00]}Own Connection Point{[0001|ffff]} to {[0001|1a00]}{color[0400]}Z-{color[ffff]}{[0001|ffff]}\nand {[0001|1a00]}Target Connection Point{[0001|ffff]} to {[0001|1a00]}{color[0400]}Z+{color[ffff]}{[0001|ffff]}.
018	Now close the settings.
019	And now we {[0001|1a00]}{color[0400]}link{color[ffff]}{[0001|ffff]} the door Object Nodon\nto the Free-Slide-Connector Nodon.
019-01	We now have a {[0001|1a00]}{color[0400]}door set up\nnext to the wall{color[ffff]}{[0001|ffff]}.
019-02	From here, we have to move\nthe door around with {color[0400]}{[0001|1a00]}{[0001|ffff]}{color[ffff]}.
019-03	Call up a {[0001|1a00]}{color[0400]}Stick Nodon{color[ffff]}{[0001|ffff]} for {[0001|1a00]}{color[0400]} Up/Down{color[ffff]}{[0001|ffff]},\nand place it in the blue frame.
019-04	Connect the Stick Nodon to the {[0001|1a00]}{color[0400]}Z port\n{color[ffff]}{[0001|ffff]}of the Free-Slide-Connector Nodon.
019-05	Let's go see what's what!
019-0501	Our hidden alcove is true\nto its name at last. It's completely\nconcealed!
019-06	Now, if we try moving {[0001|1a00]}{color[0400]}\n{color[ffff]}{[0001|ffff]}up and down...
019-07	Hey! Presto! The hidden door\nmoves around!
019-09	Because we linked it to the {[0001|1a00]}{color[0400]}Z port{color[ffff]}{[0001|ffff]},\nthat means it moves along the z-axis,\ntoward the back of the room.
019-10	Next we need to be able to move\nthe door along its x-axis, so it goes\nto the left and right of the room.
019-11	Call up a {[0001|1a00]}{color[0400]}Stick Nodon{color[ffff]}{[0001|ffff]} for {[0001|1a00]}{color[0400]} Left/Right{color[ffff]}{[0001|ffff]},\nand put it in the blue frame.
019-12	Connect this Stick Nodon to the {[0001|1a00]}{color[0400]}X port\n{color[ffff]}{[0001|ffff]}of the Free-Slide-Connector Nodon.
019-13	It should move along\nthe x-axis now.
019-14	Let's see if that's true.
019-15	Try moving {[0001|1a00]}{color[0400]} {color[ffff]}{[0001|ffff]}in all directions.
019-16	So you see, the door now moves\nback and forward, as well as\nto the left and right.
019-20	This is the great thing about the {[0001|1a00]}{color[0400]}Free-Slide-\nConnector Nodon{color[ffff]}{[0001|ffff]}. It lets you {[0001|1a00]}{color[0400]}move things\nfreely in whatever direction you want{color[ffff]}{[0001|ffff]}.
019-21	Oh, incidentally...
019-2101	The hidden door won't collide with\nthe player or the walls.
019-22	That allows us to move it around\nno problem. That suits us just fine,\nbut there's a slight issue.
019-23	The player can saunter on into\nthe hidden alcove with nothing\nto stop them!
019-24	We'd better fix that ASAP by adding\nan invisible wall to block them off.
019-25	To the program screen!
021	Select a wall Object Nodon.
022	Copy it.
023	Line it up with the hidden alcove.
024	Open the settings.
025	Under {[0001|1a00]}Properties{[0001|ffff]}, enable {[0001|1a00]}{color[0400]}Solid{color[ffff]}{[0001|ffff]}.
026	That's it.\nNow close those settings.
027	"Knocking on one section of the wall\ncreates a hollow sound. Evidently there's\nmore here than meets the eye..."
028	I'm the {[0001|1a00]}{color[0400]}invisible wall{color[ffff]}{[0001|ffff]} that stops the\nplayer from getting into the alcove.
029	I'm the {[0001|1a00]}{color[0400]}proper door{color[ffff]}{[0001|ffff]} you're seeing.\nOpen-and-shut case, really...
030	Time to test it all!
034	Try heading into the back-right corner\nwhere the hidden alcove is.
036	Looks like it's sealed off nicely.
037	OK, that should be enough work\non the hidden door for now.
038	Let's mosey on over to the\nol' program screen.
078	Just so you know, we'll be keeping\nthe hidden door as it is for a while.
079	So anytime you feel like rolling\n around a bit, go for it!
080	Whee! Around and around\nand around and around...
081	I could do this all day!
084	And now...
085	It's time to start placing the\nmystery objects that will entice\nthe player into solving the puzzle.
086	Go to {[0001|1a00]}Rectangular Fancy Objects{[0001|ffff]},\ncall up a crate{[0001|1a00]}{color[0400]} Fancy-Object Nodon{color[ffff]}{[0001|ffff]},\nand put it in the corner of the room.
087	Now switch to {[0001|1a00]}{color[0400]}side view{color[ffff]}{[0001|ffff]}.
088	We should make it so that\nit's touching the floor.
095	"There, in the corner of the room,\ncoated in a thick layer of dust, lies a\nconspicuously large wooden crate..."
096	A mysterious crate!\nIf this doesn't pique your curiosity,\nI don't know what will!
097	Oh, it's almost criminal! ♥
098	Open the settings for our\nFancy-Object Nodon.
099	Under {[0001|1a00]}Properties{[0001|ffff]}, we'll want to enable\n{[0001|1a00]}{color[0400]}Visible{color[ffff]}{[0001|ffff]}, {[0001|1a00]}{color[0400]}Solid{color[ffff]}{[0001|ffff]}, and {[0001|1a00]}{color[0400]}Destructible{color[ffff]}{[0001|ffff]}.
100	Now close the settings.
101	So it's destined to be destroyed, eh?\nWhat a frail and fleeting existence...
102	We won't actually be making the crate\ntruly breakable until the next step.
103	For now, though, let's take a moment\nto check out what the crate looks like\nin the room.
103-00	Yep! It's a crate, all right. And it's made of wood.\nSo that makes it...a wooden crate! Yeah.
103-01	It's really radiating some crate-y presence\nsitting there in the corner, isn't it?
103-04	Let's go ahead and place the\nother mystery objects now.
103-05	Next up is a TV.
104	Call up a {[0001|1a00]}{color[0400]}television\nFancy-Object Nodon{color[ffff]}{[0001|ffff]} from the\n{[0001|1a00]}Rectangular Fancy Objects{[0001|ffff]} list.
105	Now change to {[0001|1a00]}{color[0400]}overhead view{color[ffff]}{[0001|ffff]}.
106	Let's put this up against\nthe wall.
113	"This relic of a bygone age playing\nfilms in monochrome apparently\nstill qualifies as a television..."
114	Omigosh. Love the narration. And the TV\nis so delightfully retro! Muwaah! ♥
117	This TV is a prop that's meant to help\ncreate an air of mystery in the room.
118	An air of mystery, you say?\nWhy, mysterious charm is one of\nmy defining personality traits!
119	Let's fix the TV in place. We can't\nhave it flying around the room.
120	Open the settings for the\ntelevision Fancy-Object Nodon.
121	We'll need to {[0001|1a00]}{color[0400]}disable{color[ffff]}{[0001|ffff]} {[0001|1a00]}{color[0400]}Movable{color[ffff]}{[0001|ffff]}\nin {[0001|1a00]}Properties{[0001|ffff]}.
122	Great. Now close the settings.
122-01	Let's go see if any of our\nfavorite shows are on!
122-02	Hmmm... It's dinky, but it's\nkinda cute, right?
122-03	Anyhow, I think we're done\nplacing the TV.
122-04	OK, let's add one more\ngimmick and then call it a day.
125	We're going to be making a mysterious\ncontraption composed of two things:\na {[0001|1a00]}{color[0400]}button{color[ffff]}{[0001|ffff]} and a {[0001|1a00]}{color[0400]}number counter{color[ffff]}{[0001|ffff]}.
126	Let's start with the {[0001|1a00]}{color[0400]}button part{color[ffff]}{[0001|ffff]}\nof the device.
127	Call up a {[0001|1a00]}{color[0400]}cylinder Object Nodon{color[ffff]}{[0001|ffff]}, and\nput it up by the right wall.
128	Switch to {[0001|1a00]}{color[0400]}side view{color[ffff]}{[0001|ffff]} now...
129	Shrink it down, and place it at a height\nthat should make pressing it easy.
130	Now spin it around.
131	Open up the settings.
132	Under {[0001|1a00]}Properties{[0001|ffff]}, enable\n{[0001|1a00]}{color[0400]}Visible{color[ffff]}{[0001|ffff]} and {[0001|1a00]}{color[0400]}Solid{color[ffff]}{[0001|ffff]}.
133	And let's go ahead and\nmake the {[0001|1a00]}color{[0001|ffff]} {[0001|1a00]}{color[0400]}pink{color[ffff]}{[0001|ffff]}.
134	You can close the settings now.
135	"On the wall was a large suspicious\nbutton, simply begging to be pressed."
136	Ha! Go ahead and press.\nYou know you want to.
137	Lastly, the {[0001|1a00]}{color[0400]}number counter{color[ffff]}{[0001|ffff]}.
138	Let's switch to\n{[0001|1a00]}{color[0400]}overhead view{color[ffff]}{[0001|ffff]} for this.
139	Call up a {[0001|1a00]}{color[0400]}Number-Object Nodon{color[ffff]}{[0001|ffff]},\nand place it right on top of the\nbutton on the wall.
140	Now switch to {[0001|1a00]}{color[0400]}side view{color[ffff]}{[0001|ffff]}.
141	Make it a bit smaller, and then\nplace it above the button.
142	Now open the settings.
143	Under {[0001|1a00]}Properties{[0001|ffff]}, enable\n{[0001|1a00]}{color[0400]}Visible{color[ffff]}{[0001|ffff]} and {[0001|1a00]}{color[0400]}Solid{color[ffff]}{[0001|ffff]}.
144	Make the {[0001|1a00]}color{[0001|ffff]} a nice\n{[0001|1a00]}{color[0400]}light blue{color[ffff]}{[0001|ffff]}.
145	Set the {[0001|1a00]}Text Display Side {[0001|ffff]}to {[0001|1a00]}{color[0400]}X-{color[ffff]}{[0001|ffff]}.
146	Great! Now close the settings.
147	"A light blue panel is set in the\nwall above the button, boldly\nindicating the numbers '00'..."
148	Incidentally, the numbers that\nI output here will be {[0001|1a00]}{color[0400]}instrumental{color[ffff]}{[0001|ffff]}\nin solving the puzzle.
150	That's right!
151	And this {[0001|1a00]}{color[0400]}crucial element{color[ffff]}{[0001|ffff]} is what\nwe're going to be working on in the\nnext step. I can hardly wait!
154	So, we've finished placing our\nwall device. Let's take a look.
155	That's, um...
156	If you saw something like this\nin a room, it would intrigue you,\nright? It's not just me?
158	Good! I'm glad you agree!\nI think we've placed enough enigmatic\nobjects for one day, don't you?
159	We haven't even touched on the\npuzzle aspect yet. But it's going to\nbe so exciting! Trust me!
161	Whisk us over to the program\nscreen, will you?
162	And that's basically it.
163	Step 3 is over and done!
164	You got skills, kid.
165	I just lo-o-ove what you've\ndone with the place! ♥
166	Such a pleasure\nworking with you! ♥
167	I'm continually impressed\nby your work.
168	This time, we focused on making\na hidden door and placing various\nmystery objects around the room.
170	In the next step, we're going to set things\nup so that you can break the crate with a\ngood old punch.
172	"The wooden crate conceals a great secret,\nthat much is certain. You ball up your fist,\nready to back up your thoughts with action..."
173	"To be continued..."
174	See you in the next step!
Lesson_SecretRoom_03.msbt
000	Why, how nice of you to\npay us another visit!
001	We did a lot of hard work last time,\nsorting out the {[0001|1a00]}{color[0400]}hidden door{color[ffff]}{[0001|ffff]} and all\nthose {[0001|1a00]}{color[0400]}mystery objects{color[ffff]}{[0001|ffff]}.
002	But this time, we'll be focusing on\none specific object: the {[0001|1a00]}{color[0400]}crate{color[ffff]}{[0001|ffff]}.
003	We're going to make it so that\nyou can smash it to smithereens\nwith a {[0001|1a00]}{color[0400]}swing of your fist{color[ffff]}{[0001|ffff]}!
004	And the {[0001|1a00]}{color[0400]}crate we'll be punching\nto pieces{color[ffff]}{[0001|ffff]}...is right here!
005	Alas, poor crate.\nI hardly knew you...
008	The {[0001|1a00]}{color[0400]}Destroy-Object Nodon{color[ffff]}{[0001|ffff]} should be just\nthe Nodon for jobs like this. Call it up, and\nplace it outside the room.
009	Open the settings, please.
010	Under {[0001|1a00]}Properties{[0001|ffff]}, {[0001|1a00]}{color[0400]}disable{color[ffff]}{[0001|ffff]} {[0001|1a00]}{color[0400]}Visible{color[ffff]}{[0001|ffff]}.
011	Set {[0001|1a00]}{color[0400]}Destroy What?{color[ffff]}{[0001|ffff]} to only {[0001|1a00]}{color[0400]}Crate{color[ffff]}{[0001|ffff]},\nand that'll be that.
012	There you go.\nNow close the settings.
013	"Suspecting an important clue to\nlie within the crate, you take steps\nto render it into small pieces."
014	Heh, one way or another,\nI'll break it real good...
015	{[0001|1a00]}{color[0400]}Link{color[ffff]}{[0001|ffff]} the Destroy-Object Nodon\nto the crate Fancy-Object Nodon.
015-01	Now the Destroy-Object Nodon is\npermanently attached to the crate.
015-02	Next up, we'll work on the part\nthat makes the crate break\n{[0001|1a00]}{color[0400]}when the player punches it{color[ffff]}{[0001|ffff]}.
016	First, we need a way to check\nwhether the punch has actually\n{[0001|1a00]}{color[0400]}hit the crate{color[ffff]}{[0001|ffff]}.
017	We can do this by attaching\na {[0001|1a00]}{color[0400]}touch sensor {color[ffff]}{[0001|ffff]}to the front\nof the player.
018	Call up a {[0001|1a00]}{color[0400]}Touch-Sensor Nodon\n{color[ffff]}{[0001|ffff]}and move it a bit further away.
019	It's "open settings" time!
020	Under {[0001|1a00]}Properties{[0001|ffff]}, you'll want to\n{[0001|1a00]}{color[0400]}disable Visible{color[ffff]}{[0001|ffff]}.
021	Under {[0001|1a00]}{color[0400]}Connection Point{color[ffff]}{[0001|ffff]}, set\n{[0001|1a00]}Own Connection Point{[0001|ffff]} to {[0001|1a00]}{color[0400]}Z+ {color[ffff]}{[0001|ffff]}and\n{[0001|1a00]}Target Connection Point{[0001|ffff]} to {[0001|1a00]}{color[0400]}Z-{color[ffff]}{[0001|ffff]}.
022	Please close\nthe screen now.
023	The {[0001|1a00]}Check What? {[0001|ffff]}option\nshould be set to {[0001|1a00]}{color[0400]}Crate{color[ffff]}{[0001|ffff]}.
024	Close those settings.
025	And now we {[0001|1a00]}{color[0400]}connect{color[ffff]}{[0001|ffff]} the\nTouch-Sensor Nodon and\nthe Person Nodon together.
026	"As you apply pressure to the crate,\nit warps and creaks under the strain.\nYou could break it, given enough force."
027	Meep... Checking if there's a crate\nin front of the player...
028	Now we need to check whether\nthe player is throwing a punch.
029	It was {color[0400]}{[0001|1a00]}{[0001|ffff]}{color[ffff]} to punch, right?
030	So to check whether  is being pressed,\nwe need to call up a {[0001|1a00]}{color[0400]}Button{color[ffff]}{[0001|ffff]} {[0001|1a00]}{color[0400]}Nodon ()\n{color[ffff]}{[0001|ffff]}and put it in the blue frame.
031	"You gaze intently at your fist, suspecting\nthat you might in fact have the strength to\nsmash the crate to pieces..."
032	Hey! I'll tell you whenever 's\nbeen pressed! That's any time\nyou throw a punch!
033	Once a {[0001|1a00]}{color[0400]}signal is output from\nboth {color[ffff]}{[0001|ffff]}the Touch-Sensor Nodon\nand the Button Nodon...
034	that's when the {[0001|1a00]}{color[0400]}crate\nis being punched{color[ffff]}{[0001|ffff]}!
035	To check whether both Nodon are\noutputting a signal, call up an {[0001|1a00]}{color[0400]}AND Nodon\n{color[ffff]}{[0001|ffff]}and drop it in the blue frame.
036	Link the {[0001|1a00]}{color[0400]}Touch-Sensor Nodon{color[ffff]}{[0001|ffff]} to\nthe AND Nodon's {[0001|1a00]}{color[0400]}input 1 port{color[ffff]}{[0001|ffff]}.
037	Link the {[0001|1a00]}{color[0400]}Button Nodon{color[ffff]}{[0001|ffff]} to the\nAND Nodon's {[0001|1a00]}{color[0400]}input 2 port{color[ffff]}{[0001|ffff]}.
039	And now, connect the\n{[0001|1a00]}{color[0400]}Destroy-Object Nodon{color[ffff]}{[0001|ffff]} to the\nAND Nodon's {[0001|1a00]}{color[0400]}output port{color[ffff]}{[0001|ffff]}.
040	So: Crate in front of player.\nPlayer punching crate.
041	Right! When these two conditions are\nfulfilled, I'll send a signal to our dear\nDestroy-Object Nodon here.
041-01	Now when you punch the crate,\nit should actually break!
042	Give it a good wallop\nfor me, would you?
043	Press  to {[0001|1a00]}{color[0400]}punch the crate{color[ffff]}{[0001|ffff]}!
045	And with one punch, you\nsmashed it into pieces!
046	That was a nice punch!\nDo you study karate?
047	Now that I think about it, though,\nthat might have been too easy.
049	Why don't we tweak it a little\nso that it needs {[0001|1a00]}{color[0400]}three punches\nbefore it breaks{color[ffff]}{[0001|ffff]}?
050	First, we'll need to be able to count\n{[0001|1a00]}{color[0400]}how many times{color[ffff]}{[0001|ffff]} the crate has been\nhit with a punch.
052	Naturally, we need a {[0001|1a00]}{color[0400]}Counter Nodon{color[ffff]}{[0001|ffff]}.\nCall one up, and drop it in the blue frame.
053	Open its settings.
054	We'll want the {[0001|1a00]}Starting Value\n{[0001|ffff]}to be {[0001|1a00]}{color[0400]}3{color[ffff]}{[0001|ffff]}.
055	Set the {[0001|1a00]}Mode {[0001|ffff]}to {[0001|1a00]}{color[0400]}Range{color[ffff]}{[0001|ffff]}.
056	Set {[0001|1a00]}Count Timing {[0001|ffff]}to\n{[0001|1a00]}{color[0400]}On change from 0{color[ffff]}{[0001|ffff]}.
056-01	Now every time you hit the crate,\nthe counter will decrease by 1.\nIt'll count down from 3 to 0.
057	Let's close the settings.
058	"Thunk! You give the crate a good smack,\nbut it remains intact. You reckon another\ntwo punches should do it..."
059	I WILL COUNT DOWN FROM 3 TO 0.\nI HAVE PERFECTED THE ART OF\nSUBTRACTION.
060	BUT I MUST REMIND YOU TO SEND A\nSIGNAL TO MY {[0001|1a00]}{color[0400]}COUNT DOWN PORT{color[ffff]}{[0001|ffff]}.
061	Thanks for the reminder!\nLet's {[0001|1a00]}{color[0400]}erase the connection{color[ffff]}{[0001|ffff]} between the\nAND Nodon and the Destroy-Object Nodon.
062	Now connect the AND Nodon's {[0001|1a00]}{color[0400]}output port{color[ffff]}{[0001|ffff]}\nwith the Counter Nodon's {[0001|1a00]}{color[0400]}count down port{color[ffff]}{[0001|ffff]}.
063	There! Now we have a way\nof counting down each time\nthe crate is hit.
064	The next step is to make sure that\nthe crate actually breaks when the\ncounter {[0001|1a00]}{color[0400]}reaches 0{color[ffff]}{[0001|ffff]}.
065	Call up a {[0001|1a00]}{color[0400]}= Comparison Nodon{color[ffff]}{[0001|ffff]},\nand drop it in the blue frame.
066	We'll also need to call up\na {[0001|1a00]}{color[0400]}Constant Nodon {color[ffff]}{[0001|ffff]}and put it\nin this blue frame.
067	Could you open the\nConstant Nodon's settings?
068	We want the {[0001|1a00]}Output Value{[0001|ffff]}\nto be {[0001|1a00]}{color[0400]}0.00{color[ffff]}{[0001|ffff]}.
069	Close the settings now.
070	Connect the {[0001|1a00]}{color[0400]}Counter Nodon{color[ffff]}{[0001|ffff]} to the\nComparison Nodon's {[0001|1a00]}{color[0400]}input 1 port{color[ffff]}{[0001|ffff]}.
071	Now connect the {[0001|1a00]}{color[0400]}Constant Nodon{color[ffff]}{[0001|ffff]} to\nthe Comparison Nodon's {[0001|1a00]}{color[0400]}input 2 port{color[ffff]}{[0001|ffff]}...
072	And lastly, connect the\nComparison Nodon's {[0001|1a00]}{color[0400]}output port\n{color[ffff]}{[0001|ffff]}to the {[0001|1a00]}{color[0400]}Destroy-Object Nodon{color[ffff]}{[0001|ffff]}.
073	"This is the one. Your fist connects\nwith the crate, splintering it into so\nmany fragments..."
074	Hey! Hey! Has the counter {[0001|1a00]}{color[0400]}reached 0{color[ffff]}{[0001|ffff]}?!\nYou've gotta tell me!
075	So now it looks like we should be able\nto break the crate with three punches.
076	Time for a stress test!
077	Press  to punch the crate\nthree times.
078	Impressive! Nice form!
080	The crate now {[0001|1a00]}{color[0400]}breaks after\nyou punch it three times{color[ffff]}{[0001|ffff]}.
081	That just about wraps it up for\nour crate-breaking clinic.
082	But we're still lacking a little\nsomething. It still doesn't really feel like\nit puts up much resistance.
089	We need to make it react somehow\nwhen it gets punched to make you think\nthat it {[0001|1a00]}{color[0400]}serves some special purpose{color[ffff]}{[0001|ffff]}.
090	Let's head over to\nthe program screen.
091	Let's start off by adding a {[0001|1a00]}{color[0400]}sound effect{color[ffff]}{[0001|ffff]}\nthat plays {[0001|1a00]}{color[0400]}when the crate is punched{color[ffff]}{[0001|ffff]}.
092	To {[0001|1a00]}{color[0400]}play a sound effect{color[ffff]}{[0001|ffff]}, we'll need\na {[0001|1a00]}{color[0400]}Play-Sound Nodon{color[ffff]}{[0001|ffff]}. Call one up,\nand put it in the blue frame.
093	Open up the settings.
094	Under {[0001|1a00]}Collision{[0001|ffff]}, select the\n{[0001|1a00]}{color[0400]}Medium Hit{color[ffff]}{[0001|ffff]} sound.
095	Perfect.\nNow close the settings.
096	Go ahead and connect the {[0001|1a00]}{color[0400]}AND Nodon\n{color[ffff]}{[0001|ffff]}to the Play-Sound Nodon's {[0001|1a00]}{color[0400]}play port{color[ffff]}{[0001|ffff]}.
097	So you need a {[0001|1a00]}{color[0400]}reaction{color[ffff]}{[0001|ffff]} for\nthe crate getting punched?
098	How about a nice ka-BLAM? Or maybe\na ba-DOOM? Or are you more of a\nker-SMASH person?
100	Let's go and hear\nwhat it sounds like.
101	Use  to break the crate.
103	Ooh, that's a nice, solid sound!\nLove it!
104	Now it finally feels like your\nfist is hitting something!
105	But why stop here? We should do\nsomething about the {[0001|1a00]}{color[0400]}way it looks{color[ffff]}{[0001|ffff]} too.
106	We can have a puff of smoke come\nout of the crate when it's hit! It'll look\nlike you're knocking the dust off it!
107	Call up the {[0001|1a00]}{color[0400]}smoke Effect Nodon{color[ffff]}{[0001|ffff]},\nand put it in the blue frame.
108	Get those settings open.
109	Set the {[0001|1a00]}Effect Location\n{[0001|ffff]}to {[0001|1a00]}{color[0400]}World{color[ffff]}{[0001|ffff]}.
110	In {[0001|1a00]}Properties{[0001|ffff]}, we'll need to\n{[0001|1a00]}{color[0400]}disable Visible{color[ffff]}{[0001|ffff]}.
111	OK, now close the settings.
112	Heya, bud!\nWhat a pleasant surprise!
116	Ya know how they say there's\nno smoke without fire? Well, ya might\nhave to reevaluate that logic!
117	That is kind of strange, isn't it?\nOh well, let's {[0001|1a00]}{color[0400]}connect{color[ffff]}{[0001|ffff]} the Effect Nodon\nto the crate Fancy-Object Nodon.
118	The {[0001|1a00]}{color[0400]}AND Nodon{color[ffff]}{[0001|ffff]} needs to connect\nto the {[0001|1a00]}{color[0400]}Effect Nodon{color[ffff]}{[0001|ffff]} as well.
119	Now when you punch the crate,\nyou should see a puff of smoke...or dust.
120	Let's check it out.
121	Use  to break the crate.
122	Look at that! When you hit it,\nthere was a little puff of smoke!\nOr dust!
125	Now this crate feels {[0001|1a00]}{color[0400]}relevant\nto the puzzle {color[ffff]}{[0001|ffff]}for sure.
127	OK, that's it for the {[0001|1a00]}{color[0400]}crate-breaking{color[ffff]}{[0001|ffff]}\nmechanic. And I mean it this time.
128	It's time to go back.
129	OK!
130	Say goodbye to Step 4,\nbecause we are done here!
131	Such wanton destruction!\nI love it!
132	Yippedy-dee!\nWell done!
133	YOU HAVE MADE\nSIGNIFICANT PROGRESS.
134	Have you been\nworking out? ♥
136	In this step, we worked on getting the\ncrate to break after three punches.
137	Next time, we'll be making\na {[0001|1a00]}{color[0400]}secret code {color[ffff]}{[0001|ffff]}that's going to be\nhidden behind the crate.
139	"With great travail you at last shatter the\ncrate, only to reveal an enigmatic code.\nThis mystery is far from over..."
140	"To be continued..."
141	See you in\nthe next step!
Lesson_SecretRoom_04.msbt
000	Come in, {[0201]}!\nYou're right on time.
001	You'll recall that last time we\nmade a {[0001|1a00]}{color[0400]}crate that can break if\nyou punch it{color[ffff]}{[0001|ffff]}.
002	See, this crate was\nput here for a reason.
003	And that reason is to conceal\na {[0001|1a00]}{color[0400]}secret code{color[ffff]}{[0001|ffff]}.
004	We're diving into the heart of the puzzle\nnow. This is the part where we design\nthe {[0001|1a00]}{color[0400]}code{color[ffff]}{[0001|ffff]} behind the crate.
005	Let's move over to\nthe program screen.
006	Making this code should be\nreally interesting.
007	It's going to have the qualities\nof a {[0001|1a00]}{color[0400]}six-sided die{color[ffff]}{[0001|ffff]}.
008	We'll start by calling up a {[0001|1a00]}{color[0400]}dice Fancy-Object\nNodon{color[ffff]}{[0001|ffff]} from the {[0001|1a00]}Rectangular Fancy Objects\n{[0001|ffff]}list and placing it behind the crate.
009	Now switch over to {[0001|1a00]}{color[0400]}side view{color[ffff]}{[0001|ffff]}.
010	Let's make it the same\nheight as the crate.
011	Open the settings, please.
012	Under {[0001|1a00]}Properties{[0001|ffff]}, we'll want to\nenable {[0001|1a00]}{color[0400]}Visible{color[ffff]}{[0001|ffff]} and {[0001|1a00]}{color[0400]}Solid{color[ffff]}{[0001|ffff]}.
013	There you go.\nNow close the settings.
014	"Upon breaking the crate, you catch sight\nof a six-sided die immediately behind it.\nIt appears stuck to the wall."
015	Strange, right?\nWho sticks dice to the wall?
017	We're actually going to place not one,\nbut three of these cool cubes.
018	Let's {[0001|1a00]}{color[0400]}copy {color[ffff]}{[0001|ffff]}the {[0001|1a00]}{color[0400]}dice{color[ffff]}{[0001|ffff]} Fancy-\nObject Nodon and move it\ndiagonally downward.
019	Now {[0001|1a00]}{color[0400]}copy {color[ffff]}{[0001|ffff]}one more time and\nmove it down further still.
020	Perfectly positioned!
021	Let's see how that looks\nin-game.
022	Use  to punch that\ncrate into oblivion.
023	Now there are three dice\nstuck to the back wall!
024	Looks like all three of them have\n{[0001|1a00]}{color[0400]}two{color[ffff]}{[0001|ffff]} dots facing us at the moment.
025	But 222 isn't really much of a secret\ncode, is it? Let's shuffle it up a little.
026	To make the dice show other numbers,\nwe need to change the direction each\nof the fancy objects is pointing.
027	Let's pick this one here.
028	Open its settings.
029	Set {color[0400]}{[0001|1a00]}Y-Axis Rotation{[0001|ffff]}\n{color[ffff]}to {[0001|1a00]}{color[0400]}180.00°{color[ffff]}{[0001|ffff]}.
030	Now close the settings.
031	Next, we move over to this\nlittle Fancy-Object Nodon.
032	Open its settings!
033	Set {[0001|1a00]}{color[0400]}Y-Axis Rotation{color[ffff]}{[0001|ffff]} to {[0001|1a00]}{color[0400]}90.00°{color[ffff]}{[0001|ffff]}.
034	And close!
035	One more Fancy-Object\nNodon to configure now.
036	You know what to do.
037	Here we'll set {[0001|1a00]}{color[0400]}X-Axis Rotation{color[ffff]}{[0001|ffff]} to {[0001|1a00]}{color[0400]}90.00°{color[ffff]}{[0001|ffff]}.
038	OK, close the settings now.
039	Now each die has a different\nnumber pointing toward us.
040	Let's see exactly how they've\nchanged, OK?
041	Press  and smash that\ncrate into tiny pieces!
042	Looks like the dice are all\nshowing different sides.
043	5, 3, and 1, eh?
044	Uh... Small problem. We still can't\nwork out the code from just this.
046	But we can fix that with what\nwe're about to do next.
047	Our code creation continues\nwith a convenient cuboid.
048	Call up a {[0001|1a00]}{color[0400]}box {color[ffff]}{[0001|ffff]}Object Nodon,\nand plop it in the blue frame.
049	{[0001|1a00]}{color[0400]}Overhead view{color[ffff]}{[0001|ffff]} first.
050	Let's match the depth of\nthe other dice.
051	Open the settings.
052	In {[0001|1a00]}Properties{[0001|ffff]}, make sure both\n{[0001|1a00]}{color[0400]}Visible{color[ffff]}{[0001|ffff]} and {[0001|1a00]}{color[0400]}Solid{color[ffff]}{[0001|ffff]} are enabled.
053	Good stuff.\nNow close the settings.
054	"The die inlaid at the very top has\nbeen so worn down, it's impossible\nto make out the dots..."
055	I feel right at home here\nwith my dice buddies!
056	If you could just shift back\nto {[0001|1a00]}{color[0400]}side view{color[ffff]}{[0001|ffff]} for a sec...
057	Now we can {[0001|1a00]}{color[0400]}copy{color[ffff]}{[0001|ffff]} the Object Nodon\nand put it in the blue frame.
058	And open the settings.
059	Today our {[0001|1a00]}Color{[0001|ffff]} will be...\n{[0001|1a00]}{color[0400]}light blue{color[ffff]}{[0001|ffff]}.
060	Yep, I'm happy with that.\nLet's close those settings.
061	"Near the dice, a light-blue\nblock was also embedded in the wall.\nThe color is strikingly familiar..."
062	Wonder if that\n{[0001|1a00]}{color[0400]}color means anything{color[ffff]}{[0001|ffff]}...
063	And just like that, we're done\nwith the secret code.
064	Let's check it out!
065	Smash the crate with !
067	This is the {[0001|1a00]}{color[0400]}hidden code {color[ffff]}{[0001|ffff]}that was\ncovered by the crate.
068	...
069	Well? Did you crack it?
070	I'll let you ponder it for a bit and\ntell you the {[0001|1a00]}{color[0400]}answer{color[ffff]}{[0001|ffff]} in the next step.
071	See if you can figure it out\nbefore then.
077	When you're done checking the\ncode, just mosey on back to the\nprogram screen.
078	Would you look at that...
079	We're all done with Step 5!
080	That programming\nwas to "die" for! ♥
081	Simply magnifique! ♥
082	Yup, I think I might\nhave the answer.
083	This puzzle's\nvery...puzzling.
084	This time, we made use of dice and\na box to create a secret code.
086	In the next step, we'll be working on\nthe {[0001|1a00]}{color[0400]}wall device {color[ffff]}{[0001|ffff]}in a bit more detail.
087	And of course, I'll announce\nthe {[0001|1a00]}{color[0400]}answer to the code{color[ffff]}{[0001|ffff]}!
088	"A push button. Rising numbers.\nA secret code. What secrets will the\nsolution hold? And dare you even try?"
089	"To be continued..."
090	Woo-hoo!\nSee you in the next step!
Lesson_SecretRoom_05.msbt
000	{[c903]}{[0201]}!\nCome in! I never turn down\na friendly face!
001	You remember how we made\na {[0001|1a00]}{color[0400]}hidden code {color[ffff]}{[0001|ffff]}last time?
002	Either way, let's break the crate with \nagain to refresh our memory.
003	Yep! There it is.\nWe made the code with\na combination of dice.
004	Did you figure\nit out yet?
005	This time we'll be getting the {[0001|1a00]}{color[0400]}wall device\n{color[ffff]}{[0001|ffff]}to work so that the number on the wall\ngoes up when you push the button.
006	We'll also need a way to check\n{[0001|1a00]}{color[0400]}whether the number we entered\nis the correct answer{color[ffff]}{[0001|ffff]}.
012	To the program screen, then.
014	We're doing more counting, so\nwe'll need to call up a {[0001|1a00]}{color[0400]}Counter Nodon{color[ffff]}{[0001|ffff]}.\nDrop it in the blue frame.
015	Go ahead and open the settings.
016	Set the {[0001|1a00]}Mode{[0001|ffff]} to {[0001|1a00]}{color[0400]}Loop{color[ffff]}{[0001|ffff]}.
017	For the {[0001|1a00]}Count Range{[0001|ffff]}, set the\nminimum and maximum values\nto {[0001|1a00]}{color[0400]}0 {color[ffff]}{[0001|ffff]}and {[0001|1a00]}{color[0400]}100{color[ffff]}{[0001|ffff]}.
018	Set {[0001|1a00]}Count Timing{[0001|ffff]}\nto {[0001|1a00]}{color[0400]}On change from 0{color[ffff]}{[0001|ffff]}.
019	That's it for the settings.\nYou can close it now.
020	"Ka-chik... You press the button, and\nthe panel flickers to life, displaying\nthe number '01'..."
021	I SHALL KEEP TRACK OF\nTHE NUMBER. YOU CAN\nCOUNT ON IT.
022	Let's link the {[0001|1a00]}{color[0400]}Counter Nodon{color[ffff]}{[0001|ffff]}\nto the {[0001|1a00]}{color[0400]}Number-Object Nodon{color[ffff]}{[0001|ffff]}.
023	For the button on the wall,\nwe need to check whether the\n{[0001|1a00]}{color[0400]}cylinder {color[ffff]}{[0001|ffff]}is being punched.
024	We want to check {[0001|1a00]}{color[0400]}whether there's a\ncylinder in front of the player{color[ffff]}{[0001|ffff]}, right?
025	So let's call up a {[0001|1a00]}{color[0400]}Touch-Sensor Nodon{color[ffff]}{[0001|ffff]}\nand put it in the blue frame.
026	Open the settings.
027	In {[0001|1a00]}Properties{[0001|ffff]}, {[0001|1a00]}{color[0400]}disable{color[ffff]}{[0001|ffff]} {[0001|1a00]}{color[0400]}Visible{color[ffff]}{[0001|ffff]}.
028	For the {[0001|1a00]}{color[0400]}Connection Point{color[ffff]}{[0001|ffff]}, set\n{[0001|1a00]}Own Connection Point{[0001|ffff]} to {[0001|1a00]}{color[0400]}Z+{color[ffff]}{[0001|ffff]} and\n{[0001|1a00]}Target Connection Point{[0001|ffff]} to {[0001|1a00]}{color[0400]}Z-{color[ffff]}{[0001|ffff]}.
029	Close the detailed\nsettings screen.
030	{[0001|1a00]}Check What?{[0001|ffff]} should be set to\n{[0001|1a00]}{color[0400]}cylinder {color[ffff]}{[0001|ffff]}and nothing else.
031	Nice.\nNow close the settings.
032	{[0001|1a00]}{color[0400]}Connect {color[ffff]}{[0001|ffff]}the Touch-Sensor Nodon\nto the Person Nodon now.
033	Next, we check {[0001|1a00]}{color[0400]}if the punch\naction is happening{color[ffff]}{[0001|ffff]}.
034	Call up a Button Nodon for {[0001|1a00]}{color[0400]}\n{color[ffff]}{[0001|ffff]}and put it in the blue frame.
035	And then we check whether there are\nsignals being sent from {[0001|1a00]}{color[0400]}both{color[ffff]}{[0001|ffff]} the {[0001|1a00]}{color[0400]}Touch-Sensor\nNodon{color[ffff]}{[0001|ffff]} and the {[0001|1a00]}{color[0400]}Button Nodon{color[ffff]}{[0001|ffff]}.
036	I think you know where we're going.\nCall up an {[0001|1a00]}{color[0400]}AND Nodon{color[ffff]}{[0001|ffff]} and put it in\nthe blue frame.
037	Connect the {[0001|1a00]}{color[0400]}Touch-Sensor Nodon {color[ffff]}{[0001|ffff]}to\nthe AND Nodon's {[0001|1a00]}{color[0400]}input 1 port{color[ffff]}{[0001|ffff]}.
038	The {[0001|1a00]}{color[0400]}Button Nodon{color[ffff]}{[0001|ffff]} then connects to\nthe AND Nodon's {[0001|1a00]}{color[0400]}input 2 port{color[ffff]}{[0001|ffff]}.
039	Now connect the AND Nodon's {[0001|1a00]}{color[0400]}output port{color[ffff]}{[0001|ffff]}\nto the Counter Nodon's {[0001|1a00]}{color[0400]}count up port{color[ffff]}{[0001|ffff]}.
040	"The number on the wall increases\nwith each press of the button,\naccompanied by a satisfying click..."
043	Now when you push the button, the number\non the wall device should go up.
044	We'd better test it.
045	Press  to punch the\n{[0001|1a00]}{color[0400]}button on the wall{color[ffff]}{[0001|ffff]}.
046	Beautiful!\nPushing the button makes\nthe number go up.
047	It's a little difficult to realize that you've\nactually hit the button, though. That could\ncause some confusion...
048	We need some sort of sound\nto come out when you push it.
049	Let's add a sound effect now.
050	Call up a {[0001|1a00]}{color[0400]}Play-Sound Nodon\n{color[ffff]}{[0001|ffff]}from {[0001|1a00]}{color[0400]}Play SFX{color[ffff]}{[0001|ffff]}, then drop it in\nthe blue frame.
051	Open the Play-Sound Nodon's\nsettings.
052	And let's go with...{[0001|1a00]}{color[0400]}Button{color[ffff]}{[0001|ffff]}, from\n{[0001|1a00]}System sounds{[0001|ffff]}.
053	Right on!\nClose the settings now.
054	Connect the {[0001|1a00]}{color[0400]}AND Nodon{color[ffff]}{[0001|ffff]} to the\nPlay-Sound Nodon's {[0001|1a00]}{color[0400]}play port{color[ffff]}{[0001|ffff]}.
055	Now the sound should play\nwhen you push the button.
056	Only one way to find out!
057	Press  to activate\nthe wall device.
058	Click-click-click...
059	It's a lot more satisfying to\npush the button now, right?\nI could do this all day!
060	Now, you might be wondering\nwhat exactly the point of this\ndevice is.
061	That's a good thing to wonder about.\nIt's actually a device for entering\nthe secret code.
062	So it seems like our next step should be\nto program in a way to {[0001|1a00]}{color[0400]}check if we got\nthe answer right or not{color[ffff]}{[0001|ffff]}.
063	If you still haven't solved the puzzle\nof the code yet, now's your last chance\nto work it out...
064	Head over to the program screen when\nyou're ready to learn the answer!
065	OK, let's start on the\n{[0001|1a00]}{color[0400]}answer-checking process{color[ffff]}{[0001|ffff]}.
066	Basically, we need to check if {[0001|1a00]}{color[0400]}the number\non the device is the same as the answer\nto the secret code{color[ffff]}{[0001|ffff]}.
068	Call up a {[0001|1a00]}{color[0400]}Comparison Nodon {color[ffff]}{[0001|ffff]}for {[0001|1a00]}{color[0400]}=\n{color[ffff]}{[0001|ffff]}and put it in the blue frame, please.
069	Now do the same for\na {[0001|1a00]}{color[0400]}Constant Nodon{color[ffff]}{[0001|ffff]}.
069-01	The value of the Constant Nodon needs\nto {[0001|1a00]}{color[0400]}match the answer to the secret code{color[ffff]}{[0001|ffff]},\nso we'll set that here.
070	Open the settings if you're ready\nto find out the answer...
074	OK then, if you'd be so kind as to\nenter {[0001|1a00]}{color[0400]}26.00{color[ffff]}{[0001|ffff]} for the {[0001|1a00]}Output Value{[0001|ffff]}...
075	That's right...\nThe answer was {[0001|1a00]}{color[0400]}26{color[ffff]}{[0001|ffff]}!
076	I'll explain later. For now, let's just focus\non getting it all up and running.
077	Mind closing the settings?
078	"There is no doubt about it.\nThe answer is 26... You punch the number\ninto the machine, hoping for the best..."
079	Two...six... Twenty-six.\nValue updated. I repeat,\nthe code's solution is 26.
080	Connect the {[0001|1a00]}{color[0400]}Counter Nodon{color[ffff]}{[0001|ffff]} to the\nComparison Nodon's {[0001|1a00]}{color[0400]}input 1 port{color[ffff]}{[0001|ffff]}.
081	Connect the {[0001|1a00]}{color[0400]}Constant Nodon{color[ffff]}{[0001|ffff]} to the\nComparison Nodon's {[0001|1a00]}{color[0400]}input 2 port{color[ffff]}{[0001|ffff]}.
084	Now we need a {[0001|1a00]}{color[0400]}chime {color[ffff]}{[0001|ffff]}for when the\ncorrect answer has been entered.
085	The {[0001|1a00]}{color[0400]}Play-Sound Nodon{color[ffff]}{[0001|ffff]} is good at\nchimes, right? Let's call one up from\n{[0001|1a00]}{color[0400]}Play SFX{color[ffff]}{[0001|ffff]} and put it in the blue frame.
086	Connect the Comparison Nodon's\n{color[0400]}{[0001|1a00]}output port{[0001|ffff]} {color[ffff]}to the Play-Sound Nodon's\n{[0001|1a00]}{color[0400]}play port{color[ffff]}{[0001|ffff]}.
087	"As if to commemorate your great\nachievement, a chime rang out. Was it\na blessing from some higher power?"
089	DING-DONG!
090	Now when the number on the device\nreaches 26, the success noise will play.
091	Let's give it a test run, and I'll explain\neverything in the process.
092	Punch the button with \nuntil the number on the device\nreaches 26.
093	You got it!
096	Our {[0001|1a00]}{color[0400]}answer-check{color[ffff]}{[0001|ffff]} system\nis now in place.
098	Thanks for bearing with me.\nNow I'll explain {[0001|1a00]}{color[0400]}why the answer was 26{color[ffff]}{[0001|ffff]}.
099	Smash the crate for me,\nwould you?
100	Now, first of all, look closely\nat the {[0001|1a00]}{color[0400]}shape of the code{color[ffff]}{[0001|ffff]}.
102	If you were to unfold a die so that\neach of its sides were flattened out,\nthis is how it would look.
107	You can see that some sides are\nmissing their dots. That blank white\npart must be hiding a number.
108	Similarly, the {[0001|1a00]}{color[0400]}light-blue area{color[ffff]}{[0001|ffff]} must\nbe hiding {[0001|1a00]}{color[0400]}two more {color[ffff]}{[0001|ffff]}numbers.
109	As it happens, the {[0001|1a00]}{color[0400]}light-blue\npanel {color[ffff]}{[0001|ffff]}over on the device also\nrequires two digits.
110	What does that mean? It means we\nhave to enter the {[0001|1a00]}{color[0400]}numbers hidden in\nthe light blue parts of the secret code{color[ffff]}{[0001|ffff]}!
113	So then, what exactly ARE\nthese two numbers?
114	Well, we can already see the\n1, 3, and 5 faces on the dice.\nThat leaves us with {[0001|1a00]}{color[0400]}2, 4, and 6{color[ffff]}{[0001|ffff]}.
116	If you {[0001|1a00]}{color[0400]}know the way a die works{color[ffff]}{[0001|ffff]},\nyou can work out exactly how many\ndots appear on each side!
118	The trick is that the numbers on each\nset of opposite-facing sides will always\nadd up to {[0001|1a00]}{color[0400]}7{color[ffff]}{[0001|ffff]}.
119	So the opposite side of {[0001|1a00]}{color[0400]}1{color[ffff]}{[0001|ffff]} is {[0001|1a00]}{color[0400]}6{color[ffff]}{[0001|ffff]},\nthe opposite side of {[0001|1a00]}{color[0400]}2{color[ffff]}{[0001|ffff]} is {[0001|1a00]}{color[0400]}5{color[ffff]}{[0001|ffff]},\nand the opposite side of {[0001|1a00]}{color[0400]}3{color[ffff]}{[0001|ffff]} is {[0001|1a00]}{color[0400]}4{color[ffff]}{[0001|ffff]}.
120	If you were to turn this die\ninto a cube, this side would\nbe on the opposite side of {[0001|1a00]}{color[0400]}3{color[ffff]}{[0001|ffff]}.
121	That means this has to be {[0001|1a00]}{color[0400]}4{color[ffff]}{[0001|ffff]}.
122	And since this one is on\nthe opposite side of {[0001|1a00]}{color[0400]}5{color[ffff]}{[0001|ffff]}...
123	this one must be {[0001|1a00]}{color[0400]}2{color[ffff]}{[0001|ffff]}.
124	And then we've got this one\non the opposite side of {[0001|1a00]}{color[0400]}1{color[ffff]}{[0001|ffff]}.
125	So this has got to be {[0001|1a00]}{color[0400]}6{color[ffff]}{[0001|ffff]}!
126	This tells us that the two\nlight-blue sections must be\nthe numbers {[0001|1a00]}{color[0400]}2{color[ffff]}{[0001|ffff]} and {[0001|1a00]}{color[0400]}6{color[ffff]}{[0001|ffff]}!
128	And that's how we get to\nour answer of {[0001|1a00]}{color[0400]}26{color[ffff]}{[0001|ffff]}!
129	So that's it. That's how you\nsolve the secret code.
130	The next time you let your friends\nplay this game, you can show off\nyour superior puzzle knowledge!
131	You CAN solve this puzzle\n{[0001|1a00]}{color[0400]}without breaking the crate{color[ffff]}{[0001|ffff]} by simply\nentering 26 into the device, though.
133	It would be pretty disappointing if someone\naccidentally stumbled upon the right answer\n{[0001|1a00]}{color[0400]}without noticing the code{color[ffff]}{[0001|ffff]}...
138	But what we can do is stop them\nfrom entering the right answer\n{[0001|1a00]}{color[0400]}until they've broken the crate{color[ffff]}{[0001|ffff]}!
139	First we need to check {[0001|1a00]}{color[0400]}whether\nor not the crate has been broken{color[ffff]}{[0001|ffff]}.
140	The crate-breaking behavior we made\nin Step 4 will come in handy here.
141	This Comparison Nodon here\n{[0001|1a00]}{color[0400]}constantly outputs a signal\nonce the crate has been broken{color[ffff]}{[0001|ffff]}.
142	We can repurpose it to check\n{[0001|1a00]}{color[0400]}whether the crate is broken{color[ffff]}{[0001|ffff]}.
143	Call up a {[0001|1a00]}{color[0400]}Wormhole-Entrance Nodon{color[ffff]}{[0001|ffff]}\nand put it in the blue frame.
144	Link the {[0001|1a00]}{color[0400]}Comparison Nodon{color[ffff]}{[0001|ffff]} and\n{[0001|1a00]}{color[0400]}Wormhole-Entrance Nodon{color[ffff]}{[0001|ffff]}.
145	This is Entrance A, over!\nIf that crate breaks, you'll be\nthe first to know, over!
146	Now call up a {[0001|1a00]}{color[0400]}Wormhole-Exit Nodon{color[ffff]}{[0001|ffff]}\nand put it in the blue frame.
147	Exit A, reporting for duty!\nWill inform ASAP if our\ncrate goes AWOL, over!
148	With this, we can check\n{[0001|1a00]}{color[0400]}whether the crate has broken{color[ffff]}{[0001|ffff]}.
150	So now we need to {[0001|1a00]}{color[0400]}check for two things{color[ffff]}{[0001|ffff]}:\n1) Has the crate broken?\n2) Is the number 26 on the display?
151	Call up an {[0001|1a00]}{color[0400]}AND Nodon{color[ffff]}{[0001|ffff]}, and\nplace it in the blue frame.
152	We can erase\nthe connection here.
153	And off it comes!
154	Link the {[0001|1a00]}{color[0400]}Wormhole-Exit Nodon{color[ffff]}{[0001|ffff]} with\nthe AND Nodon's {[0001|1a00]}{color[0400]}input 2 port{color[ffff]}{[0001|ffff]}.
155	This Comparison Nodon has already\nbeen checking to see {[0001|1a00]}{color[0400]}if the number\n26 appears on the device{color[ffff]}{[0001|ffff]}.
156	So what we can do is link up the\nComparison Nodon's {[0001|1a00]}{color[0400]}output port\n{color[ffff]}{[0001|ffff]}with the AND Nodon's {[0001|1a00]}{color[0400]}input 1 port{color[ffff]}{[0001|ffff]}.
157	Ahoy there! I'll check for the\nnumber 26 and see whether the\ncrate has been broken, right?
158	Great! I'll stand by for when\nboth of these things occur, then!
160	Now then, let's connect the\nAND Nodon's {[0001|1a00]}{color[0400]}output port{color[ffff]}{[0001|ffff]} to the\nPlay-Sound Nodon's {[0001|1a00]}{color[0400]}play port{color[ffff]}{[0001|ffff]}.
161	If all goes to plan, this should mean\nthat we can't enter a correct answer\nuntil the crate has been broken.
162	Let's see for ourselves whether\nthat's really the case.
163	Try entering the {[0001|1a00]}{color[0400]}number 26 {color[ffff]}{[0001|ffff]}on the wall\n{[0001|1a00]}{color[0400]}before breaking the crate{color[ffff]}{[0001|ffff]}.
164	I said {[0001|1a00]}{color[0400]}not to break the crate{color[ffff]}{[0001|ffff]}.\nWhat a rascal...
164-01	Let's try this again\nfrom the top.
165	Perfect. That's what we want to\nhappen: absolutely nothing!
167	Could you hit the Retry button\nfor me, please?
168	Now {[0001|1a00]}{color[0400]}break the crate first{color[ffff]}{[0001|ffff]}, and then\nenter "26" into the device.
169	There goes the chime, so it must\nhave recognized the right answer.
173	Wow! The whole {[0001|1a00]}{color[0400]}puzzle-solving part{color[ffff]}{[0001|ffff]}\nof our game is finished!
174	Let's get on over to\nthe program screen!
175	How time flies, huh?
176	Pat yourself on the back, because\nwe've made it through Step 6!
177	I am constantly\nimpressed.
178	Congratulations!
179	I just HAVE to know\nwhat comes next!
180	You deserve some party noise!\nA-boomba-boomba-BOOM!
181	This time we made it possible\nto enter the code's solution into\nthe wall device.
184	In the next step, we'll finally get round\nto making the {[0001|1a00]}{color[0400]}mechanism that opens the\nhidden door{color[ffff]}{[0001|ffff]} at the end of the puzzle.
185	"The walls part, and the hidden door grinds\nto life. Looking on in awe and anticipation,\nyou steel yourself for what comes next..."
186	"To be continued..."
187	Thrilling stuff!\nSee you in the next step!
Lesson_SecretRoom_06.msbt
000	The Mystery Room cordially\ninvites you to Step 7.
001	Last time, we worked on getting\nthe {[0001|1a00]}{color[0400]}wall device fully functional{color[ffff]}{[0001|ffff]}.
005	But now it's time to deliver the\nbig reveal: the moment when the\n{[0001|1a00]}{color[0400]}hidden door opens{color[ffff]}{[0001|ffff]}!
006	Right now we can operate the\nhidden door manually with , but\nwe're going to change that now.
007	It's going to {[0001|1a00]}{color[0400]}move itself automatically\nafter the puzzle has been solved{color[ffff]}{[0001|ffff]}!
008	We'll be tackling this\nin {[0001|1a00]}{color[0400]}two stages{color[ffff]}{[0001|ffff]}.
009	First it'll {[0001|1a00]}{color[0400]}slide back into the wall\n{color[ffff]}{[0001|ffff]}and then {[0001|1a00]}{color[0400]}move to the side{color[ffff]}{[0001|ffff]}.
010	OK, let's make the magic happen!
011	First, let's say goodbye to the {[0001|1a00]}{color[0400]}Stick Nodon{color[ffff]}{[0001|ffff]}\nconnected to the Free-Slide-Connector Nodon.
012	So long, {[0001|1a00]}{color[0400]}Stick Nodon\nfor Left/Right{color[ffff]}{[0001|ffff]}...
013	And farewell, {[0001|1a00]}{color[0400]}Stick Nodon\nfor Up/Down{color[ffff]}{[0001|ffff]}!
014	Good. The door should open when the puzzle\nis solved—so after{[0001|1a00]}{color[0400]} the crate has been broken\n{color[ffff]}{[0001|ffff]}and {[0001|1a00]}{color[0400]}the correct answer has been entered{color[ffff]}{[0001|ffff]}.
014-01	Our {[0001|1a00]}{color[0400]}AND Nodon {color[ffff]}{[0001|ffff]}friend will be the one\noutputting the signal at that time.
015	So let's get this {[0001|1a00]}{color[0400]}AND Nodon{color[ffff]}{[0001|ffff]} set up to\n{[0001|1a00]}{color[0400]}output a signal to open the door{color[ffff]}{[0001|ffff]}.
017	The programming could get a tad\ncomplicated here, so we're going\nto be using some {[0001|1a00]}{color[0400]}wormholes{color[ffff]}{[0001|ffff]}.
018	Call up a {[0001|1a00]}{color[0400]}Wormhole-Entrance Nodon{color[ffff]}{[0001|ffff]},\nand put it in the blue frame.
019	Open the settings.
020	Set the {[0001|1a00]}Wormhole ID{[0001|ffff]} to {[0001|1a00]}{color[0400]}B{color[ffff]}{[0001|ffff]}.
021	Great!\nNow close the settings.
022	Next, we want to connect the\n{[0001|1a00]}{color[0400]}AND Nodon{color[ffff]}{[0001|ffff]} and {[0001|1a00]}{color[0400]}Wormhole-\nEntrance Nodon{color[ffff]}{[0001|ffff]}.
023	This is Entrance B, over!\nReady to report when the\npuzzle is solved, over!
024	We'll need to make some room\nfor the door-opening behavior.
025	Call up a {[0001|1a00]}{color[0400]}Wormhole-Exit Nodon{color[ffff]}{[0001|ffff]},\nand put it in the blue frame.
026	Open the settings, please.
027	We'll change this one's\n{[0001|1a00]}Wormhole ID{[0001|ffff]} to {[0001|1a00]}{color[0400]}B{color[ffff]}{[0001|ffff]}.
028	Nice.\nNow close those settings.
029	This is Exit B, repeat, Exit B.\nReady to transmit as soon\nas player solves puzzle, over.
030	Okey-dokey! First up, we have to make\nthe door slide {[0001|1a00]}{color[0400]}inward{color[ffff]}{[0001|ffff]}. That means\nit has to move {[0001|1a00]}{color[0400]}along the x-axis{color[ffff]}{[0001|ffff]}.
032	Call up a {[0001|1a00]}{color[0400]}Counter Nodon{color[ffff]}{[0001|ffff]}, and\nput it in the blue frame.
033	Open the settings,\nas per usual.
034	Set the {[0001|1a00]}Mode{[0001|ffff]} to {[0001|1a00]}{color[0400]}Range{color[ffff]}{[0001|ffff]}.
035	For the {[0001|1a00]}Count Range{[0001|ffff]}, set the\nvalues to {[0001|1a00]}{color[0400]}0{color[ffff]}{[0001|ffff]} and {[0001|1a00]}{color[0400]}60{color[ffff]}{[0001|ffff]}.
036	Super!\nNow close the settings.
037	Connect the {[0001|1a00]}{color[0400]}Wormhole-Exit\nNodon {color[ffff]}{[0001|ffff]}with the Counter Nodon's\n{[0001|1a00]}{color[0400]}count up port{color[ffff]}{[0001|ffff]}.
038	ASKING A COUNTER TO COUNT\nFROM 0 TO 60 IS ALMOST INSULTING.\nBE GLAD WE HAVE NO EMOTIONS.
039	Next, we'll convert the {[0001|1a00]}{color[0400]}number\nthat's being counted{color[ffff]}{[0001|ffff]} into the {[0001|1a00]}{color[0400]}distance\n{color[ffff]}{[0001|ffff]}that the hidden door moves.
040	Call up a {[0001|1a00]}{color[0400]}Map Nodon{color[ffff]}{[0001|ffff]}, and\nset it down in the blue frame.
041	Whoa!\nThe hidden door's really\ngoing to open?!
042	But then it's not even going\nto be hidden anymore!\nNo! I won't stand for it!
043	Sorry, but we kind of have to...\nUm... Let's open the settings.
044	For the {[0001|1a00]}Input Range{[0001|ffff]},\nenter {[0001|1a00]}{color[0400]}0.00{color[ffff]}{[0001|ffff]} and {[0001|1a00]}{color[0400]}60.00{color[ffff]}{[0001|ffff]}.
045	And for the {[0001|1a00]}Output Range{[0001|ffff]},\nput in {[0001|1a00]}{color[0400]}0.00{color[ffff]}{[0001|ffff]} and {[0001|1a00]}{color[0400]}0.30{color[ffff]}{[0001|ffff]}.
046	Great!\nNow close the settings.
047	Connect the Counter Nodon's\n{[0001|1a00]}{color[0400]}output port{color[ffff]}{[0001|ffff]} to the Map Nodon's\n{[0001|1a00]}{color[0400]}input port{color[ffff]}{[0001|ffff]}.
048	Now the Counter Nodon's counter\nwill be converted into the distance\nthat the hidden door slides.
049	Let's make sure the\n{[0001|1a00]}{color[0400]}Free-Slide-Connector Nodon{color[ffff]}{[0001|ffff]}\nknows what's up.
050	Call up a {[0001|1a00]}{color[0400]}Wormhole-Entrance Nodon{color[ffff]}{[0001|ffff]},\nand drop it next to the Map Nodon.
051	Open the settings.
052	The {[0001|1a00]}Wormhole ID{[0001|ffff]} can be {[0001|1a00]}{color[0400]}X{color[ffff]}{[0001|ffff]}.
052-01	The door will be moving along\nthe {[0001|1a00]}{color[0400]}x-axis{color[ffff]}{[0001|ffff]}, so using {[0001|1a00]}Wormhole ID{[0001|ffff]} {[0001|1a00]}{color[0400]}X\n{color[ffff]}{[0001|ffff]}will make it easy for us to follow.
052-02	In general, it's good practice to use\nWormhole ID letters that {[0001|1a00]}{color[0400]}make sense to\nyou when you go back to look at them{color[ffff]}{[0001|ffff]}.
053	Mind closing the settings now?
054	Connect the {[0001|1a00]}{color[0400]}Map Nodon{color[ffff]}{[0001|ffff]} and\n{[0001|1a00]}{color[0400]}Wormhole-Entrance Nodon{color[ffff]}{[0001|ffff]}.
055	Entrance X, ready to report\nthe converted distance, over!
056	Call up a {[0001|1a00]}{color[0400]}Wormhole-Exit Nodon{color[ffff]}{[0001|ffff]},\nand put it in the blue frame.
057	Get those settings open!
058	Set the {[0001|1a00]}Wormhole ID{[0001|ffff]} to {[0001|1a00]}{color[0400]}X{color[ffff]}{[0001|ffff]}.
059	Aaaand now close the settings.
060	This is Exit X, over!\nReady to go the distance\nreporting the converted distance!
061	Connect the Wormhole-Exit Nodon to\nthe Free-Slide-Connector Nodon's {[0001|1a00]}{color[0400]}X port{color[ffff]}{[0001|ffff]}.
068-00	Now when the puzzle has been solved,\nthe door will slide open along the x-axis.
068	We should see how this\nlooks in the game.
069	Smash the crate, and enter 26\non the wall panel, please.
070	If you accidentally go over 26,\nyou can just retry or keep pressing\nuntil it loops round again.
073	I saw a little movement there!
075	There's more to go, though.\nThis was just the first step.
076	Next we need to make\nthe door slide sideways.
077	Head on over to\nthe program screen.
078	Before that, though, there's\nsomething we have to do.
079	It's going to be a pain to have\nto enter the number on the wall\nevery time, don't you think?
080	So how about if we just get\nthe door to move {[0001|1a00]}{color[0400]}as soon as\nwe start the game{color[ffff]}{[0001|ffff]}?
081	Call up a {[0001|1a00]}{color[0400]}Constant Nodon{color[ffff]}{[0001|ffff]}, and\nput it in the blue frame.
082	Connect the {[0001|1a00]}{color[0400]}Constant Nodon {color[ffff]}{[0001|ffff]}to the\nCounter Nodon's {[0001|1a00]}{color[0400]}count up port{color[ffff]}{[0001|ffff]}.
082-01	The signal I send to the Counter Nodon\nwill remain as constant as the north star!
082-02	The door shall fling itself open as\nyou begin the game, and the burden\nof your check shall be lightened!
083	A steadfast example of how\n{[0001|1a00]}{color[0400]}a little fine-tuning can increase\nyour productivity{color[ffff]}{[0001|ffff]}!
084	Let's go check out the\nprogress we've made.
085	And the door moved\nright away!
086	That should make it a lot easier\nfor us to get this finished.
087	Now, let's get back to\nwhat we were doing.
088	We want the door to move along the\nz-axis. That means it'll go {[0001|1a00]}{color[0400]}sideways{color[ffff]}{[0001|ffff]}.
089	It shouldn't move sideways {[0001|1a00]}{color[0400]}until\nit's finished moving back{color[ffff]}{[0001|ffff]}, though.\n
090	First, let's check whether it's\nmoved all the way back.
091	Call up a {[0001|1a00]}{color[0400]}= Comparison Nodon\n{color[ffff]}{[0001|ffff]}and place it in the blue frame.
092	We should call up and place\na {[0001|1a00]}{color[0400]}Constant Nodon{color[ffff]}{[0001|ffff]} as well.
093	Open the settings.
094	Set the {[0001|1a00]}Output Value{[0001|ffff]}\nto {[0001|1a00]}{color[0400]}60.00{color[ffff]}{[0001|ffff]}.
095	That's the way.\nNow close the settings.
096	Connect the Counter Nodon's {[0001|1a00]}{color[0400]}output port\n{color[ffff]}{[0001|ffff]}to the Comparison Nodon's {[0001|1a00]}{color[0400]}input 1 port{color[ffff]}{[0001|ffff]}.
097	This {[0001|1a00]}{color[0400]}Constant Nodon {color[ffff]}{[0001|ffff]}needs to\nconnect to the Comparison Nodon's\n{[0001|1a00]}{color[0400]}input 2 port{color[ffff]}{[0001|ffff]}.
098	What's going to happen when the\nCounter Nodon counts to 60?!\nOhh, I can't take the suspense!
100	OK, let's get this door\n{[0001|1a00]}{color[0400]}sliding to the side{color[ffff]}{[0001|ffff]}.
101	Call up a {[0001|1a00]}{color[0400]}Counter Nodon{color[ffff]}{[0001|ffff]}, and\nput it in the blue frame.
102	Open up its settings.
103	Set the {[0001|1a00]}Mode{[0001|ffff]} to {[0001|1a00]}{color[0400]}Range{color[ffff]}{[0001|ffff]}.
104	The {[0001|1a00]}Count Range{[0001|ffff]} should go\nfrom {[0001|1a00]}{color[0400]}0{color[ffff]}{[0001|ffff]} to {[0001|1a00]}{color[0400]}180{color[ffff]}{[0001|ffff]}.
104-01	The Counter Nodon we used before\nwent from 0 to 60, so this one will take\n{[0001|1a00]}{color[0400]}three times as long{color[ffff]}{[0001|ffff]}.
105	Now if you could\nclose the settings...
106	Connect the Comparison Nodon's\n{[0001|1a00]}{color[0400]}output port{color[ffff]}{[0001|ffff]} to the Counter Nodon's\n{[0001|1a00]}{color[0400]}count up port{color[ffff]}{[0001|ffff]}.
107	I WILL COUNT FROM 0 TO 180.\nNO INTEGER WILL BE LEFT BEHIND.
108	WHEN MY COUNTER NODON\nCOUNTERPART {[0001|1a00]}{color[0400]}FINISHES COUNTING{color[ffff]}{[0001|ffff]},\nI WILL START COUNTING.
110	OK, it's time to convert the {[0001|1a00]}{color[0400]}numbers\nbeing counted{color[ffff]}{[0001|ffff]} into the {[0001|1a00]}{color[0400]}distance{color[ffff]}{[0001|ffff]} moved.
111	Call up a {[0001|1a00]}{color[0400]}Map Nodon{color[ffff]}{[0001|ffff]}, and set it\nover beside the Counter Nodon.
112	Open the settings.
113	Punch in {[0001|1a00]}{color[0400]}0.00{color[ffff]}{[0001|ffff]} and {[0001|1a00]}{color[0400]}180.00{color[ffff]}{[0001|ffff]}\nfor the {[0001|1a00]}Input Range{[0001|ffff]}...
114	and {[0001|1a00]}{color[0400]}-3.20{color[ffff]}{[0001|ffff]} to {[0001|1a00]}{color[0400]}0.00{color[ffff]}{[0001|ffff]} for\nthe {[0001|1a00]}Output Range{[0001|ffff]}.
115	Now press {color[0400]}{[0001|0400]}{[0001|ffff]}{color[ffff]} to\n{[0001|1a00]}{color[0400]}invert{color[ffff]}{[0001|ffff]} the mapping.
117	Now an input of {[0001|1a00]}{color[0400]}0.00{color[ffff]}{[0001|ffff]} will output {[0001|1a00]}{color[0400]}0.00{color[ffff]}{[0001|ffff]}\nand an input of {[0001|1a00]}{color[0400]}180.00{color[ffff]}{[0001|ffff]} will output {[0001|1a00]}{color[0400]}-3.20{color[ffff]}{[0001|ffff]}.
119	OK, close the settings.
120	Link the Counter Nodon's {[0001|1a00]}{color[0400]}output port{color[ffff]}{[0001|ffff]}\nwith the Map Nodon's {[0001|1a00]}{color[0400]}input port{color[ffff]}{[0001|ffff]}.
121	Giving away the game's biggest\nsecret right off the bat?\nThat's insane!
122	We'll send the results of the conversion\nto the {[0001|1a00]}{color[0400]}Free-Slide-Connector Nodon{color[ffff]}{[0001|ffff]}.
123	Call up a {[0001|1a00]}{color[0400]}Wormhole-Entrance Nodon{color[ffff]}{[0001|ffff]},\nand place it on the side.
124	Open the settings.
125	Since we're moving along the z-axis,\nset the {[0001|1a00]}Wormhole ID{[0001|ffff]} to {[0001|1a00]}{color[0400]}Z{color[ffff]}{[0001|ffff]} to keep\nthings simple.
126	Good, good!\nClose the settings.
127	Now link the {[0001|1a00]}{color[0400]}Map Nodon{color[ffff]}{[0001|ffff]} with the\n{[0001|1a00]}{color[0400]}Wormhole-Entrance Nodon{color[ffff]}{[0001|ffff]}.
128	Entrance Z, ready to report\nthe distance along the z-axis\nas required, over!
129	Call up a {[0001|1a00]}{color[0400]}Wormhole-Exit Nodon{color[ffff]}{[0001|ffff]},\nand put it in the blue frame.
130	Open the settings.
131	Set the {[0001|1a00]}Wormhole ID{[0001|ffff]} to {[0001|1a00]}{color[0400]}Z{color[ffff]}{[0001|ffff]}.
132	OK, now close the settings.
133	Exit Z, standing by. Fully committed\nto conveying z-axis distance, over!
134	Link the Wormhole-Exit Nodon to\nthe Free-Slide-Connector Nodon's\n{[0001|1a00]}{color[0400]}Z port{color[ffff]}{[0001|ffff]}.
135	"Slowly but surely the door opens,\nheralding the existence of the\nconcealed alcove..."
136	Oh hey, looks like you got\nthe door moving.
137	You wanna go check out\nmy skills on-screen?
138	I see no reason not to!
142	Perfect! Looks like we got\nthe door to open all by itself.
144	Doesn't it look cool, sliding back\nand then opening to the side?
145	Just head back over to the\nprogram screen when you've had\nenough of this intense door action.
146	I think we can call this lesson done.
147	Step 7 is wrapped!
148	Not a bad effort.
149	Aren't you just the\nbee's knees!
150	Good job, over!
151	You've still got it.
152	This time, we programmed\nthe door to open automatically\nand with style.
153	In the next step, we'll be delivering\nsome finishing touches to our door\nmechanism to {[0001|1a00]}{color[0400]}make it look ultra cool{color[ffff]}{[0001|ffff]}.
154	It'll be a grand finale to really make\nyou feel like you've reached the end\nof the puzzle.
155	"The room quakes with a terrific grinding\nof cogs, and at last the door opens,\nrevealing the truth that lies within..."
156	"To be continued..."
157	Good work!\nSee you in the next step!
Lesson_SecretRoom_07.msbt
000	Good to see you again,\n{[0201]}!
001	You'll remember how we made the\nhidden door {[0001|1a00]}{color[0400]}open by itself{color[ffff]}{[0001|ffff]} last time.
005	This time we're going to make\nthe door opening scene feel even\ncooler, like a totally epic finale!
006	We're so close!\nHurry! To the program screen!
007	First off, we'll have an effect play\n{[0001|1a00]}{color[0400]}once the door has finished opening{color[ffff]}{[0001|ffff]}.
009	We can tell when that is too.\nIt's when the {[0001|1a00]}{color[0400]}Counter Nodon\n{color[ffff]}{[0001|ffff]}has counted up to {[0001|1a00]}{color[0400]}180{color[ffff]}{[0001|ffff]}.
010	Call up a {[0001|1a00]}{color[0400]}Comparison Nodon for ={color[ffff]}{[0001|ffff]},\nand put it in the blue frame.
011	Now call up a {[0001|1a00]}{color[0400]}Constant Nodon{color[ffff]}{[0001|ffff]},\nand put it in this blue frame.
012	Open the settings.
013	Set the {[0001|1a00]}Output Value{[0001|ffff]}\nto {[0001|1a00]}{color[0400]}180.00{color[ffff]}{[0001|ffff]}.
014	Now close the settings.
015	Connect the Counter Nodon's {[0001|1a00]}{color[0400]}output port\n{color[ffff]}{[0001|ffff]}to the Comparison Nodon's {[0001|1a00]}{color[0400]}input 1 port{color[ffff]}{[0001|ffff]}.
016	Connect the {[0001|1a00]}{color[0400]}Constant Nodon{color[ffff]}{[0001|ffff]} to the\nComparison Nodon's {[0001|1a00]}{color[0400]}input 2 port{color[ffff]}{[0001|ffff]}.
017	"You watch the heavy door expectantly\nas it slides open, the anticipation forming\nall kinds of wild ideas in your mind."
019	Ahhhhhh! I can't stand the \nsuspense! What's inside?!
020	Now we'll work on making the effect\nplay once the door has fully opened.
021	Call up a {[0001|1a00]}{color[0400]}party popper{color[ffff]}{[0001|ffff]} Effect Nodon,\nand drop it in the blue frame.
022	Link the Comparison Nodon's\n{[0001|1a00]}{color[0400]}output port{color[ffff]}{[0001|ffff]} to the {[0001|1a00]}{color[0400]}Effect Nodon{color[ffff]}{[0001|ffff]}.
024	Oh, yeah! You gotta give the\ncrowd some excitement!
025	I brought some popcorn so we\ncan celebrate when we're done.
026	What? There's no party later?\nWhy is there no party later?
027	Er... Party... Yeeeah... \nLet's just go see\nwhat happened.
028	Crack-crack-crack-crack!
029	The party poppers went off\nonce the door finished opening!
031	That Nodon's right. Makes you\nwant to celebrate, doesn't it?
032	But it still feels like we're\nmissing something...
033	It's a hidden door, so it should\nopen with a bit more...weight!
037	Let's give it a door-opening\nsound for even more impact.
038	We can have this sound effect play\n{[0001|1a00]}{color[0400]}while the door is moving{color[ffff]}{[0001|ffff]}.
039	More specifically, it needs to play\n{[0001|1a00]}{color[0400]}only while the door is opening\n{color[ffff]}{[0001|ffff]}and not after.
040	The {[0001|1a00]}{color[0400]}Comparison Nodon{color[ffff]}{[0001|ffff]} here tells us\n{[0001|1a00]}{color[0400]}when the door has finished opening{color[ffff]}{[0001|ffff]}.
041	If we link it with a NOT Nodon,\nit'll output a signal for {[0001|1a00]}{color[0400]}as long as\nthe door is still opening{color[ffff]}{[0001|ffff]}!
042	Call up a {[0001|1a00]}{color[0400]}NOT Nodon{color[ffff]}{[0001|ffff]}, and\nput it in the blue frame.
043	Link the Comparison Nodon's {[0001|1a00]}{color[0400]}output port\n{color[ffff]}{[0001|ffff]}with the NOT Nodon's {[0001|1a00]}{color[0400]}input port{color[ffff]}{[0001|ffff]}.
044	For {[0001|1a00]}{color[0400]}sound effects{color[ffff]}{[0001|ffff]}, we can use the\n{[0001|1a00]}{color[0400]}Play-Sound Nodon{color[ffff]}{[0001|ffff]}. Call one up, and\nput it in the blue frame.
045	Open the settings.
046	Have a look in {[0001|1a00]}Machines{[0001|ffff]},\nthen pick {[0001|1a00]}{color[0400]}Cogs{color[ffff]}{[0001|ffff]}.
047	There we go!\nNow close the settings.
048	Connect the {[0001|1a00]}{color[0400]}NOT Nodon{color[ffff]}{[0001|ffff]} to the\nPlay-Sound Nodon's {[0001|1a00]}{color[0400]}play port{color[ffff]}{[0001|ffff]}.
049	"The clamorous noise of iron upon iron\nreverberates, the sound carrying across\nthe floor and throughout the entire room..."
050	Rum-da-da-dum!\nLet's get rumbly, folks!
051	I kinda wanna listen to\nour new sound effect...
052	Wow...\nGives you goosebumps,\ndoesn't it?
053	I think we've managed to capture the\nweight of a moving door quite nicely.
056	We might have run up\nagainst a slight problem with\nthe sound effect, though.
057	Let's head to the program screen\nto see if we can figure it out.
058	We'll have to say goodbye to our\n{[0001|1a00]}{color[0400]}Constant Nodon{color[ffff]}{[0001|ffff]}. Let's give it\na good send-off.
059	It'll turn up again somewhere\ndown the line, I'm sure.
059-01	Now the {[0001|1a00]}{color[0400]}door won't open{color[ffff]}{[0001|ffff]} {[0001|1a00]}{color[0400]}until the\npuzzle has been solved{color[ffff]}{[0001|ffff]}, like before.
060	Let's see how what we've done\nhas changed the situation.
061	Because the door's not moving,\nthe sound of cogs grinding\ngoes on forever...
063	We designed it so that the sound plays\n{[0001|1a00]}{color[0400]}as long as the door hasn't finished opening{color[ffff]}{[0001|ffff]}.
064	Since the door hasn't even begun to\nopen {[0001|1a00]}{color[0400]}before the puzzle is solved{color[ffff]}{[0001|ffff]}, the\nsound effect will keep on playing!
066	So we need to make sure that\nit doesn't play {[0001|1a00]}{color[0400]}before the puzzle\nis solved{color[ffff]}{[0001|ffff]}.
067	First, let's get rid of\nthis connection.
068	Snip snip!
068-01	Whew!\nPeace and quiet, at last!
068-02	Now, we're going to make sure that the\neffect only plays {[0001|1a00]}{color[0400]}after the puzzle's solved{color[ffff]}{[0001|ffff]}\nbut {[0001|1a00]}{color[0400]}before the door has finished opening{color[ffff]}{[0001|ffff]}.
069	We have to check for {[0001|1a00]}{color[0400]}two conditions{color[ffff]}{[0001|ffff]}:\n{[0001|1a00]}{color[0400]}whether the puzzle is solved{color[ffff]}{[0001|ffff]} and\n{[0001|1a00]}{color[0400]}whether the door is still opening{color[ffff]}{[0001|ffff]}.
070	When we want to check two things\nat once, we use an {[0001|1a00]}{color[0400]}AND Nodon{color[ffff]}{[0001|ffff]}.\nCall one up, and put it in the blue frame.
071	Now, what was outputting a signal\n{[0001|1a00]}{color[0400]}when the puzzle is solved{color[ffff]}{[0001|ffff]}?
072	Seems like the {[0001|1a00]}{color[0400]}Wormhole-Exit Nodon\n{color[ffff]}{[0001|ffff]}here is in need of a {[0001|1a00]}{color[0400]}copy{color[ffff]}{[0001|ffff]}.
073	So copy it on over!
074	And place it in the blue frame.
075	Connect the NOT Nodon's {[0001|1a00]}{color[0400]}output port{color[ffff]}{[0001|ffff]}\nto the AND Nodon's {[0001|1a00]}{color[0400]}input 1 port{color[ffff]}{[0001|ffff]}.
076	Connect the {[0001|1a00]}{color[0400]}Wormhole-Exit Nodon{color[ffff]}{[0001|ffff]}\nwith the AND Nodon's {[0001|1a00]}{color[0400]}input 2 port{color[ffff]}{[0001|ffff]}.
077	Hey! Is the door still not done opening?\nIs that infernal puzzle finally solved?
078	When both of those conditions are fulfilled,\nI can be absolutely certain that the door is\nin motion! And I'll pass it on!
079	Connect the {[0001|1a00]}{color[0400]}AND Nodon {color[ffff]}{[0001|ffff]}here to\nthe Play-Sound Nodon's {[0001|1a00]}{color[0400]}play port{color[ffff]}{[0001|ffff]}.
080	With all that done, the sound effect\nshould now only play {[0001|1a00]}{color[0400]}while the door\nis opening{color[ffff]}{[0001|ffff]}!
081	Let's go check on it.
082	Not a single cog is\ngrinding! Love it!
084	OK. Go and smash the crate.\nThen enter 26 on the wall panel.
085	If you accidentally go over, you can\nretry or keep pressing the button\nuntil it loops back to 26.
086	...
087	We did it!
088	Door moving = sound.\nNo door moving = no sound!
089	I think we can finally say\nthat we're done programming\nour {[0001|1a00]}{color[0400]}hidden door{color[ffff]}{[0001|ffff]}!
090	Let's head over to the\nprogram screen.
091	Very nice.
092	Step 8 is in the bag!
093	You've done us proud.
094	You're persistent.\nI like that!
095	I'm not entirely\nunimpressed.
096	Hooooooo-YEAH!
097	This time, we worked on timing\nsound effects to fit with the\nopening of the hidden door.
099	The next step will be\n{[0001|1a00]}{color[0400]}the last one{color[ffff]}{[0001|ffff]}!
100	So we've completed the puzzle\nand opened the hidden door...
101	But there's a {[0001|1a00]}{color[0400]}very important thing{color[ffff]}{[0001|ffff]}\nthat we're still missing, isn't there?
102	Yep! The hidden alcove\nneeds a {[0001|1a00]}{color[0400]}treasure trove{color[ffff]}{[0001|ffff]}!
103	As for what the treasure actually is,\nI'll leave that part up to you,\n{[0201]}.
104	So think about what you might\nwant the treasure to be...
105	"Puzzle solved and secret door wide open,\nat last your eyes descend upon the hidden\ntreasure, now mere feet away from you..."
106	"To be continued..."
107	See you in the next step!
Lesson_SecretRoom_08.msbt
000	Hello, {[0201]}!
002	It's been a long time coming,\nbut we've finally made it to the\nfinal step of our {[0001|1a00]}{color[0400]}Mystery Room{color[ffff]}{[0001|ffff]}.
003	To finish off, we're going to be\nadding some {[0001|1a00]}{color[0400]}background music\n{color[ffff]}{[0001|ffff]}and, naturally, our {[0001|1a00]}{color[0400]}hidden treasure{color[ffff]}{[0001|ffff]}.
004	Let's jump right in.\nTo the program screen!
005	We'll start with the\nbackground music.
007	We should use different music\n{[0001|1a00]}{color[0400]}during the puzzle{color[ffff]}{[0001|ffff]} and {[0001|1a00]}{color[0400]}after it{color[ffff]}{[0001|ffff]}.
008	First, let's get music playing for\n{[0001|1a00]}{color[0400]}when the puzzle's in progress{color[ffff]}{[0001|ffff]}.
009	Call up a {[0001|1a00]}{color[0400]}Background-Music Nodon{color[ffff]}{[0001|ffff]},\nand line it up with the blue frame.
009-01	The NOT Nodon we've got here\noutputs a signal as long as the\ndoor hasn't finished opening.
010	We can connect the {[0001|1a00]}{color[0400]}NOT Nodon{color[ffff]}{[0001|ffff]}\nto the Background-Music Nodon's\n{[0001|1a00]}{color[0400]}play port{color[ffff]}{[0001|ffff]}.
012	Oooh, yeah! You got a real brainteaser,\nbetter think real hard, cause the view from\nthe window's nothin' but inspired!
013	Solving the code? Hey, I think it's\npretty fair! You either go home with\nnothing, or you become a millionaire!
013-01	Now we can briefly sort what\n{[0001|1a00]}{color[0400]}theme{color[ffff]}{[0001|ffff]} will play while the puzzle\nis being solved.
014	Next, the music that will play\nafter the puzzle is solved, or rather,\n{[0001|1a00]}{color[0400]}when you find the treasure{color[ffff]}{[0001|ffff]}.
015	Call up another {[0001|1a00]}{color[0400]}Background-Music Nodon{color[ffff]}{[0001|ffff]},\nand put it in the blue frame.
015-01	This {[0001|1a00]}{color[0400]}Comparison Nodon{color[ffff]}{[0001|ffff]} outputs\na signal when the door's finished\nopening.
016	So connect the Comparison Nodon with\nthe Background-Music Nodon's {[0001|1a00]}{color[0400]}play port{color[ffff]}{[0001|ffff]}.
018	Yeah, uh-huh, you solved the puzzle!\nWith all that punching, you must be\npacking some muscle!
019	How's it feel to get your hands on\nthe treasure? You gotta lot to look\nforward to, a lifetime of leisure!
020	We should quickly check that each\nof the songs are playing correctly.
021	Let's set a different background music\ntrack for each Background-Music Nodon.
022	Open the settings\nof the top one.
023	Select the Theme {[0001|1a00]}{color[0400]}Valor{color[ffff]}{[0001|ffff]}.
024	Great!\nYou can close the settings.
025	Now to test out our\nmusic transition!
027	To solve the puzzle, you'll need to\nbreak the crate and then enter the\nnumber 26 on the wall panel.
029	And there we have it.\nThe music changed!
030	As always, I'll let you choose the exact\nmusic to use a little later. You can pick\nwhatever you want.
031	For now, though, let's keep\nprogramming.
032	I think it's about time we make\nour {[0001|1a00]}{color[0400]}hidden treasure{color[ffff]}{[0001|ffff]}!
033	To make the treasure, we'll\nneed to call up a {[0001|1a00]}{color[0400]}Texture Nodon\n{color[ffff]}{[0001|ffff]}and make it fairly big.
034	Switch over to {[0001|1a00]}{color[0400]}side view{color[ffff]}{[0001|ffff]} now.
035	Bring it up so that it's\ntouching the ground.
036	Now change back to\n{[0001|1a00]}{color[0400]}overhead view{color[ffff]}{[0001|ffff]}.
037	"There in the alcove is the\nobject of your heart's desire,\nyour long-sought treasure..."
038	This is it. Draw the object you've\nbeen waiting for all this time!
039	It can be anything at all.\nThe treasure is yours to decide!
041	You can actually use the\nTexture Nodon {[0001|1a00]}{color[0400]}without having\nto connect it{color[ffff]}{[0001|ffff]} to other objects.
042	Let's draw a picture now.\nI'll show you how it works.
043	Open the settings.
044	The hidden alcove's walls are black,\nso your picture will show up better\nif you use brighter colors.
045	OK, go ahead and draw something.\nGet your creative juices flowing!
046	Close the settings\nwhen you're done drawing.
047	Let's take a look!
048	Open the hidden door, please!
050	And there it is, your masterpiece\nrevealed to the world!
051	This is how the treasure will look\nwhen it shows up in your game.
052	Let's go back.
054	"With the treasure firmly in your grasp,\nyou make for the exit, giving the room\na final parting glance as you leave."
055	"Who made this place?\nAnd for what purpose?"
056	"The answer to your questions may never\nbe found. But that's mystery for you..."\n~~~ THE END ~~~
057	I wonder what sort of treasure\nthey found? Intriguing...
058	OK! It's time for the debut of\nyour very own Mystery Room,\n{[0201]}!
059	Feel free to design whatever kind of\ntreasure you want. The sky's the limit!
060	You could make it bags of gold,\nyour favorite food...or even some\nweird ancient relic.
061	Oh, and don't forget you can also\nchange the background music,\nif you prefer something different.
062	Play around a bit until you've found the\nmusic and treasure that you want to use.
063	Press {[0001|1a00]}{color[0400]}Done{color[ffff]}{[0001|ffff]} when you've got\neverything the way you want it.
064	Are you ready?
065	Then start programming!
066	All finished?!\nFantastic! I can't wait!
067	OK, head on over to the game screen\nand let's take a peek at what you've done.
069	I'm going to have to ask you to\nsolve the puzzle one last time!
070	Oh, you made some interesting choices!\nI'm very impressed!
071	Finding treasure to a tune like that\nis sure to brighten up anyone's day!
072	I see, you kept everything\nexactly as it is...
073	I'm puzzled about why you didn't change\nanything, but maybe that was the plan:\nto confuse and confound us all!
074	You know what this means,\ndon't you?
075	It means that Mystery Room is\ntotally finished!
076	Outstanding!\nYou've done it again!
077	Give yourself a pat on the back, and\nhead over to the program screen.
078	I love the part where\nyou punch the button!
079	Mysterious and fancy...\nIt's a winner in my book! ♥
080	That architecture...\nNever seen anything like it!
081	Huh... Might give it\na try someday.
082	Doo doo doo doooo!\nSpooky mystery sounds!\nJust providing a bit of atmosphere.
083	What an amazingly\nawesome puzzle!
084	Filming over?\nI'll get my bags.
085	Our wormholes are\nalways open, over!
086	That {[0001|1a00]}{color[0400]}puzzle{color[ffff]}{[0001|ffff]} was already hard enough\nas it is. And yet you managed to make\nthe whole thing with programming.
087	It goes to show that if you put your mind\nto it, there's no puzzle you can't solve.
088	Three cheers for {[0201]}!\nHip, hip, hurray!
089	I'll add Mystery Room to\nthe My Games list now.
090	Heading back to the menu now.\nSee you in a bit!
Lesson_Shooting_00.msbt
000	{[c903]}{[0201]}!\nHere you are at last!
001	So far, we've completed two lessons...
002	I feel like you're starting to get very familiar\nwith the art of game programming.
003	So get ready for a challenge!\nWe'll call it... Wait for it...
004	Alien Blaster!
005	Space... You could travel through it for a\nmillion years and never get to the end.\nThat's pretty big!
005_00	If you were traveling through it, though, you might\nfind some pesky aliens blocking your path. And\nthat's the inspiration for our game.
006	To be more precise, we're going to make a\n{[0001|1a00]}{color[0400]}side-scrolling blaster game{color[ffff]}{[0001|ffff]}!
007	All right! To the program screen!
008	Time for our bold pilot to make their debut.\nFor this, we'll call on the {[0001|1a00]}{color[0400]}UFO Nodon{color[ffff]}{[0001|ffff]}!
008_00	Select {[0001|1a00]}{color[0400]}Objects{color[ffff]}{[0001|ffff]}.
008_01	Then {[0001|1a00]}{color[0400]}Characters{color[ffff]}{[0001|ffff]}.
008_02	And now {[0001|1a00]}{color[0400]}UFO{color[ffff]}{[0001|ffff]}!
009_00	Greetings, Earthling! Take me to\nyour leader! Haha! I always wanted\nto say that.
010	Good to meet you at last! Word on the\nspace-grapevine is that you're quite the\nprogrammer!
011	And getting a look at you now,\nI can see why.
012	I have no doubt that you'll see this through.
013	You're a mighty Earthling indeed...
014	What an endorsement!
014_00	Let's see what the game screen\nlooks like with a UFO on it!
015	As you might expect, a {[0001|1a00]}{color[0400]}UFO\n{color[ffff]}{[0001|ffff]}appeared, a floating UFO.
016	The aim this time around is to make\na {[0001|1a00]}{color[0400]}side-scrolling blaster game{color[ffff]}{[0001|ffff]}.
017	So let's have our UFO {[0001|1a00]}{color[0400]}face to the right{color[ffff]}{[0001|ffff]}.
018	To the program screen!
019	OK!
020	Select the {[0001|1a00]}{color[0400]}UFO Nodon{color[ffff]}{[0001|ffff]}, and\nopen up the settings.
022	First, let's change the\n{[0001|1a00]}Y-Axis Rotation{[0001|ffff]} to{[0001|1a00]}{color[0400]} -90.00°{color[ffff]}{[0001|ffff]}.
022_00	Next, we want the UFO to {[0001|1a00]}{color[0400]}stay facing right{color[ffff]}{[0001|ffff]}.
023	To do that, we should set\nthe {[0001|1a00]}Turning Speed{[0001|ffff]} to {[0001|1a00]}{color[0400]}0.00{color[ffff]}{[0001|ffff]}.
023_00	Perfect! Close the\nsettings screen.
023_01	Hehe! Now I know exactly\nwhich way I'm headed!
024	Let's take a look at the game screen.
025	The UFO is now facing right!
026	Now our UFO is primed and\nready to {[0001|1a00]}{color[0400]}travel to the right{color[ffff]}{[0001|ffff]}.
027	The next task is to actually\nhave it move around.
028	To the program screen!
029	To get our UFO moving, let's call on the\nservices of the {[0001|1a00]}{color[0400]}Stick Nodon{color[ffff]}{[0001|ffff]} again.
030	Can you go to {[0001|1a00]}Input{[0001|ffff]} {[0001|0400]} {[0001|1a00]}Stick Movement\n{[0001|0400]}{[0001|ffff]} {[0001|1a00]} {[0001|ffff]}{[0001|0400]} {[0001|1a00]}Left/Right{[0001|0400]}{[0001|ffff]}, and then call up\na {[0001|1a00]}{color[0400]}Stick Nodon{color[ffff]}{[0001|ffff]}?
031	Boing! Good to see you\nagain, {[0201]}!
032	Reporting for duty!\nReady to wiggle!
033	Connect the {[0001|1a00]}{color[0400]}Stick Nodon{color[ffff]}{[0001|ffff]} to the\n{[0001|1a00]}{color[0400]}UFO Nodon's left/right port{color[ffff]}{[0001|ffff]}.
034	Oh... Something's twitching...\nCan I move?
035	Let's find out!
036	Try using {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]} to move the\nUFO {[0001|1a00]}{color[0400]}left and right{color[ffff]}{[0001|ffff]}.
037	We've got movement!\nCosmic!
038	Next, let's give our UFO the ability\nto move up and down as well.
039	Call up another Stick Nodon to handle that via\n{[0001|1a00]}Input{[0001|ffff]} {[0001|0400]} {[0001|1a00]}Stick Movement{[0001|0400]} {[0001|ffff]} {[0001|1a00]} {[0001|ffff]}{[0001|0400]} {[0001|1a00]}{color[0400]}Up/Down{color[ffff]}{[0001|0400]}{[0001|ffff]}.
041	Boing!
042	Wiggling up and down this time, eh?
043_00	Next, hook up the new {[0001|1a00]}{color[0400]}up and down Stick Nodon\n{color[ffff]}{[0001|ffff]}to the {[0001|1a00]}{color[0400]}UFO Nodon's up/down port{color[ffff]}{[0001|ffff]}.
044	Yes! This is gonna be so great!
045	Let's check it on the game screen.
046	Move the UFO {[0001|1a00]}{color[0400]}up and down{color[ffff]}{[0001|ffff]} with .
047	See? It's moving up and down!
048	Thanks to that, the UFO can now\nmove in any direction!
049	When you're all done floating and\nzipping around, I'll meet you back\nat the program screen.
050	Next, we're going to determine {[0001|1a00]}{color[0400]}how we're\ngoing to view the screen{color[ffff]}{[0001|ffff]} during gameplay.
051	Call up the {[0001|1a00]}{color[0400]}Game-Screen Nodon{color[ffff]}{[0001|ffff]}, like so:\n{[0001|1a00]}Objects{[0001|ffff]} {[0001|0400]} {[0001|ffff]}{[0001|1a00]}Game Screen / Camera{[0001|ffff]}\n{[0001|0400]} {[0001|ffff]}{[0001|1a00]}{color[0400]}Game Screen{color[ffff]}{[0001|ffff]}.
052	Make it the same size as the blue frame.
053	Hello, {[0201]}, darling!\nYou're radiant as ever!
054	OK! The {[0001|1a00]}{color[0400]}game screen{color[ffff]}{[0001|ffff]} is\nproperly marked out now.
055	Let's see how it looks\non the game screen.
055_00	Well, the boundaries of the screen\nare all taken care of now. Whew!
056	We've set the stage for\nour blaster game now.
058	Next, let's give our UFO a means of\nself defense. I'm thinking...{[0001|1a00]}{color[0400]}cannon{color[ffff]}{[0001|ffff]}!
059	To the program screen!
060	To create our {[0001|1a00]}{color[0400]}cannon{color[ffff]}{[0001|ffff]}, we'll\nneed an {[0001|1a00]}{color[0400]}Object Nodon{color[ffff]}{[0001|ffff]}.
061	Call up an {[0001|1a00]}{color[0400]}Object Nodon{color[ffff]}{[0001|ffff]} now, from\n{[0001|1a00]}Objects{[0001|ffff]} {[0001|0400]} {[0001|1a00]}Simple Objects{[0001|0400]}  {[0001|1a00]}{color[0400]}Cylinder{color[ffff]}{[0001|0400]}{[0001|ffff]}...
062	Make it smaller, and put it to\nthe side of the UFO Nodon.
062_00	Heya, bud! Cannon, eh? Love it!
062_01	Now, {[0001|1a00]}{color[0400]}rotate{color[ffff]}{[0001|ffff]} the {[0001|1a00]}{color[0400]}Object Nodon{color[ffff]}{[0001|ffff]}\nso that it's pointing sideways,\nlike a cannon would.
062_02	Open up the {[0001|1a00]}{color[0400]}settings screen{color[ffff]}{[0001|ffff]}\nof the {[0001|1a00]}{color[0400]}Object Nodon{color[ffff]}{[0001|ffff]}.
062_03	Under {[0001|1a00]}Properties{[0001|ffff]}, {[0001|1a00]}{color[0400]}enable only \nVisible{color[ffff]}{[0001|ffff]},{[0001|1a00]}{color[0400]} Movable{color[ffff]}{[0001|ffff]}, and {[0001|1a00]}{color[0400]}Destructible{color[ffff]}{[0001|ffff]}.
062_04	Perfect. Now close\nthe settings screen.
062_05	And let's take a look at the game screen.
062_06	Argh!
062_07	The cannon fell off...\nOops!
062_16	If that happened too quickly for you to see,\npress the retry button for a do-over.
062_08	Let's think about this for a sec...\nSince gravity is in effect here, {[0001|1a00]}{color[0400]}it's only\nnatural that things will fall{color[ffff]}{[0001|ffff]}, right?
062_09	The UFO however, is a special case.\nIt's {[0001|1a00]}{color[0400]}not affected by gravity{color[ffff]}{[0001|ffff]},\nso it doesn't fall.
062_10	Some objects, on the other hand,\nwill just drop.
062_11	Let's fix it so that our new\ncannon {[0001|1a00]}{color[0400]}isn't subject to gravity{color[ffff]}{[0001|ffff]}.
062_11_00	To the program screen!
062_12	Select the {[0001|1a00]}{color[0400]}cylinder{color[ffff]}{[0001|ffff]}'s {[0001|1a00]}{color[0400]}Object Nodon{color[ffff]}{[0001|ffff]},\nand open the {[0001|1a00]}{color[0400]}settings screen{color[ffff]}{[0001|ffff]}.
062_13	Open the {[0001|1a00]}{color[0400]}Material{color[ffff]}{[0001|ffff]} settings...
062_14	Then select {[0001|1a00]}{color[0400]}Zero gravity{color[ffff]}{[0001|ffff]}.
062_15	Cool! Now close the\nsettings screen.
063	Let's take a peek at\nthe game screen.
063_00	The cannon is now floating\ninstead of falling!
063_01	While we're here, try moving the\nUFO with {[0001|1a00]}{color[0400]} {color[ffff]}{[0001|ffff]}and see what happens.
063_02	When the UFO moves,\n{[0001|1a00]}{color[0400]}the cannon is left behind{color[ffff]}{[0001|ffff]}.\nThat's not so good!
063_03	What we really need is for\nthe cannon to stick to the\nUFO and move along with it.
064	But I know how we can handle that.\nBack to the program screen!
064_00	So our goal now is to have\nthe UFO and cannon move\ntogether.
064_01	In other words, we'll {[0001|1a00]}{color[0400]}connect{color[ffff]}{[0001|ffff]} the\nObject Nodon to the UFO Nodon.
065	To do that, link the {[0001|1a00]}{color[0400]}Object Nodon's\nconnection port{color[ffff]}{[0001|ffff]} to the {[0001|1a00]}{color[0400]}UFO Nodon's\nconnection port{color[ffff]}{[0001|ffff]}.
065_00	Looks like we're stuck together.
065_01	Oh! A new connection!\nCosmic!
065_02	Now, the UFO Nodon and\nObject Nodon are {[0001|1a00]}{color[0400]}connected{color[ffff]}{[0001|ffff]}.
066	This is how we'll connect {[0001|1a00]}{color[0400]}Nodon {color[ffff]}{[0001|ffff]}and {[0001|1a00]}{color[0400]}make\nobjects move together{color[ffff]}{[0001|ffff]} in the future too.\nPretty neat, right? Remember it!
067	Let's see how the UFO and cannon\nlook now that we've {[0001|1a00]}{color[0400]}connected{color[ffff]}{[0001|ffff]} them.\nTo the game screen!
067_00	Oh... Uhhh...
067_01	It's kind of like...a chimney, huh?
067_01_00	Well, it's not quite right,\nbut let's stick with it for now.
067_01_01	Try {[0001|1a00]}{color[0400]}moving the UFO with{color[ffff]}{[0001|ffff]} {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]}.
067_01_02	Nice!
067_01_03	Because you {[0001|1a00]}{color[0400]}connected{color[ffff]}{[0001|ffff]} the Nodon,\nthe cannon is now stuck to the UFO.
067_01_04	So, moving on...
067_01_05	Right now, the cannon is pointing {[0001|1a00]}{color[0400]}upward{color[ffff]}{[0001|ffff]},\nwhich is...certainly one way of doing things.
067_02	Let's fix it so that the cannon is\nstuck to the front of the UFO.
067_03	Back to the program screen, of course.
067_04	Select the {[0001|1a00]}{color[0400]}cylinder Object Nodon{color[ffff]}{[0001|ffff]},\nand open the {[0001|1a00]}{color[0400]}settings screen{color[ffff]}{[0001|ffff]}.
067_05	Next, open the {[0001|1a00]}{color[0400]}Connection Point{color[ffff]}{[0001|ffff]} settings.
067_05_01	The {[0001|1a00]}{color[0400]}Connection Point{color[ffff]}{[0001|ffff]} settings are where you'll\nbe able to set exactly {[0001|1a00]}{color[0400]}which part of the object\nconnects to which part of the other object{color[ffff]}{[0001|ffff]}.
067_06	The setting for {[0001|1a00]}{color[0400]}Own Connection Point{color[ffff]} {[0001|ffff]}is {[0001|1a00]}{color[0400]}Y-{color[ffff]}{[0001|ffff]}.\nSo it's fine.
067_07	The setting for the {[0001|1a00]}{color[0400]}Target Connection Point{color[ffff]}{[0001|ffff]}\nneeds to change, though. Change it to {[0001|1a00]}{color[0400]}Z-{color[ffff]}{[0001|ffff]}.
067_08	Perfect!\nClose this window.
067_08_00	And do the same for\nthis settings screen.
067_09	Now that we've configured the\n{[0001|1a00]}{color[0400]}Connection Points{color[ffff]}{[0001|ffff]}, the cannon\nshould be on {[0001|1a00]}{color[0400]}the front of the UFO{color[ffff]}{[0001|ffff]}.
067_10	Let's take a look.
067_11	Hey! It worked!
067_12	The cannon is on the front of\nthe UFO, just as it should be.
067_13	Now try moving it around with .
067_14_01	It's staying in place when\nthe UFO moves too. Very good!
068	With that, our leading character,\nthe UFO is complete.
069	Now all that remains is to\nreturn to the program screen.
070	And there you have it...
071	Step 1 is clear!
072	Boing! Good job!
072_00	Cosmic!
072_01	Great work, darling!
072_02	Good stuff.
073	This time around, we learned\nhow to {[0001|1a00]}{color[0400]}connect{color[ffff]}{[0001|ffff]} things.
074	We saw that if you make use of\na Nodon's {[0001|1a00]}{color[0400]}connection port{color[ffff]}{[0001|ffff]}...
075	objects can be {[0001|1a00]}{color[0400]}linked{color[ffff]}{[0001|ffff]} to each\nother on the game screen.
076	So what's up in the next step?
077	Well, next time, we'll arrange\nit so that our UFO's\ncannon {[0001|1a00]}{color[0400]}fires projectiles{color[ffff]}{[0001|ffff]}!
078	See you then!
Lesson_Shooting_01.msbt
000	Welcome back,\n{[0201]}!
001	So, last time, we made it so that\nwe could control the UFO with ...
001_00	And we also {[0001|1a00]}{color[0400]}connected{color[ffff]}{[0001|ffff]} an\nObject Nodon to our UFO to\nserve as a cannon.
001_01	So our brave UFO pilot\nis pretty much done.
002	In this step, we'll be adding\nin a crucial element of any\nblaster game.
003	And that's the means to blast!\nWe'll be creating {[0001|1a00]}{color[0400]}a setup to fire\nprojectiles{color[ffff]}{[0001|ffff]} from the cannon.
004	To the program screen!
005	If it's firing projectiles we're\nafter, the first step is to call\nup a {[0001|1a00]}{color[0400]}Launch-Object Nodon{color[ffff]}{[0001|ffff]}.
006	Go to {[0001|1a00]}Objects {[0001|0400]}{[0001|1a00]} Launch/Destroy/Attract\n{[0001|0400]}{[0001|1a00]} Launch Objects {[0001|0400]}{[0001|1a00]} Launch 10 Objects{[0001|ffff]}\nto call up a {[0001|1a00]}{color[0400]}Launch-Object Nodon{color[ffff]}{[0001|ffff]}.
008	Ohohoho!\nMaking a blaster game, are you?\nAbout time!
010	Finally, a chance for\nme to go BLAMMO!
010_00	'Cause that's what I'm here for!\nIf it goes POW or BLAM, then\nit's my jam!
012	OK! Make the Launch-Object Nodon\na bit smaller, and fit it into the blue frame.
011_00	Oh... You shrunk me down.\nWell, I might be small...
011_01	but I've got a big role:\nultraconcentrated BOOM!
011_02	I can't wait to get blasting!
012_00	OK!\nLet's check that out\non the game screen.
012_01	As you can see, little\nprojectiles are firing out.
012_02	All well and good! But try moving\nthe UFO with the control stick and\nsee what happens.
012_03_00	See what happened? After you moved\nthe UFO, {[0001|1a00]}{color[0400]}the projectiles weren't coming\nout of the cannon{color[ffff]}{[0001|ffff]} anymore!
012_04	{[0001|1a00]}{color[0400]}To keep the projectiles coming\nout of the cannon{color[ffff]}{[0001|ffff]}, we'll need to\n{[0001|1a00]}{color[0400]}connect{color[ffff]}{[0001|ffff]} the object.
012_05	Let's get {[0001|1a00]}{color[0400]}connecting{color[ffff]}{[0001|ffff]}!
014	{[0001|1a00]}{color[0400]}Connect{color[ffff]}{[0001|ffff]} the {[0001|1a00]}{color[0400]}Launch-Object Nodon\n{color[ffff]}{[0001|ffff]}to the {[0001|1a00]}{color[0400]}Object Nodon{color[ffff]}{[0001|ffff]}, if you would.
014_00	Ah, Object Nodon!\nMy comrade in arms!\nLet's connect!
014_01	Oh, connecting up, are we?\nGreat idea!
015	Let's see how that looks.
016_00	Oh... The projectiles are firing\n{[0001|1a00]}{color[0400]}downward{color[ffff]}{[0001|ffff]}... That's not so good.
017	Let's forget about that for\na moment... Try moving\nthe UFO with .
018	The launch point of the projectiles\nfollows the UFO when it moves\nnow, as it should. Awesome!
018_00	Our next job is to make {[0001|1a00]}{color[0400]}the cannon\nfire projectiles off to the right{color[ffff]}{[0001|ffff]}.
019	To the program screen!
022	Select the {[0001|1a00]}{color[0400]}Launch-Object Nodon{color[ffff]}{[0001|ffff]},\nand open its settings screen, please.
023	Now open up {[0001|1a00]}{color[0400]}Connection Point{color[ffff]}{[0001|ffff]}.
024	Set {[0001|1a00]}{color[0400]}Own Connection Point{color[ffff]}{[0001|ffff]} to {[0001|1a00]}{color[0400]}X-{color[ffff]}{[0001|ffff]}.
025	Then set the {[0001|1a00]}{color[0400]}Target Connection Point{color[ffff]}{[0001|ffff]} to {[0001|1a00]}{color[0400]}Y+{color[ffff]}{[0001|ffff]}.
025-01	With our last round of changes, the\nprojectiles should be coming out of\nthe end of the cannon.
026	OK, so now close this screen.
026_00	And close the settings screen.
027_00	Let's check it out on the game screen!
028	Ah!\nLooking good!
029	The projectiles are coming out\nof the {[0001|1a00]}{color[0400]}end of the cannon{color[ffff]}{[0001|ffff]}, just as\nthey should!
030	Now...try moving the UFO\naround with .
031	That's great!
032	Our {[0001|1a00]}{color[0400]}projectile-firing UFO{color[ffff]}{[0001|ffff]} is complete.
033	Next, let's enhance the controls.\nHow about we make it so that {[0001|1a00]}{color[0400]}the\ncannon fires with the press of a button{color[ffff]}{[0001|ffff]}?
034	To the program screen!
036	Go to {[0001|1a00]}Input{[0001|ffff]} {[0001|0400]}{[0001|ffff]} {[0001|1a00]}Button Press{[0001|ffff]} {[0001|0400]}{[0001|ffff]} {[0001|1a00]}\n{[0001|ffff]}and call up a {[0001|1a00]}{color[0400]}Button Nodon{color[ffff]}{[0001|ffff]}.
038	Now connect the {[0001|1a00]}{color[0400]}Launch-Object\nNodon{color[ffff]}{[0001|ffff]} and the {[0001|1a00]}{color[0400]}Button Nodon{color[ffff]}{[0001|ffff]}.
038-01	With that connection, pressing  will\ncause the projectiles to launch.
039	Woo, fire the cannon! Yeah!\nBoom! Bam! Pow!
040	Man, you're really into this!\nYou're a Nodon after my\nown heart!
041	OK!\nLet's test it on the game screen!
042	Now...\npress {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]} and see what happens!
043	You {[0001|1a00]}{color[0400]}fired the projectiles{color[ffff]}{[0001|ffff]}!
044	Next, try {[0001|1a00]}{color[0400]}holding down{color[ffff]}{[0001|ffff]} {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]}.
045	The projectiles are just coming\nout in a slow drip, right?
046	Perhaps we should change it so that\nprojectiles are fired {[0001|1a00]}{color[0400]}continuously{color[ffff]}{[0001|ffff]} when\nthe button is held down, hmmm?
047	To the program screen!
048	Open up the {[0001|1a00]}{color[0400]}settings screen{color[ffff]}{[0001|ffff]} for\nthe {[0001|1a00]}{color[0400]}Launch-Object Nodon{color[ffff]}{[0001|ffff]}.
051	For continuous fire, set the\n{[0001|1a00]}{color[0400]}Launch Interval{color[ffff]}{[0001|ffff]} to {[0001|1a00]}{color[0400]}0.10{color[ffff]}{[0001|ffff]}.
052	Now close the settings screen.
055	Let's check it on the game screen.
056	Try {[0001|1a00]}{color[0400]}holding down {color[ffff]}{[0001|ffff]}.
057	A stream of projectiles!
058	But...there's something else that\nI'm starting to wonder about...
059	Press {color[0400]}{[0001|1a00]}{[0001|ffff]} {color[ffff]}again to launch some\nprojectiles, if you would...
060	After being fired, {[0001|1a00]}{color[0400]}the projectiles\nfall downward{color[ffff]}{[0001|ffff]}...
061	And that's not so good!\nWe want the shots to fly straight!
062	Let's head back to the program screen\nand give the UFO's marksmanship a boost.
065	To make the projectiles fly straight, we\nneed to change it so that they are no\nlonger affected by the force of {[0001|1a00]}{color[0400]}gravity{color[ffff]}{[0001|ffff]}.
066	To do that, let's {[0001|1a00]}{color[0400]}remove gravity\nfrom this world entirely{color[ffff]}{[0001|ffff]}.
067	Time to take control of gravity!\nCall up a {[0001|1a00]}{color[0400]}Reduce-Gravity Nodon{color[ffff]}{[0001|ffff]}!
068	Go to {[0001|1a00]}{color[0400]}Output{color[ffff]}{[0001|ffff]}.
068_00	Then {[0001|1a00]}{color[0400]}Change World{color[ffff]}{[0001|ffff]}.
069	Call up a {[0001|1a00]}{color[0400]}Reduce-Gravity Nodon\n{color[ffff]}{[0001|ffff]}under {[0001|1a00]}{color[0400]}Reduce Gravity{color[ffff]}{[0001|ffff]}.
071	You called, at last!\nHello!
072	This {[0001|1a00]}{color[0400]}Reduce-Gravity Nodon\n{color[ffff]}{[0001|ffff]}is just what we need.
072_00	Supply it with a signal, and it'll\nbanish gravity from the level.
072_00-01	Let's call up a {[0001|1a00]}{color[0400]}Constant Nodon{color[ffff]}{[0001|ffff]} so\nwe can send a signal to the\nReduce-Gravity Nodon.
072_01	Go to {[0001|1a00]}Input {[0001|0400]}{[0001|1a00]}{[0001|ffff]} {[0001|1a00]}{color[0400]}Constant{color[ffff]}{[0001|ffff]}, then\ncall up a {[0001|1a00]}{color[0400]}Constant Nodon{color[ffff]}{[0001|ffff]}.
071_00	I am the Constant Nodon...\nEver-steadfast, gravity or no...
074	Now to connect the {[0001|1a00]}{color[0400]}Constant Nodon{color[ffff]}{[0001|ffff]}\nto the {[0001|1a00]}{color[0400]}Reduce-Gravity Nodon{color[ffff]}{[0001|ffff]}.
075	A value of 1.00...\nI will output a value of 1.00...\nA value of 1.00...
076	Let this world be all floaty!
077	OK, let's check it out\non the game screen!
078	Press {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]} to {[0001|1a00]}{color[0400]}launch a\nprojectile{color[ffff]}{[0001|ffff]}.
080	Straight as an arrow!\nUnswervingly linear!\nI'd say that's a success.
080-01	It's starting to feel like a\nreal-deal blaster game\nnow, huh?
081	When you've had a blast\nwith that, head back to\nthe program screen!
082	OK... So...
083	Step 2 is complete!
084	Good job, as always.
084_00	I'm pullin' for ya!
084_01	Nice work!
084_02	You really put the BLAM\nin that one!
085	In this step, we created {[0001|1a00]}{color[0400]}a\nUFO that fires projectiles{color[ffff]}{[0001|ffff]}.
086	And that's a very important\nstep on the road to completing\nthis game.
088	In the next step, we're going\nto start building up the level's\nenvironment.
089	See you in Step 3!
Lesson_Shooting_02.msbt
000	Welcome back,\n{[0201]}!
001	Here we are, at Step 3\nof Alien Blaster, already.
002	In the last step, we used a {[0001|1a00]}{color[0400]}connection{color[ffff]}{[0001|ffff]}\nto make sure that the projectiles\nfired from the cannon.
003	And we {[0001|1a00]}{color[0400]}removed gravity {color[ffff]}{[0001|ffff]}so that the\nprojectiles would fire straight.
004	And of course we had to add the\nability to fire projectiles in the first\nplace. We got a lot done, didn't we?
005	So what's next?\nDon't you think it's time we\nfound some enemies to blast?
006	Well, oddly enough...
007	In this step, we're going to\n{[0001|1a00]}{color[0400]}build up the level{color[ffff]}{[0001|ffff]} with walls\nand some enemies.
008	All righty! Let's get programming!
009	First things first, let's see if we can\ngive the {[0001|1a00]}{color[0400]}atmosphere{color[ffff]}{[0001|ffff]} a bit of a boost,\ngive it more of an epic feel.
010	We'll be making a change that\naffects the feel of the whole level...
011	So go to {[0001|1a00]}Objects {[0001|0400]}{[0001|1a00]}{[0001|ffff]} {[0001|1a00]}World{[0001|ffff]},\nand call up a {[0001|1a00]}{color[0400]}World Nodon{color[ffff]}{[0001|ffff]}!
013	We can change the world...\nAll we need is to believe.
014	Open up the {[0001|1a00]}{color[0400]}World Nodon{color[ffff]}{[0001|ffff]}'s\nsettings screen.
015	Set the {[0001|1a00]}{color[0400]}World Shape\n{color[ffff]}{[0001|ffff]}to {[0001|1a00]}{color[0400]}None{color[ffff]}{[0001|ffff]}.
016	Now to change the {[0001|1a00]}{color[0400]}World Lighting{color[ffff]}{[0001|ffff]}.
017	{[0001|1a00]}{color[0400]}Outer space {color[ffff]}{[0001|ffff]}seems appropriate.
018	Awesome!\nClose this screen.
019	Now close the settings screen.
020	You've got the whole\nworld at your fingertips.
021	All righty! Let's see how it looks.
022	Oh!\nSweet cosmic vibes!
023	We're edging ever closer to\nthe look this game needs.
024	All we need now is a few\n{[0001|1a00]}{color[0400]}enemy aliens{color[ffff]}{[0001|ffff]} to complete\nthe scene, don't you think?
027	Let's go back to the\nprogram screen to\ntake care of that.
028	Let's get right to creating our\nalien menace.
029	Go to {[0001|1a00]}Objects {[0001|0400]}{[0001|1a00]} Fancy Objects {[0001|0400]}{[0001|1a00]}\nRound Fancy Objects {[0001|0400]}{[0001|1a00]} Alien{[0001|ffff]}, and\ncall up a {[0001|1a00]}{color[0400]}Fancy-Object Nodon{color[ffff]}{[0001|ffff]}.
030	Oh...a pink body against a jet black sky...
031	What a wonderfully grotesque alien!\nIt's a great effect! ♥
033	Open up the settings screen\nfor the {[0001|1a00]}{color[0400]}Fancy-Object Nodon{color[ffff]}{[0001|ffff]}.
034	Under {[0001|1900]}Properties{[0001|ffff]}, {[0001|1a00]}{color[0400]}enable{color[ffff]}{[0001|ffff]} only\n{[0001|1a00]}{color[0400]}Visible{color[ffff]}{[0001|ffff]}, {[0001|1a00]}{color[0400]}Solid{color[ffff]}{[0001|ffff]}, {[0001|1a00]}{color[0400]}Destructible{color[ffff]}{[0001|ffff]},\nand {[0001|1a00]}{color[0400]}Destructive{color[ffff]}{[0001|ffff]}.
036	Next, let's change the way\nthe alien is facing. Set {[0001|1a00]}{color[0400]}y-axis{color[ffff]}{[0001|ffff]}\n{[0001|1a00]}rotation{[0001|ffff]} to {[0001|1a00]}{color[0400]}90.00°{color[ffff]}{[0001|ffff]}.
037	OK!
038	Let's have a\nlook at our alien.
039	Our fiendish alien makes its debut!
040	Well, without further ado,\nlet's try blasting it!
041	If you want to have another try\nat blasting the alien, just hit {[0001|1a00]}{color[0400]}Retry{color[ffff]}{[0001|ffff]}.
042	Press {[0001|1a00]}{color[0400]} {color[ffff]}{[0001|ffff]}to launch a projectile\nand destroy the alien!
043	What skill!\nYou blasted the alien!
044	OK, you destroyed the alien.\nHit {[0001|1a00]}{color[0400]}Retry{color[ffff]}{[0001|ffff]}.
045	Now try {[0001|1a00]}{color[0400]}flying the UFO\ninto the alien{color[ffff]}{[0001|ffff]}.
04502	Oh... You broke the alien there...\nHit {[0001|1a00]}{color[0400]}Retry{color[ffff]}{[0001|ffff]} again.
04503	{[0001|1a00]}{color[0400]}Fly the UFO into the alien{color[ffff]}{[0001|ffff]}.
046	What a mighty UFO!\nIt crashed into the alien\nand didn't even flinch!
047	You might even say the UFO\nis too powerful! And by that I\nmean it is way too powerful.
049	Perhaps we ought to make it so\nthat the {[0001|1a00]}{color[0400]}UFO is destroyed on\ncontact with the alien then{color[ffff]}{[0001|ffff]}?
050	To the program screen!
051	Open up the UFO Nodon's\n{[0001|1a00]}{color[0400]}settings screen{color[ffff]}{[0001|ffff]}.
052	Under {[0001|1a00]}Properties{[0001|ffff]},\n{[0001|1a00]}{color[0400]}enable Destructible{color[ffff]}{[0001|ffff]}.
053	Close this screen.
054	Oh my, we've upped the ante here!\nI'm going to get a cosmic crunch when\nI collide with that flying fiend!
056	Let's test it out!
057	Try moving the UFO\n{[0001|1a00]}{color[0400]}into the alien{color[ffff]}{[0001|ffff]}.
05702	Yep... It's done for, all right.\nPress {[0001|1a00]}{color[0400]}Retry{color[ffff]}{[0001|ffff]}.
05703	Try moving the UFO\n{[0001|1a00]}{color[0400]}into the alien{color[ffff]}{[0001|ffff]}.
058	We salute you, UFO.\nYou put up a brave fight.
059	Our enemy alien is complete!
061	Just one invader doesn't quite cut it\nthough, right? Not very menacing...\nHow about {[0001|1a00]}{color[0400]}adding some more aliens{color[ffff]}{[0001|ffff]}?
062	But before we get to that...\nPress {[0001|1a00]}{color[0400]}Retry{color[ffff]}{[0001|ffff]}, please.
063	Press {[0001|1a00]}{color[0400]} to fire\noff a few projectiles{color[ffff]}{[0001|ffff]}.
06302	Ah... The UFO is destroyed already.\nPress {[0001|1a00]}{color[0400]}Retry{color[ffff]}{[0001|ffff]}.
06303	Try again! Press {[0001|1a00]}{color[0400]} to fire\noff a few projectiles{color[ffff]}{[0001|ffff]}.
064	The {[0001|1a00]}{color[0400]}fired projectiles{color[ffff]}{[0001|ffff]} fly off\ninto the distance...
065	The projectiles are flying right {[0001|1a00]}{color[0400]}to the edge\nof the screen{color[ffff]}{[0001|ffff]}. If we set more enemies out,\nthe projectiles will plow right through them!
066	Let's see if we can fix that...
067	We'll add in a {[0001|1a00]}{color[0400]}wall{color[ffff]}{[0001|ffff]}...
068	And we'll have the projectiles\n{[0001|1a00]}{color[0400]}break when they hit the wall{color[ffff]}{[0001|ffff]}!
069	To the program screen!
070	Go to {[0001|1a00]}Objects {[0001|0400]}{[0001|1a00]} Simple Objects\n{[0001|0400]} {[0001|1a00]}Box {[0001|ffff]}and call up an {[0001|1a00]}{color[0400]}Object Nodon{color[ffff]}{[0001|ffff]}.
071	Make it larger, and fit it\ninto the blue frame.
072	Open the {[0001|1a00]}{color[0400]}Object Nodon{color[ffff]}{[0001|ffff]}'s\n{[0001|1a00]}{color[0400]}settings screen{color[ffff]}{[0001|ffff]}.
073	Under {[0001|1a00]}Properties{[0001|ffff]}, {[0001|1a00]}{color[0400]}enable{color[ffff]}{[0001|ffff]} only\n{[0001|1a00]}{color[0400]}Visible{color[ffff]}{[0001|ffff]}, {[0001|1a00]}{color[0400]}Solid{color[ffff]}{[0001|ffff]}, and {[0001|1a00]}{color[0400]}Destructive{color[ffff]}{[0001|ffff]}.
074	Since {[0001|1a00]}{color[0400]}Destructible{color[ffff]}{[0001|ffff]} is {[0001|1a00]}{color[0400]}disabled{color[ffff]}{[0001|ffff]}, when the\nprojectiles hit the wall, it won't break.
075	The {[0001|1a00]}{color[0400]}aliens{color[ffff]}{[0001|ffff]} however, will be broken by the\nprojectiles. Let's make the wall a {[0001|1a00]}{color[0400]}different\ncolor{color[ffff]}{[0001|ffff]} to make that a bit clearer.
076	Open up {[0001|1a00]}{color[0400]}Color{color[ffff]}{[0001|ffff]}.
077	And make it {[0001|1a00]}{color[0400]}blue{color[ffff]}{[0001|ffff]}.
078	All righty!\nClose the settings screen.
079	To the game screen!
080	And there's our {[0001|1a00]}{color[0400]}wall{color[ffff]}{[0001|ffff]}!
082	Press {[0001|1a00]}{color[0400]} {color[ffff]}{[0001|ffff]}to {[0001|1a00]}{color[0400]}fire a few\nprojectiles {color[ffff]}{[0001|ffff]}at the {[0001|1a00]}{color[0400]}wall{color[ffff]}{[0001|ffff]}.
08202	Ah... The UFO is destroyed already...\nPress {[0001|1a00]}{color[0400]}Retry{color[ffff]}{[0001|ffff]} and give it another whirl.
08203	Press {[0001|1a00]}{color[0400]} {color[ffff]}{[0001|ffff]}to {[0001|1a00]}{color[0400]}fire a few\nprojectiles {color[ffff]}{[0001|ffff]}at the {[0001|1a00]}{color[0400]}wall{color[ffff]}{[0001|ffff]}.
083	The projectiles break as they hit the wall!
084	Adding walls to the level fixes the problem\nthat we had before. Now the projectiles\nwon't plow through the aliens too easily.
085	We're not quite done\nwith {[0001|1a00]}{color[0400]}walls{color[ffff]}{[0001|ffff]} yet, though.
086	Try moving the UFO\n{[0001|1a00]}{color[0400]}out of the screen{color[ffff]}{[0001|ffff]}.
08602	Oh... The UFO broke.\nPress {[0001|1a00]}{color[0400]}Retry{color[ffff]}{[0001|ffff]}, please.
08603	Try moving the UFO\n{[0001|1a00]}{color[0400]}out of the screen{color[ffff]}{[0001|ffff]}.
087	Did you see what happened?\nThe UFO flew right {[0001|1a00]}{color[0400]}out of\nthe screen{color[ffff]}{[0001|ffff]}!
088	Naturally, it's kind of a problem if we\ndon't keep the UFO on the screen.
089	Let's apply a bit of programming\nto prevent the UFO from going out\nof bounds.
090	We'll place an {[0001|1a00]}{color[0400]}invisible wall{color[ffff]}{[0001|ffff]} to {[0001|1a00]}{color[0400]}stop\nthe UFO from leaving the screen{color[ffff]}{[0001|ffff]}.
091	Go to {[0001|1a00]}Objects {[0001|0400]}{[0001|1a00]} Simple Objects\n{[0001|0400]}{[0001|1a00]} Box {[0001|ffff]}and call up an {[0001|1a00]}{color[0400]}Object Nodon{color[ffff]}{[0001|ffff]}.
092	Make the Object Nodon a bit\nbigger, and drag it over into\nthe blue frame.
093	Open the Object Nodon's\nsettings screen.
094	Under {[0001|1a00]}Properties{[0001|ffff]}, {[0001|1a00]}{color[0400]}enable{color[ffff]}{[0001|ffff]} {[0001|1a00]}{color[0400]}Solid{color[ffff]}{[0001|ffff]} only.
095	That's all good!\nYou can close this screen.
096	Ayup!\nI'm invisible!
097	{[0001|1a00]}{color[0400]}Copy{color[ffff]}{[0001|ffff]} this Object Nodon.
098	Then drag it over to the blue\nframe at the bottom of the screen.
099	Ayup!\nI might be invisible, but\nI'm still doing my job!
100	Now copy the Object Nodon\none more time.
102	{[0001|1a00]}{color[0400]}Stretch it out nice and tall{color[ffff]}{[0001|ffff]}, and\nput it in the blue frame.
103	Ayup.\nIt's actually quite relaxing\nbeing invisible, you know.
104	Next, we'll be {[0001|1a00]}{color[0400]}building up the\nlevel on the right-hand side{color[ffff]}{[0001|ffff]}.
105	We should be OK with these\nthree invisible walls here.
106	Let's check it out on\nthe game screen!
107	All righty! Try flying the UFO\n{[0001|1a00]}{color[0400]}out of the game screen{color[ffff]}{[0001|ffff]}.
10702	Oh... The UFO broke.\nPress {[0001|1a00]}{color[0400]}Retry{color[ffff]}{[0001|ffff]}, please.
10703	Try to fly the UFO {[0001|1a00]}{color[0400]}out\nof the game screen{color[ffff]}{[0001|ffff]}.
108	There aren't any walls over to the\nright though... So the UFO can fly\n{[0001|1a00]}{color[0400]}out of the screen{color[ffff]}{[0001|ffff]} on that side.
109	Try flying out of the screen on the\n{[0001|1a00]}{color[0400]}lower{color[ffff]}{[0001|ffff]}, {[0001|1a00]}{color[0400]}upper{color[ffff]}{[0001|ffff]}, or {[0001|1a00]}{color[0400]}left sides{color[ffff]}{[0001|ffff]}. If you get\nstuck, press Retry.
110	Oh!
111	The UFO came up against\nan {[0001|1a00]}{color[0400]}invisible wall{color[ffff]}{[0001|ffff]}, right?
116	No need to worry about\ngetting lost now!
117	All righty, for the finishing touch...
118	let's create a setup to trigger\n{[0001|1a00]}{color[0400]}an automatic retry when the\nUFO is destroyed{color[ffff]}{[0001|ffff]}.
119	To the program screen!
120	Go to {[0001|1a00]}Output {[0001|0400]}{[0001|1a00]} Retry/End/Swap\n{[0001|0400]}{[0001|1a00]} Retry{[0001|ffff]} to call up a {[0001|1a00]}{color[0400]}Retry Nodon{color[ffff]}{[0001|ffff]}.
122	Then go to {[0001|1a00]}Middle {[0001|0400]}{[0001|1a00]} Timer{[0001|ffff]},\nand call up a {[0001|1a00]}{color[0400]}Timer Nodon{color[ffff]}{[0001|ffff]}.
124	Next, go to {[0001|1a00]}Input {[0001|0400]}{[0001|1a00]} State Change {[0001|0400]}\n{[0001|1a00]}Object Break{[0001|ffff]}, and call up\nan {[0001|1a00]}{color[0400]}Object-Break Nodon{color[ffff]}{[0001|ffff]}.
125	Open up the settings screen\nfor the {[0001|1a00]}{color[0400]}Object-Break Nodon{color[ffff]}{[0001|ffff]}.
126	Open up the {[0001|1a00]}{color[0400]}Check What?{color[ffff]}{[0001|ffff]} settings.
127	{[0001|1a00]}{color[0400]}Enable UFO{color[ffff]}{[0001|ffff]} only.
128	All good!\nNow close this screen.
129	Close this screen.
130	Right... So we want to check\nif the UFO is broken or not.
130-01	I got you, hon!
132	Next, connect the {[0001|1a00]}{color[0400]}Object-Break Nodon\n{color[ffff]}{[0001|ffff]}to the {[0001|1a00]}{color[0400]}Timer Nodon{color[ffff]}{[0001|ffff]}.
133	Now, connect the {[0001|1a00]}{color[0400]}Timer Nodon{color[ffff]}{[0001|ffff]}\nto the {[0001|1a00]}{color[0400]}Retry Nodon{color[ffff]}{[0001|ffff]}.
134	And that completes our setup!\nA {[0001|1a00]}{color[0400]}broken UFO{color[ffff]}{[0001|ffff]} will now {[0001|1a00]}{color[0400]}trigger\na retry automatically{color[ffff]}{[0001|ffff]}.
135	Let's see it in action.
136	All righty! Fly the UFO into\nthe {[0001|1a00]}{color[0400]}alien{color[ffff]}{[0001|ffff]} or the {[0001|1a00]}{color[0400]}wall{color[ffff]}{[0001|ffff]}!
137	Awesome!\nThe {[0001|1a00]}{color[0400]}retry{color[ffff]}{[0001|ffff]} triggered just\nlike it was supposed to!
138	So our {[0001|1a00]}{color[0400]}automatic retry\nsetup{color[ffff]}{[0001|ffff]} is complete!
139	OK...\nBack to the program screen!
140	So...yep...that's right...
141	Step 3 is complete!
142	The black void of space...\nThat's what I call minimalism! ♥
143	Yup. Good job.
144	Cosmic!
145	A new world is opening up!
146	In this step, we built up the\nlevel with an {[0001|1a00]}{color[0400]}enemy{color[ffff]}{[0001|ffff]} and {[0001|1a00]}{color[0400]}walls{color[ffff]}{[0001|ffff]}.
149	In the next step, we're going to\nmake the level a whole lot bigger!
150	I can't wait!
Lesson_Shooting_03.msbt
000	Welcome back,\n{[0201]}!
001_00	Now, just take a moment to behold the\nvast expanse of space rolling out before\nyou, and the fiendish menace that lurks within...
001_01	Doesn't it give you that exciting\nfeeling that something's about \nto happen?
002	Anyway, this step will build nicely\non what we did in the last step.
003	We're going to build up\nour {[0001|1a00]}{color[0400]}level{color[ffff]}{[0001|ffff]} even more!
004	To the program screen!
006	First, let's increase the challenge\nwith a few more {[0001|1a00]}{color[0400]}enemy aliens{color[ffff]}{[0001|ffff]}.
007-00	Select the {[0001|1a00]}{color[0400]}Fancy-Object Nodon{color[ffff]}{[0001|ffff]},\nplease.
007	Then {[0001|1a00]}{color[0400]}copy{color[ffff]}{[0001|ffff]} it.
008	Now drag it over to the blue frame.
009	Great!\nLet's keep going like that.
010	{[0001|1a00]}{color[0400]}Copy{color[ffff]}{[0001|ffff]} the {[0001|1a00]}{color[0400]}Fancy-Object Nodon{color[ffff]}{[0001|ffff]}\nthat you just placed.
011	And put it in the blue\nframe down {[0001|1a00]}{color[0400]}below{color[ffff]}{[0001|ffff]}.
012	{[0001|1a00]}{color[0400]}Copy{color[ffff]}{[0001|ffff]} it again.
013	And put it in the blue frame\nin the {[0001|1a00]}{color[0400]}upper right{color[ffff]}{[0001|ffff]}.
014	{[0001|1a00]}{color[0400]}Copy{color[ffff]}{[0001|ffff]} again.
015	And put it in the {[0001|1a00]}{color[0400]}lower{color[ffff]}{[0001|ffff]} blue frame.
016	All righty! I guess we should\nplace {[0001|1a00]}{color[0400]}another four{color[ffff]}{[0001|ffff]} enemy aliens.
017	{[0001|1a00]}{color[0400]}Copy{color[ffff]}{[0001|ffff]} the {[0001|1a00]}{color[0400]}Fancy-Object Nodon{color[ffff]}{[0001|ffff]}.
018	Put it in the blue frame in the center.
019	{[0001|1a00]}{color[0400]}Copy{color[ffff]}{[0001|ffff]}.
020	And put it in the blue\nframe on the {[0001|1a00]}{color[0400]}right{color[ffff]}{[0001|ffff]}.
021	{[0001|1a00]}{color[0400]}Copy{color[ffff]}{[0001|ffff]} yet again.
022	Take it over to the blue\nframe in the {[0001|1a00]}{color[0400]}upper right{color[ffff]}{[0001|ffff]}.
023	Last one!\n{[0001|1a00]}{color[0400]}Copy{color[ffff]}{[0001|ffff]}...
024	And put it in the blue frame {[0001|1a00]}{color[0400]}below{color[ffff]}{[0001|ffff]}.\nWhew!
025	That's quite the alien horde\nyou've assembled there!
026	So, moving on to something similar...\nLet's put a few more {[0001|1a00]}{color[0400]}walls{color[ffff]}{[0001|ffff]} in the level!
027	Copy this {[0001|1a00]}{color[0400]}Object Nodon{color[ffff]}{[0001|ffff]}.
028	Make it a little smaller, and\npop it in the blue frame.
029	Copy this {[0001|1a00]}{color[0400]}Object Nodon{color[ffff]}{[0001|ffff]}.
030	And put it in the\n{[0001|1a00]}{color[0400]}lower{color[ffff]}{[0001|ffff]} blue frame.
031	And then {[0001|1a00]}{color[0400]}copy{color[ffff]}{[0001|ffff]} once more.
032	Make it a little larger to fit\nin the blue frame on the right.
033	Great work!
035	Lastly, let's add an {[0001|1a00]}{color[0400]}invisible wall{color[ffff]}{[0001|ffff]}.
036	{[0001|1a00]}{color[0400]}Copy{color[ffff]}{[0001|ffff]} this {[0001|1a00]}{color[0400]}Object Nodon{color[ffff]}{[0001|ffff]} here.
038	And drag it to the blue\nframe on the {[0001|1a00]}{color[0400]}right{color[ffff]}{[0001|ffff]}.
039	{[0001|1a00]}{color[0400]}Copy{color[ffff]}{[0001|ffff]} it again.
040	And put it in the\nblue frame {[0001|1a00]}{color[0400]}below{color[ffff]}{[0001|ffff]}.
041	OK!\nWe expanded the level\nquite a bit there!
042	Let's take a look at that\non the game screen.
043	...
044	What? Where's all that\nwork we just did?
046	Well, all the work we did was {[0001|1a00]}{color[0400]}outside of the\ngame screen{color[ffff]}{[0001|ffff]}. So actually, it's not surprising\nthat we can't see it.
049	This brings us on to our next\ntask: making all of our extended\nlevel visible.
050	{[0001|1a00]}{color[0400]}Select{color[ffff]}{[0001|ffff]} the {[0001|1a00]}{color[0400]}Game-Screen Nodon{color[ffff]}{[0001|ffff]}.
051	Now make it {[0001|1a00]}{color[0400]}bigger{color[ffff]}{[0001|ffff]} so that you\ncan fit the whole level in it.
052	Let's see how that looks now.
052_00	You can see the whole level!
053	But...things are kind of small, don't you\nthink? It's a little {[0001|1a00]}{color[0400]}hard to play{color[ffff]}{[0001|ffff]}!
055	Also, if we made {[0001|1a00]}{color[0400]}the level\neven bigger{color[ffff]}{[0001|ffff]} than it is now,\nit wouldn't fit...again!
056	But have no fear, because we're going to\nsolve those problems right now.
057	Our solution will be in the\nform of an {[0001|1a00]}{color[0400]}automatically\nscrolling{color[ffff]}{[0001|ffff]} screen.
058	If we have automatic scrolling,\nwe can expand our level as\nmuch as we want.
060	OK, back to the program screen,\nto handle the scrolling.
064	To start, let's return the {[0001|1a00]}{color[0400]}Game-Screen\nNodon {color[ffff]}{[0001|ffff]}to its {[0001|1a00]}{color[0400]}original size{color[ffff]}{[0001|ffff]} and {[0001|1a00]}{color[0400]}position{color[ffff]}{[0001|ffff]}.
066	To make the screen scroll, we'll\nneed to put a signal into the\n{[0001|1a00]}{color[0400]}Game-Screen Nodon{color[ffff]}{[0001|ffff]}'s {[0001|1a00]}{color[0400]}X port{color[ffff]}{[0001|ffff]}.
067	You see, {[0001|1a00]}{color[0400]}the game screen will scroll\nto the right{color[ffff]}{[0001|ffff]}, according to the value\nit receives in the port.
068	Go to {[0001|1a00]}Input {[0001|0400]}{[0001|1a00]} Constant{[0001|ffff]}, and\ncall up a {[0001|1a00]}{color[0400]}Constant Nodon{color[ffff]}{[0001|ffff]}.
070	I am the Constant Nodon...\nFriend to the steadily scrolling screen...
071	Go to {[0001|1a00]}Middle {[0001|0400]}{[0001|1a00]} Flag/Counter/Random\n{[0001|0400]}{[0001|1a00]} Counter{[0001|ffff]}, and call up a {[0001|1a00]}{color[0400]}Counter Nodon{color[ffff]}{[0001|ffff]}.
075	Now connect the {[0001|1a00]}{color[0400]}Constant Nodon\n{color[ffff]}{[0001|ffff]}to the {[0001|1a00]}{color[0400]}Counter Nodon{color[ffff]}{[0001|ffff]}'s {[0001|1a00]}{color[0400]}count up port{color[ffff]}{[0001|ffff]}.
076	I WILL COUNT UPWARD.\nYES.
077	There'll be a {[0001|1a00]}{color[0400]}constant signal{color[ffff]}{[0001|ffff]} supplied\nto the Counter Nodon's {[0001|1a00]}{color[0400]}count up port\n{color[ffff]}{[0001|ffff]}from the Constant Nodon.
078	So the Counter Nodon will\ncount at a fantastic speed.
079	Connect this {[0001|1a00]}{color[0400]}Counter Nodon\n{color[ffff]}{[0001|ffff]}to the {[0001|1a00]}{color[0400]}Game-Screen Nodon{color[ffff]}{[0001|ffff]}'s\n{[0001|1a00]}{color[0400]}X port{color[ffff]}{[0001|ffff]}.
080	All righty!\nOur {[0001|1a00]}{color[0400]}automatic scrolling\nsetup{color[ffff]}{[0001|ffff]} is complete.
063	A nice, smooth panning shot...\nAll the better to keep you in\nthe limelight, darling!
080_00	OK! Let's have a look at\nthat on the game screen!
081	Waargh!
082	Well we're certainly scrolling\nwith some gusto.
083	It's not what I would call extreme,\nbut we can't really leave it like this.\nIt's too fast to play!
082_01	Yeah, the pace is just too quick.\nWe'll have to do something to fix that.
082_02	Our level doesn't actually go\non forever. It's got an end to it.
082_04	All righty! Let's go back to the\nprogram screen and lower\nthe scrolling speed a bit.
084	So...the scrolling is too quick.\nThat means we'll have to {[0001|1a00]}{color[0400]}adjust\nthe speed{color[ffff]}{[0001|ffff]} a bit.
085	To do that, we'll need to {[0001|1a00]}{color[0400]}lower the\nvalue that the Counter Nodon outputs\n{color[ffff]}{[0001|ffff]}to the Game-Screen Nodon.
086	And I know just the Nodon for\nthe job! The {[0001|1a00]}{color[0400]}Map Nodon{color[ffff]}{[0001|ffff]}!
087	Go to {[0001|1a00]}{color[0400]}Middle{color[ffff]}{[0001|ffff]}.
088	Then {[0001|1a00]}{color[0400]}Convert{color[ffff]}{[0001|ffff]}.
089	Then {[0001|1a00]}{color[0400]}Map{color[ffff]}{[0001|ffff]}, and then call up a {[0001|1a00]}{color[0400]}Map Nodon{color[ffff]}{[0001|ffff]}.
089_00	Oh... Who's this?
091	Huh... A friend of Bob's?\nYou make quite a pair!
093	Such chemistry!
093_00	Uhm...\nSo, this {[0001|1a00]}{color[0400]}Map Nodon{color[ffff]}{[0001|ffff]} here...
093_01	It's a Nodon that specializes in taking\nthe {[0001|1a00]}{color[0400]}value it receives{color[ffff]}{[0001|ffff]} and {[0001|1a00]}{color[0400]}converting\nit into a different value{color[ffff]}{[0001|ffff]}.
094	Open up the {[0001|1a00]}{color[0400]}Map Nodon{color[ffff]}{[0001|ffff]}'s\nsettings screen.
094-01	Next we need to set the {[0001|1a00]}{color[0400]}Input Range\n{color[ffff]}{[0001|ffff]}and the {[0001|1a00]}{color[0400]}Output Range{color[ffff]}{[0001|ffff]}. This will set\nhow the input value is converted.
095	Set the {[0001|1a00]}{color[0400]}Input Range{color[ffff]}{[0001|ffff]} to\nbetween {[0001|1a00]}{color[0400]}0.00{color[ffff]}{[0001|ffff]} and {[0001|1a00]}{color[0400]}60.00{color[ffff]}{[0001|ffff]}.
096	Next, set the {[0001|1a00]}{color[0400]}Output Range\n{color[ffff]}{[0001|ffff]}to between {[0001|1a00]}{color[0400]}0.00{color[ffff]}{[0001|ffff]} and {[0001|1a00]}{color[0400]}1.00{color[ffff]}{[0001|ffff]}.
097-01	With these settings, inputs of between {[0001|1a00]}{color[0400]}0.00{color[ffff]}{[0001|ffff]} and\n{[0001|1a00]}{color[0400]}60.00{color[ffff]}{[0001|ffff]} will be {[0001|1a00]}{color[0400]}scaled down {color[ffff]}{[0001|ffff]}to an output of\nbetween {[0001|1a00]}{color[0400]}0.00{color[ffff]}{[0001|ffff]} and {[0001|1a00]}{color[0400]}1.00{color[ffff]}{[0001|ffff]} by the Map Nodon.
097	Close the settings screen.
098	Delete the {[0001|1a00]}{color[0400]}connection{color[ffff]}{[0001|ffff]} you added\nbefore, between the {[0001|1a00]}{color[0400]}Counter Nodon\n{color[ffff]}{[0001|ffff]}and the {[0001|1a00]}{color[0400]}Game-Screen Nodon{color[ffff]}{[0001|ffff]}.
099	Now connect the {[0001|1a00]}{color[0400]}Counter Nodon\n{color[ffff]}{[0001|ffff]}to the {[0001|1a00]}{color[0400]}Map Nodon{color[ffff]}{[0001|ffff]}.
100	Next, connect the {[0001|1a00]}{color[0400]}Map Nodon{color[ffff]}{[0001|ffff]} to\nthe {[0001|1a00]}{color[0400]}Game-Screen Nodon{color[ffff]}{[0001|ffff]}'s {[0001|1a00]}{color[0400]}X port{color[ffff]}{[0001|ffff]}.
101	That should have tamed the\nspeed of the scrolling a bit.
102	Let's check it out on the game screen!
103	Oh! Nice, slow scrolling!
104	Just the right speed for our game.\nNot too fast, not too slow.
105_000	Press {[0001|1a00]}{color[0400]}Retry{color[ffff]}{[0001|ffff]}, and give it another whirl.
105_031	Try playing it through!
105_032	Ah, the screen left you behind...
105_033	Press {[0001|1a00]}{color[0400]}Retry{color[ffff]}{[0001|ffff]} and give it another whirl.
105_034	Use {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]} to fly forward and keep\nup with the screen's scrolling.
105_035	Nice flying!
105_036	You made it through to the end\nof the level without crashing into\na wall or an alien!
105_037	There's something else I'd like to check...\nCould you press the {[0001|1a00]}{color[0400]}Retry{color[ffff]}{[0001|ffff]} button?
105_038	Try crashing into a wall!
105_039	Ker-smash! Our UFO is done for!
105_040	At the moment, this UFO is\n{[0001|1a00]}{color[0400]}set to break if it collides with\nanything{color[ffff]}{[0001|ffff]}.
105_041	If it hits a wall, it'll break.
105_042	But maybe this makes\nthe game a bit too hard...
105_043	Let's make it so that the UFO\ndoesn't break when it hits the wall!
105_001	Ah...\nThe UFO breaks when it hits the {[0001|1a00]}{color[0400]}walls{color[ffff]}{[0001|ffff]}.
105_002	The UFO is {[0001|1a00]}{color[0400]}set to break when it\ncollides with anything{color[ffff]}{[0001|ffff]}... So if it\nhits the walls, it's done for.
105_003	But maybe this makes\nthe game a bit too hard...
105_004	Let's go to the program screen and\nmake the UFO a bit more resilient\nto wall-based destruction!
105_007	Open up the {[0001|1a00]}{color[0400]}UFO Nodon{color[ffff]}{[0001|ffff]}'s\nsettings screen.
105_007-01	Under {[0001|1a00]}Properties{[0001|ffff]},\n{[0001|1a00]}{color[0400]}disable Destructible{color[ffff]}{[0001|ffff]}.
105_008	Now, open up the {[0001|1a00]}{color[0400]}detailed settings{color[ffff]}{[0001|ffff]} \nof the {[0001|1a00]}{color[0400]}Destructible property{color[ffff]}{[0001|ffff]} with the\n{[0001|1a00]}{color[0400]}button next to it{color[ffff]}{[0001|ffff]}.
105_009	You'll be able to determine\nexactly {[0001|1a00]}{color[0400]}what breaks the UFO\n{color[ffff]}{[0001|ffff]}here.
105_015	{[0001|1a00]}{color[0400]}Enable Alien{color[ffff]}{[0001|ffff]} only.
105_015-01	Now the UFO {[0001|1a00]}{color[0400]}won't break\nunless it collides with an alien{color[ffff]}{[0001|ffff]}.
105_016	Now close this screen.
105_017	Then close the settings screen.
105_018	Now the UFO won't break if it\ncollides with a wall or one of\nits own projectiles.
105_019	So our craft is a whole\nlot tougher now.
105_021	All righty, time to confirm that\non the game screen!
105_022	First, try flying smack dab\ninto an {[0001|1a00]}{color[0400]}alien{color[ffff]}{[0001|ffff]}.
105_023	As we hoped, the UFO broke\nwhen it hit the alien.
105_024	Next, try colliding with a {[0001|1a00]}{color[0400]}wall{color[ffff]}{[0001|ffff]}!\nNo fear!
105_025	Our craft is intact. I'd call\nthat a success!
105_026	Now the UFO will only break if it {[0001|1a00]}{color[0400]}comes\ninto contact with aliens{color[ffff]}{[0001|ffff]}. That makes the\ngame a bit more playable.
106	When you're done checking that,\nhead back to the program screen.
107	And with that...
108	Step 4 is complete!
109	A very nice ending...
109_00	YOUR HARD WORK HAS PAID\nDIVIDENDS. ALLOW ME TO\nCOUNT THE DIVIDENDS.
109_01	Uniformly excellent!
109_02	{[c903]}{[0201]}, darling!\nSterling work as usual!
110	So in this step, we added an\n{[0001|1a00]}{color[0400]}automatic scrolling feature{color[ffff]}{[0001|ffff]}.
111	And we expanded the level.
112	Looking back at it, this was a pretty\nlong, challenging step, wasn't it?
113	But well done for making it through to the\nend. I'm impressed by your\nstick-to-itiveness, {[0201]}!
114	That's just the kind of dogged\ndetermination that will get you\nthrough the next step.
116	All righty!\nSee you in the next step!
Lesson_Shooting_04.msbt
000	{[c903]}{[0201]}, great to see you!\nWelcome to Step 5!
001	Hang on... I guess you noticed that the\ngame screen keeps on scrolling while\nwe're chatting.
002	If that {[0001|1a00]}{color[0400]}automatic scrolling{color[ffff]}{[0001|ffff]} keeps going\non during the lesson, it'll make it {[0001|1a00]}{color[0400]}tough\nto check our work{color[ffff]}{[0001|ffff]} on the game screen.
003	So in this step, we'll {[0001|1a00]}{color[0400]}create\na way to stop the scrolling{color[ffff]}{[0001|ffff]} to\nmake things easier.
011	To the program screen!
012	OK! There's something we\nneed {[0001|1a00]}{color[0400]}to do to get ready{color[ffff]}{[0001|ffff]} before we\nmake our scroll-stop setup.
014	So our first task this time is make\nit so that {[0001|1a00]}{color[0400]}scrolling advances\nonly while  is held down{color[ffff]}{[0001|ffff]}.
015	Go to {[0001|1a00]}Input {[0001|0400]}{[0001|1a00]} Button Press {[0001|0400]} {[0001|1a00]}\n{[0001|ffff]}to call up a {[0001|1a00]}{color[0400]}Button Nodon{color[ffff]}{[0001|ffff]}.
017	Heyo!\nI'll put the power at your fingertips!
018-00	Now, select this\n{[0001|1a00]}{color[0400]}Constant Nodon{color[ffff]}{[0001|ffff]} here.
018	Then press this button\nto {[0001|1a00]}{color[0400]}delete{color[ffff]}{[0001|ffff]} it.
021	To replace it, connect the\n{[0001|1a00]}{color[0400]}Button Nodon {color[ffff]}{[0001|ffff]}to the {[0001|1a00]}{color[0400]}Counter\nNodon{color[ffff]}{[0001|ffff]}'s {[0001|1a00]}{color[0400]}count up port{color[ffff]}{[0001|ffff]}.
022	Now, the screen will {[0001|1a00]}{color[0400]}only\nscroll when you hold down{color[ffff]}{[0001|ffff]} {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]}.
023	Let's take a look!
024	The screen won't scroll,\n{[0001|1a00]}{color[0400]}until you press {color[ffff]}{[0001|ffff]}.
024_00	Try pressing {[0001|1a00]}{color[0400]}{color[ffff]}{[0001|ffff]}.
024_01	Ah, it moved!
025	The {[0001|1a00]}{color[0400]}screen scrolls only when  is \nheld down{color[ffff]}{[0001|ffff]}. Just what we wanted.
026	However... We have a new problem,\nsince now {[0001|1a00]}{color[0400]}you can't play the game\nunless you hold  down{color[ffff]}{[0001|ffff]}.
028	Maybe we could flip things around?\nMake it so that {[0001|1a00]}{color[0400]}holding the button\npauses the scrolling{color[ffff]}{[0001|ffff]} instead?
029	To the program screen!
030	So we want the {[0001|1a00]}{color[0400]}opposite{color[ffff]}{[0001|ffff]} of\nour current setup...
031	We'll be making it so that {[0001|1a00]}{color[0400]}the\nscroll stops when  is held down{color[ffff]}{[0001|ffff]},\nremember?
031-01	Looked at from another angle, you could\nsay that {[0001|1a00]}{color[0400]}scrolling happens whenever \nisn't held down{color[ffff]}{[0001|ffff]}.
032	If we're making a setup that {[0001|1a00]}{color[0400]}does\nsomething when something isn't pressed{color[ffff]}{[0001|ffff]},\nwe'll need the help of a {[0001|1a00]}{color[0400]}NOT Nodon{color[ffff]}{[0001|ffff]}.
033	Go to {[0001|1a00]}{color[0400]}Middle{color[ffff]}{[0001|ffff]}.
034	Then {[0001|1a00]}{color[0400]}Logic{color[ffff]}{[0001|ffff]}.
035	And call up a {[0001|1a00]}{color[0400]}NOT Nodon\n{color[ffff]}{[0001|ffff]}from {[0001|1a00]}{color[0400]}NOT{color[ffff]}{[0001|ffff]}.
037	Hello!\nI'm a NOT Nodon...am I not?
037-01	I'm not here to help...NOT!
038	OK... Looks like the {[0001|1a00]}{color[0400]}NOT Nodon{color[ffff]}{[0001|ffff]}\nis ready to do its "not" thing.
039	The NOT Nodon will {[0001|1a00]}{color[0400]}output a\nsignal when it receives none{color[ffff]}{[0001|ffff]}.
039_00	Conversely, it will {[0001|1a00]}{color[0400]}output nothing\nwhen it does receive a signal{color[ffff]}{[0001|ffff]}.
040	It's what you'd call a contrarian.
041	Hey!\nYou aren't telling fibs about\nme over there...are you?
042	OK, delete the {[0001|1a00]}{color[0400]}connection{color[ffff]}{[0001|ffff]} between the\n{[0001|1a00]}{color[0400]}Button Nodon{color[ffff]}{[0001|ffff]} and the {[0001|1a00]}{color[0400]}Counter Nodon{color[ffff]}{[0001|ffff]}.
044	Now, connect the {[0001|1a00]}{color[0400]}NOT Nodon\n{color[ffff]}{[0001|ffff]}to the {[0001|1a00]}{color[0400]}Button Nodon{color[ffff]}{[0001|ffff]}.
045	Heyo!\nWhat a team!
046	Nope, not working with you! Goodbye!
047	Connect the {[0001|1a00]}{color[0400]}NOT Nodon{color[ffff]}{[0001|ffff]} to the\n{[0001|1a00]}{color[0400]}Counter Nodon{color[ffff]}{[0001|ffff]}'s {[0001|1a00]}{color[0400]}count up port{color[ffff]}{[0001|ffff]}.
047-01	There! Now {[0001|1a00]}{color[0400]}scrolling will pause\nwhen  is held down{color[ffff]}{[0001|ffff]}.
049	OK! Let's take a look!
050	The screen will scroll along\nautomatically while  isn't held.
051	Now try pressing {[0001|1a00]}{color[0400]}\n{color[ffff]}{[0001|ffff]}and holding it down.
052	Awesome!\nThe scrolling stopped!
053	Now we'll be able to {[0001|1a00]}{color[0400]}stop\nthe scrolling at will{color[ffff]}{[0001|ffff]} to check\nour work.
053_01	So, now that we've got the {[0001|1a00]}{color[0400]}automatic\nscrolling{color[ffff]}{[0001|ffff]} under our control...
054	To the program screen!
055	We should leave it here\nfor now, because...
056	Step 5 is complete!
057	Yeah!
057_00	Amazing's NOT the word!
057_01	THAT WAS A TREAT.
057_02	Marvelous!
058	In this step, we created {[0001|1a00]}{color[0400]}a setup to\npause the screen's scrolling{color[ffff]}{[0001|ffff]}.
060	This'll make things a lot easier\nfor the programming that we\nstill have ahead of us.
061	All righty! Let's leave it there for now,\nand pick up where we left off in the\nnext step.
062	You'd better roll your sleeves up though,\nbecause next time around, we'll be adding in an\n{[0001|1a00]}{color[0400]}obstacle{color[ffff]}{[0001|ffff]} even more fiendish than the aliens!
063	See you there!
Lesson_Shooting_05.msbt
000	{[c903]}{[0201]}!\nJust the person I was hoping to see!
001	OK, let's jump right in!\nHold down {[0001|1a00]}{color[0400]} {color[ffff]}{[0001|ffff]}for me, please.
108	The scrolling stopped!
109	Last time, we added in a setup to\n{[0001|1a00]}{color[0400]}pause the automatic scrolling{color[ffff]}{[0001|ffff]}, right?
002	That means it's a lot easier\nfor us to check things on the\ngame screen now.
003	We'll be making use of this\ncapability a whole lot as we\nmove forward.
003-01	We'll be adding a whole\nnew setup this time around.
004	OK! To the program screen!
006	First up, let's {[0001|1a00]}{color[0400]}extend the level{color[ffff]}{[0001|ffff]} a bit.
007	Copy the {[0001|1a00]}{color[0400]}Fancy-Object Nodon{color[ffff]}{[0001|ffff]}.
009	Move the copied Fancy-Object Nodon\nto the blue frame in the {[0001|1a00]}{color[0400]}upper right{color[ffff]}{[0001|ffff]}.
010	{[0001|1a00]}{color[0400]}Copy{color[ffff]}{[0001|ffff]} the {[0001|1a00]}{color[0400]}Fancy-Object Nodon\n{color[ffff]}{[0001|ffff]}that you just moved.
011	Take the copy to the blue frame {[0001|1a00]}{color[0400]}below{color[ffff]}{[0001|ffff]}.
012	Now make another {[0001|1a00]}{color[0400]}copy{color[ffff]}{[0001|ffff]}.
013	And take it to the blue frame.
013_00	Make another {[0001|1a00]}{color[0400]}copy{color[ffff]}{[0001|ffff]}.
013_01	And put it in the blue frame\non the {[0001|1a00]}{color[0400]}upper right{color[ffff]}{[0001|ffff]}.
013_02	And finally!\nOne more {[0001|1a00]}{color[0400]}copy{color[ffff]}{[0001|ffff]}.
013_03	And put it in the blue frame\nin the {[0001|1a00]}{color[0400]}lower right{color[ffff]}{[0001|ffff]}.
013_04	That should do it for enemy aliens.
014	Next, let's add a few {[0001|1a00]}{color[0400]}walls{color[ffff]}{[0001|ffff]}.
016	{[0001|1a00]}{color[0400]}Copy{color[ffff]}{[0001|ffff]} this {[0001|1a00]}{color[0400]}Object Nodon{color[ffff]}{[0001|ffff]}.
018	Make it larger, and then\nplace it in the blue frame.
019	Make another {[0001|1a00]}{color[0400]}copy{color[ffff]}{[0001|ffff]} of\nthe {[0001|1a00]}{color[0400]}Object Nodon{color[ffff]}{[0001|ffff]}.
020	And put it in the blue frame.\nBut make it smaller this time.
023	Nice!
024	Finally, we'll need an {[0001|1a00]}{color[0400]}invisible wall{color[ffff]}{[0001|ffff]}.
025	{[0001|1a00]}{color[0400]}Copy{color[ffff]}{[0001|ffff]} this {[0001|1a00]}{color[0400]}Object Nodon{color[ffff]}{[0001|ffff]}.
027	Put it in the blue\nframe on the {[0001|1a00]}{color[0400]}right{color[ffff]}{[0001|ffff]}.
028	Now make another {[0001|1a00]}{color[0400]}copy{color[ffff]}{[0001|ffff]}.
029	And put it in the\nblue frame {[0001|1a00]}{color[0400]}below{color[ffff]}{[0001|ffff]}.
031	All righty!\nLet's check it out!
031_00	Try playing through the level\nto the expanded part!
031_01	Try again!\nPlay through to the\nexpanded part!
032	So here's the part \nthat we just made...\nIt's looking good!
033	OK!\nSo {[0001|1a00]}{color[0400]}the level is longer now{color[ffff]}{[0001|ffff]}.
034	It takes quite a while to get\nup to the new part, doesn't it?
035	As a work-around, we'll change {[0001|1a00]}{color[0400]}where\nthe game begins{color[ffff]}{[0001|ffff]} for the time being.
036	To the program screen!
039	{[0001|1a00]}{color[0400]}Select{color[ffff]}{[0001|ffff]} the {[0001|1a00]}{color[0400]}Game-Screen Nodon{color[ffff]}{[0001|ffff]}.
040	And move it up to the\npart of the level that\nwe just made.
040_01	Next, {[0001|1a00]}{color[0400]}select{color[ffff]}{[0001|ffff]} the {[0001|1a00]}{color[0400]}UFO Nodon{color[ffff]}{[0001|ffff]}.
040_02	And move it along.
041	All righty!\nLet's test it out on\nthe game screen!
042	Yep, the start position changed.
043	Now when the game starts,\nit'll start from the extra part\nthat we just created.
044	OK!\nWe're going to add some\nmore features to the level.
045	You could say it's this\nstep's main event!
046	It's going to be a thrilling,\n{[0001|1a00]}{color[0400]}rotating obstacle{color[ffff]}{[0001|ffff]}!
047	To start, let's call up a\n{[0001|1a00]}{color[0400]}Rotating-Object Nodon{color[ffff]}{[0001|ffff]}.
047_00	Go to {[0001|1a00]}{color[0400]}Objects{color[ffff]}{[0001|ffff]}.
047_01	Then {[0001|1a00]}{color[0400]}Special Objects{color[ffff]}{[0001|ffff]}.
047_02	{[0001|1a00]}{color[0400]}Rotating Objects{color[ffff]}{[0001|ffff]}.
047_03	Then call up a {[0001|1a00]}{color[0400]}cylinder\nRotating-Object Nodon{color[ffff]}{[0001|ffff]}.
050	Tee-hee! You called?
051	Rotation is my life.\nMy life is rotation.\nTralalala!
051-01	As the name suggests, the\n{[0001|1a00]}{color[0400]}Rotating-Object Nodon{color[ffff]}{[0001|ffff]} will put\n{[0001|1a00]}{color[0400]}rotating objects {color[ffff]}{[0001|ffff]}on to the game screen.
049	Stretch the {[0001|1a00]}{color[0400]}Rotating-Object\nNodon {color[ffff]}{[0001|ffff]}vertically so that it fits\nin the blue frame.
052	Next, open up the settings screen\nfor the {[0001|1a00]}{color[0400]}Rotating-Object Nodon{color[ffff]}{[0001|ffff]}.
052_00	Since {[0001|1a00]}{color[0400]}you can break it with the\nprojectiles{color[ffff]}{[0001|ffff]}, let's make it the same\ncolor as the aliens.
052_01	Open up the {[0001|1a00]}{color[0400]}Color{color[ffff]}{[0001|ffff]} settings.
052_02	And make it {[0001|1a00]}{color[0400]}pink{color[ffff]}{[0001|ffff]}.
052_03	Now close this screen.
053	All righty! Let's go to the game screen\nand see what it looks like.
054	Ah! A {[0001|1a00]}{color[0400]}pink cylinder{color[ffff]}{[0001|ffff]}!
054_00	Press {[0001|1a00]}{color[0400]} {color[ffff]}{[0001|ffff]}to {[0001|1a00]}{color[0400]}stop the scrolling{color[ffff]}{[0001|ffff]} if it\nmakes things easier to check.
055	Just because we placed the\nRotating-Object Nodon doesn't\nmean the thing will start rotating.
056	We'll need to do a bit of programming\nbefore we can have the cylinder {[0001|1a00]}{color[0400]}rotate{color[ffff]}{[0001|ffff]}.\nTo the program screen!
058	OK! So let's get this object rotating!\nWe'll need a {[0001|1a00]}{color[0400]}Constant Nodon{color[ffff]}{[0001|ffff]} for that.
058_00	Go to {[0001|1a00]}Input {[0001|0400]}{[0001|1a00]} Constant{[0001|ffff]}, and then\ncall up a {[0001|1a00]}{color[0400]}Constant Nodon{color[ffff]}{[0001|ffff]}.
059	Open up the {[0001|1a00]}{color[0400]}Constant Nodon{color[ffff]}{[0001|ffff]}'s\nsettings screen.
060	Set the {[0001|1a00]}Output Value{[0001|ffff]} to {[0001|1a00]}{color[0400]}0.20{color[ffff]}{[0001|ffff]}.\nIt's quite a fiddly little number\nthough, right?
060_00	So use the {[0001|1a00]}{color[0400]}keypad{color[ffff]}{[0001|ffff]}, instead of\nthe slider. It'll be a bit easier.
060_01	Press this button, then enter the\nvalue {[0001|1a00]}{color[0400]}0.20{color[ffff]}{[0001|ffff]} with the {[0001|1a00]}{color[0400]}keypad{color[ffff]}{[0001|ffff]}.
061	OK!\nClose the settings screen.
062	Connect the {[0001|1a00]}{color[0400]}Constant Nodon{color[ffff]}{[0001|ffff]} to the\n{[0001|1a00]}{color[0400]}Rotating-Object Nodon{color[ffff]}{[0001|ffff]}'s {[0001|1a00]}{color[0400]}Z port{color[ffff]}{[0001|ffff]}.
062-01	Now that those are linked, the pink cylinder\nshould rotate on the game screen.
063	Let's take a look!
064	And there it is, spinning\naway like it should.
065	So you just saw how we need to\n{[0001|1a00]}{color[0400]}supply a Rotating-Object Nodon with\na signal{color[ffff]}{[0001|ffff]} to make the object rotate.
066	All righty! Since we've gone to\nall the trouble of setting up our\nrotating obstacle...
067	let's spruce it up by {[0001|1a00]}{color[0400]}connecting\n{color[ffff]}{[0001|ffff]}some other objects.
068	To the program screen!
069	Firstly, go to {[0001|1a00]}Objects {[0001|0400]}{[0001|1a00]} Simple Objects\n{[0001|0400]}{[0001|1a00]} Cylinder{[0001|ffff]}, and call up an {[0001|1a00]}{color[0400]}Object Nodon{color[ffff]}{[0001|ffff]}.
071	Make the Object Nodon a bit bigger.
071_00	Next, open up the {[0001|1a00]}{color[0400]}Object Nodon{color[ffff]}{[0001|ffff]}'s\nsettings screen.
071_01	Open up the {[0001|1a00]}{color[0400]}Color{color[ffff]}{[0001|ffff]} settings.
071_02	Make it {[0001|1a00]}{color[0400]}pink{color[ffff]}{[0001|ffff]} to match\nthe rotating object.
071_02-01	While we're here, open up\n{[0001|1a00]}{color[0400]}Connection Point {color[ffff]}{[0001|ffff]}so we can\nset how the objects will join up.
071_02-02	Set {[0001|1a00]}{color[0400]}Own Connection Point{color[ffff]}{[0001|ffff]} to {[0001|1a00]}{color[0400]}X+{color[ffff]}{[0001|ffff]}.
071_02-03	Now close this screen.
071_03	Close the settings screen.
072	OK! {[0001|1a00]}{color[0400]}Connect{color[ffff]}{[0001|ffff]} the {[0001|1a00]}{color[0400]}Object Nodon{color[ffff]}{[0001|ffff]} to\nthe {[0001|1a00]}{color[0400]}Rotating-Object Nodon{color[ffff]}{[0001|ffff]}, please.
073	Tralalala!\nA partner for my dance!
074	Ayup... What kind of dance\nare we doing? A foxtrot? Tango?\nMaybe a jaunty little paso doble?
076	OK!\nLet's see how it's looking\non the game screen!
077	Success! The objects are rotating\ntogether. Nice coordination!
078	Let's connect one\nmore object to it.
079	To the program screen!
080	{[0001|1a00]}{color[0400]}Copy{color[ffff]}{[0001|ffff]} the {[0001|1a00]}{color[0400]}Object Nodon{color[ffff]}{[0001|ffff]}.
082	Now drag it over to\nthe blue frame.
082-01	Open up the settings screen\nfor this {[0001|1a00]}{color[0400]}Object Nodon{color[ffff]}{[0001|ffff]}.
082-02	Open up the {[0001|1a00]}{color[0400]}Connection Point{color[ffff]}{[0001|ffff]} settings.
082-03	We want this one on the opposite\nside to what we did before.\nSet {[0001|1a00]}{color[0400]}Target Connection Point{color[ffff]}{[0001|ffff]} to {[0001|1a00]}{color[0400]}Y-{color[ffff]}{[0001|ffff]}.
082-04	Now close this screen.
082-05	And close the settings screen.
083	Now that we've taken care of the\nsettings, {[0001|1a00]}{color[0400]}connect{color[ffff]}{[0001|ffff]} this {[0001|1a00]}{color[0400]}Object Nodon\n{color[ffff]}{[0001|ffff]}to the {[0001|1a00]}{color[0400]}Rotating-Object Nodon{color[ffff]}{[0001|ffff]}.
084	Oh, dancing, eh?
085	Tee-hee!\nDancing indeed! A veritable ball!
092	OK! Let's have a look!
096	Oh!\nThat's a pretty nifty obstacle there!
096_00	And now you know how to make\n{[0001|1a00]}{color[0400]}more complex objects{color[ffff]}{[0001|ffff]} by {[0001|1a00]}{color[0400]}connecting\n{color[ffff]}{[0001|ffff]}simpler objects together.
096_00_00	And with that we're all done! Or rather,\nthat's what I would be saying, if we were\nall done. But not quite!
096_00_01	Press {[0001|1a00]}{color[0400]}Retry{color[ffff]}{[0001|ffff]}, and\ngive it another whirl.
096_00_02	Try {[0001|1a00]}{color[0400]}crashing{color[ffff]}{[0001|ffff]} the UFO into\nthe {[0001|1a00]}{color[0400]}rotating obstacle{color[ffff]}{[0001|ffff]}.
096_00_03	Yup!\nThe UFO didn't break!
096_00_04	Let's fix that, and make it so that\nthe UFO {[0001|1a00]}{color[0400]}breaks{color[ffff]}{[0001|ffff]} on contact with\nthe rotating obstacle.
096_01	To the program screen!
096_01_00	Open up the {[0001|1a00]}{color[0400]}UFO Nodon{color[ffff]}{[0001|ffff]}'s\nsettings screen.
096_01_01	So the UFO should {[0001|1a00]}{color[0400]}break{color[ffff]}{[0001|ffff]} when it hits not\njust an alien, but the obstacle too. And the\nobstacle is shaped like a {[0001|1a00]}{color[0400]}cylinder{color[ffff]}{[0001|ffff]}, right?
096_01_02	Under {[0001|1a00]}Properties{[0001|ffff]}, open up\n{[0001|1a00]}{color[0400]}detailed settings {color[ffff]}{[0001|ffff]}for {[0001|1a00]}{color[0400]}Destructible{color[ffff]}{[0001|ffff]}.
096_01_03	{[0001|1a00]}{color[0400]}Enable Cylinder{color[ffff]}{[0001|ffff]}.
096_01_04	Close this screen.
096_01_05	And close the settings screen.
096_01_06	Let's test it out on the game screen!
096_01_07	Try again! Go for the obstacle!
096_01_08	And the UFO broke!
096_02	All righty!\nThis time, I can say that the\n{[0001|1a00]}{color[0400]}rotating obstacle{color[ffff]}{[0001|ffff]} is truly complete.
097	And when you're done checking that\nout, head back to the program screen.
098	And...that's right...
099	Step 6 is clear!
100	Ah, that was such a graceful\nfoxtrot of a lesson, wasn't it?
100_00	Oh, I'm a bit dizzy here...
100_01	Good job!
100_02	Unchangingly brilliant!
101	So in this step, we created\na {[0001|1a00]}{color[0400]}rotating obstacle{color[ffff]}{[0001|ffff]}.
102	We also learned that we can make any shape\nwe want by {[0001|1a00]}{color[0400]}connecting{color[ffff]}{[0001|ffff]} objects together.
103	Furthermore, our complex shape {[0001|1a00]}{color[0400]}spins\naround{color[ffff]}{[0001|ffff]}, thanks to a physical {[0001|1a00]}{color[0400]}connection\n{color[ffff]}{[0001|ffff]}to the {[0001|1a00]}{color[0400]}Rotating-Object Nodon{color[ffff]}{[0001|ffff]}.
104	We'll be putting those techniques to\neven better use in the next step.
105	To be specific, we'll be\nmaking a {[0001|1a00]}{color[0400]}rotating enemy{color[ffff]}{[0001|ffff]}!
106	See you at the next step!
Lesson_Shooting_06.msbt
000	{[c903]}{[0201]}!\nYou made it!
001	We're edging closer and\ncloser to our finale.
002	This time around, we're going to\nadapt the {[0001|1a00]}{color[0400]}rotating obstacle{color[ffff]}{[0001|ffff]} setup\nthat we created in the last step.
003	We'll use that to make our final boss,\na {[0001|1a00]}{color[0400]}rotating enemy{color[ffff]}{[0001|ffff]}! That seems pretty\nfitting, don't you think?
004	All righty! Let's get spinny!
005	Let's go behind the scenes.
006	Just a bit more work to\ndo on the level first.
007	Let's add a few more aliens here.
008	{[0001|1a00]}{color[0400]}Copy{color[ffff]}{[0001|ffff]} this {[0001|1a00]}{color[0400]}Fancy-Object Nodon{color[ffff]}{[0001|ffff]}.
010	Take the Fancy-Object Nodon that\nyou copied, and put it {[0001|1a00]}{color[0400]}up above{color[ffff]}{[0001|ffff]} in\nthe blue frame.
011	{[0001|1a00]}{color[0400]}Copy{color[ffff]}{[0001|ffff]} again.
012	Drag it to the blue frame.
013	Now {[0001|1a00]}{color[0400]}copy{color[ffff]}{[0001|ffff]} again.
014	Put it in the blue frame.
015	{[0001|1a00]}{color[0400]}Copy{color[ffff]}{[0001|ffff]}.
016	Into the blue frame!
017	And the last one.\n{[0001|1a00]}{color[0400]}Copy{color[ffff]}{[0001|ffff]}.
018	And, surprise, put it in the blue frame!
020-01	My, what a terrifying horde\nof aliens! That's plenty!
021	Next, we'll add a few more {[0001|1a00]}{color[0400]}walls{color[ffff]}{[0001|ffff]}.
022	{[0001|1a00]}{color[0400]}Copy{color[ffff]}{[0001|ffff]} this {[0001|1a00]}{color[0400]}Object Nodon{color[ffff]}{[0001|ffff]}.
024	Shrink it a bit, and put it in the\nblue frame in the {[0001|1a00]}{color[0400]}lower right{color[ffff]}{[0001|ffff]}.
025	{[0001|1a00]}{color[0400]}Copy{color[ffff]}{[0001|ffff]} again.
026	Put it in the {[0001|1a00]}{color[0400]}tall{color[ffff]}{[0001|ffff]} blue frame.
027	We'll place an {[0001|1a00]}{color[0400]}invisible wall\n{color[ffff]}{[0001|ffff]}in the same way.
028	{[0001|1a00]}{color[0400]}Copy{color[ffff]}{[0001|ffff]} this {[0001|1a00]}{color[0400]}Object Nodon{color[ffff]}{[0001|ffff]}.
030	Put it in the blue frame on the {[0001|1a00]}{color[0400]}right{color[ffff]}{[0001|ffff]}.
031	Make another {[0001|1a00]}{color[0400]}copy{color[ffff]}{[0001|ffff]}.
032	Put it in the blue frame {[0001|1a00]}{color[0400]}below{color[ffff]}{[0001|ffff]}.
033	Awesome!
034	We'll check this out shortly, but first...
035	select the {[0001|1a00]}{color[0400]}Game-Screen Nodon{color[ffff]}{[0001|ffff]}.
036	Move the start position, if you could.
037	Now {[0001|1a00]}{color[0400]}select{color[ffff]}{[0001|ffff]} the UFO Nodon.
038	Drag it over to\nthe blue frame.
039	OK!
040	To the game screen!
041	So, here's our extension to the level.
042	Now we can get to building our final\nand most magnificent contrivance.
043	Namely, a {[0001|1a00]}{color[0400]}rotating foe{color[ffff]}{[0001|ffff]}!
044	To the program screen!
047	First, copy this {[0001|1a00]}{color[0400]}Fancy-Object Nodon{color[ffff]}{[0001|ffff]}.
049	This is the last boss, so we'd\nbetter scale it up! Make it bigger,\nand fit it into the blue frame.
050	Open up the {[0001|1a00]}{color[0400]}Fancy-Object Nodon{color[ffff]}{[0001|ffff]}'s\nsettings screen.
051	Under {[0001|1a00]}Rotation{[0001|ffff]}, change the\nvalue of the {[0001|1a00]}y-axis{[0001|ffff]} to {[0001|1a00]}{color[0400]}0.00°{color[ffff]}{[0001|ffff]}.
052	Under {[0001|1a00]}Properties{[0001|ffff]}, {[0001|1a00]}{color[0400]}enable Movable{color[ffff]}{[0001|ffff]}.
053	All righty!
054	Let's get a first look at\nour mighty boss.
055	And there it is!\nAn enormous alien!
056	Looking good!\nJust the ticket for\nthe last boss, right?
057	OK... We'll need to check if it can\nbe {[0001|1a00]}{color[0400]}destroyed with the projectiles{color[ffff]}{[0001|ffff]}.
058	Press {[0001|1a00]}{color[0400]}Retry{color[ffff]}{[0001|ffff]}, so we can\ntest it a bit more.
059	Fire off some projectiles\nand destroy the {[0001|1a00]}{color[0400]}big alien{color[ffff]}{[0001|ffff]}!
060	Awesome!\nThe explosion was extra big too!
061	It's not complete yet though.\nRemember, it's going to be a\nrotating final boss of doom!
062	To the program screen!\nLet's get this monstrosity\nspinning around and around!
063	{[0001|1a00]}{color[0400]}Aliens{color[ffff]}{[0001|ffff]} generally {[0001|1a00]}{color[0400]}can't\nrotate themselves{color[ffff]}{[0001|ffff]}.
064	We'll need the help of the\n{color[0400]}{[0001|1a00]}Rotating-Object Nodon{[0001|ffff]}{color[ffff]} that\nwe met in the last step.
065	Go to {[0001|1a00]}Objects {[0001|0400]}{[0001|1a00]} Special Objects\n{[0001|0400]}{[0001|1a00]} Rotating Objects {[0001|0400]}{[0001|1a00]} Box{[0001|ffff]}, then call\na {[0001|1a00]}{color[0400]}Rotating-Object Nodon{color[ffff]}{[0001|ffff]}.
066	Tralalala!\nHow lovely to trip the light fantastic\nwith you again, {[0201]}!
069	Open up the {[0001|1a00]}{color[0400]}Rotating-Object\nNodon{color[ffff]}{[0001|ffff]}'s settings screen.
070	Under {[0001|1a00]}Properties{[0001|ffff]},\n{[0001|1a00]}{color[0400]}enable Movable{color[ffff]}{[0001|ffff]} only.
071	Close this screen.
072	Tralala... You've made me\ninvisible! Love it!
073	Perhaps you can't see me,\nbut I'll still be spinning around\nand around!
075	OK... Like before, we'll need to supply\na signal to have the object rotate. Call\nup a {[0001|1a00]}{color[0400]}Constant Nodon{color[ffff]}{[0001|ffff]} for that.
076	Go to {[0001|1a00]}Input {[0001|0400]}{[0001|1a00]} Constant{[0001|ffff]}, and\ncall up a {[0001|1a00]}{color[0400]}Constant Nodon{color[ffff]}{[0001|ffff]}.
078	Open up the {[0001|1a00]}{color[0400]}Constant Nodon{color[ffff]}{[0001|ffff]}'s\nsettings screen.
079	Set {[0001|1a00]}Output Value\n{[0001|ffff]}to {[0001|1a00]}{color[0400]}0.30{color[ffff]}{[0001|ffff]}.
080	Great.\nClose the settings screen.
081	Yes, {[0001|1a00]}{color[0400]}0.30{color[ffff]}{[0001|ffff]}.\nThe value is {[0001|1a00]}{color[0400]}0.30{color[ffff]}{[0001|ffff]},\nand never shall it change!
082	Connect the {[0001|1a00]}{color[0400]}Constant Nodon {color[ffff]}{[0001|ffff]}to the\n{[0001|1a00]}{color[0400]}Rotating-Object Nodon{color[ffff]}{[0001|ffff]}'s {[0001|1a00]}{color[0400]}z-axis port{color[ffff]}{[0001|ffff]}.
083	Ah, you bid me to spin...\nAnd spin I shall! Tralalala!
085	OK! {[0001|1a00]}{color[0400]}Connect{color[ffff]}{[0001|ffff]} the {[0001|1a00]}{color[0400]}Fancy-Object Nodon\n{color[ffff]}{[0001|ffff]}to the {[0001|1a00]}{color[0400]}Rotating-Object Nodon{color[ffff]}{[0001|ffff]}.
086	Dancing forever in the void of space...\nA romantic destiny indeed! ♥
086-01	There! That should have our\nbig alien rotating now.
087	OK! Let's check it out\non the game screen!
088	And it's spinning!
089	Can't complain about that!\nSuch impact!
090	With that, the last boss,\nour {[0001|1a00]}{color[0400]}rotating enemy alien{color[ffff]}{[0001|ffff]},\nis complete.
091	Ah, staring at the spinning\nalien... It's enough to make\nyour eyes spin too...
092	Back to the program screen!
130	And now...I do declare...
131	Step 7 is complete!
132	A marvelous time we've had!
133	Yup. Pretty good.
134	Excellent as ever!
135	Lovely stuff! ♥
136	Our mighty, terrible, and colossal\nboss is complete! Our fearsome,\n{[0001|1a00]}{color[0400]}giant rotating enemy{color[ffff]}{[0001|ffff]}!
137	We connected the Fancy-Object Nodon\nto an {[0001|1a00]}{color[0400]}invisible Rotating-Object Nodon{color[ffff]}{[0001|ffff]}.
138	By doing that, we discovered\n{[0001|1a00]}{color[0400]}how to rotate objects that can't\nrotate themselves{color[ffff]}{[0001|ffff]}.
139	In the next step, we're going to\ncomplete the experience by building\na final {[0001|1a00]}{color[0400]}end point{color[ffff]}{[0001|ffff]} to the level.
140	See you at the next step!
Lesson_Shooting_07.msbt
000	Welcome back, {[0201]}!
001	In the last step, we pretty much\nfinished building up the level.
004	So this time, let's top it off with\na setup for the level's {[0001|1a00]}{color[0400]}goal{color[ffff]}{[0001|ffff]}.
005	Set your eyes on the prize!\nLet's get programming!
006	Before we get started\non our {[0001|1a00]}{color[0400]}goal setup{color[ffff]}{[0001|ffff]}...
007	we need to add in some\nmore {[0001|1a00]}{color[0400]}invisible walls{color[ffff]}{[0001|ffff]}.
008	{[0001|1a00]}{color[0400]}Copy{color[ffff]}{[0001|ffff]} this {[0001|1a00]}{color[0400]}Object Nodon{color[ffff]}{[0001|ffff]}.
010	Move it over to the right.
012	{[0001|1a00]}{color[0400]}Copy{color[ffff]}{[0001|ffff]} it again.
013	And put it {[0001|1a00]}{color[0400]}below{color[ffff]}{[0001|ffff]}.
015	All righty! Let's make it nice and\nclear that this is the {[0001|1a00]}{color[0400]}goal{color[ffff]}{[0001|ffff]}.
016	We'll use {[0001|1a00]}{color[0400]}text displayed on the\nscreen{color[ffff]}{[0001|ffff]} to spell it out for the player.
017	Go to {[0001|1a00]}Objects {[0001|0400]}{[0001|1a00]} Special Objects\n{[0001|ffff]}{[0001|0400]}{[0001|ffff]} {[0001|1a00]}{color[0400]}Text Object{color[ffff]}{[0001|ffff]}, and call up a\n{[0001|1a00]}{color[0400]}Text-Object Nodon{color[ffff]}{[0001|ffff]}.
018	Your words are the wind,\ncarrying your thoughts to\nthose with the power to see.
019	We'll lay this {[0001|1a00]}{color[0400]}Text-Object Nodon{color[ffff]}{[0001|ffff]}\nout horizontally, to display the\ntext better.
020	Open up the {[0001|1a00]}{color[0400]}Text-Object Nodon{color[ffff]}{[0001|ffff]}'s\nsettings screen.
021	Press the {[0001|1a00]}{color[0400]}Edit{color[ffff]}{[0001|ffff]} button, and\nthen enter "{[0001|1a00]}{color[0400]}GOAL{color[ffff]}{[0001|ffff]}" as text.
022	Have you entered\n"{[0001|1a00]}{color[0400]}GOAL{color[ffff]}{[0001|ffff]}" as text?
023	Yes
024	No
025	OK!\nEnter "{[0001|1a00]}{color[0400]}GOAL{color[ffff]}{[0001|ffff]}" as text.
026	Next, under {[0001|1a00]}Properties{[0001|ffff]}, we want\neverything {[0001|1a00]}{color[0400]}disabled{color[ffff]}{[0001|ffff]} except {[0001|1a00]}{color[0400]}Visible{color[ffff]}{[0001|ffff]}.
027	Next, open up the {[0001|1a00]}{color[0400]}Color{color[ffff]}{[0001|ffff]} settings.
028	Let's go for {[0001|1a00]}{color[0400]}black{color[ffff]}{[0001|ffff]}, to match\nthe endless void of space!
029	For the {[0001|1a00]}{color[0400]}Text Color{color[ffff]}{[0001|ffff]}...
030	We want something that will stand out.\nHow about {[0001|1a00]}{color[0400]}white{color[ffff]}{[0001|ffff]}?
032	And finally!\nUnder {[0001|1a00]}Position{[0001|ffff]}, set {[0001|1a00]}Z{[0001|ffff]} to {[0001|1a00]}{color[0400]}1.00m{color[ffff]}{[0001|ffff]}.
033	OK!\nClose the settings screen.
034	Ah, achieving one's goal...\nThink of it not as an ending,\nbut a new beginning!
035	A goal is just a starting point\nfor future success, you see.
037	Wise words!\nNow, let's see how our {[0001|1a00]}{color[0400]}goal{color[ffff]}{[0001|ffff]} {[0001|1a00]}{color[0400]}text{color[ffff]}{[0001|ffff]}\nlooks on the game screen.
038	Now play the game\nup to the {[0001|1a00]}{color[0400]}goal{color[ffff]}{[0001|ffff]}.
039	And here's the goal!
040	Right... So we've got the\nlocation of our goal all\nmarked out now.
043	Next, we'll want to trigger a {[0001|1a00]}{color[0400]}sequence{color[ffff]}{[0001|ffff]}\nwhen the player gets to the goal.
045	After your UFO has battled its way through\nthat long, dangerous level, a fancy end\nsequence is just the way to celebrate.
047	For that, the first thing we'll need is a way\nto know {[0001|1a00]}{color[0400]}when{color[ffff]}{[0001|ffff]} {[0001|1a00]}{color[0400]}the UFO has reached the\ngoal{color[ffff]}{[0001|ffff]}. Call up a {[0001|1a00]}{color[0400]}Touch-Sensor Nodon{color[ffff]}{[0001|ffff]}.
049	Go to {[0001|1a00]}{color[0400]}Objects{color[ffff]}{[0001|ffff]}.
050	Then {[0001|1a00]}{color[0400]}Sensors{color[ffff]}{[0001|ffff]}.
051	Call up a {[0001|1a00]}{color[0400]}Touch-Sensor Nodon\n{color[ffff]}{[0001|ffff]}from {[0001|1a00]}{color[0400]}Touch Sensor{color[ffff]}{[0001|ffff]}.
052	Meep...\nW-what is it?
053	Ah...\nYou... You're the programmer?\nDon't scare me like that!
055	The rather sensitive Touch-Sensor Nodon\nwill place a {[0001|1a00]}{color[0400]}sensor{color[ffff]}{[0001|ffff]} on the game screen that\nwill tell us {[0001|1a00]}{color[0400]}if it's in contact with something{color[ffff]}{[0001|ffff]}.
056	Let's make the {[0001|1a00]}{color[0400]}Touch-Sensor Nodon{color[ffff]}{[0001|ffff]} tall,\nto make sure the UFO triggers it when\nit has traveled far enough.
057	Next, open up the {[0001|1a00]}{color[0400]}Touch-Sensor\nNodon{color[ffff]}{[0001|ffff]}'s settings.
058	Open up the {[0001|1a00]}{color[0400]}Check What?{color[ffff]}{[0001|ffff]} settings.
059	If any of the types of objects {[0001|1a00]}{color[0400]}enabled{color[ffff]}{[0001|ffff]} here\ncome into contact with the touch sensor,\nthe Nodon {[0001|1a00]}{color[0400]}will output a signal{color[ffff]}{[0001|ffff]}.
060	{[0001|1a00]}{color[0400]}Enable UFO{color[ffff]}{[0001|ffff]} only.
061	All righty!\nClose the detailed settings.
062	And close the settings screen.
063	Meep... There's going to be a UFO\ncrashing into me? I-I don't like the\nsound of that!
065	So, to make things a bit easier to\ncheck again, select the {[0001|1a00]}{color[0400]}Game-Screen\nNodon{color[ffff]}{[0001|ffff]}, please.
066	And drag it over to the goal.
067	Now {[0001|1a00]}{color[0400]}select{color[ffff]}{[0001|ffff]} the {[0001|1a00]}{color[0400]}UFO Nodon{color[ffff]}{[0001|ffff]}.
068	And move that too.
069	Let's test out our touch sensor\non the game screen.
072	This white box here\nis the {[0001|1a00]}{color[0400]}touch sensor{color[ffff]}{[0001|ffff]}.
073	When the UFO hits this sensor,\nthat's a sign to us that the goal\nhas been reached.
075	Maybe it's better if we make\nthe white box invisible though.
076	To the program screen!
077	Open up the {[0001|1a00]}{color[0400]}Touch-Sensor Nodon{color[ffff]}{[0001|ffff]}'s\nsettings screen.
078	Under {[0001|1a00]}Properties{[0001|ffff]}, {[0001|1a00]}{color[0400]}disable Visible{color[ffff]}{[0001|ffff]}.
079	Close the settings screen.
080	OK, let's check it out!
081	Awesome!\nThe sensor's white outline is gone now.
082	Now that we've done that, we can\nmove swiftly on to the programming\nof our {[0001|1a00]}{color[0400]}goal sequence{color[ffff]}{[0001|ffff]}.
084	To the program screen!
101	So, when we've reached our goal, it'd\nbe really nifty to celebrate it with some\nfun sounds and effects, don't you think?
103	First, go to {[0001|1a00]}Output {[0001|0400]}{[0001|1a00]} Play Sound\n{[0001|0400]}{[0001|1a00]} Play SFX{[0001|ffff]}, and call up a {[0001|1a00]}{color[0400]}Play-Sound Nodon{color[ffff]}{[0001|ffff]}.
104	Goooooal! Is that a kerCHING,\nor a ta-DAA? Hmmm...
106	Open up the settings screen\nfor the {[0001|1a00]}{color[0400]}Play-Sound Nodon{color[ffff]}{[0001|ffff]}.
107	Open up the {[0001|1a00]}Jingles{[0001|ffff]} menu.
108	Let's go for {[0001|1a00]}{color[0400]}Super happy{color[ffff]}{[0001|ffff]}!
108-01	Oh yes! That's a super happy jingle all right!\nI'm really feeling the cheer!
109	Now close this screen.
110	And close the settings screen.
111	Connect the {[0001|1a00]}{color[0400]}Touch-Sensor Nodon\n{color[ffff]}{[0001|ffff]}to the {[0001|1a00]}{color[0400]}Play-Sound Nodon{color[ffff]}{[0001|ffff]}'s {[0001|1a00]}{color[0400]}play port{color[ffff]}{[0001|ffff]}.
112	Yeah...\nCan't wait for the drop!
113	Meep!
113-01	Now, a sound will play when the\nUFO comes into contact with the\ntouch sensor.
114	Next, let's call up an {[0001|1a00]}{color[0400]}Effect Nodon {color[ffff]}{[0001|ffff]}to release\nsome fireworks when we hit our goal.
115	Go to {[0001|1a00]}Objects {[0001|0400]}{[0001|1a00]} Special Objects\n{[0001|0400]}{[0001|1a00]} Effects {[0001|0400]}{[0001|1a00]} Fireworks{[0001|ffff]}, and then call\nup an {[0001|1a00]}{color[0400]}Effect Nodon{color[ffff]}{[0001|ffff]}.
120	Oh... It's {[0201]}!\nStill buildin' games, eh?
121	Yeah, and I suppose when you're done\nmaking this game you'll be tellin' everyone\nabout it! Makin' a huge fuss and whatnot...
122	Nothing makes a fuss like fireworks, eh?
123	Connect the {[0001|1a00]}{color[0400]}Touch-Sensor Nodon\n{color[ffff]}{[0001|ffff]}to the {[0001|1a00]}{color[0400]}Effect Nodon{color[ffff]}{[0001|ffff]}, if you would.
123-01	So now when the UFO hits the\ntouch sensor, we'll see fireworks\nas well as hear a sound.
128	All righty! Let's see if that's working!
129	Why don't you saunter on\nover to the goal?
130	That's it! You reached the goal!
131	Both the {[0001|1a00]}{color[0400]}firework effect{color[ffff]}{[0001|ffff]} and the\n{[0001|1a00]}{color[0400]}sound effect{color[ffff]}{[0001|ffff]} were triggered like\nthey were supposed to.
132	Now for the finishing touch. Let's\ncreate a setup to automatically\n{[0001|1a00]}{color[0400]}retry the game when you hit the goal{color[ffff]}{[0001|ffff]}.
134	To the program screen!
135	Go to {[0001|1a00]}Output {[0001|0400]}{[0001|1a00]} Retry/End/Swap\n{[0001|0400]}{[0001|1a00]} Retry{[0001|ffff]} to call up a {[0001|1a00]}{color[0400]}Retry Nodon{color[ffff]}{[0001|ffff]}.
136	Oh dearie me...\nI wish I had a do-over for that...
137	Huh? What's up?
138	I was taking a little snooze earlier...
140	I just started talking in my sleep...\nI was saying, "I am Edward,\nking of the tomato people!"
141	Oh, it was so embarrassing...\nI'll never live it down...\nIf only I could have a do-over...
143	Hey, come on! It's not that bad.
144	Go to {[0001|1a00]}Middle {[0001|0400]}{[0001|1a00]} Timer{[0001|ffff]}, then\ncall up a {[0001|1a00]}{color[0400]}Timer Nodon{color[ffff]}{[0001|ffff]}.
145	Oh... I hope this won't take\nup too much of my time!
146	Time is precious, you know.\nYou'd better not be wasting\nmy time on purpose!
173	Time is money! That's what I always say!\nAnd once time goes by, there's no getting it\nback. So you have to be careful with it!
147	Don't worry, we don't need\nmuch of your precious time!\nOpen up the {[0001|1a00]}{color[0400]}Timer Nodon{color[ffff]}{[0001|ffff]}'s settings.
148	Set the {[0001|1a00]}Output after How Many\nSeconds?{[0001|ffff]} value to {[0001|1a00]}{color[0400]}6.00{color[ffff]}{[0001|ffff]}.
149	OK!\nClose the settings screen.
151	All righty!\nConnect the {[0001|1a00]}{color[0400]}Touch-Sensor Nodon\n{color[ffff]}{[0001|ffff]}to the {[0001|1a00]}{color[0400]}Timer Nodon{color[ffff]}{[0001|ffff]}.
152	Then connect the {[0001|1a00]}{color[0400]}Timer Nodon\n{color[ffff]}{[0001|ffff]}to the {[0001|1a00]}{color[0400]}Retry Nodon{color[ffff]}{[0001|ffff]}.
153	Our {[0001|1a00]}{color[0400]}setup to trigger an automatic\nretry after hitting the goal{color[ffff]}{[0001|ffff]} is complete.
154	OK!\nLet's check it out on the game screen!
157	Pilot the UFO to the goal.
157-01	Wait for it...
158	And there's the {[0001|1a00]}{color[0400]}retry{color[ffff]}{[0001|ffff]}!
159	And with that, our whole \n{[0001|1a00]}{color[0400]}goal setup{color[ffff]}{[0001|ffff]} is complete!
160	To the program screen!
161	And...get ready...
162	Step 8 is complete!
163	Yeah! Woop woop!
164	Yeah! Not too bad!
165	Your words...were like lines of\npoetry inscribed on the wind...
166	Meep... I'm happy for you.
167	In this step, we created a goal\n{[0001|1a00]}{color[0400]}setup{color[ffff]}{[0001|ffff]} and an {[0001|1a00]}{color[0400]}ending sequence{color[ffff]}{[0001|ffff]}.
169	Only two steps left to go...\nIt's flying by like a comet!
170	In the next step, we'll add something\nthat no blasting game can be complete\nwithout. Namely, a {[0001|1a00]}{color[0400]}scoring system{color[ffff]}{[0001|ffff]}!
172	See you there!
Lesson_Shooting_08.msbt
000	{[c903]}{[0201]}!\nJust the person I was hoping to see!
001	Last time, we made\na {[0001|1a00]}{color[0400]}goal setup{color[ffff]}{[0001|ffff]}.
002	Some would say that's enough\nand our game is complete.
003	But, since we're making a\nspace game, we ought to\naim for the stars!
004	Let's challenge ourselves and the\nplayer by making a {[0001|1a00]}{color[0400]}scoring setup{color[ffff]}{[0001|ffff]}!
005	And, to top it off...
006	if the player manages to blast all of\nthe aliens, let's have the game display\n"{[0001|1a00]}{color[0400]}Perfect!{color[ffff]}{[0001|ffff]}" in honor of their skill.
008	To the program screen!
009	Let's take care of the\n{[0001|1a00]}{color[0400]}scoring setup{color[ffff]}{[0001|ffff]} first.
010	To do that, we'll have to {[0001|1a00]}{color[0400]}count the\nnumber of defeated aliens{color[ffff]}{[0001|ffff]}, and then\n{[0001|1a00]}{color[0400]}display it on the screen{color[ffff]}{[0001|ffff]}.
011	First, go to {[0001|1a00]}Input {[0001|0400]}{[0001|1a00]} State Change\n{[0001|0400]}{[0001|1a00]} Object Break{[0001|ffff]} to call up an\n{[0001|1a00]}{color[0400]}Object-Break Nodon{color[ffff]}{[0001|ffff]}.
012	Oh hey, hon! You want me to\nkeep track of all those nasty\naliens you blast? I gotcha!
013	You sure like to smash\nstuff up, don'tcha, dear?
015	Open up the {[0001|1a00]}{color[0400]}Object-Break Nodon{color[ffff]}{[0001|ffff]}'s\nsettings screen.
016	Now open up the {[0001|1a00]}{color[0400]}Check What?{color[ffff]}{[0001|ffff]} menu.
017	{[0001|1a00]}{color[0400]}Enable Alien{color[ffff]}{[0001|ffff]} only.
018	Close this screen.
019	And close the settings screen.
021	Moving on, go to {[0001|1a00]}Middle {[0001|0400]}{[0001|1a00]} Flag/Counter/Random\n{[0001|0400]}{[0001|1a00]} Counter{[0001|ffff]}, and call up a {[0001|1a00]}{color[0400]}Counter Nodon{color[ffff]}{[0001|ffff]}.
023	Now, connect the {[0001|1a00]}{color[0400]}Object-Break Nodon\n{color[ffff]}{[0001|ffff]}to the {[0001|1a00]}{color[0400]}Counter Nodon{color[ffff]}{[0001|ffff]}'s {[0001|1a00]}{color[0400]}count up port{color[ffff]}{[0001|ffff]}.
024	I'll holler {[0001|1a00]}{color[0400]}when one of\nthose aliens break{color[ffff]}{[0001|ffff]}, hon!
025	I WILL COUNT WHAT OBJECT-BREAK NODON\nSENDS TO ME. YES.
026	Lastly, go to {[0001|1a00]}Objects {[0001|0400]}{[0001|1a00]} Special Objects\n{[0001|0400]}{[0001|1a00]} Number Object{[0001|ffff]}, and call up a\n{[0001|1a00]}{color[0400]}Number-Object Nodon{color[ffff]}{[0001|ffff]}.
027	I'll display any number\nthat you give me!
028	Open up the settings for the\n{[0001|1a00]}{color[0400]}Number-Object Nodon{color[ffff]}{[0001|ffff]} please.
029	Under {[0001|1a00]}Properties{[0001|ffff]},\n{[0001|1a00]}{color[0400]}enable Visible{color[ffff]}{[0001|ffff]} only.
030	Now, open up the {[0001|1a00]}{color[0400]}Color{color[ffff]}{[0001|ffff]} menu.
031	Let's make it {[0001|1a00]}{color[0400]}black{color[ffff]}{[0001|ffff]}.
032	And for the {[0001|1a00]}{color[0400]}Text Color{color[ffff]}{[0001|ffff]}...
033	how about {[0001|1a00]}{color[0400]}white{color[ffff]}{[0001|ffff]}?
036	OK!
037	Connect the {[0001|1a00]}{color[0400]}Counter Nodon\n{color[ffff]}{[0001|ffff]}to the {[0001|1a00]}{color[0400]}Number-Object Nodon{color[ffff]}{[0001|ffff]}.
038	Very well! I'll {[0001|1a00]}{color[0400]}display the number of\naliens that you defeat{color[ffff]}{[0001|ffff]}. Easily done!
041	OK! It's time we checked that\nout on the game screen I think...\nOh! Hold on a second!
042	Before we go to the game screen...
043	if we haven't blasted any aliens\nyet, {[0001|1a00]}{color[0400]}the score should be zero{color[ffff]}{[0001|ffff]}...
044	{[0001|1a00]}{color[0400]}Select{color[ffff]}{[0001|ffff]} the {[0001|1a00]}{color[0400]}Game-Screen Nodon{color[ffff]}{[0001|ffff]}.
045	So we can blast the enemies,\nlet's {[0001|1a00]}{color[0400]}shift to the place where\nthe enemies are{color[ffff]}{[0001|ffff]}.
046	{[0001|1a00]}{color[0400]}Select {color[ffff]}{[0001|ffff]}the {[0001|1a00]}{color[0400]}UFO Nodon{color[ffff]}{[0001|ffff]}.
047	And {[0001|1a00]}{color[0400]}move{color[ffff]}{[0001|ffff]} it over\nto the blue frame.
048	Now we can take a look\non the game screen.
049	Now head for the goal,\nblasting enemies as you go!
050	Ah! The {[0001|1a00]}{color[0400]}number of defeated enemies{color[ffff]}{[0001|ffff]}\nis displayed on the screen. Awesome!
051	Hmmm... But it's just a number...\nWith no other text, it won't be super clear to the\nplayer {[0001|1a00]}{color[0400]}what the number represents{color[ffff]}{[0001|ffff]}, right?
052	How about we add an\nexplanation with text?
053	Just something simple like "{[0001|1a00]}{color[0400]}Score{color[ffff]}{[0001|ffff]}"\nwould do it. So to help us with that...
054	{[0001|1a00]}{color[0400]}copy{color[ffff]}{[0001|ffff]} the {[0001|1a00]}{color[0400]}Text-Object Nodon{color[ffff]}{[0001|ffff]}!
058	Now make it a little bit smaller\nand plonk it down next to the\n{[0001|1a00]}{color[0400]}Number-Object Nodon{color[ffff]}{[0001|ffff]}.
062	Now open up the\n{[0001|1a00]}{color[0400]}Text-Object Nodon{color[ffff]}{[0001|ffff]}'s\nsettings screen.
063	Press Edit, then\nenter "{[0001|1a00]}{color[0400]}Score{color[ffff]}{[0001|ffff]}".
064	Did you enter "{[0001|1a00]}{color[0400]}Score{color[ffff]}{[0001|ffff]}"?
065	Yes
066	No
067	Enter "{[0001|1a00]}{color[0400]}Score{color[ffff]}{[0001|ffff]}".
069	Under {[0001|1a00]}Position{[0001|ffff]}, set {[0001|1a00]}Z{[0001|ffff]} to {[0001|1a00]}{color[0400]}0.00m{color[ffff]}{[0001|ffff]}.
070	Awesome!\nNow close the settings screen.
071	All righty!\nLet's check it out!
072	Now aim for the goal,\nblasting aliens along the way!
074	Ah! Much better! You can tell right away\nthat the number is the {[0001|1a00]}{color[0400]}score{color[ffff]}{[0001|ffff]} now.
075	But...
077	Before you get to the goal,\n{[0001|1a00]}{color[0400]}the score was completely visible{color[ffff]}{[0001|ffff]}...
078	Why don't we change it up so that\n{[0001|1a00]}{color[0400]}the score is only revealed after\nreaching the goal{color[ffff]}{[0001|ffff]}?
079	To the program screen!
081	First, let's make it so that the score\nisn't visible on the game screen.
083	Put the {[0001|1a00]}{color[0400]}Text-Object Nodon\n{color[ffff]}{[0001|ffff]}outside of the game screen.
084	And put the {[0001|1a00]}{color[0400]}Number-Object Nodon{color[ffff]}{[0001|ffff]} next to it.
084-01	OK... Now the score\nshould be hidden.
084-02	Next, let's have the score {[0001|1a00]}{color[0400]}teleport\n{color[ffff]}{[0001|ffff]}into the center of the screen when\nwe reach the goal!
086	OK... So we'll need to teleport\nboth the {[0001|1a00]}{color[0400]}number object{color[ffff]}{[0001|ffff]} and the\n{[0001|1a00]}{color[0400]}text object {color[ffff]}{[0001|ffff]}at the same time.
088	To help with that, let's {[0001|1a00]}{color[0400]}connect\n{color[ffff]}{[0001|ffff]}the {[0001|1a00]}{color[0400]}Number-Object Nodon{color[ffff]}{[0001|ffff]} and\nthe {[0001|1a00]}{color[0400]}Text-Object Nodon{color[ffff]}{[0001|ffff]}.
090	Open up the {[0001|1a00]}{color[0400]}Number-Object Nodon{color[ffff]}{[0001|ffff]}'s\nsettings screen.
091	And open up the\n{[0001|1a00]}{color[0400]}Connection Point{color[ffff]}{[0001|ffff]} settings.
092	Set {[0001|1a00]}{color[0400]}Own Connection Point{color[ffff]}{[0001|ffff]} to {[0001|1a00]}{color[0400]}X-{color[ffff]}{[0001|ffff]}.
093	Then set {[0001|1a00]}{color[0400]}Target Connection Point {color[ffff]}{[0001|ffff]}to {[0001|1a00]}{color[0400]}X+{color[ffff]}{[0001|ffff]}.
093-01	Now the number object should\nbe stuck to the {[0001|1a00]}{color[0400]}right{color[ffff]}{[0001|ffff]} side of the\ntext object!
094	Close this screen.
095	And close the settings screen.
096	The {[0001|1a00]}{color[0400]}score display{color[ffff]}{[0001|ffff]} is ready for teleporting.\nNow let's handle the {[0001|1a00]}{color[0400]}teleporting{color[ffff]}{[0001|ffff]} part!
097	Go to {[0001|1a00]}Objects {[0001|0400]}{[0001|1a00]} Launch/Destroy/Attract\n{[0001|0400]}{[0001|1a00]} Teleport Object{[0001|ffff]} {[0001|0400]}{[0001|ffff]} {[0001|1a00]}{color[0400]}Teleport Object: Entrance{color[ffff]}{[0001|ffff]},\nthen call up a {[0001|1a00]}{color[0400]}Teleport-Object-Entrance Nodon{color[ffff]}{[0001|ffff]}.
099	Oh! You want to have the scores of your thrilling\nexploits slip deftly in and out of view via\nsubspace, do you? I see.
100	Then I will lend you my warp-shifting powers!
100-01	OK... So place the Teleport-Object-Entrance\nNodon to have it overlap with the Text-Object\nNodon a little.
102	Next, go to {[0001|1a00]}Objects {[0001|0400]}{[0001|1a00]} Launch/Destroy/Attract\n{[0001|0400]}{[0001|1a00]} Teleport Object {[0001|0400]}{[0001|1a00]} Teleport Object: Exit{[0001|ffff]}, then call\nup a {[0001|1a00]}{color[0400]}Teleport-Object-Exit Nodon{color[ffff]}{[0001|ffff]}.
104	I will receive your score with certainty,\nas it slips swiftly through subspace...
108	Open up the settings screen for the\n{[0001|1a00]}{color[0400]}Teleport-Object-Exit Nodon{color[ffff]}{[0001|ffff]}, please.
109	Under {[0001|1a00]}Properties{[0001|ffff]},\n{[0001|1a00]}{color[0400]}disable Visible{color[ffff]}{[0001|ffff]}.
110	Under {[0001|1a00]}Position{[0001|ffff]}, set {[0001|1a00]}Z{[0001|ffff]} to {[0001|1a00]}{color[0400]}1.00m{color[ffff]}{[0001|ffff]}.
111	OK!\nClose the settings!
113	Now, if you could connect the\n{[0001|1a00]}{color[0400]}Touch-Sensor Nodon{color[ffff]}{[0001|ffff]} to the\n{[0001|1a00]}{color[0400]}Teleport-Object-Entrance Nodon{color[ffff]}{[0001|ffff]}...
114	If you get to the goal now, the score\nshould {[0001|1a00]}{color[0400]}teleport{color[ffff]}{[0001|ffff]} right into view.
115	Let's test it out on the game screen!
116	Head for the goal!\nGo for it!
118	You got to the goal, and the\nscore appeared! Great!
119	OK! So the other thing\nwe had planned was...
120	to display "{[0001|1a00]}{color[0400]}Perfect!{color[ffff]}{[0001|ffff]}" if the\nplayer managed to {[0001|1a00]}{color[0400]}defeat\nall aliens{color[ffff]}{[0001|ffff]} on the level.
121	To the program screen!
122	We'll display our perfect score\nmessage the same way we do\nthe score... Using {[0001|1a00]}{color[0400]}teleport{color[ffff]}{[0001|ffff]}!
123	To start, let's {[0001|1a00]}{color[0400]}copy{color[ffff]}{[0001|ffff]} this\n{[0001|1a00]}{color[0400]}Text-Object Nodon{color[ffff]}{[0001|ffff]}.
124	Now make the copied {[0001|1a00]}{color[0400]}Text-Object Nodon{color[ffff]}{[0001|ffff]}\nbigger, and move it down below.
125	Now open its settings screen.
126	Press {[0001|1a00]}Edit{[0001|ffff]}, and then enter\nthe text "{[0001|1a00]}{color[0400]}Perfect!{color[ffff]}{[0001|ffff]}"
127	Did you enter "{[0001|1a00]}{color[0400]}Perfect!{color[ffff]}{[0001|ffff]}"?
128	Yes
129	No
130	Enter "{[0001|1a00]}{color[0400]}Perfect!{color[ffff]}{[0001|ffff]}"
131	Now open up {[0001|1a00]}{color[0400]}Text Color{color[ffff]}{[0001|ffff]}.
132	Let's make it {[0001|1a00]}{color[0400]}yellow {color[ffff]}{[0001|ffff]}so it stands out.
133	All righty!\nClose the settings!
134	Next, we'll need to {[0001|1a00]}{color[0400]}copy{color[ffff]}{[0001|ffff]} the\n{[0001|1a00]}{color[0400]}Teleport-Object-Entrance Nodon{color[ffff]}{[0001|ffff]}.
136	Ah... This time, I will carry words of\ncongratulation through the channels\nof subspace!
138	Place the copied Teleport-Object-Entrance\nNodon so that it overlaps the Text-Object\nNodon a little bit.
139	Now, open the {[0001|1a00]}{color[0400]}Teleport-Object-Entrance Nodon{color[ffff]}{[0001|ffff]}'s\nsettings screen.
140	Set the {[0001|1a00]}Teleport ID{[0001|ffff]} to {[0001|1a00]}{color[0400]}B{color[ffff]}{[0001|ffff]}.
141	Close the settings.
144	Make a copy of this\n{[0001|1a00]}{color[0400]}Teleport-Object-Exit Nodon{color[ffff]}{[0001|ffff]}.
145	Place it above the location\nthat the score appears at.
149	I am connected to {[0001|1a00]}{color[0400]}Entrance B{color[ffff]}{[0001|ffff]}...\nIt will transmit to me...
150	Ah... I see that an {[0001|1a00]}{color[0400]}exit{color[ffff]}{[0001|ffff]} from\nsubspace has been decreed...
151	All righty! Everything is hooked up to\nteleport our perfect score message!
152	Our next task will be to create a setup\nthat {[0001|1a00]}{color[0400]}triggers{color[ffff]}{[0001|ffff]} the warp {[0001|1a00]}{color[0400]}when a perfect\nscore is achieved{color[ffff]}{[0001|ffff]}.
153	Getting a perfect score would\nmean {[0001|1a00]}{color[0400]}defeating every alien{color[ffff]}{[0001|ffff]}...\nThat's {[0001|1a00]}{color[0400]}20 aliens {color[ffff]}{[0001|ffff]}all together.
154	The {[0001|1a00]}{color[0400]}Counter Nodon{color[ffff]}{[0001|ffff]} keeps track\nof the {[0001|1a00]}{color[0400]}number of defeated aliens{color[ffff]}{[0001|ffff]}.
155	I DO THE COUNTING. YES.
156	{[0001|1a00]}{color[0400]}When the value of the Counter Nodon\nhits 20{color[ffff]}{[0001|ffff]}, that's when we want to {[0001|1a00]}{color[0400]}teleport\nthe object{color[ffff]}{[0001|ffff]}, so...
157	go to {[0001|1a00]}Middle {[0001|0400]}{[0001|1a00]} Comparison {[0001|0400]}{[0001|1a00]} ={[0001|ffff]},\nthen call up a {[0001|1a00]}{color[0400]}Comparison Nodon{color[ffff]}{[0001|ffff]}.
159	Oh... Have you defeated 20 aliens yet?\nHave you?
160	Go to {[0001|1a00]}Input {[0001|0400]}{[0001|1a00]} Constant{[0001|ffff]}, then\ncall up a {[0001|1a00]}{color[0400]}Constant Nodon{color[ffff]}{[0001|ffff]}.
162	Now open up the Constant Nodon's\nsettings screen.
163	Set {[0001|1a00]}Output Value{[0001|ffff]} to {[0001|1a00]}{color[0400]}20.00{color[ffff]}{[0001|ffff]}, since\nwe want to check if 20 aliens have\nbeen defeated or not.
164	All righty!
165	{[0001|1a00]}{color[0400]}20.00{color[ffff]}{[0001|ffff]}...\nNow and forever...\n{[0001|1a00]}{color[0400]}20.00{color[ffff]}{[0001|ffff]}...
166	Connect the {[0001|1a00]}{color[0400]}Counter Nodon{color[ffff]}{[0001|ffff]} to the\n{[0001|1a00]}{color[0400]}Comparison Nodon{color[ffff]}{[0001|ffff]}'s {[0001|1a00]}{color[0400]}input 1 port{color[ffff]}{[0001|ffff]}.
167	Then, connect the {[0001|1a00]}{color[0400]}Constant Nodon\n{color[ffff]}{[0001|ffff]}to the {[0001|1a00]}{color[0400]}Comparison Nodon{color[ffff]}{[0001|ffff]}'s {[0001|1a00]}{color[0400]}input 2 port{color[ffff]}{[0001|ffff]}.
170	Now that all that's connected up, the Comparison\nNodon will output a signal as soon as {[0001|1a00]}{color[0400]}20 aliens\nhave been defeated{color[ffff]}{[0001|ffff]}. That's all of the aliens!
171	All that remains now is to connect\nthe {[0001|1a00]}{color[0400]}Comparison Nodon{color[ffff]}{[0001|ffff]} to the\n{[0001|1a00]}{color[0400]}Teleport-Object-Entrance Nodon{color[ffff]}{[0001|ffff]}.
173	Ah... Hang on a sec.\nActually, we have a problem.
174	At the moment, the perfect score\nmessage will be displayed {[0001|1a00]}{color[0400]}as soon\nas 20 aliens have been defeated{color[ffff]}{[0001|ffff]}.
175	But what we really want is for the perfect\nscore message to display along with the\nscore, {[0001|1a00]}{color[0400]}when the player hits the goal{color[ffff]}{[0001|ffff]}.
176	In other words, when two conditions\nhave been satisfied: {[0001|1a00]}{color[0400]}defeating 20 aliens{color[ffff]}{[0001|ffff]}\nand {[0001|1a00]}{color[0400]}getting the UFO to the goal{color[ffff]}{[0001|ffff]}.
177	This brings us to our next task. Making a\nsetup to trigger the message {[0001|1a00]}{color[0400]}when both\nconditions have been met{color[ffff]}{[0001|ffff]}.
179	And I know just the Nodon for a\nsetup like that... It's the {[0001|1a00]}{color[0400]}AND Nodon{color[ffff]}{[0001|ffff]}!
180	Go to {[0001|1a00]}{color[0400]}Middle{color[ffff]}{[0001|ffff]}.
181	Then {[0001|1a00]}{color[0400]}Logic{color[ffff]}{[0001|ffff]}.
182	Then call up an {[0001|1a00]}{color[0400]}AND Nodon{color[ffff]}{[0001|ffff]},\nfrom {[0001|1a00]}{color[0400]}AND{color[ffff]}{[0001|ffff]}.
183	Left! Right! Left! Right!\nAND Nodon, reporting for duty!
184	You know the drill! If the input isn't present\nand correct in {[0001|1a00]}{color[0400]}both my ports{color[ffff]}{[0001|ffff]}, I'll simply\nwithhold my signal!
185	Put another way, if the {[0001|1a00]}{color[0400]}AND Nodon\n{color[ffff]}{[0001|ffff]}gets a signal at {[0001|1a00]}{color[0400]}both{color[ffff]}{[0001|ffff]} of its input ports,\nit will {[0001|1a00]}{color[0400]}send a signal{color[ffff]}{[0001|ffff]} from its output port.
188	Connect the {[0001|1a00]}{color[0400]}Comparison Nodon\n{color[ffff]}{[0001|ffff]}to the {[0001|1a00]}{color[0400]}AND Nodon{color[ffff]}{[0001|ffff]}'s {[0001|1a00]}{color[0400]}input 2 port{color[ffff]}{[0001|ffff]}.
189	First condition! {[0001|1a00]}{color[0400]}Blast 20 aliens{color[ffff]}{[0001|ffff]}!
191	Now, just connect the {[0001|1a00]}{color[0400]}Touch-Sensor Nodon\n{color[ffff]}{[0001|ffff]}to the {[0001|1a00]}{color[0400]}AND Nodon{color[ffff]}{[0001|ffff]}'s {[0001|1a00]}{color[0400]}input 1 port{color[ffff]}{[0001|ffff]}.
192	Second condition! {[0001|1a00]}{color[0400]}Reaching the goal{color[ffff]}{[0001|ffff]}!\nAt ease!
193	Finally, connect the {[0001|1a00]}{color[0400]}AND Nodon{color[ffff]}{[0001|ffff]} to\nthe {[0001|1a00]}{color[0400]}Teleport-Object-Entrance Nodon{color[ffff]}{[0001|ffff]}.
194	And that's pretty much it!\nThanks to all that, if we {[0001|1a00]}{color[0400]}defeat\n20 aliens {color[ffff]}{[0001|ffff]}and {[0001|1a00]}{color[0400]}reach the goal{color[ffff]}{[0001|ffff]}...
194-01	the {[0001|1a00]}{color[0400]}perfect score message\nwill be displayed{color[ffff]}{[0001|ffff]}!
195	All righty!\nTime for us to go and check\nit out on the game screen!
196	But...wait a minute. Don't you think\ndestroying 20 aliens is going to be a\nbit difficult just for the sake of a test flight?
199	Why don't we {[0001|1a00]}{color[0400]}relax the conditions\n{color[ffff]}{[0001|ffff]}a bit, just while we're testing it out.
201	Open up the {[0001|1a00]}{color[0400]}Constant Nodon{color[ffff]}{[0001|ffff]}'s\nsettings screen.
202	Set the {[0001|1a00]}Output Value{[0001|ffff]} to {[0001|1a00]}{color[0400]}3.00{color[ffff]}{[0001|ffff]}.
202-01	Now, since we've changed that value, we'll\nonly need to defeat {[0001|1a00]}{color[0400]}three aliens{color[ffff]}{[0001|ffff]} to trigger\nthe perfect score message.
203	Now close this screen.
205	OK!\nNow we're ready to check our\nperfect score message!
206	Defeat {[0001|1a00]}{color[0400]}exactly three aliens{color[ffff]}{[0001|ffff]}, and\nget to the goal. That'll be enough\nto {[0001|1a00]}{color[0400]}display the message{color[ffff]}{[0001|ffff]}.
207	There's the message!
208	You need to defeat {[0001|1a00]}{color[0400]}exactly three aliens{color[ffff]}{[0001|ffff]}!\nTry again!
209	Ah, no worries. Try again!\nDefeat {[0001|1a00]}{color[0400]}exactly three aliens{color[ffff]}{[0001|ffff]} to display\nthe {[0001|1a00]}{color[0400]}perfect score message{color[ffff]}{[0001|ffff]}!
210	OK! That's working like it should.\nLet's put it back how it was before.
213	Open up the {[0001|1a00]}{color[0400]}Constant Nodon{color[ffff]}{[0001|ffff]}'s\nsettings screen.
214	Set {[0001|1a00]}Output Value{[0001|ffff]} back to {[0001|1a00]}{color[0400]}20.00{color[ffff]}{[0001|ffff]}.
215	OK!\nClose the settings screen.
217	While we're at it, let's return the\ngame screen and UFO to the\nlevel's starting position.
218	Select the {[0001|1a00]}{color[0400]}Game-Screen Nodon{color[ffff]}{[0001|ffff]}.
219	Then {[0001|1a00]}{color[0400]}move{color[ffff]}{[0001|ffff]} it over to the\ngame's starting position.
221	Now {[0001|1a00]}{color[0400]}select{color[ffff]}{[0001|ffff]} the {[0001|1a00]}{color[0400]}UFO Nodon{color[ffff]}{[0001|ffff]}.
222	And put that in the\n{[0001|1a00]}{color[0400]}starting position{color[ffff]}{[0001|ffff]} too.
223	We'll be able to play the game\nfrom the very beginning now.
224	All righty!\nLet's take Alien Blaster\nout for its first run!
226	Maybe it's difficult, but try your\nbest to get the perfect score!
229	Awesome!
231	{[c903]}{[0201]}, wow!\nYour game-playing is as good\nas your game building!
232	Oh, never mind.\nHave another try for\na {[0001|1a00]}{color[0400]}perfect{color[ffff]}{[0001|ffff]} score!
233	Ah, no worries.\nIt's pretty tricky...
235	OK! To the program screen!
267	All righty! Time for me to say...
268	Step 9 is complete!
269	I'LL COUNT UP ANOTHER SUCCESS!
270	Good work! Woo-hoo!
271	You're even better than before!
272	Perfect!
273	In this step, we took care\nof {[0001|1a00]}{color[0400]}displaying the score{color[ffff]}{[0001|ffff]}.
274	And we made use of the {[0001|1a00]}{color[0400]}AND Nodon\n{color[ffff]}{[0001|ffff]}while displaying a {[0001|1a00]}{color[0400]}perfect score message{color[ffff]}{[0001|ffff]}.
275	The next step is the final one!
276	All that remains is to add\na few finishing touches.
277	We just need you to breathe a little bit of that\n{[0201]} inspiration into it.
278	And we'll leave it there for now.\nSee you at the next step!
Lesson_Shooting_09.msbt
000	{[c903]}{[0201]}!\nWelcome back!
001	And here we are, at the\nfinal step of Alien Blaster.
002	All that remains now is to add a\nfew finishing touches to our game.
003	In this step, we're going to modify the\nUFO with a {[0001|1a00]}{color[0400]}picture{color[ffff]}{[0001|ffff]}, drawn by a gifted artist\nby the name of...{[0201]}!
004	All righty! Let's embark\non our final step!
005	You're going to be {[0001|1a00]}{color[0400]}drawing a picture{color[ffff]}{[0001|ffff]}.\nCall a {[0001|1a00]}{color[0400]}Texture Nodon{color[ffff]}{[0001|ffff]} to help us with that.
007	Go to {[0001|1a00]}{color[0400]}Objects{color[ffff]}{[0001|ffff]}.
008	Then {[0001|1a00]}{color[0400]}Special Objects{color[ffff]}{[0001|ffff]}.
009	And call up a {[0001|1a00]}{color[0400]}Texture Nodon\n{color[ffff]}{[0001|ffff]}from {[0001|1a00]}{color[0400]}Texture{color[ffff]}{[0001|ffff]}.
011	{[c903]}{[0201]}!\nHello!
012	The picture you create will be truly\nunique and original! The only one like it!
014	Take whatever it is that you're seeing\nin your mind's eye, and make it manifest!
017	We'll be taking {[0001|1a00]}{color[0400]}the picture that you\ncreate{color[ffff]}{[0001|ffff]} and {[0001|1a00]}{color[0400]}pasting it onto the UFO{color[ffff]}{[0001|ffff]}.
018	So if you could {[0001|1a00]}{color[0400]}connect{color[ffff]}{[0001|ffff]} the\n{[0001|1a00]}{color[0400]}UFO Nodon{color[ffff]}{[0001|ffff]} to the {[0001|1a00]}{color[0400]}Texture Nodon{color[ffff]}{[0001|ffff]}...
019	Awesome!
020	Now, open up the settings screen\nfor the {[0001|1a00]}{color[0400]}Texture Nodon{color[ffff]}{[0001|ffff]}.
021	Next, open {[0001|1a00]}Texture Face{[0001|ffff]}.
022	This setting will determine {[0001|1a00]}{color[0400]}which of\nthe target object's faces will have\nthe image pasted on it{color[ffff]}{[0001|ffff]}.
023	{[0001|1a00]}{color[0400]}Enable X Center{color[ffff]}{[0001|ffff]} only.
024	Now close this screen.
024-01	All righty! Let's try\ndrawing something!
024-02	Make the {[0001|1a00]}{color[0400]}pen's color{color[ffff]}{[0001|ffff]} yellow here.
024-03	Then try drawing\nsomething in this area.
027	It can be anything you want... Maybe a {[0001|1a00]}{color[0400]}star\n{color[ffff]}{[0001|ffff]}or something else similarly spacey?
028	When you're done, close\nthe settings screen.
029	OK!\nTo the game screen!
030	Oh! The UFO has transformed into\nthe picture that you just drew!
031	Now you know how to use {[0001|1a00]}{color[0400]}Texture Nodon\n{color[ffff]}{[0001|ffff]}to get images that you draw yourself out\nthere on the game screen.
051	Moving on, why don't we add some\n{[0001|1a00]}{color[0400]}background music{color[ffff]}{[0001|ffff]} to our game?
052	Nothing like a little music\nto set the atmosphere!
053	Go to {[0001|1a00]}Output {[0001|0400]}{[0001|1a00]} Play BGM{[0001|ffff]}, then call\nup a {[0001|1a00]}{color[0400]}Background-Music Nodon{color[ffff]}{[0001|ffff]}.
055	Yeah, baby!\nRippin' beats, settin' the pace,\nBlastin' aliens in outer space!
056	Blast 'em all to be the best,\nand show 'em all you passed the test!
058	Oh yeah!\nGo to {[0001|1a00]}Input {[0001|0400]}{[0001|1a00]} Constant{[0001|ffff]}, then\ncall up a {[0001|1a00]}{color[0400]}Constant Nodon{color[ffff]}{[0001|ffff]}.
061	Connect the {[0001|1a00]}{color[0400]}Constant Nodon{color[ffff]}{[0001|ffff]} to the\n{[0001|1a00]}{color[0400]}Background-Music Nodon{color[ffff]}{[0001|ffff]}'s {[0001|1a00]}{color[0400]}play port{color[ffff]}{[0001|ffff]}.
063	OK! Now if you could open up\nthe {[0001|1a00]}{color[0400]}Background-Music Nodon{color[ffff]}{[0001|ffff]}'s\nsettings screen.
064	Open up the {[0001|1a00]}{color[0400]}Theme{color[ffff]}{[0001|ffff]} menu.
065	Set the {[0001|1a00]}{color[0400]}Theme{color[ffff]}{[0001|ffff]} to {[0001|1a00]}{color[0400]}Valor{color[ffff]}{[0001|ffff]}.
066	Ah... It's just the music for\ndaredevils, don't you think?
067	Now close the settings.
068	Let's take a look at the game screen!
069	Oh!\nThere's the background music!
070	Yes! Don't you feel ready to stand\nagainst whatever foe or menace\ncomes your way?
071	I know I am!
072	OK! Our settings are complete.
073	Let's go back to the program screen.
074	All righty...\nTime for something different.
075	Time to change it up\n{[0201]}-style!\nSandbox time!
076	We've added the {[0001|1a00]}{color[0400]}Background-Music Nodon\n{color[ffff]}{[0001|ffff]}and the {[0001|1a00]}{color[0400]}Texture Nodon{color[ffff]}{[0001|ffff]} already.
078	How about you make a few other cosmetic\nchanges as well? You could change the\n{[0001|1a00]}{color[0400]}color{color[ffff]}{[0001|ffff]} of the {[0001|1a00]}{color[0400]}cannon{color[ffff]}{[0001|ffff]}, or the {[0001|1a00]}{color[0400]}projectiles{color[ffff]}{[0001|ffff]}, maybe?
080	I'm talking about a few little distinctive\naccents to let everyone know Alien Blaster\nis a {[0001|1900]}{[0201]} production!{[0001|ffff]}
081	When you're satisfied, let me\nknow by pressing {[0001|1a00]}{color[0400]}Done{color[ffff]}{[0001|ffff]}.
082	OK! Free programming is about to start!\nReady, steady, go!
086	Ah! Finally, Alien Blaster is complete!
088	OK! Let's go to the game screen\nand behold it in all its glory!
089	Now play the newly completed\nAlien Blaster all the way to the {[0001|1a00]}{color[0400]}goal{color[ffff]}{[0001|ffff]}!
090	Ah, Alien Blaster, complete for the first time...\nFinalized with details that just scream out,\n"{[c903]}{[0201]} made me!"
091	Yes, I even get a sense of your individuality\nfrom the very parts that you chose not to\nchange... Funny how that works.
092	So, at last...I can declare...
093	Alien Blaster is complete!
098	All righty!\nBack to the program screen!
101	Whoa, dude... You're done...\nHeavy, man...
102	I can't not say that this\nisn't an amazing game...NOT!
103	Oh! I can see it was a\nlabor of love... Tee-hee!
104	Yes... It's overflowing with your\nunique charm! One of a kind!
105	It's an achievement of cosmic\nproportions, {[0201]}!
106	This one makes me want\nto break into a quickstep!
107	Meep!\nAmazing!
108	Skill AND determination, present\nand correct! Woo-hoo!
116	Alien Blaster is complete!
117	There were a lot of steps in this game.\nWe've walked a long road together here.
118	But you proved that you can see\nthings through and battle past\nany problem, {[0201]}!
122	All righty! It's time for Alien Blaster to\ntake a place of pride in the games list\nat long last!
123	Let's go back to the menu!
LogiConTpb_Main.msbt
TrimMark	…
NodeLabel_Constant	Constant
NodeLabel_ButtonPressed	Button
NodeLabel_StickTilted	Stick
NodeLabel_IsTouch	If Touched
NodeLabel_PlzTouchPosition	Touch Position
NodeLabel_IntegratedSurfaceUpward	If Face Up
NodeLabel_IntegratedAxisAngle	Tilt
NodeLabel_IntegratedSwinged	Shake
NodeLabel_IntegratedRotationSpeed	Rotation Speed
NodeLabel_OnStart	On Start
NodeLabel_PlzObjBreakCount	Object Break
NodeLabel_FoundIrMarker	IR Motion Camera
NodeLabel_Calculation	Calculator
NodeLabel_Comparison	Comparison
NodeLabel_And	AND
NodeLabel_Not	NOT
NodeLabel_Atan	Position → Angle
NodeLabel_Trigonometric	Angle → Position
NodeLabel_AngleDistance	Angle Difference
NodeLabel_Random	Random
NodeLabel_Mapping	Map
NodeLabel_Quantization	Digitize
NodeLabel_Trigger	Trigger from 0
NodeLabel_SquareRoot	Square Root
NodeLabel_PlzAbsoluteValue	Absolute Value
NodeLabel_PlzNegation	+ - Inversion
NodeLabel_Flag	Flag
NodeLabel_TpbCounter	Counter
NodeLabel_WireWarpIn	Wormhole Entrance
NodeLabel_WireWarpOut	Wormhole Exit
NodeLabel_Comment	Comment
NodeLabel_Timer	Timer
NodeLabel_Spoit	Bull's-Eye
NodeLabel_PlzIntegratedEffect	Effect
NodeLabel_TpbPlaySound	Play Sound
NodeLabel_TpbPlayBgm	Background Music
NodeLabel_Vibrate	Vibration
NodeLabel_PlzGravity	Reduce Gravity
NodeLabel_PlzPlaySpeed	Slow Time
NodeLabel_PlzReset	Retry
NodeLabel_PlzExit	End Game
NodeLabel_PlzChangeFile	Swap Game
NodeLabel_Gauge	Marker Display
NodeLabel_Move2d	2D Marker Display
NodeLabel_AlwaysOn	Continuous Marker Display
NodeLabel_EmitIrLed	IR Light
NodeLabel_PlzHead	Head
NodeLabel_PlzHand	Hand
NodeLabel_TpbPuzzleClear	Puzzle Clear
NodeLabel_PlzHuman	Person
NodeLabel_PlzCar	Car
NodeLabel_PlzUfo	UFO
NodeLabel_PlzRigid	Object
NodeLabel_PlzFancyRigid	Fancy Object
NodeLabel_PlzCommentRigid	Text Object
NodeLabel_PlzScoreRigid	Number Object
NodeLabel_PlzTexture	Texture
NodeLabel_PlzJointSlider	Slide Connector
NodeLabel_PlzJointFreeSlider	Free Slide Connector
NodeLabel_PlzJointHinge	Hinge Connector
NodeLabel_PlzRope	String Connector
NodeLabel_PlzTouchSensor	Touch Sensor
NodeLabel_PlzBrokenSensor	Destroyed Sensor
NodeLabel_PlzBreakSensor	Destroying Sensor
NodeLabel_PlzGrabSensor	Grabbed Sensor
NodeLabel_PlzPositionSensor	Location Sensor
NodeLabel_PlzSpeedSensor	Speed Sensor
NodeLabel_PlzAccelerationSensor	Acceleration Sensor
NodeLabel_PlzAngleSensor	Angle Sensor
NodeLabel_PlzRotationSensor	Rotation-Speed Sensor
NodeLabel_PlzMoveRigid	Moving Object
NodeLabel_PlzRotateRigid	Rotating Object
NodeLabel_PlzStretchRigid	Extending Object
NodeLabel_PlzPullForce	Attract Object
NodeLabel_PlzGeneratorFew	Launch Object (1)
NodeLabel_PlzGeneratorMiddle	Launch Objects (10)
NodeLabel_PlzGeneratorMany	Launch Objects (100)
NodeLabel_BindCommander	Destroy Object
NodeLabel_PlzObjWarpEnter	Teleport Object Entrance
NodeLabel_PlzObjWarpExit	Teleport Object Exit
NodeLabel_PlzEasyCamera	Game Screen
NodeLabel_PlzTpsCamera	Camera
NodeLabel_PlzCameraPosition	Camera Position
NodeLabel_PlzCameraLookAt	Camera Target
NodeLabel_PlzCameraDirection	Camera Direction
NodeLabel_PlzCameraAngle	Camera Angle
NodeLabel_PlzFieldConfig	World
NodeLabelFull_ConstantNode	Constant Nodon
NodeLabelFull_ButtonPressedNode	Button Nodon
NodeLabelFull_StickTiltedNode	Stick Nodon
NodeLabelFull_IntegratedAxisAngleNode	Tilt Nodon
NodeLabelFull_OnStartNode	On-Start Nodon
NodeLabelFull_PlzObjBreakCountNode	Object-Break Nodon
NodeLabelFull_CalculationNode	Calculator Nodon
NodeLabelFull_ComparisonNode	Comparison Nodon
NodeLabelFull_AndNode	AND Nodon
NodeLabelFull_NotNode	NOT Nodon
NodeLabelFull_MappingNode	Map Nodon
NodeLabelFull_FlagNode	Flag Nodon
NodeLabelFull_TpbCounterNode	Counter Nodon
NodeLabelFull_WireWarpInNode	Wormhole-Entrance\nNodon
NodeLabelFull_WireWarpOutNode	Wormhole-Exit Nodon
NodeLabelFull_CommentNode	Comment Nodon
NodeLabelFull_TimerNode	Timer Nodon
NodeLabelFull_PlzIntegratedEffectNode	Effect Nodon
NodeLabelFull_TpbPlaySoundNode	Play-Sound Nodon
NodeLabelFull_TpbPlayBgmNode	Background-Music\nNodon
NodeLabelFull_PlzGravityNode	Reduce-Gravity Nodon
NodeLabelFull_PlzResetNode	Retry Nodon
NodeLabelFull_PlzHumanNode	Person Nodon
NodeLabelFull_PlzCarNode	Car Nodon
NodeLabelFull_PlzUfoNode	UFO Nodon
NodeLabelFull_PlzRigidNode	Object Nodon
NodeLabelFull_PlzFancyRigidNode	Fancy-Object Nodon
NodeLabelFull_PlzCommentRigidNode	Text-Object Nodon
NodeLabelFull_PlzScoreRigidNode	Number-Object Nodon
NodeLabelFull_PlzTextureNode	Texture Nodon
NodeLabelFull_PlzJointSingleAxisSliderNode	Slide-Connector Nodon
NodeLabelFull_PlzJointSliderNode	Free-Slide-Connector\nNodon
NodeLabelFull_PlzJointHingeNode	Hinge-Connector Nodon
NodeLabelFull_PlzTouchSensorNode	Touch-Sensor Nodon
NodeLabelFull_PlzBrokenSensorNode	Destroyed-Sensor\nNodon
NodeLabelFull_PlzPositionSensorNode	Location-Sensor Nodon
NodeLabelFull_PlzMoveRigidNode	Moving-Object Nodon
NodeLabelFull_PlzRotateRigidNode	Rotating-Object Nodon
NodeLabelFull_PlzGeneratorNode	Launch-Object Nodon
NodeLabelFull_PlzBindCommanderNode	Destroy-Object Nodon
NodeLabelFull_PlzObjWarpEnterNode	Teleport-Object-\nEntrance Nodon
NodeLabelFull_PlzObjWarpExitNode	Teleport-Object-\nExit Nodon
NodeLabelFull_PlzEasyCamera	Game-Screen Nodon
NodeLabelFull_PlzTpsCamera	Camera Nodon
NodeLabelFull_PlzFieldConfigNode	World Nodon
InputMenu	Input
NodeCreatorMenu_Constant	Constant
NodeCreatorMenu_ButtonPressed	Button Press
NodeCreatorMenu_ButtonMask_A	 
NodeCreatorMenu_ButtonMask_B	
NodeCreatorMenu_ButtonMask_X	
NodeCreatorMenu_ButtonMask_Y	
NodeCreatorMenu_ButtonMask_L	
NodeCreatorMenu_ButtonMask_R	
NodeCreatorMenu_ButtonMask_ZL	
NodeCreatorMenu_ButtonMask_ZR	
NodeCreatorMenu_StickTilted	Stick Movement
ControllerSideMenuForStickTilted_L	
ControllerSideMenuForStickTilted_R	
TouchMenu	Touch Screen
NodeCreatorMenu_IsTouch	If Touched
NodeCreatorMenu_PlzTouchPosition	Touch Position
MotionMenu	Motion
NodeCreatorMenu_IntegratedSwinged	Shake
NodeCreatorMenu_IntegratedAxisAngle	Tilt
NodeCreatorMenu_IntegratedSurfaceUpward	If Face Up
NodeCreatorMenu_IntegratedRotationSpeed	Rotation Speed
NodeCreatorMenu_FoundIrMarker	IR Motion Camera
PlzInputMenu	State Change
NodeCreatorMenu_PlzObjBreakCount	Object Break
NodeCreatorMenu_OnStart	On Start
MediumMenu	Middle
CalculationMenu	Calculate (＋－×÷)
NodeCreatorMenu_Calculation_Add	＋
NodeCreatorMenu_Calculation_Sub	－
NodeCreatorMenu_Calculation_Mul	×
NodeCreatorMenu_Calculation_Div	÷
ConversionMenu	Convert 
NodeCreatorMenu_Mapping	Map
NodeCreatorMenu_Quantization	Digitize
NodeCreatorMenu_SquareRoot	Square Root (√)
NodeCreatorMenu_PlzAbsoluteValue	Absolute Value\n(Turn － to ＋)
NodeCreatorMenu_PlzNegation	+ - Inversion
NodeCreatorMenu_Trigger	Trigger from 0
AngleMenu	Angle Calculation
NodeCreatorMenu_Atan	Position → Angle
NodeCreatorMenu_Trigonometric	Angle → Position
NodeCreatorMenu_AngleDistance	Angle Difference
LogicMenu	Logic 
NodeCreatorMenu_And	AND
NodeCreatorMenu_Not	NOT
CounterMenu	Flag/Counter/Random
NodeCreatorMenu_Flag	Flag
NodeCreatorMenu_TpbCounter	Counter
NodeCreatorMenu_Random	Random
NodeCreatorMenu_Timer	Timer
NodeCreatorMenu_Spoit	Bull's-Eye
EditMenu	Program Layout 
NodeCreatorMenu_WireWarpIn	Wormhole Entrance
NodeCreatorMenu_WireWarpOut	Wormhole Exit
NodeCreatorMenu_Comment	Comment
OutputMenu	Output
NodeCreatorMenu_PlaySoundScale	Play Sound
PlaySeMenu	Play SFX
PlayInstrumentMenu	Play Instrument
NodeCreatorMenu_TpbPlayBgm	Play BGM
NodeCreatorMenu_Vibrate	Vibrate
PlzWorldMenu	Change World
NodeCreatorMenu_PlzGravity	Reduce Gravity
NodeCreatorMenu_PlzPlaySpeed	Slow Time
SequenceMenu	Retry/End/Swap
NodeCreatorMenu_PlzReset	Retry Game
NodeCreatorMenu_PlzExit	End Game
NodeCreatorMenu_PlzChangeFile	Swap Game
PlzEtcMenu	Other 
DisplayMenu	Marker Display
NodeCreatorMenu_Gauge_Move	Move
NodeCreatorMenu_Gauge_Stretch	Extend
NodeCreatorMenu_Gauge_Line	Line
NodeCreatorMenu_Gauge_Rotate	Rotate
NodeCreatorMenu_Gauge_Pie	Pie Chart
NodeCreatorMenu_Gauge_Alpha	Opacity
NodeCreatorMenu_Gauge_Flash	Flash
NodeCreatorMenu_Move2d	2D Marker Display
NodeCreatorMenu_AlwaysOn	Continuous Marker Display
NodeCreatorMenu_EmitIrLed	Emit IR Light
PlzObjMenu	Objects
PlzCharacterMenu	Characters
NodeCreatorMenu_PlzHuman	Person
NodeCreatorMenu_PlzCar	Car
NodeCreatorMenu_PlzUfo	UFO
PlzGeneralObjMenu	Simple Objects
PlzFancyObjMenu	Fancy Objects
PlzFancyObjPage_00	Rectangular Fancy Objects
PlzFancyObjPage_01	Round Fancy Objects
PlzFancyObjPage_02	Cylindrical Fancy Objects
PlzFancyObjPage_03	Other Fancy Objects
PlzSpecialObjMenu	Special Objects
PlzMoveRigidMenu	Moving Objects
PlzRotateRigidMenu	Rotating Objects
PlzStretchRigidMenu	Extending Objects
PlzEffectMenu	Effects
NodeCreatorMenu_PlzCommentRigid	Text Object
NodeCreatorMenu_PlzScoreRigid	Number Object
NodeCreatorMenu_PlzTexture	Texture
PlzSensorMenu	Sensors
NodeCreatorMenu_PlzTouchSensor	Touch Sensor
NodeCreatorMenu_PlzBrokenSensor	Destroyed Sensor
NodeCreatorMenu_PlzBreakSensor	Destroying Sensor
NodeCreatorMenu_PlzGrabSensor	Grabbed Sensor
NodeCreatorMenu_PlzPositionSensor	Location Sensor
NodeCreatorMenu_PlzSpeedSensor	Speed Sensor
NodeCreatorMenu_PlzAccelerationSensor	Acceleration Sensor
NodeCreatorMenu_PlzAngleSensor	Angle Sensor
NodeCreatorMenu_PlzRotationSensor	Rotation-Speed Sensor
PlzJointMenu	Connections
PlzJointSliderMenu	Slide Connectors
PlzJointSliderXMenu	X Slide
PlzJointSliderYMenu	Y Slide
PlzJointSliderZMenu	Z Slide
NodeCreatorMenu_PlzJointFreeSlider	Free Slide Connector
PlzJointHingeMenu	Hinge Connectors
PlzJointHingeXMenu	X Hinge
PlzJointHingeYMenu	Y Hinge
PlzJointHingeZMenu	Z Hinge
NodeCreatorMenu_PlzRope	String Connector
PlzLiveObjMenu	Launch/Destroy/Attract
PlzGeneratorMenu	Launch Objects
NodeCreatorMenu_PlzGeneratorFew	Launch 1 Object
NodeCreatorMenu_PlzGeneratorMiddle	Launch 10 Objects
NodeCreatorMenu_PlzGeneratorMany	Launch 100 Objects
NodeCreatorMenu_BindCommander	Destroy Object
PlzObjWarpMenu	Teleport Object
NodeCreatorMenu_PlzObjWarpEnter	Teleport Object: Entrance
NodeCreatorMenu_PlzObjWarpExit	Teleport Object: Exit
NodeCreatorMenu_PlzPullForce	Attract Object
NodeCreatorMenu_PlzFieldConfig	World
PlzCameraMenu	Game Screen / Camera
NodeCreatorMenu_PlzEasyCamera	Game Screen
NodeCreatorMenu_PlzTpsCamera	Camera
PlzCameraDetailMenu	Advanced Cameras
NodeCreatorMenu_PlzCameraPosition	Camera Position
NodeCreatorMenu_PlzCameraLookAt	Camera Target
NodeCreatorMenu_PlzCameraDirection	Camera Direction
NodeCreatorMenu_PlzCameraAngle	Camera Angle
PlzPlayerSettingMenu	First Person
NodeCreatorMenu_PlzHead	Head
NodeCreatorMenu_PlzHandRight	Right Hand
NodeCreatorMenu_PlzHandLeft	Left Hand
PortLabel_ConstantNode_01	Constant
PortLabel_ButtonPressedNode_01	If pressed
PortLabel_StickTiltedNode_01	Amount tilted
PortLabel_IsTouchNode_01	If touched
PortLabel_TouchPositionNode_01	X
PortLabel_TouchPositionNode_02	Y
PortLabel_IntegratedSwingedNode_01	Momentum
PortLabel_IntegratedSurfaceUpwardNode_01	Facing up
PortLabel_IntegratedAxisAngleNode_01	Tilt angle
PortLabel_IntegratedAxisAngleNode_02	Y reset
PortLabel_IntegratedRotationSpeedNode_01	Rotation speed
PortLabel_OnStartNode_01	If started
PortLabel_PlzObjBreakCountNode_01	Broken count
PortLabel_FoundIrMarkerNode_01	Captured portions
PortLabel_CalculationNode_01	Input 1
PortLabel_CalculationNode_02	Input 2
PortLabel_CalculationNode_03	Result
PortLabel_ComparisonNode_01	Input 1
PortLabel_ComparisonNode_02	Input 2
PortLabel_ComparisonNode_03	Result
PortLabel_AndNode_01	Input 1
PortLabel_AndNode_02	Input 2
PortLabel_AndNode_03	Output
PortLabel_NotNode_01	Input
PortLabel_NotNode_02	Output
PortLabel_AtanNode_01	Horizontal position
PortLabel_AtanNode_02	Vertical position
PortLabel_AtanNode_03	Angle
PortLabel_TrigonometricNode_01	Angle
PortLabel_TrigonometricNode_02	Horizontal position
PortLabel_TrigonometricNode_03	Vertical position
PortLabel_AngleDistanceNode_01	Angle 1
PortLabel_AngleDistanceNode_02	Angle 2
PortLabel_AngleDistanceNode_03	Difference
PortLabel_IntegerRandomNode_01	?
PortLabel_IntegerRandomNode_02	Random number
PortLabel_IntegerRandomNode_03	Reset
PortLabel_MappingNode_01	Input
PortLabel_MappingNode_02	Output
PortLabel_QuantizationNode_01	Input
PortLabel_QuantizationNode_02	Output
PortLabel_TriggerNode_01	Input
PortLabel_TriggerNode_02	If changed
PortLabel_SquareRootNode_01	Input
PortLabel_SquareRootNode_02	Output
PortLabel_AbsoluteValueNode_01	Input
PortLabel_AbsoluteValueNode_02	Output
PortLabel_NegationNode_01	Input
PortLabel_NegationNode_02	Output
PortLabel_FlagNode_01	On
PortLabel_FlagNode_02	Off
PortLabel_FlagNode_03	Flag is on
PortLabel_TpbCounterNode_01	Count up
PortLabel_TpbCounterNode_02	Count down
PortLabel_TpbCounterNode_03	Reset
PortLabel_TpbCounterNode_04	Count
PortLabel_WireWarpInNode_01	Entrance
PortLabel_WireWarpOutNode_01	Exit
PortLabel_TimerNode_01	Input
PortLabel_TimerNode_02	Output
PortLabel_SpoitNode_01	Marker amount
PortLabel_PlzIntegratedEffectNode_03	Trigger
PortLabel_TpbPlaySoundNode_02	Play
PortLabel_TpbPlaySoundNode_03	Volume
PortLabel_TpbPlaySoundNode_04	Pitch
PortLabel_TpbPlayBgmNode_01	Play
PortLabel_TpbPlayBgmNode_02	Volume
PortLabel_TpbPlayBgmNode_03	Speed
PortLabel_VibrateNode_01	Vibration strength
PortLabel_PlzGravityNode_01	Reduction
PortLabel_PlzPlaySpeedNode_01	Slowdown amount
PortLabel_PlzResetNode_01	Retry
PortLabel_PlzExitNode_01	Exit
PortLabel_PlzChangeFileNode_01	Swap
PortLabel_PlzChangeFileNode_02	Swap from value
PortLabel_GaugeNode_01	Input
PortLabel_Move2dNode_01	X
PortLabel_Move2dNode_02	Y
PortLabel_Move2dNode_03	Result
PortLabel_EmitIrLedNode_01	Light up
PortLabel_PlzHandNode_02	Grab
PortLabel_PlzHandNode_03	 Forward/Backward
PortLabel_TpbPuzzleClearNode_01	Clear
PortLabel_PlzHumanNode_03	Forward/Backward
PortLabel_PlzHumanNode_04	Left/Right
PortLabel_PlzHumanNode_05	Jump
PortLabel_PlzHumanNode_06	Action
PortLabel_PlzCarNode_03	Accelerate
PortLabel_PlzCarNode_04	Steering wheel
PortLabel_PlzCarNode_05	Jump
PortLabel_PlzUfoNode_03	 Forward/Backward
PortLabel_PlzUfoNode_04	 Left/Right
PortLabel_PlzUfoNode_05	 Up/Down
PortLabel_PlzScoreRigidNode_03	Number
PortLabel_PlzTextureNode_02	Visible
PortLabel_PlzJointSingleAxisSliderNode_03	Slide amount
PortLabel_PlzJointSliderNode_03	X
PortLabel_PlzJointSliderNode_04	Y
PortLabel_PlzJointSliderNode_05	Z
PortLabel_PlzJointHingeNode_03	Rotation amount
PortLabel_PlzTouchSensorNode_02	Touching count
PortLabel_PlzBrokenSensorNode_02	If broken
PortLabel_PlzBreakSensorNode_02	Broken count
PortLabel_PlzGrabSensorNode_02	If grabbed
PortLabel_PlzPositionSensorNode_02	X
PortLabel_PlzPositionSensorNode_03	Y
PortLabel_PlzPositionSensorNode_04	Z
PortLabel_PlzSpeedSensorNode_02	X
PortLabel_PlzSpeedSensorNode_03	Y
PortLabel_PlzSpeedSensorNode_04	Z
PortLabel_PlzAccelerationSensorNode_02	X
PortLabel_PlzAccelerationSensorNode_03	Y
PortLabel_PlzAccelerationSensorNode_04	Z
PortLabel_PlzAngleSensorNode_02	X-axis
PortLabel_PlzAngleSensorNode_03	Y-axis
PortLabel_PlzAngleSensorNode_04	Z-axis
PortLabel_PlzRotationSensorNode_02	X-axis
PortLabel_PlzRotationSensorNode_03	Y-axis
PortLabel_PlzRotationSensorNode_04	Z-axis
PortLabel_PlzMoveRigidNode_03	X
PortLabel_PlzMoveRigidNode_04	Y
PortLabel_PlzMoveRigidNode_05	Z
PortLabel_PlzRotateRigidNode_03	X-axis
PortLabel_PlzRotateRigidNode_04	Y-axis
PortLabel_PlzRotateRigidNode_05	Z-axis
PortLabel_PlzStretchRigidNode_02	X
PortLabel_PlzStretchRigidNode_03	Y
PortLabel_PlzStretchRigidNode_04	Z
PortLabel_PlzPullForceNode_02	Force
PortLabel_PlzGeneratorFewNode_02	Launch
PortLabel_PlzGeneratorNode_02	Launch
PortLabel_PlzGeneratorManyNode_02	Launch
PortLabel_PlzBindCommanderNode_02	Destroy
PortLabel_PlzObjWarpEnterNode_02	Teleport
PortLabel_PlzEasyCamera_02	X
PortLabel_PlzEasyCamera_03	Y
PortLabel_PlzEasyCamera_04	Z
PortLabel_PlzTpsCamera_03	 Up/Down
PortLabel_PlzTpsCamera_04	 Horizontal
PortLabel_PlzTpsCamera_05	Reset
PortLabel_PlzCameraPositionNode_03	X
PortLabel_PlzCameraPositionNode_04	Y
PortLabel_PlzCameraPositionNode_05	Z
PortLabel_PlzCameraLookAtNode_03	X
PortLabel_PlzCameraLookAtNode_04	Y
PortLabel_PlzCameraLookAtNode_05	Z
PortLabel_PlzCameraDirectionNode_01	 Up/Down
PortLabel_PlzCameraDirectionNode_02	 Horizontal
WarpIdLabel_A	A
WarpIdLabel_B	B
WarpIdLabel_C	C
WarpIdLabel_D	D
WarpIdLabel_E	E
WarpIdLabel_F	F
WarpIdLabel_G	G
WarpIdLabel_H	H
WarpIdLabel_I	I
WarpIdLabel_J	J
WarpIdLabel_K	K
WarpIdLabel_L	L
WarpIdLabel_M	M
WarpIdLabel_N	N
WarpIdLabel_O	O
WarpIdLabel_P	P
WarpIdLabel_Q	Q
WarpIdLabel_R	R
WarpIdLabel_S	S
WarpIdLabel_T	T
WarpIdLabel_U	U
WarpIdLabel_V	V
WarpIdLabel_W	W
WarpIdLabel_X	X
WarpIdLabel_Y	Y
WarpIdLabel_Z	Z
DigitalAnalogSwitchLabel	Output
DigitalAnalogSwitch_Digital	Digital
DigitalAnalogSwitch_Analog	Analog
TrigHoldSwitchLabel_ButtonPressedNode	Output Timing
TrigHoldSwitch_Trig_ButtonPressedNode	On press
TrigHoldSwitch_Hold_ButtonPressedNode	While pressed
TrigHoldSwitchLabel_IsTouchNode	Output Timing
TrigHoldSwitch_Trig_IsTouchNode	On touch
TrigHoldSwitch_Hold_IsTouchNode	While touched
TrigHoldSwitchLabel_TpbCounterNode	Count Timing
TrigHoldSwitch_Trig_TpbCounterNode	On change from 0
TrigHoldSwitch_Hold_TpbCounterNode	While not 0
TrigHoldSwitchLabel_IntegerRandomNode	Update Timing
TrigHoldSwitch_Trig_IntegerRandomNode	On change from 0
TrigHoldSwitch_Hold_IntegerRandomNode	While not 0
TrigHoldSwitchLabel_PlzIntegratedEffectNode	Effect Timing
TrigHoldSwitch_Trig_PlzIntegratedEffectNode	On change from 0
TrigHoldSwitch_Hold_PlzIntegratedEffectNode	While not 0
TrigHoldSwitchLabel_PlzTouchSensorNode	Output Timing
TrigHoldSwitch_Trig_PlzTouchSensorNode	On touch
TrigHoldSwitch_Hold_PlzTouchSensorNode	While touched
TrigHoldSwitchLabel_PlzGrabSensorNode	Output Timing
TrigHoldSwitch_Trig_PlzGrabSensorNode	On grip
TrigHoldSwitch_Hold_PlzGrabSensorNode	While gripped
SizeSlider	Size
SliderAdjusterDec	◀
SliderAdjusterInc	▶
ThresholdSliderRange	Range
ConstantNumSliderLabel	Output Value
Hint_Constant_00_Subject	Hints
Hint_Constant_00	　・ "Constant" refers to a fixed value.\n　・ If you set the output value to 1.00, it will constantly output that value.
ButtonMask_L_Any	
ButtonMask_R_Any	
ButtonMask_LR_Any	
ButtonMask_A	
ButtonMask_B	
ButtonMask_X	
ButtonMask_Y	
ButtonMask_Up	
ButtonMask_Left	
ButtonMask_Right	
ButtonMask_Down	
ButtonMask_L	
ButtonMask_R	
ButtonMask_ZL	
ButtonMask_ZR	
ButtonMask_LS_Btn	
ButtonMask_RS_Btn	
ButtonMask_L_SL	(L)
ButtonMask_L_SR	(L)
ButtonMask_R_SL	(R)
ButtonMask_R_SR	(R)
Hint_StickTilted_00_Subject	Hint
Hint_StickTilted_00	The degree that the control stick is tilting will\nbe converted into an output based on the value\nof the Nodon's Output and Range settings.
ControllerSide_L	Joy-Con (L)
ControllerSide_R	Joy-Con (R)
ControllerSide_Handheld	{[0001|1100]}{[0001|ffff]}
ControllerSide_Auto	Auto
ControllerStickSide_L	Left Stick
ControllerStickSide_R	Right Stick
AutoMenu	Auto
ConsoleMenu	Console 
ControllerIndex_1	1
ControllerIndex_2	2
ControllerIndex_3	3
ControllerIndex_4	4
Surface_XPlus	Left
Surface_XMinus	Right
Surface_YPlus	Front
Surface_YMinus	Back
Surface_ZPlus	Top
Surface_ZMinus	Bottom
ControllerDirection_Up	Up
ControllerDirection_Down	Down
ControllerDirection_Left	Left
ControllerDirection_Right	Right
ControllerSwingDirectionRadioButtonLabel	Direction of Response
ControllerSwingDirection_Any	Any Direction
ControllerSwingDirection_XPlus	X＋
ControllerSwingDirection_XMinus	X－
ControllerSwingDirection_YPlus	Y＋
ControllerSwingDirection_YMinus	Y－
ControllerSwingDirection_ZPlus	Z＋
ControllerSwingDirection_ZMinus	Z－
Axis_X	{[0001|1900]}X{[0001|ffff]}
Axis_Y	{[0001|1900]}Y{[0001|ffff]}
Axis_Z	{[0001|1900]}Z{[0001|ffff]}
Axis_Any	Any
RotationDirectionRadioButtonLabel	Direction of Response
RotationDirection_Plus	＋
RotationDirection_Minus	－
RotationDirection_Any	＋/－
ControllerDirection_Any	Any
ControllerDirection_LeftRight	Left/Right
ControllerDirectionSwitchLabel	Direction of Response
ControllerDirection_UpDown	Up/Down
ControllerIndex_Any	Auto
ControllerIndex_Handheld	{[0001|1100]}{[0001|ffff]}
ControllerIndexSwitchForIrLabel	Controller Number
ControllerIndexSwitchLabel	Controller Number
Hint_IntegratedAxisAngle_00_Subject	Hint
Hint_IntegratedAxisAngle_00	In Angle of rotation mode, this Nodon will send an output between -180°\nand 180° depending on the angle of the Joy-Con or console.
ControllerSideSwitchLabel	Which Controller?
ControllerSideSwitchWithHandheldAutoLabel	Check What?
ControllerStickSideSwitchLabel	Which Stick?
Hint_ControllerSurface_00_Subject	Hint
Hint_ControllerSurface_00	The more level the controller is, the higher the output.
ControllerSurfaceRadioButtonLabel	Which Side Should Face Up?
Hint_ControllerSwinged_00_Subject	Hint
Hint_ControllerSwinged_00	The faster you swing, the higher the output number.
TouchTargetSwitchLabel	Touch Where to Output?
TouchTarget_Anywhere	Anywhere
TouchTarget_ThisNode	This Nodon
Hint_IsTouch_00_Subject	Hints
Hint_IsTouch_00	・ If you select This Nodon, it will only respond when this Nodon is touched.\n・ Position it within the game screen to make games that respond differently when different areas are touched.
Hint_PlzTouchPosition_00_Subject	Hint
Hint_PlzTouchPosition_00	Screen center: X = 0, Y = 0\nFar left: X = -640 / Far right: X = 640\nScreen bottom: Y = -360 / Screen top: Y = 360
ControllerAxisRadioButtonLabel	Axis of Rotation
ControllerAxisAngleModeSwitchLabel	Mode
ControllerAxisAngleMode_Tilt	Tilt
ControllerAxisAngleMode_AxisAngle	Angle of rotation
Hint_PlzObjBreakCountNode_00_Subject	Hints
Hint_PlzObjBreakCountNode_00	・ When objects that this Nodon is checking for are destroyed anywhere in the world,\nthe Nodon will output the number of destroyed objects destroyed in that moment.\n・ By combining it with a Counter Nodon, you can create setups where the game\nfinishes after a certain number of objects have been destroyed.
Hint_OnStartNode_00_Subject	Hint
Hint_OnStartNode_00	This Nodon sends an output of 1.00 just once, at the moment the game is launched.
DistanceSwitchLabel	Distance to Recognize
IrDistance_Off	IR off
IrDistance_Near	Near
IrDistance_Normal	Normal
IrDistance_Far	Near & far
Hint_FoundIrMarker_00_Subject	One Controller, One Setup
Hint_FoundIrMarker_00	Multiple IR Motion Camera Nodon set to the same controller will have\nthe same settings.
Hint_FoundIrMarker_01_Subject	Hint
Hint_FoundIrMarker_01	If you're using two IR Motion Cameras, you won't\nbe able to use more than four Joy-Con controllers.
CalculationOperatorSwitchLabel	Calculation Method
CalculationOperator_Add	＋
CalculationOperator_AlmostEqual	≈
CalculationOperator_Div	÷
CalculationOperator_Equal	＝
CalculationOperator_Mul	×
CalculationOperator_Sub	－
CalculationOperator_Then	→
CalculationResult	Calculation Result
Hint_Calculation_00_Subject	Hint
Hint_Calculation_00	This Nodon takes two inputs and can add, subtract, multiply, or divide them.
ComparisonOperatorSwitchLabel	Comparison Method
ComparisonOperator_EQ	=
ComparisonOperator_GT	>
ComparisonOperator_LT	<
ComparisonOperator_GE	≥
ComparisonOperator_LE	≤
Hint_ComparisonNode_00_Subject	Hints
Hint_ComparisonNode_00	・ This Nodon compares two input values.\n・ If they fulfill the specified condition, it will send an output of 1.00.
Hint_And_00_Subject	What Does AND Mean?
Hint_And_00	Output will only happen when both input requirements are met.\nIf both inputs are anything other than 0.00, the output will be 1.00.
Hint_Not_00_Subject	What Does NOT Mean?
Hint_Not_00	If the input is 0.00, then the output will be 1.00.\nIf the input is anything other than 0.00, the output will be 0.00.
Hint_AngleDistance_00_Subject	Hints
Hint_AngleDistance_00	・ Put two angle inputs into this, and it'll show the difference between them.\n・ Try using it together with a Tilt Nodon in Angle of Rotation mode.
Hint_Atan_00_Subject	Hints
Hint_Atan_00	・ This Nodon takes a location (specified by the horizontal position port and the vertical position port together) and then calculates the\n　angle of the direction in which this location lies from the location 0, 0.\n・ It's usually best to use the Location-Sensor Nodon to provide the inputs. You could even subtract one location from another.\n・ The output is an angle between -180° and 180°. It works great with a Hinge-Connector Nodon.
Hint_Trigonometric_00_Subject	Hints
Hint_Trigonometric_00	・ If you input an angle into this Nodon, it'll output the (X, Y) coordinates of that position on a circle with a 1.00 radius.\n・ If you want the technical terms, Horizontal Position outputs the cosine, and Vertical Position outputs the sine.\n・ The input should be an angle, with a full circle being 360°.
MappingInputSliderLabel	Input Range
MappingOutputSliderLabel	Output Range
MappingClampModeSwitchLabel	Range Restriction
MappingClampMode_Enable	Enable
MappingClampMode_Disable	Disable
Hint_Mapping_00_Subject	Hints
Hint_Mapping_00	・ This Nodon maps the Input Range on to the Output Range and then sends it as an output.\n・ For instance, if you map the range 0.00:1.00 on to -1.00:1.00, it will turn 0.00 into -1.00, 0.50 into 0.00, and 1.00 into 1.00.\n・ If you enable {[0001|0400]}{[0001|ffff]}, the values will be mapped in reverse.
Hint_PlzAbsoluteValue_00_Subject	Hints
Hint_PlzAbsoluteValue_00	・ Negative values will be made into positive ones.\n・ Positive values will be left as they are.
Hint_Flag_00_Subject	What Are Flags?
Hint_Flag_00	If a number other than 0.00 is received at the on port, the flag will turn on.\nIf a number other than 0.00 is received at the off port, the flag will turn off.\nWhen the flag is on, the output is 1.00. When it's off, it'll be 0.00.
Hint_Flag_01_Subject	What about Simultaneous Inputs?
Hint_Flag_01	If the on and off ports get values other than 0.00 at the same time, then the flag will turn off.
CountRangeLabel	Count Range
LoopModeAllSwitchLabel	Mode
LoopMode_Loop	Loop
LoopMode_Single	Range
LoopMode_Infinite	No limit
LoopMode_Flip	Bounce
DefaultCountSliderLabel	Starting Value
Hint_Random_00_Subject	Hints
Hint_Random_00	　・ When this Nodon receives an input to the ? port, it outputs a random whole number between 1 and the specified Output Range.\n　・ An input to the Reset port resets the output to 0.0.
IntegerRandomRangeSliderLabel	Output Range
QuantizationNumSlider	Number of Stages
Hint_Quantization_00_Subject	Hint
Hint_Quantization_00	This takes an input that's gradual and rolling and makes it sudden and sharp.
Hint_Trigger_00_Subject	Hint
Hint_Trigger_00	When the input changes from 0.00 to something other than 0.00, this Nodon outputs 1.00.
Hint_SquareRoot_00_Subject	Hints
Hint_SquareRoot_00	・ This Nodon calculates the square root (√) of whatever value you input.\n・ If you input a negative value, the output will be 0.00.\n・ Try using it when calculating distances.
Hint_PlzNegation_00_Subject	Hint
Hint_PlzNegation_00	If the value received is negative, it'll be sent out as a positive, and vice versa.
WireWarpIDSwitchLabel	Wormhole ID
Hint_WireWarp_00_Subject	Hints
Hint_WireWarp_00	・ Any input to a Wormhole Entrance will be sent as output to any Wormhole Exit if they share the same Wormhole ID.\n・ Use Wormhole Nodon effectively to tidy up your creations!
CommentKeyboardOk	OK
CommentKeyboardGuide	Leave a note!
EditCommentButton	Edit
CommentHeader_CommentNode	Comment
DefaultComment	Comment
DefaultComment_Rigid	Text Object
TimerSlider	Output after How Many Seconds?
TimerSlider_Numpad	Output after How Many Seconds?
SustainSlider	Continue Output for How Long?
SustainSlider_Numpad	Continue Output for How Long?
Hint_Timer_00_Subject	What's the Timer?
Hint_Timer_00	After receiving input, this Nodon will output 1.00 after waiting for the specified time.
Hint_Spoit_00_Subject	Hint
Hint_Spoit_00	The Bull's-Eye Nodon outputs a number that represents the amount of\nmarker that overlaps with it. Markers are displayed by Nodon such as\nthe IR Motion Camera Nodon and the Marker-Display Nodon.
PlzIntegratedEffectType_Fireworks	Fireworks
PlzIntegratedEffectType_Explosion	Explosion
PlzIntegratedEffectType_Bubbles	Bubbles
PlzIntegratedEffectType_Smoke	Smoke
PlzIntegratedEffectType_Cracker	Party Popper
PlzIntegratedEffectType_Damage	Damage
PlzIntegratedEffectType_CountDown	Countdown
PlzIntegratedEffectType_Fail	Failure
PlzIntegratedEffectType_Pointlight	Light
PlzEffectEmitPosType_Camera	Camera
PlzEffectEmitPosType_World	World
PlzEffectEmitPosTypeLabel	Effect Location
PianoKeyMask_C	C
PianoKeyMask_Cis	C♯
PianoKeyMask_D	D
PianoKeyMask_Dis	D♯
PianoKeyMask_E	E
PianoKeyMask_F	F
PianoKeyMask_Fis	F♯
PianoKeyMask_G	G
PianoKeyMask_Gis	G♯
PianoKeyMask_A	A
PianoKeyMask_Ais	A♯
PianoKeyMask_H	B
PianoKeyMask_HiC	High C
TpbPlaySoundSettingLabel	Sound Played
SeIndexRadioButtonLabel_Onetime	Once
SeIndexRadioButtonLabel_Loop	Loop
SeGroupRadioButtonLabel	Effects
SeGroup_Drum	Percussion
SeGroup_Whistle	Alarms
SeGroup_Machine	Machines
SeGroup_Hit	Collision
SeGroup_Comical	Funny
SeGroup_System	System sounds
SeGroup_Nature	Ambient
SeGroup_Animal	Animals
SeGroup_Voice	Voice
SeGroup_Fx	SFX
SeGroup_Jingle	Jingles
SeIndex_Drum_01	Kick
SeIndex_Drum_02	Snare
SeIndex_Drum_03	Snare roll
SeIndex_Drum_04	Clap
SeIndex_Drum_05	Rim shot
SeIndex_Drum_06	Open hi-hat
SeIndex_Drum_07	Closed hi-hat
SeIndex_Drum_08	Cymbal
SeIndex_Drum_09	High toms
SeIndex_Drum_10	Middle toms
SeIndex_Drum_11	Low toms
SeIndex_Drum_12	Tambourine shake
SeIndex_Drum_13	Tambourine hit
SeIndex_Drum_14	Cowbell
SeIndex_Drum_15	Sleigh bells
SeIndex_Drum_16	Taiko
SeIndex_Drum_17	Gong
SeIndex_Drum_18	Vibraslap
SeIndex_Drum_19	Flexatone
SeIndex_Drum_20	High cuíca
SeIndex_Drum_21	Low cuíca
SeIndex_Drum_22	Bell
SeIndex_Drum_23	Windchime
SeIndex_Drum_24	Bamboo chime
SeIndex_Drum_25	High Cowbell
SeIndex_Drum_26	Reception bell
SeIndex_Drum_27	Boxing bell
SeIndex_Whistle_01	Short whistle
SeIndex_Whistle_02	Long whistle
SeIndex_Whistle_03	Air horn
SeIndex_Whistle_04	Car horn
SeIndex_Whistle_05	Awooga
SeIndex_Machine_01	Engine
SeIndex_Machine_02	Switch
SeIndex_Machine_03	Electricity
SeIndex_Machine_04	Cogs
SeIndex_Machine_05	Motor
SeIndex_Machine_06	Press
SeIndex_Machine_07	Pneumatic drill
SeIndex_Machine_08	Servomotor
SeIndex_Machine_09	Valve
SeIndex_Machine_10	Launch (small)
SeIndex_Machine_11	Launch (large)
SeIndex_Machine_12	Register
SeIndex_Machine_13	Camera
SeIndex_Machine_15	Scissors
SeIndex_Machine_16	Typewriter
SeIndex_Machine_17	Helicopter
SeIndex_Machine_18	Stapler
SeIndex_Machine_19	Clock (tik)
SeIndex_Machine_20	Clock (tok)
SeIndex_Machine_21	Alarm clock
SeIndex_Machine_22	Door (opening)
SeIndex_Machine_23	Door (close)
SeIndex_Hit_01	Weak Hit
SeIndex_Hit_02	Medium Hit
SeIndex_Hit_03	Strong Hit
SeIndex_Hit_04	Guard
SeIndex_Hit_05	Deflect
SeIndex_Hit_06	Metal
SeIndex_Hit_07	Concrete
SeIndex_Hit_08	Glass
SeIndex_Hit_09	Stone
SeIndex_Hit_10	Ball
SeIndex_Hit_11	Slice
SeIndex_Comical_01	Low boing (short)
SeIndex_Comical_02	High vibrato boing
SeIndex_Comical_03	Explosion
SeIndex_Comical_04	Huge explosion
SeIndex_Comical_05	Shaking head
SeIndex_Comical_06	Clang
SeIndex_Comical_07	Heavy bound
SeIndex_Comical_08	Hitting head
SeIndex_Comical_09	Grumbling
SeIndex_Comical_10	Splat
SeIndex_Comical_11	Cork popping
SeIndex_Comical_12	Bubbling
SeIndex_Comical_13	Light bound
SeIndex_Comical_14	Low boing (mid)
SeIndex_Comical_15	Crunch
SeIndex_Comical_16	Zoom
SeIndex_Comical_17	Fail
SeIndex_Comical_18	Success
SeIndex_Comical_19	Spooky
SeIndex_Comical_21	Ascend
SeIndex_Comical_22	Descend
SeIndex_Comical_23	Piano slam
SeIndex_Comical_24	Ba-dum-tish
SeIndex_Comical_25	Low boing (long)
SeIndex_System_01	Done
SeIndex_System_02	Fail
SeIndex_System_03	Success
SeIndex_System_04	Button
SeIndex_System_05	Chirp
SeIndex_System_06	Controls down
SeIndex_System_07	Startup
SeIndex_System_08	Movement
SeIndex_System_09	Select
SeIndex_System_10	Cancel
SeIndex_System_11	Strong select
SeIndex_System_12	Odd movement
SeIndex_System_13	Odd select
SeIndex_System_14	Odd cancel
SeIndex_System_15	Odd strong select
SeIndex_System_16	Reward
SeIndex_System_17	Open up
SeIndex_System_18	Notification
SeIndex_System_19	Coin collect
SeIndex_System_20	Odd controls down
SeIndex_System_21	Error
SeIndex_System_22	Information
SeIndex_System_23	Incorrect
SeIndex_Nature_01	Flames
SeIndex_Nature_02	Quick whoosh
SeIndex_Nature_03	Heavy whoosh
SeIndex_Nature_04	Cloth
SeIndex_Nature_05	Whoosh
SeIndex_Nature_06	Creaking
SeIndex_Nature_07	Rope
SeIndex_Nature_08	Water (quiet)
SeIndex_Nature_09	Water (loud)
SeIndex_Nature_10	Lava
SeIndex_Nature_11	Mud
SeIndex_Nature_12	Bubbles
SeIndex_Animal_01	Lion
SeIndex_Animal_02	Bird
SeIndex_Animal_03	Horse
SeIndex_Animal_04	Donkey
SeIndex_Animal_05	Dog
SeIndex_Animal_06	Frog
SeIndex_Animal_07	Rooster
SeIndex_Animal_08	Cricket
SeIndex_Animal_09	Wolf
SeIndex_Animal_10	Crow
SeIndex_Animal_11	Elephant
SeIndex_Animal_12	Duck
SeIndex_Voice_01	Ha! (male)
SeIndex_Voice_02	Ha! (female)
SeIndex_Voice_03	Robot
SeIndex_Voice_04	Chatting
SeIndex_Voice_05	Announcement
SeIndex_Voice_09	Laughter (group)
SeIndex_Voice_10	Laughter (baby)
SeIndex_Voice_11	Terrified (male)
SeIndex_Voice_12	Scream (male)
SeIndex_Voice_13	Terrified (female)
SeIndex_Voice_14	Scream (female)
SeIndex_Voice_15	Karate chop (male)
SeIndex_Voice_16	Karate chop (female)
SeIndex_Voice_17	Laughter (evil)
SeIndex_Voice_18	Oh!
SeIndex_Voice_19	Yawn
SeIndex_Voice_20	Snore
SeIndex_Voice_21	Chorus
SeIndex_Voice_22	Yeah!
SeIndex_Voice_23	Cheering
SeIndex_Voice_24	Booing
SeIndex_Voice_25	Damage (male)
SeIndex_Voice_26	Damage (female)
SeIndex_Voice_27	Make merry (male)
SeIndex_Voice_28	Make merry (female)
SeIndex_Fx_02	Squealing guitar
SeIndex_Fx_03	Shock
SeIndex_Fx_04	Suspicious
SeIndex_Fx_07	Magic transformation
SeIndex_Fx_08	Defensive magic
SeIndex_Fx_09	Healing magic
SeIndex_Fx_10	Power up
SeIndex_Fx_11	Evil magic
SeIndex_Fx_12	Applause
SeIndex_Fx_13	Laser
SeIndex_Fx_14	Vanished
SeIndex_Fx_15	Broken record
SeIndex_Fx_16	Bubble
SeIndex_Fx_17	Bound
SeIndex_Fx_18	White noise
SeIndex_Fx_19	Power down
SeIndex_Fx_21	Orchestra hit!
SeIndex_Fx_22	Heartbeat
SeIndex_Fx_23	DJ scratch
SeIndex_Jingle_01	Happy
SeIndex_Jingle_02	Super happy
SeIndex_Jingle_03	Sad
SeIndex_Jingle_04	Tragic
SeIndex_Jingle_05	Victory
SeIndex_Jingle_06	Defeat
SeIndex_Jingle_07	Surprise
SeIndex_Jingle_08	You did it!
SeIndex_Jingle_09	Fanfare
SeIndex_Jingle_10	Ta-daa!
TimbreRadioButtonLabel	Keyboard Instruments
Timbre_Bando	Man
Timbre_Piano	Piano
Timbre_Cat	Cat
Timbre_Organ	Organ
Timbre_Fem	Woman
Timbre_GuiterAcoustic	Acoustic guitar
Timbre_GuiterElectric	Electric guitar
Timbre_Recorder	Recorder
Timbre_Trumpet	Trumpet
Timbre_Violin	Violin
Timbre_Harp	Harp
Timbre_Bell	Bell
Timbre_Fc	Chiptune
Timbre_ViolinStaccato	Violin (spiccato)
Timbre_GuiterMute	Muted guitar
TpbPlayBgmPortPreviewLabel	Parameters
BgmNumberRadioButtonLabel	Theme
BgmNumber_01	Strolling
BgmNumber_02	Skipping
BgmNumber_03	Steady
BgmNumber_04	Sunshine
BgmNumber_05	Valor
BgmNumber_06	Tension
BgmNumber_07	Excited
BgmNumber_08	Mad dash
BgmNumber_09	Party time
BgmNumber_10	Ambient
BgmNumber_11	Rivalry
BgmPartIndexRadioButtonLabel_Melody	Melody
BgmPartIndexRadioButtonLabel_Harmony1	Main Accompaniment
BgmPartIndexRadioButtonLabel_Harmony2	Sub Accompaniment
BgmPartIndexRadioButtonLabel_Rhythm	Rhythm
BgmPartIndex_NoSound	Silent
BgmPartIndex_01_Melody_1	Violin
BgmPartIndex_01_Melody_2	Recorder
BgmPartIndex_01_Melody_3	Bouncing synth
BgmPartIndex_01_Harmony1_1	Piano
BgmPartIndex_01_Harmony1_2	Acoustic guitar
BgmPartIndex_01_Harmony1_3	Bell synth
BgmPartIndex_01_Harmony2_1	Glockenspiel
BgmPartIndex_01_Harmony2_2	Echo synth
BgmPartIndex_01_Harmony2_3	Retro synth
BgmPartIndex_01_Rhythm_1	Pop
BgmPartIndex_01_Rhythm_2	March
BgmPartIndex_01_Rhythm_3	Jazz
BgmPartIndex_02_Melody_1	Clarinet
BgmPartIndex_02_Melody_2	Trombone
BgmPartIndex_02_Melody_3	Xylophone
BgmPartIndex_02_Harmony1_1	Banjo
BgmPartIndex_02_Harmony1_2	Guitar and organ
BgmPartIndex_02_Harmony1_3	Synth organ
BgmPartIndex_02_Harmony2_1	Playful synth
BgmPartIndex_02_Harmony2_2	Synth chime
BgmPartIndex_02_Harmony2_3	Toy trumpet
BgmPartIndex_02_Rhythm_1	Swing
BgmPartIndex_02_Rhythm_2	Reggae
BgmPartIndex_02_Rhythm_3	6/8 march
BgmPartIndex_03_Melody_1	Retro synth
BgmPartIndex_03_Melody_2	Piano
BgmPartIndex_03_Melody_3	Organ
BgmPartIndex_03_Harmony1_1	Calypso
BgmPartIndex_03_Harmony1_2	Acoustic guitar
BgmPartIndex_03_Harmony1_3	Wah-wah guitar
BgmPartIndex_03_Harmony2_1	Comical synth
BgmPartIndex_03_Harmony2_2	Synth pad
BgmPartIndex_03_Harmony2_3	Brass
BgmPartIndex_03_Rhythm_1	Chiptune
BgmPartIndex_03_Rhythm_2	Bossa nova
BgmPartIndex_03_Rhythm_3	Funk
BgmPartIndex_04_Melody_1	Pop synth
BgmPartIndex_04_Melody_2	Melodica
BgmPartIndex_04_Melody_3	Violin
BgmPartIndex_04_Harmony1_1	Reverse organ
BgmPartIndex_04_Harmony1_2	Acoustic guitar
BgmPartIndex_04_Harmony1_3	Lo-fi strings
BgmPartIndex_04_Harmony2_1	Synth choir
BgmPartIndex_04_Harmony2_2	Doop-doop
BgmPartIndex_04_Harmony2_3	Operatic voice
BgmPartIndex_04_Rhythm_1	Pulsing synth
BgmPartIndex_04_Rhythm_2	Country
BgmPartIndex_04_Rhythm_3	Cello
BgmPartIndex_05_Melody_1	Trumpet and horn
BgmPartIndex_05_Melody_2	Lead guitar
BgmPartIndex_05_Melody_3	Sine wave
BgmPartIndex_05_Harmony1_1	Trombone
BgmPartIndex_05_Harmony1_2	Rhythm guitar
BgmPartIndex_05_Harmony1_3	Saw wave
BgmPartIndex_05_Harmony2_1	Strings
BgmPartIndex_05_Harmony2_2	Organ
BgmPartIndex_05_Harmony2_3	Triangle wave
BgmPartIndex_05_Rhythm_1	Tuba and percussion
BgmPartIndex_05_Rhythm_2	Rock
BgmPartIndex_05_Rhythm_3	Noise
BgmPartIndex_06_Melody_1	Creepy synth
BgmPartIndex_06_Melody_2	Wind and xylophone
BgmPartIndex_06_Melody_3	Brass melody
BgmPartIndex_06_Harmony1_1	Pizzicato
BgmPartIndex_06_Harmony1_2	Strings
BgmPartIndex_06_Harmony1_3	Chaotic strings
BgmPartIndex_06_Harmony2_1	Creepy chorus
BgmPartIndex_06_Harmony2_2	Reverse synth
BgmPartIndex_06_Harmony2_3	Chaotic brass
BgmPartIndex_06_Rhythm_1	Techno
BgmPartIndex_06_Rhythm_2	Percussion
BgmPartIndex_06_Rhythm_3	Chaotic percussion
BgmPartIndex_07_Melody_1	Saw wave
BgmPartIndex_07_Melody_2	Square wave
BgmPartIndex_07_Melody_3	Accordion
BgmPartIndex_07_Harmony1_1	Sine lead
BgmPartIndex_07_Harmony1_2	Synth and bells
BgmPartIndex_07_Harmony1_3	Piano
BgmPartIndex_07_Harmony2_1	Synth brass
BgmPartIndex_07_Harmony2_2	Arpeggiator
BgmPartIndex_07_Harmony2_3	Delay guitar
BgmPartIndex_07_Rhythm_1	Funk
BgmPartIndex_07_Rhythm_2	Techno
BgmPartIndex_07_Rhythm_3	Soft rock
BgmPartIndex_08_Melody_1	Strings and glock
BgmPartIndex_08_Melody_2	Lead synth
BgmPartIndex_08_Melody_3	Odd voice synth
BgmPartIndex_08_Harmony1_1	Comical synth
BgmPartIndex_08_Harmony1_2	Electric piano
BgmPartIndex_08_Harmony1_3	Banjo
BgmPartIndex_08_Harmony2_1	Military bugle
BgmPartIndex_08_Harmony2_2	Acoustic guitar
BgmPartIndex_08_Harmony2_3	Orchestra hit
BgmPartIndex_08_Rhythm_1	Timpani
BgmPartIndex_08_Rhythm_2	Drum and bass
BgmPartIndex_08_Rhythm_3	Dark drum and bass
BgmPartIndex_09_Melody_1	Accordion
BgmPartIndex_09_Melody_2	Flute and violin
BgmPartIndex_09_Melody_3	Shinobue
BgmPartIndex_09_Harmony1_1	Electric guitar
BgmPartIndex_09_Harmony1_2	Acoustic guitar
BgmPartIndex_09_Harmony1_3	Shamisen
BgmPartIndex_09_Harmony2_1	Clarinet
BgmPartIndex_09_Harmony2_2	Piano
BgmPartIndex_09_Harmony2_3	Whistle
BgmPartIndex_09_Rhythm_1	Polka
BgmPartIndex_09_Rhythm_2	Irish
BgmPartIndex_09_Rhythm_3	Taiko
BgmPartIndex_10_Melody_1	Bird
BgmPartIndex_10_Melody_2	Insect
BgmPartIndex_10_Melody_3	Crowd
BgmPartIndex_10_Harmony1_1	Gentle breeze
BgmPartIndex_10_Harmony1_2	Strong wind
BgmPartIndex_10_Harmony1_3	Rain and thunder
BgmPartIndex_10_Harmony2_1	Labo
BgmPartIndex_10_Harmony2_2	City
BgmPartIndex_10_Harmony2_3	Ocean
BgmPartIndex_10_Rhythm_1	Dripping water
BgmPartIndex_10_Rhythm_2	Horror
BgmPartIndex_10_Rhythm_3	Outer space
BgmPartIndex_11_Melody_1	Lead synth
BgmPartIndex_11_Melody_2	16-bit brass
BgmPartIndex_11_Melody_3	Melodic brass
BgmPartIndex_11_Harmony1_1	Organ
BgmPartIndex_11_Harmony1_2	16-bit guitar
BgmPartIndex_11_Harmony1_3	Horn
BgmPartIndex_11_Harmony2_1	Trance synth
BgmPartIndex_11_Harmony2_2	16-bit orchestra hit
BgmPartIndex_11_Harmony2_3	Clarinet
BgmPartIndex_11_Rhythm_1	Eurobeat
BgmPartIndex_11_Rhythm_2	16-bit rock
BgmPartIndex_11_Rhythm_3	March
VibrationFrequencySlider	Frequency
Hint_PlzGravityNode_00_Subject	Hints
Hint_PlzGravityNode_00	・ Use inputs between -1.00 and 1.00 to adjust the strength of gravity.\n・ Try changing the input to 1.00 for zero gravity, outer-space style.
Hint_PlzPlaySpeedNode_00_Subject	Hints
Hint_PlzPlaySpeedNode_00	・ Use inputs between 0.00 and 1.00 to adjust the speed at which time flows.\n・ When the input is at 1.00, time will be practically standing still.\n・ Your control over time only affects the speed at which objects move. It won't slow down any timers you have running.
PlzResetTypeSwitchLabel	Transition Effect
PlzResetType_Type1	Default
PlzResetType_Type2	Blink
PlzResetType_Type3	Iris Shot
Hint_PlzResetNode_00_Subject	Hint
Hint_PlzResetNode_00	When this Nodon receives an input, the whole game will reset and start over from the beginning.
Hint_PlzExitNode_00_Subject	Hint
Hint_PlzExitNode_00	When this Nodon receives input, the game will end and return to the menu.
GaugeModeSwitchLabel	Light Up How?
GaugeMode_Move	Move
GaugeMode_Stretch	Extend
GaugeMode_Line	Line
GaugeMode_Rotate	Rotate
GaugeMode_Pie	Pie chart
GaugeMode_Alpha	Opacity
GaugeMode_Flash	Flash
Hint_Gauge_00_Subject	Hint
Hint_Gauge_00	Enable the Move mode, then play around with the shape of your Nodon and see what happens.
Hint_AlwaysOn_00_Subject	Hint
Hint_AlwaysOn_00	You should try using this together with a 2D-Marker-Display Nodon!
SpoitModeSwitchLabel	Activates Bull's–Eye Nodon?
SpoitMode_Enable	Bull's–eye compatible
SpoitMode_Disable	Bull's–eye incompatible
SpoitShapeSwitchLabel	Bull's-Eye Shape
SpoitShape_Sphere	Circle
SpoitShape_Obb	Rectangle
Hint_Move2d_00_Subject	Hint
Hint_Move2d_00	The ● , which is moved through input, can\nuse other Nodon's markers as a bull's–eye.
Hint_EmitIrLed_00_Subject	Hint
Hint_EmitIrLed_00	You can use this to make the IR Motion Camera's infrared light light up.
Hint_EmitIrLed_01_Subject	Hmmm...
Hint_EmitIrLed_01	This opens up a world of possibilities.
Hint_EmitIrLed_02_Subject	Hint
Hint_EmitIrLed_02	If you're using two IR Motion Cameras, you won't\nbe able to use more than four Joy-Con controllers.
Hint_PlzHeadNode_00_Subject	Hint
Hint_PlzHeadNode_00	If you connect an object to this Nodon, you'll be able to fix the camera to that object.
PlzHandTriggerModeSwitchLabel	Mode
PlzHandTriggerMode_Hold	Hold
PlzHandTriggerMode_Toggle	Toggle
PlzHandHoldModeSwitchLabel	Carrying Style
PlzHandHoldMode_AsIs	Precise
PlzHandHoldMode_Snap	Snappy
Hint_PlzHandHoldMode_00_Subject	Hints
Hint_PlzHandHoldMode_00	　　・ The Precise option lets you grab any part of an object, whereas Snappy will make the object snap to your hand's position.\n　　・ For instance, if you choose Snappy and set the Launch Speed to 10, it'll be really easy to throw objects.\n　　・ If the Snappy option snaps to a point that feels awkward, try adjusting the Snap Distance.
PlzHandRotateBaseSwitchLabel	Center of Rotation
PlzHandRotateBase_Wrist	Wrist
PlzHandRotateBase_elbow	Elbow
PlzHandRotateBase_shoulder	Shoulder
Hint_PlzHandRotateBase_00_Subject	Hints
Hint_PlzHandRotateBase_00	　・ This option lets you adjust how the in-game hand behaves when the Joy-Con is rotated.\n　・ Choose Wrist if you want the hand to make smaller motions, or Shoulder to make large, sweeping movements.
PlzHandBindDistanceSliderLabel	Snap Distance
Hint_PlzHandNode_00_Subject	Press the Control Stick to Reset Your Hand's Position.
Hint_PlzHandNode_00	It's possible for the gyroscope to drift off alignment sometimes.\nIf that makes things awkward, point the Joy-Con toward the camera\nand press the Joy-Con's control stick to make it reset.
Hint_PlzHandNode_01_Subject	Have You Ever Wanted to Start the Game Carrying Something?
Hint_PlzHandNode_01	Connect an object to this Nodon, and it'll be in the player's hand\nwhen the game starts.
Hint_PlzHandNode_02_Subject	Are You Right-Handed or Left-Handed?
Hint_PlzHandNode_02	The right Joy-Con is for the right hand,\nand the left Joy-Con is for the left hand.
Hint_PlzHandNode_03_Subject	Send an Input to the Grab Port, and the Hand Will Grab Any Grabbable Object!
Hint_PlzHandNode_03	If Hold is enabled, you'll keep holding the object as long as the\ninput continues. If Toggle is enabled, you'll hold it until another\ninput is received.
Hint_PlzHandNode_04_Subject	What Can You Do with Grabbed Objects?
Hint_PlzHandNode_04	An input to the forward/back port will adjust a grabbed object's position.\nIf you set the Launch Speed, objects will go flying when you release them.
PlzHumanActionSwitchLabel	\nAction
PlzHumanActionType_Yeah	Celebrate
PlzHumanActionType_Punch	Punch
PlzHumanActionType_Kick	Kick
PlzHumanActionType_Turn	Turn
Hint_PlzHumanAction_00_Subject	Hints
Hint_PlzHumanAction_00	・ When the action port receives an input of 1.00, the character will perform the action you select here.\n・ Try activating a Punch action and launching an object at the same time. It'll look like you really sent the object flying!\n・ Advanced technique: you can use inputs of 2.00, 3.00, 4.00, and 5.00 to activate the individual actions without changing the setting.
PlzCharacterSpeedSliderLabel	Movement Speed
PlzCharacterJumpSliderLabel	Jump Strength
PlzCharacterAngularVelocityRatioLabel	Turning Speed
PlzUfoHorizontalSpeedSliderLabel	Horizontal Speed
PlzUfoHorizontalSpeedDetail	Horizontal Speed
PlzUfoVerticalSpeedSliderLabel	Vertical Speed
PlzUfoVerticalSpeedDetail	Vertical Speed
PlzShapeSwitchLabel	Object Shape
PlzShapeType_Box	Box
PlzShapeType_Cylinder	Cylinder
PlzShapeType_Sphere	Sphere
PlzAttributeCheckBoxLabel	Properties
PlzAttribute_Visible	Visible
PlzAttribute_Hittable	Solid
PlzAttribute_Movable	Movable
PlzAttribute_BreakableSelf	Destructible
PlzAttribute_BreakableOther	Destructive
PlzAttribute_NoBreakableOther	Non-destructive
BreakableDetailButtonLabel	...
PlzAttributeOtherButtonLabel	Other
PlzMaterialReactionSwitchLabel	Play Sound When Hit/Destroyed?
PlzMaterialReaction_Sound	Play
PlzMaterialReaction_NoSound	Don't Play
PlzGrabbableSwitchLabel	Can Be Grabbed by Hand Nodon?
PlzGrabbable_Enable	Can be grabbed
PlzGrabbable_Disable	Can't be grabbed
PlzColorTypeSwitchLabel	Color
PlzFontColorTypeSwitchLabel	Text Color
PlzColorType_Auto	Auto
PlzColorType_Blue	Blue
PlzColorType_Red	Red
PlzColorType_Green	Green
PlzColorType_Yellow	Yellow
PlzColorType_LightBlue	Light blue
PlzColorType_Pink	Pink
PlzColorType_YellowGreen	Lime green
PlzColorType_Orange	Orange
PlzColorType_Purple	Purple
PlzColorType_Brown	Brown
PlzColorType_White	White
PlzColorType_Black	Black
Hint_PlzColorType_00_Subject	Hints
Hint_PlzColorType_00	・ Experiment with colors to make your creations look great!\n・ If you enable Auto, the color will be selected automatically based on the Destructible and Destructive properties.
PlzMaterialSwitchLabel	Material
PlzMaterial_General	Normal
PlzMaterial_Bouncy	Bouncy
PlzMaterial_Slippery	Slippery
PlzMaterial_Floaty	Floaty
PlzMaterial_ZeroGravity	Zero gravity
Hint_PlzMaterial_00_Subject	Hints
Hint_PlzMaterial_00	・ Objects set to Bouncy will bounce like they're made of rubber and will not be slippery.\n・ Objects set to Slippery will slide as though they're made of ice.\n・ Objects set to Floaty will float upward like a helium balloon.\n・ Objects set to Zero gravity will ignore gravity completely.
PlzBindTypeSwitchLabel	Connection Type
PlzBindTypeSwitchDetail	Connection Type
PlzBindType_Hard	Normal
PlzBindType_Soft	Springy
PlzBindType_Ball	180° Rotation
Hint_PlzBindType_00_Subject	Hints
Hint_PlzBindType_00	・ Use a Springy connection to join your objects more loosely.\n・ A 180° Rotation connection will allow your objects to swing within a semicircle.
PlzBindModeSwitchLabel	Connection Point
PlzBindModeSwitchDetail	Connection Point
PlzBindMode_Auto	Auto
PlzBindMode_Manual	Manual
PlzBindMode_Separator	 ▶ 
PlzBindPositionSwitchLabel_Child	Own Connection Point
PlzBindPositionSwitchLabel_Parent	Target Connection Point
PlzBindPosition_Center	Center
PlzBindPosition_XPlus	X＋
PlzBindPosition_XMinus	X－
PlzBindPosition_XPlane	X Center
PlzBindPosition_YPlus	Y＋
PlzBindPosition_YMinus	Y－
PlzBindPosition_YPlane	Y Center
PlzBindPosition_ZPlus	Z＋
PlzBindPosition_ZMinus	Z－
PlzBindPosition_ZPlane	Z Center
Hint_PlzBindMode_00_Subject	About the Auto setting...
Hint_PlzBindMode_00	This setting will connect objects using the sides that are closest to each other.
Hint_PlzBindMode_01_Subject	About the Manual setting...
Hint_PlzBindMode_01	This setting lets you select exactly which sides of this object and the connecting object are joined.
PlzObjSizeSlider	Size
PlzObjSizeSliderXDetail	Size: X
PlzObjSizeSliderXPrefix	X: 
PlzObjSizeSliderXPostfix	m
PlzObjSizeSliderYDetail	Size: Y
PlzObjSizeSliderYPrefix	Y: 
PlzObjSizeSliderYPostfix	m
PlzObjSizeSliderZDetail	Size: Z
PlzObjSizeSliderZPrefix	Z: 
PlzObjSizeSliderZPostfix	m
PlzObjPosSlider	Position
PlzObjPosSliderXDetail	Position: X
PlzObjPosSliderXPrefix	X: 
PlzObjPosSliderXPostfix	m
PlzObjPosSliderYDetail	Position: Y
PlzObjPosSliderYPrefix	Y: 
PlzObjPosSliderYPostfix	m
PlzObjPosSliderZDetail	Position: Z
PlzObjPosSliderZPrefix	Z: 
PlzObjPosSliderZPostfix	m
PlzObjRotationZSlider	Y-Axis Rotation
RotationZSliderDetail	Y-Axis Rotation
RotationZSliderPrefix	Y-Axis:
RotationZSliderPostfix	°
PlzObjPitchSlider	X-Axis Rotation
PitchSliderDetail	X-Axis Rotation
PitchSliderPrefix	X-Axis:
PitchSliderPostfix	°
RollSliderDetail	Z-Axis Rotation
RollSliderPrefix	Z-Axis:
RollSliderPostfix	°
PlzObjRotationSlider	Rotation
PlzMoveBaseSwitchLabel	Frame of Reference\nfor Motion
PlzMoveBase_World	World
PlzMoveBase_Local	Local
PlzMoveBase_Camera	Camera
Hint_PlzMoveBase_00_Subject	Hint
Hint_PlzMoveBase_00	World: This object will move based on its absolute position in the world.\nLocal: This object will move relative to its own orientation. So if the object rotates, its movement direction will change!\nCamera: This object will move based on the direction the camera is pointing. Z+ is away from the camera, and X+ is to the right.
PlzMoveRigidVelocityModeLabel	Mode
PlzMoveRigidVelocityMode_Acceleration	Acceleration
PlzMoveRigidVelocityMode_Velocity	Speed
Hint_PlzMoveRigidVelocityMode_00_Subject	Hint
Hint_PlzMoveRigidVelocityMode_00	Acceleration: The value of the input will continually increase the speed of the object.\nSpeed: The value of the input will be converted directly to the speed of the object.
PlzRotateBaseSwitchLabel	Frame of Reference for Rotation
Hint_PlzRotateBase_00_Subject	Hint
Hint_PlzRotateBase_00	World: This object will rotate based on its absolute position in the world.\nLocal: This object will rotate relative to its own orientation.\nCamera: This object will rotate based on the direction the camera is pointing.
PlzSelectAxis_Center	Center
PlzSelectAxis_XPlus	X＋
PlzSelectAxis_XMinus	X－
PlzSelectAxis_YPlus	Y＋
PlzSelectAxis_YMinus	Y－
PlzSelectAxis_ZPlus	Z＋
PlzSelectAxis_ZMinus	Z－
PlzFancySkinSwitchLabel	Appearance
PlzFancyKindType_Dice	Dice
PlzFancyKindType_WoodBox	Crate
PlzFancyKindType_Container	Shipping Container
PlzFancyKindType_Panel	Panel
PlzFancyKindType_TreasureBox	Treasure Chest
PlzFancyKindType_TV	Television
PlzFancyKindType_JoyConR	Joy-Con (R)
PlzFancyKindType_JoyConL	Joy-Con (L)
PlzFancyKindType_Soccer	Soccer Ball
PlzFancyKindType_Golf	Golf Ball
PlzFancyKindType_Balloon	Balloon
PlzFancyKindType_Apple	Apple
PlzFancyKindType_Turnip	Turnip
PlzFancyKindType_Fish	Fish
PlzFancyKindType_Kedamaru	Fluffball
PlzFancyKindType_BzkEnemy	Alien
PlzFancyKindType_Doll01	Traveler
PlzFancyKindType_Doll02	Cheerleader
PlzFancyKindType_Doll03	Diver
PlzFancyKindType_Doll04	Mermaid
PlzFancyKindType_Doll05	Robot
PlzFancyKindType_Doll06	Sorceress
PlzFancyKindType_Doll07	Yeti
PlzFancyKindType_Doll08	Sumo Wrestler
PlzFancyKindType_Ring	Hoop
PlzFancyKindType_Arrow	Arrow
PlzFancyKindType_Missile	Rocket
PlzFancyKindType_Pencil	Pencil
PlzFancyKindType_Tuna	Tuna
PlzFancyKindType_Chick	Chick
PlzFancyKindType_Hippo	Hippo
PlzFancyKindType_Bear	Bear
PlzScoreRigidIntegerDigit	Whole Number Digits
PlzScoreRigidDecimalDigit	Decimal Digits
PlzCommentRigidDirectionSwitchLabel	Text Display Side
CommentHeader_PlzCommentRigidNode	Display Text
CommentRigidKeyboardGuide	Write the text you want to display here.
CommentRigidKeyboardLineNumOver	Text Objects can only display up to two lines of text.
CommentRigidKeyboardOk	OK
TextureSurfaceMaskLabel	Texture Face
EditColorDescriptionLabel	Add Your Favorite Colors to the Palette!
PaintCanvasEditColorWindowLabel	Color Palette
ResetColorButton	Reset
PaintGuide_DetailLabel	Guide
PaintGuide_00	No guide
PaintGuide_01	LED numeral
PaintGuide_02	Person back/front
PaintGuide_03	Person side
PaintGuide_04	Car
PaintGuide_05	UFO
PaintGuide_06	3 x 3 grid
PaintGuide_07	4 x 4 grid
PaintGuide_08	Doughnut
PaintGuide_09	Pinched square
PaintGuide_10	Hexagons
PaintGuide_11	Ball surface
PaintGuide_12	Tile
PaintGuide_13	Herringbone paving
PaintGuide_14	Sparkle
PaintGuide_15	Wood
PaintGuide_16	Head front
PaintGuide_17	Head back
PaintGuide_18	Head side
PaintGuide_19	Head outline
PaintGuide_20	Frog
PaintGuide_21	Question mark
PaintGuide_22	Exclamation mark
PaintGuide_23	Key
PaintGuide_24	Keyhole
PaintGuide_25	Flag
PaintGuide_26	Paw print
PaintGuide_27	Hand
PaintGuide_28	Star
PaintGuide_29	Heart
PaintGuide_30	Quaver
Hint_PaintGuide_00_Subject	Hint
Hint_PaintGuide_00	Try using the guide in different ways. For example, trace over it with a color\nyou like, fill in the inside and outside, or just ignore the guide completely.
PlzJointSliderAxisSelectSwitchLabel	Slide Axis
PlzJointSliderAxisChoiceSwitchLabel	Slide Motion Input
Hint_PlzJointSliderNode_00_Subject	Hints
Hint_PlzJointSliderNode_00	・ Connected objects will be able to move freely within the selected range.\n・ You can control their exact position by providing an input to this Nodon.\n　An input of 1.00 will result in one meter of movement.
Hint_PlzJointFreeSliderNode_00_Subject	Free-Slide-Connector Nodon and Slide-Connector Nodon are different!
Hint_PlzJointFreeSliderNode_00	・ The connected object can move along all three axes: X, Y, and Z.\n・ If there's no input, the object will stay fixed in place.\n・ If you disable an axis on the Slide Motion Input option, the connected\n　object will move freely along that axis.\n・ However, you can't set a range, so there will be no limit\n　to how far it can go.
PlzJointHingeAxisSwitchLabel	Axis of Rotation
Hint_PlzJointHingeNode_00_Subject	Hints
Hint_PlzJointHingeNode_00	・ Connected objects will be able to swing freely within the selected range.\n・ You can control their exact angle by providing an input to this Nodon.\n　An input of 10 will result in a 10-degree rotation.
PlzRopeHardnessSliderLabel	String Stiffness
PlzRopeLengthSliderLabel	String Length
Hint_PlzRopeNode_00_Subject	Hints
Hint_PlzRopeNode_00	・ This connector ties objects together with string!\n・ The string won't appear until you've connected objects to both ends.\n・ A little tip: If you disable the string's Solid property, the two objects\n　attached to it will be able to physically interact with each other.
PlzSensorShapeSwitchLabel	Sensor Shape
PlzCheckTargetCheckBoxLabel	Check What?
PlzCheckTarget_Field	World
PlzCheckTarget_Box	Box
PlzCheckTarget_Cylinder	Cylinder
PlzCheckTarget_Sphere	Sphere
PlzCheckTarget_Human	Person
PlzCheckTarget_Car	Car
PlzCheckTarget_Ufo	UFO
PlzCheckTarget_Player	Head/Hands
PlzCheckTarget_All	All
PlzCheckTarget_None	None
PlzCheckTarget_Separator	, 
Hint_PlzTouchSensorNode_00_Subject	Hints
Hint_PlzTouchSensorNode_00	・ This sensor Nodon checks when certain objects come into contact\n　with it, and adds 1.00 to the output value for each one.\n・ For instance, if three applicable objects touch it, it will output 3.00.\n・ You can even set it to check for your head and hands! Play around with\n　the settings, and see what you can do.
Hint_PlzBrokenSensorNode_00_Subject	Hints
Hint_PlzBrokenSensorNode_00	・ This sensor Nodon is no use unless you connect it to something!\n・ It outputs 1.00 when the object it's connected to is destroyed.
Hint_PlzBreakSensorNode_00_Subject	Hints
Hint_PlzBreakSensorNode_00	・ This sensor Nodon is no use unless you connect it to something.\n・ Whenever the thing this sensor is attached to destroys\n   something, it outputs the number of destroyed objects.
Hint_PlzGrabSensorNode_00_Subject	Hints
Hint_PlzGrabSensorNode_00	・ This sensor outputs 1.00 when the object it's connected to is grabbed.\n・ It outputs 1.00 when grabbed without being connected to anything.
PlzSensorBindBaseSwitchLabel	Frame of Reference
PlzSensorBindBase_Local_PlzPositionSensorNode	Initial Position
PlzSensorBindBase_Local_PlzAngleSensorNode	Initial Angle
Hint_PlzSensorBindBase_00_Subject	Hint
Hint_PlzSensorBindBase_00	World: The sensor will output its absolute position in the world.\nInitial Position: The sensor will output how far it has moved from its initial position.\nCamera: The sensor will output its distance from the camera's viewpoint.
Hint_PlzSensorBindBase_01_Subject	Hint
Hint_PlzSensorBindBase_01	World: Output will be based on the sensor's absolute position in the world.\nLocal: Output will be relative to the sensor's own orientation.\nCamera: Output will be relative to the direction the camera is pointing.
Hint_PlzSensorBindBase_02_Subject	Hint
Hint_PlzSensorBindBase_02	World: Output will be based on the sensor's absolute position in the world.\nInitial Angle: The sensor will output how far it has rotated from its initial angle.\nCamera: Output will be relative to the direction the camera is pointing.
Hint_PlzPositionSensorNode_00_Subject	Hints
Hint_PlzPositionSensorNode_00	・ This sensor outputs the current position of its center point.\n・ You'll generally want to connect it to an object to make use of it.
Hint_PlzSpeedSensorNode_00_Subject	Hints
Hint_PlzSpeedSensorNode_00	・ This sensor outputs the speed at which its center point is traveling.\n・ You'll generally want to connect it to an object to make use of it.
Hint_PlzAccelerationSensorNode_00_Subject	Hints
Hint_PlzAccelerationSensorNode_00	・ This sensor outputs the rate at which its center point is accelerating.\n・ You'll generally want to connect it to an object to make use of it.
Hint_PlzAngleSensorNode_00_Subject	Hints
Hint_PlzAngleSensorNode_00	・ This sensor outputs the current angle of its center point.\n・ You'll generally want to connect it to an object to make use of it.
Hint_PlzRotationSensorNode_00_Subject	Hints
Hint_PlzRotationSensorNode_00	・ This sensor outputs the rate at which its center point is rotating.\n・ You'll generally want to connect it to an object to make use of it.
Hint_PlzMoveRigidNode_00_Subject	Hint
Hint_PlzMoveRigidNode_00	Inputs to this Nodon will add movement force to the object.
Hint_PlzRotateRigidNode_00_Subject	Hints
Hint_PlzRotateRigidNode_00	・ Inputs to this Nodon will give the object rotation force.\n・ An input of 1.00 translates into one full rotation per second.\n・ If the object isn't spinning the way you expect it to, try changing the\n　Frame of Reference for Rotation.
Hint_PlzStretchRigidNode_00_Subject	Hints
Hint_PlzStretchRigidNode_00	・ This object will extend one meter for each 1.00 of input it receives.\n・ It's only the appearance that extends. It won't actually bump into\n　or break anything.
PlzPullForceDirectionSwitchLabel	Center of Attraction
PlzPullForceTargetSwitchLabel	Attract Which Objects?
Hint_PlzPullForceNode_00_Subject	Hints
Hint_PlzPullForceNode_00	・ When this Nodon receives a positive input, it attracts other objects\n　toward it.\n・ If it receives a negative input, it'll repel objects!\n・ The attraction or repulsion only affects objects that are currently within\n　the outline of the object.
PlzGenerateeDirectionSwitchLabel	Launch Direction
PlzGenerateeSpeedSliderLabel	Launch Speed
PlzGenerateeSpeedDetail	Launch Speed
PlzGenerateeIntervalSliderLabel	Launch Interval
PlzGenerateeIntervalDetail	Launch Interval (seconds)
Hint_PlzGenerateeNode_00_Subject	Hints
Hint_PlzGenerateeNode_00	・ When this Nodon receives an input, it'll send the selected object\n　flying!\n・ If there's nothing connected to its input port, it'll automatically launch\n　objects continuously.
PlzBindCommanderSwitchLabel	Destroy What?
Hint_PlzBindCommanderNode_00_Subject	Hints
Hint_PlzBindCommanderNode_00	・ This Nodon will destroy any applicable object that touches it.\n・ If you connect an input, you can use it to switch this Nodon's\n　destructive abilities on and off.\n・ It can even destroy things that are connected to it, so watch out!
PlzObjWarpWarpIdSwitchLabel	Teleport ID
PlzObjWarpWarpTargetCheckBoxLabel	Teleport What?
PlzObjWarpLaunchStyleSwitchLabel	Teleport Physics
PlzObjWarpLaunchStyle_AsIs	Preserve
PlzObjWarpLaunchStyle_Tightly	Reset
Hint_PlzObjWarpEnter_00_Subject	Hints
Hint_PlzObjWarpEnter_00	・ This Nodon warps touching objects to the exit with the matching ID.\n・ If there is no exit with a matching ID, the object will just disappear.\n・ Input other than 0.00 is needed to warp if the input port is connected.\n・ Connected objects will be warped together.\n・ Please be aware that only one thing can be teleported at a time.
Hint_PlzObjWarpExit_00_Subject	Hints
Hint_PlzObjWarpExit_00	・ Objects teleported by a Teleport Entrance with a matching ID\n　will appear in the center of this exit.\n・ You can place multiple entrances for each ID, but only one exit.
Hint_PlzObjWarpLaunchStyle_00_Subject	Hints
Hint_PlzObjWarpLaunchStyle_00	・ If you select Preserve, objects will exit the teleport facing the same way and traveling at the same speed as when\n　they entered it.\n・ If you select Reset, the speed and orientation of objects going into the teleport will be lost when they come out of the other end.\n・ If you've selected Reset, you can also set a Launch Direction and Launch Speed to fire objects out of the exit.
PlzViewTypeLabel	Viewpoint
PlzViewType_LookDown	Overhead view
PlzViewType_Front	Side view
Hint_PlzEasyCameraNode_00_Subject	Hint
Hint_PlzEasyCameraNode_00	The area that this Nodon surrounds will be displayed on the game screen.
Hint_PlzTpsCameraNode_00_Subject	Hints
Hint_PlzTpsCameraNode_00	・ When not physically connected to anything, this is similar to a static camera.\n・ Physically connect it to something and change the offset distance settings\n　to a value other than 0 for a third-person view.\n・ The camera can rotate if its ports receive input.
PlzCameraFollowTypeLabel	Track Character's Y Rotation
PlzCameraFollowType_NotFollow	Disable
PlzCameraFollowType_Follow	Enable
PlzCameraTraceSpeedHSliderLabel	Horizontal Tracking Rate
PlzCameraTraceSpeedVSliderLabel	Vertical Tracking Rate
PlzCameraAngleSliderLabel	Camera Field of View
PlzCameraBindOffsetSliderLabel	Offset Distance
PlzCameraBindOffsetSliderXDetail	Offset Distance: X
PlzCameraBindOffsetSliderXPrefix	X: 
PlzCameraBindOffsetSliderXPostfix	m
PlzCameraBindOffsetSliderYDetail	Offset Distance: Y
PlzCameraBindOffsetSliderYPrefix	Y: 
PlzCameraBindOffsetSliderYPostfix	m
PlzCameraBindOffsetSliderZDetail	Offset Distance: Z
PlzCameraBindOffsetSliderZPrefix	Z: 
PlzCameraBindOffsetSliderZPostfix	m
Hint_PlzCameraPositionNode_00_Subject	Hint
Hint_PlzCameraPositionNode_00	Place this Nodon to set the position from which the player views the action.
Hint_PlzCameraPositionNode_01_Subject	Hints
Hint_PlzCameraPositionNode_01	・ If this Nodon receives an input, you can shift the camera's position.\n・ It's a bit technical, but if you use it effectively, you can control the camera\n　in all sorts of different ways.
Hint_PlzCameraLookAtNode_00_Subject	Hint
Hint_PlzCameraLookAtNode_00	The camera will point toward this Nodon's position.
Hint_PlzCameraLookAtNode_01_Subject	Hints
Hint_PlzCameraLookAtNode_01	・ If this Nodon receives an input, you can shift the camera's position.\n・ It's a bit technical, but if you use it effectively, you can control the camera\n　in all sorts of different ways.
Hint_PlzCameraDirectionNode_00_Subject	Hints
Hint_PlzCameraDirectionNode_00	・ This Nodon lets you adjust the camera's angle using inputs.\n・ If you've set a Camera-Target Nodon, all adjustments will be relative to the direction of the target.
Hint_PlzCameraViewAngleNode_00_Subject	Hints
Hint_PlzCameraViewAngleNode_00	・ If you lower the Field of View angle, the picture will be more zoomed in, making the world look more flat.\n・ If you increase the Field of View angle, the picture will be more zoomed out, making objects stick out more prominently.
PlzFieldShapeSwitchLabel	World Shape
PlzFieldShapeType_None	None
PlzFieldShapeType_Floor	Plane
PlzFieldShapeType_Dome	Dome
PlzFieldShapeType_Box	Cuboid
PlzFieldShapeType_Cylinder	Cylinder
PlzFieldShapeType_Sphere	Sphere
PlzFieldSkinSwitchLabel	World Appearance
PlzFieldSkinType_Normal	Default
PlzFieldSkinType_Grass	Grass
PlzFieldSkinType_Tile	Tiles
PlzFieldSkinType_Iron	Metal
PlzFieldSkinType_Sand	Sand
PlzFieldLightSwitchLabel	World Lighting
PlzFieldLightType_Noon	Noon
PlzFieldLightType_Evening	Evening
PlzFieldLightType_Night	Night
PlzFieldLightType_Dark	Pitch black
PlzFieldLightType_Space	Outer space
PlzFieldLightLongitudeLabel	Sun Direction
PlzFieldLightLatitudeLabel	Sun Height
PlzFieldMaterialSwitchLabel	World Material
PlzFieldBreakableThresholdSliderLabel	Object-Destruction Speed
PlzFieldBreakableThresholdSliderLabel_Numpad	Object-Destruction Speed
Hint_PlzFieldLight_00_Subject	Hints
Hint_PlzFieldLight_00	・ Pitch black gives total darkness, as the name suggests.\n・ If the Effect Nodon's Light option is set to World, it'll light up the surrounding environment.
PlzObjectSkinSwitchLabel	Object Appearance
PlzObjectSkinType_Normal	Default
PlzObjectSkinType_Metal	Metallic
PlzObjectSkinType_Neon	Neon
PlzChangeFileToModeSwitchLabel	Swap Type
PlzChangeFileToMode_Keyword	Keyword
PlzChangeFileToMode_Return	Back to previous
CommentHeader_PlzChangeFileNode_To	Swap-Target Keyword
CommentHeader_PlzChangeFileNode_ThisFile	Game Keyword
PlzChangeFileFadeTypeSwitchLabel	Transition Appearance
PlzChangeFileFadeType_WithTitle	With title
PlzChangeFileFadeType_WithoutTitle	Without title
ChangeFileKeyToKeyboardOk	OK
ChangeFileKeyToKeyboardHeader	Swap-Target Keyword
ChangeFileKeyToKeyboardGuide	Enter a keyword.
ChangeFileKeyThisFileKeyboardOk	OK
ChangeFileKeyThisFileKeyboardHeader	Game Keyword
ChangeFileKeyThisFileKeyboardGuide	Enter a keyword.
Hint_TpbPuzzleClearNode_00_Subject	Hint
Hint_TpbPuzzleClearNode_00	What happens when this Nodon gets a signal?
DecimalPoint	.
ToggleSignButtonLabel	{[0001|0000]}{[0001|ffff]}
BackspaceButtonLabel	Backspace
ClearButtonLabel	Delete all
CancelButtonLabel	Cancel
ApplyButtonLabel	OK
SaveAsKeyboardOk	OK
SaveAsKeyboardHeader	Edit game title and save.
SaveAsKeyboardGuide	Think of a title for your game!
LocalPasswordSetKeyboardOk	OK
LocalPasswordSetKeyboardHeader	Set a passcode.
LocalPasswordSetKeyboardSubText	If left blank, users will be able to receive the game without a passcode.
LocalPasswordSetKeyboardGuide	(4-digit number)
LocalPasswordCheckKeyboardOk	OK
LocalPasswordCheckKeyboardHeader	A passcode is required to receive this game.
LocalPasswordCheckKeyboardGuide	(4-digit number)
LocalPasswordCheckKeyboardMissmatch	Incorrect passcode.
ShareCodeKeyboardOk	OK
ShareCodeKeyboardHeader	Enter a Game ID or a Programmer ID.
ShareCodeKeyboardGuide	All IDs start with "G" or "P".
ShareCodeKeyboardInvalidId	ID is invalid.
UgcReportReasonKeyboardOk	OK
UgcReportReasonKeyboardGuide	Please explain the reason for your report.
PropertyWindowPrefix	Settings - 
Dialog_MaxNode_Body	You can't call up more\nthan 512 Nodon.
Dialog_MaxNode_Button	OK
Dialog_MaxWire_Body	You can't make more\nthan 1024 connections.
Dialog_MaxWire_Button	OK
Dialog_MaxComment_Body	You can't call more than\n24 Comment Nodon.
Dialog_MaxComment_Button	OK
Dialog_MaxIrMarker_Body	You can't call any more Nodon\nthat use the IR Motion Camera.
Dialog_MaxIrMarker_Button	OK
Dialog_MaxBgm_Body	You can't call more than four\nBackground-Music Nodon.
Dialog_MaxBgm_Button	OK
Dialog_Common_Button	OK
Dialog_MaxPlzFieldConfig_Body	You can only call one\nWorld Nodon at a time.
Dialog_MaxCameraPosition_Body	You can only call one\nCamera-Position Nodon at a time.
Dialog_MaxCameraDirection_Body	You can only call one\nCamera-Direction Nodon at a time.
Dialog_MaxCameraLookAt_Body	You can only call one\nCamera-Target Nodon at a time.
Dialog_MaxCameraAngle_Body	You can only call one\nCamera-Angle Nodon at a time.
Dialog_MaxPlzGeneratorFew_Body	You can only call 64\nLaunch-Object Nodon (1) at a time.
Dialog_MaxPlzGeneratorMiddle_Body	You can only call 16\nLaunch-Object Nodon (10) at a time.
Dialog_MaxPlzGeneratorMany_Body	You can only call two\nLaunch-Object Nodon (100) at a time.
Dialog_MaxPlzFancyRigid_Body	You can only call 32\nFancy-Object Nodon at a time.
Dialog_MaxPlzHuman_Body	You can only call eight \nPerson Nodon at a time.
Dialog_MaxPlzCar_Body	You can only call eight\nCar Nodon at a time.
Dialog_MaxPlzUfo_Body	You can only call eight\nUFO Nodon at a time.
Dialog_MaxPlzHead_Body	You can only call one\nHead Nodon at a time.
Dialog_MaxPlzHand_Body	You can only call eight\nHand Nodon at a time.
Dialog_MaxCommentRigid_Body	You can only call eight\nText-Object Nodon at a time.
Dialog_NoVacancyObjWarpId_Body	There are no free Teleport IDs\nremaining, so you can't call a new\nTeleport-Object-Exit Nodon.
Dialog_MaxPlzRope_Body	You can only call eight\nString-Connector Nodon at a time.
Dialog_MaxPlzTexture_Body	You can only call 128\nTexture Nodon at a time.
Dialog_MaxPlzObj_Body	You can't call any more\nobject-generating Nodon.
Dialog_MaxPlzChangeFile_Body	You can only call eight\nSwap-Game Nodon at a time.
Dialog_MaxPlzEasyCamera_Body	You can only call one\nGame-Screen Nodon at a time.
Dialog_MaxPlzTpsCamera_Body	You can only call one\nCamera Nodon at a time.
Dialog_IrreconcilableEasyCamera_Body	This Nodon cannot be called up simultaneously\nwith the Game-Screen Nodon.
Dialog_IrreconcilableTpsCamera_Body	This Nodon cannot be called up simultaneously\nwith the Camera Nodon.
Dialog_IrreconcilableCameraDetail_Body	This Nodon cannot be called up simultaneously\nwith an advanced camera Nodon.
TvInputModeConfigSwitchLabel	TV Mode Controls
HandheldInputModeConfigSwitchLabel	Handheld/Tabletop Mode Controls
InputModeConfig_Touch	Touch
InputModeConfig_StickPointer	Control Stick Pointer
InputModeConfig_GyroPointer	Motion-Control Pointer
HardKeyShortcutConfigSwitchLabel	Canvas Shortcuts
HardKeyShortcutConfig_Enable	On
HardKeyShortcutConfig_Disable	Off
CanvasScrollConfigSwitchLabel	Invert Canvas Movement
CanvasScrollConfig_Enable	Enable
CanvasScrollConfig_Disable	Disable
CanvasZoomConfigSwitchLabel	Invert Canvas Zoom
CanvasZoomConfig_Enable	Enable
CanvasZoomConfig_Disable	Disable
Lesson_00_00_CommentRigid_00	　Grab the apple!　
Lesson_00_00_CommentRigid_01	　　　 Move　　　　\n　　　 Jump　　　　
TpbPlaySoundSettingSeparater_Property	-
TpbPlaySoundSettingSeparater_Node	-
Lyt_Common.msbt
Dialog_Common_Button1	OK
Dialog_Common_Button2	Cancel
Dialog_LastStepReEnter_Body	Do you want to start this step?\n\nWhen you finish this step, the game\nyou made before will be overwritten.\n\nIf you want to keep the game in its\ncurrent state of progress, please make\na copy of it in Free Programming.
Dialog_LastStepReEnter_Button1	Start
Dialog_GuidebookOpen_Body	Alice's Guide Updated!
Dialog_PlazaExitConfirmLesson_Body	If you quit now, you'll lose\nall progress on this step.\n\nAre you sure you want to quit?
Dialog_PlazaExitConfirmLesson_Button1	Quit
Dialog_PlazaExitConfirmLessonLast_Body	Progress will be saved, and you'll be able\nto continue programming from where you\nleft off.\n\nDo you want to save and quit?
Dialog_PlazaExitConfirmLessonLast_Button1	Save and quit
Dialog_PlazaExitConfirmGuidebook_Body	If you quit now, you'll lose all your progress.\n\nAre you sure you want to quit?
Dialog_PlazaExitConfirmGuidebook_Button1	Quit
Dialog_PlazaExitConfirmHint_Body	Leave Alice's Guide and\nreturn to the puzzle?
Dialog_PlazaExitConfirmHint_Button1	Return to the puzzle
Dialog_PlazaExitConfirmPuzzle_Body	If you quit now, you'll lose\nall progress on this puzzle.\n\nAre you sure you want to quit?
Dialog_PlazaExitConfirmPuzzle_Button1	Quit
Dialog_MyGameOptionConfirmDelete_Body	Are you sure you want to delete this?
Dialog_MyGameOptionConfirmDelete_Button1	I'm really sure!
Dialog_MyGameOptionConfirmDelete_Button2	I'm not sure...
Dialog_PuzzleHintConfirm_Body	Do you want to quit the puzzle\nand review Alice's Guide?\n\nYour progress won't be saved.
Dialog_PuzzleHintConfirm_Button1	Review Alice's Guide
Dialog_PuzzleSkipConfirm_Body	If you're finding the puzzle really\ntough, you can skip it as if it were\nfinished.\n\nDo you want to do that?
Dialog_PuzzleSkipConfirm_Button1	Yes, please
Dialog_PuzzleSkipConfirm_Button2	I'll soldier on!
Dialog_PuzzleResetConfirm_Body	Start this puzzle from the beginning?
Dialog_PuzzleResetConfirm_Button1	Start again
Dialog_FinalStepResetConfirm_Body	If you start this step from the\nbeginning, the parts you've\nadded in this step will be deleted.\nDo you want to start again?
Dialog_FinalStepResetConfirm_Button1	Start again
Dialog_LockedLesson_Body	It's best to do the lessons in order!\n\n                                            - Bob
Dialog_LockedLesson_Button1	Got it
Dialog_InternetUploadConfirm_Body	Share your game online?\n\nAnyone who has the Game ID will\nbe able to play, modify, and reshare\nthe game.
Dialog_InternetUploadConfirm_Button1	Share
Dialog_LocalUploadConfirm_Body	Share with nearby people?\n\nAnyone who receives your\ngame will be able to modify it\nand reshare it online.
Dialog_LocalUploadConfirm_Button1	Share
Dialog_UgcReportConfirm_Body	By continuing, you will report a game that you\nbelieve contains content that violates the\nNintendo Account User Agreement. (For\nexample, a game containing unpleasant content.)\n\nThis report will be sent to Nintendo, not the\nperson that shared the game.
Dialog_UgcReportConfirm_Button1	OK
Dialog_ServerDeleteConfirm_Body	Delete the shared game?\n\nIf you delete it, others won't be\nable to receive it.\n\nHowever, it will not be deleted\nfrom the systems of others who\nhave received the game already.
Dialog_ServerDeleteConfirm_Button1	Delete
Dialog_UgcReportDone_Body	Report sent.
Dialog_UgcReportDoneAndDelete_Body	Report sent.\n\nThis game will be deleted from your system.
Dialog_MaxLocalFileDownload_Body	You can't store any more games.\n\nTo receive a new game, you'll need to delete\none of your own games or one of the games\nyou received.
Dialog_MaxLocalFileDownloadSelf_Body	You can't store any more games.\n\nTo download a new game, you'll need to delete\none of your own games or one of the games\nyou received.
Dialog_MaxLocalFileCopy_Body	You can't store any more games.\n\nTo copy a game, you'll need to delete\none of your own games or one of the\ngames you received.
Dialog_MaxLocalFileNew_Body	You can't store any more games.\n\nTo create a new game, you'll need to\ndelete one of your own games or one\nof the games you received.
Dialog_MaxInternetUploadFile_Body	You can't share any more games.\n\nTo share a new game, you'll need to\ndelete one of the games that you\nhave shared.
Dialog_LocalUploadEndConfirm_Body	Do you want to stop sharing?
Dialog_LocalUploadEndConfirm_Button1	Yes
Dialog_SetTitleRequest_Body	Give your game a title!
Dialog_NotFoundAuthorCode_Body	Couldn't find programmer.
Dialog_NotFoundGameCode_Body	Couldn't find game.
Dialog_InternetDownloadContinueConfirm_Body	Return to this programmer's\nshared games?
Dialog_InternetDownloadContinueConfirm_Button1	Yes
Dialog_InternetDownloadContinueConfirm_Button2	No
Dialog_InternetDownloadGameMenuExitConfirm_Body	Finish receiving games?
Dialog_InternetDownloadGameMenuExitConfirm_Button1	Yes
Dialog_InternetDownloadGameInfoExitConfirm_Body	Finish receiving and return\nto Free Programming?
Dialog_InternetDownloadGameInfoExitConfirm_Button1	Return to Free Programming
Dialog_GoAlbumConfirm_Body	You can take a screenshot and open the\n album.\n\nThere you can share this screenshot on a social\nnetwork to give friends your Game ID and\nProgrammer ID.\n\nTake a screenshot and open the  album?
Dialog_GoAlbumConfirm_Button1	Yes
Dialog_GoAlbumConfirm_Button2	No
Dialog_ForceMyGameMenuOpenConfirm_Body	A special command was received to\nforce-unlock Free Programming.\n\nUsually, Free Programming is unlocked only\nwhen Lesson 1 is completed. It's recommended\nto complete the lessons in order!\n\nAre you sure you want to unlock\nFree Programming?
Dialog_ForceMyGameMenuOpenConfirm_Button1	Unlock
Dialog_ForceMyGameMenuOpenFinalConfirm_Body	Are you absolutely sure you want\nto unlock Free Programming?
Dialog_ForceMyGameMenuOpenFinalConfirm_Button1	I'm absolutely sure
Dialog_NetworkError_Other_Body	A communication error has occurred.
Dialog_NetworkError_DisconnectFromHost_Body	The connection with the author was interrupted.
Dialog_NetworkError_BadConnection_Body	The connection was interrupted.\n\nThere could be issues with your network\nenvironment.\n\nIf the problem persists, please check the\nNintendo Support website:\nsupport.nintendo.com
Dialog_BrokenData_Body	Data is corrupted.
Dialog_DisableUpload_Body	The game sharing service has been discontinued.\nThank you for using it!\n\nYou can still receive games that have already\nbeen shared.
Dialog_SaveDataTransfer_Body	Save data from the demo version has been\nfound. Keep playing from where you left off?
Dialog_SaveDataTransfer_Button1	Yes
Dialog_SaveDataTransfer_Button2	No
Tpb_PlazaPlayUI-L_BtnPause-T_Text_00	Pause
Tpb_PlazaPlayUI-L_BtnRetry-T_00	Hold
Tpb_PlazaEditUI-L_BtnPause-T_Text_00	Pause
Pause_End	End
Pause_Back_to_Puzzle	Return to puzzle
Pause_Reset_Puzzle	Start again
Pause_Reset_FinalLesson	Restart this step
Tpb_PlazaPauseMenu-L_BtnBacklog-T_Text_00	Log
Tpb_PlazaPauseMenu-L_BtnSet-T_Text_00	Controls
Tpb_PlazaPauseMenu-L_BtnRef-T_Text_00	Nodopedia
Tpb_PlazaPauseMenu-L_BtnHint-T_Text_00	Check Alice's Guide
Tpb_PlazaPauseMenu-T_NodeLabel	Nodon
Tpb_PlazaPauseMenu-T_WireLabel	Connections
Tpb_PlazaPauseMenuT_SubTitle_Lesson	Lesson {[fa00|000000cd]}\nStep {[fa01|010000cd]}
Tpb_PlazaPauseMenuT_SubTitle_Puzzle	Checkpoint\n{[fa00|000000cd]}-{[fa01|010000cd]}
Tpb_PlazaPauseMenuT_SubTitle_PuzzleIntro	Checkpoints - Intro
Tpb_PlazaPauseMenuT_SubTitle_PuzzleExtra	Extra\nCheckpoint {[fa01|010000cd]}
Tpb_PlazaPauseMenuT_SubTitle_Guidebook	Alice's Guide
Tpb_PlazaPauseMenuT_SubTitle_MyGame	Free\nProgramming
Tpb_PlazaBacklog-L_Cnt-L_Cnt_00-T_Text_01_Image	View image
Tpb_PlazaBacklog-L_Cnt-L_Cnt_00-T_Text_01_Movie	View movie
Tpb_PlazaBacklogOpenCnt-L_Footer-L_Btn_02-T_Text_00	View again
Tpb_PlazaBacklogOpenCnt-L_Footer-L_Btn_01-T_Text_00	Back
Tpb_GuidebookMenu-L_Footer-L_Btn_00-T_Text_00	Confirm
Tpb_GuidebookMenu-L_Footer-L_Btn_01-T_Text_00	Back
Tpb_PlazaPauseMenu-L_Footer-L_Btn_00-T_Text_00	Confirm
Tpb_PlazaPauseMenu-L_Footer-L_Btn_01-T_Text_00	Close
Tpb_MyGameMenu-L_Footer-L_Btn_00-T_Text_00	Confirm
Tpb_MyGameMenu-L_Footer-L_Btn_01-T_Text_00	Back
Tpb_MyGameMenu-L_Footer-L_Btn_02-T_Text_00	Options
Tpb_PlazaEditConfig-L_Footer-L_Btn_00-T_Text_00	Change
Tpb_PlazaEditConfig-L_Footer-L_Btn_01-T_Text_00	Close
Tpb_PlazaBacklog-L_Footer-L_Btn_00-T_Text_00	Confirm
Tpb_PlazaBacklog-L_Footer-L_Btn_01-T_Text_00	Close
Tpb_CourseMenu-L_Footer-L_Btn_00-T_Text_00	Confirm
Tpb_CourseMenu-L_Footer-L_Btn_01-T_Text_00	Back
Tpb_LessonMenu-L_Footer-L_Btn_00-T_Text_00	Confirm
Tpb_LessonMenu-L_Footer-L_Btn_01-T_Text_00	Back
Tpb_MyGameMenuOption-L_Footer-L_Btn_00-T_Text_00	Confirm
Tpb_MyGameMenuOption-L_Footer-L_Btn_01-T_Text_00	Close
Tpb_PuzzleMenu-L_Footer-L_Btn_00-T_Text_00	Confirm
Tpb_PuzzleMenu-L_Footer-L_Btn_01-T_Text_00	Back
Tpb_TopMenu-L_Footer-L_Btn_00-T_Text_00	Confirm
Tpb_Balloon-L_Movie_00-L_Footer-L_Btn_00-T_Text_00	Next
Tpb_Balloon-L_Movie_00-L_Footer-L_Btn_01-T_Text_00	Watch again
Tpb_MyGameMenuOption-T_Header	No title
Tpb_MyGameMenuOption-L_TitleName-T_Text	Edit game title
Tpb_MyGameMenuOption-L_Lock-T_Text	Write protect
Tpb_MyGameMenuOption-L_Copy-T_Text	Copy
Tpb_MyGameMenuOption-L_Delete-T_Text	Delete
Tpb_MyGameMenuOption-L_NodeStatus-T_Label	Nodon:
Tpb_MyGameMenuOption-L_WireStatus-T_Label	Connections:
Tpb_MyGameMenuOption-L_NodeStatus-T_Status_00	{[fa02|000000cd]}/{[fa02|010000cd]}
Tpb_MyGameMenuOption-L_Lock-On	On
Tpb_MyGameMenuOption-L_Lock-Off	Off
Tpb_PlazaInsertTitle-T_Guidebook	Alice's Guide
Tpb_PlazaInsertTitle-T_Puzzle_00	Checkpoint {[fa00|000000cd]}-{[fa01|010000cd]}
Tpb_PlazaInsertTitle-T_Puzzle_Intro	Checkpoints - Intro
Tpb_PlazaInsertTitle-T_Puzzle_Extra	Extra Checkpoint {[fa01|010000cd]}
Tpb_EventLessonClear-T_Date	{[fa09|010000cd]}/{[fa09|020000cd]}/{[fa0b|000000cd]}
Tpb_EventLessonClear-T_01	Programmer
Tpb_EventLessonClear-T_UserName	{[c903]}{[0201]}
Tpb_EventPuzzleClear-T_00	All Clear!
Tpb_EventLessonAllClear-T_Text	You've cleared all seven interactive lessons and\ntaken the first steps on your programming journey.\nWe're looking forward to seeing all the unique\ngames you're going to create!
Tpb_EventLessonAllClear-T_UserName	{[c903]}{[0201]}
Tpb_EventLessonAllClear-T_00	All Lessons Clear!
Tpb_EventLessonAllClear-T_01	Bob & Alice
Tpb_EventLessonAllClear-T_Date	{[fa09|010000cd]}/{[fa09|020000cd]}/{[fa0b|000000cd]}
Tpb_TopMenu-L_CourseMenu_00-T_Text_00	Interactive Lessons
Tpb_TopMenu-L_MyGameMenu_00-T_Text_00	Free Programming
Tpb_MyGameMenu-T_Header	Free Programming
Tpb_MyGameMenu-L_BtnNewFile-T_Text	New Project
Tpb_MyGameMenu-L_BtnCntMenu_00-T_Text_00	Alice's Guide
Tpb_CourseMenu-T_Header_00	Interactive Lessons
Tpb_CourseMenu-T_TimeLabel	Length
Tpb_CourseMenu-T_TimeRequired_01	About 40 min.
Tpb_CourseMenu-T_TimeRequired_02	About 50 min.
Tpb_CourseMenu-T_TimeRequired_03	About 70 min.
Tpb_CourseMenu-T_TimeRequired_04	About 80 min.
Tpb_CourseMenu-T_TimeRequired_05	About 80 min.
Tpb_CourseMenu-T_TimeRequired_06	About 60 min.
Tpb_CourseMenu-T_TimeRequired_07	About 90 min.
Tpb_CourseMenu-L_BtnCntMenu-T_Text_00	Alice's Guide
Tpb_CourseMenu-T_Lesson_Lesson	Lesson {[fa00|000000cd]}
Tpb_CourseMenu-T_Clear	Clear
Tpb_CourseMenu-T_CheckPointClear	Clear
Tpb_CourseMenu-T_Extra	{[fa02|000000cd]}% Clear
Tpb_LessonMenu-T_Header	Lesson {[fa00|000000cd]}
Tpb_LessonMenu-T_StepNum	Step {[fa01|000000cd]}
Tpb_LessonMenu-L_BtnCntMenu-T_Text_00	Alice's Guide
Tpb_LessonMenu-L_Steps_00-T_StepNumLocked	{[fa01|000000cd]}
Tpb_GuidebookMenu-T_SideTitle	Nodon appearing
Tpb_GuidebookMenu-T_SideOthers	Others
Tpb_PuzzleMenu-L_BtnCntMenu-T_Text_00	Alice's Guide
Tpb_PuzzleMenu-L_Puzzle_00-T_PuzzleNum	{[fa00|000000cd]}
Tpb_PuzzleMenuExtra-L_Footer-L_Btn_00-T_Text_00	Confirm
Tpb_PuzzleMenuExtra-L_Footer-L_Btn_01-T_Text_00	Back
Tpb_PuzzleMenuExtra-L_CntList_00-L_Puzzle_00-T_PuzzleNum	{[fa01|000000cd]}
Tpb_Reticle2D_00-L_GyroDpd_00-BtnL	
Tpb_Reticle2D_00-L_GyroDpd_00-BtnR	
Tpb_Reticle2D_00-L_GyroDpd_00-Cal_L	{[0001|1900]} {[0001|ffff]}Joy-Con (L) needs recalibration.\nPut it on a flat surface for a moment.
Tpb_Reticle2D_00-L_GyroDpd_00-Cal_R	{[0001|1900]} {[0001|ffff]}Joy-Con (R) needs recalibration.\nPut it on a flat surface for a moment.
Tpb_ErrorCollision	Too many objects are overlapping.\nResolving overlap issue...
Tpb_ErrorFrameRate	●
Tpb_ErrorObjVanish	▲
Tpb_PlazaEditConfig-T_Header	Controls
Tpb_PlazaPauseMenu-L_BtnName-T_Text_00	Edit game title
Tpb_PlazaBtnFinish-L_Finish_00-T_Text_00	Done
Tpb_GuidebookMenu-L_BtnCntMenu-T_Text_00	Alice's Guide
Tpb_MyGameMenuOption-T_Lock	Please make a copy of this game to edit it.
Tpb_PlazaBacklog-T_Tag	Log
Tpb_MyGameMenuOption-T_EditDateLabel	Updated:
Tpb_MyGameMenuOption-T_EditDate	{[fa09|010000cd]}/{[fa09|020000cd]}/{[fa0b|000000cd]} {[fa09|030000cd]}:{[fa09|040000cd]}
Tpb_PlazaInsertClear-T_00	Clear
Tpb_PuzzleMenu-L_Puzzle_00-T_Pass	Skipped
Tpb_GameInfo-L_Footer-L_Btn_01-T_Text_00	Back
Tpb_GameInfo-L_Footer-L_Btn_01-T_Text_00_End	Cancel
Tpb_GameInfo-L_Footer-L_Btn_01-T_Text_00_Stop	Quit
Tpb_GameInfo-L_Footer-L_Btn_00-T_Text_00	Confirm
Tpb_LocalGameMenu-L_Footer-L_Btn_02-T_Text_00	Search again
Tpb_LocalGameMenu-L_Footer-L_Btn_01-T_Text_00	Back
Tpb_LocalGameMenu-L_Footer-L_Btn_00-T_Text_00	Confirm
Tpb_LocalGameMenu-T_Search_00	Locally Shared Games
ReportKind_00	Intrusion of privacy
ReportKind_01	Violence / Physical harm
ReportKind_02	Abusive/Harassing/Bullying
ReportKind_03	Hateful/Discriminatory
ReportKind_04	Advertising/Spam
ReportKind_05	Sexually explicit
ReportKind_07	Other inappropriate content
Tpb_MyGameMenu-L_BtnGetFile-T_Text	Receive
Tpb_MyGameMenu-L_BtnShareFile-T_Text	Share
Tpb_MyGameMenu-L_BtnExtract-T_Text	Filter
Tpb_MyGameMenu-L_BtnExtract-T_Text_All	All games ({[fa01|000000cd]})
Tpb_MyGameMenu-L_BtnExtract-T_Text_Favorite	Favorites ({[fa01|000000cd]})
Tpb_UploadGameSelect-L_Footer-L_Btn_01-T_Text_00	Back
Tpb_UploadGameSelect-L_Footer-L_Btn_00-T_Text_00	Confirm
Tpb_UploadGameSelect-T_Explain_00	Which game do you want to share?
Tpb_UgcReportSelect-L_Footer-L_Btn_01-T_Text_00	Back
Tpb_UgcReportSelect-L_Footer-L_Btn_00-T_Text_00	Confirm
Tpb_UgcReportSelect-T_ReasonForReporting	Select the type of report you want to submit.
Tpb_UgcReportConfirm-T_Header_00	Submit a Report
Tpb_UgcReportConfirm-L_Footer-L_Btn_02-T_Text_00	Expand screenshot
Tpb_UgcReportConfirm-L_Footer-L_Btn_01-T_Text_00	Back
Tpb_UgcReportConfirm-L_Footer-L_Btn_00-T_Text_00	Confirm
Tpb_MethodSelect-L_Footer-L_Btn_01-T_Text_00	Back
Tpb_MethodSelect-L_Footer-L_Btn_00-T_Text_00	Confirm
Tpb_MethodSelect-L_Btn_00-T_Text_Upload	Share online
Tpb_MethodSelect-L_Btn_01-T_Text_Upload	Share locally
Tpb_MethodSelect-L_Btn_00-T_Text_Download	Receive from online
Tpb_MethodSelect-L_Btn_01-T_Text_Download	Receive locally
ReportKind_NotSet	Select the type of report you want to submit.
Tpb_InternetGameMenu-L_Footer-L_Btn_02-T_Text_00	Search again
Tpb_InternetGameMenu-L_Footer-L_Btn_01-T_Text_00	End
Tpb_InternetGameMenu-L_Footer-L_Btn_01-T_Text_00-Back	Back
Tpb_InternetGameMenu-L_Footer-L_Btn_00-T_Text_00-Other	Confirm
Tpb_InternetGameMenu-L_Footer-L_Btn_00-T_Text_00-Self	Confirm
Tpb_PlazaPauseMenu-L_BtnReport-T_Text	Report
Tpb_InternetGameMenu-T_NoItem_00	No shared games.
Tpb_MyGameMenuOption-L_Fav-T_Text	Favorite
Tpb_MyGameMenuOption-L_Fav-T_Status-On	On
Tpb_MyGameMenuOption-L_Fav-T_Status-Off	Off
Tpb_MyGameMenuOption-L_AuthorID-T_Text	Go to this programmer's shared games.
Tpb_InternetGameMenu-L_BtnCntMenu-L_Cnt_00-L_AuthorID-T_Label	Game ID
Tpb_InternetGameMenu-L_BtnCntMenu-L_Cnt_00-T_Report	Report sent.
Tpb_InternetGameMenu-L_Header-T_Title-Self	Shared by {[0802]}
Tpb_InternetGameMenu-L_Header-T_Title-Other	Shared by {[0801]}
Tpb_InternetGameMenu-L_Header-T_AuthorID_00	Programmer ID
Tpb_Header-L_Header-T_Header_Upload	Share
Tpb_Header-L_Header-T_Header_InternetUpload	Share online
Tpb_Header-L_Header-T_Header_LocalUpload	Share locally
Tpb_Header-L_Header-T_Header_Download	Receive
Tpb_Header-L_Header-T_Header_InternetDownload	Receive from online
Tpb_Header-L_Header-T_Header_LocalDownload	Receive locally
Tpb_Header-L_Header-T_Header_InternetGameSelf	Shared games
Tpb_Header-L_Header-T_Header_UgcReport	Report
Tpb_LocalGameMenu-L_BtnCntMenu-Author	Programmer
Tpb_LocalGameMenu-T_NoItem_00	Couldn't find any shared games nearby.
Tpb_GameInfo-L_GameCard-T_EditDate	Updated
Tpb_GameInfo-L_GameCard-T_EditDate_Str	{[fa09|010000cd]}/{[fa09|020000cd]}/{[fa0b|000000cd]} {[fa09|030000cd]}:{[fa09|040000cd]}
Tpb_GameInfo-L_GameCard-T_NodeStatus	Nodon
Tpb_GameInfo-L_GameCard-T_NodeStatus_Str	{[fa02|000000cd]}/{[fa02|010000cd]}
Tpb_GameInfo-L_GameCard-T_WireStatus	Connections
Tpb_GameInfo-L_GameCard-T_GameID	Game ID
Tpb_GameInfo-L_GameCard-T_Author	Programmer
Tpb_GameInfo-L_GameCard-L_Btn_Upload-T_Text_Internet	Share online
Tpb_GameInfo-L_GameCard-L_Btn_Upload-T_Text_Local	Share locally
Tpb_GameInfo-L_GameCard-L_Btn_Get-T_Text_InternetGet	Receive from online
Tpb_GameInfo-L_GameCard-L_Btn_Get-T_Text_InternetHave	You already have it!
Tpb_GameInfo-L_GameCard-L_Btn_Get-T_Text_LocalGet	Receive locally
Tpb_GameInfo-L_GameCard-L_Btn_Get-T_Text_LocalHave	You already have it!
Tpb_Waiting-L_Indicator_00-T_Waiting_00-Uploading	Uploading...
Tpb_Waiting-L_Indicator_00-T_Waiting_00-Downloading	Downloading...
Tpb_Waiting-L_Indicator_00-T_Waiting_00-LocalDownloadPreparing	Preparing download...
Tpb_Waiting-L_Indicator_00-T_Waiting_00-LocalDownloading	Downloading...
Tpb_Waiting-L_Indicator_00-T_Waiting_00-UgcReportSending	Sending report...
Tpb_Waiting-L_Indicator_00-T_Waiting_00-UploadGameDeleting	Deleting...
Tpb_Waiting-T_Waiting_00-InternetConnecting	Connecting...
Tpb_Waiting-T_Waiting_00-AuthorCodeSearching	Searching for programmer...
Tpb_Waiting-T_Waiting_00-GameCodeSearching	Searching for game...
Tpb_Waiting-T_Waiting_00-LocalSearching	Searching for shared games nearby...
Tpb_Waiting-T_Waiting_00-ReSearching	Searching again...
Tpb_MyGameMenu-No_Game	No games found.
Tpb_MyGameMenu-No_Game_Favorite	No favorited games found.
Tpb_InternetGameMenu-L_BtnCntMenu-L_Cnt_00-T_Download	You have this!
Tpb_GameInfo-Password_Edit	Settings
Tpb_GameInfo-Password_Reset	Reset
Tpb_UgcReportConfirm-L_BtnOk-T_Text	Submit
Tpb_UgcReportConfirm-T_LabelKind	Report type
Tpb_UgcReportConfirm-T_LabelReason	Please give details.
Tpb_MethodSelect-L_BtnShareList-T_Title	Shared games
Tpb_MyGameMenu-T_LabelSlot	Number of games
Tpb_MyGameMenu-T_NumSlot	{[fa01|000000cd]}/{[fa01|010000cd]}
Tpb_UploadGameSelect-T_NoItem_00	There are no games.
Tpb_UgcReportConfirm-T_LabelThumbnail	Screen to report
Tpb_GameInfo-L_GameCard-T_ArrangeStr	(Adaptation)
Tpb_GameInfo-L_GameCard-L_BtnShare-T_Text	Share on a social network
Tpb_GameInfo-L_GameCard-L_BtnEnd-T_Text	End
Tpb_GameInfo-L_BtnUgcReport-T_Text	Report
Tpb_MyGameMenuOption-T_ArrangeLabel	(Adaptation)
Tpb_MyGameMenuOption-T_GameIDLabel	Game ID:
Tpb_MyGameMenuOption-T_AuthorLabel	Programmer:
Tpb_MyGameMenuOption-T_AuthorIDLabel	Programmer ID:
Tpb_GameInfo-L_Password-T_Password_00	Passcode
Tpb_GameInfo-Password_Non	None
Tpb_GameInfo-L_GameCard-L_BtnAuthorID-T_Text	To game list
Tpb_GameInfo-L_BtnShare-T_Text	Share to social media
Tpb_GameInfo-L_BtnDownload-T_Text	Download
Tpb_GameInfo-L_BtnDelete-T_Text	Delete
Tpb_GameInfo-L_Loading-T_text_00	Sharing...
Tpb_GameInfo-Download_Num	People downloading: {[fa00|000000cd]}
Tpb_GameInfo-Download_Waiting	Waiting for recipients...
Tpb_Waiting-L_Indicator_00-T_Finish_00-CompleteUploading	Sharing complete.
Tpb_Waiting-L_Indicator_00-T_Finish_00-CompleteDownloading	Download complete.
Tpb_Waiting-L_Indicator_00-T_Finish_00-CompleteLocalDownloading	Download complete.
Tpb_Waiting-L_Indicator_00-T_Finish_00-CompleteUploadGameDeleting	Deleted.
Tpb_TopMenu-T_c	© Nintendo
NodeChat.msbt
ConstantNode	You need to keep a steady\npace when creating anything.\nYou can't slow down!
StickTiltedNode	Wahoo! Give the control\nstick a good waggle!
ButtonPressedNode	Heyo, {[0201]}!\nMake sure you let out a huge yell\nwhen you hit a button! HURRRG!
IsTouchNode	What's up?\nIf you get tired, you can poke at the screen,\nas long as you're not too rough.
TouchPositionNode	Keep a cool head, and\nget with the program!\nTake it nice and slow.
IntegratedSurfaceUpwardNode	If you can't decide what to do,\njust try doing anything, haha!\nWhat can go wrong?
IntegratedAxisAngleNode	If you feel your programming's off balance,\nmaybe try some yoga or something?\nMaybe that would put you on an even keel.
IntegratedSwingedNode	Yaaaaahoooooooo!
IntegratedRotationSpeedNode	Ah, this is what you're programming?\nThen you'll want THAT Nodon, then of course\nyou'll want THAT feature. Ah, but before that...
OnStartNode	Let's get this show\non the road! Wheeee!
PlzObjBreakCountNode	Why, hello, {[0201]}!\nI trust your work's going well?
FoundIrMarkerNode	Now then, {[0201]}...\nYou have a job for me?\nIt'll cost you...
CalculationNode	IT SEEMS YOU ARE TRYING TO MAKE\nA HIGH-QUALITY GAME. PERHAPS YOU\nWOULD LIKE SOME HELP WITH THAT.
ComparisonNode	{[c903]}{[0201]}! What kind of\ngame are you making? Is it a good game?\nOr a not-so-good game? Comparatively speaking.
AndNode	Listen, {[0201]},\nI hope you're keeping a close\nwatch on how things are working!
NotNode	I'm really NOT looking forward to\nthis game—not one bit! NOT!
AtanNode	Listen, bud. All I care about are angles.\nAs long as you toss plenty of those bad\nboys into your game, we can see eye to eye.
TrigonometricNode	Erm...I know I'm a bit hard to follow...\nIf only I were simpler...
AngleDistanceNode	Thank you for this opportunity!\nYou just leave any angle calculation\nto the professionals!
IntegerRandomNode	Whoa! The genius programming\non display here staggers me!\nNo idea what it does, though.
MappingNode	Oooh! Which Nodon are you going\nto pair together? I must know!
QuantizationNode	Nice game. Really great.\nLike it a lot. Five stars.
TriggerNode	Shhhh...\nCan't talk. Need to focus.
SquareRootNode	Erm... Hm...\nI'm not too sure about this.
AbsoluteValueNode	Woo-hoo! If we're gonna do this,\nlet's keep things nice and positive!
NegationNode	Nothing like completely turning things\non their head! Keeps people on their toes!
FlagNode	Zzzz...
TpbCounterNode	IF AT FIRST YOU DO NOT\nSUCCEED, TRY TRY TRY TRY\nTRY TRY TRY TRY AGAIN.
WireWarpInNode	Entrance reporting!\n{[c903]}{[0201]} sighted!\nBreak time over. Over.
WireWarpOutNode	This is Exit. Repeat, Exit.\nProgramming work is\nproceeding on schedule, over.
CommentNode	Is success far off,\nOr just around the corner?\nIf you're skilled, it'll be the former.
TimerNode	Hmph. Breaks are encouraged,\nbut...the clock is ticking.
SpoitNode	My dear guest, would you kindly\nmake use of our humble markers?
TpbPlaySoundNode	Keep at it, {[0201]}!\nDoot doot!
TpbPlayBgmNode	Yeah, baby! Your skills at\nmaking games are simply the best!\nSets you apart from all the rest!
VibrateNode	No-o-o-o-o need to r-u-u-u-ush.\nLet's ta-a-a-a-ake it nice and\nslo-o-o-o-o-ow.
PlzGravityNode	This game, man...\nLet's make it lighter...
PlzPlaySpeedNode	If you can harness the power of logic\nand become the master of time itself...\nthen our future will stretch into the infinite.
PlzResetNode	Ugh... If you mess it up, you can\nalways have another try...\nLucky for you!
PlzExitNode	Linger a while in the world of\nthe game... But you will have\nto return to reality eventually!
PlzChangeFileNode	Ah... Break time over?\nTime to change up the mood.
GaugeNode	Ah yes, {[0201]}.\nJust let me know your wish.
Move2dNode	{[c903]}{[0201]}, let's keep\nthings fresh with some new challenges!
AlwaysOnNode	Hello there...umm...\n{[0201]}, was it?\nRight.
EmitIrLedNode	Hey, what are you lookin' at?\nAre you lookin' at me? Are ya?
PlzHumanNode	Oh hi, peeps!\nThings are looking\ngood, right?
PlzCarNode	I wonder what driving adventures\nawait us! Vroom vroom VROOOM!
PlzUfoNode	Wow, I can tell this game\nis going to be cosmic!
PlzRigidNode	Listen. It's important to take\na break once in a while if\nyou're getting tired.
PlzFancyRigidNode	{[c903]}{[0201]}, I just can't\nwait to see what delectably gorgeous\ngame you're going to make! ♥
PlzCommentRigidNode	What do you want to express with this game?\nTogether, we can use the power of the humble\nword to put your feelings forth.
PlzScoreRigidNode	Welcome back, {[0201]}!\nI believe in your continued success!
PlzTextureNode	I'm quivering with anticipation for\nthe unique vision you'll provide us!
PlzIntegratedEffectNode	You ready, {[0201]}?\nHow about we get ready to\nbring this one home, eh, pal?
PlzJointSingleAxisSliderNode	{[c903]}{[0201]}!\nI'm going to stick with you\nuntil the end. Don't you worry!
PlzJointSliderNode	You're back from your break a bit\nearly, aren't you? I was just getting\ncomfortable...
PlzJointHingeNode	Hey! Ready to get your\ntwirl on? Let's DANCE!
PlzRopeNode	I hope you always show some\nlove for the games you've made.\nTee-hee!
PlzTouchSensorNode	Meep! Oh, {[0201]}...\nPlease don't surprise me like that!
PlzBrokenSensorNode	{[c903]}{[0201]}! Yes!\nI have been keeping watch while\nyou were gone. Everything is safe.
PlzBreakSensorNode	Come on! More! More!\nBreak more objects!
PlzGrabSensorNode	Hah! Hup! Did it get got?\nGrabbed? Grabby grabby!
PlzPositionSensorNode	Thanks for all the hard work!\nTell me if you want to know the\nlocation of anything.
PlzSpeedSensorNode	{[c903]}{[0201]}!\nCan you make this\ngame any faster?
PlzAccelerationSensorNode	Ugh, I can't stand all this slow-and-steady\nstuff. I need that instant explosion of\nacceleration! I need some flash and pizzazz!
PlzAngleSensorNode	Keep your back nice and straight. There's\na good programmer. Perfect posture is the\nkey to making good progress!
PlzRotationSensorNode	If you want beautiful programming and\nrotations, you need a nice, stable axis to\nrotate around. So keep your axis straight!
PlzMoveRigidNode	OK, friend! You all ready for your\nworkout?! You'd better stretch \nbefore we get to work!
PlzRotateRigidNode	Ohoho! I am positive\nthis game will be a most\nelegant sight! Tralala!
PlzStretchRigidNode	Hey, boss... Wanna have a stretch of fun?\nJust leave it to yours truly. I know a few\nways we can extend the entertainment.
PlzPullForceNode	{[c903]}{[0201]}!\nLet's get to work on this game!\nYou help me, I help you!
PlzGeneratorFewNode	BLAMMO!\nGotta admit, I'm feeling pretty\ngood right now.
PlzGeneratorNode	YEAH, me and you, baby! If we work\ntogether, there's no game we can't make!\nEspecially if it's got a lot of blasting in it!
PlzGeneratorManyNode	ALL RIGHT! You won't even\nsee the action, 'cause I'm gonna\nBLAST EVERYTHING! RAAAAGH!
PlzBindCommanderNode	Well, sure, I'll destroy things.\nBut only because you're the one\nasking, hehe.
PlzObjWarpEnterNode	I offer you the power you need to\ncreate what you call "games."\nUse it wisely.
PlzObjWarpExitNode	You have found your first signpost\non the way to perfection. That is,\nyou have summoned me.
PlzEasyCamera	{[c903]}{[0201]}, darling!\nThe scene you've set out is just\nto die for! Leave the filming to me!
PlzTpsCamera	Need a camera? You're in good hands.
PlzCameraPositionNode	Yours truly determines the camera\nposition! I'm gonna capture the best\nview you've ever seen!
PlzCameraLookAtNode	Ooh, so many interesting\nthings to look at! Look here!\nAnd...oh! What's this?
PlzCameraDirectionNode	{[c903]}{[0201]}, over here!\nOver here, {[0201]}!\nBig smile! Come on! Over here!
PlzCameraViewAngleNode	If you mess with the field of view, the\nimpression of a scene totally changes.\nThis is what makes camerawork so tough...
PlzFieldConfigNode	You must walk the path you believe\nin, no matter what transpires.
PlzHeadNode	I'm trying to think about how to bring\nyour game to life... Now this is a real\nhead-scratcher...
PlzHandNode	{[c903]}{[0201]}!\nIf ever you're finding things tough,\nI'm ready to lend a hand!
PuzzleName.msbt
ButtonAndHuman	Make the Person Jump
StickAndHuman	Move the Person with the Control Stick
EasyCamera	Framing with the Game-Screen Nodon
Attribute	Properties of Objects
Attribute01	Invisible Objects
Shoot	The Rowdy Launch-Object Nodon
MovableRigid	Moving A Movable Object
Calc	The Calculator Decides
Counter	Counting Counters
Compare	Comparisons
Warp	Teleporting Etiquette
UFO	Hey! UFO!
Joint	Connect to Build Shapes
DetailAttribute	Making the Person Unbreakable
Not	Stopping with NOT
And	The Meaning of AND
Hinge	Making a Sloping Road
Slider	Just the Right Range
Flag	Waking up the Flag Nodon
Punch	Power in Your Punch
Position	Your Position
Camera	Framing the Action
FreeJoint00	Manipulating Objects
FreeJoint01	Gravity's Optional
TriplePunch	Destroying with Three Punches
TriplePunch01	Platform Durability
Car	Accelerate and Reverse
FancyLabel	Drawing Distinctions
WinOrLose	Judging the Victor
Start	No-Fly Zone
AutoDrive	Self-Driving Car
RopeWalk	High-Wire Act
HangedApple	Non-Newtonian Apple
LightInDark	A Light in the Dark
Command	Secret Commands
PinBall	Pinball Paradise
Or	Two-Pronged Attack!
NotInt	Naughty NOTy
AndInt	A Helping AND
MultiWire	Popular Ports of Call
SignConvert	+ or -
AutoDoor	Open the Door
Material	Material Difference
JointAxis	One Step at a Time
ConnectDir	Directional Dilemma
RandomBox	Rate of 0.1%
AntiGravityApple	Newtonian Apples
Replusion	Repulsion
RotateXYZ	Rotation Stations
TeamCamera	The Photography Unit
WarpShield	Sub-Space Reversal Shield
MoveTouchPos	Get to the\nTouch Position!
AutoBind	Watch Your Step!
Passcode	Cracking the Code
OverSpeed_01	Swiftly then Slowly
HatenaBox	? Block
UfoCatcher	UFO Catching
PhaseShift	Phase Shift
LinkedGear	Gears to the Left\nGears to the Right
AnalogClock	Three O'Clock Snack
FreeJoint_Ex	Apple Delivery
StepGenerator	Beyond the Wall
ShootCursor	Shoot 'Em Up\nSensation
ScreenEdge	Post-Screen Sub-Space
Invisible	Apple Excavation
Kedamaru	Fluffy Friend
KickBall	Shoot!
DoubleControl	I'm Left, You're Down Below
BecomeSmall	A Size or Two Smaller
ChargePunch	Power Punch!
Fireworks	Firework Show
MushButton	Ten-Second Challenge
PhantomApple	Phantom Apple
GhostWarp	Haunted House
Logic	Logical Labyrinth
BadMaze	The Barriers to Success\nAre All in Your Mind
GimmickSlope	Run the Gimmick Gauntlet
TimerBridge_00	Stepping Across
TimerBridge_01	Stepping Across: Hard
IntroAgain	Get the Apple!
PuzzleClear	Perplexing Paradox
Puzzle_Camera.msbt
000	There's a little something\nextra to go with this problem.
001	Can you go to the program screen?
002	You can switch the\nviewpoint in this problem.
003	Make good use of it\nto finish the puzzle!
Puzzle_Common.msbt
Hint000	Looks like you're having trouble.
Hint001	Do you want to exit the puzzle for a\nmoment and review my guide?
Hint002	Yes
Hint003	No
Hint004	OK, off to Alice's Guide we go.
Hint005	You want to beat the puzzle\nby yourself, without any help?\nThat's the spirit! Hold on to that.
Hint006	But just know you can always check\nAlice's Guide by pausing with .
Hint007	It's there for you to use,\nif you change your mind.
Puzzle_Intro.msbt
000	{[c903]}{[0201]}!\nWelcome to the {[0001|1a00]}{color[0400]}puzzles{color[ffff]}{[0001|ffff]}!
001	Here's where I'll be putting you through your\npaces with some puzzles to make sure you've\ngrasped the basics of Game Builder Garage.
002	To clear the puzzle, you need to\nmake the person {[0001|1a00]}{color[0400]}collect the apple{color[ffff]}{[0001|ffff]}.
003	How are you going\nto get it? I wonder...
004	As things are, there's nothing \nyou can do to make the person\nmove...
005	You'll need to make a change if\nyou want to get that apple!
006	In fact, you'll need to do some\n{[0001|1a00]}{color[0400]}programming{color[ffff]}{[0001|ffff]}, all by yourself.
007	OK, go to the {[0001|1a00]}{color[0400]}program screen{color[ffff]}{[0001|ffff]}...
008	Keep in mind, you can't just edit\nwhatever you feel like in the puzzles.
009	The only way you're permitted to solve\nthis particular problem is by {[0001|1a00]}{color[0400]}connecting\n{color[ffff]}{[0001|ffff]}the {[0001|1a00]}{color[0400]}Button Nodon{color[ffff]}{[0001|ffff]} and the {[0001|1a00]}{color[0400]}Person Nodon{color[ffff]}{[0001|ffff]}.
010	So, how do you think you can\nhelp the person get the apple?
011	When you think you've made the\nnecessary change, head over to\nthe {[0001|1a00]}{color[0400]}game screen{color[ffff]}{[0001|ffff]} to test it out.
012	If it doesn't work, just head\nback to the program screen\nand try again.
013	OK!\nGive it your best shot.
Puzzle_MovableRigid.msbt
Puzzle_MoveTouchPos.msbt
000	There's a little bit more\nto this problem.
001	Try tapping the screen!
002	The orange cylinder moves\nto the {[0001|1a00]}{color[0400]}location you touch{color[ffff]}{[0001|ffff]}!
003	Push down on , and the motion-control\npointer appears... Then press .
004	The orange cylinder moves to the\n{[0001|1a00]}{color[0400]}motion-control pointer's location{color[ffff]}{[0001|ffff]}!
005	Push down on , and the motion-control\npointer appears. Then press .
006	The orange cylinder moves to the\n{[0001|1a00]}{color[0400]}motion-control pointer's location{color[ffff]}{[0001|ffff]}!
007	Try clicking somewhere\nwith the mouse.
008	The orange cylinder moves\nto the {[0001|1a00]}{color[0400]}location of the click{color[ffff]}{[0001|ffff]}!
009	Push down on , and the motion-control\npointer appears. Then press .
010	The orange cylinder moves to the\n{[0001|1a00]}{color[0400]}motion-control pointer's location{color[ffff]}{[0001|ffff]}!
011	The Person is facing toward\nthe upper right at the moment.
012	Now fix this so that you can control the\nPerson properly and finish the puzzle!
Puzzle_StickAndHuman.msbt
000000	Maybe you forgot what you were\nsupposed to do, so allow me to\nexplain the {[0001|1a00]}{color[0400]}puzzle{color[ffff]}{[0001|ffff]} again!
000	The puzzle is solved when\n{[0001|1a00]}{color[0400]}the person collects the apple{color[ffff]}{[0001|ffff]}.
001	To make it so that the person can collect\nthe apple, you'll need to work your {[0001|1a00]}{color[0400]}programming{color[ffff]}{[0001|ffff]}\nmagic on the program screen.
001-01	However, you can't just program\nwilly-nilly in this puzzle. Your actions\nare {[0001|1a00]}{color[0400]}limited{color[ffff]}{[0001|ffff]}.
002	To solve this puzzle, you'll have to add\na connection between the {[0001|1a00]}{color[0400]}Stick Nodon\n{color[ffff]}{[0001|ffff]}and the {[0001|1a00]}{color[0400]}Person Nodon{color[ffff]}{[0001|ffff]} somehow.
002-01	You'll be fine! Just pay attention\nto {[0001|1a00]}{color[0400]}what the Nodon are thinking{color[ffff]}{[0001|ffff]}, and\nyou'll figure it out.
003	OK! Now do you best to clear all\nfive of the puzzles. I'm sure you'll\nbe great.
Sequence_CourseFinish.msbt
000	You finished the interactive lessons!\nGreat work!
001	You've actually completed\nall of the lessons now.
002	Good job seeing it through.
002-01	You've learned more than enough\nto make your own games from\nscratch now, {[0201]}.
003	This isn't the end though. Far from it!
004	It's only the first step in\nyour {[0001|1a00]}{color[0400]}programming {color[ffff]}{[0001|ffff]}journey.
005	From now on, all the programming and\ngame design you do will be 100 percent\nyour genius, your brilliance, your success.
006	{[c903]}{[0201]}, I think a whole new\nworld of game building and creativity\nis about to open up to you!
007	I can't wait to see what\nyou have to show us!
008	OK!\nLet the programming begin!
Sequence_Intro_Course_00.msbt
000	We'll be making seven games\nin these interactive lessons.
001	In the first lesson, we'll make\n{[0001|1a00]}{color[0400]}Tag Showdown{color[ffff]}{[0001|ffff]}, which is just\na simple game of tag.
002	Next, we'll use some unique\nfeatures of the Nintendo Switch\nconsole in {[0001|1a00]}{color[0400]}On a Roll{color[ffff]}{[0001|ffff]}!
003	Lesson 3 is the autoscrolling\nblaster game {[0001|1a00]}{color[0400]}Alien Blaster{color[ffff]}{[0001|ffff]}!
004	In the game for the fourth lesson,\nwe'll run, jump, and punch our way\nto the goal in {[0001|1a00]}{color[0400]}Risky Run{color[ffff]}{[0001|ffff]}!
005	The fifth lesson is a game called\n{[0001|1a00]}{color[0400]}Mystery Room{color[ffff]}{[0001|ffff]}, and we'll be solving\nthree-dimensional puzzles!
006	For the sixth lesson we'll make a\ncomputer-controlled car to race against,\nin the white-knuckle {[0001|1a00]}{color[0400]}Thrill Racer{color[ffff]}{[0001|ffff]}!
007	And last but not least, in Lesson 7\nwe'll make the 3D action game\n{[0001|1a00]}{color[0400]}Super Person World{color[ffff]}{[0001|ffff]}!
008	By learning to program games\nlike the ones I just mentioned...
009	you'll learn the skills to make\nyour very own games!
010	OK then! I'll be waiting\nfor you in the first lesson.
011	Be sure to pay a visit!
012	I've been the ever-knowledgeable\nBob! See you later!
100	{[c903]}{[0201]}?\nHang on a sec.
101	My name's {[0001|1a00]}{color[0400]}Alice{color[ffff]}{[0001|ffff]}.
102	So, not {[0001|1a00]}{color[0400]}Bob{color[ffff]}{[0001|ffff]}. He's the excitable one you\nalready met. I look similar, but I'm {[0001|1a00]}{color[0400]}Alice{color[ffff]}{[0001|ffff]}.\nHow do you do?
103	Please don't forget or call me\nBob or anything like that.
104	So, {[0201]}...\nYou know how you got that\ngame to work just now?
105	Be honest... You don't really\nget what made it work, right?
106	I mean, that's totally fine.\nYou've just started with\nall of this stuff.
107	But you know, if you're going to make\nyour own game, you'll need to {[0001|1a00]}{color[0400]}understand\nwhich mechanisms do what{color[ffff]}{[0001|ffff]}.
108	That's why I've set up some\n{[0001|1a00]}{color[0400]}Checkpoints{color[ffff]}{[0001|ffff]} to help you.
109	I'd like you to come to the\n{[0001|1a00]}{color[0400]}Checkpoint {color[ffff]}{[0001|ffff]}before Lesson 1.
110	I'll be waiting!
Sequence_Intro_Puzzle_00.msbt
000	Thanks for stopping by,\n{[0201]}!
001	Just in case you forgot, I'm {[0001|1a00]}{color[0400]}Alice{color[ffff]}{[0001|ffff]}.
001-01	And this here is a {[0001|1a00]}{color[0400]}Checkpoint{color[ffff]}{[0001|ffff]}.
002	The idea here is to test {[0001|1a00]}{color[0400]}whether you\nreally know{color[ffff]}{[0001|ffff]} your programming stuff.\nAnd how do we test? With a {[0001|1a00]}{color[0400]}puzzle{color[ffff]}{[0001|ffff]}!
003	Maybe this is a bit sudden, throwing\na puzzle at you and expecting you to\nsolve it...but let's see how it goes.
Sequence_Intro_Puzzle_01.msbt
000	I've something for you\nthat I think will help...\nYour very own {[0001|1a00]}{color[0400]}Alice's Guide{color[ffff]}{[0001|ffff]}!
000-01	This will give you further tips on\nhow to use Nodon to make games.
001	Can you select this here?\nIt'll open up the {[0001|1a00]}{color[0400]}Alice's Guide list{color[ffff]}{[0001|ffff]}.
002	Why not use it to learn the\n{[0001|1a00]}{color[0400]}basics of Game Builder Garage{color[ffff]}{[0001|ffff]}?
Sequence_Intro_Puzzle_02.msbt
000000	Did you get the hang of the\n{[0001|1a00]}{color[0400]}Game Builder Garage basics{color[ffff]}{[0001|ffff]}?
000	Then could you press \nto close the Alice's Guide list?
001	Now I'm going to test your\n{[0001|1a00]}{color[0400]}knowledge of the basics{color[ffff]}{[0001|ffff]}\nwith a {[0001|1a00]}{color[0400]}puzzle challenge{color[ffff]}{[0001|ffff]}!
003	Go here to try your hand\nat a {[0001|1a00]}{color[0400]}puzzle challenge{color[ffff]}{[0001|ffff]}!
Sequence_Intro_Puzzle_03.msbt
000	Awesome! Looks like you\ndefinitely have the basics of\nGame Builder Garage down.
001	From now on, I'll be testing\nhow well you know {[0001|1a00]}{color[0400]}Game Builder\nGarage{color[ffff]}{[0001|ffff]} and the {[0001|1a00]}{color[0400]}Nodon{color[ffff]}{[0001|ffff]}.
002	So between each lesson I'll\ntest you with some {[0001|1a00]}{color[0400]}checkpoints{color[ffff]}{[0001|ffff]}.
003	I'll also be adding things to my\nguide every now and then.\n(That's {[0001|1a00]}{color[0400]}Alice's Guide{color[ffff]}{[0001|ffff]} to you.)
004	So if there's anything\nthat's not clear, feel free to\nhit up {[0001|1a00]}{color[0400]}Alice's Guide{color[ffff]}{[0001|ffff]}.
005	Now there's nothing holding you\nback, so let's get to {[0001|1a00]}{color[0400]}Lesson 1{color[ffff]}{[0001|ffff]}!
Sequence_LessonFinish_01.msbt
000	Congratulations on {[0001|1a00]}{color[0400]}going gold{color[ffff]}{[0001|ffff]}\nwith Tag Showdown!
001	When a game is finally finished, we say\nit's {[0001|1a00]}{color[0400]}gone gold{color[ffff]}{[0001|ffff]}. It really gives you that\nfeeling of accomplishment and completion.
002	Going gold for the first time is a momentous\noccasion! Let's keep it for posterity by adding\nyour game to the {[0001|1a00]}{color[0400]}My Games{color[ffff]}{[0001|ffff]} list!
Sequence_LessonFinish_02.msbt
000	Good work on getting On a Roll\nto {[0001|1a00]}{color[0400]}gold{color[ffff]}{[0001|ffff]}! Congratulations!
000-01	That's your second one now!\nI must say, you're moving through\nthe lessons at a great pace here.
001	All righty!\nLet's add On a Roll\nto the My Games list!
Sequence_LessonFinish_03.msbt
000	Congratulations!\nAlien Blaster has safely\n{[0001|1a00]}{color[0400]}gone gold{color[ffff]}{[0001|ffff]}, thanks to you!
001	Bit by bit, you're really getting\nthe hang of this programming\nthing, aren't you?
002	You're working on a\ngood variety of games.\nAnd that's important.
003	All righty, {[0201]}!\nLet's add your third game to\nthe My Games list!
Sequence_LessonFinish_04.msbt
000	Risky Run has {[0001|1a00]}{color[0400]}gone gold{color[ffff]}{[0001|ffff]}!\nGreat work!
001	You've really made a dent in\nthe interactive lessons now.\nYou're more than halfway through!
002	Gotta say, {[0201]}, you're\nreally surpassing expectations here.\nEveryone's amazed at your progress.
003	Try and keep up this pace\nfor the second half, and you'll\nbe... Well, you'll be golden!
004	All righty! Let's add Risky Run\nto the My Games list!
Sequence_LessonFinish_05.msbt
000	And Mystery Room has {[0001|1a00]}{color[0400]}gone\ngold{color[ffff]}{[0001|ffff]} without a hitch!
001	That was a challenging\nlesson, but you battled\nthrough to the end.
002	Your progress is amazing,\n{[0201]}.\nIt's almost mystifying!
003	Let's add the completed game\nto the My Games list.
Sequence_LessonFinish_06.msbt
000	Congratulations on getting\nThrill Racer to {[0001|1a00]}{color[0400]}gold{color[ffff]}{[0001|ffff]}!
001	Great job making it this far.
003	Y'know, I thought you had a gift for this\nkind of thing right from the get-go, and\nyou're proving it now.
004	All righty!\nLet's add the completed game\nto the My Games list!
Sequence_LessonFinish_07.msbt
000	{[c903]}{[0201]}! Your game's\ngone gold! Amazing work!
000-01	Nice one, {[0201]}!\nYour game's gone gold!
001	At last! A game that's 100%\n{[0201]}-designed.
002	Wonderful work,\n{[0201]}.
003	So...back to practical matters.\nSince you've finished this game,\nguess what we'll do with it.
004	We'll add it to the\nMy Games list!
Sequence_LessonReFinish.msbt
000	OK!\nLet's add the game to\nthe My Games list!
Sequence_MyGameRe.msbt
Lesson01	Is it OK to overwrite your game\n{[0001|1a00]}{color[0400]}Tag Showdown{color[ffff]}{[0001|ffff]}?
Lesson02	Is it OK to overwrite your game\n{[0001|1a00]}{color[0400]}On a Roll{color[ffff]}{[0001|ffff]}?
Lesson03	Is it OK to overwrite your game\n{[0001|1a00]}{color[0400]}Alien Blaster{color[ffff]}{[0001|ffff]}?
Lesson04	Is it OK to overwrite your game\n{[0001|1a00]}{color[0400]}Risky Run{color[ffff]}{[0001|ffff]}?
Lesson05	Is it OK to overwrite your game\n{[0001|1a00]}{color[0400]}Mystery Room{color[ffff]}{[0001|ffff]}?
Lesson06	Is it OK to overwrite your game\n{[0001|1a00]}{color[0400]}Thrill Racer{color[ffff]}{[0001|ffff]}?
001	Yes
002	No
003	OK! Let's overwrite it with\nyour new game then.
004	Got it!\nI'll leave the old game as it is then.
005	You've gone to the trouble of\nremaking this, so be sure to\ncome back and play it some time!
Sequence_MyGameRe_07.msbt
000	Are you sure you want to\noverwrite the game that you\nmade in Lesson 7?
001	Yes
002	No
003	OK!\nI'll replace it with the\nnew game then.
004	Give your new game a name.
005	Press  and open up\nthe {[0001|1a00]}{color[0400]}options{color[ffff]}{[0001|ffff]}.
006	Then select {[0001|1a00]}{color[0400]}Edit game title{color[ffff]}{[0001|ffff]} and\ngive your game a name.
007	Is this title OK?
008	Yes
009	No
010	Press  to close this screen.
011	Select {[0001|1a00]}{color[0400]}Edit game title{color[ffff]}{[0001|ffff]} again to\ngive it a different name.
012	Oh! That's a really great title...
013	Right? Really has that\n{[0201]} flair,\ndon't you think?
014	Be sure to show your new\ngame to lots of people, OK,\n{[0201]}?
015	I thought so! It's tough to\nsay goodbye to your old game.
016	If that's the case, you should make\na copy from the options menu.
017	If you do that, you can overwrite this\nslot without losing the old game.
018	If you return to Step 7 of Lesson 7\nof that game that you created earlier...
019	it'll still be there!
020	Once you're OK to overwrite this slot,\ncome to Step 7 in Lesson 7.
021	Looking forward to seeing you there!
Sequence_MyGame_01.msbt
000	Ah, so this is the game you\nmade, {[0201]}!
001	Now you'll be able to\ngo back and play it\nanytime you want!
002	Oh... I guess you're probably\na little curious about this place.
003	Well... This is the\nFree Programming\nmode's {[0001|1a00]}{color[0400]}My Games{color[ffff]}{[0001|ffff]} list.
004	Put simply, this is where we'll\nstore the games that you build\nfrom scratch, {[0201]}.
005	Just as the name\n{[0001|1a00]}{color[0400]}Free Programming{color[ffff]}{[0001|ffff]} suggests...
006	when you press this button, you'll start\n{[0001|1a00]}{color[0400]}programming{color[ffff]}{[0001|ffff]} from the ground up. You'll\n{[0001|1a00]}{color[0400]}start with an empty environment{color[ffff]}{[0001|ffff]}!
007	Of course, you've just gotten\nstarted with your programming\njourney, {[0201]}.
008	So don't worry if sometimes\nthings don't turn out exactly\nthe way you imagine.
009	It's a day to remember!\nYour very first game is\navailable to play!
010	Why not ramp up the fun\nby letting friends play the\ngame you made?
011	When you've had your fill of playing\nthat, let's get back on track with\n{[0001|1a00]}{color[0400]}Lesson 2{color[ffff]}{[0001|ffff]} of the {[0001|1a00]}{color[0400]}interactive lessons{color[ffff]}{[0001|ffff]}.
012	See you in the next lesson!
Sequence_MyGame_02.msbt
000	OK, so you added {[0001|1a00]}{color[0400]}On a Roll\n{color[ffff]}{[0001|ffff]}to the My Games list.
001	It's a game that uses the Nintendo Switch\nconsole's features to the max!
002	Why not ask a few of your\nfriends to play it and tell\nyou what they think?
003	Feedback is a really important\npart of the game design process,\nyou know.
004	All righty!\nSee you at Lesson 3!
005	Don't miss it!
Sequence_MyGame_03.msbt
000	Alien Blaster's a fun high-score\nchallenge, right?
001	But best of all, you can see\nyour work really coming to life!
002	Anyhow, just consider sharing\nyour game with friends!
003	I'm thinking they'll have a\nblast with it too!
004	The next lesson is the halfway\npoint in the interactive lessons.\nIt's going by fast, isn't it?
005	OK, see you in Lesson 4!
100	Oh, {[0201]}...\nHold on a sec.
101	There's something I should\nlet you know about first.
102	The games that you made in the lessons...\nHave you ever thought about making them\n{[0001|1a00]}{color[0400]}even better{color[ffff]}{[0001|ffff]}?
103	Well, if you do want to improve them,\nopen up the {[0001|1a00]}{color[0400]}Options{color[ffff]}{[0001|ffff]} with {color[0400]}{[0001|1a00]}{[0001|ffff]}{color[ffff]}.
104	If you select {[0001|1a00]}{color[0400]}Copy{color[ffff]}{[0001|ffff]} here, you'll\nbe able to {[0001|1a00]}{color[0400]}copy the game{color[ffff]}{[0001|ffff]}.
106	If you're working with a copy, you can\nmake whatever changes you want, so\ngive it a try!
107	Well, anyway, it's all up to you!
Sequence_MyGame_04.msbt
000	You've got quite a few completed\ngames under your belt now,\n{[0201]}.
001	It might be fun to go back and play\nsome of these games again!
002	As usual, why not get some of\nthe folks you know to try out\nyour new game?
003	Well, see you in Lesson 5!
Sequence_MyGame_05.msbt
000	Maybe you could see if you can\nget someone else to test out the\nMystery Room game!
001	It would be fun to get a reaction\nfrom someone who hasn't seen all\nthe secrets in the design process!
002	Watch their face when they\ndiscover the treasure you\ncrafted and hid so well.
003	OK, see you in Lesson 6!\nLooking forward to it!
004	We're almost done with\nthe interactive lessons now.\nJust hang in there a little bit longer!
Sequence_MyGame_06.msbt
000	Now you've completed Thrill Racer, maybe\nyou could see if you can get some of your\nfriends to try it out!
001	Don't tell them about the secret though!\nLet them figure it out for themselves...
002	All righty! The next lesson\nwill be the final one!
003	It's the very last time we'll\nbe collaborating in an interactive\nlesson, so be sure to savor it.
004	OK! I'll go and wait\nfor you in Lesson 7.\nSee you there!
005	Head on over when you're\ndone playing Thrill Racer!
Sequence_MyGame_07.msbt
000	Wow!\nThis is your very own,\n{[0201]}-built game.
001	Yep! And since you worked so hard\non it, you'd better give it a {[0001|1a00]}{color[0400]}title{color[ffff]}{[0001|ffff]}.
002	She's right!
003	Press {color[0400]}{[0001|1a00]} {[0001|ffff]}{color[ffff]}to open\nup the options.
004	Then select {[0001|1a00]}{color[0400]}Edit game title{color[ffff]}{[0001|ffff]} and\nenter a title for your game!
005	Is this title OK?
yes	Yes
no	No
006	Press  to close this screen.
006b	Select {[0001|1a00]}{color[0400]}Edit game title{color[ffff]}{[0001|ffff]} again and give\nyour game another title.
007	Yes! That title has so much\n{[0201]} style!
008	It really is a great title. It fits with the\ngame's content very well, I'd say.
009	All righty... This game is one that\nyou made 100 percent under your\nown steam, {[0201]}.
010	Maybe you could have your friends play\nit and tell you what they think?
011	Hearing other opinions is\na really important part of\nprogramming, you know!
012	We'll be waiting for you\nover by the interactive lessons.
013	Come find us when you're\ndone playing your new game,\nOK?
014	See you soon!
Sequence_PuzzleFinish_01.msbt
000	Looks like your knowledge of\nour Nodon friends is really\ncoming along.
001	If you're going to be programming\ngames in Game Builder Garage...
002	then it's really important to\nhave a good understanding of\nthe Nodon and how they work.
004	All those Nodon...those funny\nlittle things living inside the\nNintendo Switch console...
006	You could say that Game Builder\nGarage is a tool used to wield\nthe Nodon to write programs.
008	So please use {[0001|1a00]}{color[0400]}Alice's Guide\n{color[ffff]}{[0001|ffff]}and the {[0001|1a00]}{color[0400]}puzzles {color[ffff]}{[0001|ffff]}to learn how to\nwield them properly.
010	OK, see you later.
Sequence_PuzzleFinish_02.msbt
000	Nice! I can see that you have\na deep understanding of how\nall the pieces work.
001	In programming, it's crucial to know\nhow to stop and take a look at\nwhat's actually happening.
004	I hope you can keep building\nyour understanding with\nmy guide and the puzzles.
005	OK then... To the next\ncheckpoint! See you there!
Sequence_PuzzleFinish_03.msbt
000	{[c903]}{[0201]}, you're really\nstarting to know your way around the\nGame Builder Garage.
001	In fact, I think you could try your\nhand at improving games.
002	Sometimes programming is tricky,\nand you might get some bugs\nsneaking into your work.
003	But that's OK! Challenges help you\nlearn, and bugs are just another step\nto helping you get better.
004	Even complete failure can lead\nto huge improvements!
005	If there's anything you're\nnot sure of, just take a look\nin {[0001|1a00]}{color[0400]}Alice's Guide{color[ffff]}{[0001|ffff]}.
006	Okey-dokey! See you\nat the next checkpoint!
Sequence_PuzzleFinish_04.msbt
000	{[c903]}{[0201]}...\nThat. Was. Awesome!
001	You're getting better at this whole\nGame Builder Garage business.
002	At this rate, you just might be\nable to do some programming\non your own!
005	Keep working hard at this\nuntil it's a part of you.
006	I'll be waiting for you at\nthe next checkpoint. See ya!
Sequence_PuzzleFinish_05.msbt
000	That was really something.
001	You've managed to clear\nall these puzzles too.
002	I just can't believe\nhow far you've come,\n{[0201]}!
004	Just...wow!
005	Whew! OK, I've regained my composure.\nI'll see you at the next checkpoint.
Sequence_PuzzleFinish_06.msbt
000	Well done finishing that!
001	It's safe to say you know\nyour way around the\nGame Builder Garage.
002	I think you're ready to do some\ngame programming on your own.
003	...
004	So, um...\n{[0201]}...
005	Next up is your last\nlesson with Bob, right?
006	It's a big deal. I'm kind of thinking\nI might want to make an appearance.
007	So...see you in the final lesson!
Sequence_PuzzleFinish_07.msbt
000	I can't believe it...\nYou've solved everything!
001	I doubt there are any challenges left\nthat you couldn't steamroll over with\nyour awesome programming skills.
004	You're really starting to look the\npart of the programmer now!
005	The programmer vibes are just\nradiating right out of you!
002	OK, {[0201]}!\nTime for you to go forth and make games—\nthe games that only you can make!
003	Thanks for sticking\naround this far! 
Sequence_PuzzleStart_01.msbt
000	Hello!
001	Looks like you've completed\nthe first lesson! Great work!
002	Hold on... You didn't forget\nabout my checkpoints, did you?
003	Checkpoints are where we'll test\nif you've really understood how to\nuse the Nodon properly.
004	You'll have to solve a Nodon-based\npuzzle to proceed.
004-01	There'll be five puzzles\nfor you to solve.
005	Let's start with this puzzle, OK?
Sequence_PuzzleStart_02.msbt
000	Hey, {[0201]}!
001	OK! Time to make sure you've properly\ngrasped the functions of the Nodon in\nthe Game Builder Garage.
002	Let's test what you've\nlearned with some puzzles.
002-01	If you get stuck on a puzzle, I'd suggest\nlooking back at my super-helpful\n{[0001|1a00]}{color[0400]}Alice's Guide{color[ffff]}{[0001|ffff]} to help you figure it out, OK?
003	All right! Go ahead and start\nfrom whichever puzzle you want.
Sequence_PuzzleStart_03.msbt
000	I've been waiting for you,\n{[0201]}.
001	Have you tried improving\nany of the games yet?
002	Coming up with new ideas and trying\nthem out is a really important part\nof game building, you know.
003	You might need to apply a bit of\nthat problem-solving spirit to battle\nthrough these puzzles here too!
Sequence_PuzzleStart_04.msbt
000	Welcome back,\n{[0201]}!
001	So we're halfway through our\ncheckpoints now too.
002	Let's get our brains in gear\nand tackle some puzzles!
Sequence_PuzzleStart_05.msbt
000	You've been doing some\ngreat work, {[0201]}.
001	Maybe the last game was\neven harder than the others?
001-01	Well...\nI've prepared some extra-hard\npuzzles to keep the tension up!
002	If you get through these, you'll\nreally demonstrate your mettle\nas a programmer.
003	Good luck!
Sequence_PuzzleStart_06.msbt
000	Hey, {[0201]}!
001	You've tackled quite a few\nof these checkpoints by now,\n{[0201]}.
002	In fact, this is the last one...
003	Get ready for your final\ncheckpoint challenge!
Sequence_PuzzleStart_07.msbt
000	Hello hello!
001	The lessons are over, but are\nthe checkpoints? ...No!
002	Since you've managed to blast through\nall the lessons, I've cooked up something\nspecial to challenge you!
003	Yes, I've made some really knotty\nproblems for you to untangle\nthis time...
004	So get going!
007	Good luck!
Sequence_Share_Download.msbt
00	There you are, {[0201]}!
01	Right here is the place where you can {[0001|1a00]}{color[0400]}receive\n{color[ffff]}{[0001|ffff]}games that other players have made!
02	If you select this, you'll be able to receive\ngames that {[0001|1a00]}{color[0400]}nearby players {color[ffff]}{[0001|ffff]}have made available.
03	If you have a Nintendo Switch Online membership,\nyou'll be able to receive games that other users\nhave made available {[0001|1a00]}{color[0400]}online{color[ffff]}{[0001|ffff]}!
04	When you're receiving games from online, you'll\nneed to enter the {[0001|1a00]}{color[0400]}Game ID{color[ffff]}{[0001|ffff]} or {[0001|1a00]}{color[0400]}Programmer ID{color[ffff]}{[0001|ffff]}\nof the person who shared it.
05	Just in case, if you receive a game that seems\ninappropriate in some way, you can report it\nwith the {[0001|1a00]}{color[0400]}report button{color[ffff]}{[0001|ffff]}!
06	Bye for now!
Sequence_Share_Manage.msbt
Sequence_Share_Report.msbt
Sequence_Share_Upload.msbt
00	Hey, {[0201]}!
01	You've made your way to the place\nwhere you'll be able to {[0001|1a00]}{color[0400]}share{color[ffff]}{[0001|ffff]} the\n{[0001|1a00]}{color[0400]}games you've created{color[ffff]}{[0001|ffff]}!
02	If you select this, you'll be able\nto share your own game creations\nwith {[0001|1a00]}{color[0400]}nearby players{color[ffff]}{[0001|ffff]}.
03	Also, if you have a Nintendo Switch Online\nmembership, you'll be able to share your\ngame {[0001|1a00]}{color[0400]}online{color[ffff]}{[0001|ffff]}.
04	If you tell other players the {[0001|1a00]}{color[0400]}Game ID{color[ffff]}{[0001|ffff]} of\nyour game when you share it, they'll be\nable to use it to {[0001|1a00]}{color[0400]}receive{color[ffff]}{[0001|ffff]} your game.
05	But...please bear in mind the following\npoints when you're sharing your game:
0501	Actually, you should read this next part\n{[0001|1a00]}{color[0400]}with a parent/guardian or an adult{color[ffff]}{[0001|ffff]}.
0502	It's important stuff, so you need to\nmake sure that you understand it!
06	OK... First...
07	When you share your game online,\nthe {[0001|1a00]}{color[0400]}game title{color[ffff]}{[0001|ffff]} and your {[0001|1a00]}{color[0400]}user name{color[ffff]}{[0001|ffff]} will\nbe made public to the whole world.
08	Second...
09	Please don't share any\ngames that have any kind\nof {[0001|1a00]}{color[0400]}inappropriate content{color[ffff]}{[0001|ffff]}, OK?
10	For example, illegal content, personal information,\nor content that violates the rights of others\nwould be considered inappropriate.
11	Also, games with fast flashing lights or\ngames that might make people uncomfortable\nare inappropriate too. So don't share them!
12	And third...
13	Games that have inappropriate content like that,\nor games that violate the Nintendo Account\nUser Agreement in other ways will be {[0001|1a00]}{color[0400]}deleted{color[ffff]}{[0001|ffff]}.
14	And last but not least...
15	If games {[0001|1a00]}{color[0400]}aren't imported\nby anyone{color[ffff]}{[0001|ffff]} for one year,\nthey will be {[0001|1a00]}{color[0400]}deleted{color[ffff]}{[0001|ffff]}.
16	OK... So do you understand what\nyou need to be careful about?
17	Yes
18	No
19	OK! Then allow me to explain the\npoints to be aware of when sharing\ngames one more time.
20	OK, great! Looks like you've\ngot the hang of it.
21	You'll be able to view or delete\nthe games you share here.
22	OK! See you later!
StepName.msbt
Chase_00	Adding Player Controls
Chase_01	Making the Floor and Walls
Chase_02	Making Platforms
Chase_03	Making the Tagger
Chase_04	Unleashing the Balls
Chase_05	Automatic Retry
Chase_06	Finishing Touches
BallRoll_00	Using the Overhead View
BallRoll_01	Slanting Spheres
BallRoll_02	Improving the Level
BallRoll_03	Counting Apples
BallRoll_04	Setting a Win Condition
BallRoll_05	User-Friendly Experience
BallRoll_06	Teleporting
BallRoll_07	Finishing Touches
Shooting_00	Unidentified Firing Object
Shooting_01	Cannon Calibrations
Shooting_02	Building the Level
Shooting_03	Scrolling the Game Screen
Shooting_04	Controlling the Scrolling
Shooting_05	Spinning Obstacles
Shooting_06	Spinning Enemies
Shooting_07	Making a Goal
Shooting_08	Score Display and\nPerfect Score
Shooting_09	Finishing Touches
2DAction_00	Tracking the Player\nwith the Camera
2DAction_01	Know (and Create)\nYour Enemy
2DAction_02	Making Plummets Perilous
2DAction_03	Making a Seesaw
2DAction_04	Making a Movable Box
2DAction_05	Making a Moving Platform
2DAction_06	Making Power-Ups\nfrom Items
2DAction_07	Making a Boss
2DAction_08	Making a Goal
2DAction_09	Finishing Touches
SecretRoom_00	Peeking into 3 Dimensions
SecretRoom_01	The Treasure Room
SecretRoom_02	Hidden Doors and\nMysterious Contraptions
SecretRoom_03	Breaking Open the Box
SecretRoom_04	The Secret Code
SecretRoom_05	The Walls Have Secrets
SecretRoom_06	Opening the Hidden Door
SecretRoom_07	Adding Sound Effects
SecretRoom_08	The Hidden Treasure
CarRace_00	Your First Wheels
CarRace_01	The Finish Line
CarRace_02	Finding the Winner
CarRace_03	Making the Racecourse
CarRace_04	Autonomous Auto
CarRace_05	3! 2! 1! Go!
CarRace_06	Crafty Teleporting
CarRace_07	Finishing Touches
3DAction_00	Adding Player Controls\n(Reprise)
3DAction_01	Making Plummets Perilous\n(Reprise)
3DAction_02	The First Gimmick
3DAction_03	Stage Gimmick: Switch
3DAction_04	Adding an Enemy
3DAction_05	Making a Goal
3DAction_06	The First Step in the\nJourney
